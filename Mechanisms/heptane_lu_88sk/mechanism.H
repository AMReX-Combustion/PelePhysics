#ifndef MECHANISM_H
#define MECHANISM_H

#include <AMReX_Gpu.H>
#include <AMReX_REAL.H>

/* Elements
0  H
1  C
2  O
3  N
*/

// Species
#define h_ID 0
#define h2_ID 1
#define o_ID 2
#define o2_ID 3
#define oh_ID 4
#define h2o_ID 5
#define co_ID 6
#define hco_ID 7
#define co2_ID 8
#define ch3_ID 9
#define ch4_ID 10
#define ho2_ID 11
#define h2o2_ID 12
#define ch2o_ID 13
#define ch3o_ID 14
#define c2h6_ID 15
#define c2h4_ID 16
#define c2h5_ID 17
#define c2h2_ID 18
#define c2h3_ID 19
#define ch2co_ID 20
#define hcco_ID 21
#define ch3co_ID 22
#define ch2cho_ID 23
#define ch3cho_ID 24
#define c3h4a_ID 25
#define c3h6_ID 26
#define c4h6_ID 27
#define nc3h7_ID 28
#define c4h7_ID 29
#define c4h81_ID 30
#define pc4h9_ID 31
#define ch3coch2_ID 32
#define c2h5cho_ID 33
#define c2h5co_ID 34
#define c5h9_ID 35
#define c5h101_ID 36
#define c2h5o_ID 37
#define ch3o2_ID 38
#define ch3o2h_ID 39
#define c2h3co_ID 40
#define c2h3cho_ID 41
#define c3h5o_ID 42
#define c4h7o_ID 43
#define c4h8ooh13o2_ID 44
#define c4h8ooh13_ID 45
#define pc4h9o2_ID 46
#define c3h5a_ID 47
#define c3h3_ID 48
#define c3h2_ID 49
#define ch2_s_ID 50
#define nc4ket13_ID 51
#define nc3h7cho_ID 52
#define nc3h7co_ID 53
#define c2h5coch2_ID 54
#define nc3h7coch2_ID 55
#define nc4h9cho_ID 56
#define nc4h9co_ID 57
#define nc7h16_ID 58
#define c7h151_ID 59
#define c7h152_ID 60
#define c7h153_ID 61
#define c7h154_ID 62
#define c7h142_ID 63
#define c7h143_ID 64
#define c7h15o21_ID 65
#define c7h15o22_ID 66
#define c7h15o23_ID 67
#define c7h15o24_ID 68
#define c7h14ooh13_ID 69
#define c7h14ooh23_ID 70
#define c7h14ooh24_ID 71
#define c7h14ooh32_ID 72
#define c7h14ooh34_ID 73
#define c7h14ooh35_ID 74
#define c7h14ooh42_ID 75
#define c7h14ooh43_ID 76
#define c7h14ooh13o2_ID 77
#define c7h14ooh24o2_ID 78
#define c7h14ooh35o2_ID 79
#define c7h14ooh42o2_ID 80
#define c7h14o13_ID 81
#define c7h14o24_ID 82
#define nc7ket13_ID 83
#define nc7ket24_ID 84
#define nc7ket35_ID 85
#define nc7ket42_ID 86
#define n2_ID 87

#define NUM_GAS_ELEMENTS 4    // Elements in the homogeneous phase
#define NUM_GAS_SPECIES 88    // Species in the homogeneous phase
#define NUM_GAS_REACTIONS 729 // Reactions in the homogeneous phase

#define SITE_DENSITY 0.000000E+00 // mol/cm^2

#define NUM_SURFACE_ELEMENTS 0  // Additional elements in heterogeneous phase
#define NUM_SURFACE_SPECIES 0   // Species in the heterogeneous phase
#define NUM_SURFACE_REACTIONS 0 // Reactions in the heterogeneous phase

#define NUM_ELEMENTS (NUM_GAS_ELEMENTS + NUM_SURFACE_ELEMENTS)
#define NUM_SPECIES (NUM_GAS_SPECIES + NUM_SURFACE_SPECIES)
#define NUM_REACTIONS (NUM_GAS_REACTIONS + NUM_SURFACE_REACTIONS)

#define NUM_IONS 0

#define NUM_FIT 4

//  ALWAYS on CPU stuff -- can have different def depending on if we are CPU or
//  GPU based. Defined in mechanism.cpp
void atomicWeight(amrex::Real* awt);
//  MISC
void CKAWT(amrex::Real* awt);
void CKNCF(int* ncf);
void CKSYME_STR(amrex::Vector<std::string>& ename);
void CKSYMS_STR(amrex::Vector<std::string>& kname);
void GET_RMAP(int* _rmap);
void CKINU(const int i, int& nspec, int* ki, int* nu);
void CKKFKR(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real* x,
  amrex::Real* q_f,
  amrex::Real* q_r);
void progressRateFR(
  amrex::Real* q_f, amrex::Real* q_r, amrex::Real* sc, amrex::Real T);
//  SPARSE INFORMATION
void SPARSITY_INFO(int* nJdata, const int* consP, int NCELLS);
void SPARSITY_INFO_SYST(int* nJdata, const int* consP, int NCELLS);
void SPARSITY_INFO_SYST_SIMPLIFIED(int* nJdata, const int* consP);
void
SPARSITY_PREPROC_CSC(int* rowVals, int* colPtrs, const int* consP, int NCELLS);
void SPARSITY_PREPROC_CSR(
  int* colVals, int* rowPtrs, const int* consP, int NCELLS, int base);
void SPARSITY_PREPROC_SYST_CSR(
  int* colVals, int* rowPtrs, const int* consP, int NCELLS, int base);
void SPARSITY_PREPROC_SYST_SIMPLIFIED_CSC(
  int* rowVals, int* colPtrs, int* indx, const int* consP);
void SPARSITY_PREPROC_SYST_SIMPLIFIED_CSR(
  int* colVals, int* rowPtr, const int* consP, int base);

// A few mechanism parameters
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKINDX(int& mm, int& kk, int& ii, int& nfit)
{
  mm = 4;
  kk = 88;
  ii = 729;
  nfit = -1; // Why do you need this anyway ?
}

//  inverse molecular weights
#ifdef AMREX_USE_GPU
AMREX_GPU_CONSTANT const amrex::Real global_imw[88] = {
  0.9920634920634921, // h
  0.4960317460317460, // h2
  0.0625039064941559, // o
  0.0312519532470779, // o2
  0.0587993179279120, // oh
  0.0555092978073827, // h2o
  0.0357015351660121, // co
  0.0344613688055690, // hco
  0.0227226249176305, // co2
  0.0665114732291320, // ch3
  0.0623324814560868, // ch4
  0.0302975216627280, // ho2
  0.0293996589639560, // h2o2
  0.0333044694598015, // ch2o
  0.0322227234645872, // ch3o
  0.0332557366145660, // c2h6
  0.0356455407428531, // c2h4
  0.0344091941366733, // c2h5
  0.0384054074813734, // c2h2
  0.0369740442209569, // c2h3
  0.0237885672145967, // ch2co
  0.0243730044602598, // hcco
  0.0232315019165989, // ch3co
  0.0232315019165989, // ch2cho
  0.0226999296302181, // ch3cho
  0.0249594409085237, // c3h4-a
  0.0237636938285687, // c3h6
  0.0184870221104784, // c4h6
  0.0232077792476038, // nc3h7
  0.0181488203266788, // c4h7
  0.0178227703714265, // c4h8-1
  0.0175082288675678, // pc4h9
  0.0175217269414073, // ch3coch2
  0.0172176308539945, // c2h5cho
  0.0175217269414073, // c2h5co
  0.0144661275623128, // c5h9
  0.0142582162971412, // c5h10-1
  0.0221921395441735, // c2h5o
  0.0212616673399528, // ch3o2
  0.0208155533814866, // ch3o2h
  0.0181633246149375, // c2h3co
  0.0178367579908676, // c2h3cho
  0.0175217269414073, // c3h5o
  0.0140648954275025, // c4h7o
  0.0082568201334302, // c4h8ooh1-3o2
  0.0112215813452432, // c4h8ooh1-3
  0.0112215813452432, // pc4h9o2
  0.0243468945535997, // c3h5-a
  0.0256036049875823, // c3h3
  0.0262818996557071, // c3h2
  0.0712910814857061, // ch2(s)
  0.0096056865664473, // nc4ket13
  0.0138682790852483, // nc3h7cho
  0.0140648954275025, // nc3h7co
  0.0140648954275025, // c2h5coch2
  0.0117472922491366, // nc3h7coch2
  0.0116098172614763, // nc4h9cho
  0.0117472922491366, // nc4h9co
  0.0099795419390250, // nc7h16
  0.0100809500287307, // c7h15-1
  0.0100809500287307, // c7h15-2
  0.0100809500287307, // c7h15-3
  0.0100809500287307, // c7h15-4
  0.0101844402122437, // c7h14-2
  0.0101844402122437, // c7h14-3
  0.0076222417012843, // c7h15o2-1
  0.0076222417012843, // c7h15o2-2
  0.0076222417012843, // c7h15o2-3
  0.0076222417012843, // c7h15o2-4
  0.0076222417012843, // c7h14ooh1-3
  0.0076222417012843, // c7h14ooh2-3
  0.0076222417012843, // c7h14ooh2-4
  0.0076222417012843, // c7h14ooh3-2
  0.0076222417012843, // c7h14ooh3-4
  0.0076222417012843, // c7h14ooh3-5
  0.0076222417012843, // c7h14ooh4-2
  0.0076222417012843, // c7h14ooh4-3
  0.0061277138112542, // c7h14ooh1-3o2
  0.0061277138112542, // c7h14ooh2-4o2
  0.0061277138112542, // c7h14ooh3-5o2
  0.0061277138112542, // c7h14ooh4-2o2
  0.0087574876519424, // c7h14o1-3
  0.0087574876519424, // c7h14o2-4
  0.0068406003310851, // nc7ket13
  0.0068406003310851, // nc7ket24
  0.0068406003310851, // nc7ket35
  0.0068406003310851, // nc7ket42
  0.0356964374955379, // n2
};
#endif
const amrex::Real h_global_imw[88] = {
  0.9920634920634921, // h
  0.4960317460317460, // h2
  0.0625039064941559, // o
  0.0312519532470779, // o2
  0.0587993179279120, // oh
  0.0555092978073827, // h2o
  0.0357015351660121, // co
  0.0344613688055690, // hco
  0.0227226249176305, // co2
  0.0665114732291320, // ch3
  0.0623324814560868, // ch4
  0.0302975216627280, // ho2
  0.0293996589639560, // h2o2
  0.0333044694598015, // ch2o
  0.0322227234645872, // ch3o
  0.0332557366145660, // c2h6
  0.0356455407428531, // c2h4
  0.0344091941366733, // c2h5
  0.0384054074813734, // c2h2
  0.0369740442209569, // c2h3
  0.0237885672145967, // ch2co
  0.0243730044602598, // hcco
  0.0232315019165989, // ch3co
  0.0232315019165989, // ch2cho
  0.0226999296302181, // ch3cho
  0.0249594409085237, // c3h4-a
  0.0237636938285687, // c3h6
  0.0184870221104784, // c4h6
  0.0232077792476038, // nc3h7
  0.0181488203266788, // c4h7
  0.0178227703714265, // c4h8-1
  0.0175082288675678, // pc4h9
  0.0175217269414073, // ch3coch2
  0.0172176308539945, // c2h5cho
  0.0175217269414073, // c2h5co
  0.0144661275623128, // c5h9
  0.0142582162971412, // c5h10-1
  0.0221921395441735, // c2h5o
  0.0212616673399528, // ch3o2
  0.0208155533814866, // ch3o2h
  0.0181633246149375, // c2h3co
  0.0178367579908676, // c2h3cho
  0.0175217269414073, // c3h5o
  0.0140648954275025, // c4h7o
  0.0082568201334302, // c4h8ooh1-3o2
  0.0112215813452432, // c4h8ooh1-3
  0.0112215813452432, // pc4h9o2
  0.0243468945535997, // c3h5-a
  0.0256036049875823, // c3h3
  0.0262818996557071, // c3h2
  0.0712910814857061, // ch2(s)
  0.0096056865664473, // nc4ket13
  0.0138682790852483, // nc3h7cho
  0.0140648954275025, // nc3h7co
  0.0140648954275025, // c2h5coch2
  0.0117472922491366, // nc3h7coch2
  0.0116098172614763, // nc4h9cho
  0.0117472922491366, // nc4h9co
  0.0099795419390250, // nc7h16
  0.0100809500287307, // c7h15-1
  0.0100809500287307, // c7h15-2
  0.0100809500287307, // c7h15-3
  0.0100809500287307, // c7h15-4
  0.0101844402122437, // c7h14-2
  0.0101844402122437, // c7h14-3
  0.0076222417012843, // c7h15o2-1
  0.0076222417012843, // c7h15o2-2
  0.0076222417012843, // c7h15o2-3
  0.0076222417012843, // c7h15o2-4
  0.0076222417012843, // c7h14ooh1-3
  0.0076222417012843, // c7h14ooh2-3
  0.0076222417012843, // c7h14ooh2-4
  0.0076222417012843, // c7h14ooh3-2
  0.0076222417012843, // c7h14ooh3-4
  0.0076222417012843, // c7h14ooh3-5
  0.0076222417012843, // c7h14ooh4-2
  0.0076222417012843, // c7h14ooh4-3
  0.0061277138112542, // c7h14ooh1-3o2
  0.0061277138112542, // c7h14ooh2-4o2
  0.0061277138112542, // c7h14ooh3-5o2
  0.0061277138112542, // c7h14ooh4-2o2
  0.0087574876519424, // c7h14o1-3
  0.0087574876519424, // c7h14o2-4
  0.0068406003310851, // nc7ket13
  0.0068406003310851, // nc7ket24
  0.0068406003310851, // nc7ket35
  0.0068406003310851, // nc7ket42
  0.0356964374955379, // n2
};

//  molecular weights
#ifdef AMREX_USE_GPU
AMREX_GPU_CONSTANT const amrex::Real global_mw[88] = {
  1.008000,   // h
  2.016000,   // h2
  15.999000,  // o
  31.998000,  // o2
  17.007000,  // oh
  18.015000,  // h2o
  28.010000,  // co
  29.018000,  // hco
  44.009000,  // co2
  15.035000,  // ch3
  16.043000,  // ch4
  33.006000,  // ho2
  34.014000,  // h2o2
  30.026000,  // ch2o
  31.034000,  // ch3o
  30.070000,  // c2h6
  28.054000,  // c2h4
  29.062000,  // c2h5
  26.038000,  // c2h2
  27.046000,  // c2h3
  42.037000,  // ch2co
  41.029000,  // hcco
  43.045000,  // ch3co
  43.045000,  // ch2cho
  44.053000,  // ch3cho
  40.065000,  // c3h4-a
  42.081000,  // c3h6
  54.092000,  // c4h6
  43.089000,  // nc3h7
  55.100000,  // c4h7
  56.108000,  // c4h8-1
  57.116000,  // pc4h9
  57.072000,  // ch3coch2
  58.080000,  // c2h5cho
  57.072000,  // c2h5co
  69.127000,  // c5h9
  70.135000,  // c5h10-1
  45.061000,  // c2h5o
  47.033000,  // ch3o2
  48.041000,  // ch3o2h
  55.056000,  // c2h3co
  56.064000,  // c2h3cho
  57.072000,  // c3h5o
  71.099000,  // c4h7o
  121.112000, // c4h8ooh1-3o2
  89.114000,  // c4h8ooh1-3
  89.114000,  // pc4h9o2
  41.073000,  // c3h5-a
  39.057000,  // c3h3
  38.049000,  // c3h2
  14.027000,  // ch2(s)
  104.105000, // nc4ket13
  72.107000,  // nc3h7cho
  71.099000,  // nc3h7co
  71.099000,  // c2h5coch2
  85.126000,  // nc3h7coch2
  86.134000,  // nc4h9cho
  85.126000,  // nc4h9co
  100.205000, // nc7h16
  99.197000,  // c7h15-1
  99.197000,  // c7h15-2
  99.197000,  // c7h15-3
  99.197000,  // c7h15-4
  98.189000,  // c7h14-2
  98.189000,  // c7h14-3
  131.195000, // c7h15o2-1
  131.195000, // c7h15o2-2
  131.195000, // c7h15o2-3
  131.195000, // c7h15o2-4
  131.195000, // c7h14ooh1-3
  131.195000, // c7h14ooh2-3
  131.195000, // c7h14ooh2-4
  131.195000, // c7h14ooh3-2
  131.195000, // c7h14ooh3-4
  131.195000, // c7h14ooh3-5
  131.195000, // c7h14ooh4-2
  131.195000, // c7h14ooh4-3
  163.193000, // c7h14ooh1-3o2
  163.193000, // c7h14ooh2-4o2
  163.193000, // c7h14ooh3-5o2
  163.193000, // c7h14ooh4-2o2
  114.188000, // c7h14o1-3
  114.188000, // c7h14o2-4
  146.186000, // nc7ket13
  146.186000, // nc7ket24
  146.186000, // nc7ket35
  146.186000, // nc7ket42
  28.014000,  // n2
};
#endif
const amrex::Real h_global_mw[88] = {
  1.008000,   // h
  2.016000,   // h2
  15.999000,  // o
  31.998000,  // o2
  17.007000,  // oh
  18.015000,  // h2o
  28.010000,  // co
  29.018000,  // hco
  44.009000,  // co2
  15.035000,  // ch3
  16.043000,  // ch4
  33.006000,  // ho2
  34.014000,  // h2o2
  30.026000,  // ch2o
  31.034000,  // ch3o
  30.070000,  // c2h6
  28.054000,  // c2h4
  29.062000,  // c2h5
  26.038000,  // c2h2
  27.046000,  // c2h3
  42.037000,  // ch2co
  41.029000,  // hcco
  43.045000,  // ch3co
  43.045000,  // ch2cho
  44.053000,  // ch3cho
  40.065000,  // c3h4-a
  42.081000,  // c3h6
  54.092000,  // c4h6
  43.089000,  // nc3h7
  55.100000,  // c4h7
  56.108000,  // c4h8-1
  57.116000,  // pc4h9
  57.072000,  // ch3coch2
  58.080000,  // c2h5cho
  57.072000,  // c2h5co
  69.127000,  // c5h9
  70.135000,  // c5h10-1
  45.061000,  // c2h5o
  47.033000,  // ch3o2
  48.041000,  // ch3o2h
  55.056000,  // c2h3co
  56.064000,  // c2h3cho
  57.072000,  // c3h5o
  71.099000,  // c4h7o
  121.112000, // c4h8ooh1-3o2
  89.114000,  // c4h8ooh1-3
  89.114000,  // pc4h9o2
  41.073000,  // c3h5-a
  39.057000,  // c3h3
  38.049000,  // c3h2
  14.027000,  // ch2(s)
  104.105000, // nc4ket13
  72.107000,  // nc3h7cho
  71.099000,  // nc3h7co
  71.099000,  // c2h5coch2
  85.126000,  // nc3h7coch2
  86.134000,  // nc4h9cho
  85.126000,  // nc4h9co
  100.205000, // nc7h16
  99.197000,  // c7h15-1
  99.197000,  // c7h15-2
  99.197000,  // c7h15-3
  99.197000,  // c7h15-4
  98.189000,  // c7h14-2
  98.189000,  // c7h14-3
  131.195000, // c7h15o2-1
  131.195000, // c7h15o2-2
  131.195000, // c7h15o2-3
  131.195000, // c7h15o2-4
  131.195000, // c7h14ooh1-3
  131.195000, // c7h14ooh2-3
  131.195000, // c7h14ooh2-4
  131.195000, // c7h14ooh3-2
  131.195000, // c7h14ooh3-4
  131.195000, // c7h14ooh3-5
  131.195000, // c7h14ooh4-2
  131.195000, // c7h14ooh4-3
  163.193000, // c7h14ooh1-3o2
  163.193000, // c7h14ooh2-4o2
  163.193000, // c7h14ooh3-5o2
  163.193000, // c7h14ooh4-2o2
  114.188000, // c7h14o1-3
  114.188000, // c7h14o2-4
  146.186000, // nc7ket13
  146.186000, // nc7ket24
  146.186000, // nc7ket35
  146.186000, // nc7ket42
  28.014000,  // n2
};

//  inverse molecular weights
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
get_imw(amrex::Real* imw_new)
{
  imw_new[0] = 0.9920634920634921;  // h
  imw_new[1] = 0.4960317460317460;  // h2
  imw_new[2] = 0.0625039064941559;  // o
  imw_new[3] = 0.0312519532470779;  // o2
  imw_new[4] = 0.0587993179279120;  // oh
  imw_new[5] = 0.0555092978073827;  // h2o
  imw_new[6] = 0.0357015351660121;  // co
  imw_new[7] = 0.0344613688055690;  // hco
  imw_new[8] = 0.0227226249176305;  // co2
  imw_new[9] = 0.0665114732291320;  // ch3
  imw_new[10] = 0.0623324814560868; // ch4
  imw_new[11] = 0.0302975216627280; // ho2
  imw_new[12] = 0.0293996589639560; // h2o2
  imw_new[13] = 0.0333044694598015; // ch2o
  imw_new[14] = 0.0322227234645872; // ch3o
  imw_new[15] = 0.0332557366145660; // c2h6
  imw_new[16] = 0.0356455407428531; // c2h4
  imw_new[17] = 0.0344091941366733; // c2h5
  imw_new[18] = 0.0384054074813734; // c2h2
  imw_new[19] = 0.0369740442209569; // c2h3
  imw_new[20] = 0.0237885672145967; // ch2co
  imw_new[21] = 0.0243730044602598; // hcco
  imw_new[22] = 0.0232315019165989; // ch3co
  imw_new[23] = 0.0232315019165989; // ch2cho
  imw_new[24] = 0.0226999296302181; // ch3cho
  imw_new[25] = 0.0249594409085237; // c3h4-a
  imw_new[26] = 0.0237636938285687; // c3h6
  imw_new[27] = 0.0184870221104784; // c4h6
  imw_new[28] = 0.0232077792476038; // nc3h7
  imw_new[29] = 0.0181488203266788; // c4h7
  imw_new[30] = 0.0178227703714265; // c4h8-1
  imw_new[31] = 0.0175082288675678; // pc4h9
  imw_new[32] = 0.0175217269414073; // ch3coch2
  imw_new[33] = 0.0172176308539945; // c2h5cho
  imw_new[34] = 0.0175217269414073; // c2h5co
  imw_new[35] = 0.0144661275623128; // c5h9
  imw_new[36] = 0.0142582162971412; // c5h10-1
  imw_new[37] = 0.0221921395441735; // c2h5o
  imw_new[38] = 0.0212616673399528; // ch3o2
  imw_new[39] = 0.0208155533814866; // ch3o2h
  imw_new[40] = 0.0181633246149375; // c2h3co
  imw_new[41] = 0.0178367579908676; // c2h3cho
  imw_new[42] = 0.0175217269414073; // c3h5o
  imw_new[43] = 0.0140648954275025; // c4h7o
  imw_new[44] = 0.0082568201334302; // c4h8ooh1-3o2
  imw_new[45] = 0.0112215813452432; // c4h8ooh1-3
  imw_new[46] = 0.0112215813452432; // pc4h9o2
  imw_new[47] = 0.0243468945535997; // c3h5-a
  imw_new[48] = 0.0256036049875823; // c3h3
  imw_new[49] = 0.0262818996557071; // c3h2
  imw_new[50] = 0.0712910814857061; // ch2(s)
  imw_new[51] = 0.0096056865664473; // nc4ket13
  imw_new[52] = 0.0138682790852483; // nc3h7cho
  imw_new[53] = 0.0140648954275025; // nc3h7co
  imw_new[54] = 0.0140648954275025; // c2h5coch2
  imw_new[55] = 0.0117472922491366; // nc3h7coch2
  imw_new[56] = 0.0116098172614763; // nc4h9cho
  imw_new[57] = 0.0117472922491366; // nc4h9co
  imw_new[58] = 0.0099795419390250; // nc7h16
  imw_new[59] = 0.0100809500287307; // c7h15-1
  imw_new[60] = 0.0100809500287307; // c7h15-2
  imw_new[61] = 0.0100809500287307; // c7h15-3
  imw_new[62] = 0.0100809500287307; // c7h15-4
  imw_new[63] = 0.0101844402122437; // c7h14-2
  imw_new[64] = 0.0101844402122437; // c7h14-3
  imw_new[65] = 0.0076222417012843; // c7h15o2-1
  imw_new[66] = 0.0076222417012843; // c7h15o2-2
  imw_new[67] = 0.0076222417012843; // c7h15o2-3
  imw_new[68] = 0.0076222417012843; // c7h15o2-4
  imw_new[69] = 0.0076222417012843; // c7h14ooh1-3
  imw_new[70] = 0.0076222417012843; // c7h14ooh2-3
  imw_new[71] = 0.0076222417012843; // c7h14ooh2-4
  imw_new[72] = 0.0076222417012843; // c7h14ooh3-2
  imw_new[73] = 0.0076222417012843; // c7h14ooh3-4
  imw_new[74] = 0.0076222417012843; // c7h14ooh3-5
  imw_new[75] = 0.0076222417012843; // c7h14ooh4-2
  imw_new[76] = 0.0076222417012843; // c7h14ooh4-3
  imw_new[77] = 0.0061277138112542; // c7h14ooh1-3o2
  imw_new[78] = 0.0061277138112542; // c7h14ooh2-4o2
  imw_new[79] = 0.0061277138112542; // c7h14ooh3-5o2
  imw_new[80] = 0.0061277138112542; // c7h14ooh4-2o2
  imw_new[81] = 0.0087574876519424; // c7h14o1-3
  imw_new[82] = 0.0087574876519424; // c7h14o2-4
  imw_new[83] = 0.0068406003310851; // nc7ket13
  imw_new[84] = 0.0068406003310851; // nc7ket24
  imw_new[85] = 0.0068406003310851; // nc7ket35
  imw_new[86] = 0.0068406003310851; // nc7ket42
  imw_new[87] = 0.0356964374955379; // n2
}

//  inverse molecular weight
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE amrex::Real
imw(const int n)
{
#if AMREX_DEVICE_COMPILE
  return global_imw[n];
#else
  return h_global_imw[n];
#endif
}
//  molecular weights
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
get_mw(amrex::Real* mw_new)
{
  mw_new[0] = 1.008000;    // h
  mw_new[1] = 2.016000;    // h2
  mw_new[2] = 15.999000;   // o
  mw_new[3] = 31.998000;   // o2
  mw_new[4] = 17.007000;   // oh
  mw_new[5] = 18.015000;   // h2o
  mw_new[6] = 28.010000;   // co
  mw_new[7] = 29.018000;   // hco
  mw_new[8] = 44.009000;   // co2
  mw_new[9] = 15.035000;   // ch3
  mw_new[10] = 16.043000;  // ch4
  mw_new[11] = 33.006000;  // ho2
  mw_new[12] = 34.014000;  // h2o2
  mw_new[13] = 30.026000;  // ch2o
  mw_new[14] = 31.034000;  // ch3o
  mw_new[15] = 30.070000;  // c2h6
  mw_new[16] = 28.054000;  // c2h4
  mw_new[17] = 29.062000;  // c2h5
  mw_new[18] = 26.038000;  // c2h2
  mw_new[19] = 27.046000;  // c2h3
  mw_new[20] = 42.037000;  // ch2co
  mw_new[21] = 41.029000;  // hcco
  mw_new[22] = 43.045000;  // ch3co
  mw_new[23] = 43.045000;  // ch2cho
  mw_new[24] = 44.053000;  // ch3cho
  mw_new[25] = 40.065000;  // c3h4-a
  mw_new[26] = 42.081000;  // c3h6
  mw_new[27] = 54.092000;  // c4h6
  mw_new[28] = 43.089000;  // nc3h7
  mw_new[29] = 55.100000;  // c4h7
  mw_new[30] = 56.108000;  // c4h8-1
  mw_new[31] = 57.116000;  // pc4h9
  mw_new[32] = 57.072000;  // ch3coch2
  mw_new[33] = 58.080000;  // c2h5cho
  mw_new[34] = 57.072000;  // c2h5co
  mw_new[35] = 69.127000;  // c5h9
  mw_new[36] = 70.135000;  // c5h10-1
  mw_new[37] = 45.061000;  // c2h5o
  mw_new[38] = 47.033000;  // ch3o2
  mw_new[39] = 48.041000;  // ch3o2h
  mw_new[40] = 55.056000;  // c2h3co
  mw_new[41] = 56.064000;  // c2h3cho
  mw_new[42] = 57.072000;  // c3h5o
  mw_new[43] = 71.099000;  // c4h7o
  mw_new[44] = 121.112000; // c4h8ooh1-3o2
  mw_new[45] = 89.114000;  // c4h8ooh1-3
  mw_new[46] = 89.114000;  // pc4h9o2
  mw_new[47] = 41.073000;  // c3h5-a
  mw_new[48] = 39.057000;  // c3h3
  mw_new[49] = 38.049000;  // c3h2
  mw_new[50] = 14.027000;  // ch2(s)
  mw_new[51] = 104.105000; // nc4ket13
  mw_new[52] = 72.107000;  // nc3h7cho
  mw_new[53] = 71.099000;  // nc3h7co
  mw_new[54] = 71.099000;  // c2h5coch2
  mw_new[55] = 85.126000;  // nc3h7coch2
  mw_new[56] = 86.134000;  // nc4h9cho
  mw_new[57] = 85.126000;  // nc4h9co
  mw_new[58] = 100.205000; // nc7h16
  mw_new[59] = 99.197000;  // c7h15-1
  mw_new[60] = 99.197000;  // c7h15-2
  mw_new[61] = 99.197000;  // c7h15-3
  mw_new[62] = 99.197000;  // c7h15-4
  mw_new[63] = 98.189000;  // c7h14-2
  mw_new[64] = 98.189000;  // c7h14-3
  mw_new[65] = 131.195000; // c7h15o2-1
  mw_new[66] = 131.195000; // c7h15o2-2
  mw_new[67] = 131.195000; // c7h15o2-3
  mw_new[68] = 131.195000; // c7h15o2-4
  mw_new[69] = 131.195000; // c7h14ooh1-3
  mw_new[70] = 131.195000; // c7h14ooh2-3
  mw_new[71] = 131.195000; // c7h14ooh2-4
  mw_new[72] = 131.195000; // c7h14ooh3-2
  mw_new[73] = 131.195000; // c7h14ooh3-4
  mw_new[74] = 131.195000; // c7h14ooh3-5
  mw_new[75] = 131.195000; // c7h14ooh4-2
  mw_new[76] = 131.195000; // c7h14ooh4-3
  mw_new[77] = 163.193000; // c7h14ooh1-3o2
  mw_new[78] = 163.193000; // c7h14ooh2-4o2
  mw_new[79] = 163.193000; // c7h14ooh3-5o2
  mw_new[80] = 163.193000; // c7h14ooh4-2o2
  mw_new[81] = 114.188000; // c7h14o1-3
  mw_new[82] = 114.188000; // c7h14o2-4
  mw_new[83] = 146.186000; // nc7ket13
  mw_new[84] = 146.186000; // nc7ket24
  mw_new[85] = 146.186000; // nc7ket35
  mw_new[86] = 146.186000; // nc7ket42
  mw_new[87] = 28.014000;  // n2
}

//  molecular weight
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE amrex::Real
mw(const int n)
{
#if AMREX_DEVICE_COMPILE
  return global_mw[n];
#else
  return h_global_mw[n];
#endif
}

//  Returns R, Rc, Patm
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRP(amrex::Real& ru, amrex::Real& ruc, amrex::Real& pa)
{
  ru = 8.31446261815324e+07;
  ruc = 1.98721558317399615845;
  pa = 1.01325e+06;
}

// compute Cv/R at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
cv_R(amrex::Real* species, const amrex::Real T)
{
  const amrex::Real T2 = T * T;
  const amrex::Real T3 = T * T * T;
  const amrex::Real T4 = T * T * T * T;

  // species with no change across T
  // species 0: h
  species[0] = +1.50104422e+00;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 1: h2
    species[1] = +2.29812400e+00 + 8.24944200e-04 * T - 8.14301500e-07 * T2 -
                 9.47543400e-11 * T3 + 4.13487200e-13 * T4;
    // species 2: o
    species[2] = +1.94642900e+00 - 1.63816600e-03 * T + 2.42103200e-06 * T2 -
                 1.60284300e-09 * T3 + 3.89069600e-13 * T4;
    // species 3: o2
    species[3] = +2.21293600e+00 + 1.12748600e-03 * T - 5.75615000e-07 * T2 +
                 1.31387700e-09 * T3 - 8.76855400e-13 * T4;
    // species 5: h2o
    species[5] = +2.38684200e+00 + 3.47498200e-03 * T - 6.35469600e-06 * T2 +
                 6.96858100e-09 * T3 - 2.50658800e-12 * T4;
    // species 6: co
    species[6] = +2.26245200e+00 + 1.51194100e-03 * T - 3.88175500e-06 * T2 +
                 5.58194400e-09 * T3 - 2.47495100e-12 * T4;
    // species 7: hco
    species[7] = +1.89833000e+00 + 6.19914700e-03 * T - 9.62308400e-06 * T2 +
                 1.08982500e-08 * T3 - 4.57488500e-12 * T4;
    // species 8: co2
    species[8] = +1.27572500e+00 + 9.92207200e-03 * T - 1.04091100e-05 * T2 +
                 6.86668700e-09 * T3 - 2.11728000e-12 * T4;
    // species 9: ch3
    species[9] = +1.43044300e+00 + 1.11241000e-02 * T - 1.68022000e-05 * T2 +
                 1.62182900e-08 * T3 - 5.86495300e-12 * T4;
    // species 10: ch4
    species[10] = -2.21258500e-01 + 1.74766800e-02 * T - 2.78340900e-05 * T2 +
                  3.04970800e-08 * T3 - 1.22393100e-11 * T4;
    // species 12: h2o2
    species[12] = +2.38875400e+00 + 6.56922600e-03 * T - 1.48501300e-07 * T2 -
                  4.62580600e-09 * T3 + 2.47151500e-12 * T4;
    // species 13: ch2o
    species[13] = +6.52731000e-01 + 1.26314400e-02 * T - 1.88816800e-05 * T2 +
                  2.05003100e-08 * T3 - 8.41323700e-12 * T4;
    // species 14: ch3o
    species[14] = +1.10620400e+00 + 7.21659500e-03 * T + 5.33847200e-06 * T2 -
                  7.37763600e-09 * T3 + 2.07561100e-12 * T4;
    // species 16: c2h4
    species[16] = -1.86148800e+00 + 2.79616300e-02 * T - 3.38867700e-05 * T2 +
                  2.78515200e-08 * T3 - 9.73787900e-12 * T4;
    // species 17: c2h5
    species[17] = +1.69070200e+00 + 8.71913300e-03 * T + 4.41983900e-06 * T2 +
                  9.33870300e-10 * T3 - 3.92777300e-12 * T4;
    // species 18: c2h2
    species[18] = +1.01356200e+00 + 1.51904500e-02 * T - 1.61631900e-05 * T2 +
                  9.07899200e-09 * T3 - 1.91274600e-12 * T4;
    // species 19: c2h3
    species[19] = +1.45927600e+00 + 7.37147600e-03 * T + 2.10987300e-06 * T2 -
                  1.32164200e-09 * T3 - 1.18478400e-12 * T4;
    // species 20: ch2co
    species[20] = +1.97497100e+00 + 1.21187100e-02 * T - 2.34504600e-06 * T2 -
                  6.46668500e-09 * T3 + 3.90564900e-12 * T4;
    // species 21: hcco
    species[21] = +4.04796500e+00 + 4.45347800e-03 * T + 2.26828300e-07 * T2 -
                  1.48209500e-09 * T3 + 2.25074200e-13 * T4;
    // species 22: ch3co
    species[22] = +2.12527800e+00 + 9.77822000e-03 * T + 4.52144800e-06 * T2 -
                  9.00946200e-09 * T3 + 3.19371800e-12 * T4;
    // species 23: ch2cho
    species[23] = +2.40906200e+00 + 1.07385700e-02 * T + 1.89149200e-06 * T2 -
                  7.15858300e-09 * T3 + 2.86738500e-12 * T4;
    // species 24: ch3cho
    species[24] = +1.50569500e+00 + 1.33699100e-02 * T + 4.67195300e-06 * T2 -
                  1.12814000e-08 * T3 + 4.26356600e-12 * T4;
    // species 28: nc3h7
    species[28] = +9.22537000e-01 + 2.47892700e-02 * T + 1.81024900e-06 * T2 -
                  1.78326600e-08 * T3 + 8.58299600e-12 * T4;
    // species 48: c3h3
    species[48] = +3.75420000e+00 + 1.10802800e-02 * T + 2.79332300e-07 * T2 -
                  5.47921200e-09 * T3 + 1.94962900e-12 * T4;
    // species 49: c3h2
    species[49] = +2.16671400e+00 + 2.48257200e-02 * T - 4.59163700e-05 * T2 +
                  4.26801900e-08 * T3 - 1.48215200e-11 * T4;
    // species 50: ch2(s)
    species[50] = +2.97126500e+00 - 1.69908900e-04 * T + 1.02536900e-06 * T2 +
                  2.49255100e-09 * T3 - 1.98126600e-12 * T4;
    // species 87: n2
    species[87] = +2.29867700e+00 + 1.40824000e-03 * T - 3.96322200e-06 * T2 +
                  5.64151500e-09 * T3 - 2.44485500e-12 * T4;
  } else {
    // species 1: h2
    species[1] = +1.99142300e+00 + 7.00064400e-04 * T - 5.63382900e-08 * T2 -
                 9.23157800e-12 * T3 + 1.58275200e-15 * T4;
    // species 2: o
    species[2] = +1.54206000e+00 - 2.75506200e-05 * T - 3.10280300e-09 * T2 +
                 4.55106700e-12 * T3 - 4.36805200e-16 * T4;
    // species 3: o2
    species[3] = +2.69757800e+00 + 6.13519700e-04 * T - 1.25884200e-07 * T2 +
                 1.77528100e-11 * T3 - 1.13643500e-15 * T4;
    // species 5: h2o
    species[5] = +1.67214600e+00 + 3.05629300e-03 * T - 8.73026000e-07 * T2 +
                 1.20099600e-10 * T3 - 6.39161800e-15 * T4;
    // species 6: co
    species[6] = +2.02507800e+00 + 1.44268900e-03 * T - 5.63082800e-07 * T2 +
                 1.01858100e-10 * T3 - 6.91095200e-15 * T4;
    // species 7: hco
    species[7] = +2.55727100e+00 + 3.34557300e-03 * T - 1.33500600e-06 * T2 +
                 2.47057300e-10 * T3 - 1.71385100e-14 * T4;
    // species 8: co2
    species[8] = +3.45362300e+00 + 3.14016900e-03 * T - 1.27841100e-06 * T2 +
                 2.39399700e-10 * T3 - 1.66903300e-14 * T4;
    // species 9: ch3
    species[9] = +1.84405200e+00 + 6.13797400e-03 * T - 2.23034500e-06 * T2 +
                 3.78516100e-10 * T3 - 2.45215900e-14 * T4;
    // species 10: ch4
    species[10] = +6.83479000e-01 + 1.02372400e-02 * T - 3.87512900e-06 * T2 +
                  6.78558500e-10 * T3 - 4.50342300e-14 * T4;
    // species 12: h2o2
    species[12] = +3.57316700e+00 + 4.33613600e-03 * T - 1.47468900e-06 * T2 +
                  2.34890400e-10 * T3 - 1.43165400e-14 * T4;
    // species 13: ch2o
    species[13] = +1.99560600e+00 + 6.68132100e-03 * T - 2.62895500e-06 * T2 +
                  4.73715300e-10 * T3 - 3.21251700e-14 * T4;
    // species 14: ch3o
    species[14] = +2.77080000e+00 + 7.87149700e-03 * T - 2.65638400e-06 * T2 +
                  3.94443100e-10 * T3 - 2.11261600e-14 * T4;
    // species 16: c2h4
    species[16] = +2.52841900e+00 + 1.14851800e-02 * T - 4.41838500e-06 * T2 +
                  7.84460100e-10 * T3 - 5.26684800e-14 * T4;
    // species 17: c2h5
    species[17] = +6.19048000e+00 + 6.48407700e-03 * T - 6.42806500e-07 * T2 -
                  2.34787900e-10 * T3 + 3.88087700e-14 * T4;
    // species 18: c2h2
    species[18] = +3.43677000e+00 + 5.37603900e-03 * T - 1.91281700e-06 * T2 +
                  3.28637900e-10 * T3 - 2.15671000e-14 * T4;
    // species 19: c2h3
    species[19] = +4.93346800e+00 + 4.01774600e-03 * T - 3.96674000e-07 * T2 -
                  1.44126700e-10 * T3 + 2.37864400e-14 * T4;
    // species 20: ch2co
    species[20] = +5.03881700e+00 + 5.80484000e-03 * T - 1.92095400e-06 * T2 +
                  2.79448500e-10 * T3 - 1.45886800e-14 * T4;
    // species 21: hcco
    species[21] = +5.75807300e+00 + 2.00040000e-03 * T - 2.02760700e-07 * T2 -
                  1.04113200e-10 * T3 + 1.96516500e-14 * T4;
    // species 22: ch3co
    species[22] = +4.61227900e+00 + 8.44988600e-03 * T - 2.85414700e-06 * T2 +
                  4.23837600e-10 * T3 - 2.26840400e-14 * T4;
    // species 23: ch2cho
    species[23] = +4.97567000e+00 + 8.13059100e-03 * T - 2.74362400e-06 * T2 +
                  4.07030400e-10 * T3 - 2.17601700e-14 * T4;
    // species 24: ch3cho
    species[24] = +4.86865000e+00 + 1.07942400e-02 * T - 3.64553000e-06 * T2 +
                  5.41291200e-10 * T3 - 2.89684400e-14 * T4;
    // species 28: nc3h7
    species[28] = +6.97829100e+00 + 1.57611300e-02 * T - 5.17324300e-06 * T2 +
                  7.44389200e-10 * T3 - 3.82497800e-14 * T4;
    // species 48: c3h3
    species[48] = +7.83104700e+00 + 4.35719500e-03 * T - 4.10906700e-07 * T2 -
                  2.36872300e-10 * T3 + 4.37652000e-14 * T4;
    // species 49: c3h2
    species[49] = +6.67098100e+00 + 2.74874900e-03 * T - 4.37094300e-07 * T2 -
                  6.45559900e-11 * T3 + 1.66388700e-14 * T4;
    // species 50: ch2(s)
    species[50] = +2.55288900e+00 + 2.06678800e-03 * T - 1.91411600e-07 * T2 -
                  1.10467300e-10 * T3 + 2.02135000e-14 * T4;
    // species 87: n2
    species[87] = +1.92664000e+00 + 1.48797700e-03 * T - 5.68476100e-07 * T2 +
                  1.00970400e-10 * T3 - 6.75335100e-15 * T4;
  }

  // species with midpoint at T=1357 kelvin
  if (T < 1357) {
    // species 4: oh
    species[4] = +2.43586219e+00 + 2.02235804e-04 * T - 1.13546412e-07 * T2 +
                 2.42445149e-10 * T3 - 7.43651031e-14 * T4;
  } else {
    // species 4: oh
    species[4] = +1.62599754e+00 + 1.31992406e-03 * T - 3.59724670e-07 * T2 +
                 4.25630800e-11 * T3 - 1.82048016e-15 * T4;
  }

  // species with midpoint at T=1373 kelvin
  if (T < 1373) {
    // species 34: c2h5co
    species[34] = +1.93313946e+00 + 2.47427911e-02 * T - 1.21222003e-05 * T2 +
                  2.34701048e-09 * T3 - 5.26843338e-14 * T4;
  } else {
    // species 34: c2h5co
    species[34] = +8.87881997e+00 + 1.17515676e-02 * T - 4.00614923e-06 * T2 +
                  6.20850617e-10 * T3 - 3.59835225e-14 * T4;
  }

  // species with midpoint at T=1377 kelvin
  if (T < 1377) {
    // species 45: c4h8ooh1-3
    species[45] = +9.41062760e-01 + 5.18789351e-02 * T - 3.10411683e-05 * T2 +
                  8.63568881e-09 * T3 - 8.42841994e-13 * T4;
  } else {
    // species 45: c4h8ooh1-3
    species[45] = +1.66442170e+01 + 1.91706536e-02 * T - 6.57168641e-06 * T2 +
                  1.02246571e-09 * T3 - 5.94304735e-14 * T4;
  }

  // species with midpoint at T=1378 kelvin
  if (T < 1378) {
    // species 33: c2h5cho
    species[33] = +1.16308444e+00 + 2.95501264e-02 * T - 1.52446252e-05 * T2 +
                  3.49503947e-09 * T3 - 2.38896627e-13 * T4;
    // species 52: nc3h7cho
    species[52] = +8.74159590e-01 + 4.19240315e-02 * T - 2.35148779e-05 * T2 +
                  6.26913673e-09 * T3 - 6.09443908e-13 * T4;
  } else {
    // species 33: c2h5cho
    species[33] = +9.24276950e+00 + 1.39641989e-02 * T - 4.76248001e-06 * T2 +
                  7.38105706e-10 * T3 - 4.27759503e-14 * T4;
    // species 52: nc3h7cho
    species[52] = +1.25988068e+01 + 1.81652474e-02 * T - 6.17844458e-06 * T2 +
                  9.55980208e-10 * T3 - 5.53442958e-14 * T4;
  }

  // species with midpoint at T=1380 kelvin
  if (T < 1380) {
    // species 42: c3h5o
    species[42] = +1.98225820e-01 + 3.05579837e-02 * T - 1.80630276e-05 * T2 +
                  4.86150033e-09 * T3 - 4.19854562e-13 * T4;
    // species 53: nc3h7co
    species[53] = +1.67256826e+00 + 3.71198825e-02 * T - 2.06862859e-05 * T2 +
                  5.48873888e-09 * T3 - 5.35864183e-13 * T4;
  } else {
    // species 42: c3h5o
    species[42] = +9.25517520e+00 + 1.14983720e-02 * T - 3.84645659e-06 * T2 +
                  5.88910346e-10 * T3 - 3.38557923e-14 * T4;
    // species 53: nc3h7co
    species[53] = +1.20026331e+01 + 1.63104877e-02 * T - 5.57642899e-06 * T2 +
                  8.65670629e-10 * T3 - 5.02255667e-14 * T4;
  }

  // species with midpoint at T=1381 kelvin
  if (T < 1381) {
    // species 56: nc4h9cho
    species[56] = +5.96634720e-01 + 5.43541416e-02 * T - 3.21020651e-05 * T2 +
                  9.35773559e-09 * T3 - 1.06688932e-12 * T4;
  } else {
    // species 56: nc4h9cho
    species[56] = +1.57965163e+01 + 2.25684519e-02 * T - 7.67631588e-06 * T2 +
                  1.18769369e-09 * T3 - 6.87545554e-14 * T4;
  }

  // species with midpoint at T=1382 kelvin
  if (T < 1382) {
    // species 57: nc4h9co
    species[57] = +1.43530238e+00 + 4.93682376e-02 * T - 2.89883082e-05 * T2 +
                  8.42863812e-09 * T3 - 9.68287172e-13 * T4;
    // species 60: c7h15-2
    species[60] = -1.03791558e+00 + 7.56726570e-02 * T - 4.07473634e-05 * T2 +
                  9.32678943e-09 * T3 - 4.92360745e-13 * T4;
    // species 61: c7h15-3
    species[61] = -1.03791558e+00 + 7.56726570e-02 * T - 4.07473634e-05 * T2 +
                  9.32678943e-09 * T3 - 4.92360745e-13 * T4;
    // species 62: c7h15-4
    species[62] = -1.03791558e+00 + 7.56726570e-02 * T - 4.07473634e-05 * T2 +
                  9.32678943e-09 * T3 - 4.92360745e-13 * T4;
  } else {
    // species 57: nc4h9co
    species[57] = +1.51782939e+01 + 2.07991920e-02 * T - 7.11787892e-06 * T2 +
                  1.10559975e-09 * T3 - 6.41697187e-14 * T4;
    // species 60: c7h15-2
    species[60] = +2.06368842e+01 + 3.23324804e-02 * T - 1.09273807e-05 * T2 +
                  1.68357060e-09 * T3 - 9.71774091e-14 * T4;
    // species 61: c7h15-3
    species[61] = +2.06368842e+01 + 3.23324804e-02 * T - 1.09273807e-05 * T2 +
                  1.68357060e-09 * T3 - 9.71774091e-14 * T4;
    // species 62: c7h15-4
    species[62] = +2.06368842e+01 + 3.23324804e-02 * T - 1.09273807e-05 * T2 +
                  1.68357060e-09 * T3 - 9.71774091e-14 * T4;
  }

  // species with midpoint at T=1383 kelvin
  if (T < 1383) {
    // species 54: c2h5coch2
    species[54] = +5.40138560e-01 + 4.39486258e-02 * T - 2.97002421e-05 * T2 +
                  1.05495313e-08 * T3 - 1.58598769e-12 * T4;
    // species 69: c7h14ooh1-3
    species[69] = +1.11462060e-01 + 8.91595392e-02 * T - 5.67352382e-05 * T2 +
                  1.78890094e-08 * T3 - 2.22260206e-12 * T4;
  } else {
    // species 54: c2h5coch2
    species[54] = +1.32098738e+01 + 1.57866459e-02 * T - 5.50529183e-06 * T2 +
                  8.65870540e-10 * T3 - 5.06913329e-14 * T4;
    // species 69: c7h14ooh1-3
    species[69] = +2.62290222e+01 + 3.24921901e-02 * T - 1.11259758e-05 * T2 +
                  1.72928878e-09 * T3 - 1.00428326e-13 * T4;
  }

  // species with midpoint at T=1384 kelvin
  if (T < 1384) {
    // species 15: c2h6
    species[15] = -1.02528543e+00 + 2.40764754e-02 * T - 1.11893472e-05 * T2 +
                  2.08340901e-09 * T3 - 5.29868616e-14 * T4;
  } else {
    // species 15: c2h6
    species[15] = +5.10683385e+00 + 1.29236361e-02 * T - 4.42527196e-06 * T2 +
                  6.87391726e-10 * T3 - 3.98901732e-14 * T4;
  }

  // species with midpoint at T=1385 kelvin
  if (T < 1385) {
    // species 38: ch3o2
    species[38] = +3.26146906e+00 + 1.00873599e-02 * T - 3.21506184e-06 * T2 +
                  2.09409267e-10 * T3 + 4.18339103e-14 * T4;
    // species 46: pc4h9o2
    species[46] = +9.43636500e-01 + 5.15513163e-02 * T - 3.28284400e-05 * T2 +
                  1.13064860e-08 * T3 - 1.70118606e-12 * T4;
  } else {
    // species 38: ch3o2
    species[38] = +4.95787891e+00 + 7.90728626e-03 * T - 2.68246234e-06 * T2 +
                  4.13891337e-10 * T3 - 2.39007330e-14 * T4;
    // species 46: pc4h9o2
    species[46] = +1.47845448e+01 + 2.15210910e-02 * T - 7.44909017e-06 * T2 +
                  1.16558071e-09 * T3 - 6.79885609e-14 * T4;
  }

  // species with midpoint at T=1386 kelvin
  if (T < 1386) {
    // species 51: nc4ket13
    species[51] = +1.74883461e+00 + 5.86936745e-02 * T - 4.49605895e-05 * T2 +
                  1.83200130e-08 * T3 - 3.11765369e-12 * T4;
    // species 86: nc7ket42
    species[86] = +1.32269738e+00 + 9.45160149e-02 * T - 6.99057179e-05 * T2 +
                  2.79772916e-08 * T3 - 4.74244431e-12 * T4;
  } else {
    // species 51: nc4ket13
    species[51] = +1.86430808e+01 + 1.80940566e-02 * T - 6.33063232e-06 * T2 +
                  9.97860399e-10 * T3 - 5.85076458e-14 * T4;
    // species 86: nc7ket42
    species[86] = +2.76572867e+01 + 3.21567908e-02 * T - 1.11961570e-05 * T2 +
                  1.75895000e-09 * T3 - 1.02891960e-13 * T4;
  }

  // species with midpoint at T=1387 kelvin
  if (T < 1387) {
    // species 44: c4h8ooh1-3o2
    species[44] = +1.22400728e+00 + 7.04994620e-02 * T - 5.66978827e-05 * T2 +
                  2.42627751e-08 * T3 - 4.29715459e-12 * T4;
    // species 84: nc7ket24
    species[84] = +5.29366920e-01 + 9.58173466e-02 * T - 6.96688520e-05 * T2 +
                  2.69540382e-08 * T3 - 4.38728126e-12 * T4;
    // species 85: nc7ket35
    species[85] = +5.29366920e-01 + 9.58173466e-02 * T - 6.96688520e-05 * T2 +
                  2.69540382e-08 * T3 - 4.38728126e-12 * T4;
  } else {
    // species 44: c4h8ooh1-3o2
    species[44] = +2.13244015e+01 + 2.05474775e-02 * T - 7.19076348e-06 * T2 +
                  1.13361536e-09 * T3 - 6.64744383e-14 * T4;
    // species 84: nc7ket24
    species[84] = +2.78330388e+01 + 3.20168096e-02 * T - 1.11508456e-05 * T2 +
                  1.75226159e-09 * T3 - 1.02520451e-13 * T4;
    // species 85: nc7ket35
    species[85] = +2.78330388e+01 + 3.20168096e-02 * T - 1.11508456e-05 * T2 +
                  1.75226159e-09 * T3 - 1.02520451e-13 * T4;
  }

  // species with midpoint at T=1388 kelvin
  if (T < 1388) {
    // species 26: c3h6
    species[26] = -6.05384556e-01 + 2.89107662e-02 * T - 1.54886808e-05 * T2 +
                  3.88814209e-09 * T3 - 3.37890352e-13 * T4;
    // species 65: c7h15o2-1
    species[65] = +2.08885520e-01 + 8.84061706e-02 * T - 5.79861260e-05 * T2 +
                  2.03574689e-08 * T3 - 3.06460336e-12 * T4;
    // species 77: c7h14ooh1-3o2
    species[77] = +8.97180040e-01 + 1.06229796e-01 * T - 8.02770218e-05 * T2 +
                  3.23649093e-08 * T3 - 5.45850472e-12 * T4;
    // species 83: nc7ket13
    species[83] = +1.21629328e+00 + 9.47373762e-02 * T - 6.90473651e-05 * T2 +
                  2.67820400e-08 * T3 - 4.36392181e-12 * T4;
  } else {
    // species 26: c3h6
    species[26] = +7.01595958e+00 + 1.37023634e-02 * T - 4.66249733e-06 * T2 +
                  7.21254402e-10 * T3 - 4.17370126e-14 * T4;
    // species 65: c7h15o2-1
    species[65] = +2.42656556e+01 + 3.50803587e-02 * T - 1.21178801e-05 * T2 +
                  1.89360806e-09 * T3 - 1.10354125e-13 * T4;
    // species 77: c7h14ooh1-3o2
    species[77] = +3.10144349e+01 + 3.40055996e-02 * T - 1.18415856e-05 * T2 +
                  1.86060347e-09 * T3 - 1.08851012e-13 * T4;
    // species 83: nc7ket13
    species[83] = +2.80744507e+01 + 3.17177458e-02 * T - 1.10262646e-05 * T2 +
                  1.73053608e-09 * T3 - 1.01161699e-13 * T4;
  }

  // species with midpoint at T=1389 kelvin
  if (T < 1389) {
    // species 37: c2h5o
    species[37] = -5.05579292e-01 + 2.71774434e-02 * T - 1.65909010e-05 * T2 +
                  5.15204200e-09 * T3 - 6.48496915e-13 * T4;
    // species 55: nc3h7coch2
    species[55] = -4.17007290e-02 + 5.68162532e-02 * T - 3.99112781e-05 * T2 +
                  1.52671514e-08 * T3 - 2.49221047e-12 * T4;
    // species 70: c7h14ooh2-3
    species[70] = -1.50213995e-01 + 9.25107196e-02 * T - 6.25359834e-05 * T2 +
                  2.17880390e-08 * T3 - 3.12720398e-12 * T4;
    // species 71: c7h14ooh2-4
    species[71] = -1.50213995e-01 + 9.25107196e-02 * T - 6.25359834e-05 * T2 +
                  2.17880390e-08 * T3 - 3.12720398e-12 * T4;
    // species 72: c7h14ooh3-2
    species[72] = -1.50213995e-01 + 9.25107196e-02 * T - 6.25359834e-05 * T2 +
                  2.17880390e-08 * T3 - 3.12720398e-12 * T4;
    // species 73: c7h14ooh3-4
    species[73] = -1.50213995e-01 + 9.25107196e-02 * T - 6.25359834e-05 * T2 +
                  2.17880390e-08 * T3 - 3.12720398e-12 * T4;
    // species 74: c7h14ooh3-5
    species[74] = -1.50213995e-01 + 9.25107196e-02 * T - 6.25359834e-05 * T2 +
                  2.17880390e-08 * T3 - 3.12720398e-12 * T4;
    // species 75: c7h14ooh4-2
    species[75] = -1.50213995e-01 + 9.25107196e-02 * T - 6.25359834e-05 * T2 +
                  2.17880390e-08 * T3 - 3.12720398e-12 * T4;
    // species 76: c7h14ooh4-3
    species[76] = -1.50213995e-01 + 9.25107196e-02 * T - 6.25359834e-05 * T2 +
                  2.17880390e-08 * T3 - 3.12720398e-12 * T4;
  } else {
    // species 37: c2h5o
    species[37] = +6.87339772e+00 + 1.13072907e-02 * T - 3.84421421e-06 * T2 +
                  5.94414105e-10 * T3 - 3.43894538e-14 * T4;
    // species 55: nc3h7coch2
    species[55] = +1.51502419e+01 + 2.14093466e-02 * T - 7.36059614e-06 * T2 +
                  1.14656816e-09 * T3 - 6.66712722e-14 * T4;
    // species 70: c7h14ooh2-3
    species[70] = +2.64034778e+01 + 3.27527893e-02 * T - 1.12991770e-05 * T2 +
                  1.76444649e-09 * T3 - 1.02786945e-13 * T4;
    // species 71: c7h14ooh2-4
    species[71] = +2.64034778e+01 + 3.27527893e-02 * T - 1.12991770e-05 * T2 +
                  1.76444649e-09 * T3 - 1.02786945e-13 * T4;
    // species 72: c7h14ooh3-2
    species[72] = +2.64034778e+01 + 3.27527893e-02 * T - 1.12991770e-05 * T2 +
                  1.76444649e-09 * T3 - 1.02786945e-13 * T4;
    // species 73: c7h14ooh3-4
    species[73] = +2.64034778e+01 + 3.27527893e-02 * T - 1.12991770e-05 * T2 +
                  1.76444649e-09 * T3 - 1.02786945e-13 * T4;
    // species 74: c7h14ooh3-5
    species[74] = +2.64034778e+01 + 3.27527893e-02 * T - 1.12991770e-05 * T2 +
                  1.76444649e-09 * T3 - 1.02786945e-13 * T4;
    // species 75: c7h14ooh4-2
    species[75] = +2.64034778e+01 + 3.27527893e-02 * T - 1.12991770e-05 * T2 +
                  1.76444649e-09 * T3 - 1.02786945e-13 * T4;
    // species 76: c7h14ooh4-3
    species[76] = +2.64034778e+01 + 3.27527893e-02 * T - 1.12991770e-05 * T2 +
                  1.76444649e-09 * T3 - 1.02786945e-13 * T4;
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 11: ho2
    species[11] = +2.18310656e+00 + 3.66767950e-03 * T - 9.32385122e-07 * T2 -
                  3.25852919e-10 * T3 + 1.51139912e-13 * T4;
    // species 39: ch3o2h
    species[39] = +2.23442817e+00 + 1.90129767e-02 * T - 1.13386287e-05 * T2 +
                  3.40306653e-09 * T3 - 4.11830222e-13 * T4;
    // species 59: c7h15-1
    species[59] = -1.49957041e+00 + 8.08826467e-02 * T - 5.00532754e-05 * T2 +
                  1.56549308e-08 * T3 - 1.96616227e-12 * T4;
    // species 63: c7h14-2
    species[63] = -2.16533279e+00 + 7.90439806e-02 * T - 4.96101666e-05 * T2 +
                  1.58569009e-08 * T3 - 2.05346433e-12 * T4;
    // species 66: c7h15o2-2
    species[66] = -6.44747083e-01 + 9.42381007e-02 * T - 6.66955106e-05 * T2 +
                  2.54795583e-08 * T3 - 4.13211105e-12 * T4;
    // species 67: c7h15o2-3
    species[67] = -6.44747083e-01 + 9.42381007e-02 * T - 6.66955106e-05 * T2 +
                  2.54795583e-08 * T3 - 4.13211105e-12 * T4;
    // species 68: c7h15o2-4
    species[68] = -6.44747083e-01 + 9.42381007e-02 * T - 6.66955106e-05 * T2 +
                  2.54795583e-08 * T3 - 4.13211105e-12 * T4;
    // species 78: c7h14ooh2-4o2
    species[78] = +4.09124790e-01 + 1.10720834e-01 * T - 8.71178075e-05 * T2 +
                  3.63662749e-08 * T3 - 6.28350689e-12 * T4;
    // species 79: c7h14ooh3-5o2
    species[79] = +4.09124790e-01 + 1.10720834e-01 * T - 8.71178075e-05 * T2 +
                  3.63662749e-08 * T3 - 6.28350689e-12 * T4;
    // species 80: c7h14ooh4-2o2
    species[80] = +4.09124790e-01 + 1.10720834e-01 * T - 8.71178075e-05 * T2 +
                  3.63662749e-08 * T3 - 6.28350689e-12 * T4;
  } else {
    // species 11: ho2
    species[11] = +3.10547423e+00 + 2.38452835e-03 * T - 8.06347989e-07 * T2 +
                  1.24191723e-10 * T3 - 7.16400108e-15 * T4;
    // species 39: ch3o2h
    species[39] = +7.43117091e+00 + 8.06817909e-03 * T - 2.77094921e-06 * T2 +
                  4.31332243e-10 * T3 - 2.50692146e-14 * T4;
    // species 59: c7h15-1
    species[59] = +2.07940709e+01 + 3.26280243e-02 * T - 1.11138244e-05 * T2 +
                  1.72067148e-09 * T3 - 9.96366999e-14 * T4;
    // species 63: c7h14-2
    species[63] = +1.96192047e+01 + 3.14852991e-02 * T - 1.07162057e-05 * T2 +
                  1.65827662e-09 * T3 - 9.59911785e-14 * T4;
    // species 66: c7h15o2-2
    species[66] = +2.50535640e+01 + 3.43831688e-02 * T - 1.18713247e-05 * T2 +
                  1.85450241e-09 * T3 - 1.08052399e-13 * T4;
    // species 67: c7h15o2-3
    species[67] = +2.50535640e+01 + 3.43831688e-02 * T - 1.18713247e-05 * T2 +
                  1.85450241e-09 * T3 - 1.08052399e-13 * T4;
    // species 68: c7h15o2-4
    species[68] = +2.50535640e+01 + 3.43831688e-02 * T - 1.18713247e-05 * T2 +
                  1.85450241e-09 * T3 - 1.08052399e-13 * T4;
    // species 78: c7h14ooh2-4o2
    species[78] = +3.18358296e+01 + 3.32767285e-02 * T - 1.15833285e-05 * T2 +
                  1.81958638e-09 * T3 - 1.06434419e-13 * T4;
    // species 79: c7h14ooh3-5o2
    species[79] = +3.18358296e+01 + 3.32767285e-02 * T - 1.15833285e-05 * T2 +
                  1.81958638e-09 * T3 - 1.06434419e-13 * T4;
    // species 80: c7h14ooh4-2o2
    species[80] = +3.18358296e+01 + 3.32767285e-02 * T - 1.15833285e-05 * T2 +
                  1.81958638e-09 * T3 - 1.06434419e-13 * T4;
  }

  // species with midpoint at T=1391 kelvin
  if (T < 1391) {
    // species 32: ch3coch2
    species[32] = +8.03391870e-01 + 3.01407085e-02 * T - 1.93505552e-05 * T2 +
                  6.38199034e-09 * T3 - 8.66103180e-13 * T4;
    // species 58: nc7h16
    species[58] = -2.26836187e+00 + 8.54355820e-02 * T - 5.25346786e-05 * T2 +
                  1.62945721e-08 * T3 - 2.02394925e-12 * T4;
  } else {
    // species 32: ch3coch2
    species[32] = +9.23039750e+00 + 1.16494161e-02 * T - 4.01005537e-06 * T2 +
                  6.25205246e-10 * T3 - 3.63784362e-14 * T4;
    // species 58: nc7h16
    species[58] = +2.12148969e+01 + 3.47675750e-02 * T - 1.18407129e-05 * T2 +
                  1.83298478e-09 * T3 - 1.06130266e-13 * T4;
  }

  // species with midpoint at T=1392 kelvin
  if (T < 1392) {
    // species 29: c4h7
    species[29] = -1.35050835e+00 + 4.26511243e-02 * T - 2.90979373e-05 * T2 +
                  1.05403914e-08 * T3 - 1.60059854e-12 * T4;
    // species 30: c4h8-1
    species[30] = -1.83137209e+00 + 4.52580978e-02 * T - 2.93658559e-05 * T2 +
                  1.00220436e-08 * T3 - 1.43191680e-12 * T4;
    // species 35: c5h9
    species[35] = -2.38013950e+00 + 5.57608487e-02 * T - 3.70143928e-05 * T2 +
                  1.26883901e-08 * T3 - 1.78538835e-12 * T4;
    // species 36: c5h10-1
    species[36] = -2.06223481e+00 + 5.74218294e-02 * T - 3.74486890e-05 * T2 +
                  1.27364989e-08 * T3 - 1.79609789e-12 * T4;
    // species 64: c7h14-3
    species[64] = -3.03026994e+00 + 8.26324377e-02 * T - 5.45514471e-05 * T2 +
                  1.87705822e-08 * T3 - 2.67571220e-12 * T4;
  } else {
    // species 29: c4h7
    species[29] = +1.02103578e+01 + 1.60483196e-02 * T - 5.46502292e-06 * T2 +
                  8.45941053e-10 * T3 - 4.89772739e-14 * T4;
    // species 30: c4h8-1
    species[30] = +1.03508668e+01 + 1.80617877e-02 * T - 6.16093029e-06 * T2 +
                  9.54652959e-10 * T3 - 5.53089641e-14 * T4;
    // species 35: c5h9
    species[35] = +1.31860454e+01 + 2.07128899e-02 * T - 7.06960617e-06 * T2 +
                  1.09607133e-09 * T3 - 6.35322208e-14 * T4;
    // species 36: c5h10-1
    species[36] = +1.35851539e+01 + 2.24072471e-02 * T - 7.63348025e-06 * T2 +
                  1.18188966e-09 * T3 - 6.84385139e-14 * T4;
    // species 64: c7h14-3
    species[64] = +1.96822750e+01 + 3.15388629e-02 * T - 1.07571215e-05 * T2 +
                  1.66690260e-09 * T3 - 9.65810393e-14 * T4;
  }

  // species with midpoint at T=1393 kelvin
  if (T < 1393) {
    // species 41: c2h3cho
    species[41] = -7.07644838e-01 + 3.54321417e-02 * T - 2.94936324e-05 * T2 +
                  1.28100124e-08 * T3 - 2.26144108e-12 * T4;
  } else {
    // species 41: c2h3cho
    species[41] = +9.41849590e+00 + 9.48963321e-03 * T - 3.29310529e-06 * T2 +
                  5.16279203e-10 * T3 - 3.01587291e-14 * T4;
  }

  // species with midpoint at T=1395 kelvin
  if (T < 1395) {
    // species 31: pc4h9
    species[31] = -1.43777972e+00 + 4.78972364e-02 * T - 3.14023159e-05 * T2 +
                  1.09786472e-08 * T3 - 1.62010664e-12 * T4;
    // species 43: c4h7o
    species[43] = -2.60619192e+00 + 5.58562682e-02 * T - 4.35595767e-05 * T2 +
                  1.70589279e-08 * T3 - 2.65635180e-12 * T4;
    // species 81: c7h14o1-3
    species[81] = -6.50036450e+00 + 1.00155088e-01 * T - 7.29935857e-05 * T2 +
                  2.79344270e-08 * T3 - 4.42245696e-12 * T4;
  } else {
    // species 31: pc4h9
    species[31] = +1.11510082e+01 + 1.94310717e-02 * T - 6.61577950e-06 * T2 +
                  1.02375136e-09 * T3 - 5.92529707e-14 * T4;
    // species 43: c4h7o
    species[43] = +1.43137780e+01 + 1.43427017e-02 * T - 4.81625517e-06 * T2 +
                  7.39574839e-10 * T3 - 4.26140814e-14 * T4;
    // species 81: c7h14o1-3
    species[81] = +2.16918916e+01 + 3.32510472e-02 * T - 1.14457765e-05 * T2 +
                  1.78455535e-09 * T3 - 1.03841112e-13 * T4;
  }

  // species with midpoint at T=1397 kelvin
  if (T < 1397) {
    // species 47: c3h5-a
    species[47] = -1.52913196e+00 + 3.34559100e-02 * T - 2.53401027e-05 * T2 +
                  1.02865754e-08 * T3 - 1.73258340e-12 * T4;
  } else {
    // species 47: c3h5-a
    species[47] = +7.45883958e+00 + 1.12695483e-02 * T - 3.83792864e-06 * T2 +
                  5.94059119e-10 * T3 - 3.43918030e-14 * T4;
  }

  // species with midpoint at T=1398 kelvin
  if (T < 1398) {
    // species 27: c4h6
    species[27] = -2.43095121e+00 + 4.78706062e-02 * T - 4.15446800e-05 * T2 +
                  1.91549552e-08 * T3 - 3.57158507e-12 * T4;
  } else {
    // species 27: c4h6
    species[27] = +1.01633789e+01 + 1.37163965e-02 * T - 4.69715783e-06 * T2 +
                  7.29693836e-10 * T3 - 4.23486203e-14 * T4;
  }

  // species with midpoint at T=1399 kelvin
  if (T < 1399) {
    // species 82: c7h14o2-4
    species[82] = -6.39477206e+00 + 1.01846577e-01 * T - 7.60046236e-05 * T2 +
                  2.96538020e-08 * T3 - 4.74854370e-12 * T4;
  } else {
    // species 82: c7h14o2-4
    species[82] = +2.22692731e+01 + 3.25585391e-02 * T - 1.11624906e-05 * T2 +
                  1.73573658e-09 * T3 - 1.00813215e-13 * T4;
  }

  // species with midpoint at T=1400 kelvin
  if (T < 1400) {
    // species 25: c3h4-a
    species[25] = +1.53983100e+00 + 1.63343700e-02 * T - 1.76495000e-06 * T2 -
                  4.64736500e-09 * T3 + 1.72913100e-12 * T4;
  } else {
    // species 25: c3h4-a
    species[25] = +8.77625600e+00 + 5.30213800e-03 * T - 3.70111800e-07 * T2 -
                  3.02638600e-10 * T3 + 5.08958100e-14 * T4;
  }

  // species with midpoint at T=1402 kelvin
  if (T < 1402) {
    // species 40: c2h3co
    species[40] = +3.62420130e-01 + 3.15273972e-02 * T - 3.00218935e-05 * T2 +
                  1.48167112e-08 * T3 - 2.87971530e-12 * T4;
  } else {
    // species 40: c2h3co
    species[40] = +8.37467676e+00 + 7.91296900e-03 * T - 2.67198280e-06 * T2 +
                  4.11115430e-10 * T3 - 2.36978981e-14 * T4;
  }
}

// compute Cp/R at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
cp_R(amrex::Real* species, const amrex::Real T)
{
  const amrex::Real T2 = T * T;
  const amrex::Real T3 = T * T * T;
  const amrex::Real T4 = T * T * T * T;

  // species with no change across T
  // species 0: h
  species[0] = +2.50104422e+00;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 1: h2
    species[1] = +3.29812400e+00 + 8.24944200e-04 * T - 8.14301500e-07 * T2 -
                 9.47543400e-11 * T3 + 4.13487200e-13 * T4;
    // species 2: o
    species[2] = +2.94642900e+00 - 1.63816600e-03 * T + 2.42103200e-06 * T2 -
                 1.60284300e-09 * T3 + 3.89069600e-13 * T4;
    // species 3: o2
    species[3] = +3.21293600e+00 + 1.12748600e-03 * T - 5.75615000e-07 * T2 +
                 1.31387700e-09 * T3 - 8.76855400e-13 * T4;
    // species 5: h2o
    species[5] = +3.38684200e+00 + 3.47498200e-03 * T - 6.35469600e-06 * T2 +
                 6.96858100e-09 * T3 - 2.50658800e-12 * T4;
    // species 6: co
    species[6] = +3.26245200e+00 + 1.51194100e-03 * T - 3.88175500e-06 * T2 +
                 5.58194400e-09 * T3 - 2.47495100e-12 * T4;
    // species 7: hco
    species[7] = +2.89833000e+00 + 6.19914700e-03 * T - 9.62308400e-06 * T2 +
                 1.08982500e-08 * T3 - 4.57488500e-12 * T4;
    // species 8: co2
    species[8] = +2.27572500e+00 + 9.92207200e-03 * T - 1.04091100e-05 * T2 +
                 6.86668700e-09 * T3 - 2.11728000e-12 * T4;
    // species 9: ch3
    species[9] = +2.43044300e+00 + 1.11241000e-02 * T - 1.68022000e-05 * T2 +
                 1.62182900e-08 * T3 - 5.86495300e-12 * T4;
    // species 10: ch4
    species[10] = +7.78741500e-01 + 1.74766800e-02 * T - 2.78340900e-05 * T2 +
                  3.04970800e-08 * T3 - 1.22393100e-11 * T4;
    // species 12: h2o2
    species[12] = +3.38875400e+00 + 6.56922600e-03 * T - 1.48501300e-07 * T2 -
                  4.62580600e-09 * T3 + 2.47151500e-12 * T4;
    // species 13: ch2o
    species[13] = +1.65273100e+00 + 1.26314400e-02 * T - 1.88816800e-05 * T2 +
                  2.05003100e-08 * T3 - 8.41323700e-12 * T4;
    // species 14: ch3o
    species[14] = +2.10620400e+00 + 7.21659500e-03 * T + 5.33847200e-06 * T2 -
                  7.37763600e-09 * T3 + 2.07561100e-12 * T4;
    // species 16: c2h4
    species[16] = -8.61488000e-01 + 2.79616300e-02 * T - 3.38867700e-05 * T2 +
                  2.78515200e-08 * T3 - 9.73787900e-12 * T4;
    // species 17: c2h5
    species[17] = +2.69070200e+00 + 8.71913300e-03 * T + 4.41983900e-06 * T2 +
                  9.33870300e-10 * T3 - 3.92777300e-12 * T4;
    // species 18: c2h2
    species[18] = +2.01356200e+00 + 1.51904500e-02 * T - 1.61631900e-05 * T2 +
                  9.07899200e-09 * T3 - 1.91274600e-12 * T4;
    // species 19: c2h3
    species[19] = +2.45927600e+00 + 7.37147600e-03 * T + 2.10987300e-06 * T2 -
                  1.32164200e-09 * T3 - 1.18478400e-12 * T4;
    // species 20: ch2co
    species[20] = +2.97497100e+00 + 1.21187100e-02 * T - 2.34504600e-06 * T2 -
                  6.46668500e-09 * T3 + 3.90564900e-12 * T4;
    // species 21: hcco
    species[21] = +5.04796500e+00 + 4.45347800e-03 * T + 2.26828300e-07 * T2 -
                  1.48209500e-09 * T3 + 2.25074200e-13 * T4;
    // species 22: ch3co
    species[22] = +3.12527800e+00 + 9.77822000e-03 * T + 4.52144800e-06 * T2 -
                  9.00946200e-09 * T3 + 3.19371800e-12 * T4;
    // species 23: ch2cho
    species[23] = +3.40906200e+00 + 1.07385700e-02 * T + 1.89149200e-06 * T2 -
                  7.15858300e-09 * T3 + 2.86738500e-12 * T4;
    // species 24: ch3cho
    species[24] = +2.50569500e+00 + 1.33699100e-02 * T + 4.67195300e-06 * T2 -
                  1.12814000e-08 * T3 + 4.26356600e-12 * T4;
    // species 28: nc3h7
    species[28] = +1.92253700e+00 + 2.47892700e-02 * T + 1.81024900e-06 * T2 -
                  1.78326600e-08 * T3 + 8.58299600e-12 * T4;
    // species 48: c3h3
    species[48] = +4.75420000e+00 + 1.10802800e-02 * T + 2.79332300e-07 * T2 -
                  5.47921200e-09 * T3 + 1.94962900e-12 * T4;
    // species 49: c3h2
    species[49] = +3.16671400e+00 + 2.48257200e-02 * T - 4.59163700e-05 * T2 +
                  4.26801900e-08 * T3 - 1.48215200e-11 * T4;
    // species 50: ch2(s)
    species[50] = +3.97126500e+00 - 1.69908900e-04 * T + 1.02536900e-06 * T2 +
                  2.49255100e-09 * T3 - 1.98126600e-12 * T4;
    // species 87: n2
    species[87] = +3.29867700e+00 + 1.40824000e-03 * T - 3.96322200e-06 * T2 +
                  5.64151500e-09 * T3 - 2.44485500e-12 * T4;
  } else {
    // species 1: h2
    species[1] = +2.99142300e+00 + 7.00064400e-04 * T - 5.63382900e-08 * T2 -
                 9.23157800e-12 * T3 + 1.58275200e-15 * T4;
    // species 2: o
    species[2] = +2.54206000e+00 - 2.75506200e-05 * T - 3.10280300e-09 * T2 +
                 4.55106700e-12 * T3 - 4.36805200e-16 * T4;
    // species 3: o2
    species[3] = +3.69757800e+00 + 6.13519700e-04 * T - 1.25884200e-07 * T2 +
                 1.77528100e-11 * T3 - 1.13643500e-15 * T4;
    // species 5: h2o
    species[5] = +2.67214600e+00 + 3.05629300e-03 * T - 8.73026000e-07 * T2 +
                 1.20099600e-10 * T3 - 6.39161800e-15 * T4;
    // species 6: co
    species[6] = +3.02507800e+00 + 1.44268900e-03 * T - 5.63082800e-07 * T2 +
                 1.01858100e-10 * T3 - 6.91095200e-15 * T4;
    // species 7: hco
    species[7] = +3.55727100e+00 + 3.34557300e-03 * T - 1.33500600e-06 * T2 +
                 2.47057300e-10 * T3 - 1.71385100e-14 * T4;
    // species 8: co2
    species[8] = +4.45362300e+00 + 3.14016900e-03 * T - 1.27841100e-06 * T2 +
                 2.39399700e-10 * T3 - 1.66903300e-14 * T4;
    // species 9: ch3
    species[9] = +2.84405200e+00 + 6.13797400e-03 * T - 2.23034500e-06 * T2 +
                 3.78516100e-10 * T3 - 2.45215900e-14 * T4;
    // species 10: ch4
    species[10] = +1.68347900e+00 + 1.02372400e-02 * T - 3.87512900e-06 * T2 +
                  6.78558500e-10 * T3 - 4.50342300e-14 * T4;
    // species 12: h2o2
    species[12] = +4.57316700e+00 + 4.33613600e-03 * T - 1.47468900e-06 * T2 +
                  2.34890400e-10 * T3 - 1.43165400e-14 * T4;
    // species 13: ch2o
    species[13] = +2.99560600e+00 + 6.68132100e-03 * T - 2.62895500e-06 * T2 +
                  4.73715300e-10 * T3 - 3.21251700e-14 * T4;
    // species 14: ch3o
    species[14] = +3.77080000e+00 + 7.87149700e-03 * T - 2.65638400e-06 * T2 +
                  3.94443100e-10 * T3 - 2.11261600e-14 * T4;
    // species 16: c2h4
    species[16] = +3.52841900e+00 + 1.14851800e-02 * T - 4.41838500e-06 * T2 +
                  7.84460100e-10 * T3 - 5.26684800e-14 * T4;
    // species 17: c2h5
    species[17] = +7.19048000e+00 + 6.48407700e-03 * T - 6.42806500e-07 * T2 -
                  2.34787900e-10 * T3 + 3.88087700e-14 * T4;
    // species 18: c2h2
    species[18] = +4.43677000e+00 + 5.37603900e-03 * T - 1.91281700e-06 * T2 +
                  3.28637900e-10 * T3 - 2.15671000e-14 * T4;
    // species 19: c2h3
    species[19] = +5.93346800e+00 + 4.01774600e-03 * T - 3.96674000e-07 * T2 -
                  1.44126700e-10 * T3 + 2.37864400e-14 * T4;
    // species 20: ch2co
    species[20] = +6.03881700e+00 + 5.80484000e-03 * T - 1.92095400e-06 * T2 +
                  2.79448500e-10 * T3 - 1.45886800e-14 * T4;
    // species 21: hcco
    species[21] = +6.75807300e+00 + 2.00040000e-03 * T - 2.02760700e-07 * T2 -
                  1.04113200e-10 * T3 + 1.96516500e-14 * T4;
    // species 22: ch3co
    species[22] = +5.61227900e+00 + 8.44988600e-03 * T - 2.85414700e-06 * T2 +
                  4.23837600e-10 * T3 - 2.26840400e-14 * T4;
    // species 23: ch2cho
    species[23] = +5.97567000e+00 + 8.13059100e-03 * T - 2.74362400e-06 * T2 +
                  4.07030400e-10 * T3 - 2.17601700e-14 * T4;
    // species 24: ch3cho
    species[24] = +5.86865000e+00 + 1.07942400e-02 * T - 3.64553000e-06 * T2 +
                  5.41291200e-10 * T3 - 2.89684400e-14 * T4;
    // species 28: nc3h7
    species[28] = +7.97829100e+00 + 1.57611300e-02 * T - 5.17324300e-06 * T2 +
                  7.44389200e-10 * T3 - 3.82497800e-14 * T4;
    // species 48: c3h3
    species[48] = +8.83104700e+00 + 4.35719500e-03 * T - 4.10906700e-07 * T2 -
                  2.36872300e-10 * T3 + 4.37652000e-14 * T4;
    // species 49: c3h2
    species[49] = +7.67098100e+00 + 2.74874900e-03 * T - 4.37094300e-07 * T2 -
                  6.45559900e-11 * T3 + 1.66388700e-14 * T4;
    // species 50: ch2(s)
    species[50] = +3.55288900e+00 + 2.06678800e-03 * T - 1.91411600e-07 * T2 -
                  1.10467300e-10 * T3 + 2.02135000e-14 * T4;
    // species 87: n2
    species[87] = +2.92664000e+00 + 1.48797700e-03 * T - 5.68476100e-07 * T2 +
                  1.00970400e-10 * T3 - 6.75335100e-15 * T4;
  }

  // species with midpoint at T=1357 kelvin
  if (T < 1357) {
    // species 4: oh
    species[4] = +3.43586219e+00 + 2.02235804e-04 * T - 1.13546412e-07 * T2 +
                 2.42445149e-10 * T3 - 7.43651031e-14 * T4;
  } else {
    // species 4: oh
    species[4] = +2.62599754e+00 + 1.31992406e-03 * T - 3.59724670e-07 * T2 +
                 4.25630800e-11 * T3 - 1.82048016e-15 * T4;
  }

  // species with midpoint at T=1373 kelvin
  if (T < 1373) {
    // species 34: c2h5co
    species[34] = +2.93313946e+00 + 2.47427911e-02 * T - 1.21222003e-05 * T2 +
                  2.34701048e-09 * T3 - 5.26843338e-14 * T4;
  } else {
    // species 34: c2h5co
    species[34] = +9.87881997e+00 + 1.17515676e-02 * T - 4.00614923e-06 * T2 +
                  6.20850617e-10 * T3 - 3.59835225e-14 * T4;
  }

  // species with midpoint at T=1377 kelvin
  if (T < 1377) {
    // species 45: c4h8ooh1-3
    species[45] = +1.94106276e+00 + 5.18789351e-02 * T - 3.10411683e-05 * T2 +
                  8.63568881e-09 * T3 - 8.42841994e-13 * T4;
  } else {
    // species 45: c4h8ooh1-3
    species[45] = +1.76442170e+01 + 1.91706536e-02 * T - 6.57168641e-06 * T2 +
                  1.02246571e-09 * T3 - 5.94304735e-14 * T4;
  }

  // species with midpoint at T=1378 kelvin
  if (T < 1378) {
    // species 33: c2h5cho
    species[33] = +2.16308444e+00 + 2.95501264e-02 * T - 1.52446252e-05 * T2 +
                  3.49503947e-09 * T3 - 2.38896627e-13 * T4;
    // species 52: nc3h7cho
    species[52] = +1.87415959e+00 + 4.19240315e-02 * T - 2.35148779e-05 * T2 +
                  6.26913673e-09 * T3 - 6.09443908e-13 * T4;
  } else {
    // species 33: c2h5cho
    species[33] = +1.02427695e+01 + 1.39641989e-02 * T - 4.76248001e-06 * T2 +
                  7.38105706e-10 * T3 - 4.27759503e-14 * T4;
    // species 52: nc3h7cho
    species[52] = +1.35988068e+01 + 1.81652474e-02 * T - 6.17844458e-06 * T2 +
                  9.55980208e-10 * T3 - 5.53442958e-14 * T4;
  }

  // species with midpoint at T=1380 kelvin
  if (T < 1380) {
    // species 42: c3h5o
    species[42] = +1.19822582e+00 + 3.05579837e-02 * T - 1.80630276e-05 * T2 +
                  4.86150033e-09 * T3 - 4.19854562e-13 * T4;
    // species 53: nc3h7co
    species[53] = +2.67256826e+00 + 3.71198825e-02 * T - 2.06862859e-05 * T2 +
                  5.48873888e-09 * T3 - 5.35864183e-13 * T4;
  } else {
    // species 42: c3h5o
    species[42] = +1.02551752e+01 + 1.14983720e-02 * T - 3.84645659e-06 * T2 +
                  5.88910346e-10 * T3 - 3.38557923e-14 * T4;
    // species 53: nc3h7co
    species[53] = +1.30026331e+01 + 1.63104877e-02 * T - 5.57642899e-06 * T2 +
                  8.65670629e-10 * T3 - 5.02255667e-14 * T4;
  }

  // species with midpoint at T=1381 kelvin
  if (T < 1381) {
    // species 56: nc4h9cho
    species[56] = +1.59663472e+00 + 5.43541416e-02 * T - 3.21020651e-05 * T2 +
                  9.35773559e-09 * T3 - 1.06688932e-12 * T4;
  } else {
    // species 56: nc4h9cho
    species[56] = +1.67965163e+01 + 2.25684519e-02 * T - 7.67631588e-06 * T2 +
                  1.18769369e-09 * T3 - 6.87545554e-14 * T4;
  }

  // species with midpoint at T=1382 kelvin
  if (T < 1382) {
    // species 57: nc4h9co
    species[57] = +2.43530238e+00 + 4.93682376e-02 * T - 2.89883082e-05 * T2 +
                  8.42863812e-09 * T3 - 9.68287172e-13 * T4;
    // species 60: c7h15-2
    species[60] = -3.79155767e-02 + 7.56726570e-02 * T - 4.07473634e-05 * T2 +
                  9.32678943e-09 * T3 - 4.92360745e-13 * T4;
    // species 61: c7h15-3
    species[61] = -3.79155767e-02 + 7.56726570e-02 * T - 4.07473634e-05 * T2 +
                  9.32678943e-09 * T3 - 4.92360745e-13 * T4;
    // species 62: c7h15-4
    species[62] = -3.79155767e-02 + 7.56726570e-02 * T - 4.07473634e-05 * T2 +
                  9.32678943e-09 * T3 - 4.92360745e-13 * T4;
  } else {
    // species 57: nc4h9co
    species[57] = +1.61782939e+01 + 2.07991920e-02 * T - 7.11787892e-06 * T2 +
                  1.10559975e-09 * T3 - 6.41697187e-14 * T4;
    // species 60: c7h15-2
    species[60] = +2.16368842e+01 + 3.23324804e-02 * T - 1.09273807e-05 * T2 +
                  1.68357060e-09 * T3 - 9.71774091e-14 * T4;
    // species 61: c7h15-3
    species[61] = +2.16368842e+01 + 3.23324804e-02 * T - 1.09273807e-05 * T2 +
                  1.68357060e-09 * T3 - 9.71774091e-14 * T4;
    // species 62: c7h15-4
    species[62] = +2.16368842e+01 + 3.23324804e-02 * T - 1.09273807e-05 * T2 +
                  1.68357060e-09 * T3 - 9.71774091e-14 * T4;
  }

  // species with midpoint at T=1383 kelvin
  if (T < 1383) {
    // species 54: c2h5coch2
    species[54] = +1.54013856e+00 + 4.39486258e-02 * T - 2.97002421e-05 * T2 +
                  1.05495313e-08 * T3 - 1.58598769e-12 * T4;
    // species 69: c7h14ooh1-3
    species[69] = +1.11146206e+00 + 8.91595392e-02 * T - 5.67352382e-05 * T2 +
                  1.78890094e-08 * T3 - 2.22260206e-12 * T4;
  } else {
    // species 54: c2h5coch2
    species[54] = +1.42098738e+01 + 1.57866459e-02 * T - 5.50529183e-06 * T2 +
                  8.65870540e-10 * T3 - 5.06913329e-14 * T4;
    // species 69: c7h14ooh1-3
    species[69] = +2.72290222e+01 + 3.24921901e-02 * T - 1.11259758e-05 * T2 +
                  1.72928878e-09 * T3 - 1.00428326e-13 * T4;
  }

  // species with midpoint at T=1384 kelvin
  if (T < 1384) {
    // species 15: c2h6
    species[15] = -2.52854344e-02 + 2.40764754e-02 * T - 1.11893472e-05 * T2 +
                  2.08340901e-09 * T3 - 5.29868616e-14 * T4;
  } else {
    // species 15: c2h6
    species[15] = +6.10683385e+00 + 1.29236361e-02 * T - 4.42527196e-06 * T2 +
                  6.87391726e-10 * T3 - 3.98901732e-14 * T4;
  }

  // species with midpoint at T=1385 kelvin
  if (T < 1385) {
    // species 38: ch3o2
    species[38] = +4.26146906e+00 + 1.00873599e-02 * T - 3.21506184e-06 * T2 +
                  2.09409267e-10 * T3 + 4.18339103e-14 * T4;
    // species 46: pc4h9o2
    species[46] = +1.94363650e+00 + 5.15513163e-02 * T - 3.28284400e-05 * T2 +
                  1.13064860e-08 * T3 - 1.70118606e-12 * T4;
  } else {
    // species 38: ch3o2
    species[38] = +5.95787891e+00 + 7.90728626e-03 * T - 2.68246234e-06 * T2 +
                  4.13891337e-10 * T3 - 2.39007330e-14 * T4;
    // species 46: pc4h9o2
    species[46] = +1.57845448e+01 + 2.15210910e-02 * T - 7.44909017e-06 * T2 +
                  1.16558071e-09 * T3 - 6.79885609e-14 * T4;
  }

  // species with midpoint at T=1386 kelvin
  if (T < 1386) {
    // species 51: nc4ket13
    species[51] = +2.74883461e+00 + 5.86936745e-02 * T - 4.49605895e-05 * T2 +
                  1.83200130e-08 * T3 - 3.11765369e-12 * T4;
    // species 86: nc7ket42
    species[86] = +2.32269738e+00 + 9.45160149e-02 * T - 6.99057179e-05 * T2 +
                  2.79772916e-08 * T3 - 4.74244431e-12 * T4;
  } else {
    // species 51: nc4ket13
    species[51] = +1.96430808e+01 + 1.80940566e-02 * T - 6.33063232e-06 * T2 +
                  9.97860399e-10 * T3 - 5.85076458e-14 * T4;
    // species 86: nc7ket42
    species[86] = +2.86572867e+01 + 3.21567908e-02 * T - 1.11961570e-05 * T2 +
                  1.75895000e-09 * T3 - 1.02891960e-13 * T4;
  }

  // species with midpoint at T=1387 kelvin
  if (T < 1387) {
    // species 44: c4h8ooh1-3o2
    species[44] = +2.22400728e+00 + 7.04994620e-02 * T - 5.66978827e-05 * T2 +
                  2.42627751e-08 * T3 - 4.29715459e-12 * T4;
    // species 84: nc7ket24
    species[84] = +1.52936692e+00 + 9.58173466e-02 * T - 6.96688520e-05 * T2 +
                  2.69540382e-08 * T3 - 4.38728126e-12 * T4;
    // species 85: nc7ket35
    species[85] = +1.52936692e+00 + 9.58173466e-02 * T - 6.96688520e-05 * T2 +
                  2.69540382e-08 * T3 - 4.38728126e-12 * T4;
  } else {
    // species 44: c4h8ooh1-3o2
    species[44] = +2.23244015e+01 + 2.05474775e-02 * T - 7.19076348e-06 * T2 +
                  1.13361536e-09 * T3 - 6.64744383e-14 * T4;
    // species 84: nc7ket24
    species[84] = +2.88330388e+01 + 3.20168096e-02 * T - 1.11508456e-05 * T2 +
                  1.75226159e-09 * T3 - 1.02520451e-13 * T4;
    // species 85: nc7ket35
    species[85] = +2.88330388e+01 + 3.20168096e-02 * T - 1.11508456e-05 * T2 +
                  1.75226159e-09 * T3 - 1.02520451e-13 * T4;
  }

  // species with midpoint at T=1388 kelvin
  if (T < 1388) {
    // species 26: c3h6
    species[26] = +3.94615444e-01 + 2.89107662e-02 * T - 1.54886808e-05 * T2 +
                  3.88814209e-09 * T3 - 3.37890352e-13 * T4;
    // species 65: c7h15o2-1
    species[65] = +1.20888552e+00 + 8.84061706e-02 * T - 5.79861260e-05 * T2 +
                  2.03574689e-08 * T3 - 3.06460336e-12 * T4;
    // species 77: c7h14ooh1-3o2
    species[77] = +1.89718004e+00 + 1.06229796e-01 * T - 8.02770218e-05 * T2 +
                  3.23649093e-08 * T3 - 5.45850472e-12 * T4;
    // species 83: nc7ket13
    species[83] = +2.21629328e+00 + 9.47373762e-02 * T - 6.90473651e-05 * T2 +
                  2.67820400e-08 * T3 - 4.36392181e-12 * T4;
  } else {
    // species 26: c3h6
    species[26] = +8.01595958e+00 + 1.37023634e-02 * T - 4.66249733e-06 * T2 +
                  7.21254402e-10 * T3 - 4.17370126e-14 * T4;
    // species 65: c7h15o2-1
    species[65] = +2.52656556e+01 + 3.50803587e-02 * T - 1.21178801e-05 * T2 +
                  1.89360806e-09 * T3 - 1.10354125e-13 * T4;
    // species 77: c7h14ooh1-3o2
    species[77] = +3.20144349e+01 + 3.40055996e-02 * T - 1.18415856e-05 * T2 +
                  1.86060347e-09 * T3 - 1.08851012e-13 * T4;
    // species 83: nc7ket13
    species[83] = +2.90744507e+01 + 3.17177458e-02 * T - 1.10262646e-05 * T2 +
                  1.73053608e-09 * T3 - 1.01161699e-13 * T4;
  }

  // species with midpoint at T=1389 kelvin
  if (T < 1389) {
    // species 37: c2h5o
    species[37] = +4.94420708e-01 + 2.71774434e-02 * T - 1.65909010e-05 * T2 +
                  5.15204200e-09 * T3 - 6.48496915e-13 * T4;
    // species 55: nc3h7coch2
    species[55] = +9.58299271e-01 + 5.68162532e-02 * T - 3.99112781e-05 * T2 +
                  1.52671514e-08 * T3 - 2.49221047e-12 * T4;
    // species 70: c7h14ooh2-3
    species[70] = +8.49786005e-01 + 9.25107196e-02 * T - 6.25359834e-05 * T2 +
                  2.17880390e-08 * T3 - 3.12720398e-12 * T4;
    // species 71: c7h14ooh2-4
    species[71] = +8.49786005e-01 + 9.25107196e-02 * T - 6.25359834e-05 * T2 +
                  2.17880390e-08 * T3 - 3.12720398e-12 * T4;
    // species 72: c7h14ooh3-2
    species[72] = +8.49786005e-01 + 9.25107196e-02 * T - 6.25359834e-05 * T2 +
                  2.17880390e-08 * T3 - 3.12720398e-12 * T4;
    // species 73: c7h14ooh3-4
    species[73] = +8.49786005e-01 + 9.25107196e-02 * T - 6.25359834e-05 * T2 +
                  2.17880390e-08 * T3 - 3.12720398e-12 * T4;
    // species 74: c7h14ooh3-5
    species[74] = +8.49786005e-01 + 9.25107196e-02 * T - 6.25359834e-05 * T2 +
                  2.17880390e-08 * T3 - 3.12720398e-12 * T4;
    // species 75: c7h14ooh4-2
    species[75] = +8.49786005e-01 + 9.25107196e-02 * T - 6.25359834e-05 * T2 +
                  2.17880390e-08 * T3 - 3.12720398e-12 * T4;
    // species 76: c7h14ooh4-3
    species[76] = +8.49786005e-01 + 9.25107196e-02 * T - 6.25359834e-05 * T2 +
                  2.17880390e-08 * T3 - 3.12720398e-12 * T4;
  } else {
    // species 37: c2h5o
    species[37] = +7.87339772e+00 + 1.13072907e-02 * T - 3.84421421e-06 * T2 +
                  5.94414105e-10 * T3 - 3.43894538e-14 * T4;
    // species 55: nc3h7coch2
    species[55] = +1.61502419e+01 + 2.14093466e-02 * T - 7.36059614e-06 * T2 +
                  1.14656816e-09 * T3 - 6.66712722e-14 * T4;
    // species 70: c7h14ooh2-3
    species[70] = +2.74034778e+01 + 3.27527893e-02 * T - 1.12991770e-05 * T2 +
                  1.76444649e-09 * T3 - 1.02786945e-13 * T4;
    // species 71: c7h14ooh2-4
    species[71] = +2.74034778e+01 + 3.27527893e-02 * T - 1.12991770e-05 * T2 +
                  1.76444649e-09 * T3 - 1.02786945e-13 * T4;
    // species 72: c7h14ooh3-2
    species[72] = +2.74034778e+01 + 3.27527893e-02 * T - 1.12991770e-05 * T2 +
                  1.76444649e-09 * T3 - 1.02786945e-13 * T4;
    // species 73: c7h14ooh3-4
    species[73] = +2.74034778e+01 + 3.27527893e-02 * T - 1.12991770e-05 * T2 +
                  1.76444649e-09 * T3 - 1.02786945e-13 * T4;
    // species 74: c7h14ooh3-5
    species[74] = +2.74034778e+01 + 3.27527893e-02 * T - 1.12991770e-05 * T2 +
                  1.76444649e-09 * T3 - 1.02786945e-13 * T4;
    // species 75: c7h14ooh4-2
    species[75] = +2.74034778e+01 + 3.27527893e-02 * T - 1.12991770e-05 * T2 +
                  1.76444649e-09 * T3 - 1.02786945e-13 * T4;
    // species 76: c7h14ooh4-3
    species[76] = +2.74034778e+01 + 3.27527893e-02 * T - 1.12991770e-05 * T2 +
                  1.76444649e-09 * T3 - 1.02786945e-13 * T4;
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 11: ho2
    species[11] = +3.18310656e+00 + 3.66767950e-03 * T - 9.32385122e-07 * T2 -
                  3.25852919e-10 * T3 + 1.51139912e-13 * T4;
    // species 39: ch3o2h
    species[39] = +3.23442817e+00 + 1.90129767e-02 * T - 1.13386287e-05 * T2 +
                  3.40306653e-09 * T3 - 4.11830222e-13 * T4;
    // species 59: c7h15-1
    species[59] = -4.99570406e-01 + 8.08826467e-02 * T - 5.00532754e-05 * T2 +
                  1.56549308e-08 * T3 - 1.96616227e-12 * T4;
    // species 63: c7h14-2
    species[63] = -1.16533279e+00 + 7.90439806e-02 * T - 4.96101666e-05 * T2 +
                  1.58569009e-08 * T3 - 2.05346433e-12 * T4;
    // species 66: c7h15o2-2
    species[66] = +3.55252917e-01 + 9.42381007e-02 * T - 6.66955106e-05 * T2 +
                  2.54795583e-08 * T3 - 4.13211105e-12 * T4;
    // species 67: c7h15o2-3
    species[67] = +3.55252917e-01 + 9.42381007e-02 * T - 6.66955106e-05 * T2 +
                  2.54795583e-08 * T3 - 4.13211105e-12 * T4;
    // species 68: c7h15o2-4
    species[68] = +3.55252917e-01 + 9.42381007e-02 * T - 6.66955106e-05 * T2 +
                  2.54795583e-08 * T3 - 4.13211105e-12 * T4;
    // species 78: c7h14ooh2-4o2
    species[78] = +1.40912479e+00 + 1.10720834e-01 * T - 8.71178075e-05 * T2 +
                  3.63662749e-08 * T3 - 6.28350689e-12 * T4;
    // species 79: c7h14ooh3-5o2
    species[79] = +1.40912479e+00 + 1.10720834e-01 * T - 8.71178075e-05 * T2 +
                  3.63662749e-08 * T3 - 6.28350689e-12 * T4;
    // species 80: c7h14ooh4-2o2
    species[80] = +1.40912479e+00 + 1.10720834e-01 * T - 8.71178075e-05 * T2 +
                  3.63662749e-08 * T3 - 6.28350689e-12 * T4;
  } else {
    // species 11: ho2
    species[11] = +4.10547423e+00 + 2.38452835e-03 * T - 8.06347989e-07 * T2 +
                  1.24191723e-10 * T3 - 7.16400108e-15 * T4;
    // species 39: ch3o2h
    species[39] = +8.43117091e+00 + 8.06817909e-03 * T - 2.77094921e-06 * T2 +
                  4.31332243e-10 * T3 - 2.50692146e-14 * T4;
    // species 59: c7h15-1
    species[59] = +2.17940709e+01 + 3.26280243e-02 * T - 1.11138244e-05 * T2 +
                  1.72067148e-09 * T3 - 9.96366999e-14 * T4;
    // species 63: c7h14-2
    species[63] = +2.06192047e+01 + 3.14852991e-02 * T - 1.07162057e-05 * T2 +
                  1.65827662e-09 * T3 - 9.59911785e-14 * T4;
    // species 66: c7h15o2-2
    species[66] = +2.60535640e+01 + 3.43831688e-02 * T - 1.18713247e-05 * T2 +
                  1.85450241e-09 * T3 - 1.08052399e-13 * T4;
    // species 67: c7h15o2-3
    species[67] = +2.60535640e+01 + 3.43831688e-02 * T - 1.18713247e-05 * T2 +
                  1.85450241e-09 * T3 - 1.08052399e-13 * T4;
    // species 68: c7h15o2-4
    species[68] = +2.60535640e+01 + 3.43831688e-02 * T - 1.18713247e-05 * T2 +
                  1.85450241e-09 * T3 - 1.08052399e-13 * T4;
    // species 78: c7h14ooh2-4o2
    species[78] = +3.28358296e+01 + 3.32767285e-02 * T - 1.15833285e-05 * T2 +
                  1.81958638e-09 * T3 - 1.06434419e-13 * T4;
    // species 79: c7h14ooh3-5o2
    species[79] = +3.28358296e+01 + 3.32767285e-02 * T - 1.15833285e-05 * T2 +
                  1.81958638e-09 * T3 - 1.06434419e-13 * T4;
    // species 80: c7h14ooh4-2o2
    species[80] = +3.28358296e+01 + 3.32767285e-02 * T - 1.15833285e-05 * T2 +
                  1.81958638e-09 * T3 - 1.06434419e-13 * T4;
  }

  // species with midpoint at T=1391 kelvin
  if (T < 1391) {
    // species 32: ch3coch2
    species[32] = +1.80339187e+00 + 3.01407085e-02 * T - 1.93505552e-05 * T2 +
                  6.38199034e-09 * T3 - 8.66103180e-13 * T4;
    // species 58: nc7h16
    species[58] = -1.26836187e+00 + 8.54355820e-02 * T - 5.25346786e-05 * T2 +
                  1.62945721e-08 * T3 - 2.02394925e-12 * T4;
  } else {
    // species 32: ch3coch2
    species[32] = +1.02303975e+01 + 1.16494161e-02 * T - 4.01005537e-06 * T2 +
                  6.25205246e-10 * T3 - 3.63784362e-14 * T4;
    // species 58: nc7h16
    species[58] = +2.22148969e+01 + 3.47675750e-02 * T - 1.18407129e-05 * T2 +
                  1.83298478e-09 * T3 - 1.06130266e-13 * T4;
  }

  // species with midpoint at T=1392 kelvin
  if (T < 1392) {
    // species 29: c4h7
    species[29] = -3.50508352e-01 + 4.26511243e-02 * T - 2.90979373e-05 * T2 +
                  1.05403914e-08 * T3 - 1.60059854e-12 * T4;
    // species 30: c4h8-1
    species[30] = -8.31372089e-01 + 4.52580978e-02 * T - 2.93658559e-05 * T2 +
                  1.00220436e-08 * T3 - 1.43191680e-12 * T4;
    // species 35: c5h9
    species[35] = -1.38013950e+00 + 5.57608487e-02 * T - 3.70143928e-05 * T2 +
                  1.26883901e-08 * T3 - 1.78538835e-12 * T4;
    // species 36: c5h10-1
    species[36] = -1.06223481e+00 + 5.74218294e-02 * T - 3.74486890e-05 * T2 +
                  1.27364989e-08 * T3 - 1.79609789e-12 * T4;
    // species 64: c7h14-3
    species[64] = -2.03026994e+00 + 8.26324377e-02 * T - 5.45514471e-05 * T2 +
                  1.87705822e-08 * T3 - 2.67571220e-12 * T4;
  } else {
    // species 29: c4h7
    species[29] = +1.12103578e+01 + 1.60483196e-02 * T - 5.46502292e-06 * T2 +
                  8.45941053e-10 * T3 - 4.89772739e-14 * T4;
    // species 30: c4h8-1
    species[30] = +1.13508668e+01 + 1.80617877e-02 * T - 6.16093029e-06 * T2 +
                  9.54652959e-10 * T3 - 5.53089641e-14 * T4;
    // species 35: c5h9
    species[35] = +1.41860454e+01 + 2.07128899e-02 * T - 7.06960617e-06 * T2 +
                  1.09607133e-09 * T3 - 6.35322208e-14 * T4;
    // species 36: c5h10-1
    species[36] = +1.45851539e+01 + 2.24072471e-02 * T - 7.63348025e-06 * T2 +
                  1.18188966e-09 * T3 - 6.84385139e-14 * T4;
    // species 64: c7h14-3
    species[64] = +2.06822750e+01 + 3.15388629e-02 * T - 1.07571215e-05 * T2 +
                  1.66690260e-09 * T3 - 9.65810393e-14 * T4;
  }

  // species with midpoint at T=1393 kelvin
  if (T < 1393) {
    // species 41: c2h3cho
    species[41] = +2.92355162e-01 + 3.54321417e-02 * T - 2.94936324e-05 * T2 +
                  1.28100124e-08 * T3 - 2.26144108e-12 * T4;
  } else {
    // species 41: c2h3cho
    species[41] = +1.04184959e+01 + 9.48963321e-03 * T - 3.29310529e-06 * T2 +
                  5.16279203e-10 * T3 - 3.01587291e-14 * T4;
  }

  // species with midpoint at T=1395 kelvin
  if (T < 1395) {
    // species 31: pc4h9
    species[31] = -4.37779725e-01 + 4.78972364e-02 * T - 3.14023159e-05 * T2 +
                  1.09786472e-08 * T3 - 1.62010664e-12 * T4;
    // species 43: c4h7o
    species[43] = -1.60619192e+00 + 5.58562682e-02 * T - 4.35595767e-05 * T2 +
                  1.70589279e-08 * T3 - 2.65635180e-12 * T4;
    // species 81: c7h14o1-3
    species[81] = -5.50036450e+00 + 1.00155088e-01 * T - 7.29935857e-05 * T2 +
                  2.79344270e-08 * T3 - 4.42245696e-12 * T4;
  } else {
    // species 31: pc4h9
    species[31] = +1.21510082e+01 + 1.94310717e-02 * T - 6.61577950e-06 * T2 +
                  1.02375136e-09 * T3 - 5.92529707e-14 * T4;
    // species 43: c4h7o
    species[43] = +1.53137780e+01 + 1.43427017e-02 * T - 4.81625517e-06 * T2 +
                  7.39574839e-10 * T3 - 4.26140814e-14 * T4;
    // species 81: c7h14o1-3
    species[81] = +2.26918916e+01 + 3.32510472e-02 * T - 1.14457765e-05 * T2 +
                  1.78455535e-09 * T3 - 1.03841112e-13 * T4;
  }

  // species with midpoint at T=1397 kelvin
  if (T < 1397) {
    // species 47: c3h5-a
    species[47] = -5.29131958e-01 + 3.34559100e-02 * T - 2.53401027e-05 * T2 +
                  1.02865754e-08 * T3 - 1.73258340e-12 * T4;
  } else {
    // species 47: c3h5-a
    species[47] = +8.45883958e+00 + 1.12695483e-02 * T - 3.83792864e-06 * T2 +
                  5.94059119e-10 * T3 - 3.43918030e-14 * T4;
  }

  // species with midpoint at T=1398 kelvin
  if (T < 1398) {
    // species 27: c4h6
    species[27] = -1.43095121e+00 + 4.78706062e-02 * T - 4.15446800e-05 * T2 +
                  1.91549552e-08 * T3 - 3.57158507e-12 * T4;
  } else {
    // species 27: c4h6
    species[27] = +1.11633789e+01 + 1.37163965e-02 * T - 4.69715783e-06 * T2 +
                  7.29693836e-10 * T3 - 4.23486203e-14 * T4;
  }

  // species with midpoint at T=1399 kelvin
  if (T < 1399) {
    // species 82: c7h14o2-4
    species[82] = -5.39477206e+00 + 1.01846577e-01 * T - 7.60046236e-05 * T2 +
                  2.96538020e-08 * T3 - 4.74854370e-12 * T4;
  } else {
    // species 82: c7h14o2-4
    species[82] = +2.32692731e+01 + 3.25585391e-02 * T - 1.11624906e-05 * T2 +
                  1.73573658e-09 * T3 - 1.00813215e-13 * T4;
  }

  // species with midpoint at T=1400 kelvin
  if (T < 1400) {
    // species 25: c3h4-a
    species[25] = +2.53983100e+00 + 1.63343700e-02 * T - 1.76495000e-06 * T2 -
                  4.64736500e-09 * T3 + 1.72913100e-12 * T4;
  } else {
    // species 25: c3h4-a
    species[25] = +9.77625600e+00 + 5.30213800e-03 * T - 3.70111800e-07 * T2 -
                  3.02638600e-10 * T3 + 5.08958100e-14 * T4;
  }

  // species with midpoint at T=1402 kelvin
  if (T < 1402) {
    // species 40: c2h3co
    species[40] = +1.36242013e+00 + 3.15273972e-02 * T - 3.00218935e-05 * T2 +
                  1.48167112e-08 * T3 - 2.87971530e-12 * T4;
  } else {
    // species 40: c2h3co
    species[40] = +9.37467676e+00 + 7.91296900e-03 * T - 2.67198280e-06 * T2 +
                  4.11115430e-10 * T3 - 2.36978981e-14 * T4;
  }
}

// compute the g/(RT) at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
gibbs(amrex::Real* species, const amrex::Real T)
{
  const amrex::Real T2 = T * T;
  const amrex::Real T3 = T * T * T;
  const amrex::Real T4 = T * T * T * T;
  const amrex::Real invT = 1.0 / T;
  const amrex::Real logT = log(T);

  // species with no change across T
  // species 0: h
  species[0] = +2.547474660000000e+04 * invT + 2.966385537000000e+00 -
               2.501044220000000e+00 * logT;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 1: h2
    species[1] = -1.012521000000000e+03 * invT + 6.592218000000000e+00 -
                 3.298124000000000e+00 * logT - 4.124721000000000e-04 * T +
                 1.357169166666667e-07 * T2 + 7.896194999999999e-12 * T3 -
                 2.067436000000000e-14 * T4;
    // species 2: o
    species[2] = +2.914764000000000e+04 * invT - 1.756599999999997e-02 -
                 2.946429000000000e+00 * logT + 8.190830000000000e-04 * T -
                 4.035053333333333e-07 * T2 + 1.335702500000000e-10 * T3 -
                 1.945348000000000e-14 * T4;
    // species 3: o2
    species[3] = -1.005249000000000e+03 * invT - 2.821802000000000e+00 -
                 3.212936000000000e+00 * logT - 5.637430000000000e-04 * T +
                 9.593583333333333e-08 * T2 - 1.094897500000000e-10 * T3 +
                 4.384277000000000e-14 * T4;
    // species 5: h2o
    species[5] = -3.020811000000000e+04 * invT + 7.966090000000001e-01 -
                 3.386842000000000e+00 * logT - 1.737491000000000e-03 * T +
                 1.059116000000000e-06 * T2 - 5.807150833333333e-10 * T3 +
                 1.253294000000000e-13 * T4;
    // species 6: co
    species[6] = -1.431054000000000e+04 * invT - 1.586445000000000e+00 -
                 3.262452000000000e+00 * logT - 7.559705000000000e-04 * T +
                 6.469591666666667e-07 * T2 - 4.651620000000000e-10 * T3 +
                 1.237475500000000e-13 * T4;
    // species 7: hco
    species[7] = +4.159922000000000e+03 * invT - 6.085284000000000e+00 -
                 2.898330000000000e+00 * logT - 3.099573500000000e-03 * T +
                 1.603847333333333e-06 * T2 - 9.081875000000000e-10 * T3 +
                 2.287442500000000e-13 * T4;
    // species 8: co2
    species[8] = -4.837314000000000e+04 * invT - 7.912765000000000e+00 -
                 2.275725000000000e+00 * logT - 4.961036000000000e-03 * T +
                 1.734851666666667e-06 * T2 - 5.722239166666667e-10 * T3 +
                 1.058640000000000e-13 * T4;
    // species 9: ch3
    species[9] = +1.642378000000000e+04 * invT - 4.359351000000000e+00 -
                 2.430443000000000e+00 * logT - 5.562050000000000e-03 * T +
                 2.800366666666666e-06 * T2 - 1.351524166666667e-09 * T3 +
                 2.932476500000000e-13 * T4;
    // species 10: ch4
    species[10] = -9.825228999999999e+03 * invT - 1.294344850000000e+01 -
                  7.787415000000000e-01 * logT - 8.738340000000001e-03 * T +
                  4.639015000000000e-06 * T2 - 2.541423333333333e-09 * T3 +
                  6.119655000000000e-13 * T4;
    // species 12: h2o2
    species[12] = -1.766315000000000e+04 * invT - 3.396609000000000e+00 -
                  3.388754000000000e+00 * logT - 3.284613000000000e-03 * T +
                  2.475021666666666e-08 * T2 + 3.854838333333333e-10 * T3 -
                  1.235757500000000e-13 * T4;
    // species 13: ch2o
    species[13] = -1.486540000000000e+04 * invT - 1.213208900000000e+01 -
                  1.652731000000000e+00 * logT - 6.315720000000000e-03 * T +
                  3.146946666666667e-06 * T2 - 1.708359166666667e-09 * T3 +
                  4.206618500000000e-13 * T4;
    // species 14: ch3o
    species[14] = +9.786011000000000e+02 * invT - 1.104597600000000e+01 -
                  2.106204000000000e+00 * logT - 3.608297500000000e-03 * T -
                  8.897453333333333e-07 * T2 + 6.148030000000000e-10 * T3 -
                  1.037805500000000e-13 * T4;
    // species 16: c2h4
    species[16] = +5.573046000000000e+03 * invT - 2.507297800000000e+01 +
                  8.614880000000000e-01 * logT - 1.398081500000000e-02 * T +
                  5.647795000000000e-06 * T2 - 2.320960000000000e-09 * T3 +
                  4.868939500000000e-13 * T4;
    // species 17: c2h5
    species[17] = +1.287040000000000e+04 * invT - 9.447498000000000e+00 -
                  2.690702000000000e+00 * logT - 4.359566500000000e-03 * T -
                  7.366398333333332e-07 * T2 - 7.782252500000001e-11 * T3 +
                  1.963886500000000e-13 * T4;
    // species 18: c2h2
    species[18] = +2.612444000000000e+04 * invT - 6.791815999999999e+00 -
                  2.013562000000000e+00 * logT - 7.595225000000000e-03 * T +
                  2.693865000000000e-06 * T2 - 7.565826666666667e-10 * T3 +
                  9.563730000000000e-14 * T4;
    // species 19: c2h3
    species[19] = +3.335225000000000e+04 * invT - 9.096924000000001e+00 -
                  2.459276000000000e+00 * logT - 3.685738000000000e-03 * T -
                  3.516455000000000e-07 * T2 + 1.101368333333333e-10 * T3 +
                  5.923920000000000e-14 * T4;
    // species 20: ch2co
    species[20] = -7.632637000000000e+03 * invT - 5.698582000000000e+00 -
                  2.974971000000000e+00 * logT - 6.059355000000000e-03 * T +
                  3.908410000000000e-07 * T2 + 5.388904166666666e-10 * T3 -
                  1.952824500000000e-13 * T4;
    // species 21: hcco
    species[21] = +1.965892000000000e+04 * invT + 4.566121099999999e+00 -
                  5.047965000000000e+00 * logT - 2.226739000000000e-03 * T -
                  3.780471666666667e-08 * T2 + 1.235079166666667e-10 * T3 -
                  1.125371000000000e-14 * T4;
    // species 22: ch3co
    species[22] = -4.108508000000000e+03 * invT - 8.103572000000000e+00 -
                  3.125278000000000e+00 * logT - 4.889110000000000e-03 * T -
                  7.535746666666667e-07 * T2 + 7.507885000000000e-10 * T3 -
                  1.596859000000000e-13 * T4;
    // species 23: ch2cho
    species[23] = +1.521477000000000e+03 * invT - 6.149227999999999e+00 -
                  3.409062000000000e+00 * logT - 5.369285000000000e-03 * T -
                  3.152486666666667e-07 * T2 + 5.965485833333333e-10 * T3 -
                  1.433692500000000e-13 * T4;
    // species 24: ch3cho
    species[24] = -2.124589000000000e+04 * invT - 1.084519500000000e+01 -
                  2.505695000000000e+00 * logT - 6.684955000000000e-03 * T -
                  7.786588333333333e-07 * T2 + 9.401166666666668e-10 * T3 -
                  2.131783000000000e-13 * T4;
    // species 28: nc3h7
    species[28] = +9.713281000000001e+03 * invT - 1.207017300000000e+01 -
                  1.922537000000000e+00 * logT - 1.239463500000000e-02 * T -
                  3.017081666666666e-07 * T2 + 1.486055000000000e-09 * T3 -
                  4.291498000000000e-13 * T4;
    // species 48: c3h3
    species[48] = +3.988883000000000e+04 * invT + 4.168745100000000e+00 -
                  4.754200000000000e+00 * logT - 5.540140000000000e-03 * T -
                  4.655538333333333e-08 * T2 + 4.566010000000000e-10 * T3 -
                  9.748145000000000e-14 * T4;
    // species 49: c3h2
    species[49] = +6.350421000000000e+04 * invT - 5.702732000000000e+00 -
                  3.166714000000000e+00 * logT - 1.241286000000000e-02 * T +
                  7.652728333333333e-06 * T2 - 3.556682500000000e-09 * T3 +
                  7.410759999999999e-13 * T4;
    // species 50: ch2(s)
    species[50] = +4.989368000000000e+04 * invT + 3.913732930000000e+00 -
                  3.971265000000000e+00 * logT + 8.495445000000000e-05 * T -
                  1.708948333333333e-07 * T2 - 2.077125833333333e-10 * T3 +
                  9.906330000000000e-14 * T4;
    // species 87: n2
    species[87] = -1.020900000000000e+03 * invT - 6.516950000000001e-01 -
                  3.298677000000000e+00 * logT - 7.041200000000000e-04 * T +
                  6.605369999999999e-07 * T2 - 4.701262500000001e-10 * T3 +
                  1.222427500000000e-13 * T4;
  } else {
    // species 1: h2
    species[1] = -8.350340000000000e+02 * invT + 4.346533000000000e+00 -
                 2.991423000000000e+00 * logT - 3.500322000000000e-04 * T +
                 9.389715000000000e-09 * T2 + 7.692981666666667e-13 * T3 -
                 7.913760000000000e-17 * T4;
    // species 2: o
    species[2] = +2.923080000000000e+04 * invT - 2.378248000000000e+00 -
                 2.542060000000000e+00 * logT + 1.377531000000000e-05 * T +
                 5.171338333333333e-10 * T2 - 3.792555833333334e-13 * T3 +
                 2.184026000000000e-17 * T4;
    // species 3: o2
    species[3] = -1.233930000000000e+03 * invT + 5.084119999999999e-01 -
                 3.697578000000000e+00 * logT - 3.067598500000000e-04 * T +
                 2.098070000000000e-08 * T2 - 1.479400833333333e-12 * T3 +
                 5.682175000000001e-17 * T4;
    // species 5: h2o
    species[5] = -2.989921000000000e+04 * invT - 4.190671000000000e+00 -
                 2.672146000000000e+00 * logT - 1.528146500000000e-03 * T +
                 1.455043333333333e-07 * T2 - 1.000830000000000e-11 * T3 +
                 3.195809000000000e-16 * T4;
    // species 6: co
    species[6] = -1.426835000000000e+04 * invT - 3.083140000000000e+00 -
                 3.025078000000000e+00 * logT - 7.213445000000000e-04 * T +
                 9.384713333333334e-08 * T2 - 8.488174999999999e-12 * T3 +
                 3.455476000000000e-16 * T4;
    // species 7: hco
    species[7] = +3.916324000000000e+03 * invT - 1.995028000000000e+00 -
                 3.557271000000000e+00 * logT - 1.672786500000000e-03 * T +
                 2.225010000000000e-07 * T2 - 2.058810833333333e-11 * T3 +
                 8.569255000000000e-16 * T4;
    // species 8: co2
    species[8] = -4.896696000000000e+04 * invT + 5.409018900000000e+00 -
                 4.453623000000000e+00 * logT - 1.570084500000000e-03 * T +
                 2.130685000000000e-07 * T2 - 1.994997500000000e-11 * T3 +
                 8.345165000000000e-16 * T4;
    // species 9: ch3
    species[9] = +1.643781000000000e+04 * invT - 2.608645000000000e+00 -
                 2.844052000000000e+00 * logT - 3.068987000000000e-03 * T +
                 3.717241666666666e-07 * T2 - 3.154300833333333e-11 * T3 +
                 1.226079500000000e-15 * T4;
    // species 10: ch4
    species[10] = -1.008079000000000e+04 * invT - 7.939916000000000e+00 -
                  1.683479000000000e+00 * logT - 5.118620000000000e-03 * T +
                  6.458548333333333e-07 * T2 - 5.654654166666667e-11 * T3 +
                  2.251711500000000e-15 * T4;
    // species 12: h2o2
    species[12] = -1.800696000000000e+04 * invT + 4.072030000000000e+00 -
                  4.573167000000000e+00 * logT - 2.168068000000000e-03 * T +
                  2.457815000000000e-07 * T2 - 1.957420000000000e-11 * T3 +
                  7.158270000000000e-16 * T4;
    // species 13: ch2o
    species[13] = -1.532037000000000e+04 * invT - 3.916966000000000e+00 -
                  2.995606000000000e+00 * logT - 3.340660500000000e-03 * T +
                  4.381591666666666e-07 * T2 - 3.947627500000000e-11 * T3 +
                  1.606258500000000e-15 * T4;
    // species 14: ch3o
    species[14] = +1.278325000000000e+02 * invT + 8.412250000000001e-01 -
                  3.770800000000000e+00 * logT - 3.935748500000000e-03 * T +
                  4.427306666666667e-07 * T2 - 3.287025833333333e-11 * T3 +
                  1.056308000000000e-15 * T4;
    // species 16: c2h4
    species[16] = +4.428289000000000e+03 * invT + 1.298030000000000e+00 -
                  3.528419000000000e+00 * logT - 5.742590000000000e-03 * T +
                  7.363975000000000e-07 * T2 - 6.537167500000001e-11 * T3 +
                  2.633424000000000e-15 * T4;
    // species 17: c2h5
    species[17] = +1.067455000000000e+04 * invT + 2.197137000000000e+01 -
                  7.190480000000000e+00 * logT - 3.242038500000000e-03 * T +
                  1.071344166666667e-07 * T2 + 1.956565833333333e-11 * T3 -
                  1.940438500000000e-15 * T4;
    // species 18: c2h2
    species[18] = +2.566766000000000e+04 * invT + 7.237108000000000e+00 -
                  4.436770000000000e+00 * logT - 2.688019500000000e-03 * T +
                  3.188028333333333e-07 * T2 - 2.738649166666667e-11 * T3 +
                  1.078355000000000e-15 * T4;
    // species 19: c2h3
    species[19] = +3.185435000000000e+04 * invT + 1.446378100000000e+01 -
                  5.933468000000000e+00 * logT - 2.008873000000000e-03 * T +
                  6.611233333333333e-08 * T2 + 1.201055833333333e-11 * T3 -
                  1.189322000000000e-15 * T4;
    // species 20: ch2co
    species[20] = -8.583402000000000e+03 * invT + 1.369639800000000e+01 -
                  6.038817000000000e+00 * logT - 2.902420000000000e-03 * T +
                  3.201590000000000e-07 * T2 - 2.328737500000000e-11 * T3 +
                  7.294340000000000e-16 * T4;
    // species 21: hcco
    species[21] = +1.901513000000000e+04 * invT + 1.582933500000000e+01 -
                  6.758073000000000e+00 * logT - 1.000200000000000e-03 * T +
                  3.379345000000000e-08 * T2 + 8.676100000000000e-12 * T3 -
                  9.825825000000000e-16 * T4;
    // species 22: ch3co
    species[22] = -5.187863000000000e+03 * invT + 8.887228000000000e+00 -
                  5.612279000000000e+00 * logT - 4.224943000000000e-03 * T +
                  4.756911666666667e-07 * T2 - 3.531980000000000e-11 * T3 +
                  1.134202000000000e-15 * T4;
    // species 23: ch2cho
    species[23] = +4.903218000000000e+02 * invT + 1.102092100000000e+01 -
                  5.975670000000000e+00 * logT - 4.065295500000000e-03 * T +
                  4.572706666666667e-07 * T2 - 3.391920000000000e-11 * T3 +
                  1.088008500000000e-15 * T4;
    // species 24: ch3cho
    species[24] = -2.264569000000000e+04 * invT + 1.188159600000000e+01 -
                  5.868650000000000e+00 * logT - 5.397120000000000e-03 * T +
                  6.075883333333333e-07 * T2 - 4.510760000000000e-11 * T3 +
                  1.448422000000000e-15 * T4;
    // species 28: nc3h7
    species[28] = +7.579402000000000e+03 * invT + 2.733440100000000e+01 -
                  7.978291000000000e+00 * logT - 7.880565000000001e-03 * T +
                  8.622071666666666e-07 * T2 - 6.203243333333333e-11 * T3 +
                  1.912489000000000e-15 * T4;
    // species 48: c3h3
    species[48] = +3.847420000000000e+04 * invT + 3.061023700000000e+01 -
                  8.831047000000000e+00 * logT - 2.178597500000000e-03 * T +
                  6.848445000000000e-08 * T2 + 1.973935833333333e-11 * T3 -
                  2.188260000000000e-15 * T4;
    // species 49: c3h2
    species[49] = +6.259722000000000e+04 * invT + 2.003988100000000e+01 -
                  7.670981000000000e+00 * logT - 1.374374500000000e-03 * T +
                  7.284905000000000e-08 * T2 + 5.379665833333334e-12 * T3 -
                  8.319435000000000e-16 * T4;
    // species 50: ch2(s)
    species[50] = +4.984975000000000e+04 * invT + 1.866319000000000e+00 -
                  3.552889000000000e+00 * logT - 1.033394000000000e-03 * T +
                  3.190193333333333e-08 * T2 + 9.205608333333333e-12 * T3 -
                  1.010675000000000e-15 * T4;
    // species 87: n2
    species[87] = -9.227977000000000e+02 * invT - 3.053888000000000e+00 -
                  2.926640000000000e+00 * logT - 7.439885000000000e-04 * T +
                  9.474601666666666e-08 * T2 - 8.414199999999999e-12 * T3 +
                  3.376675500000000e-16 * T4;
  }

  // species with midpoint at T=1357 kelvin
  if (T < 1357) {
    // species 4: oh
    species[4] = +3.743212520000000e+03 * invT + 9.857209199999999e-01 -
                 3.435862190000000e+00 * logT - 1.011179020000000e-04 * T +
                 1.892440200000000e-08 * T2 - 2.020376241666666e-11 * T3 +
                 3.718255155000000e-15 * T4;
  } else {
    // species 4: oh
    species[4] = +4.120853740000000e+03 * invT - 4.480675530000000e+00 -
                 2.625997540000000e+00 * logT - 6.599620300000000e-04 * T +
                 5.995411166666667e-08 * T2 - 3.546923333333333e-12 * T3 +
                 9.102400800000000e-17 * T4;
  }

  // species with midpoint at T=1373 kelvin
  if (T < 1373) {
    // species 34: c2h5co
    species[34] = -5.696630630000000e+03 * invT - 1.066269604000000e+01 -
                  2.933139460000000e+00 * logT - 1.237139555000000e-02 * T +
                  2.020366716666667e-06 * T2 - 1.955842066666667e-10 * T3 +
                  2.634216690000000e-15 * T4;
  } else {
    // species 34: c2h5co
    species[34] = -8.472922830000000e+03 * invT + 3.480233957000000e+01 -
                  9.878819970000000e+00 * logT - 5.875783800000000e-03 * T +
                  6.676915383333333e-07 * T2 - 5.173755141666667e-11 * T3 +
                  1.799176125000000e-15 * T4;
  }

  // species with midpoint at T=1377 kelvin
  if (T < 1377) {
    // species 45: c4h8ooh1-3
    species[45] = -4.343159620000000e+03 * invT - 2.208198434000000e+01 -
                  1.941062760000000e+00 * logT - 2.593946755000000e-02 * T +
                  5.173528050000000e-06 * T2 - 7.196407341666667e-10 * T3 +
                  4.214209970000000e-14 * T4;
  } else {
    // species 45: c4h8ooh1-3
    species[45] = -1.018592800000000e+04 * invT + 7.935579830000000e+01 -
                  1.764421700000000e+01 * logT - 9.585326800000000e-03 * T +
                  1.095281068333333e-06 * T2 - 8.520547583333334e-11 * T3 +
                  2.971523675000000e-15 * T4;
  }

  // species with midpoint at T=1378 kelvin
  if (T < 1378) {
    // species 33: c2h5cho
    species[33] = -2.422601370000000e+04 * invT - 1.395225036000000e+01 -
                  2.163084440000000e+00 * logT - 1.477506320000000e-02 * T +
                  2.540770866666666e-06 * T2 - 2.912532891666666e-10 * T3 +
                  1.194483135000000e-14 * T4;
    // species 52: nc3h7cho
    species[52] = -2.710321940000000e+04 * invT - 1.728269781000000e+01 -
                  1.874159590000000e+00 * logT - 2.096201575000000e-02 * T +
                  3.919146316666667e-06 * T2 - 5.224280608333334e-10 * T3 +
                  3.047219540000000e-14 * T4;
  } else {
    // species 33: c2h5cho
    species[33] = -2.741431350000000e+04 * invT + 3.877745380000000e+01 -
                  1.024276950000000e+01 * logT - 6.982099450000000e-03 * T +
                  7.937466683333333e-07 * T2 - 6.150880883333334e-11 * T3 +
                  2.138797515000000e-15 * T4;
    // species 52: nc3h7cho
    species[52] = -3.158453480000000e+04 * invT + 5.877782960000000e+01 -
                  1.359880680000000e+01 * logT - 9.082623700000000e-03 * T +
                  1.029740763333333e-06 * T2 - 7.966501733333333e-11 * T3 +
                  2.767214790000000e-15 * T4;
  }

  // species with midpoint at T=1380 kelvin
  if (T < 1380) {
    // species 42: c3h5o
    species[42] = +9.582177840000000e+03 * invT - 2.035839628000000e+01 -
                  1.198225820000000e+00 * logT - 1.527899185000000e-02 * T +
                  3.010504600000000e-06 * T2 - 4.051250275000000e-10 * T3 +
                  2.099272810000000e-14 * T4;
    // species 53: nc3h7co
    species[53] = -8.580508879999999e+03 * invT - 1.381232674000000e+01 -
                  2.672568260000000e+00 * logT - 1.855994125000000e-02 * T +
                  3.447714316666666e-06 * T2 - 4.573949066666667e-10 * T3 +
                  2.679320915000000e-14 * T4;
  } else {
    // species 42: c3h5o
    species[42] = +6.265608100000000e+03 * invT + 3.802067940000000e+01 -
                  1.025517520000000e+01 * logT - 5.749186000000000e-03 * T +
                  6.410760983333333e-07 * T2 - 4.907586216666667e-11 * T3 +
                  1.692789615000000e-15 * T4;
    // species 53: nc3h7co
    species[53] = -1.255233850000000e+04 * invT + 5.326348460000000e+01 -
                  1.300263310000000e+01 * logT - 8.155243850000000e-03 * T +
                  9.294048316666667e-07 * T2 - 7.213921908333333e-11 * T3 +
                  2.511278335000000e-15 * T4;
  }

  // species with midpoint at T=1381 kelvin
  if (T < 1381) {
    // species 56: nc4h9cho
    species[56] = -2.998410250000000e+04 * invT - 2.053151508000000e+01 -
                  1.596634720000000e+00 * logT - 2.717707080000000e-02 * T +
                  5.350344183333334e-06 * T2 - 7.798112991666667e-10 * T3 +
                  5.334446600000001e-14 * T4;
  } else {
    // species 56: nc4h9cho
    species[56] = -3.568260800000000e+04 * invT + 7.770284749999999e+01 -
                  1.679651630000000e+01 * logT - 1.128422595000000e-02 * T +
                  1.279385980000000e-06 * T2 - 9.897447416666666e-11 * T3 +
                  3.437727770000000e-15 * T4;
  }

  // species with midpoint at T=1382 kelvin
  if (T < 1382) {
    // species 57: nc4h9co
    species[57] = -1.146755410000000e+04 * invT - 1.683428552000000e+01 -
                  2.435302380000000e+00 * logT - 2.468411880000000e-02 * T +
                  4.831384700000000e-06 * T2 - 7.023865100000001e-10 * T3 +
                  4.841435860000000e-14 * T4;
    // species 60: c7h15-2
    species[60] = -2.356053030000000e+03 * invT - 3.377006617670000e+01 +
                  3.791557670000000e-02 * logT - 3.783632850000000e-02 * T +
                  6.791227233333333e-06 * T2 - 7.772324525000000e-10 * T3 +
                  2.461803725000000e-14 * T4;
    // species 61: c7h15-3
    species[61] = -2.356053030000000e+03 * invT - 3.377006617670000e+01 +
                  3.791557670000000e-02 * logT - 3.783632850000000e-02 * T +
                  6.791227233333333e-06 * T2 - 7.772324525000000e-10 * T3 +
                  2.461803725000000e-14 * T4;
    // species 62: c7h15-4
    species[62] = -2.356053030000000e+03 * invT - 3.308058457670000e+01 +
                  3.791557670000000e-02 * logT - 3.783632850000000e-02 * T +
                  6.791227233333333e-06 * T2 - 7.772324525000000e-10 * T3 +
                  2.461803725000000e-14 * T4;
  } else {
    // species 57: nc4h9co
    species[57] = -1.665377520000000e+04 * invT + 7.207265180000000e+01 -
                  1.617829390000000e+01 * logT - 1.039959600000000e-02 * T +
                  1.186313153333333e-06 * T2 - 9.213331249999999e-11 * T3 +
                  3.208485935000000e-15 * T4;
    // species 60: c7h15-2
    species[60] = -1.058736160000000e+04 * invT + 1.068578495000000e+02 -
                  2.163688420000000e+01 * logT - 1.616624020000000e-02 * T +
                  1.821230116666667e-06 * T2 - 1.402975500000000e-10 * T3 +
                  4.858870455000000e-15 * T4;
    // species 61: c7h15-3
    species[61] = -1.058736160000000e+04 * invT + 1.068578495000000e+02 -
                  2.163688420000000e+01 * logT - 1.616624020000000e-02 * T +
                  1.821230116666667e-06 * T2 - 1.402975500000000e-10 * T3 +
                  4.858870455000000e-15 * T4;
    // species 62: c7h15-4
    species[62] = -1.058736160000000e+04 * invT + 1.075473312000000e+02 -
                  2.163688420000000e+01 * logT - 1.616624020000000e-02 * T +
                  1.821230116666667e-06 * T2 - 1.402975500000000e-10 * T3 +
                  4.858870455000000e-15 * T4;
  }

  // species with midpoint at T=1383 kelvin
  if (T < 1383) {
    // species 54: c2h5coch2
    species[54] = -9.507965050000001e+03 * invT - 1.843052554000000e+01 -
                  1.540138560000000e+00 * logT - 2.197431290000000e-02 * T +
                  4.950040350000000e-06 * T2 - 8.791276083333333e-10 * T3 +
                  7.929938449999999e-14 * T4;
    // species 69: c7h14ooh1-3
    species[69] = -1.298683140000000e+04 * invT - 3.180854314000000e+01 -
                  1.111462060000000e+00 * logT - 4.457976960000000e-02 * T +
                  9.455873033333333e-06 * T2 - 1.490750783333333e-09 * T3 +
                  1.111301030000000e-13 * T4;
  } else {
    // species 54: c2h5coch2
    species[54] = -1.412849510000000e+04 * invT + 6.292316490000000e+01 -
                  1.420987380000000e+01 * logT - 7.893322950000000e-03 * T +
                  9.175486383333333e-07 * T2 - 7.215587833333333e-11 * T3 +
                  2.534566645000000e-15 * T4;
    // species 69: c7h14ooh1-3
    species[69] = -2.249770700000000e+04 * invT + 1.361308062000000e+02 -
                  2.722902220000000e+01 * logT - 1.624609505000000e-02 * T +
                  1.854329300000000e-06 * T2 - 1.441073983333333e-10 * T3 +
                  5.021416300000000e-15 * T4;
  }

  // species with midpoint at T=1384 kelvin
  if (T < 1384) {
    // species 15: c2h6
    species[15] = -1.123455340000000e+04 * invT - 2.119016043440000e+01 +
                  2.528543440000000e-02 * logT - 1.203823770000000e-02 * T +
                  1.864891200000000e-06 * T2 - 1.736174175000000e-10 * T3 +
                  2.649343080000000e-15 * T4;
  } else {
    // species 15: c2h6
    species[15] = -1.375000140000000e+04 * invT + 1.911495885000000e+01 -
                  6.106833850000000e+00 * logT - 6.461818050000000e-03 * T +
                  7.375453266666666e-07 * T2 - 5.728264383333333e-11 * T3 +
                  1.994508660000000e-15 * T4;
  }

  // species with midpoint at T=1385 kelvin
  if (T < 1385) {
    // species 38: ch3o2
    species[38] = -6.843942590000000e+02 * invT - 9.018341400000001e-01 -
                  4.261469060000000e+00 * logT - 5.043679950000000e-03 * T +
                  5.358436400000000e-07 * T2 - 1.745077225000000e-11 * T3 -
                  2.091695515000000e-15 * T4;
    // species 46: pc4h9o2
    species[46] = -1.083581030000000e+04 * invT - 1.940667840000000e+01 -
                  1.943636500000000e+00 * logT - 2.577565815000000e-02 * T +
                  5.471406666666667e-06 * T2 - 9.422071666666667e-10 * T3 +
                  8.505930300000000e-14 * T4;
  } else {
    // species 38: ch3o2
    species[38] = -1.535748380000000e+03 * invT + 1.067751777000000e+01 -
                  5.957878910000000e+00 * logT - 3.953643130000000e-03 * T +
                  4.470770566666667e-07 * T2 - 3.449094475000000e-11 * T3 +
                  1.195036650000000e-15 * T4;
    // species 46: pc4h9o2
    species[46] = -1.601460540000000e+04 * invT + 6.982339730000000e+01 -
                  1.578454480000000e+01 * logT - 1.076054550000000e-02 * T +
                  1.241515028333333e-06 * T2 - 9.713172583333334e-11 * T3 +
                  3.399428045000000e-15 * T4;
  }

  // species with midpoint at T=1386 kelvin
  if (T < 1386) {
    // species 51: nc4ket13
    species[51] = -4.010658780000000e+04 * invT - 1.605837439000000e+01 -
                  2.748834610000000e+00 * logT - 2.934683725000000e-02 * T +
                  7.493431583333333e-06 * T2 - 1.526667750000000e-09 * T3 +
                  1.558826845000000e-13 * T4;
    // species 86: nc7ket42
    species[86] = -5.275868300000000e+04 * invT - 2.302312952000000e+01 -
                  2.322697380000000e+00 * logT - 4.725800745000000e-02 * T +
                  1.165095298333333e-05 * T2 - 2.331440966666667e-09 * T3 +
                  2.371222155000000e-13 * T4;
  } else {
    // species 51: nc4ket13
    species[51] = -4.595888510000000e+04 * invT + 9.133359020000000e+01 -
                  1.964308080000000e+01 * logT - 9.047028299999999e-03 * T +
                  1.055105386666667e-06 * T2 - 8.315503325000001e-11 * T3 +
                  2.925382290000000e-15 * T4;
    // species 86: nc7ket42
    species[86] = -6.202529880000000e+04 * invT + 1.447925427000000e+02 -
                  2.865728670000000e+01 * logT - 1.607839540000000e-02 * T +
                  1.866026166666667e-06 * T2 - 1.465791666666667e-10 * T3 +
                  5.144598000000000e-15 * T4;
  }

  // species with midpoint at T=1387 kelvin
  if (T < 1387) {
    // species 44: c4h8ooh1-3o2
    species[44] = -2.373914900000000e+04 * invT - 2.161314602000000e+01 -
                  2.224007280000000e+00 * logT - 3.524973100000000e-02 * T +
                  9.449647116666666e-06 * T2 - 2.021897925000000e-09 * T3 +
                  2.148577295000000e-13 * T4;
    // species 84: nc7ket24
    species[84] = -5.238395420000000e+04 * invT - 2.785576648000000e+01 -
                  1.529366920000000e+00 * logT - 4.790867330000000e-02 * T +
                  1.161147533333333e-05 * T2 - 2.246169850000000e-09 * T3 +
                  2.193640630000000e-13 * T4;
    // species 85: nc7ket35
    species[85] = -5.238395420000000e+04 * invT - 2.785576648000000e+01 -
                  1.529366920000000e+00 * logT - 4.790867330000000e-02 * T +
                  1.161147533333333e-05 * T2 - 2.246169850000000e-09 * T3 +
                  2.193640630000000e-13 * T4;
  } else {
    // species 44: c4h8ooh1-3o2
    species[44] = -3.054682770000000e+04 * invT + 1.055910085000000e+02 -
                  2.232440150000000e+01 * logT - 1.027373875000000e-02 * T +
                  1.198460580000000e-06 * T2 - 9.446794666666667e-11 * T3 +
                  3.323721915000000e-15 * T4;
    // species 84: nc7ket24
    species[84] = -6.201424740000000e+04 * invT + 1.463327428000000e+02 -
                  2.883303880000000e+01 * logT - 1.600840480000000e-02 * T +
                  1.858474266666667e-06 * T2 - 1.460217991666667e-10 * T3 +
                  5.126022550000000e-15 * T4;
    // species 85: nc7ket35
    species[85] = -6.201424740000000e+04 * invT + 1.463327428000000e+02 -
                  2.883303880000000e+01 * logT - 1.600840480000000e-02 * T +
                  1.858474266666667e-06 * T2 - 1.460217991666667e-10 * T3 +
                  5.126022550000000e-15 * T4;
  }

  // species with midpoint at T=1388 kelvin
  if (T < 1388) {
    // species 26: c3h6
    species[26] = +1.066881640000000e+03 * invT - 2.150575815600000e+01 -
                  3.946154440000000e-01 * logT - 1.445538310000000e-02 * T +
                  2.581446800000000e-06 * T2 - 3.240118408333333e-10 * T3 +
                  1.689451760000000e-14 * T4;
    // species 65: c7h15o2-1
    species[65] = -1.929187650000000e+04 * invT - 2.860282418000000e+01 -
                  1.208885520000000e+00 * logT - 4.420308530000000e-02 * T +
                  9.664354333333334e-06 * T2 - 1.696455741666667e-09 * T3 +
                  1.532301680000000e-13 * T4;
    // species 77: c7h14ooh1-3o2
    species[77] = -3.227902290000000e+04 * invT - 2.835028116000000e+01 -
                  1.897180040000000e+00 * logT - 5.311489800000000e-02 * T +
                  1.337950363333333e-05 * T2 - 2.697075775000000e-09 * T3 +
                  2.729252360000000e-13 * T4;
    // species 83: nc7ket13
    species[83] = -4.879655100000000e+04 * invT - 2.409942002000000e+01 -
                  2.216293280000000e+00 * logT - 4.736868810000000e-02 * T +
                  1.150789418333333e-05 * T2 - 2.231836666666667e-09 * T3 +
                  2.181960905000000e-13 * T4;
  } else {
    // species 26: c3h6
    species[26] = -1.878212710000000e+03 * invT + 2.803202638000000e+01 -
                  8.015959580000001e+00 * logT - 6.851181700000000e-03 * T +
                  7.770828883333333e-07 * T2 - 6.010453350000000e-11 * T3 +
                  2.086850630000000e-15 * T4;
    // species 65: c7h15o2-1
    species[65] = -2.811133920000000e+04 * invT + 1.259704496000000e+02 -
                  2.526565560000000e+01 * logT - 1.754017935000000e-02 * T +
                  2.019646683333333e-06 * T2 - 1.578006716666667e-10 * T3 +
                  5.517706250000000e-15 * T4;
    // species 77: c7h14ooh1-3o2
    species[77] = -4.271718590000000e+04 * invT + 1.631326779000000e+02 -
                  3.201443490000000e+01 * logT - 1.700279980000000e-02 * T +
                  1.973597600000000e-06 * T2 - 1.550502891666667e-10 * T3 +
                  5.442550600000000e-15 * T4;
    // species 83: nc7ket13
    species[83] = -5.823454770000000e+04 * invT + 1.471387747000000e+02 -
                  2.907445070000000e+01 * logT - 1.585887290000000e-02 * T +
                  1.837710766666666e-06 * T2 - 1.442113400000000e-10 * T3 +
                  5.058084950000000e-15 * T4;
  }

  // species with midpoint at T=1389 kelvin
  if (T < 1389) {
    // species 37: c2h5o
    species[37] = -3.352529250000000e+03 * invT - 2.231351709200000e+01 -
                  4.944207080000000e-01 * logT - 1.358872170000000e-02 * T +
                  2.765150166666667e-06 * T2 - 4.293368333333333e-10 * T3 +
                  3.242484575000000e-14 * T4;
    // species 55: nc3h7coch2
    species[55] = -1.230622380000000e+04 * invT - 2.245298912900000e+01 -
                  9.582992710000000e-01 * logT - 2.840812660000000e-02 * T +
                  6.651879683333334e-06 * T2 - 1.272262616666667e-09 * T3 +
                  1.246105235000000e-13 * T4;
    // species 70: c7h14ooh2-3
    species[70] = -1.536406790000000e+04 * invT - 3.244996269500000e+01 -
                  8.497860050000000e-01 * logT - 4.625535980000000e-02 * T +
                  1.042266390000000e-05 * T2 - 1.815669916666666e-09 * T3 +
                  1.563601990000000e-13 * T4;
    // species 71: c7h14ooh2-4
    species[71] = -1.536406790000000e+04 * invT - 3.244996269500000e+01 -
                  8.497860050000000e-01 * logT - 4.625535980000000e-02 * T +
                  1.042266390000000e-05 * T2 - 1.815669916666666e-09 * T3 +
                  1.563601990000000e-13 * T4;
    // species 72: c7h14ooh3-2
    species[72] = -1.536406790000000e+04 * invT - 3.244996269500000e+01 -
                  8.497860050000000e-01 * logT - 4.625535980000000e-02 * T +
                  1.042266390000000e-05 * T2 - 1.815669916666666e-09 * T3 +
                  1.563601990000000e-13 * T4;
    // species 73: c7h14ooh3-4
    species[73] = -1.536406790000000e+04 * invT - 3.244996269500000e+01 -
                  8.497860050000000e-01 * logT - 4.625535980000000e-02 * T +
                  1.042266390000000e-05 * T2 - 1.815669916666666e-09 * T3 +
                  1.563601990000000e-13 * T4;
    // species 74: c7h14ooh3-5
    species[74] = -1.536406790000000e+04 * invT - 3.244996269500000e+01 -
                  8.497860050000000e-01 * logT - 4.625535980000000e-02 * T +
                  1.042266390000000e-05 * T2 - 1.815669916666666e-09 * T3 +
                  1.563601990000000e-13 * T4;
    // species 75: c7h14ooh4-2
    species[75] = -1.536406790000000e+04 * invT - 3.176048109500000e+01 -
                  8.497860050000000e-01 * logT - 4.625535980000000e-02 * T +
                  1.042266390000000e-05 * T2 - 1.815669916666666e-09 * T3 +
                  1.563601990000000e-13 * T4;
    // species 76: c7h14ooh4-3
    species[76] = -1.536406790000000e+04 * invT - 3.176048109500000e+01 -
                  8.497860050000000e-01 * logT - 4.625535980000000e-02 * T +
                  1.042266390000000e-05 * T2 - 1.815669916666666e-09 * T3 +
                  1.563601990000000e-13 * T4;
  } else {
    // species 37: c2h5o
    species[37] = -6.072749530000000e+03 * invT + 2.521507672000000e+01 -
                  7.873397720000000e+00 * logT - 5.653645350000000e-03 * T +
                  6.407023683333334e-07 * T2 - 4.953450875000000e-11 * T3 +
                  1.719472690000000e-15 * T4;
    // species 55: nc3h7coch2
    species[55] = -1.769685610000000e+04 * invT + 7.453673030000000e+01 -
                  1.615024190000000e+01 * logT - 1.070467330000000e-02 * T +
                  1.226766023333333e-06 * T2 - 9.554734666666667e-11 * T3 +
                  3.333563610000000e-15 * T4;
    // species 70: c7h14ooh2-3
    species[70] = -2.486366510000000e+04 * invT + 1.376054558000000e+02 -
                  2.740347780000000e+01 * logT - 1.637639465000000e-02 * T +
                  1.883196166666667e-06 * T2 - 1.470372075000000e-10 * T3 +
                  5.139347250000000e-15 * T4;
    // species 71: c7h14ooh2-4
    species[71] = -2.486366510000000e+04 * invT + 1.376054558000000e+02 -
                  2.740347780000000e+01 * logT - 1.637639465000000e-02 * T +
                  1.883196166666667e-06 * T2 - 1.470372075000000e-10 * T3 +
                  5.139347250000000e-15 * T4;
    // species 72: c7h14ooh3-2
    species[72] = -2.486366510000000e+04 * invT + 1.376054558000000e+02 -
                  2.740347780000000e+01 * logT - 1.637639465000000e-02 * T +
                  1.883196166666667e-06 * T2 - 1.470372075000000e-10 * T3 +
                  5.139347250000000e-15 * T4;
    // species 73: c7h14ooh3-4
    species[73] = -2.486366510000000e+04 * invT + 1.376054558000000e+02 -
                  2.740347780000000e+01 * logT - 1.637639465000000e-02 * T +
                  1.883196166666667e-06 * T2 - 1.470372075000000e-10 * T3 +
                  5.139347250000000e-15 * T4;
    // species 74: c7h14ooh3-5
    species[74] = -2.486366510000000e+04 * invT + 1.376054558000000e+02 -
                  2.740347780000000e+01 * logT - 1.637639465000000e-02 * T +
                  1.883196166666667e-06 * T2 - 1.470372075000000e-10 * T3 +
                  5.139347250000000e-15 * T4;
    // species 75: c7h14ooh4-2
    species[75] = -2.486366510000000e+04 * invT + 1.382949378000000e+02 -
                  2.740347780000000e+01 * logT - 1.637639465000000e-02 * T +
                  1.883196166666667e-06 * T2 - 1.470372075000000e-10 * T3 +
                  5.139347250000000e-15 * T4;
    // species 76: c7h14ooh4-3
    species[76] = -2.486366510000000e+04 * invT + 1.382949378000000e+02 -
                  2.740347780000000e+01 * logT - 1.637639465000000e-02 * T +
                  1.883196166666667e-06 * T2 - 1.470372075000000e-10 * T3 +
                  5.139347250000000e-15 * T4;
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 11: ho2
    species[11] = +8.091810130000000e+02 * invT - 5.210604430000000e+00 -
                  3.183106560000000e+00 * logT - 1.833839750000000e-03 * T +
                  1.553975203333333e-07 * T2 + 2.715440991666667e-11 * T3 -
                  7.556995600000000e-15 * T4;
    // species 39: ch3o2h
    species[39] = -1.771979260000000e+04 * invT - 6.021811320000000e+00 -
                  3.234428170000000e+00 * logT - 9.506488350000000e-03 * T +
                  1.889771450000000e-06 * T2 - 2.835888775000000e-10 * T3 +
                  2.059151110000000e-14 * T4;
    // species 59: c7h15-1
    species[59] = -1.045902230000000e+03 * invT - 3.515597150599999e+01 +
                  4.995704060000000e-01 * logT - 4.044132335000000e-02 * T +
                  8.342212566666667e-06 * T2 - 1.304577566666667e-09 * T3 +
                  9.830811350000000e-14 * T4;
    // species 63: c7h14-2
    species[63] = -1.173623590000000e+04 * invT - 3.715243979000000e+01 +
                  1.165332790000000e+00 * logT - 3.952199030000000e-02 * T +
                  8.268361100000000e-06 * T2 - 1.321408408333333e-09 * T3 +
                  1.026732165000000e-13 * T4;
    // species 66: c7h15o2-2
    species[66] = -2.157952540000000e+04 * invT - 3.258809058300000e+01 -
                  3.552529170000000e-01 * logT - 4.711905035000000e-02 * T +
                  1.111591843333333e-05 * T2 - 2.123296525000000e-09 * T3 +
                  2.066055525000000e-13 * T4;
    // species 67: c7h15o2-3
    species[67] = -2.157952540000000e+04 * invT - 3.258809058300000e+01 -
                  3.552529170000000e-01 * logT - 4.711905035000000e-02 * T +
                  1.111591843333333e-05 * T2 - 2.123296525000000e-09 * T3 +
                  2.066055525000000e-13 * T4;
    // species 68: c7h15o2-4
    species[68] = -2.157952540000000e+04 * invT - 3.189860898300000e+01 -
                  3.552529170000000e-01 * logT - 4.711905035000000e-02 * T +
                  1.111591843333333e-05 * T2 - 2.123296525000000e-09 * T3 +
                  2.066055525000000e-13 * T4;
    // species 78: c7h14ooh2-4o2
    species[78] = -3.463047880000000e+04 * invT - 3.021321351000000e+01 -
                  1.409124790000000e+00 * logT - 5.536041700000000e-02 * T +
                  1.451963458333333e-05 * T2 - 3.030522908333333e-09 * T3 +
                  3.141753445000000e-13 * T4;
    // species 79: c7h14ooh3-5o2
    species[79] = -3.463047880000000e+04 * invT - 3.021321351000000e+01 -
                  1.409124790000000e+00 * logT - 5.536041700000000e-02 * T +
                  1.451963458333333e-05 * T2 - 3.030522908333333e-09 * T3 +
                  3.141753445000000e-13 * T4;
    // species 80: c7h14ooh4-2o2
    species[80] = -3.463047880000000e+04 * invT - 3.021321351000000e+01 -
                  1.409124790000000e+00 * logT - 5.536041700000000e-02 * T +
                  1.451963458333333e-05 * T2 - 3.030522908333333e-09 * T3 +
                  3.141753445000000e-13 * T4;
  } else {
    // species 11: ho2
    species[11] = +3.981276890000000e+02 * invT + 9.803158699999996e-01 -
                  4.105474230000000e+00 * logT - 1.192264175000000e-03 * T +
                  1.343913315000000e-07 * T2 - 1.034931025000000e-11 * T3 +
                  3.582000540000000e-16 * T4;
    // species 39: ch3o2h
    species[39] = -1.966787710000000e+04 * invT + 2.754823381000000e+01 -
                  8.431170910000001e+00 * logT - 4.034089545000000e-03 * T +
                  4.618248683333333e-07 * T2 - 3.594435358333333e-11 * T3 +
                  1.253460730000000e-15 * T4;
    // species 59: c7h15-1
    species[59] = -9.209382210000000e+03 * invT + 1.082895020000000e+02 -
                  2.179407090000000e+01 * logT - 1.631401215000000e-02 * T +
                  1.852304066666667e-06 * T2 - 1.433892900000000e-10 * T3 +
                  4.981834995000000e-15 * T4;
    // species 63: c7h14-2
    species[63] = -1.967131620000000e+04 * invT + 1.028711434000000e+02 -
                  2.061920470000000e+01 * logT - 1.574264955000000e-02 * T +
                  1.786034283333333e-06 * T2 - 1.381897183333333e-10 * T3 +
                  4.799558925000000e-15 * T4;
    // species 66: c7h15o2-2
    species[66] = -3.068420950000000e+04 * invT + 1.314611270000000e+02 -
                  2.605356400000000e+01 * logT - 1.719158440000000e-02 * T +
                  1.978554116666667e-06 * T2 - 1.545418675000000e-10 * T3 +
                  5.402619949999999e-15 * T4;
    // species 67: c7h15o2-3
    species[67] = -3.068420950000000e+04 * invT + 1.314611270000000e+02 -
                  2.605356400000000e+01 * logT - 1.719158440000000e-02 * T +
                  1.978554116666667e-06 * T2 - 1.545418675000000e-10 * T3 +
                  5.402619949999999e-15 * T4;
    // species 68: c7h15o2-4
    species[68] = -3.068420950000000e+04 * invT + 1.321506090000000e+02 -
                  2.605356400000000e+01 * logT - 1.719158440000000e-02 * T +
                  1.978554116666667e-06 * T2 - 1.545418675000000e-10 * T3 +
                  5.402619949999999e-15 * T4;
    // species 78: c7h14ooh2-4o2
    species[78] = -4.528730030000000e+04 * invT + 1.688115396000000e+02 -
                  3.283582960000000e+01 * logT - 1.663836425000000e-02 * T +
                  1.930554750000000e-06 * T2 - 1.516321983333333e-10 * T3 +
                  5.321720950000000e-15 * T4;
    // species 79: c7h14ooh3-5o2
    species[79] = -4.528730030000000e+04 * invT + 1.688115396000000e+02 -
                  3.283582960000000e+01 * logT - 1.663836425000000e-02 * T +
                  1.930554750000000e-06 * T2 - 1.516321983333333e-10 * T3 +
                  5.321720950000000e-15 * T4;
    // species 80: c7h14ooh4-2o2
    species[80] = -4.528730030000000e+04 * invT + 1.688115396000000e+02 -
                  3.283582960000000e+01 * logT - 1.663836425000000e-02 * T +
                  1.930554750000000e-06 * T2 - 1.516321983333333e-10 * T3 +
                  5.321720950000000e-15 * T4;
  }

  // species with midpoint at T=1391 kelvin
  if (T < 1391) {
    // species 32: ch3coch2
    species[32] = -5.372332610000000e+03 * invT - 1.600124893000000e+01 -
                  1.803391870000000e+00 * logT - 1.507035425000000e-02 * T +
                  3.225092533333333e-06 * T2 - 5.318325283333333e-10 * T3 +
                  4.330515900000000e-14 * T4;
    // species 58: nc7h16
    species[58] = -2.565865650000000e+04 * invT - 3.664165307000000e+01 +
                  1.268361870000000e+00 * logT - 4.271779100000000e-02 * T +
                  8.755779766666667e-06 * T2 - 1.357881008333333e-09 * T3 +
                  1.011974625000000e-13 * T4;
  } else {
    // species 32: ch3coch2
    species[32] = -8.443804620000001e+03 * invT + 3.815011950000000e+01 -
                  1.023039750000000e+01 * logT - 5.824708050000000e-03 * T +
                  6.683425616666666e-07 * T2 - 5.210043716666667e-11 * T3 +
                  1.818921810000000e-15 * T4;
    // species 58: nc7h16
    species[58] = -3.427600810000000e+04 * invT + 1.145189165000000e+02 -
                  2.221489690000000e+01 * logT - 1.738378750000000e-02 * T +
                  1.973452150000000e-06 * T2 - 1.527487316666667e-10 * T3 +
                  5.306513300000000e-15 * T4;
  }

  // species with midpoint at T=1392 kelvin
  if (T < 1392) {
    // species 29: c4h7
    species[29] = +1.499335910000000e+04 * invT - 2.708007795200000e+01 +
                  3.505083520000000e-01 * logT - 2.132556215000000e-02 * T +
                  4.849656216666667e-06 * T2 - 8.783659500000000e-10 * T3 +
                  8.002992699999999e-14 * T4;
    // species 30: c4h8-1
    species[30] = -1.578750350000000e+03 * invT - 3.033979568900000e+01 +
                  8.313720890000000e-01 * logT - 2.262904890000000e-02 * T +
                  4.894309316666667e-06 * T2 - 8.351702999999999e-10 * T3 +
                  7.159584000000000e-14 * T4;
    // species 35: c5h9
    species[35] = +1.255898240000000e+04 * invT - 3.402426990000000e+01 +
                  1.380139500000000e+00 * logT - 2.788042435000000e-02 * T +
                  6.169065466666666e-06 * T2 - 1.057365841666667e-09 * T3 +
                  8.926941750000000e-14 * T4;
    // species 36: c5h10-1
    species[36] = -4.465466660000000e+03 * invT - 3.333621381000000e+01 +
                  1.062234810000000e+00 * logT - 2.871091470000000e-02 * T +
                  6.241448166666667e-06 * T2 - 1.061374908333333e-09 * T3 +
                  8.980489449999999e-14 * T4;
    // species 64: c7h14-3
    species[64] = -1.151410290000000e+04 * invT - 4.226189654000000e+01 +
                  2.030269940000000e+00 * logT - 4.131621885000000e-02 * T +
                  9.091907850000000e-06 * T2 - 1.564215183333333e-09 * T3 +
                  1.337856100000000e-13 * T4;
  } else {
    // species 29: c4h7
    species[29] = +1.090419370000000e+04 * invT + 4.676965930000000e+01 -
                  1.121035780000000e+01 * logT - 8.024159800000000e-03 * T +
                  9.108371533333334e-07 * T2 - 7.049508775000000e-11 * T3 +
                  2.448863695000000e-15 * T4;
    // species 30: c4h8-1
    species[30] = -5.978710380000000e+03 * invT + 4.778781060000000e+01 -
                  1.135086680000000e+01 * logT - 9.030893850000001e-03 * T +
                  1.026821715000000e-06 * T2 - 7.955441325000001e-11 * T3 +
                  2.765448205000000e-15 * T4;
    // species 35: c5h9
    species[35] = +7.004961350000000e+03 * invT + 6.563622270000000e+01 -
                  1.418604540000000e+01 * logT - 1.035644495000000e-02 * T +
                  1.178267695000000e-06 * T2 - 9.133927750000000e-11 * T3 +
                  3.176611040000000e-15 * T4;
    // species 36: c5h10-1
    species[36] = -1.008982050000000e+04 * invT + 6.695354750000000e+01 -
                  1.458515390000000e+01 * logT - 1.120362355000000e-02 * T +
                  1.272246708333333e-06 * T2 - 9.849080500000001e-11 * T3 +
                  3.421925695000000e-15 * T4;
    // species 64: c7h14-3
    species[64] = -1.964506040000000e+04 * invT + 1.032057752000000e+02 -
                  2.068227500000000e+01 * logT - 1.576943145000000e-02 * T +
                  1.792853583333333e-06 * T2 - 1.389085500000000e-10 * T3 +
                  4.829051965000000e-15 * T4;
  }

  // species with midpoint at T=1393 kelvin
  if (T < 1393) {
    // species 41: c2h3cho
    species[41] = -1.165215840000000e+04 * invT - 2.259547283800000e+01 -
                  2.923551620000000e-01 * logT - 1.771607085000000e-02 * T +
                  4.915605400000000e-06 * T2 - 1.067501033333333e-09 * T3 +
                  1.130720540000000e-13 * T4;
  } else {
    // species 41: c2h3cho
    species[41] = -1.496302810000000e+04 * invT + 4.114200200000001e+01 -
                  1.041849590000000e+01 * logT - 4.744816605000000e-03 * T +
                  5.488508816666667e-07 * T2 - 4.302326691666667e-11 * T3 +
                  1.507936455000000e-15 * T4;
  }

  // species with midpoint at T=1395 kelvin
  if (T < 1395) {
    // species 31: pc4h9
    species[31] = +7.689452480000000e+03 * invT - 2.912305292500000e+01 +
                  4.377797250000000e-01 * logT - 2.394861820000000e-02 * T +
                  5.233719316666667e-06 * T2 - 9.148872666666667e-10 * T3 +
                  8.100533200000001e-14 * T4;
    // species 43: c4h7o
    species[43] = +4.850903260000000e+03 * invT - 3.631744782000000e+01 +
                  1.606191920000000e+00 * logT - 2.792813410000000e-02 * T +
                  7.259929450000000e-06 * T2 - 1.421577325000000e-09 * T3 +
                  1.328175900000000e-13 * T4;
    // species 81: c7h14o1-3
    species[81] = -2.442922870000000e+04 * invT - 6.197721270000000e+01 +
                  5.500364500000000e+00 * logT - 5.007754400000000e-02 * T +
                  1.216559761666667e-05 * T2 - 2.327868916666667e-09 * T3 +
                  2.211228480000000e-13 * T4;
  } else {
    // species 31: pc4h9
    species[31] = +3.172319420000000e+03 * invT + 5.149359040000000e+01 -
                  1.215100820000000e+01 * logT - 9.715535850000000e-03 * T +
                  1.102629916666667e-06 * T2 - 8.531261333333333e-11 * T3 +
                  2.962648535000000e-15 * T4;
    // species 43: c4h7o
    species[43] = -7.293428840000000e+02 * invT + 7.060756390000000e+01 -
                  1.531377800000000e+01 * logT - 7.171350850000000e-03 * T +
                  8.027091950000000e-07 * T2 - 6.163123658333333e-11 * T3 +
                  2.130704070000000e-15 * T4;
    // species 81: c7h14o1-3
    species[81] = -3.415914190000000e+04 * invT + 1.173265479000000e+02 -
                  2.269189160000000e+01 * logT - 1.662552360000000e-02 * T +
                  1.907629416666667e-06 * T2 - 1.487129458333333e-10 * T3 +
                  5.192055600000000e-15 * T4;
  }

  // species with midpoint at T=1397 kelvin
  if (T < 1397) {
    // species 47: c3h5-a
    species[47] = +1.938342260000000e+04 * invT - 2.583584505800000e+01 +
                  5.291319580000000e-01 * logT - 1.672795500000000e-02 * T +
                  4.223350450000001e-06 * T2 - 8.572146166666666e-10 * T3 +
                  8.662917000000000e-14 * T4;
  } else {
    // species 47: c3h5-a
    species[47] = +1.635760920000000e+04 * invT + 3.103978458000000e+01 -
                  8.458839579999999e+00 * logT - 5.634774150000000e-03 * T +
                  6.396547733333333e-07 * T2 - 4.950492658333333e-11 * T3 +
                  1.719590150000000e-15 * T4;
  }

  // species with midpoint at T=1398 kelvin
  if (T < 1398) {
    // species 27: c4h6
    species[27] = +1.175513140000000e+04 * invT - 3.051353451000000e+01 +
                  1.430951210000000e+00 * logT - 2.393530310000000e-02 * T +
                  6.924113333333333e-06 * T2 - 1.596246266666667e-09 * T3 +
                  1.785792535000000e-13 * T4;
  } else {
    // species 27: c4h6
    species[27] = +7.790397700000000e+03 * invT + 4.814817380000000e+01 -
                  1.116337890000000e+01 * logT - 6.858198250000000e-03 * T +
                  7.828596383333334e-07 * T2 - 6.080781966666666e-11 * T3 +
                  2.117431015000000e-15 * T4;
  }

  // species with midpoint at T=1399 kelvin
  if (T < 1399) {
    // species 82: c7h14o2-4
    species[82] = -2.671182950000000e+04 * invT - 6.056790396000000e+01 +
                  5.394772060000000e+00 * logT - 5.092328850000000e-02 * T +
                  1.266743726666667e-05 * T2 - 2.471150166666667e-09 * T3 +
                  2.374271850000000e-13 * T4;
  } else {
    // species 82: c7h14o2-4
    species[82] = -3.643496640000000e+04 * invT + 1.212150009000000e+02 -
                  2.326927310000000e+01 * logT - 1.627926955000000e-02 * T +
                  1.860415100000000e-06 * T2 - 1.446447150000000e-10 * T3 +
                  5.040660750000000e-15 * T4;
  }

  // species with midpoint at T=1400 kelvin
  if (T < 1400) {
    // species 25: c3h4-a
    species[25] = +2.251243000000000e+04 * invT - 7.395871000000000e+00 -
                  2.539831000000000e+00 * logT - 8.167185000000000e-03 * T +
                  2.941583333333333e-07 * T2 + 3.872804166666666e-10 * T3 -
                  8.645655000000001e-14 * T4;
  } else {
    // species 25: c3h4-a
    species[25] = +1.954972000000000e+04 * invT + 4.054686600000000e+01 -
                  9.776256000000000e+00 * logT - 2.651069000000000e-03 * T +
                  6.168530000000000e-08 * T2 + 2.521988333333334e-11 * T3 -
                  2.544790500000000e-15 * T4;
  }

  // species with midpoint at T=1402 kelvin
  if (T < 1402) {
    // species 40: c2h3co
    species[40] = +4.257702150000000e+03 * invT - 1.590023447000000e+01 -
                  1.362420130000000e+00 * logT - 1.576369860000000e-02 * T +
                  5.003648916666666e-06 * T2 - 1.234725933333333e-09 * T3 +
                  1.439857650000000e-13 * T4;
  } else {
    // species 40: c2h3co
    species[40] = +1.929695140000000e+03 * invT + 3.346394636000000e+01 -
                  9.374676760000000e+00 * logT - 3.956484500000000e-03 * T +
                  4.453304666666666e-07 * T2 - 3.425961916666666e-11 * T3 +
                  1.184894905000000e-15 * T4;
  }
}

// compute the a/(RT) at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
helmholtz(amrex::Real* species, const amrex::Real T)
{
  const amrex::Real T2 = T * T;
  const amrex::Real T3 = T * T * T;
  const amrex::Real T4 = T * T * T * T;
  const amrex::Real invT = 1.0 / T;
  const amrex::Real logT = log(T);

  // species with no change across T
  // species 0: h
  species[0] = +2.54747466e+04 * invT + 1.96638554e+00 - 2.50104422e+00 * logT;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 1: h2
    species[1] = -1.01252100e+03 * invT + 5.59221800e+00 -
                 3.29812400e+00 * logT - 4.12472100e-04 * T +
                 1.35716917e-07 * T2 + 7.89619500e-12 * T3 -
                 2.06743600e-14 * T4;
    // species 2: o
    species[2] = +2.91476400e+04 * invT - 1.01756600e+00 -
                 2.94642900e+00 * logT + 8.19083000e-04 * T -
                 4.03505333e-07 * T2 + 1.33570250e-10 * T3 -
                 1.94534800e-14 * T4;
    // species 3: o2
    species[3] = -1.00524900e+03 * invT - 3.82180200e+00 -
                 3.21293600e+00 * logT - 5.63743000e-04 * T +
                 9.59358333e-08 * T2 - 1.09489750e-10 * T3 +
                 4.38427700e-14 * T4;
    // species 5: h2o
    species[5] = -3.02081100e+04 * invT - 2.03391000e-01 -
                 3.38684200e+00 * logT - 1.73749100e-03 * T +
                 1.05911600e-06 * T2 - 5.80715083e-10 * T3 +
                 1.25329400e-13 * T4;
    // species 6: co
    species[6] = -1.43105400e+04 * invT - 2.58644500e+00 -
                 3.26245200e+00 * logT - 7.55970500e-04 * T +
                 6.46959167e-07 * T2 - 4.65162000e-10 * T3 +
                 1.23747550e-13 * T4;
    // species 7: hco
    species[7] = +4.15992200e+03 * invT - 7.08528400e+00 -
                 2.89833000e+00 * logT - 3.09957350e-03 * T +
                 1.60384733e-06 * T2 - 9.08187500e-10 * T3 +
                 2.28744250e-13 * T4;
    // species 8: co2
    species[8] = -4.83731400e+04 * invT - 8.91276500e+00 -
                 2.27572500e+00 * logT - 4.96103600e-03 * T +
                 1.73485167e-06 * T2 - 5.72223917e-10 * T3 +
                 1.05864000e-13 * T4;
    // species 9: ch3
    species[9] = +1.64237800e+04 * invT - 5.35935100e+00 -
                 2.43044300e+00 * logT - 5.56205000e-03 * T +
                 2.80036667e-06 * T2 - 1.35152417e-09 * T3 +
                 2.93247650e-13 * T4;
    // species 10: ch4
    species[10] = -9.82522900e+03 * invT - 1.39434485e+01 -
                  7.78741500e-01 * logT - 8.73834000e-03 * T +
                  4.63901500e-06 * T2 - 2.54142333e-09 * T3 +
                  6.11965500e-13 * T4;
    // species 12: h2o2
    species[12] = -1.76631500e+04 * invT - 4.39660900e+00 -
                  3.38875400e+00 * logT - 3.28461300e-03 * T +
                  2.47502167e-08 * T2 + 3.85483833e-10 * T3 -
                  1.23575750e-13 * T4;
    // species 13: ch2o
    species[13] = -1.48654000e+04 * invT - 1.31320890e+01 -
                  1.65273100e+00 * logT - 6.31572000e-03 * T +
                  3.14694667e-06 * T2 - 1.70835917e-09 * T3 +
                  4.20661850e-13 * T4;
    // species 14: ch3o
    species[14] = +9.78601100e+02 * invT - 1.20459760e+01 -
                  2.10620400e+00 * logT - 3.60829750e-03 * T -
                  8.89745333e-07 * T2 + 6.14803000e-10 * T3 -
                  1.03780550e-13 * T4;
    // species 16: c2h4
    species[16] = +5.57304600e+03 * invT - 2.60729780e+01 +
                  8.61488000e-01 * logT - 1.39808150e-02 * T +
                  5.64779500e-06 * T2 - 2.32096000e-09 * T3 +
                  4.86893950e-13 * T4;
    // species 17: c2h5
    species[17] = +1.28704000e+04 * invT - 1.04474980e+01 -
                  2.69070200e+00 * logT - 4.35956650e-03 * T -
                  7.36639833e-07 * T2 - 7.78225250e-11 * T3 +
                  1.96388650e-13 * T4;
    // species 18: c2h2
    species[18] = +2.61244400e+04 * invT - 7.79181600e+00 -
                  2.01356200e+00 * logT - 7.59522500e-03 * T +
                  2.69386500e-06 * T2 - 7.56582667e-10 * T3 +
                  9.56373000e-14 * T4;
    // species 19: c2h3
    species[19] = +3.33522500e+04 * invT - 1.00969240e+01 -
                  2.45927600e+00 * logT - 3.68573800e-03 * T -
                  3.51645500e-07 * T2 + 1.10136833e-10 * T3 +
                  5.92392000e-14 * T4;
    // species 20: ch2co
    species[20] = -7.63263700e+03 * invT - 6.69858200e+00 -
                  2.97497100e+00 * logT - 6.05935500e-03 * T +
                  3.90841000e-07 * T2 + 5.38890417e-10 * T3 -
                  1.95282450e-13 * T4;
    // species 21: hcco
    species[21] = +1.96589200e+04 * invT + 3.56612110e+00 -
                  5.04796500e+00 * logT - 2.22673900e-03 * T -
                  3.78047167e-08 * T2 + 1.23507917e-10 * T3 -
                  1.12537100e-14 * T4;
    // species 22: ch3co
    species[22] = -4.10850800e+03 * invT - 9.10357200e+00 -
                  3.12527800e+00 * logT - 4.88911000e-03 * T -
                  7.53574667e-07 * T2 + 7.50788500e-10 * T3 -
                  1.59685900e-13 * T4;
    // species 23: ch2cho
    species[23] = +1.52147700e+03 * invT - 7.14922800e+00 -
                  3.40906200e+00 * logT - 5.36928500e-03 * T -
                  3.15248667e-07 * T2 + 5.96548583e-10 * T3 -
                  1.43369250e-13 * T4;
    // species 24: ch3cho
    species[24] = -2.12458900e+04 * invT - 1.18451950e+01 -
                  2.50569500e+00 * logT - 6.68495500e-03 * T -
                  7.78658833e-07 * T2 + 9.40116667e-10 * T3 -
                  2.13178300e-13 * T4;
    // species 28: nc3h7
    species[28] = +9.71328100e+03 * invT - 1.30701730e+01 -
                  1.92253700e+00 * logT - 1.23946350e-02 * T -
                  3.01708167e-07 * T2 + 1.48605500e-09 * T3 -
                  4.29149800e-13 * T4;
    // species 48: c3h3
    species[48] = +3.98888300e+04 * invT + 3.16874510e+00 -
                  4.75420000e+00 * logT - 5.54014000e-03 * T -
                  4.65553833e-08 * T2 + 4.56601000e-10 * T3 -
                  9.74814500e-14 * T4;
    // species 49: c3h2
    species[49] = +6.35042100e+04 * invT - 6.70273200e+00 -
                  3.16671400e+00 * logT - 1.24128600e-02 * T +
                  7.65272833e-06 * T2 - 3.55668250e-09 * T3 +
                  7.41076000e-13 * T4;
    // species 50: ch2(s)
    species[50] = +4.98936800e+04 * invT + 2.91373293e+00 -
                  3.97126500e+00 * logT + 8.49544500e-05 * T -
                  1.70894833e-07 * T2 - 2.07712583e-10 * T3 +
                  9.90633000e-14 * T4;
    // species 87: n2
    species[87] = -1.02090000e+03 * invT - 1.65169500e+00 -
                  3.29867700e+00 * logT - 7.04120000e-04 * T +
                  6.60537000e-07 * T2 - 4.70126250e-10 * T3 +
                  1.22242750e-13 * T4;
  } else {
    // species 1: h2
    species[1] = -8.35034000e+02 * invT + 3.34653300e+00 -
                 2.99142300e+00 * logT - 3.50032200e-04 * T +
                 9.38971500e-09 * T2 + 7.69298167e-13 * T3 -
                 7.91376000e-17 * T4;
    // species 2: o
    species[2] = +2.92308000e+04 * invT - 3.37824800e+00 -
                 2.54206000e+00 * logT + 1.37753100e-05 * T +
                 5.17133833e-10 * T2 - 3.79255583e-13 * T3 +
                 2.18402600e-17 * T4;
    // species 3: o2
    species[3] = -1.23393000e+03 * invT - 4.91588000e-01 -
                 3.69757800e+00 * logT - 3.06759850e-04 * T +
                 2.09807000e-08 * T2 - 1.47940083e-12 * T3 +
                 5.68217500e-17 * T4;
    // species 5: h2o
    species[5] = -2.98992100e+04 * invT - 5.19067100e+00 -
                 2.67214600e+00 * logT - 1.52814650e-03 * T +
                 1.45504333e-07 * T2 - 1.00083000e-11 * T3 +
                 3.19580900e-16 * T4;
    // species 6: co
    species[6] = -1.42683500e+04 * invT - 4.08314000e+00 -
                 3.02507800e+00 * logT - 7.21344500e-04 * T +
                 9.38471333e-08 * T2 - 8.48817500e-12 * T3 +
                 3.45547600e-16 * T4;
    // species 7: hco
    species[7] = +3.91632400e+03 * invT - 2.99502800e+00 -
                 3.55727100e+00 * logT - 1.67278650e-03 * T +
                 2.22501000e-07 * T2 - 2.05881083e-11 * T3 +
                 8.56925500e-16 * T4;
    // species 8: co2
    species[8] = -4.89669600e+04 * invT + 4.40901890e+00 -
                 4.45362300e+00 * logT - 1.57008450e-03 * T +
                 2.13068500e-07 * T2 - 1.99499750e-11 * T3 +
                 8.34516500e-16 * T4;
    // species 9: ch3
    species[9] = +1.64378100e+04 * invT - 3.60864500e+00 -
                 2.84405200e+00 * logT - 3.06898700e-03 * T +
                 3.71724167e-07 * T2 - 3.15430083e-11 * T3 +
                 1.22607950e-15 * T4;
    // species 10: ch4
    species[10] = -1.00807900e+04 * invT - 8.93991600e+00 -
                  1.68347900e+00 * logT - 5.11862000e-03 * T +
                  6.45854833e-07 * T2 - 5.65465417e-11 * T3 +
                  2.25171150e-15 * T4;
    // species 12: h2o2
    species[12] = -1.80069600e+04 * invT + 3.07203000e+00 -
                  4.57316700e+00 * logT - 2.16806800e-03 * T +
                  2.45781500e-07 * T2 - 1.95742000e-11 * T3 +
                  7.15827000e-16 * T4;
    // species 13: ch2o
    species[13] = -1.53203700e+04 * invT - 4.91696600e+00 -
                  2.99560600e+00 * logT - 3.34066050e-03 * T +
                  4.38159167e-07 * T2 - 3.94762750e-11 * T3 +
                  1.60625850e-15 * T4;
    // species 14: ch3o
    species[14] = +1.27832500e+02 * invT - 1.58775000e-01 -
                  3.77080000e+00 * logT - 3.93574850e-03 * T +
                  4.42730667e-07 * T2 - 3.28702583e-11 * T3 +
                  1.05630800e-15 * T4;
    // species 16: c2h4
    species[16] = +4.42828900e+03 * invT + 2.98030000e-01 -
                  3.52841900e+00 * logT - 5.74259000e-03 * T +
                  7.36397500e-07 * T2 - 6.53716750e-11 * T3 +
                  2.63342400e-15 * T4;
    // species 17: c2h5
    species[17] = +1.06745500e+04 * invT + 2.09713700e+01 -
                  7.19048000e+00 * logT - 3.24203850e-03 * T +
                  1.07134417e-07 * T2 + 1.95656583e-11 * T3 -
                  1.94043850e-15 * T4;
    // species 18: c2h2
    species[18] = +2.56676600e+04 * invT + 6.23710800e+00 -
                  4.43677000e+00 * logT - 2.68801950e-03 * T +
                  3.18802833e-07 * T2 - 2.73864917e-11 * T3 +
                  1.07835500e-15 * T4;
    // species 19: c2h3
    species[19] = +3.18543500e+04 * invT + 1.34637810e+01 -
                  5.93346800e+00 * logT - 2.00887300e-03 * T +
                  6.61123333e-08 * T2 + 1.20105583e-11 * T3 -
                  1.18932200e-15 * T4;
    // species 20: ch2co
    species[20] = -8.58340200e+03 * invT + 1.26963980e+01 -
                  6.03881700e+00 * logT - 2.90242000e-03 * T +
                  3.20159000e-07 * T2 - 2.32873750e-11 * T3 +
                  7.29434000e-16 * T4;
    // species 21: hcco
    species[21] = +1.90151300e+04 * invT + 1.48293350e+01 -
                  6.75807300e+00 * logT - 1.00020000e-03 * T +
                  3.37934500e-08 * T2 + 8.67610000e-12 * T3 -
                  9.82582500e-16 * T4;
    // species 22: ch3co
    species[22] = -5.18786300e+03 * invT + 7.88722800e+00 -
                  5.61227900e+00 * logT - 4.22494300e-03 * T +
                  4.75691167e-07 * T2 - 3.53198000e-11 * T3 +
                  1.13420200e-15 * T4;
    // species 23: ch2cho
    species[23] = +4.90321800e+02 * invT + 1.00209210e+01 -
                  5.97567000e+00 * logT - 4.06529550e-03 * T +
                  4.57270667e-07 * T2 - 3.39192000e-11 * T3 +
                  1.08800850e-15 * T4;
    // species 24: ch3cho
    species[24] = -2.26456900e+04 * invT + 1.08815960e+01 -
                  5.86865000e+00 * logT - 5.39712000e-03 * T +
                  6.07588333e-07 * T2 - 4.51076000e-11 * T3 +
                  1.44842200e-15 * T4;
    // species 28: nc3h7
    species[28] = +7.57940200e+03 * invT + 2.63344010e+01 -
                  7.97829100e+00 * logT - 7.88056500e-03 * T +
                  8.62207167e-07 * T2 - 6.20324333e-11 * T3 +
                  1.91248900e-15 * T4;
    // species 48: c3h3
    species[48] = +3.84742000e+04 * invT + 2.96102370e+01 -
                  8.83104700e+00 * logT - 2.17859750e-03 * T +
                  6.84844500e-08 * T2 + 1.97393583e-11 * T3 -
                  2.18826000e-15 * T4;
    // species 49: c3h2
    species[49] = +6.25972200e+04 * invT + 1.90398810e+01 -
                  7.67098100e+00 * logT - 1.37437450e-03 * T +
                  7.28490500e-08 * T2 + 5.37966583e-12 * T3 -
                  8.31943500e-16 * T4;
    // species 50: ch2(s)
    species[50] = +4.98497500e+04 * invT + 8.66319000e-01 -
                  3.55288900e+00 * logT - 1.03339400e-03 * T +
                  3.19019333e-08 * T2 + 9.20560833e-12 * T3 -
                  1.01067500e-15 * T4;
    // species 87: n2
    species[87] = -9.22797700e+02 * invT - 4.05388800e+00 -
                  2.92664000e+00 * logT - 7.43988500e-04 * T +
                  9.47460167e-08 * T2 - 8.41420000e-12 * T3 +
                  3.37667550e-16 * T4;
  }

  // species with midpoint at T=1357 kelvin
  if (T < 1357) {
    // species 4: oh
    species[4] = +3.74321252e+03 * invT - 1.42790800e-02 -
                 3.43586219e+00 * logT - 1.01117902e-04 * T +
                 1.89244020e-08 * T2 - 2.02037624e-11 * T3 +
                 3.71825515e-15 * T4;
  } else {
    // species 4: oh
    species[4] = +4.12085374e+03 * invT - 5.48067553e+00 -
                 2.62599754e+00 * logT - 6.59962030e-04 * T +
                 5.99541117e-08 * T2 - 3.54692333e-12 * T3 +
                 9.10240080e-17 * T4;
  }

  // species with midpoint at T=1373 kelvin
  if (T < 1373) {
    // species 34: c2h5co
    species[34] = -5.69663063e+03 * invT - 1.16626960e+01 -
                  2.93313946e+00 * logT - 1.23713956e-02 * T +
                  2.02036672e-06 * T2 - 1.95584207e-10 * T3 +
                  2.63421669e-15 * T4;
  } else {
    // species 34: c2h5co
    species[34] = -8.47292283e+03 * invT + 3.38023396e+01 -
                  9.87881997e+00 * logT - 5.87578380e-03 * T +
                  6.67691538e-07 * T2 - 5.17375514e-11 * T3 +
                  1.79917613e-15 * T4;
  }

  // species with midpoint at T=1377 kelvin
  if (T < 1377) {
    // species 45: c4h8ooh1-3
    species[45] = -4.34315962e+03 * invT - 2.30819843e+01 -
                  1.94106276e+00 * logT - 2.59394676e-02 * T +
                  5.17352805e-06 * T2 - 7.19640734e-10 * T3 +
                  4.21420997e-14 * T4;
  } else {
    // species 45: c4h8ooh1-3
    species[45] = -1.01859280e+04 * invT + 7.83557983e+01 -
                  1.76442170e+01 * logT - 9.58532680e-03 * T +
                  1.09528107e-06 * T2 - 8.52054758e-11 * T3 +
                  2.97152367e-15 * T4;
  }

  // species with midpoint at T=1378 kelvin
  if (T < 1378) {
    // species 33: c2h5cho
    species[33] = -2.42260137e+04 * invT - 1.49522504e+01 -
                  2.16308444e+00 * logT - 1.47750632e-02 * T +
                  2.54077087e-06 * T2 - 2.91253289e-10 * T3 +
                  1.19448313e-14 * T4;
    // species 52: nc3h7cho
    species[52] = -2.71032194e+04 * invT - 1.82826978e+01 -
                  1.87415959e+00 * logT - 2.09620158e-02 * T +
                  3.91914632e-06 * T2 - 5.22428061e-10 * T3 +
                  3.04721954e-14 * T4;
  } else {
    // species 33: c2h5cho
    species[33] = -2.74143135e+04 * invT + 3.77774538e+01 -
                  1.02427695e+01 * logT - 6.98209945e-03 * T +
                  7.93746668e-07 * T2 - 6.15088088e-11 * T3 +
                  2.13879752e-15 * T4;
    // species 52: nc3h7cho
    species[52] = -3.15845348e+04 * invT + 5.77778296e+01 -
                  1.35988068e+01 * logT - 9.08262370e-03 * T +
                  1.02974076e-06 * T2 - 7.96650173e-11 * T3 +
                  2.76721479e-15 * T4;
  }

  // species with midpoint at T=1380 kelvin
  if (T < 1380) {
    // species 42: c3h5o
    species[42] = +9.58217784e+03 * invT - 2.13583963e+01 -
                  1.19822582e+00 * logT - 1.52789918e-02 * T +
                  3.01050460e-06 * T2 - 4.05125028e-10 * T3 +
                  2.09927281e-14 * T4;
    // species 53: nc3h7co
    species[53] = -8.58050888e+03 * invT - 1.48123267e+01 -
                  2.67256826e+00 * logT - 1.85599412e-02 * T +
                  3.44771432e-06 * T2 - 4.57394907e-10 * T3 +
                  2.67932092e-14 * T4;
  } else {
    // species 42: c3h5o
    species[42] = +6.26560810e+03 * invT + 3.70206794e+01 -
                  1.02551752e+01 * logT - 5.74918600e-03 * T +
                  6.41076098e-07 * T2 - 4.90758622e-11 * T3 +
                  1.69278961e-15 * T4;
    // species 53: nc3h7co
    species[53] = -1.25523385e+04 * invT + 5.22634846e+01 -
                  1.30026331e+01 * logT - 8.15524385e-03 * T +
                  9.29404832e-07 * T2 - 7.21392191e-11 * T3 +
                  2.51127833e-15 * T4;
  }

  // species with midpoint at T=1381 kelvin
  if (T < 1381) {
    // species 56: nc4h9cho
    species[56] = -2.99841025e+04 * invT - 2.15315151e+01 -
                  1.59663472e+00 * logT - 2.71770708e-02 * T +
                  5.35034418e-06 * T2 - 7.79811299e-10 * T3 +
                  5.33444660e-14 * T4;
  } else {
    // species 56: nc4h9cho
    species[56] = -3.56826080e+04 * invT + 7.67028475e+01 -
                  1.67965163e+01 * logT - 1.12842260e-02 * T +
                  1.27938598e-06 * T2 - 9.89744742e-11 * T3 +
                  3.43772777e-15 * T4;
  }

  // species with midpoint at T=1382 kelvin
  if (T < 1382) {
    // species 57: nc4h9co
    species[57] = -1.14675541e+04 * invT - 1.78342855e+01 -
                  2.43530238e+00 * logT - 2.46841188e-02 * T +
                  4.83138470e-06 * T2 - 7.02386510e-10 * T3 +
                  4.84143586e-14 * T4;
    // species 60: c7h15-2
    species[60] = -2.35605303e+03 * invT - 3.47700662e+01 +
                  3.79155767e-02 * logT - 3.78363285e-02 * T +
                  6.79122723e-06 * T2 - 7.77232453e-10 * T3 +
                  2.46180373e-14 * T4;
    // species 61: c7h15-3
    species[61] = -2.35605303e+03 * invT - 3.47700662e+01 +
                  3.79155767e-02 * logT - 3.78363285e-02 * T +
                  6.79122723e-06 * T2 - 7.77232453e-10 * T3 +
                  2.46180373e-14 * T4;
    // species 62: c7h15-4
    species[62] = -2.35605303e+03 * invT - 3.40805846e+01 +
                  3.79155767e-02 * logT - 3.78363285e-02 * T +
                  6.79122723e-06 * T2 - 7.77232453e-10 * T3 +
                  2.46180373e-14 * T4;
  } else {
    // species 57: nc4h9co
    species[57] = -1.66537752e+04 * invT + 7.10726518e+01 -
                  1.61782939e+01 * logT - 1.03995960e-02 * T +
                  1.18631315e-06 * T2 - 9.21333125e-11 * T3 +
                  3.20848593e-15 * T4;
    // species 60: c7h15-2
    species[60] = -1.05873616e+04 * invT + 1.05857850e+02 -
                  2.16368842e+01 * logT - 1.61662402e-02 * T +
                  1.82123012e-06 * T2 - 1.40297550e-10 * T3 +
                  4.85887045e-15 * T4;
    // species 61: c7h15-3
    species[61] = -1.05873616e+04 * invT + 1.05857850e+02 -
                  2.16368842e+01 * logT - 1.61662402e-02 * T +
                  1.82123012e-06 * T2 - 1.40297550e-10 * T3 +
                  4.85887045e-15 * T4;
    // species 62: c7h15-4
    species[62] = -1.05873616e+04 * invT + 1.06547331e+02 -
                  2.16368842e+01 * logT - 1.61662402e-02 * T +
                  1.82123012e-06 * T2 - 1.40297550e-10 * T3 +
                  4.85887045e-15 * T4;
  }

  // species with midpoint at T=1383 kelvin
  if (T < 1383) {
    // species 54: c2h5coch2
    species[54] = -9.50796505e+03 * invT - 1.94305255e+01 -
                  1.54013856e+00 * logT - 2.19743129e-02 * T +
                  4.95004035e-06 * T2 - 8.79127608e-10 * T3 +
                  7.92993845e-14 * T4;
    // species 69: c7h14ooh1-3
    species[69] = -1.29868314e+04 * invT - 3.28085431e+01 -
                  1.11146206e+00 * logT - 4.45797696e-02 * T +
                  9.45587303e-06 * T2 - 1.49075078e-09 * T3 +
                  1.11130103e-13 * T4;
  } else {
    // species 54: c2h5coch2
    species[54] = -1.41284951e+04 * invT + 6.19231649e+01 -
                  1.42098738e+01 * logT - 7.89332295e-03 * T +
                  9.17548638e-07 * T2 - 7.21558783e-11 * T3 +
                  2.53456664e-15 * T4;
    // species 69: c7h14ooh1-3
    species[69] = -2.24977070e+04 * invT + 1.35130806e+02 -
                  2.72290222e+01 * logT - 1.62460950e-02 * T +
                  1.85432930e-06 * T2 - 1.44107398e-10 * T3 +
                  5.02141630e-15 * T4;
  }

  // species with midpoint at T=1384 kelvin
  if (T < 1384) {
    // species 15: c2h6
    species[15] = -1.12345534e+04 * invT - 2.21901604e+01 +
                  2.52854344e-02 * logT - 1.20382377e-02 * T +
                  1.86489120e-06 * T2 - 1.73617417e-10 * T3 +
                  2.64934308e-15 * T4;
  } else {
    // species 15: c2h6
    species[15] = -1.37500014e+04 * invT + 1.81149589e+01 -
                  6.10683385e+00 * logT - 6.46181805e-03 * T +
                  7.37545327e-07 * T2 - 5.72826438e-11 * T3 +
                  1.99450866e-15 * T4;
  }

  // species with midpoint at T=1385 kelvin
  if (T < 1385) {
    // species 38: ch3o2
    species[38] = -6.84394259e+02 * invT - 1.90183414e+00 -
                  4.26146906e+00 * logT - 5.04367995e-03 * T +
                  5.35843640e-07 * T2 - 1.74507723e-11 * T3 -
                  2.09169552e-15 * T4;
    // species 46: pc4h9o2
    species[46] = -1.08358103e+04 * invT - 2.04066784e+01 -
                  1.94363650e+00 * logT - 2.57756581e-02 * T +
                  5.47140667e-06 * T2 - 9.42207167e-10 * T3 +
                  8.50593030e-14 * T4;
  } else {
    // species 38: ch3o2
    species[38] = -1.53574838e+03 * invT + 9.67751777e+00 -
                  5.95787891e+00 * logT - 3.95364313e-03 * T +
                  4.47077057e-07 * T2 - 3.44909447e-11 * T3 +
                  1.19503665e-15 * T4;
    // species 46: pc4h9o2
    species[46] = -1.60146054e+04 * invT + 6.88233973e+01 -
                  1.57845448e+01 * logT - 1.07605455e-02 * T +
                  1.24151503e-06 * T2 - 9.71317258e-11 * T3 +
                  3.39942805e-15 * T4;
  }

  // species with midpoint at T=1386 kelvin
  if (T < 1386) {
    // species 51: nc4ket13
    species[51] = -4.01065878e+04 * invT - 1.70583744e+01 -
                  2.74883461e+00 * logT - 2.93468373e-02 * T +
                  7.49343158e-06 * T2 - 1.52666775e-09 * T3 +
                  1.55882685e-13 * T4;
    // species 86: nc7ket42
    species[86] = -5.27586830e+04 * invT - 2.40231295e+01 -
                  2.32269738e+00 * logT - 4.72580075e-02 * T +
                  1.16509530e-05 * T2 - 2.33144097e-09 * T3 +
                  2.37122215e-13 * T4;
  } else {
    // species 51: nc4ket13
    species[51] = -4.59588851e+04 * invT + 9.03335902e+01 -
                  1.96430808e+01 * logT - 9.04702830e-03 * T +
                  1.05510539e-06 * T2 - 8.31550333e-11 * T3 +
                  2.92538229e-15 * T4;
    // species 86: nc7ket42
    species[86] = -6.20252988e+04 * invT + 1.43792543e+02 -
                  2.86572867e+01 * logT - 1.60783954e-02 * T +
                  1.86602617e-06 * T2 - 1.46579167e-10 * T3 +
                  5.14459800e-15 * T4;
  }

  // species with midpoint at T=1387 kelvin
  if (T < 1387) {
    // species 44: c4h8ooh1-3o2
    species[44] = -2.37391490e+04 * invT - 2.26131460e+01 -
                  2.22400728e+00 * logT - 3.52497310e-02 * T +
                  9.44964712e-06 * T2 - 2.02189792e-09 * T3 +
                  2.14857729e-13 * T4;
    // species 84: nc7ket24
    species[84] = -5.23839542e+04 * invT - 2.88557665e+01 -
                  1.52936692e+00 * logT - 4.79086733e-02 * T +
                  1.16114753e-05 * T2 - 2.24616985e-09 * T3 +
                  2.19364063e-13 * T4;
    // species 85: nc7ket35
    species[85] = -5.23839542e+04 * invT - 2.88557665e+01 -
                  1.52936692e+00 * logT - 4.79086733e-02 * T +
                  1.16114753e-05 * T2 - 2.24616985e-09 * T3 +
                  2.19364063e-13 * T4;
  } else {
    // species 44: c4h8ooh1-3o2
    species[44] = -3.05468277e+04 * invT + 1.04591008e+02 -
                  2.23244015e+01 * logT - 1.02737388e-02 * T +
                  1.19846058e-06 * T2 - 9.44679467e-11 * T3 +
                  3.32372192e-15 * T4;
    // species 84: nc7ket24
    species[84] = -6.20142474e+04 * invT + 1.45332743e+02 -
                  2.88330388e+01 * logT - 1.60084048e-02 * T +
                  1.85847427e-06 * T2 - 1.46021799e-10 * T3 +
                  5.12602255e-15 * T4;
    // species 85: nc7ket35
    species[85] = -6.20142474e+04 * invT + 1.45332743e+02 -
                  2.88330388e+01 * logT - 1.60084048e-02 * T +
                  1.85847427e-06 * T2 - 1.46021799e-10 * T3 +
                  5.12602255e-15 * T4;
  }

  // species with midpoint at T=1388 kelvin
  if (T < 1388) {
    // species 26: c3h6
    species[26] = +1.06688164e+03 * invT - 2.25057582e+01 -
                  3.94615444e-01 * logT - 1.44553831e-02 * T +
                  2.58144680e-06 * T2 - 3.24011841e-10 * T3 +
                  1.68945176e-14 * T4;
    // species 65: c7h15o2-1
    species[65] = -1.92918765e+04 * invT - 2.96028242e+01 -
                  1.20888552e+00 * logT - 4.42030853e-02 * T +
                  9.66435433e-06 * T2 - 1.69645574e-09 * T3 +
                  1.53230168e-13 * T4;
    // species 77: c7h14ooh1-3o2
    species[77] = -3.22790229e+04 * invT - 2.93502812e+01 -
                  1.89718004e+00 * logT - 5.31148980e-02 * T +
                  1.33795036e-05 * T2 - 2.69707577e-09 * T3 +
                  2.72925236e-13 * T4;
    // species 83: nc7ket13
    species[83] = -4.87965510e+04 * invT - 2.50994200e+01 -
                  2.21629328e+00 * logT - 4.73686881e-02 * T +
                  1.15078942e-05 * T2 - 2.23183667e-09 * T3 +
                  2.18196091e-13 * T4;
  } else {
    // species 26: c3h6
    species[26] = -1.87821271e+03 * invT + 2.70320264e+01 -
                  8.01595958e+00 * logT - 6.85118170e-03 * T +
                  7.77082888e-07 * T2 - 6.01045335e-11 * T3 +
                  2.08685063e-15 * T4;
    // species 65: c7h15o2-1
    species[65] = -2.81113392e+04 * invT + 1.24970450e+02 -
                  2.52656556e+01 * logT - 1.75401794e-02 * T +
                  2.01964668e-06 * T2 - 1.57800672e-10 * T3 +
                  5.51770625e-15 * T4;
    // species 77: c7h14ooh1-3o2
    species[77] = -4.27171859e+04 * invT + 1.62132678e+02 -
                  3.20144349e+01 * logT - 1.70027998e-02 * T +
                  1.97359760e-06 * T2 - 1.55050289e-10 * T3 +
                  5.44255060e-15 * T4;
    // species 83: nc7ket13
    species[83] = -5.82345477e+04 * invT + 1.46138775e+02 -
                  2.90744507e+01 * logT - 1.58588729e-02 * T +
                  1.83771077e-06 * T2 - 1.44211340e-10 * T3 +
                  5.05808495e-15 * T4;
  }

  // species with midpoint at T=1389 kelvin
  if (T < 1389) {
    // species 37: c2h5o
    species[37] = -3.35252925e+03 * invT - 2.33135171e+01 -
                  4.94420708e-01 * logT - 1.35887217e-02 * T +
                  2.76515017e-06 * T2 - 4.29336833e-10 * T3 +
                  3.24248457e-14 * T4;
    // species 55: nc3h7coch2
    species[55] = -1.23062238e+04 * invT - 2.34529891e+01 -
                  9.58299271e-01 * logT - 2.84081266e-02 * T +
                  6.65187968e-06 * T2 - 1.27226262e-09 * T3 +
                  1.24610524e-13 * T4;
    // species 70: c7h14ooh2-3
    species[70] = -1.53640679e+04 * invT - 3.34499627e+01 -
                  8.49786005e-01 * logT - 4.62553598e-02 * T +
                  1.04226639e-05 * T2 - 1.81566992e-09 * T3 +
                  1.56360199e-13 * T4;
    // species 71: c7h14ooh2-4
    species[71] = -1.53640679e+04 * invT - 3.34499627e+01 -
                  8.49786005e-01 * logT - 4.62553598e-02 * T +
                  1.04226639e-05 * T2 - 1.81566992e-09 * T3 +
                  1.56360199e-13 * T4;
    // species 72: c7h14ooh3-2
    species[72] = -1.53640679e+04 * invT - 3.34499627e+01 -
                  8.49786005e-01 * logT - 4.62553598e-02 * T +
                  1.04226639e-05 * T2 - 1.81566992e-09 * T3 +
                  1.56360199e-13 * T4;
    // species 73: c7h14ooh3-4
    species[73] = -1.53640679e+04 * invT - 3.34499627e+01 -
                  8.49786005e-01 * logT - 4.62553598e-02 * T +
                  1.04226639e-05 * T2 - 1.81566992e-09 * T3 +
                  1.56360199e-13 * T4;
    // species 74: c7h14ooh3-5
    species[74] = -1.53640679e+04 * invT - 3.34499627e+01 -
                  8.49786005e-01 * logT - 4.62553598e-02 * T +
                  1.04226639e-05 * T2 - 1.81566992e-09 * T3 +
                  1.56360199e-13 * T4;
    // species 75: c7h14ooh4-2
    species[75] = -1.53640679e+04 * invT - 3.27604811e+01 -
                  8.49786005e-01 * logT - 4.62553598e-02 * T +
                  1.04226639e-05 * T2 - 1.81566992e-09 * T3 +
                  1.56360199e-13 * T4;
    // species 76: c7h14ooh4-3
    species[76] = -1.53640679e+04 * invT - 3.27604811e+01 -
                  8.49786005e-01 * logT - 4.62553598e-02 * T +
                  1.04226639e-05 * T2 - 1.81566992e-09 * T3 +
                  1.56360199e-13 * T4;
  } else {
    // species 37: c2h5o
    species[37] = -6.07274953e+03 * invT + 2.42150767e+01 -
                  7.87339772e+00 * logT - 5.65364535e-03 * T +
                  6.40702368e-07 * T2 - 4.95345088e-11 * T3 +
                  1.71947269e-15 * T4;
    // species 55: nc3h7coch2
    species[55] = -1.76968561e+04 * invT + 7.35367303e+01 -
                  1.61502419e+01 * logT - 1.07046733e-02 * T +
                  1.22676602e-06 * T2 - 9.55473467e-11 * T3 +
                  3.33356361e-15 * T4;
    // species 70: c7h14ooh2-3
    species[70] = -2.48636651e+04 * invT + 1.36605456e+02 -
                  2.74034778e+01 * logT - 1.63763947e-02 * T +
                  1.88319617e-06 * T2 - 1.47037207e-10 * T3 +
                  5.13934725e-15 * T4;
    // species 71: c7h14ooh2-4
    species[71] = -2.48636651e+04 * invT + 1.36605456e+02 -
                  2.74034778e+01 * logT - 1.63763947e-02 * T +
                  1.88319617e-06 * T2 - 1.47037207e-10 * T3 +
                  5.13934725e-15 * T4;
    // species 72: c7h14ooh3-2
    species[72] = -2.48636651e+04 * invT + 1.36605456e+02 -
                  2.74034778e+01 * logT - 1.63763947e-02 * T +
                  1.88319617e-06 * T2 - 1.47037207e-10 * T3 +
                  5.13934725e-15 * T4;
    // species 73: c7h14ooh3-4
    species[73] = -2.48636651e+04 * invT + 1.36605456e+02 -
                  2.74034778e+01 * logT - 1.63763947e-02 * T +
                  1.88319617e-06 * T2 - 1.47037207e-10 * T3 +
                  5.13934725e-15 * T4;
    // species 74: c7h14ooh3-5
    species[74] = -2.48636651e+04 * invT + 1.36605456e+02 -
                  2.74034778e+01 * logT - 1.63763947e-02 * T +
                  1.88319617e-06 * T2 - 1.47037207e-10 * T3 +
                  5.13934725e-15 * T4;
    // species 75: c7h14ooh4-2
    species[75] = -2.48636651e+04 * invT + 1.37294938e+02 -
                  2.74034778e+01 * logT - 1.63763947e-02 * T +
                  1.88319617e-06 * T2 - 1.47037207e-10 * T3 +
                  5.13934725e-15 * T4;
    // species 76: c7h14ooh4-3
    species[76] = -2.48636651e+04 * invT + 1.37294938e+02 -
                  2.74034778e+01 * logT - 1.63763947e-02 * T +
                  1.88319617e-06 * T2 - 1.47037207e-10 * T3 +
                  5.13934725e-15 * T4;
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 11: ho2
    species[11] = +8.09181013e+02 * invT - 6.21060443e+00 -
                  3.18310656e+00 * logT - 1.83383975e-03 * T +
                  1.55397520e-07 * T2 + 2.71544099e-11 * T3 -
                  7.55699560e-15 * T4;
    // species 39: ch3o2h
    species[39] = -1.77197926e+04 * invT - 7.02181132e+00 -
                  3.23442817e+00 * logT - 9.50648835e-03 * T +
                  1.88977145e-06 * T2 - 2.83588878e-10 * T3 +
                  2.05915111e-14 * T4;
    // species 59: c7h15-1
    species[59] = -1.04590223e+03 * invT - 3.61559715e+01 +
                  4.99570406e-01 * logT - 4.04413234e-02 * T +
                  8.34221257e-06 * T2 - 1.30457757e-09 * T3 +
                  9.83081135e-14 * T4;
    // species 63: c7h14-2
    species[63] = -1.17362359e+04 * invT - 3.81524398e+01 +
                  1.16533279e+00 * logT - 3.95219903e-02 * T +
                  8.26836110e-06 * T2 - 1.32140841e-09 * T3 +
                  1.02673216e-13 * T4;
    // species 66: c7h15o2-2
    species[66] = -2.15795254e+04 * invT - 3.35880906e+01 -
                  3.55252917e-01 * logT - 4.71190503e-02 * T +
                  1.11159184e-05 * T2 - 2.12329653e-09 * T3 +
                  2.06605552e-13 * T4;
    // species 67: c7h15o2-3
    species[67] = -2.15795254e+04 * invT - 3.35880906e+01 -
                  3.55252917e-01 * logT - 4.71190503e-02 * T +
                  1.11159184e-05 * T2 - 2.12329653e-09 * T3 +
                  2.06605552e-13 * T4;
    // species 68: c7h15o2-4
    species[68] = -2.15795254e+04 * invT - 3.28986090e+01 -
                  3.55252917e-01 * logT - 4.71190503e-02 * T +
                  1.11159184e-05 * T2 - 2.12329653e-09 * T3 +
                  2.06605552e-13 * T4;
    // species 78: c7h14ooh2-4o2
    species[78] = -3.46304788e+04 * invT - 3.12132135e+01 -
                  1.40912479e+00 * logT - 5.53604170e-02 * T +
                  1.45196346e-05 * T2 - 3.03052291e-09 * T3 +
                  3.14175344e-13 * T4;
    // species 79: c7h14ooh3-5o2
    species[79] = -3.46304788e+04 * invT - 3.12132135e+01 -
                  1.40912479e+00 * logT - 5.53604170e-02 * T +
                  1.45196346e-05 * T2 - 3.03052291e-09 * T3 +
                  3.14175344e-13 * T4;
    // species 80: c7h14ooh4-2o2
    species[80] = -3.46304788e+04 * invT - 3.12132135e+01 -
                  1.40912479e+00 * logT - 5.53604170e-02 * T +
                  1.45196346e-05 * T2 - 3.03052291e-09 * T3 +
                  3.14175344e-13 * T4;
  } else {
    // species 11: ho2
    species[11] = +3.98127689e+02 * invT - 1.96841300e-02 -
                  4.10547423e+00 * logT - 1.19226417e-03 * T +
                  1.34391332e-07 * T2 - 1.03493103e-11 * T3 +
                  3.58200054e-16 * T4;
    // species 39: ch3o2h
    species[39] = -1.96678771e+04 * invT + 2.65482338e+01 -
                  8.43117091e+00 * logT - 4.03408955e-03 * T +
                  4.61824868e-07 * T2 - 3.59443536e-11 * T3 +
                  1.25346073e-15 * T4;
    // species 59: c7h15-1
    species[59] = -9.20938221e+03 * invT + 1.07289502e+02 -
                  2.17940709e+01 * logT - 1.63140122e-02 * T +
                  1.85230407e-06 * T2 - 1.43389290e-10 * T3 +
                  4.98183499e-15 * T4;
    // species 63: c7h14-2
    species[63] = -1.96713162e+04 * invT + 1.01871143e+02 -
                  2.06192047e+01 * logT - 1.57426496e-02 * T +
                  1.78603428e-06 * T2 - 1.38189718e-10 * T3 +
                  4.79955893e-15 * T4;
    // species 66: c7h15o2-2
    species[66] = -3.06842095e+04 * invT + 1.30461127e+02 -
                  2.60535640e+01 * logT - 1.71915844e-02 * T +
                  1.97855412e-06 * T2 - 1.54541867e-10 * T3 +
                  5.40261995e-15 * T4;
    // species 67: c7h15o2-3
    species[67] = -3.06842095e+04 * invT + 1.30461127e+02 -
                  2.60535640e+01 * logT - 1.71915844e-02 * T +
                  1.97855412e-06 * T2 - 1.54541867e-10 * T3 +
                  5.40261995e-15 * T4;
    // species 68: c7h15o2-4
    species[68] = -3.06842095e+04 * invT + 1.31150609e+02 -
                  2.60535640e+01 * logT - 1.71915844e-02 * T +
                  1.97855412e-06 * T2 - 1.54541867e-10 * T3 +
                  5.40261995e-15 * T4;
    // species 78: c7h14ooh2-4o2
    species[78] = -4.52873003e+04 * invT + 1.67811540e+02 -
                  3.28358296e+01 * logT - 1.66383642e-02 * T +
                  1.93055475e-06 * T2 - 1.51632198e-10 * T3 +
                  5.32172095e-15 * T4;
    // species 79: c7h14ooh3-5o2
    species[79] = -4.52873003e+04 * invT + 1.67811540e+02 -
                  3.28358296e+01 * logT - 1.66383642e-02 * T +
                  1.93055475e-06 * T2 - 1.51632198e-10 * T3 +
                  5.32172095e-15 * T4;
    // species 80: c7h14ooh4-2o2
    species[80] = -4.52873003e+04 * invT + 1.67811540e+02 -
                  3.28358296e+01 * logT - 1.66383642e-02 * T +
                  1.93055475e-06 * T2 - 1.51632198e-10 * T3 +
                  5.32172095e-15 * T4;
  }

  // species with midpoint at T=1391 kelvin
  if (T < 1391) {
    // species 32: ch3coch2
    species[32] = -5.37233261e+03 * invT - 1.70012489e+01 -
                  1.80339187e+00 * logT - 1.50703542e-02 * T +
                  3.22509253e-06 * T2 - 5.31832528e-10 * T3 +
                  4.33051590e-14 * T4;
    // species 58: nc7h16
    species[58] = -2.56586565e+04 * invT - 3.76416531e+01 +
                  1.26836187e+00 * logT - 4.27177910e-02 * T +
                  8.75577977e-06 * T2 - 1.35788101e-09 * T3 +
                  1.01197462e-13 * T4;
  } else {
    // species 32: ch3coch2
    species[32] = -8.44380462e+03 * invT + 3.71501195e+01 -
                  1.02303975e+01 * logT - 5.82470805e-03 * T +
                  6.68342562e-07 * T2 - 5.21004372e-11 * T3 +
                  1.81892181e-15 * T4;
    // species 58: nc7h16
    species[58] = -3.42760081e+04 * invT + 1.13518917e+02 -
                  2.22148969e+01 * logT - 1.73837875e-02 * T +
                  1.97345215e-06 * T2 - 1.52748732e-10 * T3 +
                  5.30651330e-15 * T4;
  }

  // species with midpoint at T=1392 kelvin
  if (T < 1392) {
    // species 29: c4h7
    species[29] = +1.49933591e+04 * invT - 2.80800780e+01 +
                  3.50508352e-01 * logT - 2.13255622e-02 * T +
                  4.84965622e-06 * T2 - 8.78365950e-10 * T3 +
                  8.00299270e-14 * T4;
    // species 30: c4h8-1
    species[30] = -1.57875035e+03 * invT - 3.13397957e+01 +
                  8.31372089e-01 * logT - 2.26290489e-02 * T +
                  4.89430932e-06 * T2 - 8.35170300e-10 * T3 +
                  7.15958400e-14 * T4;
    // species 35: c5h9
    species[35] = +1.25589824e+04 * invT - 3.50242699e+01 +
                  1.38013950e+00 * logT - 2.78804243e-02 * T +
                  6.16906547e-06 * T2 - 1.05736584e-09 * T3 +
                  8.92694175e-14 * T4;
    // species 36: c5h10-1
    species[36] = -4.46546666e+03 * invT - 3.43362138e+01 +
                  1.06223481e+00 * logT - 2.87109147e-02 * T +
                  6.24144817e-06 * T2 - 1.06137491e-09 * T3 +
                  8.98048945e-14 * T4;
    // species 64: c7h14-3
    species[64] = -1.15141029e+04 * invT - 4.32618965e+01 +
                  2.03026994e+00 * logT - 4.13162189e-02 * T +
                  9.09190785e-06 * T2 - 1.56421518e-09 * T3 +
                  1.33785610e-13 * T4;
  } else {
    // species 29: c4h7
    species[29] = +1.09041937e+04 * invT + 4.57696593e+01 -
                  1.12103578e+01 * logT - 8.02415980e-03 * T +
                  9.10837153e-07 * T2 - 7.04950877e-11 * T3 +
                  2.44886369e-15 * T4;
    // species 30: c4h8-1
    species[30] = -5.97871038e+03 * invT + 4.67878106e+01 -
                  1.13508668e+01 * logT - 9.03089385e-03 * T +
                  1.02682171e-06 * T2 - 7.95544133e-11 * T3 +
                  2.76544820e-15 * T4;
    // species 35: c5h9
    species[35] = +7.00496135e+03 * invT + 6.46362227e+01 -
                  1.41860454e+01 * logT - 1.03564449e-02 * T +
                  1.17826770e-06 * T2 - 9.13392775e-11 * T3 +
                  3.17661104e-15 * T4;
    // species 36: c5h10-1
    species[36] = -1.00898205e+04 * invT + 6.59535475e+01 -
                  1.45851539e+01 * logT - 1.12036235e-02 * T +
                  1.27224671e-06 * T2 - 9.84908050e-11 * T3 +
                  3.42192569e-15 * T4;
    // species 64: c7h14-3
    species[64] = -1.96450604e+04 * invT + 1.02205775e+02 -
                  2.06822750e+01 * logT - 1.57694314e-02 * T +
                  1.79285358e-06 * T2 - 1.38908550e-10 * T3 +
                  4.82905197e-15 * T4;
  }

  // species with midpoint at T=1393 kelvin
  if (T < 1393) {
    // species 41: c2h3cho
    species[41] = -1.16521584e+04 * invT - 2.35954728e+01 -
                  2.92355162e-01 * logT - 1.77160709e-02 * T +
                  4.91560540e-06 * T2 - 1.06750103e-09 * T3 +
                  1.13072054e-13 * T4;
  } else {
    // species 41: c2h3cho
    species[41] = -1.49630281e+04 * invT + 4.01420020e+01 -
                  1.04184959e+01 * logT - 4.74481661e-03 * T +
                  5.48850882e-07 * T2 - 4.30232669e-11 * T3 +
                  1.50793646e-15 * T4;
  }

  // species with midpoint at T=1395 kelvin
  if (T < 1395) {
    // species 31: pc4h9
    species[31] = +7.68945248e+03 * invT - 3.01230529e+01 +
                  4.37779725e-01 * logT - 2.39486182e-02 * T +
                  5.23371932e-06 * T2 - 9.14887267e-10 * T3 +
                  8.10053320e-14 * T4;
    // species 43: c4h7o
    species[43] = +4.85090326e+03 * invT - 3.73174478e+01 +
                  1.60619192e+00 * logT - 2.79281341e-02 * T +
                  7.25992945e-06 * T2 - 1.42157732e-09 * T3 +
                  1.32817590e-13 * T4;
    // species 81: c7h14o1-3
    species[81] = -2.44292287e+04 * invT - 6.29772127e+01 +
                  5.50036450e+00 * logT - 5.00775440e-02 * T +
                  1.21655976e-05 * T2 - 2.32786892e-09 * T3 +
                  2.21122848e-13 * T4;
  } else {
    // species 31: pc4h9
    species[31] = +3.17231942e+03 * invT + 5.04935904e+01 -
                  1.21510082e+01 * logT - 9.71553585e-03 * T +
                  1.10262992e-06 * T2 - 8.53126133e-11 * T3 +
                  2.96264853e-15 * T4;
    // species 43: c4h7o
    species[43] = -7.29342884e+02 * invT + 6.96075639e+01 -
                  1.53137780e+01 * logT - 7.17135085e-03 * T +
                  8.02709195e-07 * T2 - 6.16312366e-11 * T3 +
                  2.13070407e-15 * T4;
    // species 81: c7h14o1-3
    species[81] = -3.41591419e+04 * invT + 1.16326548e+02 -
                  2.26918916e+01 * logT - 1.66255236e-02 * T +
                  1.90762942e-06 * T2 - 1.48712946e-10 * T3 +
                  5.19205560e-15 * T4;
  }

  // species with midpoint at T=1397 kelvin
  if (T < 1397) {
    // species 47: c3h5-a
    species[47] = +1.93834226e+04 * invT - 2.68358451e+01 +
                  5.29131958e-01 * logT - 1.67279550e-02 * T +
                  4.22335045e-06 * T2 - 8.57214617e-10 * T3 +
                  8.66291700e-14 * T4;
  } else {
    // species 47: c3h5-a
    species[47] = +1.63576092e+04 * invT + 3.00397846e+01 -
                  8.45883958e+00 * logT - 5.63477415e-03 * T +
                  6.39654773e-07 * T2 - 4.95049266e-11 * T3 +
                  1.71959015e-15 * T4;
  }

  // species with midpoint at T=1398 kelvin
  if (T < 1398) {
    // species 27: c4h6
    species[27] = +1.17551314e+04 * invT - 3.15135345e+01 +
                  1.43095121e+00 * logT - 2.39353031e-02 * T +
                  6.92411333e-06 * T2 - 1.59624627e-09 * T3 +
                  1.78579253e-13 * T4;
  } else {
    // species 27: c4h6
    species[27] = +7.79039770e+03 * invT + 4.71481738e+01 -
                  1.11633789e+01 * logT - 6.85819825e-03 * T +
                  7.82859638e-07 * T2 - 6.08078197e-11 * T3 +
                  2.11743101e-15 * T4;
  }

  // species with midpoint at T=1399 kelvin
  if (T < 1399) {
    // species 82: c7h14o2-4
    species[82] = -2.67118295e+04 * invT - 6.15679040e+01 +
                  5.39477206e+00 * logT - 5.09232885e-02 * T +
                  1.26674373e-05 * T2 - 2.47115017e-09 * T3 +
                  2.37427185e-13 * T4;
  } else {
    // species 82: c7h14o2-4
    species[82] = -3.64349664e+04 * invT + 1.20215001e+02 -
                  2.32692731e+01 * logT - 1.62792695e-02 * T +
                  1.86041510e-06 * T2 - 1.44644715e-10 * T3 +
                  5.04066075e-15 * T4;
  }

  // species with midpoint at T=1400 kelvin
  if (T < 1400) {
    // species 25: c3h4-a
    species[25] = +2.25124300e+04 * invT - 8.39587100e+00 -
                  2.53983100e+00 * logT - 8.16718500e-03 * T +
                  2.94158333e-07 * T2 + 3.87280417e-10 * T3 -
                  8.64565500e-14 * T4;
  } else {
    // species 25: c3h4-a
    species[25] = +1.95497200e+04 * invT + 3.95468660e+01 -
                  9.77625600e+00 * logT - 2.65106900e-03 * T +
                  6.16853000e-08 * T2 + 2.52198833e-11 * T3 -
                  2.54479050e-15 * T4;
  }

  // species with midpoint at T=1402 kelvin
  if (T < 1402) {
    // species 40: c2h3co
    species[40] = +4.25770215e+03 * invT - 1.69002345e+01 -
                  1.36242013e+00 * logT - 1.57636986e-02 * T +
                  5.00364892e-06 * T2 - 1.23472593e-09 * T3 +
                  1.43985765e-13 * T4;
  } else {
    // species 40: c2h3co
    species[40] = +1.92969514e+03 * invT + 3.24639464e+01 -
                  9.37467676e+00 * logT - 3.95648450e-03 * T +
                  4.45330467e-07 * T2 - 3.42596192e-11 * T3 +
                  1.18489490e-15 * T4;
  }
}

// compute the e/(RT) at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesInternalEnergy(amrex::Real* species, const amrex::Real T)
{
  const amrex::Real T2 = T * T;
  const amrex::Real T3 = T * T * T;
  const amrex::Real T4 = T * T * T * T;
  const amrex::Real invT = 1.0 / T;

  // species with no change across T
  // species 0: h
  species[0] = +1.50104422e+00 + 2.54747466e+04 * invT;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 1: h2
    species[1] = +2.29812400e+00 + 4.12472100e-04 * T - 2.71433833e-07 * T2 -
                 2.36885850e-11 * T3 + 8.26974400e-14 * T4 -
                 1.01252100e+03 * invT;
    // species 2: o
    species[2] = +1.94642900e+00 - 8.19083000e-04 * T + 8.07010667e-07 * T2 -
                 4.00710750e-10 * T3 + 7.78139200e-14 * T4 +
                 2.91476400e+04 * invT;
    // species 3: o2
    species[3] = +2.21293600e+00 + 5.63743000e-04 * T - 1.91871667e-07 * T2 +
                 3.28469250e-10 * T3 - 1.75371080e-13 * T4 -
                 1.00524900e+03 * invT;
    // species 5: h2o
    species[5] = +2.38684200e+00 + 1.73749100e-03 * T - 2.11823200e-06 * T2 +
                 1.74214525e-09 * T3 - 5.01317600e-13 * T4 -
                 3.02081100e+04 * invT;
    // species 6: co
    species[6] = +2.26245200e+00 + 7.55970500e-04 * T - 1.29391833e-06 * T2 +
                 1.39548600e-09 * T3 - 4.94990200e-13 * T4 -
                 1.43105400e+04 * invT;
    // species 7: hco
    species[7] = +1.89833000e+00 + 3.09957350e-03 * T - 3.20769467e-06 * T2 +
                 2.72456250e-09 * T3 - 9.14977000e-13 * T4 +
                 4.15992200e+03 * invT;
    // species 8: co2
    species[8] = +1.27572500e+00 + 4.96103600e-03 * T - 3.46970333e-06 * T2 +
                 1.71667175e-09 * T3 - 4.23456000e-13 * T4 -
                 4.83731400e+04 * invT;
    // species 9: ch3
    species[9] = +1.43044300e+00 + 5.56205000e-03 * T - 5.60073333e-06 * T2 +
                 4.05457250e-09 * T3 - 1.17299060e-12 * T4 +
                 1.64237800e+04 * invT;
    // species 10: ch4
    species[10] = -2.21258500e-01 + 8.73834000e-03 * T - 9.27803000e-06 * T2 +
                  7.62427000e-09 * T3 - 2.44786200e-12 * T4 -
                  9.82522900e+03 * invT;
    // species 12: h2o2
    species[12] = +2.38875400e+00 + 3.28461300e-03 * T - 4.95004333e-08 * T2 -
                  1.15645150e-09 * T3 + 4.94303000e-13 * T4 -
                  1.76631500e+04 * invT;
    // species 13: ch2o
    species[13] = +6.52731000e-01 + 6.31572000e-03 * T - 6.29389333e-06 * T2 +
                  5.12507750e-09 * T3 - 1.68264740e-12 * T4 -
                  1.48654000e+04 * invT;
    // species 14: ch3o
    species[14] = +1.10620400e+00 + 3.60829750e-03 * T + 1.77949067e-06 * T2 -
                  1.84440900e-09 * T3 + 4.15122200e-13 * T4 +
                  9.78601100e+02 * invT;
    // species 16: c2h4
    species[16] = -1.86148800e+00 + 1.39808150e-02 * T - 1.12955900e-05 * T2 +
                  6.96288000e-09 * T3 - 1.94757580e-12 * T4 +
                  5.57304600e+03 * invT;
    // species 17: c2h5
    species[17] = +1.69070200e+00 + 4.35956650e-03 * T + 1.47327967e-06 * T2 +
                  2.33467575e-10 * T3 - 7.85554600e-13 * T4 +
                  1.28704000e+04 * invT;
    // species 18: c2h2
    species[18] = +1.01356200e+00 + 7.59522500e-03 * T - 5.38773000e-06 * T2 +
                  2.26974800e-09 * T3 - 3.82549200e-13 * T4 +
                  2.61244400e+04 * invT;
    // species 19: c2h3
    species[19] = +1.45927600e+00 + 3.68573800e-03 * T + 7.03291000e-07 * T2 -
                  3.30410500e-10 * T3 - 2.36956800e-13 * T4 +
                  3.33522500e+04 * invT;
    // species 20: ch2co
    species[20] = +1.97497100e+00 + 6.05935500e-03 * T - 7.81682000e-07 * T2 -
                  1.61667125e-09 * T3 + 7.81129800e-13 * T4 -
                  7.63263700e+03 * invT;
    // species 21: hcco
    species[21] = +4.04796500e+00 + 2.22673900e-03 * T + 7.56094333e-08 * T2 -
                  3.70523750e-10 * T3 + 4.50148400e-14 * T4 +
                  1.96589200e+04 * invT;
    // species 22: ch3co
    species[22] = +2.12527800e+00 + 4.88911000e-03 * T + 1.50714933e-06 * T2 -
                  2.25236550e-09 * T3 + 6.38743600e-13 * T4 -
                  4.10850800e+03 * invT;
    // species 23: ch2cho
    species[23] = +2.40906200e+00 + 5.36928500e-03 * T + 6.30497333e-07 * T2 -
                  1.78964575e-09 * T3 + 5.73477000e-13 * T4 +
                  1.52147700e+03 * invT;
    // species 24: ch3cho
    species[24] = +1.50569500e+00 + 6.68495500e-03 * T + 1.55731767e-06 * T2 -
                  2.82035000e-09 * T3 + 8.52713200e-13 * T4 -
                  2.12458900e+04 * invT;
    // species 28: nc3h7
    species[28] = +9.22537000e-01 + 1.23946350e-02 * T + 6.03416333e-07 * T2 -
                  4.45816500e-09 * T3 + 1.71659920e-12 * T4 +
                  9.71328100e+03 * invT;
    // species 48: c3h3
    species[48] = +3.75420000e+00 + 5.54014000e-03 * T + 9.31107667e-08 * T2 -
                  1.36980300e-09 * T3 + 3.89925800e-13 * T4 +
                  3.98888300e+04 * invT;
    // species 49: c3h2
    species[49] = +2.16671400e+00 + 1.24128600e-02 * T - 1.53054567e-05 * T2 +
                  1.06700475e-08 * T3 - 2.96430400e-12 * T4 +
                  6.35042100e+04 * invT;
    // species 50: ch2(s)
    species[50] = +2.97126500e+00 - 8.49544500e-05 * T + 3.41789667e-07 * T2 +
                  6.23137750e-10 * T3 - 3.96253200e-13 * T4 +
                  4.98936800e+04 * invT;
    // species 87: n2
    species[87] = +2.29867700e+00 + 7.04120000e-04 * T - 1.32107400e-06 * T2 +
                  1.41037875e-09 * T3 - 4.88971000e-13 * T4 -
                  1.02090000e+03 * invT;
  } else {
    // species 1: h2
    species[1] = +1.99142300e+00 + 3.50032200e-04 * T - 1.87794300e-08 * T2 -
                 2.30789450e-12 * T3 + 3.16550400e-16 * T4 -
                 8.35034000e+02 * invT;
    // species 2: o
    species[2] = +1.54206000e+00 - 1.37753100e-05 * T - 1.03426767e-09 * T2 +
                 1.13776675e-12 * T3 - 8.73610400e-17 * T4 +
                 2.92308000e+04 * invT;
    // species 3: o2
    species[3] = +2.69757800e+00 + 3.06759850e-04 * T - 4.19614000e-08 * T2 +
                 4.43820250e-12 * T3 - 2.27287000e-16 * T4 -
                 1.23393000e+03 * invT;
    // species 5: h2o
    species[5] = +1.67214600e+00 + 1.52814650e-03 * T - 2.91008667e-07 * T2 +
                 3.00249000e-11 * T3 - 1.27832360e-15 * T4 -
                 2.98992100e+04 * invT;
    // species 6: co
    species[6] = +2.02507800e+00 + 7.21344500e-04 * T - 1.87694267e-07 * T2 +
                 2.54645250e-11 * T3 - 1.38219040e-15 * T4 -
                 1.42683500e+04 * invT;
    // species 7: hco
    species[7] = +2.55727100e+00 + 1.67278650e-03 * T - 4.45002000e-07 * T2 +
                 6.17643250e-11 * T3 - 3.42770200e-15 * T4 +
                 3.91632400e+03 * invT;
    // species 8: co2
    species[8] = +3.45362300e+00 + 1.57008450e-03 * T - 4.26137000e-07 * T2 +
                 5.98499250e-11 * T3 - 3.33806600e-15 * T4 -
                 4.89669600e+04 * invT;
    // species 9: ch3
    species[9] = +1.84405200e+00 + 3.06898700e-03 * T - 7.43448333e-07 * T2 +
                 9.46290250e-11 * T3 - 4.90431800e-15 * T4 +
                 1.64378100e+04 * invT;
    // species 10: ch4
    species[10] = +6.83479000e-01 + 5.11862000e-03 * T - 1.29170967e-06 * T2 +
                  1.69639625e-10 * T3 - 9.00684600e-15 * T4 -
                  1.00807900e+04 * invT;
    // species 12: h2o2
    species[12] = +3.57316700e+00 + 2.16806800e-03 * T - 4.91563000e-07 * T2 +
                  5.87226000e-11 * T3 - 2.86330800e-15 * T4 -
                  1.80069600e+04 * invT;
    // species 13: ch2o
    species[13] = +1.99560600e+00 + 3.34066050e-03 * T - 8.76318333e-07 * T2 +
                  1.18428825e-10 * T3 - 6.42503400e-15 * T4 -
                  1.53203700e+04 * invT;
    // species 14: ch3o
    species[14] = +2.77080000e+00 + 3.93574850e-03 * T - 8.85461333e-07 * T2 +
                  9.86107750e-11 * T3 - 4.22523200e-15 * T4 +
                  1.27832500e+02 * invT;
    // species 16: c2h4
    species[16] = +2.52841900e+00 + 5.74259000e-03 * T - 1.47279500e-06 * T2 +
                  1.96115025e-10 * T3 - 1.05336960e-14 * T4 +
                  4.42828900e+03 * invT;
    // species 17: c2h5
    species[17] = +6.19048000e+00 + 3.24203850e-03 * T - 2.14268833e-07 * T2 -
                  5.86969750e-11 * T3 + 7.76175400e-15 * T4 +
                  1.06745500e+04 * invT;
    // species 18: c2h2
    species[18] = +3.43677000e+00 + 2.68801950e-03 * T - 6.37605667e-07 * T2 +
                  8.21594750e-11 * T3 - 4.31342000e-15 * T4 +
                  2.56676600e+04 * invT;
    // species 19: c2h3
    species[19] = +4.93346800e+00 + 2.00887300e-03 * T - 1.32224667e-07 * T2 -
                  3.60316750e-11 * T3 + 4.75728800e-15 * T4 +
                  3.18543500e+04 * invT;
    // species 20: ch2co
    species[20] = +5.03881700e+00 + 2.90242000e-03 * T - 6.40318000e-07 * T2 +
                  6.98621250e-11 * T3 - 2.91773600e-15 * T4 -
                  8.58340200e+03 * invT;
    // species 21: hcco
    species[21] = +5.75807300e+00 + 1.00020000e-03 * T - 6.75869000e-08 * T2 -
                  2.60283000e-11 * T3 + 3.93033000e-15 * T4 +
                  1.90151300e+04 * invT;
    // species 22: ch3co
    species[22] = +4.61227900e+00 + 4.22494300e-03 * T - 9.51382333e-07 * T2 +
                  1.05959400e-10 * T3 - 4.53680800e-15 * T4 -
                  5.18786300e+03 * invT;
    // species 23: ch2cho
    species[23] = +4.97567000e+00 + 4.06529550e-03 * T - 9.14541333e-07 * T2 +
                  1.01757600e-10 * T3 - 4.35203400e-15 * T4 +
                  4.90321800e+02 * invT;
    // species 24: ch3cho
    species[24] = +4.86865000e+00 + 5.39712000e-03 * T - 1.21517667e-06 * T2 +
                  1.35322800e-10 * T3 - 5.79368800e-15 * T4 -
                  2.26456900e+04 * invT;
    // species 28: nc3h7
    species[28] = +6.97829100e+00 + 7.88056500e-03 * T - 1.72441433e-06 * T2 +
                  1.86097300e-10 * T3 - 7.64995600e-15 * T4 +
                  7.57940200e+03 * invT;
    // species 48: c3h3
    species[48] = +7.83104700e+00 + 2.17859750e-03 * T - 1.36968900e-07 * T2 -
                  5.92180750e-11 * T3 + 8.75304000e-15 * T4 +
                  3.84742000e+04 * invT;
    // species 49: c3h2
    species[49] = +6.67098100e+00 + 1.37437450e-03 * T - 1.45698100e-07 * T2 -
                  1.61389975e-11 * T3 + 3.32777400e-15 * T4 +
                  6.25972200e+04 * invT;
    // species 50: ch2(s)
    species[50] = +2.55288900e+00 + 1.03339400e-03 * T - 6.38038667e-08 * T2 -
                  2.76168250e-11 * T3 + 4.04270000e-15 * T4 +
                  4.98497500e+04 * invT;
    // species 87: n2
    species[87] = +1.92664000e+00 + 7.43988500e-04 * T - 1.89492033e-07 * T2 +
                  2.52426000e-11 * T3 - 1.35067020e-15 * T4 -
                  9.22797700e+02 * invT;
  }

  // species with midpoint at T=1357 kelvin
  if (T < 1357) {
    // species 4: oh
    species[4] = +2.43586219e+00 + 1.01117902e-04 * T - 3.78488040e-08 * T2 +
                 6.06112872e-11 * T3 - 1.48730206e-14 * T4 +
                 3.74321252e+03 * invT;
  } else {
    // species 4: oh
    species[4] = +1.62599754e+00 + 6.59962030e-04 * T - 1.19908223e-07 * T2 +
                 1.06407700e-11 * T3 - 3.64096032e-16 * T4 +
                 4.12085374e+03 * invT;
  }

  // species with midpoint at T=1373 kelvin
  if (T < 1373) {
    // species 34: c2h5co
    species[34] = +1.93313946e+00 + 1.23713956e-02 * T - 4.04073343e-06 * T2 +
                  5.86752620e-10 * T3 - 1.05368668e-14 * T4 -
                  5.69663063e+03 * invT;
  } else {
    // species 34: c2h5co
    species[34] = +8.87881997e+00 + 5.87578380e-03 * T - 1.33538308e-06 * T2 +
                  1.55212654e-10 * T3 - 7.19670450e-15 * T4 -
                  8.47292283e+03 * invT;
  }

  // species with midpoint at T=1377 kelvin
  if (T < 1377) {
    // species 45: c4h8ooh1-3
    species[45] = +9.41062760e-01 + 2.59394676e-02 * T - 1.03470561e-05 * T2 +
                  2.15892220e-09 * T3 - 1.68568399e-13 * T4 -
                  4.34315962e+03 * invT;
  } else {
    // species 45: c4h8ooh1-3
    species[45] = +1.66442170e+01 + 9.58532680e-03 * T - 2.19056214e-06 * T2 +
                  2.55616428e-10 * T3 - 1.18860947e-14 * T4 -
                  1.01859280e+04 * invT;
  }

  // species with midpoint at T=1378 kelvin
  if (T < 1378) {
    // species 33: c2h5cho
    species[33] = +1.16308444e+00 + 1.47750632e-02 * T - 5.08154173e-06 * T2 +
                  8.73759867e-10 * T3 - 4.77793254e-14 * T4 -
                  2.42260137e+04 * invT;
    // species 52: nc3h7cho
    species[52] = +8.74159590e-01 + 2.09620158e-02 * T - 7.83829263e-06 * T2 +
                  1.56728418e-09 * T3 - 1.21888782e-13 * T4 -
                  2.71032194e+04 * invT;
  } else {
    // species 33: c2h5cho
    species[33] = +9.24276950e+00 + 6.98209945e-03 * T - 1.58749334e-06 * T2 +
                  1.84526426e-10 * T3 - 8.55519006e-15 * T4 -
                  2.74143135e+04 * invT;
    // species 52: nc3h7cho
    species[52] = +1.25988068e+01 + 9.08262370e-03 * T - 2.05948153e-06 * T2 +
                  2.38995052e-10 * T3 - 1.10688592e-14 * T4 -
                  3.15845348e+04 * invT;
  }

  // species with midpoint at T=1380 kelvin
  if (T < 1380) {
    // species 42: c3h5o
    species[42] = +1.98225820e-01 + 1.52789918e-02 * T - 6.02100920e-06 * T2 +
                  1.21537508e-09 * T3 - 8.39709124e-14 * T4 +
                  9.58217784e+03 * invT;
    // species 53: nc3h7co
    species[53] = +1.67256826e+00 + 1.85599412e-02 * T - 6.89542863e-06 * T2 +
                  1.37218472e-09 * T3 - 1.07172837e-13 * T4 -
                  8.58050888e+03 * invT;
  } else {
    // species 42: c3h5o
    species[42] = +9.25517520e+00 + 5.74918600e-03 * T - 1.28215220e-06 * T2 +
                  1.47227587e-10 * T3 - 6.77115846e-15 * T4 +
                  6.26560810e+03 * invT;
    // species 53: nc3h7co
    species[53] = +1.20026331e+01 + 8.15524385e-03 * T - 1.85880966e-06 * T2 +
                  2.16417657e-10 * T3 - 1.00451133e-14 * T4 -
                  1.25523385e+04 * invT;
  }

  // species with midpoint at T=1381 kelvin
  if (T < 1381) {
    // species 56: nc4h9cho
    species[56] = +5.96634720e-01 + 2.71770708e-02 * T - 1.07006884e-05 * T2 +
                  2.33943390e-09 * T3 - 2.13377864e-13 * T4 -
                  2.99841025e+04 * invT;
  } else {
    // species 56: nc4h9cho
    species[56] = +1.57965163e+01 + 1.12842260e-02 * T - 2.55877196e-06 * T2 +
                  2.96923422e-10 * T3 - 1.37509111e-14 * T4 -
                  3.56826080e+04 * invT;
  }

  // species with midpoint at T=1382 kelvin
  if (T < 1382) {
    // species 57: nc4h9co
    species[57] = +1.43530238e+00 + 2.46841188e-02 * T - 9.66276940e-06 * T2 +
                  2.10715953e-09 * T3 - 1.93657434e-13 * T4 -
                  1.14675541e+04 * invT;
    // species 60: c7h15-2
    species[60] = -1.03791558e+00 + 3.78363285e-02 * T - 1.35824545e-05 * T2 +
                  2.33169736e-09 * T3 - 9.84721490e-14 * T4 -
                  2.35605303e+03 * invT;
    // species 61: c7h15-3
    species[61] = -1.03791558e+00 + 3.78363285e-02 * T - 1.35824545e-05 * T2 +
                  2.33169736e-09 * T3 - 9.84721490e-14 * T4 -
                  2.35605303e+03 * invT;
    // species 62: c7h15-4
    species[62] = -1.03791558e+00 + 3.78363285e-02 * T - 1.35824545e-05 * T2 +
                  2.33169736e-09 * T3 - 9.84721490e-14 * T4 -
                  2.35605303e+03 * invT;
  } else {
    // species 57: nc4h9co
    species[57] = +1.51782939e+01 + 1.03995960e-02 * T - 2.37262631e-06 * T2 +
                  2.76399937e-10 * T3 - 1.28339437e-14 * T4 -
                  1.66537752e+04 * invT;
    // species 60: c7h15-2
    species[60] = +2.06368842e+01 + 1.61662402e-02 * T - 3.64246023e-06 * T2 +
                  4.20892650e-10 * T3 - 1.94354818e-14 * T4 -
                  1.05873616e+04 * invT;
    // species 61: c7h15-3
    species[61] = +2.06368842e+01 + 1.61662402e-02 * T - 3.64246023e-06 * T2 +
                  4.20892650e-10 * T3 - 1.94354818e-14 * T4 -
                  1.05873616e+04 * invT;
    // species 62: c7h15-4
    species[62] = +2.06368842e+01 + 1.61662402e-02 * T - 3.64246023e-06 * T2 +
                  4.20892650e-10 * T3 - 1.94354818e-14 * T4 -
                  1.05873616e+04 * invT;
  }

  // species with midpoint at T=1383 kelvin
  if (T < 1383) {
    // species 54: c2h5coch2
    species[54] = +5.40138560e-01 + 2.19743129e-02 * T - 9.90008070e-06 * T2 +
                  2.63738282e-09 * T3 - 3.17197538e-13 * T4 -
                  9.50796505e+03 * invT;
    // species 69: c7h14ooh1-3
    species[69] = +1.11462060e-01 + 4.45797696e-02 * T - 1.89117461e-05 * T2 +
                  4.47225235e-09 * T3 - 4.44520412e-13 * T4 -
                  1.29868314e+04 * invT;
  } else {
    // species 54: c2h5coch2
    species[54] = +1.32098738e+01 + 7.89332295e-03 * T - 1.83509728e-06 * T2 +
                  2.16467635e-10 * T3 - 1.01382666e-14 * T4 -
                  1.41284951e+04 * invT;
    // species 69: c7h14ooh1-3
    species[69] = +2.62290222e+01 + 1.62460950e-02 * T - 3.70865860e-06 * T2 +
                  4.32322195e-10 * T3 - 2.00856652e-14 * T4 -
                  2.24977070e+04 * invT;
  }

  // species with midpoint at T=1384 kelvin
  if (T < 1384) {
    // species 15: c2h6
    species[15] = -1.02528543e+00 + 1.20382377e-02 * T - 3.72978240e-06 * T2 +
                  5.20852252e-10 * T3 - 1.05973723e-14 * T4 -
                  1.12345534e+04 * invT;
  } else {
    // species 15: c2h6
    species[15] = +5.10683385e+00 + 6.46181805e-03 * T - 1.47509065e-06 * T2 +
                  1.71847932e-10 * T3 - 7.97803464e-15 * T4 -
                  1.37500014e+04 * invT;
  }

  // species with midpoint at T=1385 kelvin
  if (T < 1385) {
    // species 38: ch3o2
    species[38] = +3.26146906e+00 + 5.04367995e-03 * T - 1.07168728e-06 * T2 +
                  5.23523168e-11 * T3 + 8.36678206e-15 * T4 -
                  6.84394259e+02 * invT;
    // species 46: pc4h9o2
    species[46] = +9.43636500e-01 + 2.57756581e-02 * T - 1.09428133e-05 * T2 +
                  2.82662150e-09 * T3 - 3.40237212e-13 * T4 -
                  1.08358103e+04 * invT;
  } else {
    // species 38: ch3o2
    species[38] = +4.95787891e+00 + 3.95364313e-03 * T - 8.94154113e-07 * T2 +
                  1.03472834e-10 * T3 - 4.78014660e-15 * T4 -
                  1.53574838e+03 * invT;
    // species 46: pc4h9o2
    species[46] = +1.47845448e+01 + 1.07605455e-02 * T - 2.48303006e-06 * T2 +
                  2.91395178e-10 * T3 - 1.35977122e-14 * T4 -
                  1.60146054e+04 * invT;
  }

  // species with midpoint at T=1386 kelvin
  if (T < 1386) {
    // species 51: nc4ket13
    species[51] = +1.74883461e+00 + 2.93468373e-02 * T - 1.49868632e-05 * T2 +
                  4.58000325e-09 * T3 - 6.23530738e-13 * T4 -
                  4.01065878e+04 * invT;
    // species 86: nc7ket42
    species[86] = +1.32269738e+00 + 4.72580075e-02 * T - 2.33019060e-05 * T2 +
                  6.99432290e-09 * T3 - 9.48488862e-13 * T4 -
                  5.27586830e+04 * invT;
  } else {
    // species 51: nc4ket13
    species[51] = +1.86430808e+01 + 9.04702830e-03 * T - 2.11021077e-06 * T2 +
                  2.49465100e-10 * T3 - 1.17015292e-14 * T4 -
                  4.59588851e+04 * invT;
    // species 86: nc7ket42
    species[86] = +2.76572867e+01 + 1.60783954e-02 * T - 3.73205233e-06 * T2 +
                  4.39737500e-10 * T3 - 2.05783920e-14 * T4 -
                  6.20252988e+04 * invT;
  }

  // species with midpoint at T=1387 kelvin
  if (T < 1387) {
    // species 44: c4h8ooh1-3o2
    species[44] = +1.22400728e+00 + 3.52497310e-02 * T - 1.88992942e-05 * T2 +
                  6.06569377e-09 * T3 - 8.59430918e-13 * T4 -
                  2.37391490e+04 * invT;
    // species 84: nc7ket24
    species[84] = +5.29366920e-01 + 4.79086733e-02 * T - 2.32229507e-05 * T2 +
                  6.73850955e-09 * T3 - 8.77456252e-13 * T4 -
                  5.23839542e+04 * invT;
    // species 85: nc7ket35
    species[85] = +5.29366920e-01 + 4.79086733e-02 * T - 2.32229507e-05 * T2 +
                  6.73850955e-09 * T3 - 8.77456252e-13 * T4 -
                  5.23839542e+04 * invT;
  } else {
    // species 44: c4h8ooh1-3o2
    species[44] = +2.13244015e+01 + 1.02737388e-02 * T - 2.39692116e-06 * T2 +
                  2.83403840e-10 * T3 - 1.32948877e-14 * T4 -
                  3.05468277e+04 * invT;
    // species 84: nc7ket24
    species[84] = +2.78330388e+01 + 1.60084048e-02 * T - 3.71694853e-06 * T2 +
                  4.38065397e-10 * T3 - 2.05040902e-14 * T4 -
                  6.20142474e+04 * invT;
    // species 85: nc7ket35
    species[85] = +2.78330388e+01 + 1.60084048e-02 * T - 3.71694853e-06 * T2 +
                  4.38065397e-10 * T3 - 2.05040902e-14 * T4 -
                  6.20142474e+04 * invT;
  }

  // species with midpoint at T=1388 kelvin
  if (T < 1388) {
    // species 26: c3h6
    species[26] = -6.05384556e-01 + 1.44553831e-02 * T - 5.16289360e-06 * T2 +
                  9.72035522e-10 * T3 - 6.75780704e-14 * T4 +
                  1.06688164e+03 * invT;
    // species 65: c7h15o2-1
    species[65] = +2.08885520e-01 + 4.42030853e-02 * T - 1.93287087e-05 * T2 +
                  5.08936723e-09 * T3 - 6.12920672e-13 * T4 -
                  1.92918765e+04 * invT;
    // species 77: c7h14ooh1-3o2
    species[77] = +8.97180040e-01 + 5.31148980e-02 * T - 2.67590073e-05 * T2 +
                  8.09122732e-09 * T3 - 1.09170094e-12 * T4 -
                  3.22790229e+04 * invT;
    // species 83: nc7ket13
    species[83] = +1.21629328e+00 + 4.73686881e-02 * T - 2.30157884e-05 * T2 +
                  6.69551000e-09 * T3 - 8.72784362e-13 * T4 -
                  4.87965510e+04 * invT;
  } else {
    // species 26: c3h6
    species[26] = +7.01595958e+00 + 6.85118170e-03 * T - 1.55416578e-06 * T2 +
                  1.80313601e-10 * T3 - 8.34740252e-15 * T4 -
                  1.87821271e+03 * invT;
    // species 65: c7h15o2-1
    species[65] = +2.42656556e+01 + 1.75401794e-02 * T - 4.03929337e-06 * T2 +
                  4.73402015e-10 * T3 - 2.20708250e-14 * T4 -
                  2.81113392e+04 * invT;
    // species 77: c7h14ooh1-3o2
    species[77] = +3.10144349e+01 + 1.70027998e-02 * T - 3.94719520e-06 * T2 +
                  4.65150867e-10 * T3 - 2.17702024e-14 * T4 -
                  4.27171859e+04 * invT;
    // species 83: nc7ket13
    species[83] = +2.80744507e+01 + 1.58588729e-02 * T - 3.67542153e-06 * T2 +
                  4.32634020e-10 * T3 - 2.02323398e-14 * T4 -
                  5.82345477e+04 * invT;
  }

  // species with midpoint at T=1389 kelvin
  if (T < 1389) {
    // species 37: c2h5o
    species[37] = -5.05579292e-01 + 1.35887217e-02 * T - 5.53030033e-06 * T2 +
                  1.28801050e-09 * T3 - 1.29699383e-13 * T4 -
                  3.35252925e+03 * invT;
    // species 55: nc3h7coch2
    species[55] = -4.17007290e-02 + 2.84081266e-02 * T - 1.33037594e-05 * T2 +
                  3.81678785e-09 * T3 - 4.98442094e-13 * T4 -
                  1.23062238e+04 * invT;
    // species 70: c7h14ooh2-3
    species[70] = -1.50213995e-01 + 4.62553598e-02 * T - 2.08453278e-05 * T2 +
                  5.44700975e-09 * T3 - 6.25440796e-13 * T4 -
                  1.53640679e+04 * invT;
    // species 71: c7h14ooh2-4
    species[71] = -1.50213995e-01 + 4.62553598e-02 * T - 2.08453278e-05 * T2 +
                  5.44700975e-09 * T3 - 6.25440796e-13 * T4 -
                  1.53640679e+04 * invT;
    // species 72: c7h14ooh3-2
    species[72] = -1.50213995e-01 + 4.62553598e-02 * T - 2.08453278e-05 * T2 +
                  5.44700975e-09 * T3 - 6.25440796e-13 * T4 -
                  1.53640679e+04 * invT;
    // species 73: c7h14ooh3-4
    species[73] = -1.50213995e-01 + 4.62553598e-02 * T - 2.08453278e-05 * T2 +
                  5.44700975e-09 * T3 - 6.25440796e-13 * T4 -
                  1.53640679e+04 * invT;
    // species 74: c7h14ooh3-5
    species[74] = -1.50213995e-01 + 4.62553598e-02 * T - 2.08453278e-05 * T2 +
                  5.44700975e-09 * T3 - 6.25440796e-13 * T4 -
                  1.53640679e+04 * invT;
    // species 75: c7h14ooh4-2
    species[75] = -1.50213995e-01 + 4.62553598e-02 * T - 2.08453278e-05 * T2 +
                  5.44700975e-09 * T3 - 6.25440796e-13 * T4 -
                  1.53640679e+04 * invT;
    // species 76: c7h14ooh4-3
    species[76] = -1.50213995e-01 + 4.62553598e-02 * T - 2.08453278e-05 * T2 +
                  5.44700975e-09 * T3 - 6.25440796e-13 * T4 -
                  1.53640679e+04 * invT;
  } else {
    // species 37: c2h5o
    species[37] = +6.87339772e+00 + 5.65364535e-03 * T - 1.28140474e-06 * T2 +
                  1.48603526e-10 * T3 - 6.87789076e-15 * T4 -
                  6.07274953e+03 * invT;
    // species 55: nc3h7coch2
    species[55] = +1.51502419e+01 + 1.07046733e-02 * T - 2.45353205e-06 * T2 +
                  2.86642040e-10 * T3 - 1.33342544e-14 * T4 -
                  1.76968561e+04 * invT;
    // species 70: c7h14ooh2-3
    species[70] = +2.64034778e+01 + 1.63763947e-02 * T - 3.76639233e-06 * T2 +
                  4.41111622e-10 * T3 - 2.05573890e-14 * T4 -
                  2.48636651e+04 * invT;
    // species 71: c7h14ooh2-4
    species[71] = +2.64034778e+01 + 1.63763947e-02 * T - 3.76639233e-06 * T2 +
                  4.41111622e-10 * T3 - 2.05573890e-14 * T4 -
                  2.48636651e+04 * invT;
    // species 72: c7h14ooh3-2
    species[72] = +2.64034778e+01 + 1.63763947e-02 * T - 3.76639233e-06 * T2 +
                  4.41111622e-10 * T3 - 2.05573890e-14 * T4 -
                  2.48636651e+04 * invT;
    // species 73: c7h14ooh3-4
    species[73] = +2.64034778e+01 + 1.63763947e-02 * T - 3.76639233e-06 * T2 +
                  4.41111622e-10 * T3 - 2.05573890e-14 * T4 -
                  2.48636651e+04 * invT;
    // species 74: c7h14ooh3-5
    species[74] = +2.64034778e+01 + 1.63763947e-02 * T - 3.76639233e-06 * T2 +
                  4.41111622e-10 * T3 - 2.05573890e-14 * T4 -
                  2.48636651e+04 * invT;
    // species 75: c7h14ooh4-2
    species[75] = +2.64034778e+01 + 1.63763947e-02 * T - 3.76639233e-06 * T2 +
                  4.41111622e-10 * T3 - 2.05573890e-14 * T4 -
                  2.48636651e+04 * invT;
    // species 76: c7h14ooh4-3
    species[76] = +2.64034778e+01 + 1.63763947e-02 * T - 3.76639233e-06 * T2 +
                  4.41111622e-10 * T3 - 2.05573890e-14 * T4 -
                  2.48636651e+04 * invT;
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 11: ho2
    species[11] = +2.18310656e+00 + 1.83383975e-03 * T - 3.10795041e-07 * T2 -
                  8.14632298e-11 * T3 + 3.02279824e-14 * T4 +
                  8.09181013e+02 * invT;
    // species 39: ch3o2h
    species[39] = +2.23442817e+00 + 9.50648835e-03 * T - 3.77954290e-06 * T2 +
                  8.50766632e-10 * T3 - 8.23660444e-14 * T4 -
                  1.77197926e+04 * invT;
    // species 59: c7h15-1
    species[59] = -1.49957041e+00 + 4.04413234e-02 * T - 1.66844251e-05 * T2 +
                  3.91373270e-09 * T3 - 3.93232454e-13 * T4 -
                  1.04590223e+03 * invT;
    // species 63: c7h14-2
    species[63] = -2.16533279e+00 + 3.95219903e-02 * T - 1.65367222e-05 * T2 +
                  3.96422523e-09 * T3 - 4.10692866e-13 * T4 -
                  1.17362359e+04 * invT;
    // species 66: c7h15o2-2
    species[66] = -6.44747083e-01 + 4.71190503e-02 * T - 2.22318369e-05 * T2 +
                  6.36988958e-09 * T3 - 8.26422210e-13 * T4 -
                  2.15795254e+04 * invT;
    // species 67: c7h15o2-3
    species[67] = -6.44747083e-01 + 4.71190503e-02 * T - 2.22318369e-05 * T2 +
                  6.36988958e-09 * T3 - 8.26422210e-13 * T4 -
                  2.15795254e+04 * invT;
    // species 68: c7h15o2-4
    species[68] = -6.44747083e-01 + 4.71190503e-02 * T - 2.22318369e-05 * T2 +
                  6.36988958e-09 * T3 - 8.26422210e-13 * T4 -
                  2.15795254e+04 * invT;
    // species 78: c7h14ooh2-4o2
    species[78] = +4.09124790e-01 + 5.53604170e-02 * T - 2.90392692e-05 * T2 +
                  9.09156872e-09 * T3 - 1.25670138e-12 * T4 -
                  3.46304788e+04 * invT;
    // species 79: c7h14ooh3-5o2
    species[79] = +4.09124790e-01 + 5.53604170e-02 * T - 2.90392692e-05 * T2 +
                  9.09156872e-09 * T3 - 1.25670138e-12 * T4 -
                  3.46304788e+04 * invT;
    // species 80: c7h14ooh4-2o2
    species[80] = +4.09124790e-01 + 5.53604170e-02 * T - 2.90392692e-05 * T2 +
                  9.09156872e-09 * T3 - 1.25670138e-12 * T4 -
                  3.46304788e+04 * invT;
  } else {
    // species 11: ho2
    species[11] = +3.10547423e+00 + 1.19226417e-03 * T - 2.68782663e-07 * T2 +
                  3.10479308e-11 * T3 - 1.43280022e-15 * T4 +
                  3.98127689e+02 * invT;
    // species 39: ch3o2h
    species[39] = +7.43117091e+00 + 4.03408955e-03 * T - 9.23649737e-07 * T2 +
                  1.07833061e-10 * T3 - 5.01384292e-15 * T4 -
                  1.96678771e+04 * invT;
    // species 59: c7h15-1
    species[59] = +2.07940709e+01 + 1.63140122e-02 * T - 3.70460813e-06 * T2 +
                  4.30167870e-10 * T3 - 1.99273400e-14 * T4 -
                  9.20938221e+03 * invT;
    // species 63: c7h14-2
    species[63] = +1.96192047e+01 + 1.57426496e-02 * T - 3.57206857e-06 * T2 +
                  4.14569155e-10 * T3 - 1.91982357e-14 * T4 -
                  1.96713162e+04 * invT;
    // species 66: c7h15o2-2
    species[66] = +2.50535640e+01 + 1.71915844e-02 * T - 3.95710823e-06 * T2 +
                  4.63625602e-10 * T3 - 2.16104798e-14 * T4 -
                  3.06842095e+04 * invT;
    // species 67: c7h15o2-3
    species[67] = +2.50535640e+01 + 1.71915844e-02 * T - 3.95710823e-06 * T2 +
                  4.63625602e-10 * T3 - 2.16104798e-14 * T4 -
                  3.06842095e+04 * invT;
    // species 68: c7h15o2-4
    species[68] = +2.50535640e+01 + 1.71915844e-02 * T - 3.95710823e-06 * T2 +
                  4.63625602e-10 * T3 - 2.16104798e-14 * T4 -
                  3.06842095e+04 * invT;
    // species 78: c7h14ooh2-4o2
    species[78] = +3.18358296e+01 + 1.66383642e-02 * T - 3.86110950e-06 * T2 +
                  4.54896595e-10 * T3 - 2.12868838e-14 * T4 -
                  4.52873003e+04 * invT;
    // species 79: c7h14ooh3-5o2
    species[79] = +3.18358296e+01 + 1.66383642e-02 * T - 3.86110950e-06 * T2 +
                  4.54896595e-10 * T3 - 2.12868838e-14 * T4 -
                  4.52873003e+04 * invT;
    // species 80: c7h14ooh4-2o2
    species[80] = +3.18358296e+01 + 1.66383642e-02 * T - 3.86110950e-06 * T2 +
                  4.54896595e-10 * T3 - 2.12868838e-14 * T4 -
                  4.52873003e+04 * invT;
  }

  // species with midpoint at T=1391 kelvin
  if (T < 1391) {
    // species 32: ch3coch2
    species[32] = +8.03391870e-01 + 1.50703542e-02 * T - 6.45018507e-06 * T2 +
                  1.59549759e-09 * T3 - 1.73220636e-13 * T4 -
                  5.37233261e+03 * invT;
    // species 58: nc7h16
    species[58] = -2.26836187e+00 + 4.27177910e-02 * T - 1.75115595e-05 * T2 +
                  4.07364302e-09 * T3 - 4.04789850e-13 * T4 -
                  2.56586565e+04 * invT;
  } else {
    // species 32: ch3coch2
    species[32] = +9.23039750e+00 + 5.82470805e-03 * T - 1.33668512e-06 * T2 +
                  1.56301312e-10 * T3 - 7.27568724e-15 * T4 -
                  8.44380462e+03 * invT;
    // species 58: nc7h16
    species[58] = +2.12148969e+01 + 1.73837875e-02 * T - 3.94690430e-06 * T2 +
                  4.58246195e-10 * T3 - 2.12260532e-14 * T4 -
                  3.42760081e+04 * invT;
  }

  // species with midpoint at T=1392 kelvin
  if (T < 1392) {
    // species 29: c4h7
    species[29] = -1.35050835e+00 + 2.13255622e-02 * T - 9.69931243e-06 * T2 +
                  2.63509785e-09 * T3 - 3.20119708e-13 * T4 +
                  1.49933591e+04 * invT;
    // species 30: c4h8-1
    species[30] = -1.83137209e+00 + 2.26290489e-02 * T - 9.78861863e-06 * T2 +
                  2.50551090e-09 * T3 - 2.86383360e-13 * T4 -
                  1.57875035e+03 * invT;
    // species 35: c5h9
    species[35] = -2.38013950e+00 + 2.78804243e-02 * T - 1.23381309e-05 * T2 +
                  3.17209752e-09 * T3 - 3.57077670e-13 * T4 +
                  1.25589824e+04 * invT;
    // species 36: c5h10-1
    species[36] = -2.06223481e+00 + 2.87109147e-02 * T - 1.24828963e-05 * T2 +
                  3.18412472e-09 * T3 - 3.59219578e-13 * T4 -
                  4.46546666e+03 * invT;
    // species 64: c7h14-3
    species[64] = -3.03026994e+00 + 4.13162189e-02 * T - 1.81838157e-05 * T2 +
                  4.69264555e-09 * T3 - 5.35142440e-13 * T4 -
                  1.15141029e+04 * invT;
  } else {
    // species 29: c4h7
    species[29] = +1.02103578e+01 + 8.02415980e-03 * T - 1.82167431e-06 * T2 +
                  2.11485263e-10 * T3 - 9.79545478e-15 * T4 +
                  1.09041937e+04 * invT;
    // species 30: c4h8-1
    species[30] = +1.03508668e+01 + 9.03089385e-03 * T - 2.05364343e-06 * T2 +
                  2.38663240e-10 * T3 - 1.10617928e-14 * T4 -
                  5.97871038e+03 * invT;
    // species 35: c5h9
    species[35] = +1.31860454e+01 + 1.03564449e-02 * T - 2.35653539e-06 * T2 +
                  2.74017833e-10 * T3 - 1.27064442e-14 * T4 +
                  7.00496135e+03 * invT;
    // species 36: c5h10-1
    species[36] = +1.35851539e+01 + 1.12036235e-02 * T - 2.54449342e-06 * T2 +
                  2.95472415e-10 * T3 - 1.36877028e-14 * T4 -
                  1.00898205e+04 * invT;
    // species 64: c7h14-3
    species[64] = +1.96822750e+01 + 1.57694314e-02 * T - 3.58570717e-06 * T2 +
                  4.16725650e-10 * T3 - 1.93162079e-14 * T4 -
                  1.96450604e+04 * invT;
  }

  // species with midpoint at T=1393 kelvin
  if (T < 1393) {
    // species 41: c2h3cho
    species[41] = -7.07644838e-01 + 1.77160709e-02 * T - 9.83121080e-06 * T2 +
                  3.20250310e-09 * T3 - 4.52288216e-13 * T4 -
                  1.16521584e+04 * invT;
  } else {
    // species 41: c2h3cho
    species[41] = +9.41849590e+00 + 4.74481661e-03 * T - 1.09770176e-06 * T2 +
                  1.29069801e-10 * T3 - 6.03174582e-15 * T4 -
                  1.49630281e+04 * invT;
  }

  // species with midpoint at T=1395 kelvin
  if (T < 1395) {
    // species 31: pc4h9
    species[31] = -1.43777972e+00 + 2.39486182e-02 * T - 1.04674386e-05 * T2 +
                  2.74466180e-09 * T3 - 3.24021328e-13 * T4 +
                  7.68945248e+03 * invT;
    // species 43: c4h7o
    species[43] = -2.60619192e+00 + 2.79281341e-02 * T - 1.45198589e-05 * T2 +
                  4.26473197e-09 * T3 - 5.31270360e-13 * T4 +
                  4.85090326e+03 * invT;
    // species 81: c7h14o1-3
    species[81] = -6.50036450e+00 + 5.00775440e-02 * T - 2.43311952e-05 * T2 +
                  6.98360675e-09 * T3 - 8.84491392e-13 * T4 -
                  2.44292287e+04 * invT;
  } else {
    // species 31: pc4h9
    species[31] = +1.11510082e+01 + 9.71553585e-03 * T - 2.20525983e-06 * T2 +
                  2.55937840e-10 * T3 - 1.18505941e-14 * T4 +
                  3.17231942e+03 * invT;
    // species 43: c4h7o
    species[43] = +1.43137780e+01 + 7.17135085e-03 * T - 1.60541839e-06 * T2 +
                  1.84893710e-10 * T3 - 8.52281628e-15 * T4 -
                  7.29342884e+02 * invT;
    // species 81: c7h14o1-3
    species[81] = +2.16918916e+01 + 1.66255236e-02 * T - 3.81525883e-06 * T2 +
                  4.46138838e-10 * T3 - 2.07682224e-14 * T4 -
                  3.41591419e+04 * invT;
  }

  // species with midpoint at T=1397 kelvin
  if (T < 1397) {
    // species 47: c3h5-a
    species[47] = -1.52913196e+00 + 1.67279550e-02 * T - 8.44670090e-06 * T2 +
                  2.57164385e-09 * T3 - 3.46516680e-13 * T4 +
                  1.93834226e+04 * invT;
  } else {
    // species 47: c3h5-a
    species[47] = +7.45883958e+00 + 5.63477415e-03 * T - 1.27930955e-06 * T2 +
                  1.48514780e-10 * T3 - 6.87836060e-15 * T4 +
                  1.63576092e+04 * invT;
  }

  // species with midpoint at T=1398 kelvin
  if (T < 1398) {
    // species 27: c4h6
    species[27] = -2.43095121e+00 + 2.39353031e-02 * T - 1.38482267e-05 * T2 +
                  4.78873880e-09 * T3 - 7.14317014e-13 * T4 +
                  1.17551314e+04 * invT;
  } else {
    // species 27: c4h6
    species[27] = +1.01633789e+01 + 6.85819825e-03 * T - 1.56571928e-06 * T2 +
                  1.82423459e-10 * T3 - 8.46972406e-15 * T4 +
                  7.79039770e+03 * invT;
  }

  // species with midpoint at T=1399 kelvin
  if (T < 1399) {
    // species 82: c7h14o2-4
    species[82] = -6.39477206e+00 + 5.09232885e-02 * T - 2.53348745e-05 * T2 +
                  7.41345050e-09 * T3 - 9.49708740e-13 * T4 -
                  2.67118295e+04 * invT;
  } else {
    // species 82: c7h14o2-4
    species[82] = +2.22692731e+01 + 1.62792695e-02 * T - 3.72083020e-06 * T2 +
                  4.33934145e-10 * T3 - 2.01626430e-14 * T4 -
                  3.64349664e+04 * invT;
  }

  // species with midpoint at T=1400 kelvin
  if (T < 1400) {
    // species 25: c3h4-a
    species[25] = +1.53983100e+00 + 8.16718500e-03 * T - 5.88316667e-07 * T2 -
                  1.16184125e-09 * T3 + 3.45826200e-13 * T4 +
                  2.25124300e+04 * invT;
  } else {
    // species 25: c3h4-a
    species[25] = +8.77625600e+00 + 2.65106900e-03 * T - 1.23370600e-07 * T2 -
                  7.56596500e-11 * T3 + 1.01791620e-14 * T4 +
                  1.95497200e+04 * invT;
  }

  // species with midpoint at T=1402 kelvin
  if (T < 1402) {
    // species 40: c2h3co
    species[40] = +3.62420130e-01 + 1.57636986e-02 * T - 1.00072978e-05 * T2 +
                  3.70417780e-09 * T3 - 5.75943060e-13 * T4 +
                  4.25770215e+03 * invT;
  } else {
    // species 40: c2h3co
    species[40] = +8.37467676e+00 + 3.95648450e-03 * T - 8.90660933e-07 * T2 +
                  1.02778857e-10 * T3 - 4.73957962e-15 * T4 +
                  1.92969514e+03 * invT;
  }
}

// compute the h/(RT) at the given temperature (Eq 20)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesEnthalpy(amrex::Real* species, const amrex::Real T)
{
  const amrex::Real T2 = T * T;
  const amrex::Real T3 = T * T * T;
  const amrex::Real T4 = T * T * T * T;
  const amrex::Real invT = 1.0 / T;

  // species with no change across T
  // species 0: h
  species[0] = +2.50104422e+00 + 2.54747466e+04 * invT;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 1: h2
    species[1] = +3.29812400e+00 + 4.12472100e-04 * T - 2.71433833e-07 * T2 -
                 2.36885850e-11 * T3 + 8.26974400e-14 * T4 -
                 1.01252100e+03 * invT;
    // species 2: o
    species[2] = +2.94642900e+00 - 8.19083000e-04 * T + 8.07010667e-07 * T2 -
                 4.00710750e-10 * T3 + 7.78139200e-14 * T4 +
                 2.91476400e+04 * invT;
    // species 3: o2
    species[3] = +3.21293600e+00 + 5.63743000e-04 * T - 1.91871667e-07 * T2 +
                 3.28469250e-10 * T3 - 1.75371080e-13 * T4 -
                 1.00524900e+03 * invT;
    // species 5: h2o
    species[5] = +3.38684200e+00 + 1.73749100e-03 * T - 2.11823200e-06 * T2 +
                 1.74214525e-09 * T3 - 5.01317600e-13 * T4 -
                 3.02081100e+04 * invT;
    // species 6: co
    species[6] = +3.26245200e+00 + 7.55970500e-04 * T - 1.29391833e-06 * T2 +
                 1.39548600e-09 * T3 - 4.94990200e-13 * T4 -
                 1.43105400e+04 * invT;
    // species 7: hco
    species[7] = +2.89833000e+00 + 3.09957350e-03 * T - 3.20769467e-06 * T2 +
                 2.72456250e-09 * T3 - 9.14977000e-13 * T4 +
                 4.15992200e+03 * invT;
    // species 8: co2
    species[8] = +2.27572500e+00 + 4.96103600e-03 * T - 3.46970333e-06 * T2 +
                 1.71667175e-09 * T3 - 4.23456000e-13 * T4 -
                 4.83731400e+04 * invT;
    // species 9: ch3
    species[9] = +2.43044300e+00 + 5.56205000e-03 * T - 5.60073333e-06 * T2 +
                 4.05457250e-09 * T3 - 1.17299060e-12 * T4 +
                 1.64237800e+04 * invT;
    // species 10: ch4
    species[10] = +7.78741500e-01 + 8.73834000e-03 * T - 9.27803000e-06 * T2 +
                  7.62427000e-09 * T3 - 2.44786200e-12 * T4 -
                  9.82522900e+03 * invT;
    // species 12: h2o2
    species[12] = +3.38875400e+00 + 3.28461300e-03 * T - 4.95004333e-08 * T2 -
                  1.15645150e-09 * T3 + 4.94303000e-13 * T4 -
                  1.76631500e+04 * invT;
    // species 13: ch2o
    species[13] = +1.65273100e+00 + 6.31572000e-03 * T - 6.29389333e-06 * T2 +
                  5.12507750e-09 * T3 - 1.68264740e-12 * T4 -
                  1.48654000e+04 * invT;
    // species 14: ch3o
    species[14] = +2.10620400e+00 + 3.60829750e-03 * T + 1.77949067e-06 * T2 -
                  1.84440900e-09 * T3 + 4.15122200e-13 * T4 +
                  9.78601100e+02 * invT;
    // species 16: c2h4
    species[16] = -8.61488000e-01 + 1.39808150e-02 * T - 1.12955900e-05 * T2 +
                  6.96288000e-09 * T3 - 1.94757580e-12 * T4 +
                  5.57304600e+03 * invT;
    // species 17: c2h5
    species[17] = +2.69070200e+00 + 4.35956650e-03 * T + 1.47327967e-06 * T2 +
                  2.33467575e-10 * T3 - 7.85554600e-13 * T4 +
                  1.28704000e+04 * invT;
    // species 18: c2h2
    species[18] = +2.01356200e+00 + 7.59522500e-03 * T - 5.38773000e-06 * T2 +
                  2.26974800e-09 * T3 - 3.82549200e-13 * T4 +
                  2.61244400e+04 * invT;
    // species 19: c2h3
    species[19] = +2.45927600e+00 + 3.68573800e-03 * T + 7.03291000e-07 * T2 -
                  3.30410500e-10 * T3 - 2.36956800e-13 * T4 +
                  3.33522500e+04 * invT;
    // species 20: ch2co
    species[20] = +2.97497100e+00 + 6.05935500e-03 * T - 7.81682000e-07 * T2 -
                  1.61667125e-09 * T3 + 7.81129800e-13 * T4 -
                  7.63263700e+03 * invT;
    // species 21: hcco
    species[21] = +5.04796500e+00 + 2.22673900e-03 * T + 7.56094333e-08 * T2 -
                  3.70523750e-10 * T3 + 4.50148400e-14 * T4 +
                  1.96589200e+04 * invT;
    // species 22: ch3co
    species[22] = +3.12527800e+00 + 4.88911000e-03 * T + 1.50714933e-06 * T2 -
                  2.25236550e-09 * T3 + 6.38743600e-13 * T4 -
                  4.10850800e+03 * invT;
    // species 23: ch2cho
    species[23] = +3.40906200e+00 + 5.36928500e-03 * T + 6.30497333e-07 * T2 -
                  1.78964575e-09 * T3 + 5.73477000e-13 * T4 +
                  1.52147700e+03 * invT;
    // species 24: ch3cho
    species[24] = +2.50569500e+00 + 6.68495500e-03 * T + 1.55731767e-06 * T2 -
                  2.82035000e-09 * T3 + 8.52713200e-13 * T4 -
                  2.12458900e+04 * invT;
    // species 28: nc3h7
    species[28] = +1.92253700e+00 + 1.23946350e-02 * T + 6.03416333e-07 * T2 -
                  4.45816500e-09 * T3 + 1.71659920e-12 * T4 +
                  9.71328100e+03 * invT;
    // species 48: c3h3
    species[48] = +4.75420000e+00 + 5.54014000e-03 * T + 9.31107667e-08 * T2 -
                  1.36980300e-09 * T3 + 3.89925800e-13 * T4 +
                  3.98888300e+04 * invT;
    // species 49: c3h2
    species[49] = +3.16671400e+00 + 1.24128600e-02 * T - 1.53054567e-05 * T2 +
                  1.06700475e-08 * T3 - 2.96430400e-12 * T4 +
                  6.35042100e+04 * invT;
    // species 50: ch2(s)
    species[50] = +3.97126500e+00 - 8.49544500e-05 * T + 3.41789667e-07 * T2 +
                  6.23137750e-10 * T3 - 3.96253200e-13 * T4 +
                  4.98936800e+04 * invT;
    // species 87: n2
    species[87] = +3.29867700e+00 + 7.04120000e-04 * T - 1.32107400e-06 * T2 +
                  1.41037875e-09 * T3 - 4.88971000e-13 * T4 -
                  1.02090000e+03 * invT;
  } else {
    // species 1: h2
    species[1] = +2.99142300e+00 + 3.50032200e-04 * T - 1.87794300e-08 * T2 -
                 2.30789450e-12 * T3 + 3.16550400e-16 * T4 -
                 8.35034000e+02 * invT;
    // species 2: o
    species[2] = +2.54206000e+00 - 1.37753100e-05 * T - 1.03426767e-09 * T2 +
                 1.13776675e-12 * T3 - 8.73610400e-17 * T4 +
                 2.92308000e+04 * invT;
    // species 3: o2
    species[3] = +3.69757800e+00 + 3.06759850e-04 * T - 4.19614000e-08 * T2 +
                 4.43820250e-12 * T3 - 2.27287000e-16 * T4 -
                 1.23393000e+03 * invT;
    // species 5: h2o
    species[5] = +2.67214600e+00 + 1.52814650e-03 * T - 2.91008667e-07 * T2 +
                 3.00249000e-11 * T3 - 1.27832360e-15 * T4 -
                 2.98992100e+04 * invT;
    // species 6: co
    species[6] = +3.02507800e+00 + 7.21344500e-04 * T - 1.87694267e-07 * T2 +
                 2.54645250e-11 * T3 - 1.38219040e-15 * T4 -
                 1.42683500e+04 * invT;
    // species 7: hco
    species[7] = +3.55727100e+00 + 1.67278650e-03 * T - 4.45002000e-07 * T2 +
                 6.17643250e-11 * T3 - 3.42770200e-15 * T4 +
                 3.91632400e+03 * invT;
    // species 8: co2
    species[8] = +4.45362300e+00 + 1.57008450e-03 * T - 4.26137000e-07 * T2 +
                 5.98499250e-11 * T3 - 3.33806600e-15 * T4 -
                 4.89669600e+04 * invT;
    // species 9: ch3
    species[9] = +2.84405200e+00 + 3.06898700e-03 * T - 7.43448333e-07 * T2 +
                 9.46290250e-11 * T3 - 4.90431800e-15 * T4 +
                 1.64378100e+04 * invT;
    // species 10: ch4
    species[10] = +1.68347900e+00 + 5.11862000e-03 * T - 1.29170967e-06 * T2 +
                  1.69639625e-10 * T3 - 9.00684600e-15 * T4 -
                  1.00807900e+04 * invT;
    // species 12: h2o2
    species[12] = +4.57316700e+00 + 2.16806800e-03 * T - 4.91563000e-07 * T2 +
                  5.87226000e-11 * T3 - 2.86330800e-15 * T4 -
                  1.80069600e+04 * invT;
    // species 13: ch2o
    species[13] = +2.99560600e+00 + 3.34066050e-03 * T - 8.76318333e-07 * T2 +
                  1.18428825e-10 * T3 - 6.42503400e-15 * T4 -
                  1.53203700e+04 * invT;
    // species 14: ch3o
    species[14] = +3.77080000e+00 + 3.93574850e-03 * T - 8.85461333e-07 * T2 +
                  9.86107750e-11 * T3 - 4.22523200e-15 * T4 +
                  1.27832500e+02 * invT;
    // species 16: c2h4
    species[16] = +3.52841900e+00 + 5.74259000e-03 * T - 1.47279500e-06 * T2 +
                  1.96115025e-10 * T3 - 1.05336960e-14 * T4 +
                  4.42828900e+03 * invT;
    // species 17: c2h5
    species[17] = +7.19048000e+00 + 3.24203850e-03 * T - 2.14268833e-07 * T2 -
                  5.86969750e-11 * T3 + 7.76175400e-15 * T4 +
                  1.06745500e+04 * invT;
    // species 18: c2h2
    species[18] = +4.43677000e+00 + 2.68801950e-03 * T - 6.37605667e-07 * T2 +
                  8.21594750e-11 * T3 - 4.31342000e-15 * T4 +
                  2.56676600e+04 * invT;
    // species 19: c2h3
    species[19] = +5.93346800e+00 + 2.00887300e-03 * T - 1.32224667e-07 * T2 -
                  3.60316750e-11 * T3 + 4.75728800e-15 * T4 +
                  3.18543500e+04 * invT;
    // species 20: ch2co
    species[20] = +6.03881700e+00 + 2.90242000e-03 * T - 6.40318000e-07 * T2 +
                  6.98621250e-11 * T3 - 2.91773600e-15 * T4 -
                  8.58340200e+03 * invT;
    // species 21: hcco
    species[21] = +6.75807300e+00 + 1.00020000e-03 * T - 6.75869000e-08 * T2 -
                  2.60283000e-11 * T3 + 3.93033000e-15 * T4 +
                  1.90151300e+04 * invT;
    // species 22: ch3co
    species[22] = +5.61227900e+00 + 4.22494300e-03 * T - 9.51382333e-07 * T2 +
                  1.05959400e-10 * T3 - 4.53680800e-15 * T4 -
                  5.18786300e+03 * invT;
    // species 23: ch2cho
    species[23] = +5.97567000e+00 + 4.06529550e-03 * T - 9.14541333e-07 * T2 +
                  1.01757600e-10 * T3 - 4.35203400e-15 * T4 +
                  4.90321800e+02 * invT;
    // species 24: ch3cho
    species[24] = +5.86865000e+00 + 5.39712000e-03 * T - 1.21517667e-06 * T2 +
                  1.35322800e-10 * T3 - 5.79368800e-15 * T4 -
                  2.26456900e+04 * invT;
    // species 28: nc3h7
    species[28] = +7.97829100e+00 + 7.88056500e-03 * T - 1.72441433e-06 * T2 +
                  1.86097300e-10 * T3 - 7.64995600e-15 * T4 +
                  7.57940200e+03 * invT;
    // species 48: c3h3
    species[48] = +8.83104700e+00 + 2.17859750e-03 * T - 1.36968900e-07 * T2 -
                  5.92180750e-11 * T3 + 8.75304000e-15 * T4 +
                  3.84742000e+04 * invT;
    // species 49: c3h2
    species[49] = +7.67098100e+00 + 1.37437450e-03 * T - 1.45698100e-07 * T2 -
                  1.61389975e-11 * T3 + 3.32777400e-15 * T4 +
                  6.25972200e+04 * invT;
    // species 50: ch2(s)
    species[50] = +3.55288900e+00 + 1.03339400e-03 * T - 6.38038667e-08 * T2 -
                  2.76168250e-11 * T3 + 4.04270000e-15 * T4 +
                  4.98497500e+04 * invT;
    // species 87: n2
    species[87] = +2.92664000e+00 + 7.43988500e-04 * T - 1.89492033e-07 * T2 +
                  2.52426000e-11 * T3 - 1.35067020e-15 * T4 -
                  9.22797700e+02 * invT;
  }

  // species with midpoint at T=1357 kelvin
  if (T < 1357) {
    // species 4: oh
    species[4] = +3.43586219e+00 + 1.01117902e-04 * T - 3.78488040e-08 * T2 +
                 6.06112872e-11 * T3 - 1.48730206e-14 * T4 +
                 3.74321252e+03 * invT;
  } else {
    // species 4: oh
    species[4] = +2.62599754e+00 + 6.59962030e-04 * T - 1.19908223e-07 * T2 +
                 1.06407700e-11 * T3 - 3.64096032e-16 * T4 +
                 4.12085374e+03 * invT;
  }

  // species with midpoint at T=1373 kelvin
  if (T < 1373) {
    // species 34: c2h5co
    species[34] = +2.93313946e+00 + 1.23713956e-02 * T - 4.04073343e-06 * T2 +
                  5.86752620e-10 * T3 - 1.05368668e-14 * T4 -
                  5.69663063e+03 * invT;
  } else {
    // species 34: c2h5co
    species[34] = +9.87881997e+00 + 5.87578380e-03 * T - 1.33538308e-06 * T2 +
                  1.55212654e-10 * T3 - 7.19670450e-15 * T4 -
                  8.47292283e+03 * invT;
  }

  // species with midpoint at T=1377 kelvin
  if (T < 1377) {
    // species 45: c4h8ooh1-3
    species[45] = +1.94106276e+00 + 2.59394676e-02 * T - 1.03470561e-05 * T2 +
                  2.15892220e-09 * T3 - 1.68568399e-13 * T4 -
                  4.34315962e+03 * invT;
  } else {
    // species 45: c4h8ooh1-3
    species[45] = +1.76442170e+01 + 9.58532680e-03 * T - 2.19056214e-06 * T2 +
                  2.55616428e-10 * T3 - 1.18860947e-14 * T4 -
                  1.01859280e+04 * invT;
  }

  // species with midpoint at T=1378 kelvin
  if (T < 1378) {
    // species 33: c2h5cho
    species[33] = +2.16308444e+00 + 1.47750632e-02 * T - 5.08154173e-06 * T2 +
                  8.73759867e-10 * T3 - 4.77793254e-14 * T4 -
                  2.42260137e+04 * invT;
    // species 52: nc3h7cho
    species[52] = +1.87415959e+00 + 2.09620158e-02 * T - 7.83829263e-06 * T2 +
                  1.56728418e-09 * T3 - 1.21888782e-13 * T4 -
                  2.71032194e+04 * invT;
  } else {
    // species 33: c2h5cho
    species[33] = +1.02427695e+01 + 6.98209945e-03 * T - 1.58749334e-06 * T2 +
                  1.84526426e-10 * T3 - 8.55519006e-15 * T4 -
                  2.74143135e+04 * invT;
    // species 52: nc3h7cho
    species[52] = +1.35988068e+01 + 9.08262370e-03 * T - 2.05948153e-06 * T2 +
                  2.38995052e-10 * T3 - 1.10688592e-14 * T4 -
                  3.15845348e+04 * invT;
  }

  // species with midpoint at T=1380 kelvin
  if (T < 1380) {
    // species 42: c3h5o
    species[42] = +1.19822582e+00 + 1.52789918e-02 * T - 6.02100920e-06 * T2 +
                  1.21537508e-09 * T3 - 8.39709124e-14 * T4 +
                  9.58217784e+03 * invT;
    // species 53: nc3h7co
    species[53] = +2.67256826e+00 + 1.85599412e-02 * T - 6.89542863e-06 * T2 +
                  1.37218472e-09 * T3 - 1.07172837e-13 * T4 -
                  8.58050888e+03 * invT;
  } else {
    // species 42: c3h5o
    species[42] = +1.02551752e+01 + 5.74918600e-03 * T - 1.28215220e-06 * T2 +
                  1.47227587e-10 * T3 - 6.77115846e-15 * T4 +
                  6.26560810e+03 * invT;
    // species 53: nc3h7co
    species[53] = +1.30026331e+01 + 8.15524385e-03 * T - 1.85880966e-06 * T2 +
                  2.16417657e-10 * T3 - 1.00451133e-14 * T4 -
                  1.25523385e+04 * invT;
  }

  // species with midpoint at T=1381 kelvin
  if (T < 1381) {
    // species 56: nc4h9cho
    species[56] = +1.59663472e+00 + 2.71770708e-02 * T - 1.07006884e-05 * T2 +
                  2.33943390e-09 * T3 - 2.13377864e-13 * T4 -
                  2.99841025e+04 * invT;
  } else {
    // species 56: nc4h9cho
    species[56] = +1.67965163e+01 + 1.12842260e-02 * T - 2.55877196e-06 * T2 +
                  2.96923422e-10 * T3 - 1.37509111e-14 * T4 -
                  3.56826080e+04 * invT;
  }

  // species with midpoint at T=1382 kelvin
  if (T < 1382) {
    // species 57: nc4h9co
    species[57] = +2.43530238e+00 + 2.46841188e-02 * T - 9.66276940e-06 * T2 +
                  2.10715953e-09 * T3 - 1.93657434e-13 * T4 -
                  1.14675541e+04 * invT;
    // species 60: c7h15-2
    species[60] = -3.79155767e-02 + 3.78363285e-02 * T - 1.35824545e-05 * T2 +
                  2.33169736e-09 * T3 - 9.84721490e-14 * T4 -
                  2.35605303e+03 * invT;
    // species 61: c7h15-3
    species[61] = -3.79155767e-02 + 3.78363285e-02 * T - 1.35824545e-05 * T2 +
                  2.33169736e-09 * T3 - 9.84721490e-14 * T4 -
                  2.35605303e+03 * invT;
    // species 62: c7h15-4
    species[62] = -3.79155767e-02 + 3.78363285e-02 * T - 1.35824545e-05 * T2 +
                  2.33169736e-09 * T3 - 9.84721490e-14 * T4 -
                  2.35605303e+03 * invT;
  } else {
    // species 57: nc4h9co
    species[57] = +1.61782939e+01 + 1.03995960e-02 * T - 2.37262631e-06 * T2 +
                  2.76399937e-10 * T3 - 1.28339437e-14 * T4 -
                  1.66537752e+04 * invT;
    // species 60: c7h15-2
    species[60] = +2.16368842e+01 + 1.61662402e-02 * T - 3.64246023e-06 * T2 +
                  4.20892650e-10 * T3 - 1.94354818e-14 * T4 -
                  1.05873616e+04 * invT;
    // species 61: c7h15-3
    species[61] = +2.16368842e+01 + 1.61662402e-02 * T - 3.64246023e-06 * T2 +
                  4.20892650e-10 * T3 - 1.94354818e-14 * T4 -
                  1.05873616e+04 * invT;
    // species 62: c7h15-4
    species[62] = +2.16368842e+01 + 1.61662402e-02 * T - 3.64246023e-06 * T2 +
                  4.20892650e-10 * T3 - 1.94354818e-14 * T4 -
                  1.05873616e+04 * invT;
  }

  // species with midpoint at T=1383 kelvin
  if (T < 1383) {
    // species 54: c2h5coch2
    species[54] = +1.54013856e+00 + 2.19743129e-02 * T - 9.90008070e-06 * T2 +
                  2.63738282e-09 * T3 - 3.17197538e-13 * T4 -
                  9.50796505e+03 * invT;
    // species 69: c7h14ooh1-3
    species[69] = +1.11146206e+00 + 4.45797696e-02 * T - 1.89117461e-05 * T2 +
                  4.47225235e-09 * T3 - 4.44520412e-13 * T4 -
                  1.29868314e+04 * invT;
  } else {
    // species 54: c2h5coch2
    species[54] = +1.42098738e+01 + 7.89332295e-03 * T - 1.83509728e-06 * T2 +
                  2.16467635e-10 * T3 - 1.01382666e-14 * T4 -
                  1.41284951e+04 * invT;
    // species 69: c7h14ooh1-3
    species[69] = +2.72290222e+01 + 1.62460950e-02 * T - 3.70865860e-06 * T2 +
                  4.32322195e-10 * T3 - 2.00856652e-14 * T4 -
                  2.24977070e+04 * invT;
  }

  // species with midpoint at T=1384 kelvin
  if (T < 1384) {
    // species 15: c2h6
    species[15] = -2.52854344e-02 + 1.20382377e-02 * T - 3.72978240e-06 * T2 +
                  5.20852252e-10 * T3 - 1.05973723e-14 * T4 -
                  1.12345534e+04 * invT;
  } else {
    // species 15: c2h6
    species[15] = +6.10683385e+00 + 6.46181805e-03 * T - 1.47509065e-06 * T2 +
                  1.71847932e-10 * T3 - 7.97803464e-15 * T4 -
                  1.37500014e+04 * invT;
  }

  // species with midpoint at T=1385 kelvin
  if (T < 1385) {
    // species 38: ch3o2
    species[38] = +4.26146906e+00 + 5.04367995e-03 * T - 1.07168728e-06 * T2 +
                  5.23523168e-11 * T3 + 8.36678206e-15 * T4 -
                  6.84394259e+02 * invT;
    // species 46: pc4h9o2
    species[46] = +1.94363650e+00 + 2.57756581e-02 * T - 1.09428133e-05 * T2 +
                  2.82662150e-09 * T3 - 3.40237212e-13 * T4 -
                  1.08358103e+04 * invT;
  } else {
    // species 38: ch3o2
    species[38] = +5.95787891e+00 + 3.95364313e-03 * T - 8.94154113e-07 * T2 +
                  1.03472834e-10 * T3 - 4.78014660e-15 * T4 -
                  1.53574838e+03 * invT;
    // species 46: pc4h9o2
    species[46] = +1.57845448e+01 + 1.07605455e-02 * T - 2.48303006e-06 * T2 +
                  2.91395178e-10 * T3 - 1.35977122e-14 * T4 -
                  1.60146054e+04 * invT;
  }

  // species with midpoint at T=1386 kelvin
  if (T < 1386) {
    // species 51: nc4ket13
    species[51] = +2.74883461e+00 + 2.93468373e-02 * T - 1.49868632e-05 * T2 +
                  4.58000325e-09 * T3 - 6.23530738e-13 * T4 -
                  4.01065878e+04 * invT;
    // species 86: nc7ket42
    species[86] = +2.32269738e+00 + 4.72580075e-02 * T - 2.33019060e-05 * T2 +
                  6.99432290e-09 * T3 - 9.48488862e-13 * T4 -
                  5.27586830e+04 * invT;
  } else {
    // species 51: nc4ket13
    species[51] = +1.96430808e+01 + 9.04702830e-03 * T - 2.11021077e-06 * T2 +
                  2.49465100e-10 * T3 - 1.17015292e-14 * T4 -
                  4.59588851e+04 * invT;
    // species 86: nc7ket42
    species[86] = +2.86572867e+01 + 1.60783954e-02 * T - 3.73205233e-06 * T2 +
                  4.39737500e-10 * T3 - 2.05783920e-14 * T4 -
                  6.20252988e+04 * invT;
  }

  // species with midpoint at T=1387 kelvin
  if (T < 1387) {
    // species 44: c4h8ooh1-3o2
    species[44] = +2.22400728e+00 + 3.52497310e-02 * T - 1.88992942e-05 * T2 +
                  6.06569377e-09 * T3 - 8.59430918e-13 * T4 -
                  2.37391490e+04 * invT;
    // species 84: nc7ket24
    species[84] = +1.52936692e+00 + 4.79086733e-02 * T - 2.32229507e-05 * T2 +
                  6.73850955e-09 * T3 - 8.77456252e-13 * T4 -
                  5.23839542e+04 * invT;
    // species 85: nc7ket35
    species[85] = +1.52936692e+00 + 4.79086733e-02 * T - 2.32229507e-05 * T2 +
                  6.73850955e-09 * T3 - 8.77456252e-13 * T4 -
                  5.23839542e+04 * invT;
  } else {
    // species 44: c4h8ooh1-3o2
    species[44] = +2.23244015e+01 + 1.02737388e-02 * T - 2.39692116e-06 * T2 +
                  2.83403840e-10 * T3 - 1.32948877e-14 * T4 -
                  3.05468277e+04 * invT;
    // species 84: nc7ket24
    species[84] = +2.88330388e+01 + 1.60084048e-02 * T - 3.71694853e-06 * T2 +
                  4.38065397e-10 * T3 - 2.05040902e-14 * T4 -
                  6.20142474e+04 * invT;
    // species 85: nc7ket35
    species[85] = +2.88330388e+01 + 1.60084048e-02 * T - 3.71694853e-06 * T2 +
                  4.38065397e-10 * T3 - 2.05040902e-14 * T4 -
                  6.20142474e+04 * invT;
  }

  // species with midpoint at T=1388 kelvin
  if (T < 1388) {
    // species 26: c3h6
    species[26] = +3.94615444e-01 + 1.44553831e-02 * T - 5.16289360e-06 * T2 +
                  9.72035522e-10 * T3 - 6.75780704e-14 * T4 +
                  1.06688164e+03 * invT;
    // species 65: c7h15o2-1
    species[65] = +1.20888552e+00 + 4.42030853e-02 * T - 1.93287087e-05 * T2 +
                  5.08936723e-09 * T3 - 6.12920672e-13 * T4 -
                  1.92918765e+04 * invT;
    // species 77: c7h14ooh1-3o2
    species[77] = +1.89718004e+00 + 5.31148980e-02 * T - 2.67590073e-05 * T2 +
                  8.09122732e-09 * T3 - 1.09170094e-12 * T4 -
                  3.22790229e+04 * invT;
    // species 83: nc7ket13
    species[83] = +2.21629328e+00 + 4.73686881e-02 * T - 2.30157884e-05 * T2 +
                  6.69551000e-09 * T3 - 8.72784362e-13 * T4 -
                  4.87965510e+04 * invT;
  } else {
    // species 26: c3h6
    species[26] = +8.01595958e+00 + 6.85118170e-03 * T - 1.55416578e-06 * T2 +
                  1.80313601e-10 * T3 - 8.34740252e-15 * T4 -
                  1.87821271e+03 * invT;
    // species 65: c7h15o2-1
    species[65] = +2.52656556e+01 + 1.75401794e-02 * T - 4.03929337e-06 * T2 +
                  4.73402015e-10 * T3 - 2.20708250e-14 * T4 -
                  2.81113392e+04 * invT;
    // species 77: c7h14ooh1-3o2
    species[77] = +3.20144349e+01 + 1.70027998e-02 * T - 3.94719520e-06 * T2 +
                  4.65150867e-10 * T3 - 2.17702024e-14 * T4 -
                  4.27171859e+04 * invT;
    // species 83: nc7ket13
    species[83] = +2.90744507e+01 + 1.58588729e-02 * T - 3.67542153e-06 * T2 +
                  4.32634020e-10 * T3 - 2.02323398e-14 * T4 -
                  5.82345477e+04 * invT;
  }

  // species with midpoint at T=1389 kelvin
  if (T < 1389) {
    // species 37: c2h5o
    species[37] = +4.94420708e-01 + 1.35887217e-02 * T - 5.53030033e-06 * T2 +
                  1.28801050e-09 * T3 - 1.29699383e-13 * T4 -
                  3.35252925e+03 * invT;
    // species 55: nc3h7coch2
    species[55] = +9.58299271e-01 + 2.84081266e-02 * T - 1.33037594e-05 * T2 +
                  3.81678785e-09 * T3 - 4.98442094e-13 * T4 -
                  1.23062238e+04 * invT;
    // species 70: c7h14ooh2-3
    species[70] = +8.49786005e-01 + 4.62553598e-02 * T - 2.08453278e-05 * T2 +
                  5.44700975e-09 * T3 - 6.25440796e-13 * T4 -
                  1.53640679e+04 * invT;
    // species 71: c7h14ooh2-4
    species[71] = +8.49786005e-01 + 4.62553598e-02 * T - 2.08453278e-05 * T2 +
                  5.44700975e-09 * T3 - 6.25440796e-13 * T4 -
                  1.53640679e+04 * invT;
    // species 72: c7h14ooh3-2
    species[72] = +8.49786005e-01 + 4.62553598e-02 * T - 2.08453278e-05 * T2 +
                  5.44700975e-09 * T3 - 6.25440796e-13 * T4 -
                  1.53640679e+04 * invT;
    // species 73: c7h14ooh3-4
    species[73] = +8.49786005e-01 + 4.62553598e-02 * T - 2.08453278e-05 * T2 +
                  5.44700975e-09 * T3 - 6.25440796e-13 * T4 -
                  1.53640679e+04 * invT;
    // species 74: c7h14ooh3-5
    species[74] = +8.49786005e-01 + 4.62553598e-02 * T - 2.08453278e-05 * T2 +
                  5.44700975e-09 * T3 - 6.25440796e-13 * T4 -
                  1.53640679e+04 * invT;
    // species 75: c7h14ooh4-2
    species[75] = +8.49786005e-01 + 4.62553598e-02 * T - 2.08453278e-05 * T2 +
                  5.44700975e-09 * T3 - 6.25440796e-13 * T4 -
                  1.53640679e+04 * invT;
    // species 76: c7h14ooh4-3
    species[76] = +8.49786005e-01 + 4.62553598e-02 * T - 2.08453278e-05 * T2 +
                  5.44700975e-09 * T3 - 6.25440796e-13 * T4 -
                  1.53640679e+04 * invT;
  } else {
    // species 37: c2h5o
    species[37] = +7.87339772e+00 + 5.65364535e-03 * T - 1.28140474e-06 * T2 +
                  1.48603526e-10 * T3 - 6.87789076e-15 * T4 -
                  6.07274953e+03 * invT;
    // species 55: nc3h7coch2
    species[55] = +1.61502419e+01 + 1.07046733e-02 * T - 2.45353205e-06 * T2 +
                  2.86642040e-10 * T3 - 1.33342544e-14 * T4 -
                  1.76968561e+04 * invT;
    // species 70: c7h14ooh2-3
    species[70] = +2.74034778e+01 + 1.63763947e-02 * T - 3.76639233e-06 * T2 +
                  4.41111622e-10 * T3 - 2.05573890e-14 * T4 -
                  2.48636651e+04 * invT;
    // species 71: c7h14ooh2-4
    species[71] = +2.74034778e+01 + 1.63763947e-02 * T - 3.76639233e-06 * T2 +
                  4.41111622e-10 * T3 - 2.05573890e-14 * T4 -
                  2.48636651e+04 * invT;
    // species 72: c7h14ooh3-2
    species[72] = +2.74034778e+01 + 1.63763947e-02 * T - 3.76639233e-06 * T2 +
                  4.41111622e-10 * T3 - 2.05573890e-14 * T4 -
                  2.48636651e+04 * invT;
    // species 73: c7h14ooh3-4
    species[73] = +2.74034778e+01 + 1.63763947e-02 * T - 3.76639233e-06 * T2 +
                  4.41111622e-10 * T3 - 2.05573890e-14 * T4 -
                  2.48636651e+04 * invT;
    // species 74: c7h14ooh3-5
    species[74] = +2.74034778e+01 + 1.63763947e-02 * T - 3.76639233e-06 * T2 +
                  4.41111622e-10 * T3 - 2.05573890e-14 * T4 -
                  2.48636651e+04 * invT;
    // species 75: c7h14ooh4-2
    species[75] = +2.74034778e+01 + 1.63763947e-02 * T - 3.76639233e-06 * T2 +
                  4.41111622e-10 * T3 - 2.05573890e-14 * T4 -
                  2.48636651e+04 * invT;
    // species 76: c7h14ooh4-3
    species[76] = +2.74034778e+01 + 1.63763947e-02 * T - 3.76639233e-06 * T2 +
                  4.41111622e-10 * T3 - 2.05573890e-14 * T4 -
                  2.48636651e+04 * invT;
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 11: ho2
    species[11] = +3.18310656e+00 + 1.83383975e-03 * T - 3.10795041e-07 * T2 -
                  8.14632298e-11 * T3 + 3.02279824e-14 * T4 +
                  8.09181013e+02 * invT;
    // species 39: ch3o2h
    species[39] = +3.23442817e+00 + 9.50648835e-03 * T - 3.77954290e-06 * T2 +
                  8.50766632e-10 * T3 - 8.23660444e-14 * T4 -
                  1.77197926e+04 * invT;
    // species 59: c7h15-1
    species[59] = -4.99570406e-01 + 4.04413234e-02 * T - 1.66844251e-05 * T2 +
                  3.91373270e-09 * T3 - 3.93232454e-13 * T4 -
                  1.04590223e+03 * invT;
    // species 63: c7h14-2
    species[63] = -1.16533279e+00 + 3.95219903e-02 * T - 1.65367222e-05 * T2 +
                  3.96422523e-09 * T3 - 4.10692866e-13 * T4 -
                  1.17362359e+04 * invT;
    // species 66: c7h15o2-2
    species[66] = +3.55252917e-01 + 4.71190503e-02 * T - 2.22318369e-05 * T2 +
                  6.36988958e-09 * T3 - 8.26422210e-13 * T4 -
                  2.15795254e+04 * invT;
    // species 67: c7h15o2-3
    species[67] = +3.55252917e-01 + 4.71190503e-02 * T - 2.22318369e-05 * T2 +
                  6.36988958e-09 * T3 - 8.26422210e-13 * T4 -
                  2.15795254e+04 * invT;
    // species 68: c7h15o2-4
    species[68] = +3.55252917e-01 + 4.71190503e-02 * T - 2.22318369e-05 * T2 +
                  6.36988958e-09 * T3 - 8.26422210e-13 * T4 -
                  2.15795254e+04 * invT;
    // species 78: c7h14ooh2-4o2
    species[78] = +1.40912479e+00 + 5.53604170e-02 * T - 2.90392692e-05 * T2 +
                  9.09156872e-09 * T3 - 1.25670138e-12 * T4 -
                  3.46304788e+04 * invT;
    // species 79: c7h14ooh3-5o2
    species[79] = +1.40912479e+00 + 5.53604170e-02 * T - 2.90392692e-05 * T2 +
                  9.09156872e-09 * T3 - 1.25670138e-12 * T4 -
                  3.46304788e+04 * invT;
    // species 80: c7h14ooh4-2o2
    species[80] = +1.40912479e+00 + 5.53604170e-02 * T - 2.90392692e-05 * T2 +
                  9.09156872e-09 * T3 - 1.25670138e-12 * T4 -
                  3.46304788e+04 * invT;
  } else {
    // species 11: ho2
    species[11] = +4.10547423e+00 + 1.19226417e-03 * T - 2.68782663e-07 * T2 +
                  3.10479308e-11 * T3 - 1.43280022e-15 * T4 +
                  3.98127689e+02 * invT;
    // species 39: ch3o2h
    species[39] = +8.43117091e+00 + 4.03408955e-03 * T - 9.23649737e-07 * T2 +
                  1.07833061e-10 * T3 - 5.01384292e-15 * T4 -
                  1.96678771e+04 * invT;
    // species 59: c7h15-1
    species[59] = +2.17940709e+01 + 1.63140122e-02 * T - 3.70460813e-06 * T2 +
                  4.30167870e-10 * T3 - 1.99273400e-14 * T4 -
                  9.20938221e+03 * invT;
    // species 63: c7h14-2
    species[63] = +2.06192047e+01 + 1.57426496e-02 * T - 3.57206857e-06 * T2 +
                  4.14569155e-10 * T3 - 1.91982357e-14 * T4 -
                  1.96713162e+04 * invT;
    // species 66: c7h15o2-2
    species[66] = +2.60535640e+01 + 1.71915844e-02 * T - 3.95710823e-06 * T2 +
                  4.63625602e-10 * T3 - 2.16104798e-14 * T4 -
                  3.06842095e+04 * invT;
    // species 67: c7h15o2-3
    species[67] = +2.60535640e+01 + 1.71915844e-02 * T - 3.95710823e-06 * T2 +
                  4.63625602e-10 * T3 - 2.16104798e-14 * T4 -
                  3.06842095e+04 * invT;
    // species 68: c7h15o2-4
    species[68] = +2.60535640e+01 + 1.71915844e-02 * T - 3.95710823e-06 * T2 +
                  4.63625602e-10 * T3 - 2.16104798e-14 * T4 -
                  3.06842095e+04 * invT;
    // species 78: c7h14ooh2-4o2
    species[78] = +3.28358296e+01 + 1.66383642e-02 * T - 3.86110950e-06 * T2 +
                  4.54896595e-10 * T3 - 2.12868838e-14 * T4 -
                  4.52873003e+04 * invT;
    // species 79: c7h14ooh3-5o2
    species[79] = +3.28358296e+01 + 1.66383642e-02 * T - 3.86110950e-06 * T2 +
                  4.54896595e-10 * T3 - 2.12868838e-14 * T4 -
                  4.52873003e+04 * invT;
    // species 80: c7h14ooh4-2o2
    species[80] = +3.28358296e+01 + 1.66383642e-02 * T - 3.86110950e-06 * T2 +
                  4.54896595e-10 * T3 - 2.12868838e-14 * T4 -
                  4.52873003e+04 * invT;
  }

  // species with midpoint at T=1391 kelvin
  if (T < 1391) {
    // species 32: ch3coch2
    species[32] = +1.80339187e+00 + 1.50703542e-02 * T - 6.45018507e-06 * T2 +
                  1.59549759e-09 * T3 - 1.73220636e-13 * T4 -
                  5.37233261e+03 * invT;
    // species 58: nc7h16
    species[58] = -1.26836187e+00 + 4.27177910e-02 * T - 1.75115595e-05 * T2 +
                  4.07364302e-09 * T3 - 4.04789850e-13 * T4 -
                  2.56586565e+04 * invT;
  } else {
    // species 32: ch3coch2
    species[32] = +1.02303975e+01 + 5.82470805e-03 * T - 1.33668512e-06 * T2 +
                  1.56301312e-10 * T3 - 7.27568724e-15 * T4 -
                  8.44380462e+03 * invT;
    // species 58: nc7h16
    species[58] = +2.22148969e+01 + 1.73837875e-02 * T - 3.94690430e-06 * T2 +
                  4.58246195e-10 * T3 - 2.12260532e-14 * T4 -
                  3.42760081e+04 * invT;
  }

  // species with midpoint at T=1392 kelvin
  if (T < 1392) {
    // species 29: c4h7
    species[29] = -3.50508352e-01 + 2.13255622e-02 * T - 9.69931243e-06 * T2 +
                  2.63509785e-09 * T3 - 3.20119708e-13 * T4 +
                  1.49933591e+04 * invT;
    // species 30: c4h8-1
    species[30] = -8.31372089e-01 + 2.26290489e-02 * T - 9.78861863e-06 * T2 +
                  2.50551090e-09 * T3 - 2.86383360e-13 * T4 -
                  1.57875035e+03 * invT;
    // species 35: c5h9
    species[35] = -1.38013950e+00 + 2.78804243e-02 * T - 1.23381309e-05 * T2 +
                  3.17209752e-09 * T3 - 3.57077670e-13 * T4 +
                  1.25589824e+04 * invT;
    // species 36: c5h10-1
    species[36] = -1.06223481e+00 + 2.87109147e-02 * T - 1.24828963e-05 * T2 +
                  3.18412472e-09 * T3 - 3.59219578e-13 * T4 -
                  4.46546666e+03 * invT;
    // species 64: c7h14-3
    species[64] = -2.03026994e+00 + 4.13162189e-02 * T - 1.81838157e-05 * T2 +
                  4.69264555e-09 * T3 - 5.35142440e-13 * T4 -
                  1.15141029e+04 * invT;
  } else {
    // species 29: c4h7
    species[29] = +1.12103578e+01 + 8.02415980e-03 * T - 1.82167431e-06 * T2 +
                  2.11485263e-10 * T3 - 9.79545478e-15 * T4 +
                  1.09041937e+04 * invT;
    // species 30: c4h8-1
    species[30] = +1.13508668e+01 + 9.03089385e-03 * T - 2.05364343e-06 * T2 +
                  2.38663240e-10 * T3 - 1.10617928e-14 * T4 -
                  5.97871038e+03 * invT;
    // species 35: c5h9
    species[35] = +1.41860454e+01 + 1.03564449e-02 * T - 2.35653539e-06 * T2 +
                  2.74017833e-10 * T3 - 1.27064442e-14 * T4 +
                  7.00496135e+03 * invT;
    // species 36: c5h10-1
    species[36] = +1.45851539e+01 + 1.12036235e-02 * T - 2.54449342e-06 * T2 +
                  2.95472415e-10 * T3 - 1.36877028e-14 * T4 -
                  1.00898205e+04 * invT;
    // species 64: c7h14-3
    species[64] = +2.06822750e+01 + 1.57694314e-02 * T - 3.58570717e-06 * T2 +
                  4.16725650e-10 * T3 - 1.93162079e-14 * T4 -
                  1.96450604e+04 * invT;
  }

  // species with midpoint at T=1393 kelvin
  if (T < 1393) {
    // species 41: c2h3cho
    species[41] = +2.92355162e-01 + 1.77160709e-02 * T - 9.83121080e-06 * T2 +
                  3.20250310e-09 * T3 - 4.52288216e-13 * T4 -
                  1.16521584e+04 * invT;
  } else {
    // species 41: c2h3cho
    species[41] = +1.04184959e+01 + 4.74481661e-03 * T - 1.09770176e-06 * T2 +
                  1.29069801e-10 * T3 - 6.03174582e-15 * T4 -
                  1.49630281e+04 * invT;
  }

  // species with midpoint at T=1395 kelvin
  if (T < 1395) {
    // species 31: pc4h9
    species[31] = -4.37779725e-01 + 2.39486182e-02 * T - 1.04674386e-05 * T2 +
                  2.74466180e-09 * T3 - 3.24021328e-13 * T4 +
                  7.68945248e+03 * invT;
    // species 43: c4h7o
    species[43] = -1.60619192e+00 + 2.79281341e-02 * T - 1.45198589e-05 * T2 +
                  4.26473197e-09 * T3 - 5.31270360e-13 * T4 +
                  4.85090326e+03 * invT;
    // species 81: c7h14o1-3
    species[81] = -5.50036450e+00 + 5.00775440e-02 * T - 2.43311952e-05 * T2 +
                  6.98360675e-09 * T3 - 8.84491392e-13 * T4 -
                  2.44292287e+04 * invT;
  } else {
    // species 31: pc4h9
    species[31] = +1.21510082e+01 + 9.71553585e-03 * T - 2.20525983e-06 * T2 +
                  2.55937840e-10 * T3 - 1.18505941e-14 * T4 +
                  3.17231942e+03 * invT;
    // species 43: c4h7o
    species[43] = +1.53137780e+01 + 7.17135085e-03 * T - 1.60541839e-06 * T2 +
                  1.84893710e-10 * T3 - 8.52281628e-15 * T4 -
                  7.29342884e+02 * invT;
    // species 81: c7h14o1-3
    species[81] = +2.26918916e+01 + 1.66255236e-02 * T - 3.81525883e-06 * T2 +
                  4.46138838e-10 * T3 - 2.07682224e-14 * T4 -
                  3.41591419e+04 * invT;
  }

  // species with midpoint at T=1397 kelvin
  if (T < 1397) {
    // species 47: c3h5-a
    species[47] = -5.29131958e-01 + 1.67279550e-02 * T - 8.44670090e-06 * T2 +
                  2.57164385e-09 * T3 - 3.46516680e-13 * T4 +
                  1.93834226e+04 * invT;
  } else {
    // species 47: c3h5-a
    species[47] = +8.45883958e+00 + 5.63477415e-03 * T - 1.27930955e-06 * T2 +
                  1.48514780e-10 * T3 - 6.87836060e-15 * T4 +
                  1.63576092e+04 * invT;
  }

  // species with midpoint at T=1398 kelvin
  if (T < 1398) {
    // species 27: c4h6
    species[27] = -1.43095121e+00 + 2.39353031e-02 * T - 1.38482267e-05 * T2 +
                  4.78873880e-09 * T3 - 7.14317014e-13 * T4 +
                  1.17551314e+04 * invT;
  } else {
    // species 27: c4h6
    species[27] = +1.11633789e+01 + 6.85819825e-03 * T - 1.56571928e-06 * T2 +
                  1.82423459e-10 * T3 - 8.46972406e-15 * T4 +
                  7.79039770e+03 * invT;
  }

  // species with midpoint at T=1399 kelvin
  if (T < 1399) {
    // species 82: c7h14o2-4
    species[82] = -5.39477206e+00 + 5.09232885e-02 * T - 2.53348745e-05 * T2 +
                  7.41345050e-09 * T3 - 9.49708740e-13 * T4 -
                  2.67118295e+04 * invT;
  } else {
    // species 82: c7h14o2-4
    species[82] = +2.32692731e+01 + 1.62792695e-02 * T - 3.72083020e-06 * T2 +
                  4.33934145e-10 * T3 - 2.01626430e-14 * T4 -
                  3.64349664e+04 * invT;
  }

  // species with midpoint at T=1400 kelvin
  if (T < 1400) {
    // species 25: c3h4-a
    species[25] = +2.53983100e+00 + 8.16718500e-03 * T - 5.88316667e-07 * T2 -
                  1.16184125e-09 * T3 + 3.45826200e-13 * T4 +
                  2.25124300e+04 * invT;
  } else {
    // species 25: c3h4-a
    species[25] = +9.77625600e+00 + 2.65106900e-03 * T - 1.23370600e-07 * T2 -
                  7.56596500e-11 * T3 + 1.01791620e-14 * T4 +
                  1.95497200e+04 * invT;
  }

  // species with midpoint at T=1402 kelvin
  if (T < 1402) {
    // species 40: c2h3co
    species[40] = +1.36242013e+00 + 1.57636986e-02 * T - 1.00072978e-05 * T2 +
                  3.70417780e-09 * T3 - 5.75943060e-13 * T4 +
                  4.25770215e+03 * invT;
  } else {
    // species 40: c2h3co
    species[40] = +9.37467676e+00 + 3.95648450e-03 * T - 8.90660933e-07 * T2 +
                  1.02778857e-10 * T3 - 4.73957962e-15 * T4 +
                  1.92969514e+03 * invT;
  }
}

// compute the S/R at the given temperature (Eq 21)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesEntropy(amrex::Real* species, const amrex::Real T)
{
  const amrex::Real T2 = T * T;
  const amrex::Real T3 = T * T * T;
  const amrex::Real T4 = T * T * T * T;
  const amrex::Real logT = log(T);

  // species with no change across T
  // species 0: h
  species[0] = +2.50104422e+00 * logT - 4.65341317e-01;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 1: h2
    species[1] = +3.29812400e+00 * logT + 8.24944200e-04 * T -
                 4.07150750e-07 * T2 - 3.15847800e-11 * T3 +
                 1.03371800e-13 * T4 - 3.29409400e+00;
    // species 2: o
    species[2] = +2.94642900e+00 * logT - 1.63816600e-03 * T +
                 1.21051600e-06 * T2 - 5.34281000e-10 * T3 +
                 9.72674000e-14 * T4 + 2.96399500e+00;
    // species 3: o2
    species[3] = +3.21293600e+00 * logT + 1.12748600e-03 * T -
                 2.87807500e-07 * T2 + 4.37959000e-10 * T3 -
                 2.19213850e-13 * T4 + 6.03473800e+00;
    // species 5: h2o
    species[5] = +3.38684200e+00 * logT + 3.47498200e-03 * T -
                 3.17734800e-06 * T2 + 2.32286033e-09 * T3 -
                 6.26647000e-13 * T4 + 2.59023300e+00;
    // species 6: co
    species[6] = +3.26245200e+00 * logT + 1.51194100e-03 * T -
                 1.94087750e-06 * T2 + 1.86064800e-09 * T3 -
                 6.18737750e-13 * T4 + 4.84889700e+00;
    // species 7: hco
    species[7] = +2.89833000e+00 * logT + 6.19914700e-03 * T -
                 4.81154200e-06 * T2 + 3.63275000e-09 * T3 -
                 1.14372125e-12 * T4 + 8.98361400e+00;
    // species 8: co2
    species[8] = +2.27572500e+00 * logT + 9.92207200e-03 * T -
                 5.20455500e-06 * T2 + 2.28889567e-09 * T3 -
                 5.29320000e-13 * T4 + 1.01884900e+01;
    // species 9: ch3
    species[9] = +2.43044300e+00 * logT + 1.11241000e-02 * T -
                 8.40110000e-06 * T2 + 5.40609667e-09 * T3 -
                 1.46623825e-12 * T4 + 6.78979400e+00;
    // species 10: ch4
    species[10] = +7.78741500e-01 * logT + 1.74766800e-02 * T -
                  1.39170450e-05 * T2 + 1.01656933e-08 * T3 -
                  3.05982750e-12 * T4 + 1.37221900e+01;
    // species 12: h2o2
    species[12] = +3.38875400e+00 * logT + 6.56922600e-03 * T -
                  7.42506500e-08 * T2 - 1.54193533e-09 * T3 +
                  6.17878750e-13 * T4 + 6.78536300e+00;
    // species 13: ch2o
    species[13] = +1.65273100e+00 * logT + 1.26314400e-02 * T -
                  9.44084000e-06 * T2 + 6.83343667e-09 * T3 -
                  2.10330925e-12 * T4 + 1.37848200e+01;
    // species 14: ch3o
    species[14] = +2.10620400e+00 * logT + 7.21659500e-03 * T +
                  2.66923600e-06 * T2 - 2.45921200e-09 * T3 +
                  5.18902750e-13 * T4 + 1.31521800e+01;
    // species 16: c2h4
    species[16] = -8.61488000e-01 * logT + 2.79616300e-02 * T -
                  1.69433850e-05 * T2 + 9.28384000e-09 * T3 -
                  2.43446975e-12 * T4 + 2.42114900e+01;
    // species 17: c2h5
    species[17] = +2.69070200e+00 * logT + 8.71913300e-03 * T +
                  2.20991950e-06 * T2 + 3.11290100e-10 * T3 -
                  9.81943250e-13 * T4 + 1.21382000e+01;
    // species 18: c2h2
    species[18] = +2.01356200e+00 * logT + 1.51904500e-02 * T -
                  8.08159500e-06 * T2 + 3.02633067e-09 * T3 -
                  4.78186500e-13 * T4 + 8.80537800e+00;
    // species 19: c2h3
    species[19] = +2.45927600e+00 * logT + 7.37147600e-03 * T +
                  1.05493650e-06 * T2 - 4.40547333e-10 * T3 -
                  2.96196000e-13 * T4 + 1.15562000e+01;
    // species 20: ch2co
    species[20] = +2.97497100e+00 * logT + 1.21187100e-02 * T -
                  1.17252300e-06 * T2 - 2.15556167e-09 * T3 +
                  9.76412250e-13 * T4 + 8.67355300e+00;
    // species 21: hcco
    species[21] = +5.04796500e+00 * logT + 4.45347800e-03 * T +
                  1.13414150e-07 * T2 - 4.94031667e-10 * T3 +
                  5.62685500e-14 * T4 + 4.81843900e-01;
    // species 22: ch3co
    species[22] = +3.12527800e+00 * logT + 9.77822000e-03 * T +
                  2.26072400e-06 * T2 - 3.00315400e-09 * T3 +
                  7.98429500e-13 * T4 + 1.12288500e+01;
    // species 23: ch2cho
    species[23] = +3.40906200e+00 * logT + 1.07385700e-02 * T +
                  9.45746000e-07 * T2 - 2.38619433e-09 * T3 +
                  7.16846250e-13 * T4 + 9.55829000e+00;
    // species 24: ch3cho
    species[24] = +2.50569500e+00 * logT + 1.33699100e-02 * T +
                  2.33597650e-06 * T2 - 3.76046667e-09 * T3 +
                  1.06589150e-12 * T4 + 1.33508900e+01;
    // species 28: nc3h7
    species[28] = +1.92253700e+00 * logT + 2.47892700e-02 * T +
                  9.05124500e-07 * T2 - 5.94422000e-09 * T3 +
                  2.14574900e-12 * T4 + 1.39927100e+01;
    // species 48: c3h3
    species[48] = +4.75420000e+00 * logT + 1.10802800e-02 * T +
                  1.39666150e-07 * T2 - 1.82640400e-09 * T3 +
                  4.87407250e-13 * T4 + 5.85454900e-01;
    // species 49: c3h2
    species[49] = +3.16671400e+00 * logT + 2.48257200e-02 * T -
                  2.29581850e-05 * T2 + 1.42267300e-08 * T3 -
                  3.70538000e-12 * T4 + 8.86944600e+00;
    // species 50: ch2(s)
    species[50] = +3.97126500e+00 * logT - 1.69908900e-04 * T +
                  5.12684500e-07 * T2 + 8.30850333e-10 * T3 -
                  4.95316500e-13 * T4 + 5.75320700e-02;
    // species 87: n2
    species[87] = +3.29867700e+00 * logT + 1.40824000e-03 * T -
                  1.98161100e-06 * T2 + 1.88050500e-09 * T3 -
                  6.11213750e-13 * T4 + 3.95037200e+00;
  } else {
    // species 1: h2
    species[1] = +2.99142300e+00 * logT + 7.00064400e-04 * T -
                 2.81691450e-08 * T2 - 3.07719267e-12 * T3 +
                 3.95688000e-16 * T4 - 1.35511000e+00;
    // species 2: o
    species[2] = +2.54206000e+00 * logT - 2.75506200e-05 * T -
                 1.55140150e-09 * T2 + 1.51702233e-12 * T3 -
                 1.09201300e-16 * T4 + 4.92030800e+00;
    // species 3: o2
    species[3] = +3.69757800e+00 * logT + 6.13519700e-04 * T -
                 6.29421000e-08 * T2 + 5.91760333e-12 * T3 -
                 2.84108750e-16 * T4 + 3.18916600e+00;
    // species 5: h2o
    species[5] = +2.67214600e+00 * logT + 3.05629300e-03 * T -
                 4.36513000e-07 * T2 + 4.00332000e-11 * T3 -
                 1.59790450e-15 * T4 + 6.86281700e+00;
    // species 6: co
    species[6] = +3.02507800e+00 * logT + 1.44268900e-03 * T -
                 2.81541400e-07 * T2 + 3.39527000e-11 * T3 -
                 1.72773800e-15 * T4 + 6.10821800e+00;
    // species 7: hco
    species[7] = +3.55727100e+00 * logT + 3.34557300e-03 * T -
                 6.67503000e-07 * T2 + 8.23524333e-11 * T3 -
                 4.28462750e-15 * T4 + 5.55229900e+00;
    // species 8: co2
    species[8] = +4.45362300e+00 * logT + 3.14016900e-03 * T -
                 6.39205500e-07 * T2 + 7.97999000e-11 * T3 -
                 4.17258250e-15 * T4 - 9.55395900e-01;
    // species 9: ch3
    species[9] = +2.84405200e+00 * logT + 6.13797400e-03 * T -
                 1.11517250e-06 * T2 + 1.26172033e-10 * T3 -
                 6.13039750e-15 * T4 + 5.45269700e+00;
    // species 10: ch4
    species[10] = +1.68347900e+00 * logT + 1.02372400e-02 * T -
                  1.93756450e-06 * T2 + 2.26186167e-10 * T3 -
                  1.12585575e-14 * T4 + 9.62339500e+00;
    // species 12: h2o2
    species[12] = +4.57316700e+00 * logT + 4.33613600e-03 * T -
                  7.37344500e-07 * T2 + 7.82968000e-11 * T3 -
                  3.57913500e-15 * T4 + 5.01137000e-01;
    // species 13: ch2o
    species[13] = +2.99560600e+00 * logT + 6.68132100e-03 * T -
                  1.31447750e-06 * T2 + 1.57905100e-10 * T3 -
                  8.03129250e-15 * T4 + 6.91257200e+00;
    // species 14: ch3o
    species[14] = +3.77080000e+00 * logT + 7.87149700e-03 * T -
                  1.32819200e-06 * T2 + 1.31481033e-10 * T3 -
                  5.28154000e-15 * T4 + 2.92957500e+00;
    // species 16: c2h4
    species[16] = +3.52841900e+00 * logT + 1.14851800e-02 * T -
                  2.20919250e-06 * T2 + 2.61486700e-10 * T3 -
                  1.31671200e-14 * T4 + 2.23038900e+00;
    // species 17: c2h5
    species[17] = +7.19048000e+00 * logT + 6.48407700e-03 * T -
                  3.21403250e-07 * T2 - 7.82626333e-11 * T3 +
                  9.70219250e-15 * T4 - 1.47808900e+01;
    // species 18: c2h2
    species[18] = +4.43677000e+00 * logT + 5.37603900e-03 * T -
                  9.56408500e-07 * T2 + 1.09545967e-10 * T3 -
                  5.39177500e-15 * T4 - 2.80033800e+00;
    // species 19: c2h3
    species[19] = +5.93346800e+00 * logT + 4.01774600e-03 * T -
                  1.98337000e-07 * T2 - 4.80422333e-11 * T3 +
                  5.94661000e-15 * T4 - 8.53031300e+00;
    // species 20: ch2co
    species[20] = +6.03881700e+00 * logT + 5.80484000e-03 * T -
                  9.60477000e-07 * T2 + 9.31495000e-11 * T3 -
                  3.64717000e-15 * T4 - 7.65758100e+00;
    // species 21: hcco
    species[21] = +6.75807300e+00 * logT + 2.00040000e-03 * T -
                  1.01380350e-07 * T2 - 3.47044000e-11 * T3 +
                  4.91291250e-15 * T4 - 9.07126200e+00;
    // species 22: ch3co
    species[22] = +5.61227900e+00 * logT + 8.44988600e-03 * T -
                  1.42707350e-06 * T2 + 1.41279200e-10 * T3 -
                  5.67101000e-15 * T4 - 3.27494900e+00;
    // species 23: ch2cho
    species[23] = +5.97567000e+00 * logT + 8.13059100e-03 * T -
                  1.37181200e-06 * T2 + 1.35676800e-10 * T3 -
                  5.44004250e-15 * T4 - 5.04525100e+00;
    // species 24: ch3cho
    species[24] = +5.86865000e+00 * logT + 1.07942400e-02 * T -
                  1.82276500e-06 * T2 + 1.80430400e-10 * T3 -
                  7.24211000e-15 * T4 - 6.01294600e+00;
    // species 28: nc3h7
    species[28] = +7.97829100e+00 * logT + 1.57611300e-02 * T -
                  2.58662150e-06 * T2 + 2.48129733e-10 * T3 -
                  9.56244500e-15 * T4 - 1.93561100e+01;
    // species 48: c3h3
    species[48] = +8.83104700e+00 * logT + 4.35719500e-03 * T -
                  2.05453350e-07 * T2 - 7.89574333e-11 * T3 +
                  1.09413000e-14 * T4 - 2.17791900e+01;
    // species 49: c3h2
    species[49] = +7.67098100e+00 * logT + 2.74874900e-03 * T -
                  2.18547150e-07 * T2 - 2.15186633e-11 * T3 +
                  4.15971750e-15 * T4 - 1.23689000e+01;
    // species 50: ch2(s)
    species[50] = +3.55288900e+00 * logT + 2.06678800e-03 * T -
                  9.57058000e-08 * T2 - 3.68224333e-11 * T3 +
                  5.05337500e-15 * T4 + 1.68657000e+00;
    // species 87: n2
    species[87] = +2.92664000e+00 * logT + 1.48797700e-03 * T -
                  2.84238050e-07 * T2 + 3.36568000e-11 * T3 -
                  1.68833775e-15 * T4 + 5.98052800e+00;
  }

  // species with midpoint at T=1357 kelvin
  if (T < 1357) {
    // species 4: oh
    species[4] = +3.43586219e+00 * logT + 2.02235804e-04 * T -
                 5.67732060e-08 * T2 + 8.08150497e-11 * T3 -
                 1.85912758e-14 * T4 + 2.45014127e+00;
  } else {
    // species 4: oh
    species[4] = +2.62599754e+00 * logT + 1.31992406e-03 * T -
                 1.79862335e-07 * T2 + 1.41876933e-11 * T3 -
                 4.55120040e-16 * T4 + 7.10667307e+00;
  }

  // species with midpoint at T=1373 kelvin
  if (T < 1373) {
    // species 34: c2h5co
    species[34] = +2.93313946e+00 * logT + 2.47427911e-02 * T -
                  6.06110015e-06 * T2 + 7.82336827e-10 * T3 -
                  1.31710834e-14 * T4 + 1.35958355e+01;
  } else {
    // species 34: c2h5co
    species[34] = +9.87881997e+00 * logT + 1.17515676e-02 * T -
                  2.00307461e-06 * T2 + 2.06950206e-10 * T3 -
                  8.99588063e-15 * T4 - 2.49235196e+01;
  }

  // species with midpoint at T=1377 kelvin
  if (T < 1377) {
    // species 45: c4h8ooh1-3
    species[45] = +1.94106276e+00 * logT + 5.18789351e-02 * T -
                  1.55205841e-05 * T2 + 2.87856294e-09 * T3 -
                  2.10710499e-13 * T4 + 2.40230471e+01;
  } else {
    // species 45: c4h8ooh1-3
    species[45] = +1.76442170e+01 * logT + 1.91706536e-02 * T -
                  3.28584320e-06 * T2 + 3.40821903e-10 * T3 -
                  1.48576184e-14 * T4 - 6.17115813e+01;
  }

  // species with midpoint at T=1378 kelvin
  if (T < 1378) {
    // species 33: c2h5cho
    species[33] = +2.16308444e+00 * logT + 2.95501264e-02 * T -
                  7.62231260e-06 * T2 + 1.16501316e-09 * T3 -
                  5.97241567e-14 * T4 + 1.61153348e+01;
    // species 52: nc3h7cho
    species[52] = +1.87415959e+00 * logT + 4.19240315e-02 * T -
                  1.17574389e-05 * T2 + 2.08971224e-09 * T3 -
                  1.52360977e-13 * T4 + 1.91568574e+01;
  } else {
    // species 33: c2h5cho
    species[33] = +1.02427695e+01 * logT + 1.39641989e-02 * T -
                  2.38124000e-06 * T2 + 2.46035235e-10 * T3 -
                  1.06939876e-14 * T4 - 2.85346843e+01;
    // species 52: nc3h7cho
    species[52] = +1.35988068e+01 * logT + 1.81652474e-02 * T -
                  3.08922229e-06 * T2 + 3.18660069e-10 * T3 -
                  1.38360739e-14 * T4 - 4.51790228e+01;
  }

  // species with midpoint at T=1380 kelvin
  if (T < 1380) {
    // species 42: c3h5o
    species[42] = +1.19822582e+00 * logT + 3.05579837e-02 * T -
                  9.03151380e-06 * T2 + 1.62050011e-09 * T3 -
                  1.04963640e-13 * T4 + 2.15566221e+01;
    // species 53: nc3h7co
    species[53] = +2.67256826e+00 * logT + 3.71198825e-02 * T -
                  1.03431429e-05 * T2 + 1.82957963e-09 * T3 -
                  1.33966046e-13 * T4 + 1.64848950e+01;
  } else {
    // species 42: c3h5o
    species[42] = +1.02551752e+01 * logT + 1.14983720e-02 * T -
                  1.92322829e-06 * T2 + 1.96303449e-10 * T3 -
                  8.46394807e-15 * T4 - 2.77655042e+01;
    // species 53: nc3h7co
    species[53] = +1.30026331e+01 * logT + 1.63104877e-02 * T -
                  2.78821450e-06 * T2 + 2.88556876e-10 * T3 -
                  1.25563917e-14 * T4 - 4.02608515e+01;
  }

  // species with midpoint at T=1381 kelvin
  if (T < 1381) {
    // species 56: nc4h9cho
    species[56] = +1.59663472e+00 * logT + 5.43541416e-02 * T -
                  1.60510326e-05 * T2 + 3.11924520e-09 * T3 -
                  2.66722330e-13 * T4 + 2.21281498e+01;
  } else {
    // species 56: nc4h9cho
    species[56] = +1.67965163e+01 * logT + 2.25684519e-02 * T -
                  3.83815794e-06 * T2 + 3.95897897e-10 * T3 -
                  1.71886389e-14 * T4 - 6.09063312e+01;
  }

  // species with midpoint at T=1382 kelvin
  if (T < 1382) {
    // species 57: nc4h9co
    species[57] = +2.43530238e+00 * logT + 4.93682376e-02 * T -
                  1.44941541e-05 * T2 + 2.80954604e-09 * T3 -
                  2.42071793e-13 * T4 + 1.92695879e+01;
    // species 60: c7h15-2
    species[60] = -3.79155767e-02 * logT + 7.56726570e-02 * T -
                  2.03736817e-05 * T2 + 3.10892981e-09 * T3 -
                  1.23090186e-13 * T4 + 3.37321506e+01;
    // species 61: c7h15-3
    species[61] = -3.79155767e-02 * logT + 7.56726570e-02 * T -
                  2.03736817e-05 * T2 + 3.10892981e-09 * T3 -
                  1.23090186e-13 * T4 + 3.37321506e+01;
    // species 62: c7h15-4
    species[62] = -3.79155767e-02 * logT + 7.56726570e-02 * T -
                  2.03736817e-05 * T2 + 3.10892981e-09 * T3 -
                  1.23090186e-13 * T4 + 3.30426690e+01;
  } else {
    // species 57: nc4h9co
    species[57] = +1.61782939e+01 * logT + 2.07991920e-02 * T -
                  3.55893946e-06 * T2 + 3.68533250e-10 * T3 -
                  1.60424297e-14 * T4 - 5.58943579e+01;
    // species 60: c7h15-2
    species[60] = +2.16368842e+01 * logT + 3.23324804e-02 * T -
                  5.46369035e-06 * T2 + 5.61190200e-10 * T3 -
                  2.42943523e-14 * T4 - 8.52209653e+01;
    // species 61: c7h15-3
    species[61] = +2.16368842e+01 * logT + 3.23324804e-02 * T -
                  5.46369035e-06 * T2 + 5.61190200e-10 * T3 -
                  2.42943523e-14 * T4 - 8.52209653e+01;
    // species 62: c7h15-4
    species[62] = +2.16368842e+01 * logT + 3.23324804e-02 * T -
                  5.46369035e-06 * T2 + 5.61190200e-10 * T3 -
                  2.42943523e-14 * T4 - 8.59104470e+01;
  }

  // species with midpoint at T=1383 kelvin
  if (T < 1383) {
    // species 54: c2h5coch2
    species[54] = +1.54013856e+00 * logT + 4.39486258e-02 * T -
                  1.48501211e-05 * T2 + 3.51651043e-09 * T3 -
                  3.96496922e-13 * T4 + 1.99706641e+01;
    // species 69: c7h14ooh1-3
    species[69] = +1.11146206e+00 * logT + 8.91595392e-02 * T -
                  2.83676191e-05 * T2 + 5.96300313e-09 * T3 -
                  5.55650515e-13 * T4 + 3.29200052e+01;
  } else {
    // species 54: c2h5coch2
    species[54] = +1.42098738e+01 * logT + 1.57866459e-02 * T -
                  2.75264591e-06 * T2 + 2.88623513e-10 * T3 -
                  1.26728332e-14 * T4 - 4.87132911e+01;
    // species 69: c7h14ooh1-3
    species[69] = +2.72290222e+01 * logT + 3.24921901e-02 * T -
                  5.56298790e-06 * T2 + 5.76429593e-10 * T3 -
                  2.51070815e-14 * T4 - 1.08901784e+02;
  }

  // species with midpoint at T=1384 kelvin
  if (T < 1384) {
    // species 15: c2h6
    species[15] = -2.52854344e-02 * logT + 2.40764754e-02 * T -
                  5.59467360e-06 * T2 + 6.94469670e-10 * T3 -
                  1.32467154e-14 * T4 + 2.11648750e+01;
  } else {
    // species 15: c2h6
    species[15] = +6.10683385e+00 * logT + 1.29236361e-02 * T -
                  2.21263598e-06 * T2 + 2.29130575e-10 * T3 -
                  9.97254330e-15 * T4 - 1.30081250e+01;
  }

  // species with midpoint at T=1385 kelvin
  if (T < 1385) {
    // species 38: ch3o2
    species[38] = +4.26146906e+00 * logT + 1.00873599e-02 * T -
                  1.60753092e-06 * T2 + 6.98030890e-11 * T3 +
                  1.04584776e-14 * T4 + 5.16330320e+00;
    // species 46: pc4h9o2
    species[46] = +1.94363650e+00 * logT + 5.15513163e-02 * T -
                  1.64142200e-05 * T2 + 3.76882867e-09 * T3 -
                  4.25296515e-13 * T4 + 2.13503149e+01;
  } else {
    // species 38: ch3o2
    species[38] = +5.95787891e+00 * logT + 7.90728626e-03 * T -
                  1.34123117e-06 * T2 + 1.37963779e-10 * T3 -
                  5.97518325e-15 * T4 - 4.71963886e+00;
    // species 46: pc4h9o2
    species[46] = +1.57845448e+01 * logT + 2.15210910e-02 * T -
                  3.72454509e-06 * T2 + 3.88526903e-10 * T3 -
                  1.69971402e-14 * T4 - 5.40388525e+01;
  }

  // species with midpoint at T=1386 kelvin
  if (T < 1386) {
    // species 51: nc4ket13
    species[51] = +2.74883461e+00 * logT + 5.86936745e-02 * T -
                  2.24802947e-05 * T2 + 6.10667100e-09 * T3 -
                  7.79413423e-13 * T4 + 1.88072090e+01;
    // species 86: nc7ket42
    species[86] = +2.32269738e+00 * logT + 9.45160149e-02 * T -
                  3.49528590e-05 * T2 + 9.32576387e-09 * T3 -
                  1.18561108e-12 * T4 + 2.53458269e+01;
  } else {
    // species 51: nc4ket13
    species[51] = +1.96430808e+01 * logT + 1.80940566e-02 * T -
                  3.16531616e-06 * T2 + 3.32620133e-10 * T3 -
                  1.46269114e-14 * T4 - 7.16905094e+01;
    // species 86: nc7ket42
    species[86] = +2.86572867e+01 * logT + 3.21567908e-02 * T -
                  5.59807850e-06 * T2 + 5.86316667e-10 * T3 -
                  2.57229900e-14 * T4 - 1.16135256e+02;
  }

  // species with midpoint at T=1387 kelvin
  if (T < 1387) {
    // species 44: c4h8ooh1-3o2
    species[44] = +2.22400728e+00 * logT + 7.04994620e-02 * T -
                  2.83489413e-05 * T2 + 8.08759170e-09 * T3 -
                  1.07428865e-12 * T4 + 2.38371533e+01;
    // species 84: nc7ket24
    species[84] = +1.52936692e+00 * logT + 9.58173466e-02 * T -
                  3.48344260e-05 * T2 + 8.98467940e-09 * T3 -
                  1.09682032e-12 * T4 + 2.93851334e+01;
    // species 85: nc7ket35
    species[85] = +1.52936692e+00 * logT + 9.58173466e-02 * T -
                  3.48344260e-05 * T2 + 8.98467940e-09 * T3 -
                  1.09682032e-12 * T4 + 2.93851334e+01;
  } else {
    // species 44: c4h8ooh1-3o2
    species[44] = +2.23244015e+01 * logT + 2.05474775e-02 * T -
                  3.59538174e-06 * T2 + 3.77871787e-10 * T3 -
                  1.66186096e-14 * T4 - 8.32666070e+01;
    // species 84: nc7ket24
    species[84] = +2.88330388e+01 * logT + 3.20168096e-02 * T -
                  5.57542280e-06 * T2 + 5.84087197e-10 * T3 -
                  2.56301128e-14 * T4 - 1.17499704e+02;
    // species 85: nc7ket35
    species[85] = +2.88330388e+01 * logT + 3.20168096e-02 * T -
                  5.57542280e-06 * T2 + 5.84087197e-10 * T3 -
                  2.56301128e-14 * T4 - 1.17499704e+02;
  }

  // species with midpoint at T=1388 kelvin
  if (T < 1388) {
    // species 26: c3h6
    species[26] = +3.94615444e-01 * logT + 2.89107662e-02 * T -
                  7.74434040e-06 * T2 + 1.29604736e-09 * T3 -
                  8.44725880e-14 * T4 + 2.19003736e+01;
    // species 65: c7h15o2-1
    species[65] = +1.20888552e+00 * logT + 8.84061706e-02 * T -
                  2.89930630e-05 * T2 + 6.78582297e-09 * T3 -
                  7.66150840e-13 * T4 + 2.98117097e+01;
    // species 77: c7h14ooh1-3o2
    species[77] = +1.89718004e+00 * logT + 1.06229796e-01 * T -
                  4.01385109e-05 * T2 + 1.07883031e-08 * T3 -
                  1.36462618e-12 * T4 + 3.02474612e+01;
    // species 83: nc7ket13
    species[83] = +2.21629328e+00 * logT + 9.47373762e-02 * T -
                  3.45236826e-05 * T2 + 8.92734667e-09 * T3 -
                  1.09098045e-12 * T4 + 2.63157133e+01;
  } else {
    // species 26: c3h6
    species[26] = +8.01595958e+00 * logT + 1.37023634e-02 * T -
                  2.33124867e-06 * T2 + 2.40418134e-10 * T3 -
                  1.04342532e-14 * T4 - 2.00160668e+01;
    // species 65: c7h15o2-1
    species[65] = +2.52656556e+01 * logT + 3.50803587e-02 * T -
                  6.05894005e-06 * T2 + 6.31202687e-10 * T3 -
                  2.75885313e-14 * T4 - 1.00704794e+02;
    // species 77: c7h14ooh1-3o2
    species[77] = +3.20144349e+01 * logT + 3.40055996e-02 * T -
                  5.92079280e-06 * T2 + 6.20201157e-10 * T3 -
                  2.72127530e-14 * T4 - 1.31118243e+02;
    // species 83: nc7ket13
    species[83] = +2.90744507e+01 * logT + 3.17177458e-02 * T -
                  5.51313230e-06 * T2 + 5.76845360e-10 * T3 -
                  2.52904247e-14 * T4 - 1.18064324e+02;
  }

  // species with midpoint at T=1389 kelvin
  if (T < 1389) {
    // species 37: c2h5o
    species[37] = +4.94420708e-01 * logT + 2.71774434e-02 * T -
                  8.29545050e-06 * T2 + 1.71734733e-09 * T3 -
                  1.62124229e-13 * T4 + 2.28079378e+01;
    // species 55: nc3h7coch2
    species[55] = +9.58299271e-01 * logT + 5.68162532e-02 * T -
                  1.99556391e-05 * T2 + 5.08905047e-09 * T3 -
                  6.23052617e-13 * T4 + 2.34112884e+01;
    // species 70: c7h14ooh2-3
    species[70] = +8.49786005e-01 * logT + 9.25107196e-02 * T -
                  3.12679917e-05 * T2 + 7.26267967e-09 * T3 -
                  7.81800995e-13 * T4 + 3.32997487e+01;
    // species 71: c7h14ooh2-4
    species[71] = +8.49786005e-01 * logT + 9.25107196e-02 * T -
                  3.12679917e-05 * T2 + 7.26267967e-09 * T3 -
                  7.81800995e-13 * T4 + 3.32997487e+01;
    // species 72: c7h14ooh3-2
    species[72] = +8.49786005e-01 * logT + 9.25107196e-02 * T -
                  3.12679917e-05 * T2 + 7.26267967e-09 * T3 -
                  7.81800995e-13 * T4 + 3.32997487e+01;
    // species 73: c7h14ooh3-4
    species[73] = +8.49786005e-01 * logT + 9.25107196e-02 * T -
                  3.12679917e-05 * T2 + 7.26267967e-09 * T3 -
                  7.81800995e-13 * T4 + 3.32997487e+01;
    // species 74: c7h14ooh3-5
    species[74] = +8.49786005e-01 * logT + 9.25107196e-02 * T -
                  3.12679917e-05 * T2 + 7.26267967e-09 * T3 -
                  7.81800995e-13 * T4 + 3.32997487e+01;
    // species 75: c7h14ooh4-2
    species[75] = +8.49786005e-01 * logT + 9.25107196e-02 * T -
                  3.12679917e-05 * T2 + 7.26267967e-09 * T3 -
                  7.81800995e-13 * T4 + 3.26102671e+01;
    // species 76: c7h14ooh4-3
    species[76] = +8.49786005e-01 * logT + 9.25107196e-02 * T -
                  3.12679917e-05 * T2 + 7.26267967e-09 * T3 -
                  7.81800995e-13 * T4 + 3.26102671e+01;
  } else {
    // species 37: c2h5o
    species[37] = +7.87339772e+00 * logT + 1.13072907e-02 * T -
                  1.92210711e-06 * T2 + 1.98138035e-10 * T3 -
                  8.59736345e-15 * T4 - 1.73416790e+01;
    // species 55: nc3h7coch2
    species[55] = +1.61502419e+01 * logT + 2.14093466e-02 * T -
                  3.68029807e-06 * T2 + 3.82189387e-10 * T3 -
                  1.66678180e-14 * T4 - 5.83864884e+01;
    // species 70: c7h14ooh2-3
    species[70] = +2.74034778e+01 * logT + 3.27527893e-02 * T -
                  5.64958850e-06 * T2 + 5.88148830e-10 * T3 -
                  2.56967362e-14 * T4 - 1.10201978e+02;
    // species 71: c7h14ooh2-4
    species[71] = +2.74034778e+01 * logT + 3.27527893e-02 * T -
                  5.64958850e-06 * T2 + 5.88148830e-10 * T3 -
                  2.56967362e-14 * T4 - 1.10201978e+02;
    // species 72: c7h14ooh3-2
    species[72] = +2.74034778e+01 * logT + 3.27527893e-02 * T -
                  5.64958850e-06 * T2 + 5.88148830e-10 * T3 -
                  2.56967362e-14 * T4 - 1.10201978e+02;
    // species 73: c7h14ooh3-4
    species[73] = +2.74034778e+01 * logT + 3.27527893e-02 * T -
                  5.64958850e-06 * T2 + 5.88148830e-10 * T3 -
                  2.56967362e-14 * T4 - 1.10201978e+02;
    // species 74: c7h14ooh3-5
    species[74] = +2.74034778e+01 * logT + 3.27527893e-02 * T -
                  5.64958850e-06 * T2 + 5.88148830e-10 * T3 -
                  2.56967362e-14 * T4 - 1.10201978e+02;
    // species 75: c7h14ooh4-2
    species[75] = +2.74034778e+01 * logT + 3.27527893e-02 * T -
                  5.64958850e-06 * T2 + 5.88148830e-10 * T3 -
                  2.56967362e-14 * T4 - 1.10891460e+02;
    // species 76: c7h14ooh4-3
    species[76] = +2.74034778e+01 * logT + 3.27527893e-02 * T -
                  5.64958850e-06 * T2 + 5.88148830e-10 * T3 -
                  2.56967362e-14 * T4 - 1.10891460e+02;
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 11: ho2
    species[11] = +3.18310656e+00 * logT + 3.66767950e-03 * T -
                  4.66192561e-07 * T2 - 1.08617640e-10 * T3 +
                  3.77849780e-14 * T4 + 8.39371099e+00;
    // species 39: ch3o2h
    species[39] = +3.23442817e+00 * logT + 1.90129767e-02 * T -
                  5.66931435e-06 * T2 + 1.13435551e-09 * T3 -
                  1.02957555e-13 * T4 + 9.25623949e+00;
    // species 59: c7h15-1
    species[59] = -4.99570406e-01 * logT + 8.08826467e-02 * T -
                  2.50266377e-05 * T2 + 5.21831027e-09 * T3 -
                  4.91540568e-13 * T4 + 3.46564011e+01;
    // species 63: c7h14-2
    species[63] = -1.16533279e+00 * logT + 7.90439806e-02 * T -
                  2.48050833e-05 * T2 + 5.28563363e-09 * T3 -
                  5.13366082e-13 * T4 + 3.59871070e+01;
    // species 66: c7h15o2-2
    species[66] = +3.55252917e-01 * logT + 9.42381007e-02 * T -
                  3.33477553e-05 * T2 + 8.49318610e-09 * T3 -
                  1.03302776e-12 * T4 + 3.29433435e+01;
    // species 67: c7h15o2-3
    species[67] = +3.55252917e-01 * logT + 9.42381007e-02 * T -
                  3.33477553e-05 * T2 + 8.49318610e-09 * T3 -
                  1.03302776e-12 * T4 + 3.29433435e+01;
    // species 68: c7h15o2-4
    species[68] = +3.55252917e-01 * logT + 9.42381007e-02 * T -
                  3.33477553e-05 * T2 + 8.49318610e-09 * T3 -
                  1.03302776e-12 * T4 + 3.22538619e+01;
    // species 78: c7h14ooh2-4o2
    species[78] = +1.40912479e+00 * logT + 1.10720834e-01 * T -
                  4.35589037e-05 * T2 + 1.21220916e-08 * T3 -
                  1.57087672e-12 * T4 + 3.16223383e+01;
    // species 79: c7h14ooh3-5o2
    species[79] = +1.40912479e+00 * logT + 1.10720834e-01 * T -
                  4.35589037e-05 * T2 + 1.21220916e-08 * T3 -
                  1.57087672e-12 * T4 + 3.16223383e+01;
    // species 80: c7h14ooh4-2o2
    species[80] = +1.40912479e+00 * logT + 1.10720834e-01 * T -
                  4.35589037e-05 * T2 + 1.21220916e-08 * T3 -
                  1.57087672e-12 * T4 + 3.16223383e+01;
  } else {
    // species 11: ho2
    species[11] = +4.10547423e+00 * logT + 2.38452835e-03 * T -
                  4.03173995e-07 * T2 + 4.13972410e-11 * T3 -
                  1.79100027e-15 * T4 + 3.12515836e+00;
    // species 39: ch3o2h
    species[39] = +8.43117091e+00 * logT + 8.06817909e-03 * T -
                  1.38547461e-06 * T2 + 1.43777414e-10 * T3 -
                  6.26730365e-15 * T4 - 1.91170629e+01;
    // species 59: c7h15-1
    species[59] = +2.17940709e+01 * logT + 3.26280243e-02 * T -
                  5.55691220e-06 * T2 + 5.73557160e-10 * T3 -
                  2.49091750e-14 * T4 - 8.64954311e+01;
    // species 63: c7h14-2
    species[63] = +2.06192047e+01 * logT + 3.14852991e-02 * T -
                  5.35810285e-06 * T2 + 5.52758873e-10 * T3 -
                  2.39977946e-14 * T4 - 8.22519387e+01;
    // species 66: c7h15o2-2
    species[66] = +2.60535640e+01 * logT + 3.43831688e-02 * T -
                  5.93566235e-06 * T2 + 6.18167470e-10 * T3 -
                  2.70130997e-14 * T4 - 1.05407563e+02;
    // species 67: c7h15o2-3
    species[67] = +2.60535640e+01 * logT + 3.43831688e-02 * T -
                  5.93566235e-06 * T2 + 6.18167470e-10 * T3 -
                  2.70130997e-14 * T4 - 1.05407563e+02;
    // species 68: c7h15o2-4
    species[68] = +2.60535640e+01 * logT + 3.43831688e-02 * T -
                  5.93566235e-06 * T2 + 6.18167470e-10 * T3 -
                  2.70130997e-14 * T4 - 1.06097045e+02;
    // species 78: c7h14ooh2-4o2
    species[78] = +3.28358296e+01 * logT + 3.32767285e-02 * T -
                  5.79166425e-06 * T2 + 6.06528793e-10 * T3 -
                  2.66086048e-14 * T4 - 1.35975710e+02;
    // species 79: c7h14ooh3-5o2
    species[79] = +3.28358296e+01 * logT + 3.32767285e-02 * T -
                  5.79166425e-06 * T2 + 6.06528793e-10 * T3 -
                  2.66086048e-14 * T4 - 1.35975710e+02;
    // species 80: c7h14ooh4-2o2
    species[80] = +3.28358296e+01 * logT + 3.32767285e-02 * T -
                  5.79166425e-06 * T2 + 6.06528793e-10 * T3 -
                  2.66086048e-14 * T4 - 1.35975710e+02;
  }

  // species with midpoint at T=1391 kelvin
  if (T < 1391) {
    // species 32: ch3coch2
    species[32] = +1.80339187e+00 * logT + 3.01407085e-02 * T -
                  9.67527760e-06 * T2 + 2.12733011e-09 * T3 -
                  2.16525795e-13 * T4 + 1.78046408e+01;
    // species 58: nc7h16
    species[58] = -1.26836187e+00 * logT + 8.54355820e-02 * T -
                  2.62673393e-05 * T2 + 5.43152403e-09 * T3 -
                  5.05987313e-13 * T4 + 3.53732912e+01;
  } else {
    // species 32: ch3coch2
    species[32] = +1.02303975e+01 * logT + 1.16494161e-02 * T -
                  2.00502768e-06 * T2 + 2.08401749e-10 * T3 -
                  9.09460905e-15 * T4 - 2.79197220e+01;
    // species 58: nc7h16
    species[58] = +2.22148969e+01 * logT + 3.47675750e-02 * T -
                  5.92035645e-06 * T2 + 6.10994927e-10 * T3 -
                  2.65325665e-14 * T4 - 9.23040196e+01;
  }

  // species with midpoint at T=1392 kelvin
  if (T < 1392) {
    // species 29: c4h7
    species[29] = -3.50508352e-01 * logT + 4.26511243e-02 * T -
                  1.45489687e-05 * T2 + 3.51346380e-09 * T3 -
                  4.00149635e-13 * T4 + 2.67295696e+01;
    // species 30: c4h8-1
    species[30] = -8.31372089e-01 * logT + 4.52580978e-02 * T -
                  1.46829280e-05 * T2 + 3.34068120e-09 * T3 -
                  3.57979200e-13 * T4 + 2.95084236e+01;
    // species 35: c5h9
    species[35] = -1.38013950e+00 * logT + 5.57608487e-02 * T -
                  1.85071964e-05 * T2 + 4.22946337e-09 * T3 -
                  4.46347087e-13 * T4 + 3.26441304e+01;
    // species 36: c5h10-1
    species[36] = -1.06223481e+00 * logT + 5.74218294e-02 * T -
                  1.87243445e-05 * T2 + 4.24549963e-09 * T3 -
                  4.49024472e-13 * T4 + 3.22739790e+01;
    // species 64: c7h14-3
    species[64] = -2.03026994e+00 * logT + 8.26324377e-02 * T -
                  2.72757236e-05 * T2 + 6.25686073e-09 * T3 -
                  6.68928050e-13 * T4 + 4.02316266e+01;
  } else {
    // species 29: c4h7
    species[29] = +1.12103578e+01 * logT + 1.60483196e-02 * T -
                  2.73251146e-06 * T2 + 2.81980351e-10 * T3 -
                  1.22443185e-14 * T4 - 3.55593015e+01;
    // species 30: c4h8-1
    species[30] = +1.13508668e+01 * logT + 1.80617877e-02 * T -
                  3.08046515e-06 * T2 + 3.18217653e-10 * T3 -
                  1.38272410e-14 * T4 - 3.64369438e+01;
    // species 35: c5h9
    species[35] = +1.41860454e+01 * logT + 2.07128899e-02 * T -
                  3.53480309e-06 * T2 + 3.65357110e-10 * T3 -
                  1.58830552e-14 * T4 - 5.14501773e+01;
    // species 36: c5h10-1
    species[36] = +1.45851539e+01 * logT + 2.24072471e-02 * T -
                  3.81674012e-06 * T2 + 3.93963220e-10 * T3 -
                  1.71096285e-14 * T4 - 5.23683936e+01;
    // species 64: c7h14-3
    species[64] = +2.06822750e+01 * logT + 3.15388629e-02 * T -
                  5.37856075e-06 * T2 + 5.55634200e-10 * T3 -
                  2.41452598e-14 * T4 - 8.25235002e+01;
  }

  // species with midpoint at T=1393 kelvin
  if (T < 1393) {
    // species 41: c2h3cho
    species[41] = +2.92355162e-01 * logT + 3.54321417e-02 * T -
                  1.47468162e-05 * T2 + 4.27000413e-09 * T3 -
                  5.65360270e-13 * T4 + 2.28878280e+01;
  } else {
    // species 41: c2h3cho
    species[41] = +1.04184959e+01 * logT + 9.48963321e-03 * T -
                  1.64655265e-06 * T2 + 1.72093068e-10 * T3 -
                  7.53968227e-15 * T4 - 3.07235061e+01;
  }

  // species with midpoint at T=1395 kelvin
  if (T < 1395) {
    // species 31: pc4h9
    species[31] = -4.37779725e-01 * logT + 4.78972364e-02 * T -
                  1.57011580e-05 * T2 + 3.65954907e-09 * T3 -
                  4.05026660e-13 * T4 + 2.86852732e+01;
    // species 43: c4h7o
    species[43] = -1.60619192e+00 * logT + 5.58562682e-02 * T -
                  2.17797883e-05 * T2 + 5.68630930e-09 * T3 -
                  6.64087950e-13 * T4 + 3.47112559e+01;
    // species 81: c7h14o1-3
    species[81] = -5.50036450e+00 * logT + 1.00155088e-01 * T -
                  3.64967928e-05 * T2 + 9.31147567e-09 * T3 -
                  1.10561424e-12 * T4 + 5.64768482e+01;
  } else {
    // species 31: pc4h9
    species[31] = +1.21510082e+01 * logT + 1.94310717e-02 * T -
                  3.30788975e-06 * T2 + 3.41250453e-10 * T3 -
                  1.48132427e-14 * T4 - 3.93425822e+01;
    // species 43: c4h7o
    species[43] = +1.53137780e+01 * logT + 1.43427017e-02 * T -
                  2.40812758e-06 * T2 + 2.46524946e-10 * T3 -
                  1.06535203e-14 * T4 - 5.52937859e+01;
    // species 81: c7h14o1-3
    species[81] = +2.26918916e+01 * logT + 3.32510472e-02 * T -
                  5.72288825e-06 * T2 + 5.94851783e-10 * T3 -
                  2.59602780e-14 * T4 - 9.46346563e+01;
  }

  // species with midpoint at T=1397 kelvin
  if (T < 1397) {
    // species 47: c3h5-a
    species[47] = -5.29131958e-01 * logT + 3.34559100e-02 * T -
                  1.26700514e-05 * T2 + 3.42885847e-09 * T3 -
                  4.33145850e-13 * T4 + 2.53067131e+01;
  } else {
    // species 47: c3h5-a
    species[47] = +8.45883958e+00 * logT + 1.12695483e-02 * T -
                  1.91896432e-06 * T2 + 1.98019706e-10 * T3 -
                  8.59795075e-15 * T4 - 2.25809450e+01;
  }

  // species with midpoint at T=1398 kelvin
  if (T < 1398) {
    // species 27: c4h6
    species[27] = -1.43095121e+00 * logT + 4.78706062e-02 * T -
                  2.07723400e-05 * T2 + 6.38498507e-09 * T3 -
                  8.92896267e-13 * T4 + 2.90825833e+01;
  } else {
    // species 27: c4h6
    species[27] = +1.11633789e+01 * logT + 1.37163965e-02 * T -
                  2.34857892e-06 * T2 + 2.43231279e-10 * T3 -
                  1.05871551e-14 * T4 - 3.69847949e+01;
  }

  // species with midpoint at T=1399 kelvin
  if (T < 1399) {
    // species 82: c7h14o2-4
    species[82] = -5.39477206e+00 * logT + 1.01846577e-01 * T -
                  3.80023118e-05 * T2 + 9.88460067e-09 * T3 -
                  1.18713592e-12 * T4 + 5.51731319e+01;
  } else {
    // species 82: c7h14o2-4
    species[82] = +2.32692731e+01 * logT + 3.25585391e-02 * T -
                  5.58124530e-06 * T2 + 5.78578860e-10 * T3 -
                  2.52033037e-14 * T4 - 9.79457278e+01;
  }

  // species with midpoint at T=1400 kelvin
  if (T < 1400) {
    // species 25: c3h4-a
    species[25] = +2.53983100e+00 * logT + 1.63343700e-02 * T -
                  8.82475000e-07 * T2 - 1.54912167e-09 * T3 +
                  4.32282750e-13 * T4 + 9.93570200e+00;
  } else {
    // species 25: c3h4-a
    species[25] = +9.77625600e+00 * logT + 5.30213800e-03 * T -
                  1.85055900e-07 * T2 - 1.00879533e-10 * T3 +
                  1.27239525e-14 * T4 - 3.07706100e+01;
  }

  // species with midpoint at T=1402 kelvin
  if (T < 1402) {
    // species 40: c2h3co
    species[40] = +1.36242013e+00 * logT + 3.15273972e-02 * T -
                  1.50109468e-05 * T2 + 4.93890373e-09 * T3 -
                  7.19928825e-13 * T4 + 1.72626546e+01;
  } else {
    // species 40: c2h3co
    species[40] = +9.37467676e+00 * logT + 7.91296900e-03 * T -
                  1.33599140e-06 * T2 + 1.37038477e-10 * T3 -
                  5.92447452e-15 * T4 - 2.40892696e+01;
  }
}

// compute d(Cp/R)/dT and d(Cv/R)/dT at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
dcvpRdT(amrex::Real* species, const amrex::Real T)
{
  const amrex::Real T2 = T * T;
  const amrex::Real T3 = T * T * T;

  // species with no change across T
  // species 0: h
  species[0] = 0.0;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 1: h2
    species[1] = +8.24944200e-04 - 1.62860300e-06 * T - 2.84263020e-10 * T2 +
                 1.65394880e-12 * T3;
    // species 2: o
    species[2] = -1.63816600e-03 + 4.84206400e-06 * T - 4.80852900e-09 * T2 +
                 1.55627840e-12 * T3;
    // species 3: o2
    species[3] = +1.12748600e-03 - 1.15123000e-06 * T + 3.94163100e-09 * T2 -
                 3.50742160e-12 * T3;
    // species 5: h2o
    species[5] = +3.47498200e-03 - 1.27093920e-05 * T + 2.09057430e-08 * T2 -
                 1.00263520e-11 * T3;
    // species 6: co
    species[6] = +1.51194100e-03 - 7.76351000e-06 * T + 1.67458320e-08 * T2 -
                 9.89980400e-12 * T3;
    // species 7: hco
    species[7] = +6.19914700e-03 - 1.92461680e-05 * T + 3.26947500e-08 * T2 -
                 1.82995400e-11 * T3;
    // species 8: co2
    species[8] = +9.92207200e-03 - 2.08182200e-05 * T + 2.06000610e-08 * T2 -
                 8.46912000e-12 * T3;
    // species 9: ch3
    species[9] = +1.11241000e-02 - 3.36044000e-05 * T + 4.86548700e-08 * T2 -
                 2.34598120e-11 * T3;
    // species 10: ch4
    species[10] = +1.74766800e-02 - 5.56681800e-05 * T + 9.14912400e-08 * T2 -
                  4.89572400e-11 * T3;
    // species 12: h2o2
    species[12] = +6.56922600e-03 - 2.97002600e-07 * T - 1.38774180e-08 * T2 +
                  9.88606000e-12 * T3;
    // species 13: ch2o
    species[13] = +1.26314400e-02 - 3.77633600e-05 * T + 6.15009300e-08 * T2 -
                  3.36529480e-11 * T3;
    // species 14: ch3o
    species[14] = +7.21659500e-03 + 1.06769440e-05 * T - 2.21329080e-08 * T2 +
                  8.30244400e-12 * T3;
    // species 16: c2h4
    species[16] = +2.79616300e-02 - 6.77735400e-05 * T + 8.35545600e-08 * T2 -
                  3.89515160e-11 * T3;
    // species 17: c2h5
    species[17] = +8.71913300e-03 + 8.83967800e-06 * T + 2.80161090e-09 * T2 -
                  1.57110920e-11 * T3;
    // species 18: c2h2
    species[18] = +1.51904500e-02 - 3.23263800e-05 * T + 2.72369760e-08 * T2 -
                  7.65098400e-12 * T3;
    // species 19: c2h3
    species[19] = +7.37147600e-03 + 4.21974600e-06 * T - 3.96492600e-09 * T2 -
                  4.73913600e-12 * T3;
    // species 20: ch2co
    species[20] = +1.21187100e-02 - 4.69009200e-06 * T - 1.94000550e-08 * T2 +
                  1.56225960e-11 * T3;
    // species 21: hcco
    species[21] = +4.45347800e-03 + 4.53656600e-07 * T - 4.44628500e-09 * T2 +
                  9.00296800e-13 * T3;
    // species 22: ch3co
    species[22] = +9.77822000e-03 + 9.04289600e-06 * T - 2.70283860e-08 * T2 +
                  1.27748720e-11 * T3;
    // species 23: ch2cho
    species[23] = +1.07385700e-02 + 3.78298400e-06 * T - 2.14757490e-08 * T2 +
                  1.14695400e-11 * T3;
    // species 24: ch3cho
    species[24] = +1.33699100e-02 + 9.34390600e-06 * T - 3.38442000e-08 * T2 +
                  1.70542640e-11 * T3;
    // species 28: nc3h7
    species[28] = +2.47892700e-02 + 3.62049800e-06 * T - 5.34979800e-08 * T2 +
                  3.43319840e-11 * T3;
    // species 48: c3h3
    species[48] = +1.10802800e-02 + 5.58664600e-07 * T - 1.64376360e-08 * T2 +
                  7.79851600e-12 * T3;
    // species 49: c3h2
    species[49] = +2.48257200e-02 - 9.18327400e-05 * T + 1.28040570e-07 * T2 -
                  5.92860800e-11 * T3;
    // species 50: ch2(s)
    species[50] = -1.69908900e-04 + 2.05073800e-06 * T + 7.47765300e-09 * T2 -
                  7.92506400e-12 * T3;
    // species 87: n2
    species[87] = +1.40824000e-03 - 7.92644400e-06 * T + 1.69245450e-08 * T2 -
                  9.77942000e-12 * T3;
  } else {
    // species 1: h2
    species[1] = +7.00064400e-04 - 1.12676580e-07 * T - 2.76947340e-11 * T2 +
                 6.33100800e-15 * T3;
    // species 2: o
    species[2] = -2.75506200e-05 - 6.20560600e-09 * T + 1.36532010e-11 * T2 -
                 1.74722080e-15 * T3;
    // species 3: o2
    species[3] = +6.13519700e-04 - 2.51768400e-07 * T + 5.32584300e-11 * T2 -
                 4.54574000e-15 * T3;
    // species 5: h2o
    species[5] = +3.05629300e-03 - 1.74605200e-06 * T + 3.60298800e-10 * T2 -
                 2.55664720e-14 * T3;
    // species 6: co
    species[6] = +1.44268900e-03 - 1.12616560e-06 * T + 3.05574300e-10 * T2 -
                 2.76438080e-14 * T3;
    // species 7: hco
    species[7] = +3.34557300e-03 - 2.67001200e-06 * T + 7.41171900e-10 * T2 -
                 6.85540400e-14 * T3;
    // species 8: co2
    species[8] = +3.14016900e-03 - 2.55682200e-06 * T + 7.18199100e-10 * T2 -
                 6.67613200e-14 * T3;
    // species 9: ch3
    species[9] = +6.13797400e-03 - 4.46069000e-06 * T + 1.13554830e-09 * T2 -
                 9.80863600e-14 * T3;
    // species 10: ch4
    species[10] = +1.02372400e-02 - 7.75025800e-06 * T + 2.03567550e-09 * T2 -
                  1.80136920e-13 * T3;
    // species 12: h2o2
    species[12] = +4.33613600e-03 - 2.94937800e-06 * T + 7.04671200e-10 * T2 -
                  5.72661600e-14 * T3;
    // species 13: ch2o
    species[13] = +6.68132100e-03 - 5.25791000e-06 * T + 1.42114590e-09 * T2 -
                  1.28500680e-13 * T3;
    // species 14: ch3o
    species[14] = +7.87149700e-03 - 5.31276800e-06 * T + 1.18332930e-09 * T2 -
                  8.45046400e-14 * T3;
    // species 16: c2h4
    species[16] = +1.14851800e-02 - 8.83677000e-06 * T + 2.35338030e-09 * T2 -
                  2.10673920e-13 * T3;
    // species 17: c2h5
    species[17] = +6.48407700e-03 - 1.28561300e-06 * T - 7.04363700e-10 * T2 +
                  1.55235080e-13 * T3;
    // species 18: c2h2
    species[18] = +5.37603900e-03 - 3.82563400e-06 * T + 9.85913700e-10 * T2 -
                  8.62684000e-14 * T3;
    // species 19: c2h3
    species[19] = +4.01774600e-03 - 7.93348000e-07 * T - 4.32380100e-10 * T2 +
                  9.51457600e-14 * T3;
    // species 20: ch2co
    species[20] = +5.80484000e-03 - 3.84190800e-06 * T + 8.38345500e-10 * T2 -
                  5.83547200e-14 * T3;
    // species 21: hcco
    species[21] = +2.00040000e-03 - 4.05521400e-07 * T - 3.12339600e-10 * T2 +
                  7.86066000e-14 * T3;
    // species 22: ch3co
    species[22] = +8.44988600e-03 - 5.70829400e-06 * T + 1.27151280e-09 * T2 -
                  9.07361600e-14 * T3;
    // species 23: ch2cho
    species[23] = +8.13059100e-03 - 5.48724800e-06 * T + 1.22109120e-09 * T2 -
                  8.70406800e-14 * T3;
    // species 24: ch3cho
    species[24] = +1.07942400e-02 - 7.29106000e-06 * T + 1.62387360e-09 * T2 -
                  1.15873760e-13 * T3;
    // species 28: nc3h7
    species[28] = +1.57611300e-02 - 1.03464860e-05 * T + 2.23316760e-09 * T2 -
                  1.52999120e-13 * T3;
    // species 48: c3h3
    species[48] = +4.35719500e-03 - 8.21813400e-07 * T - 7.10616900e-10 * T2 +
                  1.75060800e-13 * T3;
    // species 49: c3h2
    species[49] = +2.74874900e-03 - 8.74188600e-07 * T - 1.93667970e-10 * T2 +
                  6.65554800e-14 * T3;
    // species 50: ch2(s)
    species[50] = +2.06678800e-03 - 3.82823200e-07 * T - 3.31401900e-10 * T2 +
                  8.08540000e-14 * T3;
    // species 87: n2
    species[87] = +1.48797700e-03 - 1.13695220e-06 * T + 3.02911200e-10 * T2 -
                  2.70134040e-14 * T3;
  }

  // species with midpoint at T=1357 kelvin
  if (T < 1357) {
    // species 4: oh
    species[4] = +2.02235804e-04 - 2.27092824e-07 * T + 7.27335447e-10 * T2 -
                 2.97460412e-13 * T3;
  } else {
    // species 4: oh
    species[4] = +1.31992406e-03 - 7.19449340e-07 * T + 1.27689240e-10 * T2 -
                 7.28192064e-15 * T3;
  }

  // species with midpoint at T=1373 kelvin
  if (T < 1373) {
    // species 34: c2h5co
    species[34] = +2.47427911e-02 - 2.42444006e-05 * T + 7.04103144e-09 * T2 -
                  2.10737335e-13 * T3;
  } else {
    // species 34: c2h5co
    species[34] = +1.17515676e-02 - 8.01229846e-06 * T + 1.86255185e-09 * T2 -
                  1.43934090e-13 * T3;
  }

  // species with midpoint at T=1377 kelvin
  if (T < 1377) {
    // species 45: c4h8ooh1-3
    species[45] = +5.18789351e-02 - 6.20823366e-05 * T + 2.59070664e-08 * T2 -
                  3.37136798e-12 * T3;
  } else {
    // species 45: c4h8ooh1-3
    species[45] = +1.91706536e-02 - 1.31433728e-05 * T + 3.06739713e-09 * T2 -
                  2.37721894e-13 * T3;
  }

  // species with midpoint at T=1378 kelvin
  if (T < 1378) {
    // species 33: c2h5cho
    species[33] = +2.95501264e-02 - 3.04892504e-05 * T + 1.04851184e-08 * T2 -
                  9.55586508e-13 * T3;
    // species 52: nc3h7cho
    species[52] = +4.19240315e-02 - 4.70297558e-05 * T + 1.88074102e-08 * T2 -
                  2.43777563e-12 * T3;
  } else {
    // species 33: c2h5cho
    species[33] = +1.39641989e-02 - 9.52496002e-06 * T + 2.21431712e-09 * T2 -
                  1.71103801e-13 * T3;
    // species 52: nc3h7cho
    species[52] = +1.81652474e-02 - 1.23568892e-05 * T + 2.86794062e-09 * T2 -
                  2.21377183e-13 * T3;
  }

  // species with midpoint at T=1380 kelvin
  if (T < 1380) {
    // species 42: c3h5o
    species[42] = +3.05579837e-02 - 3.61260552e-05 * T + 1.45845010e-08 * T2 -
                  1.67941825e-12 * T3;
    // species 53: nc3h7co
    species[53] = +3.71198825e-02 - 4.13725718e-05 * T + 1.64662166e-08 * T2 -
                  2.14345673e-12 * T3;
  } else {
    // species 42: c3h5o
    species[42] = +1.14983720e-02 - 7.69291318e-06 * T + 1.76673104e-09 * T2 -
                  1.35423169e-13 * T3;
    // species 53: nc3h7co
    species[53] = +1.63104877e-02 - 1.11528580e-05 * T + 2.59701189e-09 * T2 -
                  2.00902267e-13 * T3;
  }

  // species with midpoint at T=1381 kelvin
  if (T < 1381) {
    // species 56: nc4h9cho
    species[56] = +5.43541416e-02 - 6.42041302e-05 * T + 2.80732068e-08 * T2 -
                  4.26755728e-12 * T3;
  } else {
    // species 56: nc4h9cho
    species[56] = +2.25684519e-02 - 1.53526318e-05 * T + 3.56308107e-09 * T2 -
                  2.75018222e-13 * T3;
  }

  // species with midpoint at T=1382 kelvin
  if (T < 1382) {
    // species 57: nc4h9co
    species[57] = +4.93682376e-02 - 5.79766164e-05 * T + 2.52859144e-08 * T2 -
                  3.87314869e-12 * T3;
    // species 60: c7h15-2
    species[60] = +7.56726570e-02 - 8.14947268e-05 * T + 2.79803683e-08 * T2 -
                  1.96944298e-12 * T3;
    // species 61: c7h15-3
    species[61] = +7.56726570e-02 - 8.14947268e-05 * T + 2.79803683e-08 * T2 -
                  1.96944298e-12 * T3;
    // species 62: c7h15-4
    species[62] = +7.56726570e-02 - 8.14947268e-05 * T + 2.79803683e-08 * T2 -
                  1.96944298e-12 * T3;
  } else {
    // species 57: nc4h9co
    species[57] = +2.07991920e-02 - 1.42357578e-05 * T + 3.31679925e-09 * T2 -
                  2.56678875e-13 * T3;
    // species 60: c7h15-2
    species[60] = +3.23324804e-02 - 2.18547614e-05 * T + 5.05071180e-09 * T2 -
                  3.88709636e-13 * T3;
    // species 61: c7h15-3
    species[61] = +3.23324804e-02 - 2.18547614e-05 * T + 5.05071180e-09 * T2 -
                  3.88709636e-13 * T3;
    // species 62: c7h15-4
    species[62] = +3.23324804e-02 - 2.18547614e-05 * T + 5.05071180e-09 * T2 -
                  3.88709636e-13 * T3;
  }

  // species with midpoint at T=1383 kelvin
  if (T < 1383) {
    // species 54: c2h5coch2
    species[54] = +4.39486258e-02 - 5.94004842e-05 * T + 3.16485939e-08 * T2 -
                  6.34395076e-12 * T3;
    // species 69: c7h14ooh1-3
    species[69] = +8.91595392e-02 - 1.13470476e-04 * T + 5.36670282e-08 * T2 -
                  8.89040824e-12 * T3;
  } else {
    // species 54: c2h5coch2
    species[54] = +1.57866459e-02 - 1.10105837e-05 * T + 2.59761162e-09 * T2 -
                  2.02765332e-13 * T3;
    // species 69: c7h14ooh1-3
    species[69] = +3.24921901e-02 - 2.22519516e-05 * T + 5.18786634e-09 * T2 -
                  4.01713304e-13 * T3;
  }

  // species with midpoint at T=1384 kelvin
  if (T < 1384) {
    // species 15: c2h6
    species[15] = +2.40764754e-02 - 2.23786944e-05 * T + 6.25022703e-09 * T2 -
                  2.11947446e-13 * T3;
  } else {
    // species 15: c2h6
    species[15] = +1.29236361e-02 - 8.85054392e-06 * T + 2.06217518e-09 * T2 -
                  1.59560693e-13 * T3;
  }

  // species with midpoint at T=1385 kelvin
  if (T < 1385) {
    // species 38: ch3o2
    species[38] = +1.00873599e-02 - 6.43012368e-06 * T + 6.28227801e-10 * T2 +
                  1.67335641e-13 * T3;
    // species 46: pc4h9o2
    species[46] = +5.15513163e-02 - 6.56568800e-05 * T + 3.39194580e-08 * T2 -
                  6.80474424e-12 * T3;
  } else {
    // species 38: ch3o2
    species[38] = +7.90728626e-03 - 5.36492468e-06 * T + 1.24167401e-09 * T2 -
                  9.56029320e-14 * T3;
    // species 46: pc4h9o2
    species[46] = +2.15210910e-02 - 1.48981803e-05 * T + 3.49674213e-09 * T2 -
                  2.71954244e-13 * T3;
  }

  // species with midpoint at T=1386 kelvin
  if (T < 1386) {
    // species 51: nc4ket13
    species[51] = +5.86936745e-02 - 8.99211790e-05 * T + 5.49600390e-08 * T2 -
                  1.24706148e-11 * T3;
    // species 86: nc7ket42
    species[86] = +9.45160149e-02 - 1.39811436e-04 * T + 8.39318748e-08 * T2 -
                  1.89697772e-11 * T3;
  } else {
    // species 51: nc4ket13
    species[51] = +1.80940566e-02 - 1.26612646e-05 * T + 2.99358120e-09 * T2 -
                  2.34030583e-13 * T3;
    // species 86: nc7ket42
    species[86] = +3.21567908e-02 - 2.23923140e-05 * T + 5.27685000e-09 * T2 -
                  4.11567840e-13 * T3;
  }

  // species with midpoint at T=1387 kelvin
  if (T < 1387) {
    // species 44: c4h8ooh1-3o2
    species[44] = +7.04994620e-02 - 1.13395765e-04 * T + 7.27883253e-08 * T2 -
                  1.71886184e-11 * T3;
    // species 84: nc7ket24
    species[84] = +9.58173466e-02 - 1.39337704e-04 * T + 8.08621146e-08 * T2 -
                  1.75491250e-11 * T3;
    // species 85: nc7ket35
    species[85] = +9.58173466e-02 - 1.39337704e-04 * T + 8.08621146e-08 * T2 -
                  1.75491250e-11 * T3;
  } else {
    // species 44: c4h8ooh1-3o2
    species[44] = +2.05474775e-02 - 1.43815270e-05 * T + 3.40084608e-09 * T2 -
                  2.65897753e-13 * T3;
    // species 84: nc7ket24
    species[84] = +3.20168096e-02 - 2.23016912e-05 * T + 5.25678477e-09 * T2 -
                  4.10081804e-13 * T3;
    // species 85: nc7ket35
    species[85] = +3.20168096e-02 - 2.23016912e-05 * T + 5.25678477e-09 * T2 -
                  4.10081804e-13 * T3;
  }

  // species with midpoint at T=1388 kelvin
  if (T < 1388) {
    // species 26: c3h6
    species[26] = +2.89107662e-02 - 3.09773616e-05 * T + 1.16644263e-08 * T2 -
                  1.35156141e-12 * T3;
    // species 65: c7h15o2-1
    species[65] = +8.84061706e-02 - 1.15972252e-04 * T + 6.10724067e-08 * T2 -
                  1.22584134e-11 * T3;
    // species 77: c7h14ooh1-3o2
    species[77] = +1.06229796e-01 - 1.60554044e-04 * T + 9.70947279e-08 * T2 -
                  2.18340189e-11 * T3;
    // species 83: nc7ket13
    species[83] = +9.47373762e-02 - 1.38094730e-04 * T + 8.03461200e-08 * T2 -
                  1.74556872e-11 * T3;
  } else {
    // species 26: c3h6
    species[26] = +1.37023634e-02 - 9.32499466e-06 * T + 2.16376321e-09 * T2 -
                  1.66948050e-13 * T3;
    // species 65: c7h15o2-1
    species[65] = +3.50803587e-02 - 2.42357602e-05 * T + 5.68082418e-09 * T2 -
                  4.41416500e-13 * T3;
    // species 77: c7h14ooh1-3o2
    species[77] = +3.40055996e-02 - 2.36831712e-05 * T + 5.58181041e-09 * T2 -
                  4.35404048e-13 * T3;
    // species 83: nc7ket13
    species[83] = +3.17177458e-02 - 2.20525292e-05 * T + 5.19160824e-09 * T2 -
                  4.04646796e-13 * T3;
  }

  // species with midpoint at T=1389 kelvin
  if (T < 1389) {
    // species 37: c2h5o
    species[37] = +2.71774434e-02 - 3.31818020e-05 * T + 1.54561260e-08 * T2 -
                  2.59398766e-12 * T3;
    // species 55: nc3h7coch2
    species[55] = +5.68162532e-02 - 7.98225562e-05 * T + 4.58014542e-08 * T2 -
                  9.96884188e-12 * T3;
    // species 70: c7h14ooh2-3
    species[70] = +9.25107196e-02 - 1.25071967e-04 * T + 6.53641170e-08 * T2 -
                  1.25088159e-11 * T3;
    // species 71: c7h14ooh2-4
    species[71] = +9.25107196e-02 - 1.25071967e-04 * T + 6.53641170e-08 * T2 -
                  1.25088159e-11 * T3;
    // species 72: c7h14ooh3-2
    species[72] = +9.25107196e-02 - 1.25071967e-04 * T + 6.53641170e-08 * T2 -
                  1.25088159e-11 * T3;
    // species 73: c7h14ooh3-4
    species[73] = +9.25107196e-02 - 1.25071967e-04 * T + 6.53641170e-08 * T2 -
                  1.25088159e-11 * T3;
    // species 74: c7h14ooh3-5
    species[74] = +9.25107196e-02 - 1.25071967e-04 * T + 6.53641170e-08 * T2 -
                  1.25088159e-11 * T3;
    // species 75: c7h14ooh4-2
    species[75] = +9.25107196e-02 - 1.25071967e-04 * T + 6.53641170e-08 * T2 -
                  1.25088159e-11 * T3;
    // species 76: c7h14ooh4-3
    species[76] = +9.25107196e-02 - 1.25071967e-04 * T + 6.53641170e-08 * T2 -
                  1.25088159e-11 * T3;
  } else {
    // species 37: c2h5o
    species[37] = +1.13072907e-02 - 7.68842842e-06 * T + 1.78324232e-09 * T2 -
                  1.37557815e-13 * T3;
    // species 55: nc3h7coch2
    species[55] = +2.14093466e-02 - 1.47211923e-05 * T + 3.43970448e-09 * T2 -
                  2.66685089e-13 * T3;
    // species 70: c7h14ooh2-3
    species[70] = +3.27527893e-02 - 2.25983540e-05 * T + 5.29333947e-09 * T2 -
                  4.11147780e-13 * T3;
    // species 71: c7h14ooh2-4
    species[71] = +3.27527893e-02 - 2.25983540e-05 * T + 5.29333947e-09 * T2 -
                  4.11147780e-13 * T3;
    // species 72: c7h14ooh3-2
    species[72] = +3.27527893e-02 - 2.25983540e-05 * T + 5.29333947e-09 * T2 -
                  4.11147780e-13 * T3;
    // species 73: c7h14ooh3-4
    species[73] = +3.27527893e-02 - 2.25983540e-05 * T + 5.29333947e-09 * T2 -
                  4.11147780e-13 * T3;
    // species 74: c7h14ooh3-5
    species[74] = +3.27527893e-02 - 2.25983540e-05 * T + 5.29333947e-09 * T2 -
                  4.11147780e-13 * T3;
    // species 75: c7h14ooh4-2
    species[75] = +3.27527893e-02 - 2.25983540e-05 * T + 5.29333947e-09 * T2 -
                  4.11147780e-13 * T3;
    // species 76: c7h14ooh4-3
    species[76] = +3.27527893e-02 - 2.25983540e-05 * T + 5.29333947e-09 * T2 -
                  4.11147780e-13 * T3;
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 11: ho2
    species[11] = +3.66767950e-03 - 1.86477024e-06 * T - 9.77558757e-10 * T2 +
                  6.04559648e-13 * T3;
    // species 39: ch3o2h
    species[39] = +1.90129767e-02 - 2.26772574e-05 * T + 1.02091996e-08 * T2 -
                  1.64732089e-12 * T3;
    // species 59: c7h15-1
    species[59] = +8.08826467e-02 - 1.00106551e-04 * T + 4.69647924e-08 * T2 -
                  7.86464908e-12 * T3;
    // species 63: c7h14-2
    species[63] = +7.90439806e-02 - 9.92203332e-05 * T + 4.75707027e-08 * T2 -
                  8.21385732e-12 * T3;
    // species 66: c7h15o2-2
    species[66] = +9.42381007e-02 - 1.33391021e-04 * T + 7.64386749e-08 * T2 -
                  1.65284442e-11 * T3;
    // species 67: c7h15o2-3
    species[67] = +9.42381007e-02 - 1.33391021e-04 * T + 7.64386749e-08 * T2 -
                  1.65284442e-11 * T3;
    // species 68: c7h15o2-4
    species[68] = +9.42381007e-02 - 1.33391021e-04 * T + 7.64386749e-08 * T2 -
                  1.65284442e-11 * T3;
    // species 78: c7h14ooh2-4o2
    species[78] = +1.10720834e-01 - 1.74235615e-04 * T + 1.09098825e-07 * T2 -
                  2.51340276e-11 * T3;
    // species 79: c7h14ooh3-5o2
    species[79] = +1.10720834e-01 - 1.74235615e-04 * T + 1.09098825e-07 * T2 -
                  2.51340276e-11 * T3;
    // species 80: c7h14ooh4-2o2
    species[80] = +1.10720834e-01 - 1.74235615e-04 * T + 1.09098825e-07 * T2 -
                  2.51340276e-11 * T3;
  } else {
    // species 11: ho2
    species[11] = +2.38452835e-03 - 1.61269598e-06 * T + 3.72575169e-10 * T2 -
                  2.86560043e-14 * T3;
    // species 39: ch3o2h
    species[39] = +8.06817909e-03 - 5.54189842e-06 * T + 1.29399673e-09 * T2 -
                  1.00276858e-13 * T3;
    // species 59: c7h15-1
    species[59] = +3.26280243e-02 - 2.22276488e-05 * T + 5.16201444e-09 * T2 -
                  3.98546800e-13 * T3;
    // species 63: c7h14-2
    species[63] = +3.14852991e-02 - 2.14324114e-05 * T + 4.97482986e-09 * T2 -
                  3.83964714e-13 * T3;
    // species 66: c7h15o2-2
    species[66] = +3.43831688e-02 - 2.37426494e-05 * T + 5.56350723e-09 * T2 -
                  4.32209596e-13 * T3;
    // species 67: c7h15o2-3
    species[67] = +3.43831688e-02 - 2.37426494e-05 * T + 5.56350723e-09 * T2 -
                  4.32209596e-13 * T3;
    // species 68: c7h15o2-4
    species[68] = +3.43831688e-02 - 2.37426494e-05 * T + 5.56350723e-09 * T2 -
                  4.32209596e-13 * T3;
    // species 78: c7h14ooh2-4o2
    species[78] = +3.32767285e-02 - 2.31666570e-05 * T + 5.45875914e-09 * T2 -
                  4.25737676e-13 * T3;
    // species 79: c7h14ooh3-5o2
    species[79] = +3.32767285e-02 - 2.31666570e-05 * T + 5.45875914e-09 * T2 -
                  4.25737676e-13 * T3;
    // species 80: c7h14ooh4-2o2
    species[80] = +3.32767285e-02 - 2.31666570e-05 * T + 5.45875914e-09 * T2 -
                  4.25737676e-13 * T3;
  }

  // species with midpoint at T=1391 kelvin
  if (T < 1391) {
    // species 32: ch3coch2
    species[32] = +3.01407085e-02 - 3.87011104e-05 * T + 1.91459710e-08 * T2 -
                  3.46441272e-12 * T3;
    // species 58: nc7h16
    species[58] = +8.54355820e-02 - 1.05069357e-04 * T + 4.88837163e-08 * T2 -
                  8.09579700e-12 * T3;
  } else {
    // species 32: ch3coch2
    species[32] = +1.16494161e-02 - 8.02011074e-06 * T + 1.87561574e-09 * T2 -
                  1.45513745e-13 * T3;
    // species 58: nc7h16
    species[58] = +3.47675750e-02 - 2.36814258e-05 * T + 5.49895434e-09 * T2 -
                  4.24521064e-13 * T3;
  }

  // species with midpoint at T=1392 kelvin
  if (T < 1392) {
    // species 29: c4h7
    species[29] = +4.26511243e-02 - 5.81958746e-05 * T + 3.16211742e-08 * T2 -
                  6.40239416e-12 * T3;
    // species 30: c4h8-1
    species[30] = +4.52580978e-02 - 5.87317118e-05 * T + 3.00661308e-08 * T2 -
                  5.72766720e-12 * T3;
    // species 35: c5h9
    species[35] = +5.57608487e-02 - 7.40287856e-05 * T + 3.80651703e-08 * T2 -
                  7.14155340e-12 * T3;
    // species 36: c5h10-1
    species[36] = +5.74218294e-02 - 7.48973780e-05 * T + 3.82094967e-08 * T2 -
                  7.18439156e-12 * T3;
    // species 64: c7h14-3
    species[64] = +8.26324377e-02 - 1.09102894e-04 * T + 5.63117466e-08 * T2 -
                  1.07028488e-11 * T3;
  } else {
    // species 29: c4h7
    species[29] = +1.60483196e-02 - 1.09300458e-05 * T + 2.53782316e-09 * T2 -
                  1.95909096e-13 * T3;
    // species 30: c4h8-1
    species[30] = +1.80617877e-02 - 1.23218606e-05 * T + 2.86395888e-09 * T2 -
                  2.21235856e-13 * T3;
    // species 35: c5h9
    species[35] = +2.07128899e-02 - 1.41392123e-05 * T + 3.28821399e-09 * T2 -
                  2.54128883e-13 * T3;
    // species 36: c5h10-1
    species[36] = +2.24072471e-02 - 1.52669605e-05 * T + 3.54566898e-09 * T2 -
                  2.73754056e-13 * T3;
    // species 64: c7h14-3
    species[64] = +3.15388629e-02 - 2.15142430e-05 * T + 5.00070780e-09 * T2 -
                  3.86324157e-13 * T3;
  }

  // species with midpoint at T=1393 kelvin
  if (T < 1393) {
    // species 41: c2h3cho
    species[41] = +3.54321417e-02 - 5.89872648e-05 * T + 3.84300372e-08 * T2 -
                  9.04576432e-12 * T3;
  } else {
    // species 41: c2h3cho
    species[41] = +9.48963321e-03 - 6.58621058e-06 * T + 1.54883761e-09 * T2 -
                  1.20634916e-13 * T3;
  }

  // species with midpoint at T=1395 kelvin
  if (T < 1395) {
    // species 31: pc4h9
    species[31] = +4.78972364e-02 - 6.28046318e-05 * T + 3.29359416e-08 * T2 -
                  6.48042656e-12 * T3;
    // species 43: c4h7o
    species[43] = +5.58562682e-02 - 8.71191534e-05 * T + 5.11767837e-08 * T2 -
                  1.06254072e-11 * T3;
    // species 81: c7h14o1-3
    species[81] = +1.00155088e-01 - 1.45987171e-04 * T + 8.38032810e-08 * T2 -
                  1.76898278e-11 * T3;
  } else {
    // species 31: pc4h9
    species[31] = +1.94310717e-02 - 1.32315590e-05 * T + 3.07125408e-09 * T2 -
                  2.37011883e-13 * T3;
    // species 43: c4h7o
    species[43] = +1.43427017e-02 - 9.63251034e-06 * T + 2.21872452e-09 * T2 -
                  1.70456326e-13 * T3;
    // species 81: c7h14o1-3
    species[81] = +3.32510472e-02 - 2.28915530e-05 * T + 5.35366605e-09 * T2 -
                  4.15364448e-13 * T3;
  }

  // species with midpoint at T=1397 kelvin
  if (T < 1397) {
    // species 47: c3h5-a
    species[47] = +3.34559100e-02 - 5.06802054e-05 * T + 3.08597262e-08 * T2 -
                  6.93033360e-12 * T3;
  } else {
    // species 47: c3h5-a
    species[47] = +1.12695483e-02 - 7.67585728e-06 * T + 1.78217736e-09 * T2 -
                  1.37567212e-13 * T3;
  }

  // species with midpoint at T=1398 kelvin
  if (T < 1398) {
    // species 27: c4h6
    species[27] = +4.78706062e-02 - 8.30893600e-05 * T + 5.74648656e-08 * T2 -
                  1.42863403e-11 * T3;
  } else {
    // species 27: c4h6
    species[27] = +1.37163965e-02 - 9.39431566e-06 * T + 2.18908151e-09 * T2 -
                  1.69394481e-13 * T3;
  }

  // species with midpoint at T=1399 kelvin
  if (T < 1399) {
    // species 82: c7h14o2-4
    species[82] = +1.01846577e-01 - 1.52009247e-04 * T + 8.89614060e-08 * T2 -
                  1.89941748e-11 * T3;
  } else {
    // species 82: c7h14o2-4
    species[82] = +3.25585391e-02 - 2.23249812e-05 * T + 5.20720974e-09 * T2 -
                  4.03252860e-13 * T3;
  }

  // species with midpoint at T=1400 kelvin
  if (T < 1400) {
    // species 25: c3h4-a
    species[25] = +1.63343700e-02 - 3.52990000e-06 * T - 1.39420950e-08 * T2 +
                  6.91652400e-12 * T3;
  } else {
    // species 25: c3h4-a
    species[25] = +5.30213800e-03 - 7.40223600e-07 * T - 9.07915800e-10 * T2 +
                  2.03583240e-13 * T3;
  }

  // species with midpoint at T=1402 kelvin
  if (T < 1402) {
    // species 40: c2h3co
    species[40] = +3.15273972e-02 - 6.00437870e-05 * T + 4.44501336e-08 * T2 -
                  1.15188612e-11 * T3;
  } else {
    // species 40: c2h3co
    species[40] = +7.91296900e-03 - 5.34396560e-06 * T + 1.23334629e-09 * T2 -
                  9.47915924e-14 * T3;
  }
}

// Returns the mean specific heat at CP (Eq. 33)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPBL(const amrex::Real T, const amrex::Real x[], amrex::Real& cpbl)
{
  amrex::Real result = 0;
  amrex::Real cpor[88]; //  temporary storage
  cp_R(cpor, T);

  // perform dot product
  for (int id = 0; id < 88; ++id) {
    result += x[id] * cpor[id];
  }

  cpbl = result * 8.31446261815324e+07;
}

// Returns the mean specific heat at CP (Eq. 34)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPBS(const amrex::Real T, const amrex::Real y[], amrex::Real& cpbs)
{
  amrex::Real result = 0.0;

  // compute Cp/R at the given temperature
  const amrex::Real T2 = T * T;
  const amrex::Real T3 = T * T * T;
  const amrex::Real T4 = T * T * T * T;

  // species with no change across T
  // species 0: h
  result += y[0] * (+2.50104422e+00) * 0.9920634920634921;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 1: h2
    result += y[1] *
              (+3.29812400e+00 + 8.24944200e-04 * T - 8.14301500e-07 * T2 -
               9.47543400e-11 * T3 + 4.13487200e-13 * T4) *
              0.4960317460317460;
    // species 2: o
    result += y[2] *
              (+2.94642900e+00 - 1.63816600e-03 * T + 2.42103200e-06 * T2 -
               1.60284300e-09 * T3 + 3.89069600e-13 * T4) *
              0.0625039064941559;
    // species 3: o2
    result += y[3] *
              (+3.21293600e+00 + 1.12748600e-03 * T - 5.75615000e-07 * T2 +
               1.31387700e-09 * T3 - 8.76855400e-13 * T4) *
              0.0312519532470779;
    // species 5: h2o
    result += y[5] *
              (+3.38684200e+00 + 3.47498200e-03 * T - 6.35469600e-06 * T2 +
               6.96858100e-09 * T3 - 2.50658800e-12 * T4) *
              0.0555092978073827;
    // species 6: co
    result += y[6] *
              (+3.26245200e+00 + 1.51194100e-03 * T - 3.88175500e-06 * T2 +
               5.58194400e-09 * T3 - 2.47495100e-12 * T4) *
              0.0357015351660121;
    // species 7: hco
    result += y[7] *
              (+2.89833000e+00 + 6.19914700e-03 * T - 9.62308400e-06 * T2 +
               1.08982500e-08 * T3 - 4.57488500e-12 * T4) *
              0.0344613688055690;
    // species 8: co2
    result += y[8] *
              (+2.27572500e+00 + 9.92207200e-03 * T - 1.04091100e-05 * T2 +
               6.86668700e-09 * T3 - 2.11728000e-12 * T4) *
              0.0227226249176305;
    // species 9: ch3
    result += y[9] *
              (+2.43044300e+00 + 1.11241000e-02 * T - 1.68022000e-05 * T2 +
               1.62182900e-08 * T3 - 5.86495300e-12 * T4) *
              0.0665114732291320;
    // species 10: ch4
    result += y[10] *
              (+7.78741500e-01 + 1.74766800e-02 * T - 2.78340900e-05 * T2 +
               3.04970800e-08 * T3 - 1.22393100e-11 * T4) *
              0.0623324814560868;
    // species 12: h2o2
    result += y[12] *
              (+3.38875400e+00 + 6.56922600e-03 * T - 1.48501300e-07 * T2 -
               4.62580600e-09 * T3 + 2.47151500e-12 * T4) *
              0.0293996589639560;
    // species 13: ch2o
    result += y[13] *
              (+1.65273100e+00 + 1.26314400e-02 * T - 1.88816800e-05 * T2 +
               2.05003100e-08 * T3 - 8.41323700e-12 * T4) *
              0.0333044694598015;
    // species 14: ch3o
    result += y[14] *
              (+2.10620400e+00 + 7.21659500e-03 * T + 5.33847200e-06 * T2 -
               7.37763600e-09 * T3 + 2.07561100e-12 * T4) *
              0.0322227234645872;
    // species 16: c2h4
    result += y[16] *
              (-8.61488000e-01 + 2.79616300e-02 * T - 3.38867700e-05 * T2 +
               2.78515200e-08 * T3 - 9.73787900e-12 * T4) *
              0.0356455407428531;
    // species 17: c2h5
    result += y[17] *
              (+2.69070200e+00 + 8.71913300e-03 * T + 4.41983900e-06 * T2 +
               9.33870300e-10 * T3 - 3.92777300e-12 * T4) *
              0.0344091941366733;
    // species 18: c2h2
    result += y[18] *
              (+2.01356200e+00 + 1.51904500e-02 * T - 1.61631900e-05 * T2 +
               9.07899200e-09 * T3 - 1.91274600e-12 * T4) *
              0.0384054074813734;
    // species 19: c2h3
    result += y[19] *
              (+2.45927600e+00 + 7.37147600e-03 * T + 2.10987300e-06 * T2 -
               1.32164200e-09 * T3 - 1.18478400e-12 * T4) *
              0.0369740442209569;
    // species 20: ch2co
    result += y[20] *
              (+2.97497100e+00 + 1.21187100e-02 * T - 2.34504600e-06 * T2 -
               6.46668500e-09 * T3 + 3.90564900e-12 * T4) *
              0.0237885672145967;
    // species 21: hcco
    result += y[21] *
              (+5.04796500e+00 + 4.45347800e-03 * T + 2.26828300e-07 * T2 -
               1.48209500e-09 * T3 + 2.25074200e-13 * T4) *
              0.0243730044602598;
    // species 22: ch3co
    result += y[22] *
              (+3.12527800e+00 + 9.77822000e-03 * T + 4.52144800e-06 * T2 -
               9.00946200e-09 * T3 + 3.19371800e-12 * T4) *
              0.0232315019165989;
    // species 23: ch2cho
    result += y[23] *
              (+3.40906200e+00 + 1.07385700e-02 * T + 1.89149200e-06 * T2 -
               7.15858300e-09 * T3 + 2.86738500e-12 * T4) *
              0.0232315019165989;
    // species 24: ch3cho
    result += y[24] *
              (+2.50569500e+00 + 1.33699100e-02 * T + 4.67195300e-06 * T2 -
               1.12814000e-08 * T3 + 4.26356600e-12 * T4) *
              0.0226999296302181;
    // species 28: nc3h7
    result += y[28] *
              (+1.92253700e+00 + 2.47892700e-02 * T + 1.81024900e-06 * T2 -
               1.78326600e-08 * T3 + 8.58299600e-12 * T4) *
              0.0232077792476038;
    // species 48: c3h3
    result += y[48] *
              (+4.75420000e+00 + 1.10802800e-02 * T + 2.79332300e-07 * T2 -
               5.47921200e-09 * T3 + 1.94962900e-12 * T4) *
              0.0256036049875823;
    // species 49: c3h2
    result += y[49] *
              (+3.16671400e+00 + 2.48257200e-02 * T - 4.59163700e-05 * T2 +
               4.26801900e-08 * T3 - 1.48215200e-11 * T4) *
              0.0262818996557071;
    // species 50: ch2(s)
    result += y[50] *
              (+3.97126500e+00 - 1.69908900e-04 * T + 1.02536900e-06 * T2 +
               2.49255100e-09 * T3 - 1.98126600e-12 * T4) *
              0.0712910814857061;
    // species 87: n2
    result += y[87] *
              (+3.29867700e+00 + 1.40824000e-03 * T - 3.96322200e-06 * T2 +
               5.64151500e-09 * T3 - 2.44485500e-12 * T4) *
              0.0356964374955379;
  } else {
    // species 1: h2
    result += y[1] *
              (+2.99142300e+00 + 7.00064400e-04 * T - 5.63382900e-08 * T2 -
               9.23157800e-12 * T3 + 1.58275200e-15 * T4) *
              0.4960317460317460;
    // species 2: o
    result += y[2] *
              (+2.54206000e+00 - 2.75506200e-05 * T - 3.10280300e-09 * T2 +
               4.55106700e-12 * T3 - 4.36805200e-16 * T4) *
              0.0625039064941559;
    // species 3: o2
    result += y[3] *
              (+3.69757800e+00 + 6.13519700e-04 * T - 1.25884200e-07 * T2 +
               1.77528100e-11 * T3 - 1.13643500e-15 * T4) *
              0.0312519532470779;
    // species 5: h2o
    result += y[5] *
              (+2.67214600e+00 + 3.05629300e-03 * T - 8.73026000e-07 * T2 +
               1.20099600e-10 * T3 - 6.39161800e-15 * T4) *
              0.0555092978073827;
    // species 6: co
    result += y[6] *
              (+3.02507800e+00 + 1.44268900e-03 * T - 5.63082800e-07 * T2 +
               1.01858100e-10 * T3 - 6.91095200e-15 * T4) *
              0.0357015351660121;
    // species 7: hco
    result += y[7] *
              (+3.55727100e+00 + 3.34557300e-03 * T - 1.33500600e-06 * T2 +
               2.47057300e-10 * T3 - 1.71385100e-14 * T4) *
              0.0344613688055690;
    // species 8: co2
    result += y[8] *
              (+4.45362300e+00 + 3.14016900e-03 * T - 1.27841100e-06 * T2 +
               2.39399700e-10 * T3 - 1.66903300e-14 * T4) *
              0.0227226249176305;
    // species 9: ch3
    result += y[9] *
              (+2.84405200e+00 + 6.13797400e-03 * T - 2.23034500e-06 * T2 +
               3.78516100e-10 * T3 - 2.45215900e-14 * T4) *
              0.0665114732291320;
    // species 10: ch4
    result += y[10] *
              (+1.68347900e+00 + 1.02372400e-02 * T - 3.87512900e-06 * T2 +
               6.78558500e-10 * T3 - 4.50342300e-14 * T4) *
              0.0623324814560868;
    // species 12: h2o2
    result += y[12] *
              (+4.57316700e+00 + 4.33613600e-03 * T - 1.47468900e-06 * T2 +
               2.34890400e-10 * T3 - 1.43165400e-14 * T4) *
              0.0293996589639560;
    // species 13: ch2o
    result += y[13] *
              (+2.99560600e+00 + 6.68132100e-03 * T - 2.62895500e-06 * T2 +
               4.73715300e-10 * T3 - 3.21251700e-14 * T4) *
              0.0333044694598015;
    // species 14: ch3o
    result += y[14] *
              (+3.77080000e+00 + 7.87149700e-03 * T - 2.65638400e-06 * T2 +
               3.94443100e-10 * T3 - 2.11261600e-14 * T4) *
              0.0322227234645872;
    // species 16: c2h4
    result += y[16] *
              (+3.52841900e+00 + 1.14851800e-02 * T - 4.41838500e-06 * T2 +
               7.84460100e-10 * T3 - 5.26684800e-14 * T4) *
              0.0356455407428531;
    // species 17: c2h5
    result += y[17] *
              (+7.19048000e+00 + 6.48407700e-03 * T - 6.42806500e-07 * T2 -
               2.34787900e-10 * T3 + 3.88087700e-14 * T4) *
              0.0344091941366733;
    // species 18: c2h2
    result += y[18] *
              (+4.43677000e+00 + 5.37603900e-03 * T - 1.91281700e-06 * T2 +
               3.28637900e-10 * T3 - 2.15671000e-14 * T4) *
              0.0384054074813734;
    // species 19: c2h3
    result += y[19] *
              (+5.93346800e+00 + 4.01774600e-03 * T - 3.96674000e-07 * T2 -
               1.44126700e-10 * T3 + 2.37864400e-14 * T4) *
              0.0369740442209569;
    // species 20: ch2co
    result += y[20] *
              (+6.03881700e+00 + 5.80484000e-03 * T - 1.92095400e-06 * T2 +
               2.79448500e-10 * T3 - 1.45886800e-14 * T4) *
              0.0237885672145967;
    // species 21: hcco
    result += y[21] *
              (+6.75807300e+00 + 2.00040000e-03 * T - 2.02760700e-07 * T2 -
               1.04113200e-10 * T3 + 1.96516500e-14 * T4) *
              0.0243730044602598;
    // species 22: ch3co
    result += y[22] *
              (+5.61227900e+00 + 8.44988600e-03 * T - 2.85414700e-06 * T2 +
               4.23837600e-10 * T3 - 2.26840400e-14 * T4) *
              0.0232315019165989;
    // species 23: ch2cho
    result += y[23] *
              (+5.97567000e+00 + 8.13059100e-03 * T - 2.74362400e-06 * T2 +
               4.07030400e-10 * T3 - 2.17601700e-14 * T4) *
              0.0232315019165989;
    // species 24: ch3cho
    result += y[24] *
              (+5.86865000e+00 + 1.07942400e-02 * T - 3.64553000e-06 * T2 +
               5.41291200e-10 * T3 - 2.89684400e-14 * T4) *
              0.0226999296302181;
    // species 28: nc3h7
    result += y[28] *
              (+7.97829100e+00 + 1.57611300e-02 * T - 5.17324300e-06 * T2 +
               7.44389200e-10 * T3 - 3.82497800e-14 * T4) *
              0.0232077792476038;
    // species 48: c3h3
    result += y[48] *
              (+8.83104700e+00 + 4.35719500e-03 * T - 4.10906700e-07 * T2 -
               2.36872300e-10 * T3 + 4.37652000e-14 * T4) *
              0.0256036049875823;
    // species 49: c3h2
    result += y[49] *
              (+7.67098100e+00 + 2.74874900e-03 * T - 4.37094300e-07 * T2 -
               6.45559900e-11 * T3 + 1.66388700e-14 * T4) *
              0.0262818996557071;
    // species 50: ch2(s)
    result += y[50] *
              (+3.55288900e+00 + 2.06678800e-03 * T - 1.91411600e-07 * T2 -
               1.10467300e-10 * T3 + 2.02135000e-14 * T4) *
              0.0712910814857061;
    // species 87: n2
    result += y[87] *
              (+2.92664000e+00 + 1.48797700e-03 * T - 5.68476100e-07 * T2 +
               1.00970400e-10 * T3 - 6.75335100e-15 * T4) *
              0.0356964374955379;
  }

  // species with midpoint at T=1357 kelvin
  if (T < 1357) {
    // species 4: oh
    result += y[4] *
              (+3.43586219e+00 + 2.02235804e-04 * T - 1.13546412e-07 * T2 +
               2.42445149e-10 * T3 - 7.43651031e-14 * T4) *
              0.0587993179279120;
  } else {
    // species 4: oh
    result += y[4] *
              (+2.62599754e+00 + 1.31992406e-03 * T - 3.59724670e-07 * T2 +
               4.25630800e-11 * T3 - 1.82048016e-15 * T4) *
              0.0587993179279120;
  }

  // species with midpoint at T=1373 kelvin
  if (T < 1373) {
    // species 34: c2h5co
    result += y[34] *
              (+2.93313946e+00 + 2.47427911e-02 * T - 1.21222003e-05 * T2 +
               2.34701048e-09 * T3 - 5.26843338e-14 * T4) *
              0.0175217269414073;
  } else {
    // species 34: c2h5co
    result += y[34] *
              (+9.87881997e+00 + 1.17515676e-02 * T - 4.00614923e-06 * T2 +
               6.20850617e-10 * T3 - 3.59835225e-14 * T4) *
              0.0175217269414073;
  }

  // species with midpoint at T=1377 kelvin
  if (T < 1377) {
    // species 45: c4h8ooh1-3
    result += y[45] *
              (+1.94106276e+00 + 5.18789351e-02 * T - 3.10411683e-05 * T2 +
               8.63568881e-09 * T3 - 8.42841994e-13 * T4) *
              0.0112215813452432;
  } else {
    // species 45: c4h8ooh1-3
    result += y[45] *
              (+1.76442170e+01 + 1.91706536e-02 * T - 6.57168641e-06 * T2 +
               1.02246571e-09 * T3 - 5.94304735e-14 * T4) *
              0.0112215813452432;
  }

  // species with midpoint at T=1378 kelvin
  if (T < 1378) {
    // species 33: c2h5cho
    result += y[33] *
              (+2.16308444e+00 + 2.95501264e-02 * T - 1.52446252e-05 * T2 +
               3.49503947e-09 * T3 - 2.38896627e-13 * T4) *
              0.0172176308539945;
    // species 52: nc3h7cho
    result += y[52] *
              (+1.87415959e+00 + 4.19240315e-02 * T - 2.35148779e-05 * T2 +
               6.26913673e-09 * T3 - 6.09443908e-13 * T4) *
              0.0138682790852483;
  } else {
    // species 33: c2h5cho
    result += y[33] *
              (+1.02427695e+01 + 1.39641989e-02 * T - 4.76248001e-06 * T2 +
               7.38105706e-10 * T3 - 4.27759503e-14 * T4) *
              0.0172176308539945;
    // species 52: nc3h7cho
    result += y[52] *
              (+1.35988068e+01 + 1.81652474e-02 * T - 6.17844458e-06 * T2 +
               9.55980208e-10 * T3 - 5.53442958e-14 * T4) *
              0.0138682790852483;
  }

  // species with midpoint at T=1380 kelvin
  if (T < 1380) {
    // species 42: c3h5o
    result += y[42] *
              (+1.19822582e+00 + 3.05579837e-02 * T - 1.80630276e-05 * T2 +
               4.86150033e-09 * T3 - 4.19854562e-13 * T4) *
              0.0175217269414073;
    // species 53: nc3h7co
    result += y[53] *
              (+2.67256826e+00 + 3.71198825e-02 * T - 2.06862859e-05 * T2 +
               5.48873888e-09 * T3 - 5.35864183e-13 * T4) *
              0.0140648954275025;
  } else {
    // species 42: c3h5o
    result += y[42] *
              (+1.02551752e+01 + 1.14983720e-02 * T - 3.84645659e-06 * T2 +
               5.88910346e-10 * T3 - 3.38557923e-14 * T4) *
              0.0175217269414073;
    // species 53: nc3h7co
    result += y[53] *
              (+1.30026331e+01 + 1.63104877e-02 * T - 5.57642899e-06 * T2 +
               8.65670629e-10 * T3 - 5.02255667e-14 * T4) *
              0.0140648954275025;
  }

  // species with midpoint at T=1381 kelvin
  if (T < 1381) {
    // species 56: nc4h9cho
    result += y[56] *
              (+1.59663472e+00 + 5.43541416e-02 * T - 3.21020651e-05 * T2 +
               9.35773559e-09 * T3 - 1.06688932e-12 * T4) *
              0.0116098172614763;
  } else {
    // species 56: nc4h9cho
    result += y[56] *
              (+1.67965163e+01 + 2.25684519e-02 * T - 7.67631588e-06 * T2 +
               1.18769369e-09 * T3 - 6.87545554e-14 * T4) *
              0.0116098172614763;
  }

  // species with midpoint at T=1382 kelvin
  if (T < 1382) {
    // species 57: nc4h9co
    result += y[57] *
              (+2.43530238e+00 + 4.93682376e-02 * T - 2.89883082e-05 * T2 +
               8.42863812e-09 * T3 - 9.68287172e-13 * T4) *
              0.0117472922491366;
    // species 60: c7h15-2
    result += y[60] *
              (-3.79155767e-02 + 7.56726570e-02 * T - 4.07473634e-05 * T2 +
               9.32678943e-09 * T3 - 4.92360745e-13 * T4) *
              0.0100809500287307;
    // species 61: c7h15-3
    result += y[61] *
              (-3.79155767e-02 + 7.56726570e-02 * T - 4.07473634e-05 * T2 +
               9.32678943e-09 * T3 - 4.92360745e-13 * T4) *
              0.0100809500287307;
    // species 62: c7h15-4
    result += y[62] *
              (-3.79155767e-02 + 7.56726570e-02 * T - 4.07473634e-05 * T2 +
               9.32678943e-09 * T3 - 4.92360745e-13 * T4) *
              0.0100809500287307;
  } else {
    // species 57: nc4h9co
    result += y[57] *
              (+1.61782939e+01 + 2.07991920e-02 * T - 7.11787892e-06 * T2 +
               1.10559975e-09 * T3 - 6.41697187e-14 * T4) *
              0.0117472922491366;
    // species 60: c7h15-2
    result += y[60] *
              (+2.16368842e+01 + 3.23324804e-02 * T - 1.09273807e-05 * T2 +
               1.68357060e-09 * T3 - 9.71774091e-14 * T4) *
              0.0100809500287307;
    // species 61: c7h15-3
    result += y[61] *
              (+2.16368842e+01 + 3.23324804e-02 * T - 1.09273807e-05 * T2 +
               1.68357060e-09 * T3 - 9.71774091e-14 * T4) *
              0.0100809500287307;
    // species 62: c7h15-4
    result += y[62] *
              (+2.16368842e+01 + 3.23324804e-02 * T - 1.09273807e-05 * T2 +
               1.68357060e-09 * T3 - 9.71774091e-14 * T4) *
              0.0100809500287307;
  }

  // species with midpoint at T=1383 kelvin
  if (T < 1383) {
    // species 54: c2h5coch2
    result += y[54] *
              (+1.54013856e+00 + 4.39486258e-02 * T - 2.97002421e-05 * T2 +
               1.05495313e-08 * T3 - 1.58598769e-12 * T4) *
              0.0140648954275025;
    // species 69: c7h14ooh1-3
    result += y[69] *
              (+1.11146206e+00 + 8.91595392e-02 * T - 5.67352382e-05 * T2 +
               1.78890094e-08 * T3 - 2.22260206e-12 * T4) *
              0.0076222417012843;
  } else {
    // species 54: c2h5coch2
    result += y[54] *
              (+1.42098738e+01 + 1.57866459e-02 * T - 5.50529183e-06 * T2 +
               8.65870540e-10 * T3 - 5.06913329e-14 * T4) *
              0.0140648954275025;
    // species 69: c7h14ooh1-3
    result += y[69] *
              (+2.72290222e+01 + 3.24921901e-02 * T - 1.11259758e-05 * T2 +
               1.72928878e-09 * T3 - 1.00428326e-13 * T4) *
              0.0076222417012843;
  }

  // species with midpoint at T=1384 kelvin
  if (T < 1384) {
    // species 15: c2h6
    result += y[15] *
              (-2.52854344e-02 + 2.40764754e-02 * T - 1.11893472e-05 * T2 +
               2.08340901e-09 * T3 - 5.29868616e-14 * T4) *
              0.0332557366145660;
  } else {
    // species 15: c2h6
    result += y[15] *
              (+6.10683385e+00 + 1.29236361e-02 * T - 4.42527196e-06 * T2 +
               6.87391726e-10 * T3 - 3.98901732e-14 * T4) *
              0.0332557366145660;
  }

  // species with midpoint at T=1385 kelvin
  if (T < 1385) {
    // species 38: ch3o2
    result += y[38] *
              (+4.26146906e+00 + 1.00873599e-02 * T - 3.21506184e-06 * T2 +
               2.09409267e-10 * T3 + 4.18339103e-14 * T4) *
              0.0212616673399528;
    // species 46: pc4h9o2
    result += y[46] *
              (+1.94363650e+00 + 5.15513163e-02 * T - 3.28284400e-05 * T2 +
               1.13064860e-08 * T3 - 1.70118606e-12 * T4) *
              0.0112215813452432;
  } else {
    // species 38: ch3o2
    result += y[38] *
              (+5.95787891e+00 + 7.90728626e-03 * T - 2.68246234e-06 * T2 +
               4.13891337e-10 * T3 - 2.39007330e-14 * T4) *
              0.0212616673399528;
    // species 46: pc4h9o2
    result += y[46] *
              (+1.57845448e+01 + 2.15210910e-02 * T - 7.44909017e-06 * T2 +
               1.16558071e-09 * T3 - 6.79885609e-14 * T4) *
              0.0112215813452432;
  }

  // species with midpoint at T=1386 kelvin
  if (T < 1386) {
    // species 51: nc4ket13
    result += y[51] *
              (+2.74883461e+00 + 5.86936745e-02 * T - 4.49605895e-05 * T2 +
               1.83200130e-08 * T3 - 3.11765369e-12 * T4) *
              0.0096056865664473;
    // species 86: nc7ket42
    result += y[86] *
              (+2.32269738e+00 + 9.45160149e-02 * T - 6.99057179e-05 * T2 +
               2.79772916e-08 * T3 - 4.74244431e-12 * T4) *
              0.0068406003310851;
  } else {
    // species 51: nc4ket13
    result += y[51] *
              (+1.96430808e+01 + 1.80940566e-02 * T - 6.33063232e-06 * T2 +
               9.97860399e-10 * T3 - 5.85076458e-14 * T4) *
              0.0096056865664473;
    // species 86: nc7ket42
    result += y[86] *
              (+2.86572867e+01 + 3.21567908e-02 * T - 1.11961570e-05 * T2 +
               1.75895000e-09 * T3 - 1.02891960e-13 * T4) *
              0.0068406003310851;
  }

  // species with midpoint at T=1387 kelvin
  if (T < 1387) {
    // species 44: c4h8ooh1-3o2
    result += y[44] *
              (+2.22400728e+00 + 7.04994620e-02 * T - 5.66978827e-05 * T2 +
               2.42627751e-08 * T3 - 4.29715459e-12 * T4) *
              0.0082568201334302;
    // species 84: nc7ket24
    result += y[84] *
              (+1.52936692e+00 + 9.58173466e-02 * T - 6.96688520e-05 * T2 +
               2.69540382e-08 * T3 - 4.38728126e-12 * T4) *
              0.0068406003310851;
    // species 85: nc7ket35
    result += y[85] *
              (+1.52936692e+00 + 9.58173466e-02 * T - 6.96688520e-05 * T2 +
               2.69540382e-08 * T3 - 4.38728126e-12 * T4) *
              0.0068406003310851;
  } else {
    // species 44: c4h8ooh1-3o2
    result += y[44] *
              (+2.23244015e+01 + 2.05474775e-02 * T - 7.19076348e-06 * T2 +
               1.13361536e-09 * T3 - 6.64744383e-14 * T4) *
              0.0082568201334302;
    // species 84: nc7ket24
    result += y[84] *
              (+2.88330388e+01 + 3.20168096e-02 * T - 1.11508456e-05 * T2 +
               1.75226159e-09 * T3 - 1.02520451e-13 * T4) *
              0.0068406003310851;
    // species 85: nc7ket35
    result += y[85] *
              (+2.88330388e+01 + 3.20168096e-02 * T - 1.11508456e-05 * T2 +
               1.75226159e-09 * T3 - 1.02520451e-13 * T4) *
              0.0068406003310851;
  }

  // species with midpoint at T=1388 kelvin
  if (T < 1388) {
    // species 26: c3h6
    result += y[26] *
              (+3.94615444e-01 + 2.89107662e-02 * T - 1.54886808e-05 * T2 +
               3.88814209e-09 * T3 - 3.37890352e-13 * T4) *
              0.0237636938285687;
    // species 65: c7h15o2-1
    result += y[65] *
              (+1.20888552e+00 + 8.84061706e-02 * T - 5.79861260e-05 * T2 +
               2.03574689e-08 * T3 - 3.06460336e-12 * T4) *
              0.0076222417012843;
    // species 77: c7h14ooh1-3o2
    result += y[77] *
              (+1.89718004e+00 + 1.06229796e-01 * T - 8.02770218e-05 * T2 +
               3.23649093e-08 * T3 - 5.45850472e-12 * T4) *
              0.0061277138112542;
    // species 83: nc7ket13
    result += y[83] *
              (+2.21629328e+00 + 9.47373762e-02 * T - 6.90473651e-05 * T2 +
               2.67820400e-08 * T3 - 4.36392181e-12 * T4) *
              0.0068406003310851;
  } else {
    // species 26: c3h6
    result += y[26] *
              (+8.01595958e+00 + 1.37023634e-02 * T - 4.66249733e-06 * T2 +
               7.21254402e-10 * T3 - 4.17370126e-14 * T4) *
              0.0237636938285687;
    // species 65: c7h15o2-1
    result += y[65] *
              (+2.52656556e+01 + 3.50803587e-02 * T - 1.21178801e-05 * T2 +
               1.89360806e-09 * T3 - 1.10354125e-13 * T4) *
              0.0076222417012843;
    // species 77: c7h14ooh1-3o2
    result += y[77] *
              (+3.20144349e+01 + 3.40055996e-02 * T - 1.18415856e-05 * T2 +
               1.86060347e-09 * T3 - 1.08851012e-13 * T4) *
              0.0061277138112542;
    // species 83: nc7ket13
    result += y[83] *
              (+2.90744507e+01 + 3.17177458e-02 * T - 1.10262646e-05 * T2 +
               1.73053608e-09 * T3 - 1.01161699e-13 * T4) *
              0.0068406003310851;
  }

  // species with midpoint at T=1389 kelvin
  if (T < 1389) {
    // species 37: c2h5o
    result += y[37] *
              (+4.94420708e-01 + 2.71774434e-02 * T - 1.65909010e-05 * T2 +
               5.15204200e-09 * T3 - 6.48496915e-13 * T4) *
              0.0221921395441735;
    // species 55: nc3h7coch2
    result += y[55] *
              (+9.58299271e-01 + 5.68162532e-02 * T - 3.99112781e-05 * T2 +
               1.52671514e-08 * T3 - 2.49221047e-12 * T4) *
              0.0117472922491366;
    // species 70: c7h14ooh2-3
    result += y[70] *
              (+8.49786005e-01 + 9.25107196e-02 * T - 6.25359834e-05 * T2 +
               2.17880390e-08 * T3 - 3.12720398e-12 * T4) *
              0.0076222417012843;
    // species 71: c7h14ooh2-4
    result += y[71] *
              (+8.49786005e-01 + 9.25107196e-02 * T - 6.25359834e-05 * T2 +
               2.17880390e-08 * T3 - 3.12720398e-12 * T4) *
              0.0076222417012843;
    // species 72: c7h14ooh3-2
    result += y[72] *
              (+8.49786005e-01 + 9.25107196e-02 * T - 6.25359834e-05 * T2 +
               2.17880390e-08 * T3 - 3.12720398e-12 * T4) *
              0.0076222417012843;
    // species 73: c7h14ooh3-4
    result += y[73] *
              (+8.49786005e-01 + 9.25107196e-02 * T - 6.25359834e-05 * T2 +
               2.17880390e-08 * T3 - 3.12720398e-12 * T4) *
              0.0076222417012843;
    // species 74: c7h14ooh3-5
    result += y[74] *
              (+8.49786005e-01 + 9.25107196e-02 * T - 6.25359834e-05 * T2 +
               2.17880390e-08 * T3 - 3.12720398e-12 * T4) *
              0.0076222417012843;
    // species 75: c7h14ooh4-2
    result += y[75] *
              (+8.49786005e-01 + 9.25107196e-02 * T - 6.25359834e-05 * T2 +
               2.17880390e-08 * T3 - 3.12720398e-12 * T4) *
              0.0076222417012843;
    // species 76: c7h14ooh4-3
    result += y[76] *
              (+8.49786005e-01 + 9.25107196e-02 * T - 6.25359834e-05 * T2 +
               2.17880390e-08 * T3 - 3.12720398e-12 * T4) *
              0.0076222417012843;
  } else {
    // species 37: c2h5o
    result += y[37] *
              (+7.87339772e+00 + 1.13072907e-02 * T - 3.84421421e-06 * T2 +
               5.94414105e-10 * T3 - 3.43894538e-14 * T4) *
              0.0221921395441735;
    // species 55: nc3h7coch2
    result += y[55] *
              (+1.61502419e+01 + 2.14093466e-02 * T - 7.36059614e-06 * T2 +
               1.14656816e-09 * T3 - 6.66712722e-14 * T4) *
              0.0117472922491366;
    // species 70: c7h14ooh2-3
    result += y[70] *
              (+2.74034778e+01 + 3.27527893e-02 * T - 1.12991770e-05 * T2 +
               1.76444649e-09 * T3 - 1.02786945e-13 * T4) *
              0.0076222417012843;
    // species 71: c7h14ooh2-4
    result += y[71] *
              (+2.74034778e+01 + 3.27527893e-02 * T - 1.12991770e-05 * T2 +
               1.76444649e-09 * T3 - 1.02786945e-13 * T4) *
              0.0076222417012843;
    // species 72: c7h14ooh3-2
    result += y[72] *
              (+2.74034778e+01 + 3.27527893e-02 * T - 1.12991770e-05 * T2 +
               1.76444649e-09 * T3 - 1.02786945e-13 * T4) *
              0.0076222417012843;
    // species 73: c7h14ooh3-4
    result += y[73] *
              (+2.74034778e+01 + 3.27527893e-02 * T - 1.12991770e-05 * T2 +
               1.76444649e-09 * T3 - 1.02786945e-13 * T4) *
              0.0076222417012843;
    // species 74: c7h14ooh3-5
    result += y[74] *
              (+2.74034778e+01 + 3.27527893e-02 * T - 1.12991770e-05 * T2 +
               1.76444649e-09 * T3 - 1.02786945e-13 * T4) *
              0.0076222417012843;
    // species 75: c7h14ooh4-2
    result += y[75] *
              (+2.74034778e+01 + 3.27527893e-02 * T - 1.12991770e-05 * T2 +
               1.76444649e-09 * T3 - 1.02786945e-13 * T4) *
              0.0076222417012843;
    // species 76: c7h14ooh4-3
    result += y[76] *
              (+2.74034778e+01 + 3.27527893e-02 * T - 1.12991770e-05 * T2 +
               1.76444649e-09 * T3 - 1.02786945e-13 * T4) *
              0.0076222417012843;
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 11: ho2
    result += y[11] *
              (+3.18310656e+00 + 3.66767950e-03 * T - 9.32385122e-07 * T2 -
               3.25852919e-10 * T3 + 1.51139912e-13 * T4) *
              0.0302975216627280;
    // species 39: ch3o2h
    result += y[39] *
              (+3.23442817e+00 + 1.90129767e-02 * T - 1.13386287e-05 * T2 +
               3.40306653e-09 * T3 - 4.11830222e-13 * T4) *
              0.0208155533814866;
    // species 59: c7h15-1
    result += y[59] *
              (-4.99570406e-01 + 8.08826467e-02 * T - 5.00532754e-05 * T2 +
               1.56549308e-08 * T3 - 1.96616227e-12 * T4) *
              0.0100809500287307;
    // species 63: c7h14-2
    result += y[63] *
              (-1.16533279e+00 + 7.90439806e-02 * T - 4.96101666e-05 * T2 +
               1.58569009e-08 * T3 - 2.05346433e-12 * T4) *
              0.0101844402122437;
    // species 66: c7h15o2-2
    result += y[66] *
              (+3.55252917e-01 + 9.42381007e-02 * T - 6.66955106e-05 * T2 +
               2.54795583e-08 * T3 - 4.13211105e-12 * T4) *
              0.0076222417012843;
    // species 67: c7h15o2-3
    result += y[67] *
              (+3.55252917e-01 + 9.42381007e-02 * T - 6.66955106e-05 * T2 +
               2.54795583e-08 * T3 - 4.13211105e-12 * T4) *
              0.0076222417012843;
    // species 68: c7h15o2-4
    result += y[68] *
              (+3.55252917e-01 + 9.42381007e-02 * T - 6.66955106e-05 * T2 +
               2.54795583e-08 * T3 - 4.13211105e-12 * T4) *
              0.0076222417012843;
    // species 78: c7h14ooh2-4o2
    result += y[78] *
              (+1.40912479e+00 + 1.10720834e-01 * T - 8.71178075e-05 * T2 +
               3.63662749e-08 * T3 - 6.28350689e-12 * T4) *
              0.0061277138112542;
    // species 79: c7h14ooh3-5o2
    result += y[79] *
              (+1.40912479e+00 + 1.10720834e-01 * T - 8.71178075e-05 * T2 +
               3.63662749e-08 * T3 - 6.28350689e-12 * T4) *
              0.0061277138112542;
    // species 80: c7h14ooh4-2o2
    result += y[80] *
              (+1.40912479e+00 + 1.10720834e-01 * T - 8.71178075e-05 * T2 +
               3.63662749e-08 * T3 - 6.28350689e-12 * T4) *
              0.0061277138112542;
  } else {
    // species 11: ho2
    result += y[11] *
              (+4.10547423e+00 + 2.38452835e-03 * T - 8.06347989e-07 * T2 +
               1.24191723e-10 * T3 - 7.16400108e-15 * T4) *
              0.0302975216627280;
    // species 39: ch3o2h
    result += y[39] *
              (+8.43117091e+00 + 8.06817909e-03 * T - 2.77094921e-06 * T2 +
               4.31332243e-10 * T3 - 2.50692146e-14 * T4) *
              0.0208155533814866;
    // species 59: c7h15-1
    result += y[59] *
              (+2.17940709e+01 + 3.26280243e-02 * T - 1.11138244e-05 * T2 +
               1.72067148e-09 * T3 - 9.96366999e-14 * T4) *
              0.0100809500287307;
    // species 63: c7h14-2
    result += y[63] *
              (+2.06192047e+01 + 3.14852991e-02 * T - 1.07162057e-05 * T2 +
               1.65827662e-09 * T3 - 9.59911785e-14 * T4) *
              0.0101844402122437;
    // species 66: c7h15o2-2
    result += y[66] *
              (+2.60535640e+01 + 3.43831688e-02 * T - 1.18713247e-05 * T2 +
               1.85450241e-09 * T3 - 1.08052399e-13 * T4) *
              0.0076222417012843;
    // species 67: c7h15o2-3
    result += y[67] *
              (+2.60535640e+01 + 3.43831688e-02 * T - 1.18713247e-05 * T2 +
               1.85450241e-09 * T3 - 1.08052399e-13 * T4) *
              0.0076222417012843;
    // species 68: c7h15o2-4
    result += y[68] *
              (+2.60535640e+01 + 3.43831688e-02 * T - 1.18713247e-05 * T2 +
               1.85450241e-09 * T3 - 1.08052399e-13 * T4) *
              0.0076222417012843;
    // species 78: c7h14ooh2-4o2
    result += y[78] *
              (+3.28358296e+01 + 3.32767285e-02 * T - 1.15833285e-05 * T2 +
               1.81958638e-09 * T3 - 1.06434419e-13 * T4) *
              0.0061277138112542;
    // species 79: c7h14ooh3-5o2
    result += y[79] *
              (+3.28358296e+01 + 3.32767285e-02 * T - 1.15833285e-05 * T2 +
               1.81958638e-09 * T3 - 1.06434419e-13 * T4) *
              0.0061277138112542;
    // species 80: c7h14ooh4-2o2
    result += y[80] *
              (+3.28358296e+01 + 3.32767285e-02 * T - 1.15833285e-05 * T2 +
               1.81958638e-09 * T3 - 1.06434419e-13 * T4) *
              0.0061277138112542;
  }

  // species with midpoint at T=1391 kelvin
  if (T < 1391) {
    // species 32: ch3coch2
    result += y[32] *
              (+1.80339187e+00 + 3.01407085e-02 * T - 1.93505552e-05 * T2 +
               6.38199034e-09 * T3 - 8.66103180e-13 * T4) *
              0.0175217269414073;
    // species 58: nc7h16
    result += y[58] *
              (-1.26836187e+00 + 8.54355820e-02 * T - 5.25346786e-05 * T2 +
               1.62945721e-08 * T3 - 2.02394925e-12 * T4) *
              0.0099795419390250;
  } else {
    // species 32: ch3coch2
    result += y[32] *
              (+1.02303975e+01 + 1.16494161e-02 * T - 4.01005537e-06 * T2 +
               6.25205246e-10 * T3 - 3.63784362e-14 * T4) *
              0.0175217269414073;
    // species 58: nc7h16
    result += y[58] *
              (+2.22148969e+01 + 3.47675750e-02 * T - 1.18407129e-05 * T2 +
               1.83298478e-09 * T3 - 1.06130266e-13 * T4) *
              0.0099795419390250;
  }

  // species with midpoint at T=1392 kelvin
  if (T < 1392) {
    // species 29: c4h7
    result += y[29] *
              (-3.50508352e-01 + 4.26511243e-02 * T - 2.90979373e-05 * T2 +
               1.05403914e-08 * T3 - 1.60059854e-12 * T4) *
              0.0181488203266788;
    // species 30: c4h8-1
    result += y[30] *
              (-8.31372089e-01 + 4.52580978e-02 * T - 2.93658559e-05 * T2 +
               1.00220436e-08 * T3 - 1.43191680e-12 * T4) *
              0.0178227703714265;
    // species 35: c5h9
    result += y[35] *
              (-1.38013950e+00 + 5.57608487e-02 * T - 3.70143928e-05 * T2 +
               1.26883901e-08 * T3 - 1.78538835e-12 * T4) *
              0.0144661275623128;
    // species 36: c5h10-1
    result += y[36] *
              (-1.06223481e+00 + 5.74218294e-02 * T - 3.74486890e-05 * T2 +
               1.27364989e-08 * T3 - 1.79609789e-12 * T4) *
              0.0142582162971412;
    // species 64: c7h14-3
    result += y[64] *
              (-2.03026994e+00 + 8.26324377e-02 * T - 5.45514471e-05 * T2 +
               1.87705822e-08 * T3 - 2.67571220e-12 * T4) *
              0.0101844402122437;
  } else {
    // species 29: c4h7
    result += y[29] *
              (+1.12103578e+01 + 1.60483196e-02 * T - 5.46502292e-06 * T2 +
               8.45941053e-10 * T3 - 4.89772739e-14 * T4) *
              0.0181488203266788;
    // species 30: c4h8-1
    result += y[30] *
              (+1.13508668e+01 + 1.80617877e-02 * T - 6.16093029e-06 * T2 +
               9.54652959e-10 * T3 - 5.53089641e-14 * T4) *
              0.0178227703714265;
    // species 35: c5h9
    result += y[35] *
              (+1.41860454e+01 + 2.07128899e-02 * T - 7.06960617e-06 * T2 +
               1.09607133e-09 * T3 - 6.35322208e-14 * T4) *
              0.0144661275623128;
    // species 36: c5h10-1
    result += y[36] *
              (+1.45851539e+01 + 2.24072471e-02 * T - 7.63348025e-06 * T2 +
               1.18188966e-09 * T3 - 6.84385139e-14 * T4) *
              0.0142582162971412;
    // species 64: c7h14-3
    result += y[64] *
              (+2.06822750e+01 + 3.15388629e-02 * T - 1.07571215e-05 * T2 +
               1.66690260e-09 * T3 - 9.65810393e-14 * T4) *
              0.0101844402122437;
  }

  // species with midpoint at T=1393 kelvin
  if (T < 1393) {
    // species 41: c2h3cho
    result += y[41] *
              (+2.92355162e-01 + 3.54321417e-02 * T - 2.94936324e-05 * T2 +
               1.28100124e-08 * T3 - 2.26144108e-12 * T4) *
              0.0178367579908676;
  } else {
    // species 41: c2h3cho
    result += y[41] *
              (+1.04184959e+01 + 9.48963321e-03 * T - 3.29310529e-06 * T2 +
               5.16279203e-10 * T3 - 3.01587291e-14 * T4) *
              0.0178367579908676;
  }

  // species with midpoint at T=1395 kelvin
  if (T < 1395) {
    // species 31: pc4h9
    result += y[31] *
              (-4.37779725e-01 + 4.78972364e-02 * T - 3.14023159e-05 * T2 +
               1.09786472e-08 * T3 - 1.62010664e-12 * T4) *
              0.0175082288675678;
    // species 43: c4h7o
    result += y[43] *
              (-1.60619192e+00 + 5.58562682e-02 * T - 4.35595767e-05 * T2 +
               1.70589279e-08 * T3 - 2.65635180e-12 * T4) *
              0.0140648954275025;
    // species 81: c7h14o1-3
    result += y[81] *
              (-5.50036450e+00 + 1.00155088e-01 * T - 7.29935857e-05 * T2 +
               2.79344270e-08 * T3 - 4.42245696e-12 * T4) *
              0.0087574876519424;
  } else {
    // species 31: pc4h9
    result += y[31] *
              (+1.21510082e+01 + 1.94310717e-02 * T - 6.61577950e-06 * T2 +
               1.02375136e-09 * T3 - 5.92529707e-14 * T4) *
              0.0175082288675678;
    // species 43: c4h7o
    result += y[43] *
              (+1.53137780e+01 + 1.43427017e-02 * T - 4.81625517e-06 * T2 +
               7.39574839e-10 * T3 - 4.26140814e-14 * T4) *
              0.0140648954275025;
    // species 81: c7h14o1-3
    result += y[81] *
              (+2.26918916e+01 + 3.32510472e-02 * T - 1.14457765e-05 * T2 +
               1.78455535e-09 * T3 - 1.03841112e-13 * T4) *
              0.0087574876519424;
  }

  // species with midpoint at T=1397 kelvin
  if (T < 1397) {
    // species 47: c3h5-a
    result += y[47] *
              (-5.29131958e-01 + 3.34559100e-02 * T - 2.53401027e-05 * T2 +
               1.02865754e-08 * T3 - 1.73258340e-12 * T4) *
              0.0243468945535997;
  } else {
    // species 47: c3h5-a
    result += y[47] *
              (+8.45883958e+00 + 1.12695483e-02 * T - 3.83792864e-06 * T2 +
               5.94059119e-10 * T3 - 3.43918030e-14 * T4) *
              0.0243468945535997;
  }

  // species with midpoint at T=1398 kelvin
  if (T < 1398) {
    // species 27: c4h6
    result += y[27] *
              (-1.43095121e+00 + 4.78706062e-02 * T - 4.15446800e-05 * T2 +
               1.91549552e-08 * T3 - 3.57158507e-12 * T4) *
              0.0184870221104784;
  } else {
    // species 27: c4h6
    result += y[27] *
              (+1.11633789e+01 + 1.37163965e-02 * T - 4.69715783e-06 * T2 +
               7.29693836e-10 * T3 - 4.23486203e-14 * T4) *
              0.0184870221104784;
  }

  // species with midpoint at T=1399 kelvin
  if (T < 1399) {
    // species 82: c7h14o2-4
    result += y[82] *
              (-5.39477206e+00 + 1.01846577e-01 * T - 7.60046236e-05 * T2 +
               2.96538020e-08 * T3 - 4.74854370e-12 * T4) *
              0.0087574876519424;
  } else {
    // species 82: c7h14o2-4
    result += y[82] *
              (+2.32692731e+01 + 3.25585391e-02 * T - 1.11624906e-05 * T2 +
               1.73573658e-09 * T3 - 1.00813215e-13 * T4) *
              0.0087574876519424;
  }

  // species with midpoint at T=1400 kelvin
  if (T < 1400) {
    // species 25: c3h4-a
    result += y[25] *
              (+2.53983100e+00 + 1.63343700e-02 * T - 1.76495000e-06 * T2 -
               4.64736500e-09 * T3 + 1.72913100e-12 * T4) *
              0.0249594409085237;
  } else {
    // species 25: c3h4-a
    result += y[25] *
              (+9.77625600e+00 + 5.30213800e-03 * T - 3.70111800e-07 * T2 -
               3.02638600e-10 * T3 + 5.08958100e-14 * T4) *
              0.0249594409085237;
  }

  // species with midpoint at T=1402 kelvin
  if (T < 1402) {
    // species 40: c2h3co
    result += y[40] *
              (+1.36242013e+00 + 3.15273972e-02 * T - 3.00218935e-05 * T2 +
               1.48167112e-08 * T3 - 2.87971530e-12 * T4) *
              0.0181633246149375;
  } else {
    // species 40: c2h3co
    result += y[40] *
              (+9.37467676e+00 + 7.91296900e-03 * T - 2.67198280e-06 * T2 +
               4.11115430e-10 * T3 - 2.36978981e-14 * T4) *
              0.0181633246149375;
  }

  cpbs = result * 8.31446261815324e+07;
}

// Returns the mean specific heat at CV (Eq. 35)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVBL(const amrex::Real T, const amrex::Real x[], amrex::Real& cvbl)
{
  amrex::Real result = 0;
  amrex::Real cvor[88]; //  temporary storage
  cv_R(cvor, T);

  // perform dot product
  for (int id = 0; id < 88; ++id) {
    result += x[id] * cvor[id];
  }

  cvbl = result * 8.31446261815324e+07;
}

// Returns the mean specific heat at CV (Eq. 36)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVBS(const amrex::Real T, const amrex::Real y[], amrex::Real& cvbs)
{
  amrex::Real result = 0.0;
  // compute Cv/R at the given temperature
  const amrex::Real T2 = T * T;
  const amrex::Real T3 = T * T * T;
  const amrex::Real T4 = T * T * T * T;

  // species with no change across T
  // species 0: h
  result += y[0] * (+1.50104422e+00) * 0.9920634920634921;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 1: h2
    result += y[1] *
              (+2.29812400e+00 + 8.24944200e-04 * T - 8.14301500e-07 * T2 -
               9.47543400e-11 * T3 + 4.13487200e-13 * T4) *
              0.4960317460317460;
    // species 2: o
    result += y[2] *
              (+1.94642900e+00 - 1.63816600e-03 * T + 2.42103200e-06 * T2 -
               1.60284300e-09 * T3 + 3.89069600e-13 * T4) *
              0.0625039064941559;
    // species 3: o2
    result += y[3] *
              (+2.21293600e+00 + 1.12748600e-03 * T - 5.75615000e-07 * T2 +
               1.31387700e-09 * T3 - 8.76855400e-13 * T4) *
              0.0312519532470779;
    // species 5: h2o
    result += y[5] *
              (+2.38684200e+00 + 3.47498200e-03 * T - 6.35469600e-06 * T2 +
               6.96858100e-09 * T3 - 2.50658800e-12 * T4) *
              0.0555092978073827;
    // species 6: co
    result += y[6] *
              (+2.26245200e+00 + 1.51194100e-03 * T - 3.88175500e-06 * T2 +
               5.58194400e-09 * T3 - 2.47495100e-12 * T4) *
              0.0357015351660121;
    // species 7: hco
    result += y[7] *
              (+1.89833000e+00 + 6.19914700e-03 * T - 9.62308400e-06 * T2 +
               1.08982500e-08 * T3 - 4.57488500e-12 * T4) *
              0.0344613688055690;
    // species 8: co2
    result += y[8] *
              (+1.27572500e+00 + 9.92207200e-03 * T - 1.04091100e-05 * T2 +
               6.86668700e-09 * T3 - 2.11728000e-12 * T4) *
              0.0227226249176305;
    // species 9: ch3
    result += y[9] *
              (+1.43044300e+00 + 1.11241000e-02 * T - 1.68022000e-05 * T2 +
               1.62182900e-08 * T3 - 5.86495300e-12 * T4) *
              0.0665114732291320;
    // species 10: ch4
    result += y[10] *
              (-2.21258500e-01 + 1.74766800e-02 * T - 2.78340900e-05 * T2 +
               3.04970800e-08 * T3 - 1.22393100e-11 * T4) *
              0.0623324814560868;
    // species 12: h2o2
    result += y[12] *
              (+2.38875400e+00 + 6.56922600e-03 * T - 1.48501300e-07 * T2 -
               4.62580600e-09 * T3 + 2.47151500e-12 * T4) *
              0.0293996589639560;
    // species 13: ch2o
    result += y[13] *
              (+6.52731000e-01 + 1.26314400e-02 * T - 1.88816800e-05 * T2 +
               2.05003100e-08 * T3 - 8.41323700e-12 * T4) *
              0.0333044694598015;
    // species 14: ch3o
    result += y[14] *
              (+1.10620400e+00 + 7.21659500e-03 * T + 5.33847200e-06 * T2 -
               7.37763600e-09 * T3 + 2.07561100e-12 * T4) *
              0.0322227234645872;
    // species 16: c2h4
    result += y[16] *
              (-1.86148800e+00 + 2.79616300e-02 * T - 3.38867700e-05 * T2 +
               2.78515200e-08 * T3 - 9.73787900e-12 * T4) *
              0.0356455407428531;
    // species 17: c2h5
    result += y[17] *
              (+1.69070200e+00 + 8.71913300e-03 * T + 4.41983900e-06 * T2 +
               9.33870300e-10 * T3 - 3.92777300e-12 * T4) *
              0.0344091941366733;
    // species 18: c2h2
    result += y[18] *
              (+1.01356200e+00 + 1.51904500e-02 * T - 1.61631900e-05 * T2 +
               9.07899200e-09 * T3 - 1.91274600e-12 * T4) *
              0.0384054074813734;
    // species 19: c2h3
    result += y[19] *
              (+1.45927600e+00 + 7.37147600e-03 * T + 2.10987300e-06 * T2 -
               1.32164200e-09 * T3 - 1.18478400e-12 * T4) *
              0.0369740442209569;
    // species 20: ch2co
    result += y[20] *
              (+1.97497100e+00 + 1.21187100e-02 * T - 2.34504600e-06 * T2 -
               6.46668500e-09 * T3 + 3.90564900e-12 * T4) *
              0.0237885672145967;
    // species 21: hcco
    result += y[21] *
              (+4.04796500e+00 + 4.45347800e-03 * T + 2.26828300e-07 * T2 -
               1.48209500e-09 * T3 + 2.25074200e-13 * T4) *
              0.0243730044602598;
    // species 22: ch3co
    result += y[22] *
              (+2.12527800e+00 + 9.77822000e-03 * T + 4.52144800e-06 * T2 -
               9.00946200e-09 * T3 + 3.19371800e-12 * T4) *
              0.0232315019165989;
    // species 23: ch2cho
    result += y[23] *
              (+2.40906200e+00 + 1.07385700e-02 * T + 1.89149200e-06 * T2 -
               7.15858300e-09 * T3 + 2.86738500e-12 * T4) *
              0.0232315019165989;
    // species 24: ch3cho
    result += y[24] *
              (+1.50569500e+00 + 1.33699100e-02 * T + 4.67195300e-06 * T2 -
               1.12814000e-08 * T3 + 4.26356600e-12 * T4) *
              0.0226999296302181;
    // species 28: nc3h7
    result += y[28] *
              (+9.22537000e-01 + 2.47892700e-02 * T + 1.81024900e-06 * T2 -
               1.78326600e-08 * T3 + 8.58299600e-12 * T4) *
              0.0232077792476038;
    // species 48: c3h3
    result += y[48] *
              (+3.75420000e+00 + 1.10802800e-02 * T + 2.79332300e-07 * T2 -
               5.47921200e-09 * T3 + 1.94962900e-12 * T4) *
              0.0256036049875823;
    // species 49: c3h2
    result += y[49] *
              (+2.16671400e+00 + 2.48257200e-02 * T - 4.59163700e-05 * T2 +
               4.26801900e-08 * T3 - 1.48215200e-11 * T4) *
              0.0262818996557071;
    // species 50: ch2(s)
    result += y[50] *
              (+2.97126500e+00 - 1.69908900e-04 * T + 1.02536900e-06 * T2 +
               2.49255100e-09 * T3 - 1.98126600e-12 * T4) *
              0.0712910814857061;
    // species 87: n2
    result += y[87] *
              (+2.29867700e+00 + 1.40824000e-03 * T - 3.96322200e-06 * T2 +
               5.64151500e-09 * T3 - 2.44485500e-12 * T4) *
              0.0356964374955379;
  } else {
    // species 1: h2
    result += y[1] *
              (+1.99142300e+00 + 7.00064400e-04 * T - 5.63382900e-08 * T2 -
               9.23157800e-12 * T3 + 1.58275200e-15 * T4) *
              0.4960317460317460;
    // species 2: o
    result += y[2] *
              (+1.54206000e+00 - 2.75506200e-05 * T - 3.10280300e-09 * T2 +
               4.55106700e-12 * T3 - 4.36805200e-16 * T4) *
              0.0625039064941559;
    // species 3: o2
    result += y[3] *
              (+2.69757800e+00 + 6.13519700e-04 * T - 1.25884200e-07 * T2 +
               1.77528100e-11 * T3 - 1.13643500e-15 * T4) *
              0.0312519532470779;
    // species 5: h2o
    result += y[5] *
              (+1.67214600e+00 + 3.05629300e-03 * T - 8.73026000e-07 * T2 +
               1.20099600e-10 * T3 - 6.39161800e-15 * T4) *
              0.0555092978073827;
    // species 6: co
    result += y[6] *
              (+2.02507800e+00 + 1.44268900e-03 * T - 5.63082800e-07 * T2 +
               1.01858100e-10 * T3 - 6.91095200e-15 * T4) *
              0.0357015351660121;
    // species 7: hco
    result += y[7] *
              (+2.55727100e+00 + 3.34557300e-03 * T - 1.33500600e-06 * T2 +
               2.47057300e-10 * T3 - 1.71385100e-14 * T4) *
              0.0344613688055690;
    // species 8: co2
    result += y[8] *
              (+3.45362300e+00 + 3.14016900e-03 * T - 1.27841100e-06 * T2 +
               2.39399700e-10 * T3 - 1.66903300e-14 * T4) *
              0.0227226249176305;
    // species 9: ch3
    result += y[9] *
              (+1.84405200e+00 + 6.13797400e-03 * T - 2.23034500e-06 * T2 +
               3.78516100e-10 * T3 - 2.45215900e-14 * T4) *
              0.0665114732291320;
    // species 10: ch4
    result += y[10] *
              (+6.83479000e-01 + 1.02372400e-02 * T - 3.87512900e-06 * T2 +
               6.78558500e-10 * T3 - 4.50342300e-14 * T4) *
              0.0623324814560868;
    // species 12: h2o2
    result += y[12] *
              (+3.57316700e+00 + 4.33613600e-03 * T - 1.47468900e-06 * T2 +
               2.34890400e-10 * T3 - 1.43165400e-14 * T4) *
              0.0293996589639560;
    // species 13: ch2o
    result += y[13] *
              (+1.99560600e+00 + 6.68132100e-03 * T - 2.62895500e-06 * T2 +
               4.73715300e-10 * T3 - 3.21251700e-14 * T4) *
              0.0333044694598015;
    // species 14: ch3o
    result += y[14] *
              (+2.77080000e+00 + 7.87149700e-03 * T - 2.65638400e-06 * T2 +
               3.94443100e-10 * T3 - 2.11261600e-14 * T4) *
              0.0322227234645872;
    // species 16: c2h4
    result += y[16] *
              (+2.52841900e+00 + 1.14851800e-02 * T - 4.41838500e-06 * T2 +
               7.84460100e-10 * T3 - 5.26684800e-14 * T4) *
              0.0356455407428531;
    // species 17: c2h5
    result += y[17] *
              (+6.19048000e+00 + 6.48407700e-03 * T - 6.42806500e-07 * T2 -
               2.34787900e-10 * T3 + 3.88087700e-14 * T4) *
              0.0344091941366733;
    // species 18: c2h2
    result += y[18] *
              (+3.43677000e+00 + 5.37603900e-03 * T - 1.91281700e-06 * T2 +
               3.28637900e-10 * T3 - 2.15671000e-14 * T4) *
              0.0384054074813734;
    // species 19: c2h3
    result += y[19] *
              (+4.93346800e+00 + 4.01774600e-03 * T - 3.96674000e-07 * T2 -
               1.44126700e-10 * T3 + 2.37864400e-14 * T4) *
              0.0369740442209569;
    // species 20: ch2co
    result += y[20] *
              (+5.03881700e+00 + 5.80484000e-03 * T - 1.92095400e-06 * T2 +
               2.79448500e-10 * T3 - 1.45886800e-14 * T4) *
              0.0237885672145967;
    // species 21: hcco
    result += y[21] *
              (+5.75807300e+00 + 2.00040000e-03 * T - 2.02760700e-07 * T2 -
               1.04113200e-10 * T3 + 1.96516500e-14 * T4) *
              0.0243730044602598;
    // species 22: ch3co
    result += y[22] *
              (+4.61227900e+00 + 8.44988600e-03 * T - 2.85414700e-06 * T2 +
               4.23837600e-10 * T3 - 2.26840400e-14 * T4) *
              0.0232315019165989;
    // species 23: ch2cho
    result += y[23] *
              (+4.97567000e+00 + 8.13059100e-03 * T - 2.74362400e-06 * T2 +
               4.07030400e-10 * T3 - 2.17601700e-14 * T4) *
              0.0232315019165989;
    // species 24: ch3cho
    result += y[24] *
              (+4.86865000e+00 + 1.07942400e-02 * T - 3.64553000e-06 * T2 +
               5.41291200e-10 * T3 - 2.89684400e-14 * T4) *
              0.0226999296302181;
    // species 28: nc3h7
    result += y[28] *
              (+6.97829100e+00 + 1.57611300e-02 * T - 5.17324300e-06 * T2 +
               7.44389200e-10 * T3 - 3.82497800e-14 * T4) *
              0.0232077792476038;
    // species 48: c3h3
    result += y[48] *
              (+7.83104700e+00 + 4.35719500e-03 * T - 4.10906700e-07 * T2 -
               2.36872300e-10 * T3 + 4.37652000e-14 * T4) *
              0.0256036049875823;
    // species 49: c3h2
    result += y[49] *
              (+6.67098100e+00 + 2.74874900e-03 * T - 4.37094300e-07 * T2 -
               6.45559900e-11 * T3 + 1.66388700e-14 * T4) *
              0.0262818996557071;
    // species 50: ch2(s)
    result += y[50] *
              (+2.55288900e+00 + 2.06678800e-03 * T - 1.91411600e-07 * T2 -
               1.10467300e-10 * T3 + 2.02135000e-14 * T4) *
              0.0712910814857061;
    // species 87: n2
    result += y[87] *
              (+1.92664000e+00 + 1.48797700e-03 * T - 5.68476100e-07 * T2 +
               1.00970400e-10 * T3 - 6.75335100e-15 * T4) *
              0.0356964374955379;
  }

  // species with midpoint at T=1357 kelvin
  if (T < 1357) {
    // species 4: oh
    result += y[4] *
              (+2.43586219e+00 + 2.02235804e-04 * T - 1.13546412e-07 * T2 +
               2.42445149e-10 * T3 - 7.43651031e-14 * T4) *
              0.0587993179279120;
  } else {
    // species 4: oh
    result += y[4] *
              (+1.62599754e+00 + 1.31992406e-03 * T - 3.59724670e-07 * T2 +
               4.25630800e-11 * T3 - 1.82048016e-15 * T4) *
              0.0587993179279120;
  }

  // species with midpoint at T=1373 kelvin
  if (T < 1373) {
    // species 34: c2h5co
    result += y[34] *
              (+1.93313946e+00 + 2.47427911e-02 * T - 1.21222003e-05 * T2 +
               2.34701048e-09 * T3 - 5.26843338e-14 * T4) *
              0.0175217269414073;
  } else {
    // species 34: c2h5co
    result += y[34] *
              (+8.87881997e+00 + 1.17515676e-02 * T - 4.00614923e-06 * T2 +
               6.20850617e-10 * T3 - 3.59835225e-14 * T4) *
              0.0175217269414073;
  }

  // species with midpoint at T=1377 kelvin
  if (T < 1377) {
    // species 45: c4h8ooh1-3
    result += y[45] *
              (+9.41062760e-01 + 5.18789351e-02 * T - 3.10411683e-05 * T2 +
               8.63568881e-09 * T3 - 8.42841994e-13 * T4) *
              0.0112215813452432;
  } else {
    // species 45: c4h8ooh1-3
    result += y[45] *
              (+1.66442170e+01 + 1.91706536e-02 * T - 6.57168641e-06 * T2 +
               1.02246571e-09 * T3 - 5.94304735e-14 * T4) *
              0.0112215813452432;
  }

  // species with midpoint at T=1378 kelvin
  if (T < 1378) {
    // species 33: c2h5cho
    result += y[33] *
              (+1.16308444e+00 + 2.95501264e-02 * T - 1.52446252e-05 * T2 +
               3.49503947e-09 * T3 - 2.38896627e-13 * T4) *
              0.0172176308539945;
    // species 52: nc3h7cho
    result += y[52] *
              (+8.74159590e-01 + 4.19240315e-02 * T - 2.35148779e-05 * T2 +
               6.26913673e-09 * T3 - 6.09443908e-13 * T4) *
              0.0138682790852483;
  } else {
    // species 33: c2h5cho
    result += y[33] *
              (+9.24276950e+00 + 1.39641989e-02 * T - 4.76248001e-06 * T2 +
               7.38105706e-10 * T3 - 4.27759503e-14 * T4) *
              0.0172176308539945;
    // species 52: nc3h7cho
    result += y[52] *
              (+1.25988068e+01 + 1.81652474e-02 * T - 6.17844458e-06 * T2 +
               9.55980208e-10 * T3 - 5.53442958e-14 * T4) *
              0.0138682790852483;
  }

  // species with midpoint at T=1380 kelvin
  if (T < 1380) {
    // species 42: c3h5o
    result += y[42] *
              (+1.98225820e-01 + 3.05579837e-02 * T - 1.80630276e-05 * T2 +
               4.86150033e-09 * T3 - 4.19854562e-13 * T4) *
              0.0175217269414073;
    // species 53: nc3h7co
    result += y[53] *
              (+1.67256826e+00 + 3.71198825e-02 * T - 2.06862859e-05 * T2 +
               5.48873888e-09 * T3 - 5.35864183e-13 * T4) *
              0.0140648954275025;
  } else {
    // species 42: c3h5o
    result += y[42] *
              (+9.25517520e+00 + 1.14983720e-02 * T - 3.84645659e-06 * T2 +
               5.88910346e-10 * T3 - 3.38557923e-14 * T4) *
              0.0175217269414073;
    // species 53: nc3h7co
    result += y[53] *
              (+1.20026331e+01 + 1.63104877e-02 * T - 5.57642899e-06 * T2 +
               8.65670629e-10 * T3 - 5.02255667e-14 * T4) *
              0.0140648954275025;
  }

  // species with midpoint at T=1381 kelvin
  if (T < 1381) {
    // species 56: nc4h9cho
    result += y[56] *
              (+5.96634720e-01 + 5.43541416e-02 * T - 3.21020651e-05 * T2 +
               9.35773559e-09 * T3 - 1.06688932e-12 * T4) *
              0.0116098172614763;
  } else {
    // species 56: nc4h9cho
    result += y[56] *
              (+1.57965163e+01 + 2.25684519e-02 * T - 7.67631588e-06 * T2 +
               1.18769369e-09 * T3 - 6.87545554e-14 * T4) *
              0.0116098172614763;
  }

  // species with midpoint at T=1382 kelvin
  if (T < 1382) {
    // species 57: nc4h9co
    result += y[57] *
              (+1.43530238e+00 + 4.93682376e-02 * T - 2.89883082e-05 * T2 +
               8.42863812e-09 * T3 - 9.68287172e-13 * T4) *
              0.0117472922491366;
    // species 60: c7h15-2
    result += y[60] *
              (-1.03791558e+00 + 7.56726570e-02 * T - 4.07473634e-05 * T2 +
               9.32678943e-09 * T3 - 4.92360745e-13 * T4) *
              0.0100809500287307;
    // species 61: c7h15-3
    result += y[61] *
              (-1.03791558e+00 + 7.56726570e-02 * T - 4.07473634e-05 * T2 +
               9.32678943e-09 * T3 - 4.92360745e-13 * T4) *
              0.0100809500287307;
    // species 62: c7h15-4
    result += y[62] *
              (-1.03791558e+00 + 7.56726570e-02 * T - 4.07473634e-05 * T2 +
               9.32678943e-09 * T3 - 4.92360745e-13 * T4) *
              0.0100809500287307;
  } else {
    // species 57: nc4h9co
    result += y[57] *
              (+1.51782939e+01 + 2.07991920e-02 * T - 7.11787892e-06 * T2 +
               1.10559975e-09 * T3 - 6.41697187e-14 * T4) *
              0.0117472922491366;
    // species 60: c7h15-2
    result += y[60] *
              (+2.06368842e+01 + 3.23324804e-02 * T - 1.09273807e-05 * T2 +
               1.68357060e-09 * T3 - 9.71774091e-14 * T4) *
              0.0100809500287307;
    // species 61: c7h15-3
    result += y[61] *
              (+2.06368842e+01 + 3.23324804e-02 * T - 1.09273807e-05 * T2 +
               1.68357060e-09 * T3 - 9.71774091e-14 * T4) *
              0.0100809500287307;
    // species 62: c7h15-4
    result += y[62] *
              (+2.06368842e+01 + 3.23324804e-02 * T - 1.09273807e-05 * T2 +
               1.68357060e-09 * T3 - 9.71774091e-14 * T4) *
              0.0100809500287307;
  }

  // species with midpoint at T=1383 kelvin
  if (T < 1383) {
    // species 54: c2h5coch2
    result += y[54] *
              (+5.40138560e-01 + 4.39486258e-02 * T - 2.97002421e-05 * T2 +
               1.05495313e-08 * T3 - 1.58598769e-12 * T4) *
              0.0140648954275025;
    // species 69: c7h14ooh1-3
    result += y[69] *
              (+1.11462060e-01 + 8.91595392e-02 * T - 5.67352382e-05 * T2 +
               1.78890094e-08 * T3 - 2.22260206e-12 * T4) *
              0.0076222417012843;
  } else {
    // species 54: c2h5coch2
    result += y[54] *
              (+1.32098738e+01 + 1.57866459e-02 * T - 5.50529183e-06 * T2 +
               8.65870540e-10 * T3 - 5.06913329e-14 * T4) *
              0.0140648954275025;
    // species 69: c7h14ooh1-3
    result += y[69] *
              (+2.62290222e+01 + 3.24921901e-02 * T - 1.11259758e-05 * T2 +
               1.72928878e-09 * T3 - 1.00428326e-13 * T4) *
              0.0076222417012843;
  }

  // species with midpoint at T=1384 kelvin
  if (T < 1384) {
    // species 15: c2h6
    result += y[15] *
              (-1.02528543e+00 + 2.40764754e-02 * T - 1.11893472e-05 * T2 +
               2.08340901e-09 * T3 - 5.29868616e-14 * T4) *
              0.0332557366145660;
  } else {
    // species 15: c2h6
    result += y[15] *
              (+5.10683385e+00 + 1.29236361e-02 * T - 4.42527196e-06 * T2 +
               6.87391726e-10 * T3 - 3.98901732e-14 * T4) *
              0.0332557366145660;
  }

  // species with midpoint at T=1385 kelvin
  if (T < 1385) {
    // species 38: ch3o2
    result += y[38] *
              (+3.26146906e+00 + 1.00873599e-02 * T - 3.21506184e-06 * T2 +
               2.09409267e-10 * T3 + 4.18339103e-14 * T4) *
              0.0212616673399528;
    // species 46: pc4h9o2
    result += y[46] *
              (+9.43636500e-01 + 5.15513163e-02 * T - 3.28284400e-05 * T2 +
               1.13064860e-08 * T3 - 1.70118606e-12 * T4) *
              0.0112215813452432;
  } else {
    // species 38: ch3o2
    result += y[38] *
              (+4.95787891e+00 + 7.90728626e-03 * T - 2.68246234e-06 * T2 +
               4.13891337e-10 * T3 - 2.39007330e-14 * T4) *
              0.0212616673399528;
    // species 46: pc4h9o2
    result += y[46] *
              (+1.47845448e+01 + 2.15210910e-02 * T - 7.44909017e-06 * T2 +
               1.16558071e-09 * T3 - 6.79885609e-14 * T4) *
              0.0112215813452432;
  }

  // species with midpoint at T=1386 kelvin
  if (T < 1386) {
    // species 51: nc4ket13
    result += y[51] *
              (+1.74883461e+00 + 5.86936745e-02 * T - 4.49605895e-05 * T2 +
               1.83200130e-08 * T3 - 3.11765369e-12 * T4) *
              0.0096056865664473;
    // species 86: nc7ket42
    result += y[86] *
              (+1.32269738e+00 + 9.45160149e-02 * T - 6.99057179e-05 * T2 +
               2.79772916e-08 * T3 - 4.74244431e-12 * T4) *
              0.0068406003310851;
  } else {
    // species 51: nc4ket13
    result += y[51] *
              (+1.86430808e+01 + 1.80940566e-02 * T - 6.33063232e-06 * T2 +
               9.97860399e-10 * T3 - 5.85076458e-14 * T4) *
              0.0096056865664473;
    // species 86: nc7ket42
    result += y[86] *
              (+2.76572867e+01 + 3.21567908e-02 * T - 1.11961570e-05 * T2 +
               1.75895000e-09 * T3 - 1.02891960e-13 * T4) *
              0.0068406003310851;
  }

  // species with midpoint at T=1387 kelvin
  if (T < 1387) {
    // species 44: c4h8ooh1-3o2
    result += y[44] *
              (+1.22400728e+00 + 7.04994620e-02 * T - 5.66978827e-05 * T2 +
               2.42627751e-08 * T3 - 4.29715459e-12 * T4) *
              0.0082568201334302;
    // species 84: nc7ket24
    result += y[84] *
              (+5.29366920e-01 + 9.58173466e-02 * T - 6.96688520e-05 * T2 +
               2.69540382e-08 * T3 - 4.38728126e-12 * T4) *
              0.0068406003310851;
    // species 85: nc7ket35
    result += y[85] *
              (+5.29366920e-01 + 9.58173466e-02 * T - 6.96688520e-05 * T2 +
               2.69540382e-08 * T3 - 4.38728126e-12 * T4) *
              0.0068406003310851;
  } else {
    // species 44: c4h8ooh1-3o2
    result += y[44] *
              (+2.13244015e+01 + 2.05474775e-02 * T - 7.19076348e-06 * T2 +
               1.13361536e-09 * T3 - 6.64744383e-14 * T4) *
              0.0082568201334302;
    // species 84: nc7ket24
    result += y[84] *
              (+2.78330388e+01 + 3.20168096e-02 * T - 1.11508456e-05 * T2 +
               1.75226159e-09 * T3 - 1.02520451e-13 * T4) *
              0.0068406003310851;
    // species 85: nc7ket35
    result += y[85] *
              (+2.78330388e+01 + 3.20168096e-02 * T - 1.11508456e-05 * T2 +
               1.75226159e-09 * T3 - 1.02520451e-13 * T4) *
              0.0068406003310851;
  }

  // species with midpoint at T=1388 kelvin
  if (T < 1388) {
    // species 26: c3h6
    result += y[26] *
              (-6.05384556e-01 + 2.89107662e-02 * T - 1.54886808e-05 * T2 +
               3.88814209e-09 * T3 - 3.37890352e-13 * T4) *
              0.0237636938285687;
    // species 65: c7h15o2-1
    result += y[65] *
              (+2.08885520e-01 + 8.84061706e-02 * T - 5.79861260e-05 * T2 +
               2.03574689e-08 * T3 - 3.06460336e-12 * T4) *
              0.0076222417012843;
    // species 77: c7h14ooh1-3o2
    result += y[77] *
              (+8.97180040e-01 + 1.06229796e-01 * T - 8.02770218e-05 * T2 +
               3.23649093e-08 * T3 - 5.45850472e-12 * T4) *
              0.0061277138112542;
    // species 83: nc7ket13
    result += y[83] *
              (+1.21629328e+00 + 9.47373762e-02 * T - 6.90473651e-05 * T2 +
               2.67820400e-08 * T3 - 4.36392181e-12 * T4) *
              0.0068406003310851;
  } else {
    // species 26: c3h6
    result += y[26] *
              (+7.01595958e+00 + 1.37023634e-02 * T - 4.66249733e-06 * T2 +
               7.21254402e-10 * T3 - 4.17370126e-14 * T4) *
              0.0237636938285687;
    // species 65: c7h15o2-1
    result += y[65] *
              (+2.42656556e+01 + 3.50803587e-02 * T - 1.21178801e-05 * T2 +
               1.89360806e-09 * T3 - 1.10354125e-13 * T4) *
              0.0076222417012843;
    // species 77: c7h14ooh1-3o2
    result += y[77] *
              (+3.10144349e+01 + 3.40055996e-02 * T - 1.18415856e-05 * T2 +
               1.86060347e-09 * T3 - 1.08851012e-13 * T4) *
              0.0061277138112542;
    // species 83: nc7ket13
    result += y[83] *
              (+2.80744507e+01 + 3.17177458e-02 * T - 1.10262646e-05 * T2 +
               1.73053608e-09 * T3 - 1.01161699e-13 * T4) *
              0.0068406003310851;
  }

  // species with midpoint at T=1389 kelvin
  if (T < 1389) {
    // species 37: c2h5o
    result += y[37] *
              (-5.05579292e-01 + 2.71774434e-02 * T - 1.65909010e-05 * T2 +
               5.15204200e-09 * T3 - 6.48496915e-13 * T4) *
              0.0221921395441735;
    // species 55: nc3h7coch2
    result += y[55] *
              (-4.17007290e-02 + 5.68162532e-02 * T - 3.99112781e-05 * T2 +
               1.52671514e-08 * T3 - 2.49221047e-12 * T4) *
              0.0117472922491366;
    // species 70: c7h14ooh2-3
    result += y[70] *
              (-1.50213995e-01 + 9.25107196e-02 * T - 6.25359834e-05 * T2 +
               2.17880390e-08 * T3 - 3.12720398e-12 * T4) *
              0.0076222417012843;
    // species 71: c7h14ooh2-4
    result += y[71] *
              (-1.50213995e-01 + 9.25107196e-02 * T - 6.25359834e-05 * T2 +
               2.17880390e-08 * T3 - 3.12720398e-12 * T4) *
              0.0076222417012843;
    // species 72: c7h14ooh3-2
    result += y[72] *
              (-1.50213995e-01 + 9.25107196e-02 * T - 6.25359834e-05 * T2 +
               2.17880390e-08 * T3 - 3.12720398e-12 * T4) *
              0.0076222417012843;
    // species 73: c7h14ooh3-4
    result += y[73] *
              (-1.50213995e-01 + 9.25107196e-02 * T - 6.25359834e-05 * T2 +
               2.17880390e-08 * T3 - 3.12720398e-12 * T4) *
              0.0076222417012843;
    // species 74: c7h14ooh3-5
    result += y[74] *
              (-1.50213995e-01 + 9.25107196e-02 * T - 6.25359834e-05 * T2 +
               2.17880390e-08 * T3 - 3.12720398e-12 * T4) *
              0.0076222417012843;
    // species 75: c7h14ooh4-2
    result += y[75] *
              (-1.50213995e-01 + 9.25107196e-02 * T - 6.25359834e-05 * T2 +
               2.17880390e-08 * T3 - 3.12720398e-12 * T4) *
              0.0076222417012843;
    // species 76: c7h14ooh4-3
    result += y[76] *
              (-1.50213995e-01 + 9.25107196e-02 * T - 6.25359834e-05 * T2 +
               2.17880390e-08 * T3 - 3.12720398e-12 * T4) *
              0.0076222417012843;
  } else {
    // species 37: c2h5o
    result += y[37] *
              (+6.87339772e+00 + 1.13072907e-02 * T - 3.84421421e-06 * T2 +
               5.94414105e-10 * T3 - 3.43894538e-14 * T4) *
              0.0221921395441735;
    // species 55: nc3h7coch2
    result += y[55] *
              (+1.51502419e+01 + 2.14093466e-02 * T - 7.36059614e-06 * T2 +
               1.14656816e-09 * T3 - 6.66712722e-14 * T4) *
              0.0117472922491366;
    // species 70: c7h14ooh2-3
    result += y[70] *
              (+2.64034778e+01 + 3.27527893e-02 * T - 1.12991770e-05 * T2 +
               1.76444649e-09 * T3 - 1.02786945e-13 * T4) *
              0.0076222417012843;
    // species 71: c7h14ooh2-4
    result += y[71] *
              (+2.64034778e+01 + 3.27527893e-02 * T - 1.12991770e-05 * T2 +
               1.76444649e-09 * T3 - 1.02786945e-13 * T4) *
              0.0076222417012843;
    // species 72: c7h14ooh3-2
    result += y[72] *
              (+2.64034778e+01 + 3.27527893e-02 * T - 1.12991770e-05 * T2 +
               1.76444649e-09 * T3 - 1.02786945e-13 * T4) *
              0.0076222417012843;
    // species 73: c7h14ooh3-4
    result += y[73] *
              (+2.64034778e+01 + 3.27527893e-02 * T - 1.12991770e-05 * T2 +
               1.76444649e-09 * T3 - 1.02786945e-13 * T4) *
              0.0076222417012843;
    // species 74: c7h14ooh3-5
    result += y[74] *
              (+2.64034778e+01 + 3.27527893e-02 * T - 1.12991770e-05 * T2 +
               1.76444649e-09 * T3 - 1.02786945e-13 * T4) *
              0.0076222417012843;
    // species 75: c7h14ooh4-2
    result += y[75] *
              (+2.64034778e+01 + 3.27527893e-02 * T - 1.12991770e-05 * T2 +
               1.76444649e-09 * T3 - 1.02786945e-13 * T4) *
              0.0076222417012843;
    // species 76: c7h14ooh4-3
    result += y[76] *
              (+2.64034778e+01 + 3.27527893e-02 * T - 1.12991770e-05 * T2 +
               1.76444649e-09 * T3 - 1.02786945e-13 * T4) *
              0.0076222417012843;
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 11: ho2
    result += y[11] *
              (+2.18310656e+00 + 3.66767950e-03 * T - 9.32385122e-07 * T2 -
               3.25852919e-10 * T3 + 1.51139912e-13 * T4) *
              0.0302975216627280;
    // species 39: ch3o2h
    result += y[39] *
              (+2.23442817e+00 + 1.90129767e-02 * T - 1.13386287e-05 * T2 +
               3.40306653e-09 * T3 - 4.11830222e-13 * T4) *
              0.0208155533814866;
    // species 59: c7h15-1
    result += y[59] *
              (-1.49957041e+00 + 8.08826467e-02 * T - 5.00532754e-05 * T2 +
               1.56549308e-08 * T3 - 1.96616227e-12 * T4) *
              0.0100809500287307;
    // species 63: c7h14-2
    result += y[63] *
              (-2.16533279e+00 + 7.90439806e-02 * T - 4.96101666e-05 * T2 +
               1.58569009e-08 * T3 - 2.05346433e-12 * T4) *
              0.0101844402122437;
    // species 66: c7h15o2-2
    result += y[66] *
              (-6.44747083e-01 + 9.42381007e-02 * T - 6.66955106e-05 * T2 +
               2.54795583e-08 * T3 - 4.13211105e-12 * T4) *
              0.0076222417012843;
    // species 67: c7h15o2-3
    result += y[67] *
              (-6.44747083e-01 + 9.42381007e-02 * T - 6.66955106e-05 * T2 +
               2.54795583e-08 * T3 - 4.13211105e-12 * T4) *
              0.0076222417012843;
    // species 68: c7h15o2-4
    result += y[68] *
              (-6.44747083e-01 + 9.42381007e-02 * T - 6.66955106e-05 * T2 +
               2.54795583e-08 * T3 - 4.13211105e-12 * T4) *
              0.0076222417012843;
    // species 78: c7h14ooh2-4o2
    result += y[78] *
              (+4.09124790e-01 + 1.10720834e-01 * T - 8.71178075e-05 * T2 +
               3.63662749e-08 * T3 - 6.28350689e-12 * T4) *
              0.0061277138112542;
    // species 79: c7h14ooh3-5o2
    result += y[79] *
              (+4.09124790e-01 + 1.10720834e-01 * T - 8.71178075e-05 * T2 +
               3.63662749e-08 * T3 - 6.28350689e-12 * T4) *
              0.0061277138112542;
    // species 80: c7h14ooh4-2o2
    result += y[80] *
              (+4.09124790e-01 + 1.10720834e-01 * T - 8.71178075e-05 * T2 +
               3.63662749e-08 * T3 - 6.28350689e-12 * T4) *
              0.0061277138112542;
  } else {
    // species 11: ho2
    result += y[11] *
              (+3.10547423e+00 + 2.38452835e-03 * T - 8.06347989e-07 * T2 +
               1.24191723e-10 * T3 - 7.16400108e-15 * T4) *
              0.0302975216627280;
    // species 39: ch3o2h
    result += y[39] *
              (+7.43117091e+00 + 8.06817909e-03 * T - 2.77094921e-06 * T2 +
               4.31332243e-10 * T3 - 2.50692146e-14 * T4) *
              0.0208155533814866;
    // species 59: c7h15-1
    result += y[59] *
              (+2.07940709e+01 + 3.26280243e-02 * T - 1.11138244e-05 * T2 +
               1.72067148e-09 * T3 - 9.96366999e-14 * T4) *
              0.0100809500287307;
    // species 63: c7h14-2
    result += y[63] *
              (+1.96192047e+01 + 3.14852991e-02 * T - 1.07162057e-05 * T2 +
               1.65827662e-09 * T3 - 9.59911785e-14 * T4) *
              0.0101844402122437;
    // species 66: c7h15o2-2
    result += y[66] *
              (+2.50535640e+01 + 3.43831688e-02 * T - 1.18713247e-05 * T2 +
               1.85450241e-09 * T3 - 1.08052399e-13 * T4) *
              0.0076222417012843;
    // species 67: c7h15o2-3
    result += y[67] *
              (+2.50535640e+01 + 3.43831688e-02 * T - 1.18713247e-05 * T2 +
               1.85450241e-09 * T3 - 1.08052399e-13 * T4) *
              0.0076222417012843;
    // species 68: c7h15o2-4
    result += y[68] *
              (+2.50535640e+01 + 3.43831688e-02 * T - 1.18713247e-05 * T2 +
               1.85450241e-09 * T3 - 1.08052399e-13 * T4) *
              0.0076222417012843;
    // species 78: c7h14ooh2-4o2
    result += y[78] *
              (+3.18358296e+01 + 3.32767285e-02 * T - 1.15833285e-05 * T2 +
               1.81958638e-09 * T3 - 1.06434419e-13 * T4) *
              0.0061277138112542;
    // species 79: c7h14ooh3-5o2
    result += y[79] *
              (+3.18358296e+01 + 3.32767285e-02 * T - 1.15833285e-05 * T2 +
               1.81958638e-09 * T3 - 1.06434419e-13 * T4) *
              0.0061277138112542;
    // species 80: c7h14ooh4-2o2
    result += y[80] *
              (+3.18358296e+01 + 3.32767285e-02 * T - 1.15833285e-05 * T2 +
               1.81958638e-09 * T3 - 1.06434419e-13 * T4) *
              0.0061277138112542;
  }

  // species with midpoint at T=1391 kelvin
  if (T < 1391) {
    // species 32: ch3coch2
    result += y[32] *
              (+8.03391870e-01 + 3.01407085e-02 * T - 1.93505552e-05 * T2 +
               6.38199034e-09 * T3 - 8.66103180e-13 * T4) *
              0.0175217269414073;
    // species 58: nc7h16
    result += y[58] *
              (-2.26836187e+00 + 8.54355820e-02 * T - 5.25346786e-05 * T2 +
               1.62945721e-08 * T3 - 2.02394925e-12 * T4) *
              0.0099795419390250;
  } else {
    // species 32: ch3coch2
    result += y[32] *
              (+9.23039750e+00 + 1.16494161e-02 * T - 4.01005537e-06 * T2 +
               6.25205246e-10 * T3 - 3.63784362e-14 * T4) *
              0.0175217269414073;
    // species 58: nc7h16
    result += y[58] *
              (+2.12148969e+01 + 3.47675750e-02 * T - 1.18407129e-05 * T2 +
               1.83298478e-09 * T3 - 1.06130266e-13 * T4) *
              0.0099795419390250;
  }

  // species with midpoint at T=1392 kelvin
  if (T < 1392) {
    // species 29: c4h7
    result += y[29] *
              (-1.35050835e+00 + 4.26511243e-02 * T - 2.90979373e-05 * T2 +
               1.05403914e-08 * T3 - 1.60059854e-12 * T4) *
              0.0181488203266788;
    // species 30: c4h8-1
    result += y[30] *
              (-1.83137209e+00 + 4.52580978e-02 * T - 2.93658559e-05 * T2 +
               1.00220436e-08 * T3 - 1.43191680e-12 * T4) *
              0.0178227703714265;
    // species 35: c5h9
    result += y[35] *
              (-2.38013950e+00 + 5.57608487e-02 * T - 3.70143928e-05 * T2 +
               1.26883901e-08 * T3 - 1.78538835e-12 * T4) *
              0.0144661275623128;
    // species 36: c5h10-1
    result += y[36] *
              (-2.06223481e+00 + 5.74218294e-02 * T - 3.74486890e-05 * T2 +
               1.27364989e-08 * T3 - 1.79609789e-12 * T4) *
              0.0142582162971412;
    // species 64: c7h14-3
    result += y[64] *
              (-3.03026994e+00 + 8.26324377e-02 * T - 5.45514471e-05 * T2 +
               1.87705822e-08 * T3 - 2.67571220e-12 * T4) *
              0.0101844402122437;
  } else {
    // species 29: c4h7
    result += y[29] *
              (+1.02103578e+01 + 1.60483196e-02 * T - 5.46502292e-06 * T2 +
               8.45941053e-10 * T3 - 4.89772739e-14 * T4) *
              0.0181488203266788;
    // species 30: c4h8-1
    result += y[30] *
              (+1.03508668e+01 + 1.80617877e-02 * T - 6.16093029e-06 * T2 +
               9.54652959e-10 * T3 - 5.53089641e-14 * T4) *
              0.0178227703714265;
    // species 35: c5h9
    result += y[35] *
              (+1.31860454e+01 + 2.07128899e-02 * T - 7.06960617e-06 * T2 +
               1.09607133e-09 * T3 - 6.35322208e-14 * T4) *
              0.0144661275623128;
    // species 36: c5h10-1
    result += y[36] *
              (+1.35851539e+01 + 2.24072471e-02 * T - 7.63348025e-06 * T2 +
               1.18188966e-09 * T3 - 6.84385139e-14 * T4) *
              0.0142582162971412;
    // species 64: c7h14-3
    result += y[64] *
              (+1.96822750e+01 + 3.15388629e-02 * T - 1.07571215e-05 * T2 +
               1.66690260e-09 * T3 - 9.65810393e-14 * T4) *
              0.0101844402122437;
  }

  // species with midpoint at T=1393 kelvin
  if (T < 1393) {
    // species 41: c2h3cho
    result += y[41] *
              (-7.07644838e-01 + 3.54321417e-02 * T - 2.94936324e-05 * T2 +
               1.28100124e-08 * T3 - 2.26144108e-12 * T4) *
              0.0178367579908676;
  } else {
    // species 41: c2h3cho
    result += y[41] *
              (+9.41849590e+00 + 9.48963321e-03 * T - 3.29310529e-06 * T2 +
               5.16279203e-10 * T3 - 3.01587291e-14 * T4) *
              0.0178367579908676;
  }

  // species with midpoint at T=1395 kelvin
  if (T < 1395) {
    // species 31: pc4h9
    result += y[31] *
              (-1.43777972e+00 + 4.78972364e-02 * T - 3.14023159e-05 * T2 +
               1.09786472e-08 * T3 - 1.62010664e-12 * T4) *
              0.0175082288675678;
    // species 43: c4h7o
    result += y[43] *
              (-2.60619192e+00 + 5.58562682e-02 * T - 4.35595767e-05 * T2 +
               1.70589279e-08 * T3 - 2.65635180e-12 * T4) *
              0.0140648954275025;
    // species 81: c7h14o1-3
    result += y[81] *
              (-6.50036450e+00 + 1.00155088e-01 * T - 7.29935857e-05 * T2 +
               2.79344270e-08 * T3 - 4.42245696e-12 * T4) *
              0.0087574876519424;
  } else {
    // species 31: pc4h9
    result += y[31] *
              (+1.11510082e+01 + 1.94310717e-02 * T - 6.61577950e-06 * T2 +
               1.02375136e-09 * T3 - 5.92529707e-14 * T4) *
              0.0175082288675678;
    // species 43: c4h7o
    result += y[43] *
              (+1.43137780e+01 + 1.43427017e-02 * T - 4.81625517e-06 * T2 +
               7.39574839e-10 * T3 - 4.26140814e-14 * T4) *
              0.0140648954275025;
    // species 81: c7h14o1-3
    result += y[81] *
              (+2.16918916e+01 + 3.32510472e-02 * T - 1.14457765e-05 * T2 +
               1.78455535e-09 * T3 - 1.03841112e-13 * T4) *
              0.0087574876519424;
  }

  // species with midpoint at T=1397 kelvin
  if (T < 1397) {
    // species 47: c3h5-a
    result += y[47] *
              (-1.52913196e+00 + 3.34559100e-02 * T - 2.53401027e-05 * T2 +
               1.02865754e-08 * T3 - 1.73258340e-12 * T4) *
              0.0243468945535997;
  } else {
    // species 47: c3h5-a
    result += y[47] *
              (+7.45883958e+00 + 1.12695483e-02 * T - 3.83792864e-06 * T2 +
               5.94059119e-10 * T3 - 3.43918030e-14 * T4) *
              0.0243468945535997;
  }

  // species with midpoint at T=1398 kelvin
  if (T < 1398) {
    // species 27: c4h6
    result += y[27] *
              (-2.43095121e+00 + 4.78706062e-02 * T - 4.15446800e-05 * T2 +
               1.91549552e-08 * T3 - 3.57158507e-12 * T4) *
              0.0184870221104784;
  } else {
    // species 27: c4h6
    result += y[27] *
              (+1.01633789e+01 + 1.37163965e-02 * T - 4.69715783e-06 * T2 +
               7.29693836e-10 * T3 - 4.23486203e-14 * T4) *
              0.0184870221104784;
  }

  // species with midpoint at T=1399 kelvin
  if (T < 1399) {
    // species 82: c7h14o2-4
    result += y[82] *
              (-6.39477206e+00 + 1.01846577e-01 * T - 7.60046236e-05 * T2 +
               2.96538020e-08 * T3 - 4.74854370e-12 * T4) *
              0.0087574876519424;
  } else {
    // species 82: c7h14o2-4
    result += y[82] *
              (+2.22692731e+01 + 3.25585391e-02 * T - 1.11624906e-05 * T2 +
               1.73573658e-09 * T3 - 1.00813215e-13 * T4) *
              0.0087574876519424;
  }

  // species with midpoint at T=1400 kelvin
  if (T < 1400) {
    // species 25: c3h4-a
    result += y[25] *
              (+1.53983100e+00 + 1.63343700e-02 * T - 1.76495000e-06 * T2 -
               4.64736500e-09 * T3 + 1.72913100e-12 * T4) *
              0.0249594409085237;
  } else {
    // species 25: c3h4-a
    result += y[25] *
              (+8.77625600e+00 + 5.30213800e-03 * T - 3.70111800e-07 * T2 -
               3.02638600e-10 * T3 + 5.08958100e-14 * T4) *
              0.0249594409085237;
  }

  // species with midpoint at T=1402 kelvin
  if (T < 1402) {
    // species 40: c2h3co
    result += y[40] *
              (+3.62420130e-01 + 3.15273972e-02 * T - 3.00218935e-05 * T2 +
               1.48167112e-08 * T3 - 2.87971530e-12 * T4) *
              0.0181633246149375;
  } else {
    // species 40: c2h3co
    result += y[40] *
              (+8.37467676e+00 + 7.91296900e-03 * T - 2.67198280e-06 * T2 +
               4.11115430e-10 * T3 - 2.36978981e-14 * T4) *
              0.0181633246149375;
  }

  cvbs = result * 8.31446261815324e+07;
}

// Returns the mean enthalpy of the mixture in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHBML(const amrex::Real T, const amrex::Real x[], amrex::Real& hbml)
{
  amrex::Real result = 0;
  amrex::Real hml[88];                       //  temporary storage
  amrex::Real RT = 8.31446261815324e+07 * T; // R*T
  speciesEnthalpy(hml, T);

  // perform dot product
  for (int id = 0; id < 88; ++id) {
    result += x[id] * hml[id];
  }

  hbml = result * RT;
}

// Returns mean enthalpy of mixture in mass units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHBMS(const amrex::Real T, const amrex::Real y[], amrex::Real& hbms)
{
  amrex::Real result = 0.0;
  const amrex::Real T2 = T * T;
  const amrex::Real T3 = T * T * T;
  const amrex::Real T4 = T * T * T * T;
  const amrex::Real invT = 1.0 / T;

  // species with no change across T
  // species 0: h
  result +=
    y[0] * (+2.50104422e+00 + 2.54747466e+04 * invT) * 0.9920634920634921;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 1: h2
    result +=
      y[1] *
      (+3.29812400e+00 + 4.12472100e-04 * T - 2.71433833e-07 * T2 -
       2.36885850e-11 * T3 + 8.26974400e-14 * T4 - 1.01252100e+03 * invT) *
      0.4960317460317460;
    // species 2: o
    result +=
      y[2] *
      (+2.94642900e+00 - 8.19083000e-04 * T + 8.07010667e-07 * T2 -
       4.00710750e-10 * T3 + 7.78139200e-14 * T4 + 2.91476400e+04 * invT) *
      0.0625039064941559;
    // species 3: o2
    result +=
      y[3] *
      (+3.21293600e+00 + 5.63743000e-04 * T - 1.91871667e-07 * T2 +
       3.28469250e-10 * T3 - 1.75371080e-13 * T4 - 1.00524900e+03 * invT) *
      0.0312519532470779;
    // species 5: h2o
    result +=
      y[5] *
      (+3.38684200e+00 + 1.73749100e-03 * T - 2.11823200e-06 * T2 +
       1.74214525e-09 * T3 - 5.01317600e-13 * T4 - 3.02081100e+04 * invT) *
      0.0555092978073827;
    // species 6: co
    result +=
      y[6] *
      (+3.26245200e+00 + 7.55970500e-04 * T - 1.29391833e-06 * T2 +
       1.39548600e-09 * T3 - 4.94990200e-13 * T4 - 1.43105400e+04 * invT) *
      0.0357015351660121;
    // species 7: hco
    result +=
      y[7] *
      (+2.89833000e+00 + 3.09957350e-03 * T - 3.20769467e-06 * T2 +
       2.72456250e-09 * T3 - 9.14977000e-13 * T4 + 4.15992200e+03 * invT) *
      0.0344613688055690;
    // species 8: co2
    result +=
      y[8] *
      (+2.27572500e+00 + 4.96103600e-03 * T - 3.46970333e-06 * T2 +
       1.71667175e-09 * T3 - 4.23456000e-13 * T4 - 4.83731400e+04 * invT) *
      0.0227226249176305;
    // species 9: ch3
    result +=
      y[9] *
      (+2.43044300e+00 + 5.56205000e-03 * T - 5.60073333e-06 * T2 +
       4.05457250e-09 * T3 - 1.17299060e-12 * T4 + 1.64237800e+04 * invT) *
      0.0665114732291320;
    // species 10: ch4
    result +=
      y[10] *
      (+7.78741500e-01 + 8.73834000e-03 * T - 9.27803000e-06 * T2 +
       7.62427000e-09 * T3 - 2.44786200e-12 * T4 - 9.82522900e+03 * invT) *
      0.0623324814560868;
    // species 12: h2o2
    result +=
      y[12] *
      (+3.38875400e+00 + 3.28461300e-03 * T - 4.95004333e-08 * T2 -
       1.15645150e-09 * T3 + 4.94303000e-13 * T4 - 1.76631500e+04 * invT) *
      0.0293996589639560;
    // species 13: ch2o
    result +=
      y[13] *
      (+1.65273100e+00 + 6.31572000e-03 * T - 6.29389333e-06 * T2 +
       5.12507750e-09 * T3 - 1.68264740e-12 * T4 - 1.48654000e+04 * invT) *
      0.0333044694598015;
    // species 14: ch3o
    result +=
      y[14] *
      (+2.10620400e+00 + 3.60829750e-03 * T + 1.77949067e-06 * T2 -
       1.84440900e-09 * T3 + 4.15122200e-13 * T4 + 9.78601100e+02 * invT) *
      0.0322227234645872;
    // species 16: c2h4
    result +=
      y[16] *
      (-8.61488000e-01 + 1.39808150e-02 * T - 1.12955900e-05 * T2 +
       6.96288000e-09 * T3 - 1.94757580e-12 * T4 + 5.57304600e+03 * invT) *
      0.0356455407428531;
    // species 17: c2h5
    result +=
      y[17] *
      (+2.69070200e+00 + 4.35956650e-03 * T + 1.47327967e-06 * T2 +
       2.33467575e-10 * T3 - 7.85554600e-13 * T4 + 1.28704000e+04 * invT) *
      0.0344091941366733;
    // species 18: c2h2
    result +=
      y[18] *
      (+2.01356200e+00 + 7.59522500e-03 * T - 5.38773000e-06 * T2 +
       2.26974800e-09 * T3 - 3.82549200e-13 * T4 + 2.61244400e+04 * invT) *
      0.0384054074813734;
    // species 19: c2h3
    result +=
      y[19] *
      (+2.45927600e+00 + 3.68573800e-03 * T + 7.03291000e-07 * T2 -
       3.30410500e-10 * T3 - 2.36956800e-13 * T4 + 3.33522500e+04 * invT) *
      0.0369740442209569;
    // species 20: ch2co
    result +=
      y[20] *
      (+2.97497100e+00 + 6.05935500e-03 * T - 7.81682000e-07 * T2 -
       1.61667125e-09 * T3 + 7.81129800e-13 * T4 - 7.63263700e+03 * invT) *
      0.0237885672145967;
    // species 21: hcco
    result +=
      y[21] *
      (+5.04796500e+00 + 2.22673900e-03 * T + 7.56094333e-08 * T2 -
       3.70523750e-10 * T3 + 4.50148400e-14 * T4 + 1.96589200e+04 * invT) *
      0.0243730044602598;
    // species 22: ch3co
    result +=
      y[22] *
      (+3.12527800e+00 + 4.88911000e-03 * T + 1.50714933e-06 * T2 -
       2.25236550e-09 * T3 + 6.38743600e-13 * T4 - 4.10850800e+03 * invT) *
      0.0232315019165989;
    // species 23: ch2cho
    result +=
      y[23] *
      (+3.40906200e+00 + 5.36928500e-03 * T + 6.30497333e-07 * T2 -
       1.78964575e-09 * T3 + 5.73477000e-13 * T4 + 1.52147700e+03 * invT) *
      0.0232315019165989;
    // species 24: ch3cho
    result +=
      y[24] *
      (+2.50569500e+00 + 6.68495500e-03 * T + 1.55731767e-06 * T2 -
       2.82035000e-09 * T3 + 8.52713200e-13 * T4 - 2.12458900e+04 * invT) *
      0.0226999296302181;
    // species 28: nc3h7
    result +=
      y[28] *
      (+1.92253700e+00 + 1.23946350e-02 * T + 6.03416333e-07 * T2 -
       4.45816500e-09 * T3 + 1.71659920e-12 * T4 + 9.71328100e+03 * invT) *
      0.0232077792476038;
    // species 48: c3h3
    result +=
      y[48] *
      (+4.75420000e+00 + 5.54014000e-03 * T + 9.31107667e-08 * T2 -
       1.36980300e-09 * T3 + 3.89925800e-13 * T4 + 3.98888300e+04 * invT) *
      0.0256036049875823;
    // species 49: c3h2
    result +=
      y[49] *
      (+3.16671400e+00 + 1.24128600e-02 * T - 1.53054567e-05 * T2 +
       1.06700475e-08 * T3 - 2.96430400e-12 * T4 + 6.35042100e+04 * invT) *
      0.0262818996557071;
    // species 50: ch2(s)
    result +=
      y[50] *
      (+3.97126500e+00 - 8.49544500e-05 * T + 3.41789667e-07 * T2 +
       6.23137750e-10 * T3 - 3.96253200e-13 * T4 + 4.98936800e+04 * invT) *
      0.0712910814857061;
    // species 87: n2
    result +=
      y[87] *
      (+3.29867700e+00 + 7.04120000e-04 * T - 1.32107400e-06 * T2 +
       1.41037875e-09 * T3 - 4.88971000e-13 * T4 - 1.02090000e+03 * invT) *
      0.0356964374955379;
  } else {
    // species 1: h2
    result +=
      y[1] *
      (+2.99142300e+00 + 3.50032200e-04 * T - 1.87794300e-08 * T2 -
       2.30789450e-12 * T3 + 3.16550400e-16 * T4 - 8.35034000e+02 * invT) *
      0.4960317460317460;
    // species 2: o
    result +=
      y[2] *
      (+2.54206000e+00 - 1.37753100e-05 * T - 1.03426767e-09 * T2 +
       1.13776675e-12 * T3 - 8.73610400e-17 * T4 + 2.92308000e+04 * invT) *
      0.0625039064941559;
    // species 3: o2
    result +=
      y[3] *
      (+3.69757800e+00 + 3.06759850e-04 * T - 4.19614000e-08 * T2 +
       4.43820250e-12 * T3 - 2.27287000e-16 * T4 - 1.23393000e+03 * invT) *
      0.0312519532470779;
    // species 5: h2o
    result +=
      y[5] *
      (+2.67214600e+00 + 1.52814650e-03 * T - 2.91008667e-07 * T2 +
       3.00249000e-11 * T3 - 1.27832360e-15 * T4 - 2.98992100e+04 * invT) *
      0.0555092978073827;
    // species 6: co
    result +=
      y[6] *
      (+3.02507800e+00 + 7.21344500e-04 * T - 1.87694267e-07 * T2 +
       2.54645250e-11 * T3 - 1.38219040e-15 * T4 - 1.42683500e+04 * invT) *
      0.0357015351660121;
    // species 7: hco
    result +=
      y[7] *
      (+3.55727100e+00 + 1.67278650e-03 * T - 4.45002000e-07 * T2 +
       6.17643250e-11 * T3 - 3.42770200e-15 * T4 + 3.91632400e+03 * invT) *
      0.0344613688055690;
    // species 8: co2
    result +=
      y[8] *
      (+4.45362300e+00 + 1.57008450e-03 * T - 4.26137000e-07 * T2 +
       5.98499250e-11 * T3 - 3.33806600e-15 * T4 - 4.89669600e+04 * invT) *
      0.0227226249176305;
    // species 9: ch3
    result +=
      y[9] *
      (+2.84405200e+00 + 3.06898700e-03 * T - 7.43448333e-07 * T2 +
       9.46290250e-11 * T3 - 4.90431800e-15 * T4 + 1.64378100e+04 * invT) *
      0.0665114732291320;
    // species 10: ch4
    result +=
      y[10] *
      (+1.68347900e+00 + 5.11862000e-03 * T - 1.29170967e-06 * T2 +
       1.69639625e-10 * T3 - 9.00684600e-15 * T4 - 1.00807900e+04 * invT) *
      0.0623324814560868;
    // species 12: h2o2
    result +=
      y[12] *
      (+4.57316700e+00 + 2.16806800e-03 * T - 4.91563000e-07 * T2 +
       5.87226000e-11 * T3 - 2.86330800e-15 * T4 - 1.80069600e+04 * invT) *
      0.0293996589639560;
    // species 13: ch2o
    result +=
      y[13] *
      (+2.99560600e+00 + 3.34066050e-03 * T - 8.76318333e-07 * T2 +
       1.18428825e-10 * T3 - 6.42503400e-15 * T4 - 1.53203700e+04 * invT) *
      0.0333044694598015;
    // species 14: ch3o
    result +=
      y[14] *
      (+3.77080000e+00 + 3.93574850e-03 * T - 8.85461333e-07 * T2 +
       9.86107750e-11 * T3 - 4.22523200e-15 * T4 + 1.27832500e+02 * invT) *
      0.0322227234645872;
    // species 16: c2h4
    result +=
      y[16] *
      (+3.52841900e+00 + 5.74259000e-03 * T - 1.47279500e-06 * T2 +
       1.96115025e-10 * T3 - 1.05336960e-14 * T4 + 4.42828900e+03 * invT) *
      0.0356455407428531;
    // species 17: c2h5
    result +=
      y[17] *
      (+7.19048000e+00 + 3.24203850e-03 * T - 2.14268833e-07 * T2 -
       5.86969750e-11 * T3 + 7.76175400e-15 * T4 + 1.06745500e+04 * invT) *
      0.0344091941366733;
    // species 18: c2h2
    result +=
      y[18] *
      (+4.43677000e+00 + 2.68801950e-03 * T - 6.37605667e-07 * T2 +
       8.21594750e-11 * T3 - 4.31342000e-15 * T4 + 2.56676600e+04 * invT) *
      0.0384054074813734;
    // species 19: c2h3
    result +=
      y[19] *
      (+5.93346800e+00 + 2.00887300e-03 * T - 1.32224667e-07 * T2 -
       3.60316750e-11 * T3 + 4.75728800e-15 * T4 + 3.18543500e+04 * invT) *
      0.0369740442209569;
    // species 20: ch2co
    result +=
      y[20] *
      (+6.03881700e+00 + 2.90242000e-03 * T - 6.40318000e-07 * T2 +
       6.98621250e-11 * T3 - 2.91773600e-15 * T4 - 8.58340200e+03 * invT) *
      0.0237885672145967;
    // species 21: hcco
    result +=
      y[21] *
      (+6.75807300e+00 + 1.00020000e-03 * T - 6.75869000e-08 * T2 -
       2.60283000e-11 * T3 + 3.93033000e-15 * T4 + 1.90151300e+04 * invT) *
      0.0243730044602598;
    // species 22: ch3co
    result +=
      y[22] *
      (+5.61227900e+00 + 4.22494300e-03 * T - 9.51382333e-07 * T2 +
       1.05959400e-10 * T3 - 4.53680800e-15 * T4 - 5.18786300e+03 * invT) *
      0.0232315019165989;
    // species 23: ch2cho
    result +=
      y[23] *
      (+5.97567000e+00 + 4.06529550e-03 * T - 9.14541333e-07 * T2 +
       1.01757600e-10 * T3 - 4.35203400e-15 * T4 + 4.90321800e+02 * invT) *
      0.0232315019165989;
    // species 24: ch3cho
    result +=
      y[24] *
      (+5.86865000e+00 + 5.39712000e-03 * T - 1.21517667e-06 * T2 +
       1.35322800e-10 * T3 - 5.79368800e-15 * T4 - 2.26456900e+04 * invT) *
      0.0226999296302181;
    // species 28: nc3h7
    result +=
      y[28] *
      (+7.97829100e+00 + 7.88056500e-03 * T - 1.72441433e-06 * T2 +
       1.86097300e-10 * T3 - 7.64995600e-15 * T4 + 7.57940200e+03 * invT) *
      0.0232077792476038;
    // species 48: c3h3
    result +=
      y[48] *
      (+8.83104700e+00 + 2.17859750e-03 * T - 1.36968900e-07 * T2 -
       5.92180750e-11 * T3 + 8.75304000e-15 * T4 + 3.84742000e+04 * invT) *
      0.0256036049875823;
    // species 49: c3h2
    result +=
      y[49] *
      (+7.67098100e+00 + 1.37437450e-03 * T - 1.45698100e-07 * T2 -
       1.61389975e-11 * T3 + 3.32777400e-15 * T4 + 6.25972200e+04 * invT) *
      0.0262818996557071;
    // species 50: ch2(s)
    result +=
      y[50] *
      (+3.55288900e+00 + 1.03339400e-03 * T - 6.38038667e-08 * T2 -
       2.76168250e-11 * T3 + 4.04270000e-15 * T4 + 4.98497500e+04 * invT) *
      0.0712910814857061;
    // species 87: n2
    result +=
      y[87] *
      (+2.92664000e+00 + 7.43988500e-04 * T - 1.89492033e-07 * T2 +
       2.52426000e-11 * T3 - 1.35067020e-15 * T4 - 9.22797700e+02 * invT) *
      0.0356964374955379;
  }

  // species with midpoint at T=1357 kelvin
  if (T < 1357) {
    // species 4: oh
    result +=
      y[4] *
      (+3.43586219e+00 + 1.01117902e-04 * T - 3.78488040e-08 * T2 +
       6.06112872e-11 * T3 - 1.48730206e-14 * T4 + 3.74321252e+03 * invT) *
      0.0587993179279120;
  } else {
    // species 4: oh
    result +=
      y[4] *
      (+2.62599754e+00 + 6.59962030e-04 * T - 1.19908223e-07 * T2 +
       1.06407700e-11 * T3 - 3.64096032e-16 * T4 + 4.12085374e+03 * invT) *
      0.0587993179279120;
  }

  // species with midpoint at T=1373 kelvin
  if (T < 1373) {
    // species 34: c2h5co
    result +=
      y[34] *
      (+2.93313946e+00 + 1.23713956e-02 * T - 4.04073343e-06 * T2 +
       5.86752620e-10 * T3 - 1.05368668e-14 * T4 - 5.69663063e+03 * invT) *
      0.0175217269414073;
  } else {
    // species 34: c2h5co
    result +=
      y[34] *
      (+9.87881997e+00 + 5.87578380e-03 * T - 1.33538308e-06 * T2 +
       1.55212654e-10 * T3 - 7.19670450e-15 * T4 - 8.47292283e+03 * invT) *
      0.0175217269414073;
  }

  // species with midpoint at T=1377 kelvin
  if (T < 1377) {
    // species 45: c4h8ooh1-3
    result +=
      y[45] *
      (+1.94106276e+00 + 2.59394676e-02 * T - 1.03470561e-05 * T2 +
       2.15892220e-09 * T3 - 1.68568399e-13 * T4 - 4.34315962e+03 * invT) *
      0.0112215813452432;
  } else {
    // species 45: c4h8ooh1-3
    result +=
      y[45] *
      (+1.76442170e+01 + 9.58532680e-03 * T - 2.19056214e-06 * T2 +
       2.55616428e-10 * T3 - 1.18860947e-14 * T4 - 1.01859280e+04 * invT) *
      0.0112215813452432;
  }

  // species with midpoint at T=1378 kelvin
  if (T < 1378) {
    // species 33: c2h5cho
    result +=
      y[33] *
      (+2.16308444e+00 + 1.47750632e-02 * T - 5.08154173e-06 * T2 +
       8.73759867e-10 * T3 - 4.77793254e-14 * T4 - 2.42260137e+04 * invT) *
      0.0172176308539945;
    // species 52: nc3h7cho
    result +=
      y[52] *
      (+1.87415959e+00 + 2.09620158e-02 * T - 7.83829263e-06 * T2 +
       1.56728418e-09 * T3 - 1.21888782e-13 * T4 - 2.71032194e+04 * invT) *
      0.0138682790852483;
  } else {
    // species 33: c2h5cho
    result +=
      y[33] *
      (+1.02427695e+01 + 6.98209945e-03 * T - 1.58749334e-06 * T2 +
       1.84526426e-10 * T3 - 8.55519006e-15 * T4 - 2.74143135e+04 * invT) *
      0.0172176308539945;
    // species 52: nc3h7cho
    result +=
      y[52] *
      (+1.35988068e+01 + 9.08262370e-03 * T - 2.05948153e-06 * T2 +
       2.38995052e-10 * T3 - 1.10688592e-14 * T4 - 3.15845348e+04 * invT) *
      0.0138682790852483;
  }

  // species with midpoint at T=1380 kelvin
  if (T < 1380) {
    // species 42: c3h5o
    result +=
      y[42] *
      (+1.19822582e+00 + 1.52789918e-02 * T - 6.02100920e-06 * T2 +
       1.21537508e-09 * T3 - 8.39709124e-14 * T4 + 9.58217784e+03 * invT) *
      0.0175217269414073;
    // species 53: nc3h7co
    result +=
      y[53] *
      (+2.67256826e+00 + 1.85599412e-02 * T - 6.89542863e-06 * T2 +
       1.37218472e-09 * T3 - 1.07172837e-13 * T4 - 8.58050888e+03 * invT) *
      0.0140648954275025;
  } else {
    // species 42: c3h5o
    result +=
      y[42] *
      (+1.02551752e+01 + 5.74918600e-03 * T - 1.28215220e-06 * T2 +
       1.47227587e-10 * T3 - 6.77115846e-15 * T4 + 6.26560810e+03 * invT) *
      0.0175217269414073;
    // species 53: nc3h7co
    result +=
      y[53] *
      (+1.30026331e+01 + 8.15524385e-03 * T - 1.85880966e-06 * T2 +
       2.16417657e-10 * T3 - 1.00451133e-14 * T4 - 1.25523385e+04 * invT) *
      0.0140648954275025;
  }

  // species with midpoint at T=1381 kelvin
  if (T < 1381) {
    // species 56: nc4h9cho
    result +=
      y[56] *
      (+1.59663472e+00 + 2.71770708e-02 * T - 1.07006884e-05 * T2 +
       2.33943390e-09 * T3 - 2.13377864e-13 * T4 - 2.99841025e+04 * invT) *
      0.0116098172614763;
  } else {
    // species 56: nc4h9cho
    result +=
      y[56] *
      (+1.67965163e+01 + 1.12842260e-02 * T - 2.55877196e-06 * T2 +
       2.96923422e-10 * T3 - 1.37509111e-14 * T4 - 3.56826080e+04 * invT) *
      0.0116098172614763;
  }

  // species with midpoint at T=1382 kelvin
  if (T < 1382) {
    // species 57: nc4h9co
    result +=
      y[57] *
      (+2.43530238e+00 + 2.46841188e-02 * T - 9.66276940e-06 * T2 +
       2.10715953e-09 * T3 - 1.93657434e-13 * T4 - 1.14675541e+04 * invT) *
      0.0117472922491366;
    // species 60: c7h15-2
    result +=
      y[60] *
      (-3.79155767e-02 + 3.78363285e-02 * T - 1.35824545e-05 * T2 +
       2.33169736e-09 * T3 - 9.84721490e-14 * T4 - 2.35605303e+03 * invT) *
      0.0100809500287307;
    // species 61: c7h15-3
    result +=
      y[61] *
      (-3.79155767e-02 + 3.78363285e-02 * T - 1.35824545e-05 * T2 +
       2.33169736e-09 * T3 - 9.84721490e-14 * T4 - 2.35605303e+03 * invT) *
      0.0100809500287307;
    // species 62: c7h15-4
    result +=
      y[62] *
      (-3.79155767e-02 + 3.78363285e-02 * T - 1.35824545e-05 * T2 +
       2.33169736e-09 * T3 - 9.84721490e-14 * T4 - 2.35605303e+03 * invT) *
      0.0100809500287307;
  } else {
    // species 57: nc4h9co
    result +=
      y[57] *
      (+1.61782939e+01 + 1.03995960e-02 * T - 2.37262631e-06 * T2 +
       2.76399937e-10 * T3 - 1.28339437e-14 * T4 - 1.66537752e+04 * invT) *
      0.0117472922491366;
    // species 60: c7h15-2
    result +=
      y[60] *
      (+2.16368842e+01 + 1.61662402e-02 * T - 3.64246023e-06 * T2 +
       4.20892650e-10 * T3 - 1.94354818e-14 * T4 - 1.05873616e+04 * invT) *
      0.0100809500287307;
    // species 61: c7h15-3
    result +=
      y[61] *
      (+2.16368842e+01 + 1.61662402e-02 * T - 3.64246023e-06 * T2 +
       4.20892650e-10 * T3 - 1.94354818e-14 * T4 - 1.05873616e+04 * invT) *
      0.0100809500287307;
    // species 62: c7h15-4
    result +=
      y[62] *
      (+2.16368842e+01 + 1.61662402e-02 * T - 3.64246023e-06 * T2 +
       4.20892650e-10 * T3 - 1.94354818e-14 * T4 - 1.05873616e+04 * invT) *
      0.0100809500287307;
  }

  // species with midpoint at T=1383 kelvin
  if (T < 1383) {
    // species 54: c2h5coch2
    result +=
      y[54] *
      (+1.54013856e+00 + 2.19743129e-02 * T - 9.90008070e-06 * T2 +
       2.63738282e-09 * T3 - 3.17197538e-13 * T4 - 9.50796505e+03 * invT) *
      0.0140648954275025;
    // species 69: c7h14ooh1-3
    result +=
      y[69] *
      (+1.11146206e+00 + 4.45797696e-02 * T - 1.89117461e-05 * T2 +
       4.47225235e-09 * T3 - 4.44520412e-13 * T4 - 1.29868314e+04 * invT) *
      0.0076222417012843;
  } else {
    // species 54: c2h5coch2
    result +=
      y[54] *
      (+1.42098738e+01 + 7.89332295e-03 * T - 1.83509728e-06 * T2 +
       2.16467635e-10 * T3 - 1.01382666e-14 * T4 - 1.41284951e+04 * invT) *
      0.0140648954275025;
    // species 69: c7h14ooh1-3
    result +=
      y[69] *
      (+2.72290222e+01 + 1.62460950e-02 * T - 3.70865860e-06 * T2 +
       4.32322195e-10 * T3 - 2.00856652e-14 * T4 - 2.24977070e+04 * invT) *
      0.0076222417012843;
  }

  // species with midpoint at T=1384 kelvin
  if (T < 1384) {
    // species 15: c2h6
    result +=
      y[15] *
      (-2.52854344e-02 + 1.20382377e-02 * T - 3.72978240e-06 * T2 +
       5.20852252e-10 * T3 - 1.05973723e-14 * T4 - 1.12345534e+04 * invT) *
      0.0332557366145660;
  } else {
    // species 15: c2h6
    result +=
      y[15] *
      (+6.10683385e+00 + 6.46181805e-03 * T - 1.47509065e-06 * T2 +
       1.71847932e-10 * T3 - 7.97803464e-15 * T4 - 1.37500014e+04 * invT) *
      0.0332557366145660;
  }

  // species with midpoint at T=1385 kelvin
  if (T < 1385) {
    // species 38: ch3o2
    result +=
      y[38] *
      (+4.26146906e+00 + 5.04367995e-03 * T - 1.07168728e-06 * T2 +
       5.23523168e-11 * T3 + 8.36678206e-15 * T4 - 6.84394259e+02 * invT) *
      0.0212616673399528;
    // species 46: pc4h9o2
    result +=
      y[46] *
      (+1.94363650e+00 + 2.57756581e-02 * T - 1.09428133e-05 * T2 +
       2.82662150e-09 * T3 - 3.40237212e-13 * T4 - 1.08358103e+04 * invT) *
      0.0112215813452432;
  } else {
    // species 38: ch3o2
    result +=
      y[38] *
      (+5.95787891e+00 + 3.95364313e-03 * T - 8.94154113e-07 * T2 +
       1.03472834e-10 * T3 - 4.78014660e-15 * T4 - 1.53574838e+03 * invT) *
      0.0212616673399528;
    // species 46: pc4h9o2
    result +=
      y[46] *
      (+1.57845448e+01 + 1.07605455e-02 * T - 2.48303006e-06 * T2 +
       2.91395178e-10 * T3 - 1.35977122e-14 * T4 - 1.60146054e+04 * invT) *
      0.0112215813452432;
  }

  // species with midpoint at T=1386 kelvin
  if (T < 1386) {
    // species 51: nc4ket13
    result +=
      y[51] *
      (+2.74883461e+00 + 2.93468373e-02 * T - 1.49868632e-05 * T2 +
       4.58000325e-09 * T3 - 6.23530738e-13 * T4 - 4.01065878e+04 * invT) *
      0.0096056865664473;
    // species 86: nc7ket42
    result +=
      y[86] *
      (+2.32269738e+00 + 4.72580075e-02 * T - 2.33019060e-05 * T2 +
       6.99432290e-09 * T3 - 9.48488862e-13 * T4 - 5.27586830e+04 * invT) *
      0.0068406003310851;
  } else {
    // species 51: nc4ket13
    result +=
      y[51] *
      (+1.96430808e+01 + 9.04702830e-03 * T - 2.11021077e-06 * T2 +
       2.49465100e-10 * T3 - 1.17015292e-14 * T4 - 4.59588851e+04 * invT) *
      0.0096056865664473;
    // species 86: nc7ket42
    result +=
      y[86] *
      (+2.86572867e+01 + 1.60783954e-02 * T - 3.73205233e-06 * T2 +
       4.39737500e-10 * T3 - 2.05783920e-14 * T4 - 6.20252988e+04 * invT) *
      0.0068406003310851;
  }

  // species with midpoint at T=1387 kelvin
  if (T < 1387) {
    // species 44: c4h8ooh1-3o2
    result +=
      y[44] *
      (+2.22400728e+00 + 3.52497310e-02 * T - 1.88992942e-05 * T2 +
       6.06569377e-09 * T3 - 8.59430918e-13 * T4 - 2.37391490e+04 * invT) *
      0.0082568201334302;
    // species 84: nc7ket24
    result +=
      y[84] *
      (+1.52936692e+00 + 4.79086733e-02 * T - 2.32229507e-05 * T2 +
       6.73850955e-09 * T3 - 8.77456252e-13 * T4 - 5.23839542e+04 * invT) *
      0.0068406003310851;
    // species 85: nc7ket35
    result +=
      y[85] *
      (+1.52936692e+00 + 4.79086733e-02 * T - 2.32229507e-05 * T2 +
       6.73850955e-09 * T3 - 8.77456252e-13 * T4 - 5.23839542e+04 * invT) *
      0.0068406003310851;
  } else {
    // species 44: c4h8ooh1-3o2
    result +=
      y[44] *
      (+2.23244015e+01 + 1.02737388e-02 * T - 2.39692116e-06 * T2 +
       2.83403840e-10 * T3 - 1.32948877e-14 * T4 - 3.05468277e+04 * invT) *
      0.0082568201334302;
    // species 84: nc7ket24
    result +=
      y[84] *
      (+2.88330388e+01 + 1.60084048e-02 * T - 3.71694853e-06 * T2 +
       4.38065397e-10 * T3 - 2.05040902e-14 * T4 - 6.20142474e+04 * invT) *
      0.0068406003310851;
    // species 85: nc7ket35
    result +=
      y[85] *
      (+2.88330388e+01 + 1.60084048e-02 * T - 3.71694853e-06 * T2 +
       4.38065397e-10 * T3 - 2.05040902e-14 * T4 - 6.20142474e+04 * invT) *
      0.0068406003310851;
  }

  // species with midpoint at T=1388 kelvin
  if (T < 1388) {
    // species 26: c3h6
    result +=
      y[26] *
      (+3.94615444e-01 + 1.44553831e-02 * T - 5.16289360e-06 * T2 +
       9.72035522e-10 * T3 - 6.75780704e-14 * T4 + 1.06688164e+03 * invT) *
      0.0237636938285687;
    // species 65: c7h15o2-1
    result +=
      y[65] *
      (+1.20888552e+00 + 4.42030853e-02 * T - 1.93287087e-05 * T2 +
       5.08936723e-09 * T3 - 6.12920672e-13 * T4 - 1.92918765e+04 * invT) *
      0.0076222417012843;
    // species 77: c7h14ooh1-3o2
    result +=
      y[77] *
      (+1.89718004e+00 + 5.31148980e-02 * T - 2.67590073e-05 * T2 +
       8.09122732e-09 * T3 - 1.09170094e-12 * T4 - 3.22790229e+04 * invT) *
      0.0061277138112542;
    // species 83: nc7ket13
    result +=
      y[83] *
      (+2.21629328e+00 + 4.73686881e-02 * T - 2.30157884e-05 * T2 +
       6.69551000e-09 * T3 - 8.72784362e-13 * T4 - 4.87965510e+04 * invT) *
      0.0068406003310851;
  } else {
    // species 26: c3h6
    result +=
      y[26] *
      (+8.01595958e+00 + 6.85118170e-03 * T - 1.55416578e-06 * T2 +
       1.80313601e-10 * T3 - 8.34740252e-15 * T4 - 1.87821271e+03 * invT) *
      0.0237636938285687;
    // species 65: c7h15o2-1
    result +=
      y[65] *
      (+2.52656556e+01 + 1.75401794e-02 * T - 4.03929337e-06 * T2 +
       4.73402015e-10 * T3 - 2.20708250e-14 * T4 - 2.81113392e+04 * invT) *
      0.0076222417012843;
    // species 77: c7h14ooh1-3o2
    result +=
      y[77] *
      (+3.20144349e+01 + 1.70027998e-02 * T - 3.94719520e-06 * T2 +
       4.65150867e-10 * T3 - 2.17702024e-14 * T4 - 4.27171859e+04 * invT) *
      0.0061277138112542;
    // species 83: nc7ket13
    result +=
      y[83] *
      (+2.90744507e+01 + 1.58588729e-02 * T - 3.67542153e-06 * T2 +
       4.32634020e-10 * T3 - 2.02323398e-14 * T4 - 5.82345477e+04 * invT) *
      0.0068406003310851;
  }

  // species with midpoint at T=1389 kelvin
  if (T < 1389) {
    // species 37: c2h5o
    result +=
      y[37] *
      (+4.94420708e-01 + 1.35887217e-02 * T - 5.53030033e-06 * T2 +
       1.28801050e-09 * T3 - 1.29699383e-13 * T4 - 3.35252925e+03 * invT) *
      0.0221921395441735;
    // species 55: nc3h7coch2
    result +=
      y[55] *
      (+9.58299271e-01 + 2.84081266e-02 * T - 1.33037594e-05 * T2 +
       3.81678785e-09 * T3 - 4.98442094e-13 * T4 - 1.23062238e+04 * invT) *
      0.0117472922491366;
    // species 70: c7h14ooh2-3
    result +=
      y[70] *
      (+8.49786005e-01 + 4.62553598e-02 * T - 2.08453278e-05 * T2 +
       5.44700975e-09 * T3 - 6.25440796e-13 * T4 - 1.53640679e+04 * invT) *
      0.0076222417012843;
    // species 71: c7h14ooh2-4
    result +=
      y[71] *
      (+8.49786005e-01 + 4.62553598e-02 * T - 2.08453278e-05 * T2 +
       5.44700975e-09 * T3 - 6.25440796e-13 * T4 - 1.53640679e+04 * invT) *
      0.0076222417012843;
    // species 72: c7h14ooh3-2
    result +=
      y[72] *
      (+8.49786005e-01 + 4.62553598e-02 * T - 2.08453278e-05 * T2 +
       5.44700975e-09 * T3 - 6.25440796e-13 * T4 - 1.53640679e+04 * invT) *
      0.0076222417012843;
    // species 73: c7h14ooh3-4
    result +=
      y[73] *
      (+8.49786005e-01 + 4.62553598e-02 * T - 2.08453278e-05 * T2 +
       5.44700975e-09 * T3 - 6.25440796e-13 * T4 - 1.53640679e+04 * invT) *
      0.0076222417012843;
    // species 74: c7h14ooh3-5
    result +=
      y[74] *
      (+8.49786005e-01 + 4.62553598e-02 * T - 2.08453278e-05 * T2 +
       5.44700975e-09 * T3 - 6.25440796e-13 * T4 - 1.53640679e+04 * invT) *
      0.0076222417012843;
    // species 75: c7h14ooh4-2
    result +=
      y[75] *
      (+8.49786005e-01 + 4.62553598e-02 * T - 2.08453278e-05 * T2 +
       5.44700975e-09 * T3 - 6.25440796e-13 * T4 - 1.53640679e+04 * invT) *
      0.0076222417012843;
    // species 76: c7h14ooh4-3
    result +=
      y[76] *
      (+8.49786005e-01 + 4.62553598e-02 * T - 2.08453278e-05 * T2 +
       5.44700975e-09 * T3 - 6.25440796e-13 * T4 - 1.53640679e+04 * invT) *
      0.0076222417012843;
  } else {
    // species 37: c2h5o
    result +=
      y[37] *
      (+7.87339772e+00 + 5.65364535e-03 * T - 1.28140474e-06 * T2 +
       1.48603526e-10 * T3 - 6.87789076e-15 * T4 - 6.07274953e+03 * invT) *
      0.0221921395441735;
    // species 55: nc3h7coch2
    result +=
      y[55] *
      (+1.61502419e+01 + 1.07046733e-02 * T - 2.45353205e-06 * T2 +
       2.86642040e-10 * T3 - 1.33342544e-14 * T4 - 1.76968561e+04 * invT) *
      0.0117472922491366;
    // species 70: c7h14ooh2-3
    result +=
      y[70] *
      (+2.74034778e+01 + 1.63763947e-02 * T - 3.76639233e-06 * T2 +
       4.41111622e-10 * T3 - 2.05573890e-14 * T4 - 2.48636651e+04 * invT) *
      0.0076222417012843;
    // species 71: c7h14ooh2-4
    result +=
      y[71] *
      (+2.74034778e+01 + 1.63763947e-02 * T - 3.76639233e-06 * T2 +
       4.41111622e-10 * T3 - 2.05573890e-14 * T4 - 2.48636651e+04 * invT) *
      0.0076222417012843;
    // species 72: c7h14ooh3-2
    result +=
      y[72] *
      (+2.74034778e+01 + 1.63763947e-02 * T - 3.76639233e-06 * T2 +
       4.41111622e-10 * T3 - 2.05573890e-14 * T4 - 2.48636651e+04 * invT) *
      0.0076222417012843;
    // species 73: c7h14ooh3-4
    result +=
      y[73] *
      (+2.74034778e+01 + 1.63763947e-02 * T - 3.76639233e-06 * T2 +
       4.41111622e-10 * T3 - 2.05573890e-14 * T4 - 2.48636651e+04 * invT) *
      0.0076222417012843;
    // species 74: c7h14ooh3-5
    result +=
      y[74] *
      (+2.74034778e+01 + 1.63763947e-02 * T - 3.76639233e-06 * T2 +
       4.41111622e-10 * T3 - 2.05573890e-14 * T4 - 2.48636651e+04 * invT) *
      0.0076222417012843;
    // species 75: c7h14ooh4-2
    result +=
      y[75] *
      (+2.74034778e+01 + 1.63763947e-02 * T - 3.76639233e-06 * T2 +
       4.41111622e-10 * T3 - 2.05573890e-14 * T4 - 2.48636651e+04 * invT) *
      0.0076222417012843;
    // species 76: c7h14ooh4-3
    result +=
      y[76] *
      (+2.74034778e+01 + 1.63763947e-02 * T - 3.76639233e-06 * T2 +
       4.41111622e-10 * T3 - 2.05573890e-14 * T4 - 2.48636651e+04 * invT) *
      0.0076222417012843;
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 11: ho2
    result +=
      y[11] *
      (+3.18310656e+00 + 1.83383975e-03 * T - 3.10795041e-07 * T2 -
       8.14632298e-11 * T3 + 3.02279824e-14 * T4 + 8.09181013e+02 * invT) *
      0.0302975216627280;
    // species 39: ch3o2h
    result +=
      y[39] *
      (+3.23442817e+00 + 9.50648835e-03 * T - 3.77954290e-06 * T2 +
       8.50766632e-10 * T3 - 8.23660444e-14 * T4 - 1.77197926e+04 * invT) *
      0.0208155533814866;
    // species 59: c7h15-1
    result +=
      y[59] *
      (-4.99570406e-01 + 4.04413234e-02 * T - 1.66844251e-05 * T2 +
       3.91373270e-09 * T3 - 3.93232454e-13 * T4 - 1.04590223e+03 * invT) *
      0.0100809500287307;
    // species 63: c7h14-2
    result +=
      y[63] *
      (-1.16533279e+00 + 3.95219903e-02 * T - 1.65367222e-05 * T2 +
       3.96422523e-09 * T3 - 4.10692866e-13 * T4 - 1.17362359e+04 * invT) *
      0.0101844402122437;
    // species 66: c7h15o2-2
    result +=
      y[66] *
      (+3.55252917e-01 + 4.71190503e-02 * T - 2.22318369e-05 * T2 +
       6.36988958e-09 * T3 - 8.26422210e-13 * T4 - 2.15795254e+04 * invT) *
      0.0076222417012843;
    // species 67: c7h15o2-3
    result +=
      y[67] *
      (+3.55252917e-01 + 4.71190503e-02 * T - 2.22318369e-05 * T2 +
       6.36988958e-09 * T3 - 8.26422210e-13 * T4 - 2.15795254e+04 * invT) *
      0.0076222417012843;
    // species 68: c7h15o2-4
    result +=
      y[68] *
      (+3.55252917e-01 + 4.71190503e-02 * T - 2.22318369e-05 * T2 +
       6.36988958e-09 * T3 - 8.26422210e-13 * T4 - 2.15795254e+04 * invT) *
      0.0076222417012843;
    // species 78: c7h14ooh2-4o2
    result +=
      y[78] *
      (+1.40912479e+00 + 5.53604170e-02 * T - 2.90392692e-05 * T2 +
       9.09156872e-09 * T3 - 1.25670138e-12 * T4 - 3.46304788e+04 * invT) *
      0.0061277138112542;
    // species 79: c7h14ooh3-5o2
    result +=
      y[79] *
      (+1.40912479e+00 + 5.53604170e-02 * T - 2.90392692e-05 * T2 +
       9.09156872e-09 * T3 - 1.25670138e-12 * T4 - 3.46304788e+04 * invT) *
      0.0061277138112542;
    // species 80: c7h14ooh4-2o2
    result +=
      y[80] *
      (+1.40912479e+00 + 5.53604170e-02 * T - 2.90392692e-05 * T2 +
       9.09156872e-09 * T3 - 1.25670138e-12 * T4 - 3.46304788e+04 * invT) *
      0.0061277138112542;
  } else {
    // species 11: ho2
    result +=
      y[11] *
      (+4.10547423e+00 + 1.19226417e-03 * T - 2.68782663e-07 * T2 +
       3.10479308e-11 * T3 - 1.43280022e-15 * T4 + 3.98127689e+02 * invT) *
      0.0302975216627280;
    // species 39: ch3o2h
    result +=
      y[39] *
      (+8.43117091e+00 + 4.03408955e-03 * T - 9.23649737e-07 * T2 +
       1.07833061e-10 * T3 - 5.01384292e-15 * T4 - 1.96678771e+04 * invT) *
      0.0208155533814866;
    // species 59: c7h15-1
    result +=
      y[59] *
      (+2.17940709e+01 + 1.63140122e-02 * T - 3.70460813e-06 * T2 +
       4.30167870e-10 * T3 - 1.99273400e-14 * T4 - 9.20938221e+03 * invT) *
      0.0100809500287307;
    // species 63: c7h14-2
    result +=
      y[63] *
      (+2.06192047e+01 + 1.57426496e-02 * T - 3.57206857e-06 * T2 +
       4.14569155e-10 * T3 - 1.91982357e-14 * T4 - 1.96713162e+04 * invT) *
      0.0101844402122437;
    // species 66: c7h15o2-2
    result +=
      y[66] *
      (+2.60535640e+01 + 1.71915844e-02 * T - 3.95710823e-06 * T2 +
       4.63625602e-10 * T3 - 2.16104798e-14 * T4 - 3.06842095e+04 * invT) *
      0.0076222417012843;
    // species 67: c7h15o2-3
    result +=
      y[67] *
      (+2.60535640e+01 + 1.71915844e-02 * T - 3.95710823e-06 * T2 +
       4.63625602e-10 * T3 - 2.16104798e-14 * T4 - 3.06842095e+04 * invT) *
      0.0076222417012843;
    // species 68: c7h15o2-4
    result +=
      y[68] *
      (+2.60535640e+01 + 1.71915844e-02 * T - 3.95710823e-06 * T2 +
       4.63625602e-10 * T3 - 2.16104798e-14 * T4 - 3.06842095e+04 * invT) *
      0.0076222417012843;
    // species 78: c7h14ooh2-4o2
    result +=
      y[78] *
      (+3.28358296e+01 + 1.66383642e-02 * T - 3.86110950e-06 * T2 +
       4.54896595e-10 * T3 - 2.12868838e-14 * T4 - 4.52873003e+04 * invT) *
      0.0061277138112542;
    // species 79: c7h14ooh3-5o2
    result +=
      y[79] *
      (+3.28358296e+01 + 1.66383642e-02 * T - 3.86110950e-06 * T2 +
       4.54896595e-10 * T3 - 2.12868838e-14 * T4 - 4.52873003e+04 * invT) *
      0.0061277138112542;
    // species 80: c7h14ooh4-2o2
    result +=
      y[80] *
      (+3.28358296e+01 + 1.66383642e-02 * T - 3.86110950e-06 * T2 +
       4.54896595e-10 * T3 - 2.12868838e-14 * T4 - 4.52873003e+04 * invT) *
      0.0061277138112542;
  }

  // species with midpoint at T=1391 kelvin
  if (T < 1391) {
    // species 32: ch3coch2
    result +=
      y[32] *
      (+1.80339187e+00 + 1.50703542e-02 * T - 6.45018507e-06 * T2 +
       1.59549759e-09 * T3 - 1.73220636e-13 * T4 - 5.37233261e+03 * invT) *
      0.0175217269414073;
    // species 58: nc7h16
    result +=
      y[58] *
      (-1.26836187e+00 + 4.27177910e-02 * T - 1.75115595e-05 * T2 +
       4.07364302e-09 * T3 - 4.04789850e-13 * T4 - 2.56586565e+04 * invT) *
      0.0099795419390250;
  } else {
    // species 32: ch3coch2
    result +=
      y[32] *
      (+1.02303975e+01 + 5.82470805e-03 * T - 1.33668512e-06 * T2 +
       1.56301312e-10 * T3 - 7.27568724e-15 * T4 - 8.44380462e+03 * invT) *
      0.0175217269414073;
    // species 58: nc7h16
    result +=
      y[58] *
      (+2.22148969e+01 + 1.73837875e-02 * T - 3.94690430e-06 * T2 +
       4.58246195e-10 * T3 - 2.12260532e-14 * T4 - 3.42760081e+04 * invT) *
      0.0099795419390250;
  }

  // species with midpoint at T=1392 kelvin
  if (T < 1392) {
    // species 29: c4h7
    result +=
      y[29] *
      (-3.50508352e-01 + 2.13255622e-02 * T - 9.69931243e-06 * T2 +
       2.63509785e-09 * T3 - 3.20119708e-13 * T4 + 1.49933591e+04 * invT) *
      0.0181488203266788;
    // species 30: c4h8-1
    result +=
      y[30] *
      (-8.31372089e-01 + 2.26290489e-02 * T - 9.78861863e-06 * T2 +
       2.50551090e-09 * T3 - 2.86383360e-13 * T4 - 1.57875035e+03 * invT) *
      0.0178227703714265;
    // species 35: c5h9
    result +=
      y[35] *
      (-1.38013950e+00 + 2.78804243e-02 * T - 1.23381309e-05 * T2 +
       3.17209752e-09 * T3 - 3.57077670e-13 * T4 + 1.25589824e+04 * invT) *
      0.0144661275623128;
    // species 36: c5h10-1
    result +=
      y[36] *
      (-1.06223481e+00 + 2.87109147e-02 * T - 1.24828963e-05 * T2 +
       3.18412472e-09 * T3 - 3.59219578e-13 * T4 - 4.46546666e+03 * invT) *
      0.0142582162971412;
    // species 64: c7h14-3
    result +=
      y[64] *
      (-2.03026994e+00 + 4.13162189e-02 * T - 1.81838157e-05 * T2 +
       4.69264555e-09 * T3 - 5.35142440e-13 * T4 - 1.15141029e+04 * invT) *
      0.0101844402122437;
  } else {
    // species 29: c4h7
    result +=
      y[29] *
      (+1.12103578e+01 + 8.02415980e-03 * T - 1.82167431e-06 * T2 +
       2.11485263e-10 * T3 - 9.79545478e-15 * T4 + 1.09041937e+04 * invT) *
      0.0181488203266788;
    // species 30: c4h8-1
    result +=
      y[30] *
      (+1.13508668e+01 + 9.03089385e-03 * T - 2.05364343e-06 * T2 +
       2.38663240e-10 * T3 - 1.10617928e-14 * T4 - 5.97871038e+03 * invT) *
      0.0178227703714265;
    // species 35: c5h9
    result +=
      y[35] *
      (+1.41860454e+01 + 1.03564449e-02 * T - 2.35653539e-06 * T2 +
       2.74017833e-10 * T3 - 1.27064442e-14 * T4 + 7.00496135e+03 * invT) *
      0.0144661275623128;
    // species 36: c5h10-1
    result +=
      y[36] *
      (+1.45851539e+01 + 1.12036235e-02 * T - 2.54449342e-06 * T2 +
       2.95472415e-10 * T3 - 1.36877028e-14 * T4 - 1.00898205e+04 * invT) *
      0.0142582162971412;
    // species 64: c7h14-3
    result +=
      y[64] *
      (+2.06822750e+01 + 1.57694314e-02 * T - 3.58570717e-06 * T2 +
       4.16725650e-10 * T3 - 1.93162079e-14 * T4 - 1.96450604e+04 * invT) *
      0.0101844402122437;
  }

  // species with midpoint at T=1393 kelvin
  if (T < 1393) {
    // species 41: c2h3cho
    result +=
      y[41] *
      (+2.92355162e-01 + 1.77160709e-02 * T - 9.83121080e-06 * T2 +
       3.20250310e-09 * T3 - 4.52288216e-13 * T4 - 1.16521584e+04 * invT) *
      0.0178367579908676;
  } else {
    // species 41: c2h3cho
    result +=
      y[41] *
      (+1.04184959e+01 + 4.74481661e-03 * T - 1.09770176e-06 * T2 +
       1.29069801e-10 * T3 - 6.03174582e-15 * T4 - 1.49630281e+04 * invT) *
      0.0178367579908676;
  }

  // species with midpoint at T=1395 kelvin
  if (T < 1395) {
    // species 31: pc4h9
    result +=
      y[31] *
      (-4.37779725e-01 + 2.39486182e-02 * T - 1.04674386e-05 * T2 +
       2.74466180e-09 * T3 - 3.24021328e-13 * T4 + 7.68945248e+03 * invT) *
      0.0175082288675678;
    // species 43: c4h7o
    result +=
      y[43] *
      (-1.60619192e+00 + 2.79281341e-02 * T - 1.45198589e-05 * T2 +
       4.26473197e-09 * T3 - 5.31270360e-13 * T4 + 4.85090326e+03 * invT) *
      0.0140648954275025;
    // species 81: c7h14o1-3
    result +=
      y[81] *
      (-5.50036450e+00 + 5.00775440e-02 * T - 2.43311952e-05 * T2 +
       6.98360675e-09 * T3 - 8.84491392e-13 * T4 - 2.44292287e+04 * invT) *
      0.0087574876519424;
  } else {
    // species 31: pc4h9
    result +=
      y[31] *
      (+1.21510082e+01 + 9.71553585e-03 * T - 2.20525983e-06 * T2 +
       2.55937840e-10 * T3 - 1.18505941e-14 * T4 + 3.17231942e+03 * invT) *
      0.0175082288675678;
    // species 43: c4h7o
    result +=
      y[43] *
      (+1.53137780e+01 + 7.17135085e-03 * T - 1.60541839e-06 * T2 +
       1.84893710e-10 * T3 - 8.52281628e-15 * T4 - 7.29342884e+02 * invT) *
      0.0140648954275025;
    // species 81: c7h14o1-3
    result +=
      y[81] *
      (+2.26918916e+01 + 1.66255236e-02 * T - 3.81525883e-06 * T2 +
       4.46138838e-10 * T3 - 2.07682224e-14 * T4 - 3.41591419e+04 * invT) *
      0.0087574876519424;
  }

  // species with midpoint at T=1397 kelvin
  if (T < 1397) {
    // species 47: c3h5-a
    result +=
      y[47] *
      (-5.29131958e-01 + 1.67279550e-02 * T - 8.44670090e-06 * T2 +
       2.57164385e-09 * T3 - 3.46516680e-13 * T4 + 1.93834226e+04 * invT) *
      0.0243468945535997;
  } else {
    // species 47: c3h5-a
    result +=
      y[47] *
      (+8.45883958e+00 + 5.63477415e-03 * T - 1.27930955e-06 * T2 +
       1.48514780e-10 * T3 - 6.87836060e-15 * T4 + 1.63576092e+04 * invT) *
      0.0243468945535997;
  }

  // species with midpoint at T=1398 kelvin
  if (T < 1398) {
    // species 27: c4h6
    result +=
      y[27] *
      (-1.43095121e+00 + 2.39353031e-02 * T - 1.38482267e-05 * T2 +
       4.78873880e-09 * T3 - 7.14317014e-13 * T4 + 1.17551314e+04 * invT) *
      0.0184870221104784;
  } else {
    // species 27: c4h6
    result +=
      y[27] *
      (+1.11633789e+01 + 6.85819825e-03 * T - 1.56571928e-06 * T2 +
       1.82423459e-10 * T3 - 8.46972406e-15 * T4 + 7.79039770e+03 * invT) *
      0.0184870221104784;
  }

  // species with midpoint at T=1399 kelvin
  if (T < 1399) {
    // species 82: c7h14o2-4
    result +=
      y[82] *
      (-5.39477206e+00 + 5.09232885e-02 * T - 2.53348745e-05 * T2 +
       7.41345050e-09 * T3 - 9.49708740e-13 * T4 - 2.67118295e+04 * invT) *
      0.0087574876519424;
  } else {
    // species 82: c7h14o2-4
    result +=
      y[82] *
      (+2.32692731e+01 + 1.62792695e-02 * T - 3.72083020e-06 * T2 +
       4.33934145e-10 * T3 - 2.01626430e-14 * T4 - 3.64349664e+04 * invT) *
      0.0087574876519424;
  }

  // species with midpoint at T=1400 kelvin
  if (T < 1400) {
    // species 25: c3h4-a
    result +=
      y[25] *
      (+2.53983100e+00 + 8.16718500e-03 * T - 5.88316667e-07 * T2 -
       1.16184125e-09 * T3 + 3.45826200e-13 * T4 + 2.25124300e+04 * invT) *
      0.0249594409085237;
  } else {
    // species 25: c3h4-a
    result +=
      y[25] *
      (+9.77625600e+00 + 2.65106900e-03 * T - 1.23370600e-07 * T2 -
       7.56596500e-11 * T3 + 1.01791620e-14 * T4 + 1.95497200e+04 * invT) *
      0.0249594409085237;
  }

  // species with midpoint at T=1402 kelvin
  if (T < 1402) {
    // species 40: c2h3co
    result +=
      y[40] *
      (+1.36242013e+00 + 1.57636986e-02 * T - 1.00072978e-05 * T2 +
       3.70417780e-09 * T3 - 5.75943060e-13 * T4 + 4.25770215e+03 * invT) *
      0.0181633246149375;
  } else {
    // species 40: c2h3co
    result +=
      y[40] *
      (+9.37467676e+00 + 3.95648450e-03 * T - 8.90660933e-07 * T2 +
       1.02778857e-10 * T3 - 4.73957962e-15 * T4 + 1.92969514e+03 * invT) *
      0.0181633246149375;
  }

  const amrex::Real RT = 8.31446261815324e+07 * T; // R*T

  hbms = result * RT;
}

// get mean internal energy in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUBML(const amrex::Real T, const amrex::Real x[], amrex::Real& ubml)
{
  amrex::Real result = 0;
  amrex::Real uml[88];                       //  temporary energy array
  amrex::Real RT = 8.31446261815324e+07 * T; // R*T
  speciesInternalEnergy(uml, T);

  // perform dot product
  for (int id = 0; id < 88; ++id) {
    result += x[id] * uml[id];
  }

  ubml = result * RT;
}

// get mean internal energy in mass units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUBMS(const amrex::Real T, const amrex::Real y[], amrex::Real& ubms)
{
  amrex::Real result = 0.0;
  const amrex::Real T2 = T * T;
  const amrex::Real T3 = T * T * T;
  const amrex::Real T4 = T * T * T * T;
  const amrex::Real invT = 1.0 / T;

  // species with no change across T
  // species 0: h
  result +=
    y[0] * (+1.50104422e+00 + 2.54747466e+04 * invT) * 0.9920634920634921;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 1: h2
    result +=
      y[1] *
      (+2.29812400e+00 + 4.12472100e-04 * T - 2.71433833e-07 * T2 -
       2.36885850e-11 * T3 + 8.26974400e-14 * T4 - 1.01252100e+03 * invT) *
      0.4960317460317460;
    // species 2: o
    result +=
      y[2] *
      (+1.94642900e+00 - 8.19083000e-04 * T + 8.07010667e-07 * T2 -
       4.00710750e-10 * T3 + 7.78139200e-14 * T4 + 2.91476400e+04 * invT) *
      0.0625039064941559;
    // species 3: o2
    result +=
      y[3] *
      (+2.21293600e+00 + 5.63743000e-04 * T - 1.91871667e-07 * T2 +
       3.28469250e-10 * T3 - 1.75371080e-13 * T4 - 1.00524900e+03 * invT) *
      0.0312519532470779;
    // species 5: h2o
    result +=
      y[5] *
      (+2.38684200e+00 + 1.73749100e-03 * T - 2.11823200e-06 * T2 +
       1.74214525e-09 * T3 - 5.01317600e-13 * T4 - 3.02081100e+04 * invT) *
      0.0555092978073827;
    // species 6: co
    result +=
      y[6] *
      (+2.26245200e+00 + 7.55970500e-04 * T - 1.29391833e-06 * T2 +
       1.39548600e-09 * T3 - 4.94990200e-13 * T4 - 1.43105400e+04 * invT) *
      0.0357015351660121;
    // species 7: hco
    result +=
      y[7] *
      (+1.89833000e+00 + 3.09957350e-03 * T - 3.20769467e-06 * T2 +
       2.72456250e-09 * T3 - 9.14977000e-13 * T4 + 4.15992200e+03 * invT) *
      0.0344613688055690;
    // species 8: co2
    result +=
      y[8] *
      (+1.27572500e+00 + 4.96103600e-03 * T - 3.46970333e-06 * T2 +
       1.71667175e-09 * T3 - 4.23456000e-13 * T4 - 4.83731400e+04 * invT) *
      0.0227226249176305;
    // species 9: ch3
    result +=
      y[9] *
      (+1.43044300e+00 + 5.56205000e-03 * T - 5.60073333e-06 * T2 +
       4.05457250e-09 * T3 - 1.17299060e-12 * T4 + 1.64237800e+04 * invT) *
      0.0665114732291320;
    // species 10: ch4
    result +=
      y[10] *
      (-2.21258500e-01 + 8.73834000e-03 * T - 9.27803000e-06 * T2 +
       7.62427000e-09 * T3 - 2.44786200e-12 * T4 - 9.82522900e+03 * invT) *
      0.0623324814560868;
    // species 12: h2o2
    result +=
      y[12] *
      (+2.38875400e+00 + 3.28461300e-03 * T - 4.95004333e-08 * T2 -
       1.15645150e-09 * T3 + 4.94303000e-13 * T4 - 1.76631500e+04 * invT) *
      0.0293996589639560;
    // species 13: ch2o
    result +=
      y[13] *
      (+6.52731000e-01 + 6.31572000e-03 * T - 6.29389333e-06 * T2 +
       5.12507750e-09 * T3 - 1.68264740e-12 * T4 - 1.48654000e+04 * invT) *
      0.0333044694598015;
    // species 14: ch3o
    result +=
      y[14] *
      (+1.10620400e+00 + 3.60829750e-03 * T + 1.77949067e-06 * T2 -
       1.84440900e-09 * T3 + 4.15122200e-13 * T4 + 9.78601100e+02 * invT) *
      0.0322227234645872;
    // species 16: c2h4
    result +=
      y[16] *
      (-1.86148800e+00 + 1.39808150e-02 * T - 1.12955900e-05 * T2 +
       6.96288000e-09 * T3 - 1.94757580e-12 * T4 + 5.57304600e+03 * invT) *
      0.0356455407428531;
    // species 17: c2h5
    result +=
      y[17] *
      (+1.69070200e+00 + 4.35956650e-03 * T + 1.47327967e-06 * T2 +
       2.33467575e-10 * T3 - 7.85554600e-13 * T4 + 1.28704000e+04 * invT) *
      0.0344091941366733;
    // species 18: c2h2
    result +=
      y[18] *
      (+1.01356200e+00 + 7.59522500e-03 * T - 5.38773000e-06 * T2 +
       2.26974800e-09 * T3 - 3.82549200e-13 * T4 + 2.61244400e+04 * invT) *
      0.0384054074813734;
    // species 19: c2h3
    result +=
      y[19] *
      (+1.45927600e+00 + 3.68573800e-03 * T + 7.03291000e-07 * T2 -
       3.30410500e-10 * T3 - 2.36956800e-13 * T4 + 3.33522500e+04 * invT) *
      0.0369740442209569;
    // species 20: ch2co
    result +=
      y[20] *
      (+1.97497100e+00 + 6.05935500e-03 * T - 7.81682000e-07 * T2 -
       1.61667125e-09 * T3 + 7.81129800e-13 * T4 - 7.63263700e+03 * invT) *
      0.0237885672145967;
    // species 21: hcco
    result +=
      y[21] *
      (+4.04796500e+00 + 2.22673900e-03 * T + 7.56094333e-08 * T2 -
       3.70523750e-10 * T3 + 4.50148400e-14 * T4 + 1.96589200e+04 * invT) *
      0.0243730044602598;
    // species 22: ch3co
    result +=
      y[22] *
      (+2.12527800e+00 + 4.88911000e-03 * T + 1.50714933e-06 * T2 -
       2.25236550e-09 * T3 + 6.38743600e-13 * T4 - 4.10850800e+03 * invT) *
      0.0232315019165989;
    // species 23: ch2cho
    result +=
      y[23] *
      (+2.40906200e+00 + 5.36928500e-03 * T + 6.30497333e-07 * T2 -
       1.78964575e-09 * T3 + 5.73477000e-13 * T4 + 1.52147700e+03 * invT) *
      0.0232315019165989;
    // species 24: ch3cho
    result +=
      y[24] *
      (+1.50569500e+00 + 6.68495500e-03 * T + 1.55731767e-06 * T2 -
       2.82035000e-09 * T3 + 8.52713200e-13 * T4 - 2.12458900e+04 * invT) *
      0.0226999296302181;
    // species 28: nc3h7
    result +=
      y[28] *
      (+9.22537000e-01 + 1.23946350e-02 * T + 6.03416333e-07 * T2 -
       4.45816500e-09 * T3 + 1.71659920e-12 * T4 + 9.71328100e+03 * invT) *
      0.0232077792476038;
    // species 48: c3h3
    result +=
      y[48] *
      (+3.75420000e+00 + 5.54014000e-03 * T + 9.31107667e-08 * T2 -
       1.36980300e-09 * T3 + 3.89925800e-13 * T4 + 3.98888300e+04 * invT) *
      0.0256036049875823;
    // species 49: c3h2
    result +=
      y[49] *
      (+2.16671400e+00 + 1.24128600e-02 * T - 1.53054567e-05 * T2 +
       1.06700475e-08 * T3 - 2.96430400e-12 * T4 + 6.35042100e+04 * invT) *
      0.0262818996557071;
    // species 50: ch2(s)
    result +=
      y[50] *
      (+2.97126500e+00 - 8.49544500e-05 * T + 3.41789667e-07 * T2 +
       6.23137750e-10 * T3 - 3.96253200e-13 * T4 + 4.98936800e+04 * invT) *
      0.0712910814857061;
    // species 87: n2
    result +=
      y[87] *
      (+2.29867700e+00 + 7.04120000e-04 * T - 1.32107400e-06 * T2 +
       1.41037875e-09 * T3 - 4.88971000e-13 * T4 - 1.02090000e+03 * invT) *
      0.0356964374955379;
  } else {
    // species 1: h2
    result +=
      y[1] *
      (+1.99142300e+00 + 3.50032200e-04 * T - 1.87794300e-08 * T2 -
       2.30789450e-12 * T3 + 3.16550400e-16 * T4 - 8.35034000e+02 * invT) *
      0.4960317460317460;
    // species 2: o
    result +=
      y[2] *
      (+1.54206000e+00 - 1.37753100e-05 * T - 1.03426767e-09 * T2 +
       1.13776675e-12 * T3 - 8.73610400e-17 * T4 + 2.92308000e+04 * invT) *
      0.0625039064941559;
    // species 3: o2
    result +=
      y[3] *
      (+2.69757800e+00 + 3.06759850e-04 * T - 4.19614000e-08 * T2 +
       4.43820250e-12 * T3 - 2.27287000e-16 * T4 - 1.23393000e+03 * invT) *
      0.0312519532470779;
    // species 5: h2o
    result +=
      y[5] *
      (+1.67214600e+00 + 1.52814650e-03 * T - 2.91008667e-07 * T2 +
       3.00249000e-11 * T3 - 1.27832360e-15 * T4 - 2.98992100e+04 * invT) *
      0.0555092978073827;
    // species 6: co
    result +=
      y[6] *
      (+2.02507800e+00 + 7.21344500e-04 * T - 1.87694267e-07 * T2 +
       2.54645250e-11 * T3 - 1.38219040e-15 * T4 - 1.42683500e+04 * invT) *
      0.0357015351660121;
    // species 7: hco
    result +=
      y[7] *
      (+2.55727100e+00 + 1.67278650e-03 * T - 4.45002000e-07 * T2 +
       6.17643250e-11 * T3 - 3.42770200e-15 * T4 + 3.91632400e+03 * invT) *
      0.0344613688055690;
    // species 8: co2
    result +=
      y[8] *
      (+3.45362300e+00 + 1.57008450e-03 * T - 4.26137000e-07 * T2 +
       5.98499250e-11 * T3 - 3.33806600e-15 * T4 - 4.89669600e+04 * invT) *
      0.0227226249176305;
    // species 9: ch3
    result +=
      y[9] *
      (+1.84405200e+00 + 3.06898700e-03 * T - 7.43448333e-07 * T2 +
       9.46290250e-11 * T3 - 4.90431800e-15 * T4 + 1.64378100e+04 * invT) *
      0.0665114732291320;
    // species 10: ch4
    result +=
      y[10] *
      (+6.83479000e-01 + 5.11862000e-03 * T - 1.29170967e-06 * T2 +
       1.69639625e-10 * T3 - 9.00684600e-15 * T4 - 1.00807900e+04 * invT) *
      0.0623324814560868;
    // species 12: h2o2
    result +=
      y[12] *
      (+3.57316700e+00 + 2.16806800e-03 * T - 4.91563000e-07 * T2 +
       5.87226000e-11 * T3 - 2.86330800e-15 * T4 - 1.80069600e+04 * invT) *
      0.0293996589639560;
    // species 13: ch2o
    result +=
      y[13] *
      (+1.99560600e+00 + 3.34066050e-03 * T - 8.76318333e-07 * T2 +
       1.18428825e-10 * T3 - 6.42503400e-15 * T4 - 1.53203700e+04 * invT) *
      0.0333044694598015;
    // species 14: ch3o
    result +=
      y[14] *
      (+2.77080000e+00 + 3.93574850e-03 * T - 8.85461333e-07 * T2 +
       9.86107750e-11 * T3 - 4.22523200e-15 * T4 + 1.27832500e+02 * invT) *
      0.0322227234645872;
    // species 16: c2h4
    result +=
      y[16] *
      (+2.52841900e+00 + 5.74259000e-03 * T - 1.47279500e-06 * T2 +
       1.96115025e-10 * T3 - 1.05336960e-14 * T4 + 4.42828900e+03 * invT) *
      0.0356455407428531;
    // species 17: c2h5
    result +=
      y[17] *
      (+6.19048000e+00 + 3.24203850e-03 * T - 2.14268833e-07 * T2 -
       5.86969750e-11 * T3 + 7.76175400e-15 * T4 + 1.06745500e+04 * invT) *
      0.0344091941366733;
    // species 18: c2h2
    result +=
      y[18] *
      (+3.43677000e+00 + 2.68801950e-03 * T - 6.37605667e-07 * T2 +
       8.21594750e-11 * T3 - 4.31342000e-15 * T4 + 2.56676600e+04 * invT) *
      0.0384054074813734;
    // species 19: c2h3
    result +=
      y[19] *
      (+4.93346800e+00 + 2.00887300e-03 * T - 1.32224667e-07 * T2 -
       3.60316750e-11 * T3 + 4.75728800e-15 * T4 + 3.18543500e+04 * invT) *
      0.0369740442209569;
    // species 20: ch2co
    result +=
      y[20] *
      (+5.03881700e+00 + 2.90242000e-03 * T - 6.40318000e-07 * T2 +
       6.98621250e-11 * T3 - 2.91773600e-15 * T4 - 8.58340200e+03 * invT) *
      0.0237885672145967;
    // species 21: hcco
    result +=
      y[21] *
      (+5.75807300e+00 + 1.00020000e-03 * T - 6.75869000e-08 * T2 -
       2.60283000e-11 * T3 + 3.93033000e-15 * T4 + 1.90151300e+04 * invT) *
      0.0243730044602598;
    // species 22: ch3co
    result +=
      y[22] *
      (+4.61227900e+00 + 4.22494300e-03 * T - 9.51382333e-07 * T2 +
       1.05959400e-10 * T3 - 4.53680800e-15 * T4 - 5.18786300e+03 * invT) *
      0.0232315019165989;
    // species 23: ch2cho
    result +=
      y[23] *
      (+4.97567000e+00 + 4.06529550e-03 * T - 9.14541333e-07 * T2 +
       1.01757600e-10 * T3 - 4.35203400e-15 * T4 + 4.90321800e+02 * invT) *
      0.0232315019165989;
    // species 24: ch3cho
    result +=
      y[24] *
      (+4.86865000e+00 + 5.39712000e-03 * T - 1.21517667e-06 * T2 +
       1.35322800e-10 * T3 - 5.79368800e-15 * T4 - 2.26456900e+04 * invT) *
      0.0226999296302181;
    // species 28: nc3h7
    result +=
      y[28] *
      (+6.97829100e+00 + 7.88056500e-03 * T - 1.72441433e-06 * T2 +
       1.86097300e-10 * T3 - 7.64995600e-15 * T4 + 7.57940200e+03 * invT) *
      0.0232077792476038;
    // species 48: c3h3
    result +=
      y[48] *
      (+7.83104700e+00 + 2.17859750e-03 * T - 1.36968900e-07 * T2 -
       5.92180750e-11 * T3 + 8.75304000e-15 * T4 + 3.84742000e+04 * invT) *
      0.0256036049875823;
    // species 49: c3h2
    result +=
      y[49] *
      (+6.67098100e+00 + 1.37437450e-03 * T - 1.45698100e-07 * T2 -
       1.61389975e-11 * T3 + 3.32777400e-15 * T4 + 6.25972200e+04 * invT) *
      0.0262818996557071;
    // species 50: ch2(s)
    result +=
      y[50] *
      (+2.55288900e+00 + 1.03339400e-03 * T - 6.38038667e-08 * T2 -
       2.76168250e-11 * T3 + 4.04270000e-15 * T4 + 4.98497500e+04 * invT) *
      0.0712910814857061;
    // species 87: n2
    result +=
      y[87] *
      (+1.92664000e+00 + 7.43988500e-04 * T - 1.89492033e-07 * T2 +
       2.52426000e-11 * T3 - 1.35067020e-15 * T4 - 9.22797700e+02 * invT) *
      0.0356964374955379;
  }

  // species with midpoint at T=1357 kelvin
  if (T < 1357) {
    // species 4: oh
    result +=
      y[4] *
      (+2.43586219e+00 + 1.01117902e-04 * T - 3.78488040e-08 * T2 +
       6.06112872e-11 * T3 - 1.48730206e-14 * T4 + 3.74321252e+03 * invT) *
      0.0587993179279120;
  } else {
    // species 4: oh
    result +=
      y[4] *
      (+1.62599754e+00 + 6.59962030e-04 * T - 1.19908223e-07 * T2 +
       1.06407700e-11 * T3 - 3.64096032e-16 * T4 + 4.12085374e+03 * invT) *
      0.0587993179279120;
  }

  // species with midpoint at T=1373 kelvin
  if (T < 1373) {
    // species 34: c2h5co
    result +=
      y[34] *
      (+1.93313946e+00 + 1.23713956e-02 * T - 4.04073343e-06 * T2 +
       5.86752620e-10 * T3 - 1.05368668e-14 * T4 - 5.69663063e+03 * invT) *
      0.0175217269414073;
  } else {
    // species 34: c2h5co
    result +=
      y[34] *
      (+8.87881997e+00 + 5.87578380e-03 * T - 1.33538308e-06 * T2 +
       1.55212654e-10 * T3 - 7.19670450e-15 * T4 - 8.47292283e+03 * invT) *
      0.0175217269414073;
  }

  // species with midpoint at T=1377 kelvin
  if (T < 1377) {
    // species 45: c4h8ooh1-3
    result +=
      y[45] *
      (+9.41062760e-01 + 2.59394676e-02 * T - 1.03470561e-05 * T2 +
       2.15892220e-09 * T3 - 1.68568399e-13 * T4 - 4.34315962e+03 * invT) *
      0.0112215813452432;
  } else {
    // species 45: c4h8ooh1-3
    result +=
      y[45] *
      (+1.66442170e+01 + 9.58532680e-03 * T - 2.19056214e-06 * T2 +
       2.55616428e-10 * T3 - 1.18860947e-14 * T4 - 1.01859280e+04 * invT) *
      0.0112215813452432;
  }

  // species with midpoint at T=1378 kelvin
  if (T < 1378) {
    // species 33: c2h5cho
    result +=
      y[33] *
      (+1.16308444e+00 + 1.47750632e-02 * T - 5.08154173e-06 * T2 +
       8.73759867e-10 * T3 - 4.77793254e-14 * T4 - 2.42260137e+04 * invT) *
      0.0172176308539945;
    // species 52: nc3h7cho
    result +=
      y[52] *
      (+8.74159590e-01 + 2.09620158e-02 * T - 7.83829263e-06 * T2 +
       1.56728418e-09 * T3 - 1.21888782e-13 * T4 - 2.71032194e+04 * invT) *
      0.0138682790852483;
  } else {
    // species 33: c2h5cho
    result +=
      y[33] *
      (+9.24276950e+00 + 6.98209945e-03 * T - 1.58749334e-06 * T2 +
       1.84526426e-10 * T3 - 8.55519006e-15 * T4 - 2.74143135e+04 * invT) *
      0.0172176308539945;
    // species 52: nc3h7cho
    result +=
      y[52] *
      (+1.25988068e+01 + 9.08262370e-03 * T - 2.05948153e-06 * T2 +
       2.38995052e-10 * T3 - 1.10688592e-14 * T4 - 3.15845348e+04 * invT) *
      0.0138682790852483;
  }

  // species with midpoint at T=1380 kelvin
  if (T < 1380) {
    // species 42: c3h5o
    result +=
      y[42] *
      (+1.98225820e-01 + 1.52789918e-02 * T - 6.02100920e-06 * T2 +
       1.21537508e-09 * T3 - 8.39709124e-14 * T4 + 9.58217784e+03 * invT) *
      0.0175217269414073;
    // species 53: nc3h7co
    result +=
      y[53] *
      (+1.67256826e+00 + 1.85599412e-02 * T - 6.89542863e-06 * T2 +
       1.37218472e-09 * T3 - 1.07172837e-13 * T4 - 8.58050888e+03 * invT) *
      0.0140648954275025;
  } else {
    // species 42: c3h5o
    result +=
      y[42] *
      (+9.25517520e+00 + 5.74918600e-03 * T - 1.28215220e-06 * T2 +
       1.47227587e-10 * T3 - 6.77115846e-15 * T4 + 6.26560810e+03 * invT) *
      0.0175217269414073;
    // species 53: nc3h7co
    result +=
      y[53] *
      (+1.20026331e+01 + 8.15524385e-03 * T - 1.85880966e-06 * T2 +
       2.16417657e-10 * T3 - 1.00451133e-14 * T4 - 1.25523385e+04 * invT) *
      0.0140648954275025;
  }

  // species with midpoint at T=1381 kelvin
  if (T < 1381) {
    // species 56: nc4h9cho
    result +=
      y[56] *
      (+5.96634720e-01 + 2.71770708e-02 * T - 1.07006884e-05 * T2 +
       2.33943390e-09 * T3 - 2.13377864e-13 * T4 - 2.99841025e+04 * invT) *
      0.0116098172614763;
  } else {
    // species 56: nc4h9cho
    result +=
      y[56] *
      (+1.57965163e+01 + 1.12842260e-02 * T - 2.55877196e-06 * T2 +
       2.96923422e-10 * T3 - 1.37509111e-14 * T4 - 3.56826080e+04 * invT) *
      0.0116098172614763;
  }

  // species with midpoint at T=1382 kelvin
  if (T < 1382) {
    // species 57: nc4h9co
    result +=
      y[57] *
      (+1.43530238e+00 + 2.46841188e-02 * T - 9.66276940e-06 * T2 +
       2.10715953e-09 * T3 - 1.93657434e-13 * T4 - 1.14675541e+04 * invT) *
      0.0117472922491366;
    // species 60: c7h15-2
    result +=
      y[60] *
      (-1.03791558e+00 + 3.78363285e-02 * T - 1.35824545e-05 * T2 +
       2.33169736e-09 * T3 - 9.84721490e-14 * T4 - 2.35605303e+03 * invT) *
      0.0100809500287307;
    // species 61: c7h15-3
    result +=
      y[61] *
      (-1.03791558e+00 + 3.78363285e-02 * T - 1.35824545e-05 * T2 +
       2.33169736e-09 * T3 - 9.84721490e-14 * T4 - 2.35605303e+03 * invT) *
      0.0100809500287307;
    // species 62: c7h15-4
    result +=
      y[62] *
      (-1.03791558e+00 + 3.78363285e-02 * T - 1.35824545e-05 * T2 +
       2.33169736e-09 * T3 - 9.84721490e-14 * T4 - 2.35605303e+03 * invT) *
      0.0100809500287307;
  } else {
    // species 57: nc4h9co
    result +=
      y[57] *
      (+1.51782939e+01 + 1.03995960e-02 * T - 2.37262631e-06 * T2 +
       2.76399937e-10 * T3 - 1.28339437e-14 * T4 - 1.66537752e+04 * invT) *
      0.0117472922491366;
    // species 60: c7h15-2
    result +=
      y[60] *
      (+2.06368842e+01 + 1.61662402e-02 * T - 3.64246023e-06 * T2 +
       4.20892650e-10 * T3 - 1.94354818e-14 * T4 - 1.05873616e+04 * invT) *
      0.0100809500287307;
    // species 61: c7h15-3
    result +=
      y[61] *
      (+2.06368842e+01 + 1.61662402e-02 * T - 3.64246023e-06 * T2 +
       4.20892650e-10 * T3 - 1.94354818e-14 * T4 - 1.05873616e+04 * invT) *
      0.0100809500287307;
    // species 62: c7h15-4
    result +=
      y[62] *
      (+2.06368842e+01 + 1.61662402e-02 * T - 3.64246023e-06 * T2 +
       4.20892650e-10 * T3 - 1.94354818e-14 * T4 - 1.05873616e+04 * invT) *
      0.0100809500287307;
  }

  // species with midpoint at T=1383 kelvin
  if (T < 1383) {
    // species 54: c2h5coch2
    result +=
      y[54] *
      (+5.40138560e-01 + 2.19743129e-02 * T - 9.90008070e-06 * T2 +
       2.63738282e-09 * T3 - 3.17197538e-13 * T4 - 9.50796505e+03 * invT) *
      0.0140648954275025;
    // species 69: c7h14ooh1-3
    result +=
      y[69] *
      (+1.11462060e-01 + 4.45797696e-02 * T - 1.89117461e-05 * T2 +
       4.47225235e-09 * T3 - 4.44520412e-13 * T4 - 1.29868314e+04 * invT) *
      0.0076222417012843;
  } else {
    // species 54: c2h5coch2
    result +=
      y[54] *
      (+1.32098738e+01 + 7.89332295e-03 * T - 1.83509728e-06 * T2 +
       2.16467635e-10 * T3 - 1.01382666e-14 * T4 - 1.41284951e+04 * invT) *
      0.0140648954275025;
    // species 69: c7h14ooh1-3
    result +=
      y[69] *
      (+2.62290222e+01 + 1.62460950e-02 * T - 3.70865860e-06 * T2 +
       4.32322195e-10 * T3 - 2.00856652e-14 * T4 - 2.24977070e+04 * invT) *
      0.0076222417012843;
  }

  // species with midpoint at T=1384 kelvin
  if (T < 1384) {
    // species 15: c2h6
    result +=
      y[15] *
      (-1.02528543e+00 + 1.20382377e-02 * T - 3.72978240e-06 * T2 +
       5.20852252e-10 * T3 - 1.05973723e-14 * T4 - 1.12345534e+04 * invT) *
      0.0332557366145660;
  } else {
    // species 15: c2h6
    result +=
      y[15] *
      (+5.10683385e+00 + 6.46181805e-03 * T - 1.47509065e-06 * T2 +
       1.71847932e-10 * T3 - 7.97803464e-15 * T4 - 1.37500014e+04 * invT) *
      0.0332557366145660;
  }

  // species with midpoint at T=1385 kelvin
  if (T < 1385) {
    // species 38: ch3o2
    result +=
      y[38] *
      (+3.26146906e+00 + 5.04367995e-03 * T - 1.07168728e-06 * T2 +
       5.23523168e-11 * T3 + 8.36678206e-15 * T4 - 6.84394259e+02 * invT) *
      0.0212616673399528;
    // species 46: pc4h9o2
    result +=
      y[46] *
      (+9.43636500e-01 + 2.57756581e-02 * T - 1.09428133e-05 * T2 +
       2.82662150e-09 * T3 - 3.40237212e-13 * T4 - 1.08358103e+04 * invT) *
      0.0112215813452432;
  } else {
    // species 38: ch3o2
    result +=
      y[38] *
      (+4.95787891e+00 + 3.95364313e-03 * T - 8.94154113e-07 * T2 +
       1.03472834e-10 * T3 - 4.78014660e-15 * T4 - 1.53574838e+03 * invT) *
      0.0212616673399528;
    // species 46: pc4h9o2
    result +=
      y[46] *
      (+1.47845448e+01 + 1.07605455e-02 * T - 2.48303006e-06 * T2 +
       2.91395178e-10 * T3 - 1.35977122e-14 * T4 - 1.60146054e+04 * invT) *
      0.0112215813452432;
  }

  // species with midpoint at T=1386 kelvin
  if (T < 1386) {
    // species 51: nc4ket13
    result +=
      y[51] *
      (+1.74883461e+00 + 2.93468373e-02 * T - 1.49868632e-05 * T2 +
       4.58000325e-09 * T3 - 6.23530738e-13 * T4 - 4.01065878e+04 * invT) *
      0.0096056865664473;
    // species 86: nc7ket42
    result +=
      y[86] *
      (+1.32269738e+00 + 4.72580075e-02 * T - 2.33019060e-05 * T2 +
       6.99432290e-09 * T3 - 9.48488862e-13 * T4 - 5.27586830e+04 * invT) *
      0.0068406003310851;
  } else {
    // species 51: nc4ket13
    result +=
      y[51] *
      (+1.86430808e+01 + 9.04702830e-03 * T - 2.11021077e-06 * T2 +
       2.49465100e-10 * T3 - 1.17015292e-14 * T4 - 4.59588851e+04 * invT) *
      0.0096056865664473;
    // species 86: nc7ket42
    result +=
      y[86] *
      (+2.76572867e+01 + 1.60783954e-02 * T - 3.73205233e-06 * T2 +
       4.39737500e-10 * T3 - 2.05783920e-14 * T4 - 6.20252988e+04 * invT) *
      0.0068406003310851;
  }

  // species with midpoint at T=1387 kelvin
  if (T < 1387) {
    // species 44: c4h8ooh1-3o2
    result +=
      y[44] *
      (+1.22400728e+00 + 3.52497310e-02 * T - 1.88992942e-05 * T2 +
       6.06569377e-09 * T3 - 8.59430918e-13 * T4 - 2.37391490e+04 * invT) *
      0.0082568201334302;
    // species 84: nc7ket24
    result +=
      y[84] *
      (+5.29366920e-01 + 4.79086733e-02 * T - 2.32229507e-05 * T2 +
       6.73850955e-09 * T3 - 8.77456252e-13 * T4 - 5.23839542e+04 * invT) *
      0.0068406003310851;
    // species 85: nc7ket35
    result +=
      y[85] *
      (+5.29366920e-01 + 4.79086733e-02 * T - 2.32229507e-05 * T2 +
       6.73850955e-09 * T3 - 8.77456252e-13 * T4 - 5.23839542e+04 * invT) *
      0.0068406003310851;
  } else {
    // species 44: c4h8ooh1-3o2
    result +=
      y[44] *
      (+2.13244015e+01 + 1.02737388e-02 * T - 2.39692116e-06 * T2 +
       2.83403840e-10 * T3 - 1.32948877e-14 * T4 - 3.05468277e+04 * invT) *
      0.0082568201334302;
    // species 84: nc7ket24
    result +=
      y[84] *
      (+2.78330388e+01 + 1.60084048e-02 * T - 3.71694853e-06 * T2 +
       4.38065397e-10 * T3 - 2.05040902e-14 * T4 - 6.20142474e+04 * invT) *
      0.0068406003310851;
    // species 85: nc7ket35
    result +=
      y[85] *
      (+2.78330388e+01 + 1.60084048e-02 * T - 3.71694853e-06 * T2 +
       4.38065397e-10 * T3 - 2.05040902e-14 * T4 - 6.20142474e+04 * invT) *
      0.0068406003310851;
  }

  // species with midpoint at T=1388 kelvin
  if (T < 1388) {
    // species 26: c3h6
    result +=
      y[26] *
      (-6.05384556e-01 + 1.44553831e-02 * T - 5.16289360e-06 * T2 +
       9.72035522e-10 * T3 - 6.75780704e-14 * T4 + 1.06688164e+03 * invT) *
      0.0237636938285687;
    // species 65: c7h15o2-1
    result +=
      y[65] *
      (+2.08885520e-01 + 4.42030853e-02 * T - 1.93287087e-05 * T2 +
       5.08936723e-09 * T3 - 6.12920672e-13 * T4 - 1.92918765e+04 * invT) *
      0.0076222417012843;
    // species 77: c7h14ooh1-3o2
    result +=
      y[77] *
      (+8.97180040e-01 + 5.31148980e-02 * T - 2.67590073e-05 * T2 +
       8.09122732e-09 * T3 - 1.09170094e-12 * T4 - 3.22790229e+04 * invT) *
      0.0061277138112542;
    // species 83: nc7ket13
    result +=
      y[83] *
      (+1.21629328e+00 + 4.73686881e-02 * T - 2.30157884e-05 * T2 +
       6.69551000e-09 * T3 - 8.72784362e-13 * T4 - 4.87965510e+04 * invT) *
      0.0068406003310851;
  } else {
    // species 26: c3h6
    result +=
      y[26] *
      (+7.01595958e+00 + 6.85118170e-03 * T - 1.55416578e-06 * T2 +
       1.80313601e-10 * T3 - 8.34740252e-15 * T4 - 1.87821271e+03 * invT) *
      0.0237636938285687;
    // species 65: c7h15o2-1
    result +=
      y[65] *
      (+2.42656556e+01 + 1.75401794e-02 * T - 4.03929337e-06 * T2 +
       4.73402015e-10 * T3 - 2.20708250e-14 * T4 - 2.81113392e+04 * invT) *
      0.0076222417012843;
    // species 77: c7h14ooh1-3o2
    result +=
      y[77] *
      (+3.10144349e+01 + 1.70027998e-02 * T - 3.94719520e-06 * T2 +
       4.65150867e-10 * T3 - 2.17702024e-14 * T4 - 4.27171859e+04 * invT) *
      0.0061277138112542;
    // species 83: nc7ket13
    result +=
      y[83] *
      (+2.80744507e+01 + 1.58588729e-02 * T - 3.67542153e-06 * T2 +
       4.32634020e-10 * T3 - 2.02323398e-14 * T4 - 5.82345477e+04 * invT) *
      0.0068406003310851;
  }

  // species with midpoint at T=1389 kelvin
  if (T < 1389) {
    // species 37: c2h5o
    result +=
      y[37] *
      (-5.05579292e-01 + 1.35887217e-02 * T - 5.53030033e-06 * T2 +
       1.28801050e-09 * T3 - 1.29699383e-13 * T4 - 3.35252925e+03 * invT) *
      0.0221921395441735;
    // species 55: nc3h7coch2
    result +=
      y[55] *
      (-4.17007290e-02 + 2.84081266e-02 * T - 1.33037594e-05 * T2 +
       3.81678785e-09 * T3 - 4.98442094e-13 * T4 - 1.23062238e+04 * invT) *
      0.0117472922491366;
    // species 70: c7h14ooh2-3
    result +=
      y[70] *
      (-1.50213995e-01 + 4.62553598e-02 * T - 2.08453278e-05 * T2 +
       5.44700975e-09 * T3 - 6.25440796e-13 * T4 - 1.53640679e+04 * invT) *
      0.0076222417012843;
    // species 71: c7h14ooh2-4
    result +=
      y[71] *
      (-1.50213995e-01 + 4.62553598e-02 * T - 2.08453278e-05 * T2 +
       5.44700975e-09 * T3 - 6.25440796e-13 * T4 - 1.53640679e+04 * invT) *
      0.0076222417012843;
    // species 72: c7h14ooh3-2
    result +=
      y[72] *
      (-1.50213995e-01 + 4.62553598e-02 * T - 2.08453278e-05 * T2 +
       5.44700975e-09 * T3 - 6.25440796e-13 * T4 - 1.53640679e+04 * invT) *
      0.0076222417012843;
    // species 73: c7h14ooh3-4
    result +=
      y[73] *
      (-1.50213995e-01 + 4.62553598e-02 * T - 2.08453278e-05 * T2 +
       5.44700975e-09 * T3 - 6.25440796e-13 * T4 - 1.53640679e+04 * invT) *
      0.0076222417012843;
    // species 74: c7h14ooh3-5
    result +=
      y[74] *
      (-1.50213995e-01 + 4.62553598e-02 * T - 2.08453278e-05 * T2 +
       5.44700975e-09 * T3 - 6.25440796e-13 * T4 - 1.53640679e+04 * invT) *
      0.0076222417012843;
    // species 75: c7h14ooh4-2
    result +=
      y[75] *
      (-1.50213995e-01 + 4.62553598e-02 * T - 2.08453278e-05 * T2 +
       5.44700975e-09 * T3 - 6.25440796e-13 * T4 - 1.53640679e+04 * invT) *
      0.0076222417012843;
    // species 76: c7h14ooh4-3
    result +=
      y[76] *
      (-1.50213995e-01 + 4.62553598e-02 * T - 2.08453278e-05 * T2 +
       5.44700975e-09 * T3 - 6.25440796e-13 * T4 - 1.53640679e+04 * invT) *
      0.0076222417012843;
  } else {
    // species 37: c2h5o
    result +=
      y[37] *
      (+6.87339772e+00 + 5.65364535e-03 * T - 1.28140474e-06 * T2 +
       1.48603526e-10 * T3 - 6.87789076e-15 * T4 - 6.07274953e+03 * invT) *
      0.0221921395441735;
    // species 55: nc3h7coch2
    result +=
      y[55] *
      (+1.51502419e+01 + 1.07046733e-02 * T - 2.45353205e-06 * T2 +
       2.86642040e-10 * T3 - 1.33342544e-14 * T4 - 1.76968561e+04 * invT) *
      0.0117472922491366;
    // species 70: c7h14ooh2-3
    result +=
      y[70] *
      (+2.64034778e+01 + 1.63763947e-02 * T - 3.76639233e-06 * T2 +
       4.41111622e-10 * T3 - 2.05573890e-14 * T4 - 2.48636651e+04 * invT) *
      0.0076222417012843;
    // species 71: c7h14ooh2-4
    result +=
      y[71] *
      (+2.64034778e+01 + 1.63763947e-02 * T - 3.76639233e-06 * T2 +
       4.41111622e-10 * T3 - 2.05573890e-14 * T4 - 2.48636651e+04 * invT) *
      0.0076222417012843;
    // species 72: c7h14ooh3-2
    result +=
      y[72] *
      (+2.64034778e+01 + 1.63763947e-02 * T - 3.76639233e-06 * T2 +
       4.41111622e-10 * T3 - 2.05573890e-14 * T4 - 2.48636651e+04 * invT) *
      0.0076222417012843;
    // species 73: c7h14ooh3-4
    result +=
      y[73] *
      (+2.64034778e+01 + 1.63763947e-02 * T - 3.76639233e-06 * T2 +
       4.41111622e-10 * T3 - 2.05573890e-14 * T4 - 2.48636651e+04 * invT) *
      0.0076222417012843;
    // species 74: c7h14ooh3-5
    result +=
      y[74] *
      (+2.64034778e+01 + 1.63763947e-02 * T - 3.76639233e-06 * T2 +
       4.41111622e-10 * T3 - 2.05573890e-14 * T4 - 2.48636651e+04 * invT) *
      0.0076222417012843;
    // species 75: c7h14ooh4-2
    result +=
      y[75] *
      (+2.64034778e+01 + 1.63763947e-02 * T - 3.76639233e-06 * T2 +
       4.41111622e-10 * T3 - 2.05573890e-14 * T4 - 2.48636651e+04 * invT) *
      0.0076222417012843;
    // species 76: c7h14ooh4-3
    result +=
      y[76] *
      (+2.64034778e+01 + 1.63763947e-02 * T - 3.76639233e-06 * T2 +
       4.41111622e-10 * T3 - 2.05573890e-14 * T4 - 2.48636651e+04 * invT) *
      0.0076222417012843;
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 11: ho2
    result +=
      y[11] *
      (+2.18310656e+00 + 1.83383975e-03 * T - 3.10795041e-07 * T2 -
       8.14632298e-11 * T3 + 3.02279824e-14 * T4 + 8.09181013e+02 * invT) *
      0.0302975216627280;
    // species 39: ch3o2h
    result +=
      y[39] *
      (+2.23442817e+00 + 9.50648835e-03 * T - 3.77954290e-06 * T2 +
       8.50766632e-10 * T3 - 8.23660444e-14 * T4 - 1.77197926e+04 * invT) *
      0.0208155533814866;
    // species 59: c7h15-1
    result +=
      y[59] *
      (-1.49957041e+00 + 4.04413234e-02 * T - 1.66844251e-05 * T2 +
       3.91373270e-09 * T3 - 3.93232454e-13 * T4 - 1.04590223e+03 * invT) *
      0.0100809500287307;
    // species 63: c7h14-2
    result +=
      y[63] *
      (-2.16533279e+00 + 3.95219903e-02 * T - 1.65367222e-05 * T2 +
       3.96422523e-09 * T3 - 4.10692866e-13 * T4 - 1.17362359e+04 * invT) *
      0.0101844402122437;
    // species 66: c7h15o2-2
    result +=
      y[66] *
      (-6.44747083e-01 + 4.71190503e-02 * T - 2.22318369e-05 * T2 +
       6.36988958e-09 * T3 - 8.26422210e-13 * T4 - 2.15795254e+04 * invT) *
      0.0076222417012843;
    // species 67: c7h15o2-3
    result +=
      y[67] *
      (-6.44747083e-01 + 4.71190503e-02 * T - 2.22318369e-05 * T2 +
       6.36988958e-09 * T3 - 8.26422210e-13 * T4 - 2.15795254e+04 * invT) *
      0.0076222417012843;
    // species 68: c7h15o2-4
    result +=
      y[68] *
      (-6.44747083e-01 + 4.71190503e-02 * T - 2.22318369e-05 * T2 +
       6.36988958e-09 * T3 - 8.26422210e-13 * T4 - 2.15795254e+04 * invT) *
      0.0076222417012843;
    // species 78: c7h14ooh2-4o2
    result +=
      y[78] *
      (+4.09124790e-01 + 5.53604170e-02 * T - 2.90392692e-05 * T2 +
       9.09156872e-09 * T3 - 1.25670138e-12 * T4 - 3.46304788e+04 * invT) *
      0.0061277138112542;
    // species 79: c7h14ooh3-5o2
    result +=
      y[79] *
      (+4.09124790e-01 + 5.53604170e-02 * T - 2.90392692e-05 * T2 +
       9.09156872e-09 * T3 - 1.25670138e-12 * T4 - 3.46304788e+04 * invT) *
      0.0061277138112542;
    // species 80: c7h14ooh4-2o2
    result +=
      y[80] *
      (+4.09124790e-01 + 5.53604170e-02 * T - 2.90392692e-05 * T2 +
       9.09156872e-09 * T3 - 1.25670138e-12 * T4 - 3.46304788e+04 * invT) *
      0.0061277138112542;
  } else {
    // species 11: ho2
    result +=
      y[11] *
      (+3.10547423e+00 + 1.19226417e-03 * T - 2.68782663e-07 * T2 +
       3.10479308e-11 * T3 - 1.43280022e-15 * T4 + 3.98127689e+02 * invT) *
      0.0302975216627280;
    // species 39: ch3o2h
    result +=
      y[39] *
      (+7.43117091e+00 + 4.03408955e-03 * T - 9.23649737e-07 * T2 +
       1.07833061e-10 * T3 - 5.01384292e-15 * T4 - 1.96678771e+04 * invT) *
      0.0208155533814866;
    // species 59: c7h15-1
    result +=
      y[59] *
      (+2.07940709e+01 + 1.63140122e-02 * T - 3.70460813e-06 * T2 +
       4.30167870e-10 * T3 - 1.99273400e-14 * T4 - 9.20938221e+03 * invT) *
      0.0100809500287307;
    // species 63: c7h14-2
    result +=
      y[63] *
      (+1.96192047e+01 + 1.57426496e-02 * T - 3.57206857e-06 * T2 +
       4.14569155e-10 * T3 - 1.91982357e-14 * T4 - 1.96713162e+04 * invT) *
      0.0101844402122437;
    // species 66: c7h15o2-2
    result +=
      y[66] *
      (+2.50535640e+01 + 1.71915844e-02 * T - 3.95710823e-06 * T2 +
       4.63625602e-10 * T3 - 2.16104798e-14 * T4 - 3.06842095e+04 * invT) *
      0.0076222417012843;
    // species 67: c7h15o2-3
    result +=
      y[67] *
      (+2.50535640e+01 + 1.71915844e-02 * T - 3.95710823e-06 * T2 +
       4.63625602e-10 * T3 - 2.16104798e-14 * T4 - 3.06842095e+04 * invT) *
      0.0076222417012843;
    // species 68: c7h15o2-4
    result +=
      y[68] *
      (+2.50535640e+01 + 1.71915844e-02 * T - 3.95710823e-06 * T2 +
       4.63625602e-10 * T3 - 2.16104798e-14 * T4 - 3.06842095e+04 * invT) *
      0.0076222417012843;
    // species 78: c7h14ooh2-4o2
    result +=
      y[78] *
      (+3.18358296e+01 + 1.66383642e-02 * T - 3.86110950e-06 * T2 +
       4.54896595e-10 * T3 - 2.12868838e-14 * T4 - 4.52873003e+04 * invT) *
      0.0061277138112542;
    // species 79: c7h14ooh3-5o2
    result +=
      y[79] *
      (+3.18358296e+01 + 1.66383642e-02 * T - 3.86110950e-06 * T2 +
       4.54896595e-10 * T3 - 2.12868838e-14 * T4 - 4.52873003e+04 * invT) *
      0.0061277138112542;
    // species 80: c7h14ooh4-2o2
    result +=
      y[80] *
      (+3.18358296e+01 + 1.66383642e-02 * T - 3.86110950e-06 * T2 +
       4.54896595e-10 * T3 - 2.12868838e-14 * T4 - 4.52873003e+04 * invT) *
      0.0061277138112542;
  }

  // species with midpoint at T=1391 kelvin
  if (T < 1391) {
    // species 32: ch3coch2
    result +=
      y[32] *
      (+8.03391870e-01 + 1.50703542e-02 * T - 6.45018507e-06 * T2 +
       1.59549759e-09 * T3 - 1.73220636e-13 * T4 - 5.37233261e+03 * invT) *
      0.0175217269414073;
    // species 58: nc7h16
    result +=
      y[58] *
      (-2.26836187e+00 + 4.27177910e-02 * T - 1.75115595e-05 * T2 +
       4.07364302e-09 * T3 - 4.04789850e-13 * T4 - 2.56586565e+04 * invT) *
      0.0099795419390250;
  } else {
    // species 32: ch3coch2
    result +=
      y[32] *
      (+9.23039750e+00 + 5.82470805e-03 * T - 1.33668512e-06 * T2 +
       1.56301312e-10 * T3 - 7.27568724e-15 * T4 - 8.44380462e+03 * invT) *
      0.0175217269414073;
    // species 58: nc7h16
    result +=
      y[58] *
      (+2.12148969e+01 + 1.73837875e-02 * T - 3.94690430e-06 * T2 +
       4.58246195e-10 * T3 - 2.12260532e-14 * T4 - 3.42760081e+04 * invT) *
      0.0099795419390250;
  }

  // species with midpoint at T=1392 kelvin
  if (T < 1392) {
    // species 29: c4h7
    result +=
      y[29] *
      (-1.35050835e+00 + 2.13255622e-02 * T - 9.69931243e-06 * T2 +
       2.63509785e-09 * T3 - 3.20119708e-13 * T4 + 1.49933591e+04 * invT) *
      0.0181488203266788;
    // species 30: c4h8-1
    result +=
      y[30] *
      (-1.83137209e+00 + 2.26290489e-02 * T - 9.78861863e-06 * T2 +
       2.50551090e-09 * T3 - 2.86383360e-13 * T4 - 1.57875035e+03 * invT) *
      0.0178227703714265;
    // species 35: c5h9
    result +=
      y[35] *
      (-2.38013950e+00 + 2.78804243e-02 * T - 1.23381309e-05 * T2 +
       3.17209752e-09 * T3 - 3.57077670e-13 * T4 + 1.25589824e+04 * invT) *
      0.0144661275623128;
    // species 36: c5h10-1
    result +=
      y[36] *
      (-2.06223481e+00 + 2.87109147e-02 * T - 1.24828963e-05 * T2 +
       3.18412472e-09 * T3 - 3.59219578e-13 * T4 - 4.46546666e+03 * invT) *
      0.0142582162971412;
    // species 64: c7h14-3
    result +=
      y[64] *
      (-3.03026994e+00 + 4.13162189e-02 * T - 1.81838157e-05 * T2 +
       4.69264555e-09 * T3 - 5.35142440e-13 * T4 - 1.15141029e+04 * invT) *
      0.0101844402122437;
  } else {
    // species 29: c4h7
    result +=
      y[29] *
      (+1.02103578e+01 + 8.02415980e-03 * T - 1.82167431e-06 * T2 +
       2.11485263e-10 * T3 - 9.79545478e-15 * T4 + 1.09041937e+04 * invT) *
      0.0181488203266788;
    // species 30: c4h8-1
    result +=
      y[30] *
      (+1.03508668e+01 + 9.03089385e-03 * T - 2.05364343e-06 * T2 +
       2.38663240e-10 * T3 - 1.10617928e-14 * T4 - 5.97871038e+03 * invT) *
      0.0178227703714265;
    // species 35: c5h9
    result +=
      y[35] *
      (+1.31860454e+01 + 1.03564449e-02 * T - 2.35653539e-06 * T2 +
       2.74017833e-10 * T3 - 1.27064442e-14 * T4 + 7.00496135e+03 * invT) *
      0.0144661275623128;
    // species 36: c5h10-1
    result +=
      y[36] *
      (+1.35851539e+01 + 1.12036235e-02 * T - 2.54449342e-06 * T2 +
       2.95472415e-10 * T3 - 1.36877028e-14 * T4 - 1.00898205e+04 * invT) *
      0.0142582162971412;
    // species 64: c7h14-3
    result +=
      y[64] *
      (+1.96822750e+01 + 1.57694314e-02 * T - 3.58570717e-06 * T2 +
       4.16725650e-10 * T3 - 1.93162079e-14 * T4 - 1.96450604e+04 * invT) *
      0.0101844402122437;
  }

  // species with midpoint at T=1393 kelvin
  if (T < 1393) {
    // species 41: c2h3cho
    result +=
      y[41] *
      (-7.07644838e-01 + 1.77160709e-02 * T - 9.83121080e-06 * T2 +
       3.20250310e-09 * T3 - 4.52288216e-13 * T4 - 1.16521584e+04 * invT) *
      0.0178367579908676;
  } else {
    // species 41: c2h3cho
    result +=
      y[41] *
      (+9.41849590e+00 + 4.74481661e-03 * T - 1.09770176e-06 * T2 +
       1.29069801e-10 * T3 - 6.03174582e-15 * T4 - 1.49630281e+04 * invT) *
      0.0178367579908676;
  }

  // species with midpoint at T=1395 kelvin
  if (T < 1395) {
    // species 31: pc4h9
    result +=
      y[31] *
      (-1.43777972e+00 + 2.39486182e-02 * T - 1.04674386e-05 * T2 +
       2.74466180e-09 * T3 - 3.24021328e-13 * T4 + 7.68945248e+03 * invT) *
      0.0175082288675678;
    // species 43: c4h7o
    result +=
      y[43] *
      (-2.60619192e+00 + 2.79281341e-02 * T - 1.45198589e-05 * T2 +
       4.26473197e-09 * T3 - 5.31270360e-13 * T4 + 4.85090326e+03 * invT) *
      0.0140648954275025;
    // species 81: c7h14o1-3
    result +=
      y[81] *
      (-6.50036450e+00 + 5.00775440e-02 * T - 2.43311952e-05 * T2 +
       6.98360675e-09 * T3 - 8.84491392e-13 * T4 - 2.44292287e+04 * invT) *
      0.0087574876519424;
  } else {
    // species 31: pc4h9
    result +=
      y[31] *
      (+1.11510082e+01 + 9.71553585e-03 * T - 2.20525983e-06 * T2 +
       2.55937840e-10 * T3 - 1.18505941e-14 * T4 + 3.17231942e+03 * invT) *
      0.0175082288675678;
    // species 43: c4h7o
    result +=
      y[43] *
      (+1.43137780e+01 + 7.17135085e-03 * T - 1.60541839e-06 * T2 +
       1.84893710e-10 * T3 - 8.52281628e-15 * T4 - 7.29342884e+02 * invT) *
      0.0140648954275025;
    // species 81: c7h14o1-3
    result +=
      y[81] *
      (+2.16918916e+01 + 1.66255236e-02 * T - 3.81525883e-06 * T2 +
       4.46138838e-10 * T3 - 2.07682224e-14 * T4 - 3.41591419e+04 * invT) *
      0.0087574876519424;
  }

  // species with midpoint at T=1397 kelvin
  if (T < 1397) {
    // species 47: c3h5-a
    result +=
      y[47] *
      (-1.52913196e+00 + 1.67279550e-02 * T - 8.44670090e-06 * T2 +
       2.57164385e-09 * T3 - 3.46516680e-13 * T4 + 1.93834226e+04 * invT) *
      0.0243468945535997;
  } else {
    // species 47: c3h5-a
    result +=
      y[47] *
      (+7.45883958e+00 + 5.63477415e-03 * T - 1.27930955e-06 * T2 +
       1.48514780e-10 * T3 - 6.87836060e-15 * T4 + 1.63576092e+04 * invT) *
      0.0243468945535997;
  }

  // species with midpoint at T=1398 kelvin
  if (T < 1398) {
    // species 27: c4h6
    result +=
      y[27] *
      (-2.43095121e+00 + 2.39353031e-02 * T - 1.38482267e-05 * T2 +
       4.78873880e-09 * T3 - 7.14317014e-13 * T4 + 1.17551314e+04 * invT) *
      0.0184870221104784;
  } else {
    // species 27: c4h6
    result +=
      y[27] *
      (+1.01633789e+01 + 6.85819825e-03 * T - 1.56571928e-06 * T2 +
       1.82423459e-10 * T3 - 8.46972406e-15 * T4 + 7.79039770e+03 * invT) *
      0.0184870221104784;
  }

  // species with midpoint at T=1399 kelvin
  if (T < 1399) {
    // species 82: c7h14o2-4
    result +=
      y[82] *
      (-6.39477206e+00 + 5.09232885e-02 * T - 2.53348745e-05 * T2 +
       7.41345050e-09 * T3 - 9.49708740e-13 * T4 - 2.67118295e+04 * invT) *
      0.0087574876519424;
  } else {
    // species 82: c7h14o2-4
    result +=
      y[82] *
      (+2.22692731e+01 + 1.62792695e-02 * T - 3.72083020e-06 * T2 +
       4.33934145e-10 * T3 - 2.01626430e-14 * T4 - 3.64349664e+04 * invT) *
      0.0087574876519424;
  }

  // species with midpoint at T=1400 kelvin
  if (T < 1400) {
    // species 25: c3h4-a
    result +=
      y[25] *
      (+1.53983100e+00 + 8.16718500e-03 * T - 5.88316667e-07 * T2 -
       1.16184125e-09 * T3 + 3.45826200e-13 * T4 + 2.25124300e+04 * invT) *
      0.0249594409085237;
  } else {
    // species 25: c3h4-a
    result +=
      y[25] *
      (+8.77625600e+00 + 2.65106900e-03 * T - 1.23370600e-07 * T2 -
       7.56596500e-11 * T3 + 1.01791620e-14 * T4 + 1.95497200e+04 * invT) *
      0.0249594409085237;
  }

  // species with midpoint at T=1402 kelvin
  if (T < 1402) {
    // species 40: c2h3co
    result +=
      y[40] *
      (+3.62420130e-01 + 1.57636986e-02 * T - 1.00072978e-05 * T2 +
       3.70417780e-09 * T3 - 5.75943060e-13 * T4 + 4.25770215e+03 * invT) *
      0.0181633246149375;
  } else {
    // species 40: c2h3co
    result +=
      y[40] *
      (+8.37467676e+00 + 3.95648450e-03 * T - 8.90660933e-07 * T2 +
       1.02778857e-10 * T3 - 4.73957962e-15 * T4 + 1.92969514e+03 * invT) *
      0.0181633246149375;
  }

  const amrex::Real RT = 8.31446261815324e+07 * T; // R*T

  ubms = result * RT;
}

// get mixture entropy in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSBML(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real& sbml)
{
  amrex::Real result = 0;
  // Log of normalized pressure in cgs units dynes/cm^2 by Patm
  amrex::Real logPratio = log(P / 1013250.0);
  amrex::Real sor[88]; //  temporary storage
  speciesEntropy(sor, T);

  // Compute Eq 42
  for (int id = 0; id < 88; ++id) {
    result += x[id] * (sor[id] - log((x[id] + 1e-100)) - logPratio);
  }

  sbml = result * 8.31446261815324e+07;
}

// get mixture entropy in mass units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSBMS(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real& sbms)
{
  amrex::Real result = 0;
  // Log of normalized pressure in cgs units dynes/cm^2 by Patm
  amrex::Real logPratio = log(P / 1013250.0);
  amrex::Real sor[88]; //  temporary storage
  amrex::Real x[88];   //  need a ytx conversion
  amrex::Real YOW = 0; // See Eq 4, 6 in CK Manual

  // Compute inverse of mean molecular wt first
  for (int i = 0; i < 88; i++) {
    YOW += y[i] * imw(i);
  }
  // Now compute y to x conversion
  x[0] = y[0] / (1.008000 * YOW);
  x[1] = y[1] / (2.016000 * YOW);
  x[2] = y[2] / (15.999000 * YOW);
  x[3] = y[3] / (31.998000 * YOW);
  x[4] = y[4] / (17.007000 * YOW);
  x[5] = y[5] / (18.015000 * YOW);
  x[6] = y[6] / (28.010000 * YOW);
  x[7] = y[7] / (29.018000 * YOW);
  x[8] = y[8] / (44.009000 * YOW);
  x[9] = y[9] / (15.035000 * YOW);
  x[10] = y[10] / (16.043000 * YOW);
  x[11] = y[11] / (33.006000 * YOW);
  x[12] = y[12] / (34.014000 * YOW);
  x[13] = y[13] / (30.026000 * YOW);
  x[14] = y[14] / (31.034000 * YOW);
  x[15] = y[15] / (30.070000 * YOW);
  x[16] = y[16] / (28.054000 * YOW);
  x[17] = y[17] / (29.062000 * YOW);
  x[18] = y[18] / (26.038000 * YOW);
  x[19] = y[19] / (27.046000 * YOW);
  x[20] = y[20] / (42.037000 * YOW);
  x[21] = y[21] / (41.029000 * YOW);
  x[22] = y[22] / (43.045000 * YOW);
  x[23] = y[23] / (43.045000 * YOW);
  x[24] = y[24] / (44.053000 * YOW);
  x[25] = y[25] / (40.065000 * YOW);
  x[26] = y[26] / (42.081000 * YOW);
  x[27] = y[27] / (54.092000 * YOW);
  x[28] = y[28] / (43.089000 * YOW);
  x[29] = y[29] / (55.100000 * YOW);
  x[30] = y[30] / (56.108000 * YOW);
  x[31] = y[31] / (57.116000 * YOW);
  x[32] = y[32] / (57.072000 * YOW);
  x[33] = y[33] / (58.080000 * YOW);
  x[34] = y[34] / (57.072000 * YOW);
  x[35] = y[35] / (69.127000 * YOW);
  x[36] = y[36] / (70.135000 * YOW);
  x[37] = y[37] / (45.061000 * YOW);
  x[38] = y[38] / (47.033000 * YOW);
  x[39] = y[39] / (48.041000 * YOW);
  x[40] = y[40] / (55.056000 * YOW);
  x[41] = y[41] / (56.064000 * YOW);
  x[42] = y[42] / (57.072000 * YOW);
  x[43] = y[43] / (71.099000 * YOW);
  x[44] = y[44] / (121.112000 * YOW);
  x[45] = y[45] / (89.114000 * YOW);
  x[46] = y[46] / (89.114000 * YOW);
  x[47] = y[47] / (41.073000 * YOW);
  x[48] = y[48] / (39.057000 * YOW);
  x[49] = y[49] / (38.049000 * YOW);
  x[50] = y[50] / (14.027000 * YOW);
  x[51] = y[51] / (104.105000 * YOW);
  x[52] = y[52] / (72.107000 * YOW);
  x[53] = y[53] / (71.099000 * YOW);
  x[54] = y[54] / (71.099000 * YOW);
  x[55] = y[55] / (85.126000 * YOW);
  x[56] = y[56] / (86.134000 * YOW);
  x[57] = y[57] / (85.126000 * YOW);
  x[58] = y[58] / (100.205000 * YOW);
  x[59] = y[59] / (99.197000 * YOW);
  x[60] = y[60] / (99.197000 * YOW);
  x[61] = y[61] / (99.197000 * YOW);
  x[62] = y[62] / (99.197000 * YOW);
  x[63] = y[63] / (98.189000 * YOW);
  x[64] = y[64] / (98.189000 * YOW);
  x[65] = y[65] / (131.195000 * YOW);
  x[66] = y[66] / (131.195000 * YOW);
  x[67] = y[67] / (131.195000 * YOW);
  x[68] = y[68] / (131.195000 * YOW);
  x[69] = y[69] / (131.195000 * YOW);
  x[70] = y[70] / (131.195000 * YOW);
  x[71] = y[71] / (131.195000 * YOW);
  x[72] = y[72] / (131.195000 * YOW);
  x[73] = y[73] / (131.195000 * YOW);
  x[74] = y[74] / (131.195000 * YOW);
  x[75] = y[75] / (131.195000 * YOW);
  x[76] = y[76] / (131.195000 * YOW);
  x[77] = y[77] / (163.193000 * YOW);
  x[78] = y[78] / (163.193000 * YOW);
  x[79] = y[79] / (163.193000 * YOW);
  x[80] = y[80] / (163.193000 * YOW);
  x[81] = y[81] / (114.188000 * YOW);
  x[82] = y[82] / (114.188000 * YOW);
  x[83] = y[83] / (146.186000 * YOW);
  x[84] = y[84] / (146.186000 * YOW);
  x[85] = y[85] / (146.186000 * YOW);
  x[86] = y[86] / (146.186000 * YOW);
  x[87] = y[87] / (28.014000 * YOW);
  speciesEntropy(sor, T);
  // Perform computation in Eq 42 and 43
  for (int i = 0; i < 88; i++) {
    result += x[i] * (sor[i] - log((x[i] + 1e-100)) - logPratio);
  }
  // Scale by R/W
  sbms = result * 8.31446261815324e+07 * YOW;
}

//  get temperature given internal energy in mass units and mass fracs
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_T_GIVEN_EY(
  const amrex::Real e, const amrex::Real y[], amrex::Real& t, int& ierr)
{
#ifdef CONVERGENCE
  const int maxiter = 5000;
  const amrex::Real tol = 1.e-12;
#else
  const int maxiter = 200;
  const amrex::Real tol = 1.e-6;
#endif
  amrex::Real tmin = 90;   // max lower bound for thermo def
  amrex::Real tmax = 4000; // min upper bound for thermo def
  amrex::Real e1, emin, emax, cv, t1, dt;
  CKUBMS(tmin, y, emin);
  CKUBMS(tmax, y, emax);
  if (e < emin) {
    // Linear Extrapolation below tmin
    CKCVBS(tmin, y, cv);
    t = tmin - (emin - e) / cv;
    ierr = 1;
    return;
  }
  if (e > emax) {
    // Linear Extrapolation above tmax
    CKCVBS(tmax, y, cv);
    t = tmax - (emax - e) / cv;
    ierr = 1;
    return;
  }
  t1 = t;
  if (t1 < tmin || t1 > tmax) {
    t1 = tmin + (tmax - tmin) / (emax - emin) * (e - emin);
  }
  for (int i = 0; i < maxiter; ++i) {
    CKUBMS(t1, y, e1);
    CKCVBS(t1, y, cv);
    dt = (e - e1) / cv;
    if (dt > 100.) {
      dt = 100.;
    } else if (dt < -100.) {
      dt = -100.;
    } else if (fabs(dt) < tol) {
      break;
    }
    t1 += dt;
  }
  t = t1;
  ierr = 0;
}

//  get temperature given enthalpy in mass units and mass fracs
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_T_GIVEN_HY(
  const amrex::Real h, const amrex::Real y[], amrex::Real& t, int& ierr)
{
#ifdef CONVERGENCE
  const int maxiter = 5000;
  const amrex::Real tol = 1.e-12;
#else
  const int maxiter = 200;
  const amrex::Real tol = 1.e-6;
#endif
  amrex::Real tmin = 90;   // max lower bound for thermo def
  amrex::Real tmax = 4000; // min upper bound for thermo def
  amrex::Real h1, hmin, hmax, cp, t1, dt;
  CKHBMS(tmin, y, hmin);
  CKHBMS(tmax, y, hmax);
  if (h < hmin) {
    // Linear Extrapolation below tmin
    CKCPBS(tmin, y, cp);
    t = tmin - (hmin - h) / cp;
    ierr = 1;
    return;
  }
  if (h > hmax) {
    // Linear Extrapolation above tmax
    CKCPBS(tmax, y, cp);
    t = tmax - (hmax - h) / cp;
    ierr = 1;
    return;
  }
  t1 = t;
  if (t1 < tmin || t1 > tmax) {
    t1 = tmin + (tmax - tmin) / (hmax - hmin) * (h - hmin);
  }
  for (int i = 0; i < maxiter; ++i) {
    CKHBMS(t1, y, h1);
    CKCPBS(t1, y, cp);
    dt = (h - h1) / cp;
    if (dt > 100.) {
      dt = 100.;
    } else if (dt < -100.) {
      dt = -100.;
    } else if (fabs(dt) < tol) {
      break;
    }
    t1 += dt;
  }
  t = t1;
  ierr = 0;
}

// Compute P = rhoRT/W(x)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKPX(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real& P)
{
  amrex::Real XW = 0;                      //  To hold mean molecular wt
  XW += x[0] * 1.008000;                   // h
  XW += x[1] * 2.016000;                   // h2
  XW += x[2] * 15.999000;                  // o
  XW += x[3] * 31.998000;                  // o2
  XW += x[4] * 17.007000;                  // oh
  XW += x[5] * 18.015000;                  // h2o
  XW += x[6] * 28.010000;                  // co
  XW += x[7] * 29.018000;                  // hco
  XW += x[8] * 44.009000;                  // co2
  XW += x[9] * 15.035000;                  // ch3
  XW += x[10] * 16.043000;                 // ch4
  XW += x[11] * 33.006000;                 // ho2
  XW += x[12] * 34.014000;                 // h2o2
  XW += x[13] * 30.026000;                 // ch2o
  XW += x[14] * 31.034000;                 // ch3o
  XW += x[15] * 30.070000;                 // c2h6
  XW += x[16] * 28.054000;                 // c2h4
  XW += x[17] * 29.062000;                 // c2h5
  XW += x[18] * 26.038000;                 // c2h2
  XW += x[19] * 27.046000;                 // c2h3
  XW += x[20] * 42.037000;                 // ch2co
  XW += x[21] * 41.029000;                 // hcco
  XW += x[22] * 43.045000;                 // ch3co
  XW += x[23] * 43.045000;                 // ch2cho
  XW += x[24] * 44.053000;                 // ch3cho
  XW += x[25] * 40.065000;                 // c3h4-a
  XW += x[26] * 42.081000;                 // c3h6
  XW += x[27] * 54.092000;                 // c4h6
  XW += x[28] * 43.089000;                 // nc3h7
  XW += x[29] * 55.100000;                 // c4h7
  XW += x[30] * 56.108000;                 // c4h8-1
  XW += x[31] * 57.116000;                 // pc4h9
  XW += x[32] * 57.072000;                 // ch3coch2
  XW += x[33] * 58.080000;                 // c2h5cho
  XW += x[34] * 57.072000;                 // c2h5co
  XW += x[35] * 69.127000;                 // c5h9
  XW += x[36] * 70.135000;                 // c5h10-1
  XW += x[37] * 45.061000;                 // c2h5o
  XW += x[38] * 47.033000;                 // ch3o2
  XW += x[39] * 48.041000;                 // ch3o2h
  XW += x[40] * 55.056000;                 // c2h3co
  XW += x[41] * 56.064000;                 // c2h3cho
  XW += x[42] * 57.072000;                 // c3h5o
  XW += x[43] * 71.099000;                 // c4h7o
  XW += x[44] * 121.112000;                // c4h8ooh1-3o2
  XW += x[45] * 89.114000;                 // c4h8ooh1-3
  XW += x[46] * 89.114000;                 // pc4h9o2
  XW += x[47] * 41.073000;                 // c3h5-a
  XW += x[48] * 39.057000;                 // c3h3
  XW += x[49] * 38.049000;                 // c3h2
  XW += x[50] * 14.027000;                 // ch2(s)
  XW += x[51] * 104.105000;                // nc4ket13
  XW += x[52] * 72.107000;                 // nc3h7cho
  XW += x[53] * 71.099000;                 // nc3h7co
  XW += x[54] * 71.099000;                 // c2h5coch2
  XW += x[55] * 85.126000;                 // nc3h7coch2
  XW += x[56] * 86.134000;                 // nc4h9cho
  XW += x[57] * 85.126000;                 // nc4h9co
  XW += x[58] * 100.205000;                // nc7h16
  XW += x[59] * 99.197000;                 // c7h15-1
  XW += x[60] * 99.197000;                 // c7h15-2
  XW += x[61] * 99.197000;                 // c7h15-3
  XW += x[62] * 99.197000;                 // c7h15-4
  XW += x[63] * 98.189000;                 // c7h14-2
  XW += x[64] * 98.189000;                 // c7h14-3
  XW += x[65] * 131.195000;                // c7h15o2-1
  XW += x[66] * 131.195000;                // c7h15o2-2
  XW += x[67] * 131.195000;                // c7h15o2-3
  XW += x[68] * 131.195000;                // c7h15o2-4
  XW += x[69] * 131.195000;                // c7h14ooh1-3
  XW += x[70] * 131.195000;                // c7h14ooh2-3
  XW += x[71] * 131.195000;                // c7h14ooh2-4
  XW += x[72] * 131.195000;                // c7h14ooh3-2
  XW += x[73] * 131.195000;                // c7h14ooh3-4
  XW += x[74] * 131.195000;                // c7h14ooh3-5
  XW += x[75] * 131.195000;                // c7h14ooh4-2
  XW += x[76] * 131.195000;                // c7h14ooh4-3
  XW += x[77] * 163.193000;                // c7h14ooh1-3o2
  XW += x[78] * 163.193000;                // c7h14ooh2-4o2
  XW += x[79] * 163.193000;                // c7h14ooh3-5o2
  XW += x[80] * 163.193000;                // c7h14ooh4-2o2
  XW += x[81] * 114.188000;                // c7h14o1-3
  XW += x[82] * 114.188000;                // c7h14o2-4
  XW += x[83] * 146.186000;                // nc7ket13
  XW += x[84] * 146.186000;                // nc7ket24
  XW += x[85] * 146.186000;                // nc7ket35
  XW += x[86] * 146.186000;                // nc7ket42
  XW += x[87] * 28.014000;                 // n2
  P = rho * 8.31446261815324e+07 * T / XW; // P = rho*R*T/W
}

// Compute P = rhoRT/W(y)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKPY(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real& P)
{
  amrex::Real YOW = 0; //  for computing mean MW

  for (int i = 0; i < 88; i++) {
    YOW += y[i] * imw(i);
  }
  P = rho * 8.31446261815324e+07 * T * YOW; // P = rho*R*T/W
}

// Compute P = rhoRT/W(c)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKPC(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real c[],
  amrex::Real& P)
{
  // See Eq 5 in CK Manual
  amrex::Real W = 0;
  amrex::Real sumC = 0;
  W += c[0] * 1.008000;    // h
  W += c[1] * 2.016000;    // h2
  W += c[2] * 15.999000;   // o
  W += c[3] * 31.998000;   // o2
  W += c[4] * 17.007000;   // oh
  W += c[5] * 18.015000;   // h2o
  W += c[6] * 28.010000;   // co
  W += c[7] * 29.018000;   // hco
  W += c[8] * 44.009000;   // co2
  W += c[9] * 15.035000;   // ch3
  W += c[10] * 16.043000;  // ch4
  W += c[11] * 33.006000;  // ho2
  W += c[12] * 34.014000;  // h2o2
  W += c[13] * 30.026000;  // ch2o
  W += c[14] * 31.034000;  // ch3o
  W += c[15] * 30.070000;  // c2h6
  W += c[16] * 28.054000;  // c2h4
  W += c[17] * 29.062000;  // c2h5
  W += c[18] * 26.038000;  // c2h2
  W += c[19] * 27.046000;  // c2h3
  W += c[20] * 42.037000;  // ch2co
  W += c[21] * 41.029000;  // hcco
  W += c[22] * 43.045000;  // ch3co
  W += c[23] * 43.045000;  // ch2cho
  W += c[24] * 44.053000;  // ch3cho
  W += c[25] * 40.065000;  // c3h4-a
  W += c[26] * 42.081000;  // c3h6
  W += c[27] * 54.092000;  // c4h6
  W += c[28] * 43.089000;  // nc3h7
  W += c[29] * 55.100000;  // c4h7
  W += c[30] * 56.108000;  // c4h8-1
  W += c[31] * 57.116000;  // pc4h9
  W += c[32] * 57.072000;  // ch3coch2
  W += c[33] * 58.080000;  // c2h5cho
  W += c[34] * 57.072000;  // c2h5co
  W += c[35] * 69.127000;  // c5h9
  W += c[36] * 70.135000;  // c5h10-1
  W += c[37] * 45.061000;  // c2h5o
  W += c[38] * 47.033000;  // ch3o2
  W += c[39] * 48.041000;  // ch3o2h
  W += c[40] * 55.056000;  // c2h3co
  W += c[41] * 56.064000;  // c2h3cho
  W += c[42] * 57.072000;  // c3h5o
  W += c[43] * 71.099000;  // c4h7o
  W += c[44] * 121.112000; // c4h8ooh1-3o2
  W += c[45] * 89.114000;  // c4h8ooh1-3
  W += c[46] * 89.114000;  // pc4h9o2
  W += c[47] * 41.073000;  // c3h5-a
  W += c[48] * 39.057000;  // c3h3
  W += c[49] * 38.049000;  // c3h2
  W += c[50] * 14.027000;  // ch2(s)
  W += c[51] * 104.105000; // nc4ket13
  W += c[52] * 72.107000;  // nc3h7cho
  W += c[53] * 71.099000;  // nc3h7co
  W += c[54] * 71.099000;  // c2h5coch2
  W += c[55] * 85.126000;  // nc3h7coch2
  W += c[56] * 86.134000;  // nc4h9cho
  W += c[57] * 85.126000;  // nc4h9co
  W += c[58] * 100.205000; // nc7h16
  W += c[59] * 99.197000;  // c7h15-1
  W += c[60] * 99.197000;  // c7h15-2
  W += c[61] * 99.197000;  // c7h15-3
  W += c[62] * 99.197000;  // c7h15-4
  W += c[63] * 98.189000;  // c7h14-2
  W += c[64] * 98.189000;  // c7h14-3
  W += c[65] * 131.195000; // c7h15o2-1
  W += c[66] * 131.195000; // c7h15o2-2
  W += c[67] * 131.195000; // c7h15o2-3
  W += c[68] * 131.195000; // c7h15o2-4
  W += c[69] * 131.195000; // c7h14ooh1-3
  W += c[70] * 131.195000; // c7h14ooh2-3
  W += c[71] * 131.195000; // c7h14ooh2-4
  W += c[72] * 131.195000; // c7h14ooh3-2
  W += c[73] * 131.195000; // c7h14ooh3-4
  W += c[74] * 131.195000; // c7h14ooh3-5
  W += c[75] * 131.195000; // c7h14ooh4-2
  W += c[76] * 131.195000; // c7h14ooh4-3
  W += c[77] * 163.193000; // c7h14ooh1-3o2
  W += c[78] * 163.193000; // c7h14ooh2-4o2
  W += c[79] * 163.193000; // c7h14ooh3-5o2
  W += c[80] * 163.193000; // c7h14ooh4-2o2
  W += c[81] * 114.188000; // c7h14o1-3
  W += c[82] * 114.188000; // c7h14o2-4
  W += c[83] * 146.186000; // nc7ket13
  W += c[84] * 146.186000; // nc7ket24
  W += c[85] * 146.186000; // nc7ket35
  W += c[86] * 146.186000; // nc7ket42
  W += c[87] * 28.014000;  // n2

  for (int id = 0; id < 88; ++id) {
    sumC += c[id];
  }
  P = rho * 8.31446261815324e+07 * T * sumC / W; // P = rho*R*T/W
}

// Compute rho = PW(x)/RT
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRHOX(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real& rho)
{
  amrex::Real XW = 0;                        //  To hold mean molecular wt
  XW += x[0] * 1.008000;                     // h
  XW += x[1] * 2.016000;                     // h2
  XW += x[2] * 15.999000;                    // o
  XW += x[3] * 31.998000;                    // o2
  XW += x[4] * 17.007000;                    // oh
  XW += x[5] * 18.015000;                    // h2o
  XW += x[6] * 28.010000;                    // co
  XW += x[7] * 29.018000;                    // hco
  XW += x[8] * 44.009000;                    // co2
  XW += x[9] * 15.035000;                    // ch3
  XW += x[10] * 16.043000;                   // ch4
  XW += x[11] * 33.006000;                   // ho2
  XW += x[12] * 34.014000;                   // h2o2
  XW += x[13] * 30.026000;                   // ch2o
  XW += x[14] * 31.034000;                   // ch3o
  XW += x[15] * 30.070000;                   // c2h6
  XW += x[16] * 28.054000;                   // c2h4
  XW += x[17] * 29.062000;                   // c2h5
  XW += x[18] * 26.038000;                   // c2h2
  XW += x[19] * 27.046000;                   // c2h3
  XW += x[20] * 42.037000;                   // ch2co
  XW += x[21] * 41.029000;                   // hcco
  XW += x[22] * 43.045000;                   // ch3co
  XW += x[23] * 43.045000;                   // ch2cho
  XW += x[24] * 44.053000;                   // ch3cho
  XW += x[25] * 40.065000;                   // c3h4-a
  XW += x[26] * 42.081000;                   // c3h6
  XW += x[27] * 54.092000;                   // c4h6
  XW += x[28] * 43.089000;                   // nc3h7
  XW += x[29] * 55.100000;                   // c4h7
  XW += x[30] * 56.108000;                   // c4h8-1
  XW += x[31] * 57.116000;                   // pc4h9
  XW += x[32] * 57.072000;                   // ch3coch2
  XW += x[33] * 58.080000;                   // c2h5cho
  XW += x[34] * 57.072000;                   // c2h5co
  XW += x[35] * 69.127000;                   // c5h9
  XW += x[36] * 70.135000;                   // c5h10-1
  XW += x[37] * 45.061000;                   // c2h5o
  XW += x[38] * 47.033000;                   // ch3o2
  XW += x[39] * 48.041000;                   // ch3o2h
  XW += x[40] * 55.056000;                   // c2h3co
  XW += x[41] * 56.064000;                   // c2h3cho
  XW += x[42] * 57.072000;                   // c3h5o
  XW += x[43] * 71.099000;                   // c4h7o
  XW += x[44] * 121.112000;                  // c4h8ooh1-3o2
  XW += x[45] * 89.114000;                   // c4h8ooh1-3
  XW += x[46] * 89.114000;                   // pc4h9o2
  XW += x[47] * 41.073000;                   // c3h5-a
  XW += x[48] * 39.057000;                   // c3h3
  XW += x[49] * 38.049000;                   // c3h2
  XW += x[50] * 14.027000;                   // ch2(s)
  XW += x[51] * 104.105000;                  // nc4ket13
  XW += x[52] * 72.107000;                   // nc3h7cho
  XW += x[53] * 71.099000;                   // nc3h7co
  XW += x[54] * 71.099000;                   // c2h5coch2
  XW += x[55] * 85.126000;                   // nc3h7coch2
  XW += x[56] * 86.134000;                   // nc4h9cho
  XW += x[57] * 85.126000;                   // nc4h9co
  XW += x[58] * 100.205000;                  // nc7h16
  XW += x[59] * 99.197000;                   // c7h15-1
  XW += x[60] * 99.197000;                   // c7h15-2
  XW += x[61] * 99.197000;                   // c7h15-3
  XW += x[62] * 99.197000;                   // c7h15-4
  XW += x[63] * 98.189000;                   // c7h14-2
  XW += x[64] * 98.189000;                   // c7h14-3
  XW += x[65] * 131.195000;                  // c7h15o2-1
  XW += x[66] * 131.195000;                  // c7h15o2-2
  XW += x[67] * 131.195000;                  // c7h15o2-3
  XW += x[68] * 131.195000;                  // c7h15o2-4
  XW += x[69] * 131.195000;                  // c7h14ooh1-3
  XW += x[70] * 131.195000;                  // c7h14ooh2-3
  XW += x[71] * 131.195000;                  // c7h14ooh2-4
  XW += x[72] * 131.195000;                  // c7h14ooh3-2
  XW += x[73] * 131.195000;                  // c7h14ooh3-4
  XW += x[74] * 131.195000;                  // c7h14ooh3-5
  XW += x[75] * 131.195000;                  // c7h14ooh4-2
  XW += x[76] * 131.195000;                  // c7h14ooh4-3
  XW += x[77] * 163.193000;                  // c7h14ooh1-3o2
  XW += x[78] * 163.193000;                  // c7h14ooh2-4o2
  XW += x[79] * 163.193000;                  // c7h14ooh3-5o2
  XW += x[80] * 163.193000;                  // c7h14ooh4-2o2
  XW += x[81] * 114.188000;                  // c7h14o1-3
  XW += x[82] * 114.188000;                  // c7h14o2-4
  XW += x[83] * 146.186000;                  // nc7ket13
  XW += x[84] * 146.186000;                  // nc7ket24
  XW += x[85] * 146.186000;                  // nc7ket35
  XW += x[86] * 146.186000;                  // nc7ket42
  XW += x[87] * 28.014000;                   // n2
  rho = P * XW / (8.31446261815324e+07 * T); // rho = P*W/(R*T)
}

// Compute rho = P*W(y)/RT
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRHOY(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real& rho)
{
  amrex::Real YOW = 0;

  for (int i = 0; i < 88; i++) {
    YOW += y[i] * imw(i);
  }

  rho = P / (8.31446261815324e+07 * T * YOW); // rho = P*W/(R*T)
}

// Compute rho = P*W(c)/(R*T)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRHOC(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real c[],
  amrex::Real& rho)
{
  // See Eq 5 in CK Manual
  amrex::Real W = 0;
  amrex::Real sumC = 0;
  W += c[0] * 1.008000;    // h
  W += c[1] * 2.016000;    // h2
  W += c[2] * 15.999000;   // o
  W += c[3] * 31.998000;   // o2
  W += c[4] * 17.007000;   // oh
  W += c[5] * 18.015000;   // h2o
  W += c[6] * 28.010000;   // co
  W += c[7] * 29.018000;   // hco
  W += c[8] * 44.009000;   // co2
  W += c[9] * 15.035000;   // ch3
  W += c[10] * 16.043000;  // ch4
  W += c[11] * 33.006000;  // ho2
  W += c[12] * 34.014000;  // h2o2
  W += c[13] * 30.026000;  // ch2o
  W += c[14] * 31.034000;  // ch3o
  W += c[15] * 30.070000;  // c2h6
  W += c[16] * 28.054000;  // c2h4
  W += c[17] * 29.062000;  // c2h5
  W += c[18] * 26.038000;  // c2h2
  W += c[19] * 27.046000;  // c2h3
  W += c[20] * 42.037000;  // ch2co
  W += c[21] * 41.029000;  // hcco
  W += c[22] * 43.045000;  // ch3co
  W += c[23] * 43.045000;  // ch2cho
  W += c[24] * 44.053000;  // ch3cho
  W += c[25] * 40.065000;  // c3h4-a
  W += c[26] * 42.081000;  // c3h6
  W += c[27] * 54.092000;  // c4h6
  W += c[28] * 43.089000;  // nc3h7
  W += c[29] * 55.100000;  // c4h7
  W += c[30] * 56.108000;  // c4h8-1
  W += c[31] * 57.116000;  // pc4h9
  W += c[32] * 57.072000;  // ch3coch2
  W += c[33] * 58.080000;  // c2h5cho
  W += c[34] * 57.072000;  // c2h5co
  W += c[35] * 69.127000;  // c5h9
  W += c[36] * 70.135000;  // c5h10-1
  W += c[37] * 45.061000;  // c2h5o
  W += c[38] * 47.033000;  // ch3o2
  W += c[39] * 48.041000;  // ch3o2h
  W += c[40] * 55.056000;  // c2h3co
  W += c[41] * 56.064000;  // c2h3cho
  W += c[42] * 57.072000;  // c3h5o
  W += c[43] * 71.099000;  // c4h7o
  W += c[44] * 121.112000; // c4h8ooh1-3o2
  W += c[45] * 89.114000;  // c4h8ooh1-3
  W += c[46] * 89.114000;  // pc4h9o2
  W += c[47] * 41.073000;  // c3h5-a
  W += c[48] * 39.057000;  // c3h3
  W += c[49] * 38.049000;  // c3h2
  W += c[50] * 14.027000;  // ch2(s)
  W += c[51] * 104.105000; // nc4ket13
  W += c[52] * 72.107000;  // nc3h7cho
  W += c[53] * 71.099000;  // nc3h7co
  W += c[54] * 71.099000;  // c2h5coch2
  W += c[55] * 85.126000;  // nc3h7coch2
  W += c[56] * 86.134000;  // nc4h9cho
  W += c[57] * 85.126000;  // nc4h9co
  W += c[58] * 100.205000; // nc7h16
  W += c[59] * 99.197000;  // c7h15-1
  W += c[60] * 99.197000;  // c7h15-2
  W += c[61] * 99.197000;  // c7h15-3
  W += c[62] * 99.197000;  // c7h15-4
  W += c[63] * 98.189000;  // c7h14-2
  W += c[64] * 98.189000;  // c7h14-3
  W += c[65] * 131.195000; // c7h15o2-1
  W += c[66] * 131.195000; // c7h15o2-2
  W += c[67] * 131.195000; // c7h15o2-3
  W += c[68] * 131.195000; // c7h15o2-4
  W += c[69] * 131.195000; // c7h14ooh1-3
  W += c[70] * 131.195000; // c7h14ooh2-3
  W += c[71] * 131.195000; // c7h14ooh2-4
  W += c[72] * 131.195000; // c7h14ooh3-2
  W += c[73] * 131.195000; // c7h14ooh3-4
  W += c[74] * 131.195000; // c7h14ooh3-5
  W += c[75] * 131.195000; // c7h14ooh4-2
  W += c[76] * 131.195000; // c7h14ooh4-3
  W += c[77] * 163.193000; // c7h14ooh1-3o2
  W += c[78] * 163.193000; // c7h14ooh2-4o2
  W += c[79] * 163.193000; // c7h14ooh3-5o2
  W += c[80] * 163.193000; // c7h14ooh4-2o2
  W += c[81] * 114.188000; // c7h14o1-3
  W += c[82] * 114.188000; // c7h14o2-4
  W += c[83] * 146.186000; // nc7ket13
  W += c[84] * 146.186000; // nc7ket24
  W += c[85] * 146.186000; // nc7ket35
  W += c[86] * 146.186000; // nc7ket42
  W += c[87] * 28.014000;  // n2

  for (int id = 0; id < 88; ++id) {
    sumC += c[id];
  }
  rho = P * W / (sumC * T * 8.31446261815324e+07); // rho = PW/(R*T)
}

// get molecular weight for all species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWT(amrex::Real wt[])
{
  get_mw(wt);
}

// given y[species]: mass fractions
// s mean molecular weight (gm/mole)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKMMWY(const amrex::Real y[], amrex::Real& wtm)
{
  amrex::Real YOW = 0;

  for (int i = 0; i < 88; i++) {
    YOW += y[i] * imw(i);
  }

  wtm = 1.0 / YOW;
}

// given x[species]: mole fractions
// returns mean molecular weight (gm/mole)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKMMWX(const amrex::Real x[], amrex::Real& wtm)
{
  amrex::Real XW = 0;       //  see Eq 4 in CK Manual
  XW += x[0] * 1.008000;    // h
  XW += x[1] * 2.016000;    // h2
  XW += x[2] * 15.999000;   // o
  XW += x[3] * 31.998000;   // o2
  XW += x[4] * 17.007000;   // oh
  XW += x[5] * 18.015000;   // h2o
  XW += x[6] * 28.010000;   // co
  XW += x[7] * 29.018000;   // hco
  XW += x[8] * 44.009000;   // co2
  XW += x[9] * 15.035000;   // ch3
  XW += x[10] * 16.043000;  // ch4
  XW += x[11] * 33.006000;  // ho2
  XW += x[12] * 34.014000;  // h2o2
  XW += x[13] * 30.026000;  // ch2o
  XW += x[14] * 31.034000;  // ch3o
  XW += x[15] * 30.070000;  // c2h6
  XW += x[16] * 28.054000;  // c2h4
  XW += x[17] * 29.062000;  // c2h5
  XW += x[18] * 26.038000;  // c2h2
  XW += x[19] * 27.046000;  // c2h3
  XW += x[20] * 42.037000;  // ch2co
  XW += x[21] * 41.029000;  // hcco
  XW += x[22] * 43.045000;  // ch3co
  XW += x[23] * 43.045000;  // ch2cho
  XW += x[24] * 44.053000;  // ch3cho
  XW += x[25] * 40.065000;  // c3h4-a
  XW += x[26] * 42.081000;  // c3h6
  XW += x[27] * 54.092000;  // c4h6
  XW += x[28] * 43.089000;  // nc3h7
  XW += x[29] * 55.100000;  // c4h7
  XW += x[30] * 56.108000;  // c4h8-1
  XW += x[31] * 57.116000;  // pc4h9
  XW += x[32] * 57.072000;  // ch3coch2
  XW += x[33] * 58.080000;  // c2h5cho
  XW += x[34] * 57.072000;  // c2h5co
  XW += x[35] * 69.127000;  // c5h9
  XW += x[36] * 70.135000;  // c5h10-1
  XW += x[37] * 45.061000;  // c2h5o
  XW += x[38] * 47.033000;  // ch3o2
  XW += x[39] * 48.041000;  // ch3o2h
  XW += x[40] * 55.056000;  // c2h3co
  XW += x[41] * 56.064000;  // c2h3cho
  XW += x[42] * 57.072000;  // c3h5o
  XW += x[43] * 71.099000;  // c4h7o
  XW += x[44] * 121.112000; // c4h8ooh1-3o2
  XW += x[45] * 89.114000;  // c4h8ooh1-3
  XW += x[46] * 89.114000;  // pc4h9o2
  XW += x[47] * 41.073000;  // c3h5-a
  XW += x[48] * 39.057000;  // c3h3
  XW += x[49] * 38.049000;  // c3h2
  XW += x[50] * 14.027000;  // ch2(s)
  XW += x[51] * 104.105000; // nc4ket13
  XW += x[52] * 72.107000;  // nc3h7cho
  XW += x[53] * 71.099000;  // nc3h7co
  XW += x[54] * 71.099000;  // c2h5coch2
  XW += x[55] * 85.126000;  // nc3h7coch2
  XW += x[56] * 86.134000;  // nc4h9cho
  XW += x[57] * 85.126000;  // nc4h9co
  XW += x[58] * 100.205000; // nc7h16
  XW += x[59] * 99.197000;  // c7h15-1
  XW += x[60] * 99.197000;  // c7h15-2
  XW += x[61] * 99.197000;  // c7h15-3
  XW += x[62] * 99.197000;  // c7h15-4
  XW += x[63] * 98.189000;  // c7h14-2
  XW += x[64] * 98.189000;  // c7h14-3
  XW += x[65] * 131.195000; // c7h15o2-1
  XW += x[66] * 131.195000; // c7h15o2-2
  XW += x[67] * 131.195000; // c7h15o2-3
  XW += x[68] * 131.195000; // c7h15o2-4
  XW += x[69] * 131.195000; // c7h14ooh1-3
  XW += x[70] * 131.195000; // c7h14ooh2-3
  XW += x[71] * 131.195000; // c7h14ooh2-4
  XW += x[72] * 131.195000; // c7h14ooh3-2
  XW += x[73] * 131.195000; // c7h14ooh3-4
  XW += x[74] * 131.195000; // c7h14ooh3-5
  XW += x[75] * 131.195000; // c7h14ooh4-2
  XW += x[76] * 131.195000; // c7h14ooh4-3
  XW += x[77] * 163.193000; // c7h14ooh1-3o2
  XW += x[78] * 163.193000; // c7h14ooh2-4o2
  XW += x[79] * 163.193000; // c7h14ooh3-5o2
  XW += x[80] * 163.193000; // c7h14ooh4-2o2
  XW += x[81] * 114.188000; // c7h14o1-3
  XW += x[82] * 114.188000; // c7h14o2-4
  XW += x[83] * 146.186000; // nc7ket13
  XW += x[84] * 146.186000; // nc7ket24
  XW += x[85] * 146.186000; // nc7ket35
  XW += x[86] * 146.186000; // nc7ket42
  XW += x[87] * 28.014000;  // n2
  wtm = XW;
}

// given c[species]: molar concentration
// returns mean molecular weight (gm/mole)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKMMWC(const amrex::Real c[], amrex::Real& wtm)
{
  // See Eq 5 in CK Manual
  amrex::Real W = 0;
  amrex::Real sumC = 0;
  W += c[0] * 1.008000;    // h
  W += c[1] * 2.016000;    // h2
  W += c[2] * 15.999000;   // o
  W += c[3] * 31.998000;   // o2
  W += c[4] * 17.007000;   // oh
  W += c[5] * 18.015000;   // h2o
  W += c[6] * 28.010000;   // co
  W += c[7] * 29.018000;   // hco
  W += c[8] * 44.009000;   // co2
  W += c[9] * 15.035000;   // ch3
  W += c[10] * 16.043000;  // ch4
  W += c[11] * 33.006000;  // ho2
  W += c[12] * 34.014000;  // h2o2
  W += c[13] * 30.026000;  // ch2o
  W += c[14] * 31.034000;  // ch3o
  W += c[15] * 30.070000;  // c2h6
  W += c[16] * 28.054000;  // c2h4
  W += c[17] * 29.062000;  // c2h5
  W += c[18] * 26.038000;  // c2h2
  W += c[19] * 27.046000;  // c2h3
  W += c[20] * 42.037000;  // ch2co
  W += c[21] * 41.029000;  // hcco
  W += c[22] * 43.045000;  // ch3co
  W += c[23] * 43.045000;  // ch2cho
  W += c[24] * 44.053000;  // ch3cho
  W += c[25] * 40.065000;  // c3h4-a
  W += c[26] * 42.081000;  // c3h6
  W += c[27] * 54.092000;  // c4h6
  W += c[28] * 43.089000;  // nc3h7
  W += c[29] * 55.100000;  // c4h7
  W += c[30] * 56.108000;  // c4h8-1
  W += c[31] * 57.116000;  // pc4h9
  W += c[32] * 57.072000;  // ch3coch2
  W += c[33] * 58.080000;  // c2h5cho
  W += c[34] * 57.072000;  // c2h5co
  W += c[35] * 69.127000;  // c5h9
  W += c[36] * 70.135000;  // c5h10-1
  W += c[37] * 45.061000;  // c2h5o
  W += c[38] * 47.033000;  // ch3o2
  W += c[39] * 48.041000;  // ch3o2h
  W += c[40] * 55.056000;  // c2h3co
  W += c[41] * 56.064000;  // c2h3cho
  W += c[42] * 57.072000;  // c3h5o
  W += c[43] * 71.099000;  // c4h7o
  W += c[44] * 121.112000; // c4h8ooh1-3o2
  W += c[45] * 89.114000;  // c4h8ooh1-3
  W += c[46] * 89.114000;  // pc4h9o2
  W += c[47] * 41.073000;  // c3h5-a
  W += c[48] * 39.057000;  // c3h3
  W += c[49] * 38.049000;  // c3h2
  W += c[50] * 14.027000;  // ch2(s)
  W += c[51] * 104.105000; // nc4ket13
  W += c[52] * 72.107000;  // nc3h7cho
  W += c[53] * 71.099000;  // nc3h7co
  W += c[54] * 71.099000;  // c2h5coch2
  W += c[55] * 85.126000;  // nc3h7coch2
  W += c[56] * 86.134000;  // nc4h9cho
  W += c[57] * 85.126000;  // nc4h9co
  W += c[58] * 100.205000; // nc7h16
  W += c[59] * 99.197000;  // c7h15-1
  W += c[60] * 99.197000;  // c7h15-2
  W += c[61] * 99.197000;  // c7h15-3
  W += c[62] * 99.197000;  // c7h15-4
  W += c[63] * 98.189000;  // c7h14-2
  W += c[64] * 98.189000;  // c7h14-3
  W += c[65] * 131.195000; // c7h15o2-1
  W += c[66] * 131.195000; // c7h15o2-2
  W += c[67] * 131.195000; // c7h15o2-3
  W += c[68] * 131.195000; // c7h15o2-4
  W += c[69] * 131.195000; // c7h14ooh1-3
  W += c[70] * 131.195000; // c7h14ooh2-3
  W += c[71] * 131.195000; // c7h14ooh2-4
  W += c[72] * 131.195000; // c7h14ooh3-2
  W += c[73] * 131.195000; // c7h14ooh3-4
  W += c[74] * 131.195000; // c7h14ooh3-5
  W += c[75] * 131.195000; // c7h14ooh4-2
  W += c[76] * 131.195000; // c7h14ooh4-3
  W += c[77] * 163.193000; // c7h14ooh1-3o2
  W += c[78] * 163.193000; // c7h14ooh2-4o2
  W += c[79] * 163.193000; // c7h14ooh3-5o2
  W += c[80] * 163.193000; // c7h14ooh4-2o2
  W += c[81] * 114.188000; // c7h14o1-3
  W += c[82] * 114.188000; // c7h14o2-4
  W += c[83] * 146.186000; // nc7ket13
  W += c[84] * 146.186000; // nc7ket24
  W += c[85] * 146.186000; // nc7ket35
  W += c[86] * 146.186000; // nc7ket42
  W += c[87] * 28.014000;  // n2

  for (int id = 0; id < 88; ++id) {
    sumC += c[id];
  }
  //  CK provides no guard against division by zero
  wtm = W / sumC;
}

// get Cp/R as a function of T
// for all species (Eq 19)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPOR(const amrex::Real T, amrex::Real cpor[])
{
  cp_R(cpor, T);
}

// get H/RT as a function of T
// for all species (Eq 20)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHORT(const amrex::Real T, amrex::Real hort[])
{
  speciesEnthalpy(hort, T);
}

// get S/R as a function of T
// for all species (Eq 21)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSOR(const amrex::Real T, amrex::Real sor[])
{
  speciesEntropy(sor, T);
}

// convert y[species] (mass fracs) to x[species] (mole fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKYTX(const amrex::Real y[], amrex::Real x[])
{
  amrex::Real YOW = 0;

  for (int i = 0; i < 88; i++) {
    YOW += y[i] * imw(i);
  }

  amrex::Real YOWINV = 1.0 / YOW;

  for (int i = 0; i < 88; i++) {
    x[i] = y[i] * imw(i) * YOWINV;
  }
}

// convert y[species] (mass fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKYTCP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real c[])
{
  amrex::Real YOW = 0;
  amrex::Real PWORT;

  // Compute inverse of mean molecular wt first
  for (int i = 0; i < 88; i++) {
    c[i] = y[i] * imw(i);
  }
  for (int i = 0; i < 88; i++) {
    YOW += c[i];
  }

  // PW/RT (see Eq. 7)
  PWORT = P / (YOW * 8.31446261815324e+07 * T);
  // Now compute conversion

  for (int i = 0; i < 88; i++) {
    c[i] = PWORT * y[i] * imw(i);
  }
}

// convert y[species] (mass fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKYTCR(
  const amrex::Real rho,
  amrex::Real /*T*/,
  const amrex::Real y[],
  amrex::Real c[])
{

  for (int i = 0; i < 88; i++) {
    c[i] = rho * y[i] * imw(i);
  }
}

// convert x[species] (mole fracs) to y[species] (mass fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKXTY(const amrex::Real x[], amrex::Real y[])
{
  amrex::Real XW = 0; // See Eq 4, 9 in CK Manual
  // Compute mean molecular wt first
  XW += x[0] * 1.008000;    // h
  XW += x[1] * 2.016000;    // h2
  XW += x[2] * 15.999000;   // o
  XW += x[3] * 31.998000;   // o2
  XW += x[4] * 17.007000;   // oh
  XW += x[5] * 18.015000;   // h2o
  XW += x[6] * 28.010000;   // co
  XW += x[7] * 29.018000;   // hco
  XW += x[8] * 44.009000;   // co2
  XW += x[9] * 15.035000;   // ch3
  XW += x[10] * 16.043000;  // ch4
  XW += x[11] * 33.006000;  // ho2
  XW += x[12] * 34.014000;  // h2o2
  XW += x[13] * 30.026000;  // ch2o
  XW += x[14] * 31.034000;  // ch3o
  XW += x[15] * 30.070000;  // c2h6
  XW += x[16] * 28.054000;  // c2h4
  XW += x[17] * 29.062000;  // c2h5
  XW += x[18] * 26.038000;  // c2h2
  XW += x[19] * 27.046000;  // c2h3
  XW += x[20] * 42.037000;  // ch2co
  XW += x[21] * 41.029000;  // hcco
  XW += x[22] * 43.045000;  // ch3co
  XW += x[23] * 43.045000;  // ch2cho
  XW += x[24] * 44.053000;  // ch3cho
  XW += x[25] * 40.065000;  // c3h4-a
  XW += x[26] * 42.081000;  // c3h6
  XW += x[27] * 54.092000;  // c4h6
  XW += x[28] * 43.089000;  // nc3h7
  XW += x[29] * 55.100000;  // c4h7
  XW += x[30] * 56.108000;  // c4h8-1
  XW += x[31] * 57.116000;  // pc4h9
  XW += x[32] * 57.072000;  // ch3coch2
  XW += x[33] * 58.080000;  // c2h5cho
  XW += x[34] * 57.072000;  // c2h5co
  XW += x[35] * 69.127000;  // c5h9
  XW += x[36] * 70.135000;  // c5h10-1
  XW += x[37] * 45.061000;  // c2h5o
  XW += x[38] * 47.033000;  // ch3o2
  XW += x[39] * 48.041000;  // ch3o2h
  XW += x[40] * 55.056000;  // c2h3co
  XW += x[41] * 56.064000;  // c2h3cho
  XW += x[42] * 57.072000;  // c3h5o
  XW += x[43] * 71.099000;  // c4h7o
  XW += x[44] * 121.112000; // c4h8ooh1-3o2
  XW += x[45] * 89.114000;  // c4h8ooh1-3
  XW += x[46] * 89.114000;  // pc4h9o2
  XW += x[47] * 41.073000;  // c3h5-a
  XW += x[48] * 39.057000;  // c3h3
  XW += x[49] * 38.049000;  // c3h2
  XW += x[50] * 14.027000;  // ch2(s)
  XW += x[51] * 104.105000; // nc4ket13
  XW += x[52] * 72.107000;  // nc3h7cho
  XW += x[53] * 71.099000;  // nc3h7co
  XW += x[54] * 71.099000;  // c2h5coch2
  XW += x[55] * 85.126000;  // nc3h7coch2
  XW += x[56] * 86.134000;  // nc4h9cho
  XW += x[57] * 85.126000;  // nc4h9co
  XW += x[58] * 100.205000; // nc7h16
  XW += x[59] * 99.197000;  // c7h15-1
  XW += x[60] * 99.197000;  // c7h15-2
  XW += x[61] * 99.197000;  // c7h15-3
  XW += x[62] * 99.197000;  // c7h15-4
  XW += x[63] * 98.189000;  // c7h14-2
  XW += x[64] * 98.189000;  // c7h14-3
  XW += x[65] * 131.195000; // c7h15o2-1
  XW += x[66] * 131.195000; // c7h15o2-2
  XW += x[67] * 131.195000; // c7h15o2-3
  XW += x[68] * 131.195000; // c7h15o2-4
  XW += x[69] * 131.195000; // c7h14ooh1-3
  XW += x[70] * 131.195000; // c7h14ooh2-3
  XW += x[71] * 131.195000; // c7h14ooh2-4
  XW += x[72] * 131.195000; // c7h14ooh3-2
  XW += x[73] * 131.195000; // c7h14ooh3-4
  XW += x[74] * 131.195000; // c7h14ooh3-5
  XW += x[75] * 131.195000; // c7h14ooh4-2
  XW += x[76] * 131.195000; // c7h14ooh4-3
  XW += x[77] * 163.193000; // c7h14ooh1-3o2
  XW += x[78] * 163.193000; // c7h14ooh2-4o2
  XW += x[79] * 163.193000; // c7h14ooh3-5o2
  XW += x[80] * 163.193000; // c7h14ooh4-2o2
  XW += x[81] * 114.188000; // c7h14o1-3
  XW += x[82] * 114.188000; // c7h14o2-4
  XW += x[83] * 146.186000; // nc7ket13
  XW += x[84] * 146.186000; // nc7ket24
  XW += x[85] * 146.186000; // nc7ket35
  XW += x[86] * 146.186000; // nc7ket42
  XW += x[87] * 28.014000;  // n2
  // Now compute conversion
  amrex::Real XWinv = 1.0 / XW;
  y[0] = x[0] * 1.008000 * XWinv;
  y[1] = x[1] * 2.016000 * XWinv;
  y[2] = x[2] * 15.999000 * XWinv;
  y[3] = x[3] * 31.998000 * XWinv;
  y[4] = x[4] * 17.007000 * XWinv;
  y[5] = x[5] * 18.015000 * XWinv;
  y[6] = x[6] * 28.010000 * XWinv;
  y[7] = x[7] * 29.018000 * XWinv;
  y[8] = x[8] * 44.009000 * XWinv;
  y[9] = x[9] * 15.035000 * XWinv;
  y[10] = x[10] * 16.043000 * XWinv;
  y[11] = x[11] * 33.006000 * XWinv;
  y[12] = x[12] * 34.014000 * XWinv;
  y[13] = x[13] * 30.026000 * XWinv;
  y[14] = x[14] * 31.034000 * XWinv;
  y[15] = x[15] * 30.070000 * XWinv;
  y[16] = x[16] * 28.054000 * XWinv;
  y[17] = x[17] * 29.062000 * XWinv;
  y[18] = x[18] * 26.038000 * XWinv;
  y[19] = x[19] * 27.046000 * XWinv;
  y[20] = x[20] * 42.037000 * XWinv;
  y[21] = x[21] * 41.029000 * XWinv;
  y[22] = x[22] * 43.045000 * XWinv;
  y[23] = x[23] * 43.045000 * XWinv;
  y[24] = x[24] * 44.053000 * XWinv;
  y[25] = x[25] * 40.065000 * XWinv;
  y[26] = x[26] * 42.081000 * XWinv;
  y[27] = x[27] * 54.092000 * XWinv;
  y[28] = x[28] * 43.089000 * XWinv;
  y[29] = x[29] * 55.100000 * XWinv;
  y[30] = x[30] * 56.108000 * XWinv;
  y[31] = x[31] * 57.116000 * XWinv;
  y[32] = x[32] * 57.072000 * XWinv;
  y[33] = x[33] * 58.080000 * XWinv;
  y[34] = x[34] * 57.072000 * XWinv;
  y[35] = x[35] * 69.127000 * XWinv;
  y[36] = x[36] * 70.135000 * XWinv;
  y[37] = x[37] * 45.061000 * XWinv;
  y[38] = x[38] * 47.033000 * XWinv;
  y[39] = x[39] * 48.041000 * XWinv;
  y[40] = x[40] * 55.056000 * XWinv;
  y[41] = x[41] * 56.064000 * XWinv;
  y[42] = x[42] * 57.072000 * XWinv;
  y[43] = x[43] * 71.099000 * XWinv;
  y[44] = x[44] * 121.112000 * XWinv;
  y[45] = x[45] * 89.114000 * XWinv;
  y[46] = x[46] * 89.114000 * XWinv;
  y[47] = x[47] * 41.073000 * XWinv;
  y[48] = x[48] * 39.057000 * XWinv;
  y[49] = x[49] * 38.049000 * XWinv;
  y[50] = x[50] * 14.027000 * XWinv;
  y[51] = x[51] * 104.105000 * XWinv;
  y[52] = x[52] * 72.107000 * XWinv;
  y[53] = x[53] * 71.099000 * XWinv;
  y[54] = x[54] * 71.099000 * XWinv;
  y[55] = x[55] * 85.126000 * XWinv;
  y[56] = x[56] * 86.134000 * XWinv;
  y[57] = x[57] * 85.126000 * XWinv;
  y[58] = x[58] * 100.205000 * XWinv;
  y[59] = x[59] * 99.197000 * XWinv;
  y[60] = x[60] * 99.197000 * XWinv;
  y[61] = x[61] * 99.197000 * XWinv;
  y[62] = x[62] * 99.197000 * XWinv;
  y[63] = x[63] * 98.189000 * XWinv;
  y[64] = x[64] * 98.189000 * XWinv;
  y[65] = x[65] * 131.195000 * XWinv;
  y[66] = x[66] * 131.195000 * XWinv;
  y[67] = x[67] * 131.195000 * XWinv;
  y[68] = x[68] * 131.195000 * XWinv;
  y[69] = x[69] * 131.195000 * XWinv;
  y[70] = x[70] * 131.195000 * XWinv;
  y[71] = x[71] * 131.195000 * XWinv;
  y[72] = x[72] * 131.195000 * XWinv;
  y[73] = x[73] * 131.195000 * XWinv;
  y[74] = x[74] * 131.195000 * XWinv;
  y[75] = x[75] * 131.195000 * XWinv;
  y[76] = x[76] * 131.195000 * XWinv;
  y[77] = x[77] * 163.193000 * XWinv;
  y[78] = x[78] * 163.193000 * XWinv;
  y[79] = x[79] * 163.193000 * XWinv;
  y[80] = x[80] * 163.193000 * XWinv;
  y[81] = x[81] * 114.188000 * XWinv;
  y[82] = x[82] * 114.188000 * XWinv;
  y[83] = x[83] * 146.186000 * XWinv;
  y[84] = x[84] * 146.186000 * XWinv;
  y[85] = x[85] * 146.186000 * XWinv;
  y[86] = x[86] * 146.186000 * XWinv;
  y[87] = x[87] * 28.014000 * XWinv;
}

// convert x[species] (mole fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKXTCP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real c[])
{
  amrex::Real PORT = P / (8.31446261815324e+07 * T); // P/RT

  // Compute conversion, see Eq 10
  for (int id = 0; id < 88; ++id) {
    c[id] = x[id] * PORT;
  }
}

// convert x[species] (mole fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKXTCR(
  const amrex::Real rho,
  const amrex::Real /*T*/,
  const amrex::Real x[],
  amrex::Real c[])
{
  amrex::Real XW = 0; // See Eq 4, 11 in CK Manual
  amrex::Real ROW;
  // Compute mean molecular wt first
  XW += x[0] * 1.008000;    // h
  XW += x[1] * 2.016000;    // h2
  XW += x[2] * 15.999000;   // o
  XW += x[3] * 31.998000;   // o2
  XW += x[4] * 17.007000;   // oh
  XW += x[5] * 18.015000;   // h2o
  XW += x[6] * 28.010000;   // co
  XW += x[7] * 29.018000;   // hco
  XW += x[8] * 44.009000;   // co2
  XW += x[9] * 15.035000;   // ch3
  XW += x[10] * 16.043000;  // ch4
  XW += x[11] * 33.006000;  // ho2
  XW += x[12] * 34.014000;  // h2o2
  XW += x[13] * 30.026000;  // ch2o
  XW += x[14] * 31.034000;  // ch3o
  XW += x[15] * 30.070000;  // c2h6
  XW += x[16] * 28.054000;  // c2h4
  XW += x[17] * 29.062000;  // c2h5
  XW += x[18] * 26.038000;  // c2h2
  XW += x[19] * 27.046000;  // c2h3
  XW += x[20] * 42.037000;  // ch2co
  XW += x[21] * 41.029000;  // hcco
  XW += x[22] * 43.045000;  // ch3co
  XW += x[23] * 43.045000;  // ch2cho
  XW += x[24] * 44.053000;  // ch3cho
  XW += x[25] * 40.065000;  // c3h4-a
  XW += x[26] * 42.081000;  // c3h6
  XW += x[27] * 54.092000;  // c4h6
  XW += x[28] * 43.089000;  // nc3h7
  XW += x[29] * 55.100000;  // c4h7
  XW += x[30] * 56.108000;  // c4h8-1
  XW += x[31] * 57.116000;  // pc4h9
  XW += x[32] * 57.072000;  // ch3coch2
  XW += x[33] * 58.080000;  // c2h5cho
  XW += x[34] * 57.072000;  // c2h5co
  XW += x[35] * 69.127000;  // c5h9
  XW += x[36] * 70.135000;  // c5h10-1
  XW += x[37] * 45.061000;  // c2h5o
  XW += x[38] * 47.033000;  // ch3o2
  XW += x[39] * 48.041000;  // ch3o2h
  XW += x[40] * 55.056000;  // c2h3co
  XW += x[41] * 56.064000;  // c2h3cho
  XW += x[42] * 57.072000;  // c3h5o
  XW += x[43] * 71.099000;  // c4h7o
  XW += x[44] * 121.112000; // c4h8ooh1-3o2
  XW += x[45] * 89.114000;  // c4h8ooh1-3
  XW += x[46] * 89.114000;  // pc4h9o2
  XW += x[47] * 41.073000;  // c3h5-a
  XW += x[48] * 39.057000;  // c3h3
  XW += x[49] * 38.049000;  // c3h2
  XW += x[50] * 14.027000;  // ch2(s)
  XW += x[51] * 104.105000; // nc4ket13
  XW += x[52] * 72.107000;  // nc3h7cho
  XW += x[53] * 71.099000;  // nc3h7co
  XW += x[54] * 71.099000;  // c2h5coch2
  XW += x[55] * 85.126000;  // nc3h7coch2
  XW += x[56] * 86.134000;  // nc4h9cho
  XW += x[57] * 85.126000;  // nc4h9co
  XW += x[58] * 100.205000; // nc7h16
  XW += x[59] * 99.197000;  // c7h15-1
  XW += x[60] * 99.197000;  // c7h15-2
  XW += x[61] * 99.197000;  // c7h15-3
  XW += x[62] * 99.197000;  // c7h15-4
  XW += x[63] * 98.189000;  // c7h14-2
  XW += x[64] * 98.189000;  // c7h14-3
  XW += x[65] * 131.195000; // c7h15o2-1
  XW += x[66] * 131.195000; // c7h15o2-2
  XW += x[67] * 131.195000; // c7h15o2-3
  XW += x[68] * 131.195000; // c7h15o2-4
  XW += x[69] * 131.195000; // c7h14ooh1-3
  XW += x[70] * 131.195000; // c7h14ooh2-3
  XW += x[71] * 131.195000; // c7h14ooh2-4
  XW += x[72] * 131.195000; // c7h14ooh3-2
  XW += x[73] * 131.195000; // c7h14ooh3-4
  XW += x[74] * 131.195000; // c7h14ooh3-5
  XW += x[75] * 131.195000; // c7h14ooh4-2
  XW += x[76] * 131.195000; // c7h14ooh4-3
  XW += x[77] * 163.193000; // c7h14ooh1-3o2
  XW += x[78] * 163.193000; // c7h14ooh2-4o2
  XW += x[79] * 163.193000; // c7h14ooh3-5o2
  XW += x[80] * 163.193000; // c7h14ooh4-2o2
  XW += x[81] * 114.188000; // c7h14o1-3
  XW += x[82] * 114.188000; // c7h14o2-4
  XW += x[83] * 146.186000; // nc7ket13
  XW += x[84] * 146.186000; // nc7ket24
  XW += x[85] * 146.186000; // nc7ket35
  XW += x[86] * 146.186000; // nc7ket42
  XW += x[87] * 28.014000;  // n2
  ROW = rho / XW;

  // Compute conversion, see Eq 11
  for (int id = 0; id < 88; ++id) {
    c[id] = x[id] * ROW;
  }
}

// convert c[species] (molar conc) to x[species] (mole fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCTX(const amrex::Real c[], amrex::Real x[])
{
  amrex::Real sumC = 0;

  // compute sum of c
  for (int id = 0; id < 88; ++id) {
    sumC += c[id];
  }

  //  See Eq 13
  amrex::Real sumCinv = 1.0 / sumC;
  for (int id = 0; id < 88; ++id) {
    x[id] = c[id] * sumCinv;
  }
}

// convert c[species] (molar conc) to y[species] (mass fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCTY(const amrex::Real c[], amrex::Real y[])
{
  amrex::Real CW = 0; // See Eq 12 in CK Manual
  // compute denominator in eq 12 first
  CW += c[0] * 1.008000;    // h
  CW += c[1] * 2.016000;    // h2
  CW += c[2] * 15.999000;   // o
  CW += c[3] * 31.998000;   // o2
  CW += c[4] * 17.007000;   // oh
  CW += c[5] * 18.015000;   // h2o
  CW += c[6] * 28.010000;   // co
  CW += c[7] * 29.018000;   // hco
  CW += c[8] * 44.009000;   // co2
  CW += c[9] * 15.035000;   // ch3
  CW += c[10] * 16.043000;  // ch4
  CW += c[11] * 33.006000;  // ho2
  CW += c[12] * 34.014000;  // h2o2
  CW += c[13] * 30.026000;  // ch2o
  CW += c[14] * 31.034000;  // ch3o
  CW += c[15] * 30.070000;  // c2h6
  CW += c[16] * 28.054000;  // c2h4
  CW += c[17] * 29.062000;  // c2h5
  CW += c[18] * 26.038000;  // c2h2
  CW += c[19] * 27.046000;  // c2h3
  CW += c[20] * 42.037000;  // ch2co
  CW += c[21] * 41.029000;  // hcco
  CW += c[22] * 43.045000;  // ch3co
  CW += c[23] * 43.045000;  // ch2cho
  CW += c[24] * 44.053000;  // ch3cho
  CW += c[25] * 40.065000;  // c3h4-a
  CW += c[26] * 42.081000;  // c3h6
  CW += c[27] * 54.092000;  // c4h6
  CW += c[28] * 43.089000;  // nc3h7
  CW += c[29] * 55.100000;  // c4h7
  CW += c[30] * 56.108000;  // c4h8-1
  CW += c[31] * 57.116000;  // pc4h9
  CW += c[32] * 57.072000;  // ch3coch2
  CW += c[33] * 58.080000;  // c2h5cho
  CW += c[34] * 57.072000;  // c2h5co
  CW += c[35] * 69.127000;  // c5h9
  CW += c[36] * 70.135000;  // c5h10-1
  CW += c[37] * 45.061000;  // c2h5o
  CW += c[38] * 47.033000;  // ch3o2
  CW += c[39] * 48.041000;  // ch3o2h
  CW += c[40] * 55.056000;  // c2h3co
  CW += c[41] * 56.064000;  // c2h3cho
  CW += c[42] * 57.072000;  // c3h5o
  CW += c[43] * 71.099000;  // c4h7o
  CW += c[44] * 121.112000; // c4h8ooh1-3o2
  CW += c[45] * 89.114000;  // c4h8ooh1-3
  CW += c[46] * 89.114000;  // pc4h9o2
  CW += c[47] * 41.073000;  // c3h5-a
  CW += c[48] * 39.057000;  // c3h3
  CW += c[49] * 38.049000;  // c3h2
  CW += c[50] * 14.027000;  // ch2(s)
  CW += c[51] * 104.105000; // nc4ket13
  CW += c[52] * 72.107000;  // nc3h7cho
  CW += c[53] * 71.099000;  // nc3h7co
  CW += c[54] * 71.099000;  // c2h5coch2
  CW += c[55] * 85.126000;  // nc3h7coch2
  CW += c[56] * 86.134000;  // nc4h9cho
  CW += c[57] * 85.126000;  // nc4h9co
  CW += c[58] * 100.205000; // nc7h16
  CW += c[59] * 99.197000;  // c7h15-1
  CW += c[60] * 99.197000;  // c7h15-2
  CW += c[61] * 99.197000;  // c7h15-3
  CW += c[62] * 99.197000;  // c7h15-4
  CW += c[63] * 98.189000;  // c7h14-2
  CW += c[64] * 98.189000;  // c7h14-3
  CW += c[65] * 131.195000; // c7h15o2-1
  CW += c[66] * 131.195000; // c7h15o2-2
  CW += c[67] * 131.195000; // c7h15o2-3
  CW += c[68] * 131.195000; // c7h15o2-4
  CW += c[69] * 131.195000; // c7h14ooh1-3
  CW += c[70] * 131.195000; // c7h14ooh2-3
  CW += c[71] * 131.195000; // c7h14ooh2-4
  CW += c[72] * 131.195000; // c7h14ooh3-2
  CW += c[73] * 131.195000; // c7h14ooh3-4
  CW += c[74] * 131.195000; // c7h14ooh3-5
  CW += c[75] * 131.195000; // c7h14ooh4-2
  CW += c[76] * 131.195000; // c7h14ooh4-3
  CW += c[77] * 163.193000; // c7h14ooh1-3o2
  CW += c[78] * 163.193000; // c7h14ooh2-4o2
  CW += c[79] * 163.193000; // c7h14ooh3-5o2
  CW += c[80] * 163.193000; // c7h14ooh4-2o2
  CW += c[81] * 114.188000; // c7h14o1-3
  CW += c[82] * 114.188000; // c7h14o2-4
  CW += c[83] * 146.186000; // nc7ket13
  CW += c[84] * 146.186000; // nc7ket24
  CW += c[85] * 146.186000; // nc7ket35
  CW += c[86] * 146.186000; // nc7ket42
  CW += c[87] * 28.014000;  // n2
  // Now compute conversion
  amrex::Real CWinv = 1.0 / CW;
  y[0] = c[0] * 1.008000 * CWinv;
  y[1] = c[1] * 2.016000 * CWinv;
  y[2] = c[2] * 15.999000 * CWinv;
  y[3] = c[3] * 31.998000 * CWinv;
  y[4] = c[4] * 17.007000 * CWinv;
  y[5] = c[5] * 18.015000 * CWinv;
  y[6] = c[6] * 28.010000 * CWinv;
  y[7] = c[7] * 29.018000 * CWinv;
  y[8] = c[8] * 44.009000 * CWinv;
  y[9] = c[9] * 15.035000 * CWinv;
  y[10] = c[10] * 16.043000 * CWinv;
  y[11] = c[11] * 33.006000 * CWinv;
  y[12] = c[12] * 34.014000 * CWinv;
  y[13] = c[13] * 30.026000 * CWinv;
  y[14] = c[14] * 31.034000 * CWinv;
  y[15] = c[15] * 30.070000 * CWinv;
  y[16] = c[16] * 28.054000 * CWinv;
  y[17] = c[17] * 29.062000 * CWinv;
  y[18] = c[18] * 26.038000 * CWinv;
  y[19] = c[19] * 27.046000 * CWinv;
  y[20] = c[20] * 42.037000 * CWinv;
  y[21] = c[21] * 41.029000 * CWinv;
  y[22] = c[22] * 43.045000 * CWinv;
  y[23] = c[23] * 43.045000 * CWinv;
  y[24] = c[24] * 44.053000 * CWinv;
  y[25] = c[25] * 40.065000 * CWinv;
  y[26] = c[26] * 42.081000 * CWinv;
  y[27] = c[27] * 54.092000 * CWinv;
  y[28] = c[28] * 43.089000 * CWinv;
  y[29] = c[29] * 55.100000 * CWinv;
  y[30] = c[30] * 56.108000 * CWinv;
  y[31] = c[31] * 57.116000 * CWinv;
  y[32] = c[32] * 57.072000 * CWinv;
  y[33] = c[33] * 58.080000 * CWinv;
  y[34] = c[34] * 57.072000 * CWinv;
  y[35] = c[35] * 69.127000 * CWinv;
  y[36] = c[36] * 70.135000 * CWinv;
  y[37] = c[37] * 45.061000 * CWinv;
  y[38] = c[38] * 47.033000 * CWinv;
  y[39] = c[39] * 48.041000 * CWinv;
  y[40] = c[40] * 55.056000 * CWinv;
  y[41] = c[41] * 56.064000 * CWinv;
  y[42] = c[42] * 57.072000 * CWinv;
  y[43] = c[43] * 71.099000 * CWinv;
  y[44] = c[44] * 121.112000 * CWinv;
  y[45] = c[45] * 89.114000 * CWinv;
  y[46] = c[46] * 89.114000 * CWinv;
  y[47] = c[47] * 41.073000 * CWinv;
  y[48] = c[48] * 39.057000 * CWinv;
  y[49] = c[49] * 38.049000 * CWinv;
  y[50] = c[50] * 14.027000 * CWinv;
  y[51] = c[51] * 104.105000 * CWinv;
  y[52] = c[52] * 72.107000 * CWinv;
  y[53] = c[53] * 71.099000 * CWinv;
  y[54] = c[54] * 71.099000 * CWinv;
  y[55] = c[55] * 85.126000 * CWinv;
  y[56] = c[56] * 86.134000 * CWinv;
  y[57] = c[57] * 85.126000 * CWinv;
  y[58] = c[58] * 100.205000 * CWinv;
  y[59] = c[59] * 99.197000 * CWinv;
  y[60] = c[60] * 99.197000 * CWinv;
  y[61] = c[61] * 99.197000 * CWinv;
  y[62] = c[62] * 99.197000 * CWinv;
  y[63] = c[63] * 98.189000 * CWinv;
  y[64] = c[64] * 98.189000 * CWinv;
  y[65] = c[65] * 131.195000 * CWinv;
  y[66] = c[66] * 131.195000 * CWinv;
  y[67] = c[67] * 131.195000 * CWinv;
  y[68] = c[68] * 131.195000 * CWinv;
  y[69] = c[69] * 131.195000 * CWinv;
  y[70] = c[70] * 131.195000 * CWinv;
  y[71] = c[71] * 131.195000 * CWinv;
  y[72] = c[72] * 131.195000 * CWinv;
  y[73] = c[73] * 131.195000 * CWinv;
  y[74] = c[74] * 131.195000 * CWinv;
  y[75] = c[75] * 131.195000 * CWinv;
  y[76] = c[76] * 131.195000 * CWinv;
  y[77] = c[77] * 163.193000 * CWinv;
  y[78] = c[78] * 163.193000 * CWinv;
  y[79] = c[79] * 163.193000 * CWinv;
  y[80] = c[80] * 163.193000 * CWinv;
  y[81] = c[81] * 114.188000 * CWinv;
  y[82] = c[82] * 114.188000 * CWinv;
  y[83] = c[83] * 146.186000 * CWinv;
  y[84] = c[84] * 146.186000 * CWinv;
  y[85] = c[85] * 146.186000 * CWinv;
  y[86] = c[86] * 146.186000 * CWinv;
  y[87] = c[87] * 28.014000 * CWinv;
}

// get specific heat at constant volume as a function
// of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVML(const amrex::Real T, amrex::Real cvml[])
{
  cv_R(cvml, T);

  // convert to chemkin units
  for (int id = 0; id < 88; ++id) {
    cvml[id] *= 8.31446261815324e+07;
  }
}

// get specific heat at constant pressure as a
// function of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPML(const amrex::Real T, amrex::Real cpml[])
{
  cp_R(cpml, T);

  // convert to chemkin units
  for (int id = 0; id < 88; ++id) {
    cpml[id] *= 8.31446261815324e+07;
  }
}

// get internal energy as a function
// of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUML(const amrex::Real T, amrex::Real uml[])
{
  amrex::Real RT = 8.31446261815324e+07 * T; // R*T
  speciesInternalEnergy(uml, T);

  // convert to chemkin units
  for (int id = 0; id < 88; ++id) {
    uml[id] *= RT;
  }
}

// get enthalpy as a function
// of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHML(const amrex::Real T, amrex::Real hml[])
{
  amrex::Real RT = 8.31446261815324e+07 * T; // R*T
  speciesEnthalpy(hml, T);

  // convert to chemkin units
  for (int id = 0; id < 88; ++id) {
    hml[id] *= RT;
  }
}

// Returns the standard-state entropies in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSML(const amrex::Real T, amrex::Real sml[])
{
  speciesEntropy(sml, T);

  // convert to chemkin units
  for (int id = 0; id < 88; ++id) {
    sml[id] *= 8.31446261815324e+07;
  }
}

// Returns the specific heats at constant volume
// in mass units (Eq. 29)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVMS(const amrex::Real T, amrex::Real cvms[])
{
  cv_R(cvms, T);
  // multiply by R/molecularweight
  cvms[0] *= 8.248474819596468e+07;  // h
  cvms[1] *= 4.124237409798234e+07;  // h2
  cvms[2] *= 5.196863940342046e+06;  // o
  cvms[3] *= 2.598431970171023e+06;  // o2
  cvms[4] *= 4.888847308845322e+06;  // oh
  cvms[5] *= 4.615299815794193e+06;  // h2o
  cvms[6] *= 2.968390795484913e+06;  // co
  cvms[7] *= 2.865277627042952e+06;  // hco
  cvms[8] *= 1.889264154639560e+06;  // co2
  cvms[9] *= 5.530071578419182e+06;  // ch3
  cvms[10] *= 5.182610869633635e+06; // ch4
  cvms[11] *= 2.519076112874398e+06; // ho2
  cvms[12] *= 2.444423654422661e+06; // h2o2
  cvms[13] *= 2.769087663409458e+06; // ch2o
  cvms[14] *= 2.679146297013998e+06; // ch3o
  cvms[15] *= 2.765035789209591e+06; // c2h6
  cvms[16] *= 2.963735160103101e+06; // c2h4
  cvms[17] *= 2.860939583701480e+06; // c2h5
  cvms[18] *= 3.193203248388218e+06; // c2h2
  cvms[19] *= 3.074193085170909e+06; // c2h3
  cvms[20] *= 1.977891528451897e+06; // ch2co
  cvms[21] *= 2.026484344769124e+06; // hcco
  cvms[22] *= 1.931574542491170e+06; // ch3co
  cvms[23] *= 1.931574542491170e+06; // ch2cho
  cvms[24] *= 1.887377163451579e+06; // ch3cho
  cvms[25] *= 2.075243384039246e+06; // c3h4-a
  cvms[26] *= 1.975823440068734e+06; // c3h6
  cvms[27] *= 1.537096542585454e+06; // c4h6
  cvms[28] *= 1.929602130045543e+06; // nc3h7
  cvms[29] *= 1.508976881697503e+06; // c4h7
  cvms[30] *= 1.481867580051551e+06; // c4h8-1
  cvms[31] *= 1.455715144294635e+06; // pc4h9
  cvms[32] *= 1.456837436598199e+06; // ch3coch2
  cvms[33] *= 1.431553481086990e+06; // c2h5cho
  cvms[34] *= 1.456837436598199e+06; // c2h5co
  cvms[35] *= 1.202780768462864e+06; // c5h9
  cvms[36] *= 1.185494064041241e+06; // c5h10-1
  cvms[37] *= 1.845157146568705e+06; // c2h5o
  cvms[38] *= 1.767793382976472e+06; // ch3o2
  cvms[39] *= 1.730701404665440e+06; // ch3o2h
  cvms[40] *= 1.510182835322806e+06; // c2h3co
  cvms[41] *= 1.483030575441146e+06; // c2h3cho
  cvms[42] *= 1.456837436598199e+06; // c3h5o
  cvms[43] *= 1.169420472602040e+06; // c4h7o
  cvms[44] *= 6.865102234422056e+05; // c4h8ooh1-3o2
  cvms[45] *= 9.330141861159009e+05; // c4h8ooh1-3
  cvms[46] *= 9.330141861159009e+05; // pc4h9o2
  cvms[47] *= 2.024313446340233e+06; // c3h5-a
  cvms[48] *= 2.128802165592145e+06; // c3h3
  cvms[49] *= 2.185198722214313e+06; // c3h2
  cvms[50] *= 5.927470320206203e+06; // ch2(s)
  cvms[51] *= 7.986612187842313e+05; // nc4ket13
  cvms[52] *= 1.153072880324135e+06; // nc3h7cho
  cvms[53] *= 1.169420472602040e+06; // nc3h7co
  cvms[54] *= 1.169420472602040e+06; // c2h5coch2
  cvms[55] *= 9.767242226996735e+05; // nc3h7coch2
  cvms[56] *= 9.652939162413497e+05; // nc4h9cho
  cvms[57] *= 9.767242226996735e+05; // nc4h9co
  cvms[58] *= 8.297452839831585e+05; // nc7h16
  cvms[59] *= 8.381768216935230e+05; // c7h15-1
  cvms[60] *= 8.381768216935230e+05; // c7h15-2
  cvms[61] *= 8.381768216935230e+05; // c7h15-3
  cvms[62] *= 8.381768216935230e+05; // c7h15-4
  cvms[63] *= 8.467814743151718e+05; // c7h14-2
  cvms[64] *= 8.467814743151718e+05; // c7h14-3
  cvms[65] *= 6.337484369185746e+05; // c7h15o2-1
  cvms[66] *= 6.337484369185746e+05; // c7h15o2-2
  cvms[67] *= 6.337484369185746e+05; // c7h15o2-3
  cvms[68] *= 6.337484369185746e+05; // c7h15o2-4
  cvms[69] *= 6.337484369185746e+05; // c7h14ooh1-3
  cvms[70] *= 6.337484369185746e+05; // c7h14ooh2-3
  cvms[71] *= 6.337484369185746e+05; // c7h14ooh2-4
  cvms[72] *= 6.337484369185746e+05; // c7h14ooh3-2
  cvms[73] *= 6.337484369185746e+05; // c7h14ooh3-4
  cvms[74] *= 6.337484369185746e+05; // c7h14ooh3-5
  cvms[75] *= 6.337484369185746e+05; // c7h14ooh4-2
  cvms[76] *= 6.337484369185746e+05; // c7h14ooh4-3
  cvms[77] *= 5.094864741841402e+05; // c7h14ooh1-3o2
  cvms[78] *= 5.094864741841402e+05; // c7h14ooh2-4o2
  cvms[79] *= 5.094864741841402e+05; // c7h14ooh3-5o2
  cvms[80] *= 5.094864741841402e+05; // c7h14ooh4-2o2
  cvms[81] *= 7.281380371101378e+05; // c7h14o1-3
  cvms[82] *= 7.281380371101378e+05; // c7h14o2-4
  cvms[83] *= 5.687591573853338e+05; // nc7ket13
  cvms[84] *= 5.687591573853338e+05; // nc7ket24
  cvms[85] *= 5.687591573853338e+05; // nc7ket35
  cvms[86] *= 5.687591573853338e+05; // nc7ket42
  cvms[87] *= 2.967966951578939e+06; // n2
}

// Returns the specific heats at constant pressure
// in mass units (Eq. 26)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPMS(const amrex::Real T, amrex::Real cpms[])
{
  cp_R(cpms, T);
  // multiply by R/molecularweight
  cpms[0] *= 8.248474819596468e+07;  // h
  cpms[1] *= 4.124237409798234e+07;  // h2
  cpms[2] *= 5.196863940342046e+06;  // o
  cpms[3] *= 2.598431970171023e+06;  // o2
  cpms[4] *= 4.888847308845322e+06;  // oh
  cpms[5] *= 4.615299815794193e+06;  // h2o
  cpms[6] *= 2.968390795484913e+06;  // co
  cpms[7] *= 2.865277627042952e+06;  // hco
  cpms[8] *= 1.889264154639560e+06;  // co2
  cpms[9] *= 5.530071578419182e+06;  // ch3
  cpms[10] *= 5.182610869633635e+06; // ch4
  cpms[11] *= 2.519076112874398e+06; // ho2
  cpms[12] *= 2.444423654422661e+06; // h2o2
  cpms[13] *= 2.769087663409458e+06; // ch2o
  cpms[14] *= 2.679146297013998e+06; // ch3o
  cpms[15] *= 2.765035789209591e+06; // c2h6
  cpms[16] *= 2.963735160103101e+06; // c2h4
  cpms[17] *= 2.860939583701480e+06; // c2h5
  cpms[18] *= 3.193203248388218e+06; // c2h2
  cpms[19] *= 3.074193085170909e+06; // c2h3
  cpms[20] *= 1.977891528451897e+06; // ch2co
  cpms[21] *= 2.026484344769124e+06; // hcco
  cpms[22] *= 1.931574542491170e+06; // ch3co
  cpms[23] *= 1.931574542491170e+06; // ch2cho
  cpms[24] *= 1.887377163451579e+06; // ch3cho
  cpms[25] *= 2.075243384039246e+06; // c3h4-a
  cpms[26] *= 1.975823440068734e+06; // c3h6
  cpms[27] *= 1.537096542585454e+06; // c4h6
  cpms[28] *= 1.929602130045543e+06; // nc3h7
  cpms[29] *= 1.508976881697503e+06; // c4h7
  cpms[30] *= 1.481867580051551e+06; // c4h8-1
  cpms[31] *= 1.455715144294635e+06; // pc4h9
  cpms[32] *= 1.456837436598199e+06; // ch3coch2
  cpms[33] *= 1.431553481086990e+06; // c2h5cho
  cpms[34] *= 1.456837436598199e+06; // c2h5co
  cpms[35] *= 1.202780768462864e+06; // c5h9
  cpms[36] *= 1.185494064041241e+06; // c5h10-1
  cpms[37] *= 1.845157146568705e+06; // c2h5o
  cpms[38] *= 1.767793382976472e+06; // ch3o2
  cpms[39] *= 1.730701404665440e+06; // ch3o2h
  cpms[40] *= 1.510182835322806e+06; // c2h3co
  cpms[41] *= 1.483030575441146e+06; // c2h3cho
  cpms[42] *= 1.456837436598199e+06; // c3h5o
  cpms[43] *= 1.169420472602040e+06; // c4h7o
  cpms[44] *= 6.865102234422056e+05; // c4h8ooh1-3o2
  cpms[45] *= 9.330141861159009e+05; // c4h8ooh1-3
  cpms[46] *= 9.330141861159009e+05; // pc4h9o2
  cpms[47] *= 2.024313446340233e+06; // c3h5-a
  cpms[48] *= 2.128802165592145e+06; // c3h3
  cpms[49] *= 2.185198722214313e+06; // c3h2
  cpms[50] *= 5.927470320206203e+06; // ch2(s)
  cpms[51] *= 7.986612187842313e+05; // nc4ket13
  cpms[52] *= 1.153072880324135e+06; // nc3h7cho
  cpms[53] *= 1.169420472602040e+06; // nc3h7co
  cpms[54] *= 1.169420472602040e+06; // c2h5coch2
  cpms[55] *= 9.767242226996735e+05; // nc3h7coch2
  cpms[56] *= 9.652939162413497e+05; // nc4h9cho
  cpms[57] *= 9.767242226996735e+05; // nc4h9co
  cpms[58] *= 8.297452839831585e+05; // nc7h16
  cpms[59] *= 8.381768216935230e+05; // c7h15-1
  cpms[60] *= 8.381768216935230e+05; // c7h15-2
  cpms[61] *= 8.381768216935230e+05; // c7h15-3
  cpms[62] *= 8.381768216935230e+05; // c7h15-4
  cpms[63] *= 8.467814743151718e+05; // c7h14-2
  cpms[64] *= 8.467814743151718e+05; // c7h14-3
  cpms[65] *= 6.337484369185746e+05; // c7h15o2-1
  cpms[66] *= 6.337484369185746e+05; // c7h15o2-2
  cpms[67] *= 6.337484369185746e+05; // c7h15o2-3
  cpms[68] *= 6.337484369185746e+05; // c7h15o2-4
  cpms[69] *= 6.337484369185746e+05; // c7h14ooh1-3
  cpms[70] *= 6.337484369185746e+05; // c7h14ooh2-3
  cpms[71] *= 6.337484369185746e+05; // c7h14ooh2-4
  cpms[72] *= 6.337484369185746e+05; // c7h14ooh3-2
  cpms[73] *= 6.337484369185746e+05; // c7h14ooh3-4
  cpms[74] *= 6.337484369185746e+05; // c7h14ooh3-5
  cpms[75] *= 6.337484369185746e+05; // c7h14ooh4-2
  cpms[76] *= 6.337484369185746e+05; // c7h14ooh4-3
  cpms[77] *= 5.094864741841402e+05; // c7h14ooh1-3o2
  cpms[78] *= 5.094864741841402e+05; // c7h14ooh2-4o2
  cpms[79] *= 5.094864741841402e+05; // c7h14ooh3-5o2
  cpms[80] *= 5.094864741841402e+05; // c7h14ooh4-2o2
  cpms[81] *= 7.281380371101378e+05; // c7h14o1-3
  cpms[82] *= 7.281380371101378e+05; // c7h14o2-4
  cpms[83] *= 5.687591573853338e+05; // nc7ket13
  cpms[84] *= 5.687591573853338e+05; // nc7ket24
  cpms[85] *= 5.687591573853338e+05; // nc7ket35
  cpms[86] *= 5.687591573853338e+05; // nc7ket42
  cpms[87] *= 2.967966951578939e+06; // n2
}

// Returns internal energy in mass units (Eq 30.)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUMS(const amrex::Real T, amrex::Real ums[])
{
  amrex::Real RT = 8.31446261815324e+07 * T; // R*T

  speciesInternalEnergy(ums, T);

  for (int i = 0; i < 88; i++) {
    ums[i] *= RT * imw(i);
  }
}

// Returns enthalpy in mass units (Eq 27.)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHMS(const amrex::Real T, amrex::Real hms[])
{
  amrex::Real RT = 8.31446261815324e+07 * T; // R*T

  speciesEnthalpy(hms, T);

  for (int i = 0; i < 88; i++) {
    hms[i] *= RT * imw(i);
  }
}

// Returns the entropies in mass units (Eq 28.)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSMS(const amrex::Real T, amrex::Real sms[])
{
  speciesEntropy(sms, T);
  // multiply by R/molecularweight
  sms[0] *= 8.248474819596468e+07;  // h
  sms[1] *= 4.124237409798234e+07;  // h2
  sms[2] *= 5.196863940342046e+06;  // o
  sms[3] *= 2.598431970171023e+06;  // o2
  sms[4] *= 4.888847308845322e+06;  // oh
  sms[5] *= 4.615299815794193e+06;  // h2o
  sms[6] *= 2.968390795484913e+06;  // co
  sms[7] *= 2.865277627042952e+06;  // hco
  sms[8] *= 1.889264154639560e+06;  // co2
  sms[9] *= 5.530071578419182e+06;  // ch3
  sms[10] *= 5.182610869633635e+06; // ch4
  sms[11] *= 2.519076112874398e+06; // ho2
  sms[12] *= 2.444423654422661e+06; // h2o2
  sms[13] *= 2.769087663409458e+06; // ch2o
  sms[14] *= 2.679146297013998e+06; // ch3o
  sms[15] *= 2.765035789209591e+06; // c2h6
  sms[16] *= 2.963735160103101e+06; // c2h4
  sms[17] *= 2.860939583701480e+06; // c2h5
  sms[18] *= 3.193203248388218e+06; // c2h2
  sms[19] *= 3.074193085170909e+06; // c2h3
  sms[20] *= 1.977891528451897e+06; // ch2co
  sms[21] *= 2.026484344769124e+06; // hcco
  sms[22] *= 1.931574542491170e+06; // ch3co
  sms[23] *= 1.931574542491170e+06; // ch2cho
  sms[24] *= 1.887377163451579e+06; // ch3cho
  sms[25] *= 2.075243384039246e+06; // c3h4-a
  sms[26] *= 1.975823440068734e+06; // c3h6
  sms[27] *= 1.537096542585454e+06; // c4h6
  sms[28] *= 1.929602130045543e+06; // nc3h7
  sms[29] *= 1.508976881697503e+06; // c4h7
  sms[30] *= 1.481867580051551e+06; // c4h8-1
  sms[31] *= 1.455715144294635e+06; // pc4h9
  sms[32] *= 1.456837436598199e+06; // ch3coch2
  sms[33] *= 1.431553481086990e+06; // c2h5cho
  sms[34] *= 1.456837436598199e+06; // c2h5co
  sms[35] *= 1.202780768462864e+06; // c5h9
  sms[36] *= 1.185494064041241e+06; // c5h10-1
  sms[37] *= 1.845157146568705e+06; // c2h5o
  sms[38] *= 1.767793382976472e+06; // ch3o2
  sms[39] *= 1.730701404665440e+06; // ch3o2h
  sms[40] *= 1.510182835322806e+06; // c2h3co
  sms[41] *= 1.483030575441146e+06; // c2h3cho
  sms[42] *= 1.456837436598199e+06; // c3h5o
  sms[43] *= 1.169420472602040e+06; // c4h7o
  sms[44] *= 6.865102234422056e+05; // c4h8ooh1-3o2
  sms[45] *= 9.330141861159009e+05; // c4h8ooh1-3
  sms[46] *= 9.330141861159009e+05; // pc4h9o2
  sms[47] *= 2.024313446340233e+06; // c3h5-a
  sms[48] *= 2.128802165592145e+06; // c3h3
  sms[49] *= 2.185198722214313e+06; // c3h2
  sms[50] *= 5.927470320206203e+06; // ch2(s)
  sms[51] *= 7.986612187842313e+05; // nc4ket13
  sms[52] *= 1.153072880324135e+06; // nc3h7cho
  sms[53] *= 1.169420472602040e+06; // nc3h7co
  sms[54] *= 1.169420472602040e+06; // c2h5coch2
  sms[55] *= 9.767242226996735e+05; // nc3h7coch2
  sms[56] *= 9.652939162413497e+05; // nc4h9cho
  sms[57] *= 9.767242226996735e+05; // nc4h9co
  sms[58] *= 8.297452839831585e+05; // nc7h16
  sms[59] *= 8.381768216935230e+05; // c7h15-1
  sms[60] *= 8.381768216935230e+05; // c7h15-2
  sms[61] *= 8.381768216935230e+05; // c7h15-3
  sms[62] *= 8.381768216935230e+05; // c7h15-4
  sms[63] *= 8.467814743151718e+05; // c7h14-2
  sms[64] *= 8.467814743151718e+05; // c7h14-3
  sms[65] *= 6.337484369185746e+05; // c7h15o2-1
  sms[66] *= 6.337484369185746e+05; // c7h15o2-2
  sms[67] *= 6.337484369185746e+05; // c7h15o2-3
  sms[68] *= 6.337484369185746e+05; // c7h15o2-4
  sms[69] *= 6.337484369185746e+05; // c7h14ooh1-3
  sms[70] *= 6.337484369185746e+05; // c7h14ooh2-3
  sms[71] *= 6.337484369185746e+05; // c7h14ooh2-4
  sms[72] *= 6.337484369185746e+05; // c7h14ooh3-2
  sms[73] *= 6.337484369185746e+05; // c7h14ooh3-4
  sms[74] *= 6.337484369185746e+05; // c7h14ooh3-5
  sms[75] *= 6.337484369185746e+05; // c7h14ooh4-2
  sms[76] *= 6.337484369185746e+05; // c7h14ooh4-3
  sms[77] *= 5.094864741841402e+05; // c7h14ooh1-3o2
  sms[78] *= 5.094864741841402e+05; // c7h14ooh2-4o2
  sms[79] *= 5.094864741841402e+05; // c7h14ooh3-5o2
  sms[80] *= 5.094864741841402e+05; // c7h14ooh4-2o2
  sms[81] *= 7.281380371101378e+05; // c7h14o1-3
  sms[82] *= 7.281380371101378e+05; // c7h14o2-4
  sms[83] *= 5.687591573853338e+05; // nc7ket13
  sms[84] *= 5.687591573853338e+05; // nc7ket24
  sms[85] *= 5.687591573853338e+05; // nc7ket35
  sms[86] *= 5.687591573853338e+05; // nc7ket42
  sms[87] *= 2.967966951578939e+06; // n2
}

// GPU version of productionRate: no more use of thermo namespace vectors
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
comp_qfqr(
  amrex::Real* qf,
  amrex::Real* qr,
  const amrex::Real* sc,
  const amrex::Real* /*sc_qss*/,
  const amrex::Real T,
  const amrex::Real invT,
  const amrex::Real logT)
{

  // reaction 0: ch3 + h (+M) <=> ch4 (+M)
  qf[0] = sc[0] * sc[9];
  qr[0] = sc[10];

  // reaction 27: c2h4 + h (+M) <=> c2h5 (+M)
  qf[1] = sc[0] * sc[16];
  qr[1] = sc[17];

  // reaction 40: 2 ch3 (+M) <=> c2h6 (+M)
  qf[2] = (sc[9] * sc[9]);
  qr[2] = sc[15];

  // reaction 43: h + o2 (+M) <=> ho2 (+M)
  qf[3] = sc[0] * sc[3];
  qr[3] = sc[11];

  // reaction 89: 2 oh (+M) <=> h2o2 (+M)
  qf[4] = (sc[4] * sc[4]);
  qr[4] = sc[12];

  // reaction 102: c2h3 + h (+M) <=> c2h4 (+M)
  qf[5] = sc[0] * sc[19];
  qr[5] = sc[16];

  // reaction 105: c2h2 + h (+M) <=> c2h3 (+M)
  qf[6] = sc[0] * sc[18];
  qr[6] = sc[19];

  // reaction 44: co + o (+M) <=> co2 (+M)
  qf[7] = sc[2] * sc[6];
  qr[7] = sc[8];

  // reaction 69: ch3o (+M) <=> ch2o + h (+M)
  qf[8] = sc[14];
  qr[8] = sc[0] * sc[13];

  // reaction 70: c2h4 (+M) <=> c2h2 + h2 (+M)
  qf[9] = sc[16];
  qr[9] = sc[1] * sc[18];

  // reaction 151: ch3co (+M) <=> ch3 + co (+M)
  qf[10] = sc[22];
  qr[10] = sc[6] * sc[9];

  // reaction 21: hco + M => co + h + M
  qf[11] = sc[7];
  qr[11] = 0.0;

  // reaction 22: co + h + M => hco + M
  qf[12] = sc[0] * sc[6];
  qr[12] = 0.0;

  // reaction 41: h2o + M => h + oh + M
  qf[13] = sc[5];
  qr[13] = 0.0;

  // reaction 42: h + oh + M => h2o + M
  qf[14] = sc[0] * sc[4];
  qr[14] = 0.0;

  // reaction 51: ch2o + M => h + hco + M
  qf[15] = sc[13];
  qr[15] = 0.0;

  // reaction 52: h + hco + M => ch2o + M
  qf[16] = sc[0] * sc[7];
  qr[16] = 0.0;

  // reaction 96: oh + M => h + o + M
  qf[17] = sc[4];
  qr[17] = 0.0;

  // reaction 97: h + o + M => oh + M
  qf[18] = sc[0] * sc[2];
  qr[18] = 0.0;

  // reaction 98: o2 + M => 2 o + M
  qf[19] = sc[3];
  qr[19] = 0.0;

  // reaction 99: 2 o + M => o2 + M
  qf[20] = (sc[2] * sc[2]);
  qr[20] = 0.0;

  // reaction 100: h2 + M => 2 h + M
  qf[21] = sc[1];
  qr[21] = 0.0;

  // reaction 101: 2 h + M => h2 + M
  qf[22] = (sc[0] * sc[0]);
  qr[22] = 0.0;

  // reaction 196: ch2o + M => co + h2 + M
  qf[23] = sc[13];
  qr[23] = 0.0;

  // reaction 197: co + h2 + M => ch2o + M
  qf[24] = sc[1] * sc[6];
  qr[24] = 0.0;

  // reaction 311: c2h5o + M => ch2o + ch3 + M
  qf[25] = sc[37];
  qr[25] = 0.0;

  // reaction 312: ch2o + ch3 + M => c2h5o + M
  qf[26] = sc[9] * sc[13];
  qr[26] = 0.0;

  // reaction 319: ch3o2 + M => ch3 + o2 + M
  qf[27] = sc[38];
  qr[27] = 0.0;

  // reaction 320: ch3 + o2 + M => ch3o2 + M
  qf[28] = sc[3] * sc[9];
  qr[28] = 0.0;

  // reaction 343: c2h5o + M => ch3cho + h + M
  qf[29] = sc[37];
  qr[29] = 0.0;

  // reaction 344: ch3cho + h + M => c2h5o + M
  qf[30] = sc[0] * sc[24];
  qr[30] = 0.0;

  // reaction 440: c3h4-a + M => c3h3 + h + M
  qf[31] = sc[25];
  qr[31] = 0.0;

  // reaction 441: c3h3 + h + M => c3h4-a + M
  qf[32] = sc[0] * sc[48];
  qr[32] = 0.0;

  // reaction 1: ch4 + h => ch3 + h2
  qf[33] = sc[0] * sc[10];
  qr[33] = 0.0;

  // reaction 2: ch3 + h2 => ch4 + h
  qf[34] = sc[1] * sc[9];
  qr[34] = 0.0;

  // reaction 3: ch4 + oh => ch3 + h2o
  qf[35] = sc[4] * sc[10];
  qr[35] = 0.0;

  // reaction 4: ch3 + h2o => ch4 + oh
  qf[36] = sc[5] * sc[9];
  qr[36] = 0.0;

  // reaction 5: ch4 + o => ch3 + oh
  qf[37] = sc[2] * sc[10];
  qr[37] = 0.0;

  // reaction 6: ch3 + oh => ch4 + o
  qf[38] = sc[4] * sc[9];
  qr[38] = 0.0;

  // reaction 7: c2h6 + ch3 => c2h5 + ch4
  qf[39] = sc[9] * sc[15];
  qr[39] = 0.0;

  // reaction 8: c2h5 + ch4 => c2h6 + ch3
  qf[40] = sc[10] * sc[17];
  qr[40] = 0.0;

  // reaction 9: hco + oh => co + h2o
  qf[41] = sc[4] * sc[7];
  qr[41] = 0.0;

  // reaction 10: co + h2o => hco + oh
  qf[42] = sc[5] * sc[6];
  qr[42] = 0.0;

  // reaction 11: co + oh => co2 + h
  qf[43] = sc[4] * sc[6];
  qr[43] = 0.0;

  // reaction 12: co2 + h => co + oh
  qf[44] = sc[0] * sc[8];
  qr[44] = 0.0;

  // reaction 13: h + o2 => o + oh
  qf[45] = sc[0] * sc[3];
  qr[45] = 0.0;

  // reaction 14: o + oh => h + o2
  qf[46] = sc[2] * sc[4];
  qr[46] = 0.0;

  // reaction 15: h2 + o => h + oh
  qf[47] = sc[1] * sc[2];
  qr[47] = 0.0;

  // reaction 16: h + oh => h2 + o
  qf[48] = sc[0] * sc[4];
  qr[48] = 0.0;

  // reaction 17: h2o + o => 2 oh
  qf[49] = sc[2] * sc[5];
  qr[49] = 0.0;

  // reaction 18: 2 oh => h2o + o
  qf[50] = (sc[4] * sc[4]);
  qr[50] = 0.0;

  // reaction 19: h2 + oh => h + h2o
  qf[51] = sc[1] * sc[4];
  qr[51] = 0.0;

  // reaction 20: h + h2o => h2 + oh
  qf[52] = sc[0] * sc[5];
  qr[52] = 0.0;

  // reaction 23: h2o2 + oh => h2o + ho2
  qf[53] = sc[4] * sc[12];
  qr[53] = 0.0;

  // reaction 24: h2o + ho2 => h2o2 + oh
  qf[54] = sc[5] * sc[11];
  qr[54] = 0.0;

  // reaction 25: c2h4 + o => ch3 + hco
  qf[55] = sc[2] * sc[16];
  qr[55] = 0.0;

  // reaction 26: ch3 + hco => c2h4 + o
  qf[56] = sc[7] * sc[9];
  qr[56] = 0.0;

  // reaction 28: c2h6 + h => c2h5 + h2
  qf[57] = sc[0] * sc[15];
  qr[57] = 0.0;

  // reaction 29: c2h5 + h2 => c2h6 + h
  qf[58] = sc[1] * sc[17];
  qr[58] = 0.0;

  // reaction 30: c2h5 + o2 => c2h4 + ho2
  qf[59] = sc[3] * sc[17];
  qr[59] = 0.0;

  // reaction 31: c2h4 + ho2 => c2h5 + o2
  qf[60] = sc[11] * sc[16];
  qr[60] = 0.0;

  // reaction 32: c2h6 + oh => c2h5 + h2o
  qf[61] = sc[4] * sc[15];
  qr[61] = 0.0;

  // reaction 33: c2h5 + h2o => c2h6 + oh
  qf[62] = sc[5] * sc[17];
  qr[62] = 0.0;

  // reaction 34: c2h6 + o => c2h5 + oh
  qf[63] = sc[2] * sc[15];
  qr[63] = 0.0;

  // reaction 35: c2h5 + oh => c2h6 + o
  qf[64] = sc[4] * sc[17];
  qr[64] = 0.0;

  // reaction 36: ch3 + ho2 => ch3o + oh
  qf[65] = sc[9] * sc[11];
  qr[65] = 0.0;

  // reaction 37: ch3o + oh => ch3 + ho2
  qf[66] = sc[4] * sc[14];
  qr[66] = 0.0;

  // reaction 38: co + ho2 => co2 + oh
  qf[67] = sc[6] * sc[11];
  qr[67] = 0.0;

  // reaction 39: co2 + oh => co + ho2
  qf[68] = sc[4] * sc[8];
  qr[68] = 0.0;

  // reaction 45: co + o2 => co2 + o
  qf[69] = sc[3] * sc[6];
  qr[69] = 0.0;

  // reaction 46: co2 + o => co + o2
  qf[70] = sc[2] * sc[8];
  qr[70] = 0.0;

  // reaction 47: h + hco => co + h2
  qf[71] = sc[0] * sc[7];
  qr[71] = 0.0;

  // reaction 48: co + h2 => h + hco
  qf[72] = sc[1] * sc[6];
  qr[72] = 0.0;

  // reaction 49: hco + o => co + oh
  qf[73] = sc[2] * sc[7];
  qr[73] = 0.0;

  // reaction 50: co + oh => hco + o
  qf[74] = sc[4] * sc[6];
  qr[74] = 0.0;

  // reaction 53: ch2o + oh => h2o + hco
  qf[75] = sc[4] * sc[13];
  qr[75] = 0.0;

  // reaction 54: h2o + hco => ch2o + oh
  qf[76] = sc[5] * sc[7];
  qr[76] = 0.0;

  // reaction 55: ch2o + h => h2 + hco
  qf[77] = sc[0] * sc[13];
  qr[77] = 0.0;

  // reaction 56: h2 + hco => ch2o + h
  qf[78] = sc[1] * sc[7];
  qr[78] = 0.0;

  // reaction 57: ch2o + o => hco + oh
  qf[79] = sc[2] * sc[13];
  qr[79] = 0.0;

  // reaction 58: hco + oh => ch2o + o
  qf[80] = sc[4] * sc[7];
  qr[80] = 0.0;

  // reaction 59: ch3 + oh => ch2o + h2
  qf[81] = sc[4] * sc[9];
  qr[81] = 0.0;

  // reaction 60: ch2o + h2 => ch3 + oh
  qf[82] = sc[1] * sc[13];
  qr[82] = 0.0;

  // reaction 61: ch3 + o => ch2o + h
  qf[83] = sc[2] * sc[9];
  qr[83] = 0.0;

  // reaction 62: ch2o + h => ch3 + o
  qf[84] = sc[0] * sc[13];
  qr[84] = 0.0;

  // reaction 63: ch3 + o2 => ch3o + o
  qf[85] = sc[3] * sc[9];
  qr[85] = 0.0;

  // reaction 64: ch3o + o => ch3 + o2
  qf[86] = sc[2] * sc[14];
  qr[86] = 0.0;

  // reaction 65: ch2o + ch3 => ch4 + hco
  qf[87] = sc[9] * sc[13];
  qr[87] = 0.0;

  // reaction 66: ch4 + hco => ch2o + ch3
  qf[88] = sc[7] * sc[10];
  qr[88] = 0.0;

  // reaction 67: ch3 + hco => ch4 + co
  qf[89] = sc[7] * sc[9];
  qr[89] = 0.0;

  // reaction 68: ch4 + co => ch3 + hco
  qf[90] = sc[6] * sc[10];
  qr[90] = 0.0;

  // reaction 71: ho2 + o => o2 + oh
  qf[91] = sc[2] * sc[11];
  qr[91] = 0.0;

  // reaction 72: o2 + oh => ho2 + o
  qf[92] = sc[3] * sc[4];
  qr[92] = 0.0;

  // reaction 73: hco + ho2 => ch2o + o2
  qf[93] = sc[7] * sc[11];
  qr[93] = 0.0;

  // reaction 74: ch2o + o2 => hco + ho2
  qf[94] = sc[3] * sc[13];
  qr[94] = 0.0;

  // reaction 75: ch3o + o2 => ch2o + ho2
  qf[95] = sc[3] * sc[14];
  qr[95] = 0.0;

  // reaction 76: ch2o + ho2 => ch3o + o2
  qf[96] = sc[11] * sc[13];
  qr[96] = 0.0;

  // reaction 77: ch3 + ho2 => ch4 + o2
  qf[97] = sc[9] * sc[11];
  qr[97] = 0.0;

  // reaction 78: ch4 + o2 => ch3 + ho2
  qf[98] = sc[3] * sc[10];
  qr[98] = 0.0;

  // reaction 79: hco + o2 => co + ho2
  qf[99] = sc[3] * sc[7];
  qr[99] = 0.0;

  // reaction 80: co + ho2 => hco + o2
  qf[100] = sc[6] * sc[11];
  qr[100] = 0.0;

  // reaction 81: h + ho2 => 2 oh
  qf[101] = sc[0] * sc[11];
  qr[101] = 0.0;

  // reaction 82: 2 oh => h + ho2
  qf[102] = (sc[4] * sc[4]);
  qr[102] = 0.0;

  // reaction 83: h + ho2 => h2 + o2
  qf[103] = sc[0] * sc[11];
  qr[103] = 0.0;

  // reaction 84: h2 + o2 => h + ho2
  qf[104] = sc[1] * sc[3];
  qr[104] = 0.0;

  // reaction 85: ho2 + oh => h2o + o2
  qf[105] = sc[4] * sc[11];
  qr[105] = 0.0;

  // reaction 86: h2o + o2 => ho2 + oh
  qf[106] = sc[3] * sc[5];
  qr[106] = 0.0;

  // reaction 87: h2o2 + o2 => 2 ho2
  qf[107] = sc[3] * sc[12];
  qr[107] = 0.0;

  // reaction 88: 2 ho2 => h2o2 + o2
  qf[108] = (sc[11] * sc[11]);
  qr[108] = 0.0;

  // reaction 90: h + h2o2 => h2o + oh
  qf[109] = sc[0] * sc[12];
  qr[109] = 0.0;

  // reaction 91: h2o + oh => h + h2o2
  qf[110] = sc[4] * sc[5];
  qr[110] = 0.0;

  // reaction 92: ch4 + ho2 => ch3 + h2o2
  qf[111] = sc[10] * sc[11];
  qr[111] = 0.0;

  // reaction 93: ch3 + h2o2 => ch4 + ho2
  qf[112] = sc[9] * sc[12];
  qr[112] = 0.0;

  // reaction 94: ch2o + ho2 => h2o2 + hco
  qf[113] = sc[11] * sc[13];
  qr[113] = 0.0;

  // reaction 95: h2o2 + hco => ch2o + ho2
  qf[114] = sc[7] * sc[12];
  qr[114] = 0.0;

  // reaction 103: c2h3 + c2h5 => 2 c2h4
  qf[115] = sc[17] * sc[19];
  qr[115] = 0.0;

  // reaction 104: 2 c2h4 => c2h3 + c2h5
  qf[116] = (sc[16] * sc[16]);
  qr[116] = 0.0;

  // reaction 106: c2h4 + h => c2h3 + h2
  qf[117] = sc[0] * sc[16];
  qr[117] = 0.0;

  // reaction 107: c2h3 + h2 => c2h4 + h
  qf[118] = sc[1] * sc[19];
  qr[118] = 0.0;

  // reaction 108: c2h4 + oh => c2h3 + h2o
  qf[119] = sc[4] * sc[16];
  qr[119] = 0.0;

  // reaction 109: c2h3 + h2o => c2h4 + oh
  qf[120] = sc[5] * sc[19];
  qr[120] = 0.0;

  // reaction 110: c2h2 + o2 => hcco + oh
  qf[121] = sc[3] * sc[18];
  qr[121] = 0.0;

  // reaction 111: hcco + oh => c2h2 + o2
  qf[122] = sc[4] * sc[21];
  qr[122] = 0.0;

  // reaction 112: c2h3 + o2 => c2h2 + ho2
  qf[123] = sc[3] * sc[19];
  qr[123] = 0.0;

  // reaction 113: c2h2 + ho2 => c2h3 + o2
  qf[124] = sc[11] * sc[18];
  qr[124] = 0.0;

  // reaction 114: h2o2 + o => ho2 + oh
  qf[125] = sc[2] * sc[12];
  qr[125] = 0.0;

  // reaction 115: ho2 + oh => h2o2 + o
  qf[126] = sc[4] * sc[11];
  qr[126] = 0.0;

  // reaction 116: c2h2 + o => h + hcco
  qf[127] = sc[2] * sc[18];
  qr[127] = 0.0;

  // reaction 117: h + hcco => c2h2 + o
  qf[128] = sc[0] * sc[21];
  qr[128] = 0.0;

  // reaction 118: c2h2 + oh => ch2co + h
  qf[129] = sc[4] * sc[18];
  qr[129] = 0.0;

  // reaction 119: ch2co + h => c2h2 + oh
  qf[130] = sc[0] * sc[20];
  qr[130] = 0.0;

  // reaction 120: ch2co + h => ch3 + co
  qf[131] = sc[0] * sc[20];
  qr[131] = 0.0;

  // reaction 121: ch3 + co => ch2co + h
  qf[132] = sc[6] * sc[9];
  qr[132] = 0.0;

  // reaction 122: ch2co + o => hcco + oh
  qf[133] = sc[2] * sc[20];
  qr[133] = 0.0;

  // reaction 123: hcco + oh => ch2co + o
  qf[134] = sc[4] * sc[21];
  qr[134] = 0.0;

  // reaction 124: ch2co + oh => h2o + hcco
  qf[135] = sc[4] * sc[20];
  qr[135] = 0.0;

  // reaction 125: h2o + hcco => ch2co + oh
  qf[136] = sc[5] * sc[21];
  qr[136] = 0.0;

  // reaction 126: ch2co + h => h2 + hcco
  qf[137] = sc[0] * sc[20];
  qr[137] = 0.0;

  // reaction 127: h2 + hcco => ch2co + h
  qf[138] = sc[1] * sc[21];
  qr[138] = 0.0;

  // reaction 128: hcco + oh => 2 hco
  qf[139] = sc[4] * sc[21];
  qr[139] = 0.0;

  // reaction 129: 2 hco => hcco + oh
  qf[140] = (sc[7] * sc[7]);
  qr[140] = 0.0;

  // reaction 130: h + hcco => ch2(s) + co
  qf[141] = sc[0] * sc[21];
  qr[141] = 0.0;

  // reaction 131: ch2(s) + co => h + hcco
  qf[142] = sc[6] * sc[50];
  qr[142] = 0.0;

  // reaction 132: hcco + o => 2 co + h
  qf[143] = sc[2] * sc[21];
  qr[143] = 0.0;

  // reaction 133: c2h6 + o2 => c2h5 + ho2
  qf[144] = sc[3] * sc[15];
  qr[144] = 0.0;

  // reaction 134: c2h5 + ho2 => c2h6 + o2
  qf[145] = sc[11] * sc[17];
  qr[145] = 0.0;

  // reaction 135: c2h6 + ho2 => c2h5 + h2o2
  qf[146] = sc[11] * sc[15];
  qr[146] = 0.0;

  // reaction 136: c2h5 + h2o2 => c2h6 + ho2
  qf[147] = sc[12] * sc[17];
  qr[147] = 0.0;

  // reaction 137: c2h3 + ch3 => c2h2 + ch4
  qf[148] = sc[9] * sc[19];
  qr[148] = 0.0;

  // reaction 138: c2h2 + ch4 => c2h3 + ch3
  qf[149] = sc[10] * sc[18];
  qr[149] = 0.0;

  // reaction 139: c2h5 + ch3 => c2h4 + ch4
  qf[150] = sc[9] * sc[17];
  qr[150] = 0.0;

  // reaction 140: c2h4 + ch4 => c2h5 + ch3
  qf[151] = sc[10] * sc[16];
  qr[151] = 0.0;

  // reaction 141: c2h3 + h => c2h2 + h2
  qf[152] = sc[0] * sc[19];
  qr[152] = 0.0;

  // reaction 142: c2h2 + h2 => c2h3 + h
  qf[153] = sc[1] * sc[18];
  qr[153] = 0.0;

  // reaction 143: c2h5 + h => 2 ch3
  qf[154] = sc[0] * sc[17];
  qr[154] = 0.0;

  // reaction 144: 2 ch3 => c2h5 + h
  qf[155] = (sc[9] * sc[9]);
  qr[155] = 0.0;

  // reaction 145: c2h3 + o2 => ch2o + hco
  qf[156] = sc[3] * sc[19];
  qr[156] = 0.0;

  // reaction 146: ch2o + hco => c2h3 + o2
  qf[157] = sc[7] * sc[13];
  qr[157] = 0.0;

  // reaction 147: c2h6 => c2h5 + h
  qf[158] = sc[15];
  qr[158] = 0.0;

  // reaction 148: c2h5 + h => c2h6
  qf[159] = sc[0] * sc[17];
  qr[159] = 0.0;

  // reaction 149: c2h4 + ch3 => c2h3 + ch4
  qf[160] = sc[9] * sc[16];
  qr[160] = 0.0;

  // reaction 150: c2h3 + ch4 => c2h4 + ch3
  qf[161] = sc[10] * sc[19];
  qr[161] = 0.0;

  // reaction 152: ch3cho => ch3 + hco
  qf[162] = sc[24];
  qr[162] = 0.0;

  // reaction 153: ch3 + hco => ch3cho
  qf[163] = sc[7] * sc[9];
  qr[163] = 0.0;

  // reaction 154: ch3cho + o2 => ch3co + ho2
  qf[164] = sc[3] * sc[24];
  qr[164] = 0.0;

  // reaction 155: ch3co + ho2 => ch3cho + o2
  qf[165] = sc[11] * sc[22];
  qr[165] = 0.0;

  // reaction 156: ch3cho + oh => ch3co + h2o
  qf[166] = sc[4] * sc[24];
  qr[166] = 0.0;

  // reaction 157: ch3co + h2o => ch3cho + oh
  qf[167] = sc[5] * sc[22];
  qr[167] = 0.0;

  // reaction 158: ch3cho + h => ch3co + h2
  qf[168] = sc[0] * sc[24];
  qr[168] = 0.0;

  // reaction 159: ch3co + h2 => ch3cho + h
  qf[169] = sc[1] * sc[22];
  qr[169] = 0.0;

  // reaction 160: ch3cho + o => ch3co + oh
  qf[170] = sc[2] * sc[24];
  qr[170] = 0.0;

  // reaction 161: ch3co + oh => ch3cho + o
  qf[171] = sc[4] * sc[22];
  qr[171] = 0.0;

  // reaction 162: ch3cho + ho2 => ch3co + h2o2
  qf[172] = sc[11] * sc[24];
  qr[172] = 0.0;

  // reaction 163: ch3co + h2o2 => ch3cho + ho2
  qf[173] = sc[12] * sc[22];
  qr[173] = 0.0;

  // reaction 164: ch3 + ch3cho => ch3co + ch4
  qf[174] = sc[9] * sc[24];
  qr[174] = 0.0;

  // reaction 165: ch3co + ch4 => ch3 + ch3cho
  qf[175] = sc[10] * sc[22];
  qr[175] = 0.0;

  // reaction 166: c3h5-a => c2h2 + ch3
  qf[176] = sc[47];
  qr[176] = 0.0;

  // reaction 167: c2h2 + ch3 => c3h5-a
  qf[177] = sc[9] * sc[18];
  qr[177] = 0.0;

  // reaction 168: c3h6 => c2h3 + ch3
  qf[178] = sc[26];
  qr[178] = 0.0;

  // reaction 169: c2h3 + ch3 => c3h6
  qf[179] = sc[9] * sc[19];
  qr[179] = 0.0;

  // reaction 170: c2h2 + ch3 => c3h4-a + h
  qf[180] = sc[9] * sc[18];
  qr[180] = 0.0;

  // reaction 171: c3h4-a + h => c2h2 + ch3
  qf[181] = sc[0] * sc[25];
  qr[181] = 0.0;

  // reaction 172: c3h6 => c3h5-a + h
  qf[182] = sc[26];
  qr[182] = 0.0;

  // reaction 173: c3h5-a + h => c3h6
  qf[183] = sc[0] * sc[47];
  qr[183] = 0.0;

  // reaction 174: c3h6 + o => ch2co + ch3 + h
  qf[184] = sc[2] * sc[26];
  qr[184] = 0.0;

  // reaction 175: ch2co + ch3 + h => c3h6 + o
  qf[185] = sc[0] * sc[9] * sc[20];
  qr[185] = 0.0;

  // reaction 176: c3h6 + o => c2h5 + hco
  qf[186] = sc[2] * sc[26];
  qr[186] = 0.0;

  // reaction 177: c2h5 + hco => c3h6 + o
  qf[187] = sc[7] * sc[17];
  qr[187] = 0.0;

  // reaction 178: c3h6 + ho2 => c3h5-a + h2o2
  qf[188] = sc[11] * sc[26];
  qr[188] = 0.0;

  // reaction 179: c3h5-a + h2o2 => c3h6 + ho2
  qf[189] = sc[12] * sc[47];
  qr[189] = 0.0;

  // reaction 180: c3h6 + oh => c3h5-a + h2o
  qf[190] = sc[4] * sc[26];
  qr[190] = 0.0;

  // reaction 181: c3h5-a + h2o => c3h6 + oh
  qf[191] = sc[5] * sc[47];
  qr[191] = 0.0;

  // reaction 182: c4h6 => 2 c2h3
  qf[192] = sc[27];
  qr[192] = 0.0;

  // reaction 183: 2 c2h3 => c4h6
  qf[193] = (sc[19] * sc[19]);
  qr[193] = 0.0;

  // reaction 184: c4h6 + oh => c2h5 + ch2co
  qf[194] = sc[4] * sc[27];
  qr[194] = 0.0;

  // reaction 185: c2h5 + ch2co => c4h6 + oh
  qf[195] = sc[17] * sc[20];
  qr[195] = 0.0;

  // reaction 186: c4h6 + oh => c3h5-a + ch2o
  qf[196] = sc[4] * sc[27];
  qr[196] = 0.0;

  // reaction 187: c3h5-a + ch2o => c4h6 + oh
  qf[197] = sc[13] * sc[47];
  qr[197] = 0.0;

  // reaction 188: c4h6 + oh => c2h3 + ch3cho
  qf[198] = sc[4] * sc[27];
  qr[198] = 0.0;

  // reaction 189: c2h3 + ch3cho => c4h6 + oh
  qf[199] = sc[19] * sc[24];
  qr[199] = 0.0;

  // reaction 190: c4h6 + o => c2h4 + ch2co
  qf[200] = sc[2] * sc[27];
  qr[200] = 0.0;

  // reaction 191: c2h4 + ch2co => c4h6 + o
  qf[201] = sc[16] * sc[20];
  qr[201] = 0.0;

  // reaction 192: c4h6 + o => c3h4-a + ch2o
  qf[202] = sc[2] * sc[27];
  qr[202] = 0.0;

  // reaction 193: c3h4-a + ch2o => c4h6 + o
  qf[203] = sc[13] * sc[25];
  qr[203] = 0.0;

  // reaction 194: c2h4 + o2 => c2h3 + ho2
  qf[204] = sc[3] * sc[16];
  qr[204] = 0.0;

  // reaction 195: c2h3 + ho2 => c2h4 + o2
  qf[205] = sc[11] * sc[19];
  qr[205] = 0.0;

  // reaction 198: nc3h7 => c2h4 + ch3
  qf[206] = sc[28];
  qr[206] = 0.0;

  // reaction 199: c2h4 + ch3 => nc3h7
  qf[207] = sc[9] * sc[16];
  qr[207] = 0.0;

  // reaction 200: nc3h7 => c3h6 + h
  qf[208] = sc[28];
  qr[208] = 0.0;

  // reaction 201: c3h6 + h => nc3h7
  qf[209] = sc[0] * sc[26];
  qr[209] = 0.0;

  // reaction 202: nc3h7 + o2 => c3h6 + ho2
  qf[210] = sc[3] * sc[28];
  qr[210] = 0.0;

  // reaction 203: c3h6 + ho2 => nc3h7 + o2
  qf[211] = sc[11] * sc[26];
  qr[211] = 0.0;

  // reaction 204: c3h6 + o => c3h5-a + oh
  qf[212] = sc[2] * sc[26];
  qr[212] = 0.0;

  // reaction 205: c3h5-a + oh => c3h6 + o
  qf[213] = sc[4] * sc[47];
  qr[213] = 0.0;

  // reaction 206: c3h6 + h => c3h5-a + h2
  qf[214] = sc[0] * sc[26];
  qr[214] = 0.0;

  // reaction 207: c3h5-a + h2 => c3h6 + h
  qf[215] = sc[1] * sc[47];
  qr[215] = 0.0;

  // reaction 208: c3h6 + h => c2h4 + ch3
  qf[216] = sc[0] * sc[26];
  qr[216] = 0.0;

  // reaction 209: c2h4 + ch3 => c3h6 + h
  qf[217] = sc[9] * sc[16];
  qr[217] = 0.0;

  // reaction 210: c5h9 => c2h4 + c3h5-a
  qf[218] = sc[35];
  qr[218] = 0.0;

  // reaction 211: c5h9 => c4h6 + ch3
  qf[219] = sc[35];
  qr[219] = 0.0;

  // reaction 212: c4h6 + ch3 => c5h9
  qf[220] = sc[9] * sc[27];
  qr[220] = 0.0;

  // reaction 213: c4h7 => c4h6 + h
  qf[221] = sc[29];
  qr[221] = 0.0;

  // reaction 214: c4h6 + h => c4h7
  qf[222] = sc[0] * sc[27];
  qr[222] = 0.0;

  // reaction 215: c4h7 => c2h3 + c2h4
  qf[223] = sc[29];
  qr[223] = 0.0;

  // reaction 216: c2h3 + c2h4 => c4h7
  qf[224] = sc[16] * sc[19];
  qr[224] = 0.0;

  // reaction 217: c4h6 + c4h8-1 => 2 c4h7
  qf[225] = sc[27] * sc[30];
  qr[225] = 0.0;

  // reaction 218: 2 c4h7 => c4h6 + c4h8-1
  qf[226] = (sc[29] * sc[29]);
  qr[226] = 0.0;

  // reaction 219: c4h7 + ch3 => c4h6 + ch4
  qf[227] = sc[9] * sc[29];
  qr[227] = 0.0;

  // reaction 220: c4h6 + ch4 => c4h7 + ch3
  qf[228] = sc[10] * sc[27];
  qr[228] = 0.0;

  // reaction 221: c3h5-a + c4h7 => c3h6 + c4h6
  qf[229] = sc[29] * sc[47];
  qr[229] = 0.0;

  // reaction 222: c3h6 + c4h6 => c3h5-a + c4h7
  qf[230] = sc[26] * sc[27];
  qr[230] = 0.0;

  // reaction 223: c4h7 + o2 => c4h6 + ho2
  qf[231] = sc[3] * sc[29];
  qr[231] = 0.0;

  // reaction 224: c4h6 + ho2 => c4h7 + o2
  qf[232] = sc[11] * sc[27];
  qr[232] = 0.0;

  // reaction 225: c4h7 + h => c4h6 + h2
  qf[233] = sc[0] * sc[29];
  qr[233] = 0.0;

  // reaction 226: c4h6 + h2 => c4h7 + h
  qf[234] = sc[1] * sc[27];
  qr[234] = 0.0;

  // reaction 227: c2h5 + c4h7 => c2h6 + c4h6
  qf[235] = sc[17] * sc[29];
  qr[235] = 0.0;

  // reaction 228: c2h6 + c4h6 => c2h5 + c4h7
  qf[236] = sc[15] * sc[27];
  qr[236] = 0.0;

  // reaction 229: c2h5 + c4h7 => c2h4 + c4h8-1
  qf[237] = sc[17] * sc[29];
  qr[237] = 0.0;

  // reaction 230: c2h4 + c4h8-1 => c2h5 + c4h7
  qf[238] = sc[16] * sc[30];
  qr[238] = 0.0;

  // reaction 231: c2h3 + c4h7 => c2h4 + c4h6
  qf[239] = sc[19] * sc[29];
  qr[239] = 0.0;

  // reaction 232: c2h4 + c4h6 => c2h3 + c4h7
  qf[240] = sc[16] * sc[27];
  qr[240] = 0.0;

  // reaction 233: c4h8-1 => c3h5-a + ch3
  qf[241] = sc[30];
  qr[241] = 0.0;

  // reaction 234: c3h5-a + ch3 => c4h8-1
  qf[242] = sc[9] * sc[47];
  qr[242] = 0.0;

  // reaction 235: c4h8-1 => c2h3 + c2h5
  qf[243] = sc[30];
  qr[243] = 0.0;

  // reaction 236: c2h3 + c2h5 => c4h8-1
  qf[244] = sc[17] * sc[19];
  qr[244] = 0.0;

  // reaction 237: c4h8-1 => c4h7 + h
  qf[245] = sc[30];
  qr[245] = 0.0;

  // reaction 238: c4h7 + h => c4h8-1
  qf[246] = sc[0] * sc[29];
  qr[246] = 0.0;

  // reaction 239: c4h8-1 + ch3 => c4h7 + ch4
  qf[247] = sc[9] * sc[30];
  qr[247] = 0.0;

  // reaction 240: c4h7 + ch4 => c4h8-1 + ch3
  qf[248] = sc[10] * sc[29];
  qr[248] = 0.0;

  // reaction 241: c4h8-1 + h => c4h7 + h2
  qf[249] = sc[0] * sc[30];
  qr[249] = 0.0;

  // reaction 242: c4h7 + h2 => c4h8-1 + h
  qf[250] = sc[1] * sc[29];
  qr[250] = 0.0;

  // reaction 243: c4h8-1 + oh => c4h7 + h2o
  qf[251] = sc[4] * sc[30];
  qr[251] = 0.0;

  // reaction 244: c4h7 + h2o => c4h8-1 + oh
  qf[252] = sc[5] * sc[29];
  qr[252] = 0.0;

  // reaction 245: c3h5-a + c4h8-1 => c3h6 + c4h7
  qf[253] = sc[30] * sc[47];
  qr[253] = 0.0;

  // reaction 246: c3h6 + c4h7 => c3h5-a + c4h8-1
  qf[254] = sc[26] * sc[29];
  qr[254] = 0.0;

  // reaction 247: c4h8-1 + ho2 => c4h7 + h2o2
  qf[255] = sc[11] * sc[30];
  qr[255] = 0.0;

  // reaction 248: c4h7 + h2o2 => c4h8-1 + ho2
  qf[256] = sc[12] * sc[29];
  qr[256] = 0.0;

  // reaction 249: c4h8-1 + o2 => c4h7 + ho2
  qf[257] = sc[3] * sc[30];
  qr[257] = 0.0;

  // reaction 250: c4h7 + ho2 => c4h8-1 + o2
  qf[258] = sc[11] * sc[29];
  qr[258] = 0.0;

  // reaction 251: pc4h9 => c2h4 + c2h5
  qf[259] = sc[31];
  qr[259] = 0.0;

  // reaction 252: c2h4 + c2h5 => pc4h9
  qf[260] = sc[16] * sc[17];
  qr[260] = 0.0;

  // reaction 253: pc4h9 => c4h8-1 + h
  qf[261] = sc[31];
  qr[261] = 0.0;

  // reaction 254: c4h8-1 + h => pc4h9
  qf[262] = sc[0] * sc[30];
  qr[262] = 0.0;

  // reaction 255: o2 + pc4h9 => c4h8-1 + ho2
  qf[263] = sc[3] * sc[31];
  qr[263] = 0.0;

  // reaction 256: c4h8-1 + ho2 => o2 + pc4h9
  qf[264] = sc[11] * sc[30];
  qr[264] = 0.0;

  // reaction 257: ch3coch2 => ch2co + ch3
  qf[265] = sc[32];
  qr[265] = 0.0;

  // reaction 258: ch2co + ch3 => ch3coch2
  qf[266] = sc[9] * sc[20];
  qr[266] = 0.0;

  // reaction 259: c2h5co => c2h5 + co
  qf[267] = sc[34];
  qr[267] = 0.0;

  // reaction 260: c2h5 + co => c2h5co
  qf[268] = sc[6] * sc[17];
  qr[268] = 0.0;

  // reaction 261: c2h5cho + h => c2h5co + h2
  qf[269] = sc[0] * sc[33];
  qr[269] = 0.0;

  // reaction 262: c2h5co + h2 => c2h5cho + h
  qf[270] = sc[1] * sc[34];
  qr[270] = 0.0;

  // reaction 263: c2h5cho + o => c2h5co + oh
  qf[271] = sc[2] * sc[33];
  qr[271] = 0.0;

  // reaction 264: c2h5co + oh => c2h5cho + o
  qf[272] = sc[4] * sc[34];
  qr[272] = 0.0;

  // reaction 265: c2h5cho + oh => c2h5co + h2o
  qf[273] = sc[4] * sc[33];
  qr[273] = 0.0;

  // reaction 266: c2h5co + h2o => c2h5cho + oh
  qf[274] = sc[5] * sc[34];
  qr[274] = 0.0;

  // reaction 267: c2h5cho + ch3 => c2h5co + ch4
  qf[275] = sc[9] * sc[33];
  qr[275] = 0.0;

  // reaction 268: c2h5co + ch4 => c2h5cho + ch3
  qf[276] = sc[10] * sc[34];
  qr[276] = 0.0;

  // reaction 269: c2h5cho + ho2 => c2h5co + h2o2
  qf[277] = sc[11] * sc[33];
  qr[277] = 0.0;

  // reaction 270: c2h5co + h2o2 => c2h5cho + ho2
  qf[278] = sc[12] * sc[34];
  qr[278] = 0.0;

  // reaction 271: c2h5 + c2h5cho => c2h5co + c2h6
  qf[279] = sc[17] * sc[33];
  qr[279] = 0.0;

  // reaction 272: c2h5co + c2h6 => c2h5 + c2h5cho
  qf[280] = sc[15] * sc[34];
  qr[280] = 0.0;

  // reaction 273: c2h5cho => c2h5 + hco
  qf[281] = sc[33];
  qr[281] = 0.0;

  // reaction 274: c2h5 + hco => c2h5cho
  qf[282] = sc[7] * sc[17];
  qr[282] = 0.0;

  // reaction 275: c2h5cho + o2 => c2h5co + ho2
  qf[283] = sc[3] * sc[33];
  qr[283] = 0.0;

  // reaction 276: c2h5co + ho2 => c2h5cho + o2
  qf[284] = sc[11] * sc[34];
  qr[284] = 0.0;

  // reaction 277: c2h3 + c2h5cho => c2h4 + c2h5co
  qf[285] = sc[19] * sc[33];
  qr[285] = 0.0;

  // reaction 278: c2h4 + c2h5co => c2h3 + c2h5cho
  qf[286] = sc[16] * sc[34];
  qr[286] = 0.0;

  // reaction 279: c2h5cho + c3h5-a => c2h5co + c3h6
  qf[287] = sc[33] * sc[47];
  qr[287] = 0.0;

  // reaction 280: c2h5co + c3h6 => c2h5cho + c3h5-a
  qf[288] = sc[26] * sc[34];
  qr[288] = 0.0;

  // reaction 281: c5h10-1 => c2h5 + c3h5-a
  qf[289] = sc[36];
  qr[289] = 0.0;

  // reaction 282: c2h5 + c3h5-a => c5h10-1
  qf[290] = sc[17] * sc[47];
  qr[290] = 0.0;

  // reaction 283: c5h10-1 + h => c5h9 + h2
  qf[291] = sc[0] * sc[36];
  qr[291] = 0.0;

  // reaction 284: c5h9 + h2 => c5h10-1 + h
  qf[292] = sc[1] * sc[35];
  qr[292] = 0.0;

  // reaction 285: c5h10-1 + o => c5h9 + oh
  qf[293] = sc[2] * sc[36];
  qr[293] = 0.0;

  // reaction 286: c5h9 + oh => c5h10-1 + o
  qf[294] = sc[4] * sc[35];
  qr[294] = 0.0;

  // reaction 287: c5h10-1 + o => hco + pc4h9
  qf[295] = sc[2] * sc[36];
  qr[295] = 0.0;

  // reaction 288: c5h10-1 + o => ch3co + nc3h7
  qf[296] = sc[2] * sc[36];
  qr[296] = 0.0;

  // reaction 289: c5h10-1 + oh => c5h9 + h2o
  qf[297] = sc[4] * sc[36];
  qr[297] = 0.0;

  // reaction 290: c5h9 + h2o => c5h10-1 + oh
  qf[298] = sc[5] * sc[35];
  qr[298] = 0.0;

  // reaction 291: c5h10-1 + oh => ch2o + pc4h9
  qf[299] = sc[4] * sc[36];
  qr[299] = 0.0;

  // reaction 292: c5h10-1 + oh => ch3cho + nc3h7
  qf[300] = sc[4] * sc[36];
  qr[300] = 0.0;

  // reaction 293: c5h10-1 + ch3 => c5h9 + ch4
  qf[301] = sc[9] * sc[36];
  qr[301] = 0.0;

  // reaction 294: c5h9 + ch4 => c5h10-1 + ch3
  qf[302] = sc[10] * sc[35];
  qr[302] = 0.0;

  // reaction 295: h + h2o2 => h2 + ho2
  qf[303] = sc[0] * sc[12];
  qr[303] = 0.0;

  // reaction 296: h2 + ho2 => h + h2o2
  qf[304] = sc[1] * sc[11];
  qr[304] = 0.0;

  // reaction 297: hco + o => co2 + h
  qf[305] = sc[2] * sc[7];
  qr[305] = 0.0;

  // reaction 298: co2 + h => hco + o
  qf[306] = sc[0] * sc[8];
  qr[306] = 0.0;

  // reaction 299: ch3co + h => ch2co + h2
  qf[307] = sc[0] * sc[22];
  qr[307] = 0.0;

  // reaction 300: ch2co + h2 => ch3co + h
  qf[308] = sc[1] * sc[20];
  qr[308] = 0.0;

  // reaction 301: ch3co + o => ch2co + oh
  qf[309] = sc[2] * sc[22];
  qr[309] = 0.0;

  // reaction 302: ch2co + oh => ch3co + o
  qf[310] = sc[4] * sc[20];
  qr[310] = 0.0;

  // reaction 303: ch3 + ch3co => ch2co + ch4
  qf[311] = sc[9] * sc[22];
  qr[311] = 0.0;

  // reaction 304: ch2co + ch4 => ch3 + ch3co
  qf[312] = sc[10] * sc[20];
  qr[312] = 0.0;

  // reaction 305: c2h4 + o => ch2cho + h
  qf[313] = sc[2] * sc[16];
  qr[313] = 0.0;

  // reaction 306: ch2cho + h => c2h4 + o
  qf[314] = sc[0] * sc[23];
  qr[314] = 0.0;

  // reaction 307: c2h5 + o => ch3cho + h
  qf[315] = sc[2] * sc[17];
  qr[315] = 0.0;

  // reaction 308: ch3cho + h => c2h5 + o
  qf[316] = sc[0] * sc[24];
  qr[316] = 0.0;

  // reaction 309: c2h3 + c2h4 => c4h6 + h
  qf[317] = sc[16] * sc[19];
  qr[317] = 0.0;

  // reaction 310: c4h6 + h => c2h3 + c2h4
  qf[318] = sc[0] * sc[27];
  qr[318] = 0.0;

  // reaction 313: c2h5o + o2 => ch3cho + ho2
  qf[319] = sc[3] * sc[37];
  qr[319] = 0.0;

  // reaction 314: ch3cho + ho2 => c2h5o + o2
  qf[320] = sc[11] * sc[24];
  qr[320] = 0.0;

  // reaction 315: h2o2 + o2 => 2 ho2
  qf[321] = sc[3] * sc[12];
  qr[321] = 0.0;

  // reaction 316: 2 ho2 => h2o2 + o2
  qf[322] = (sc[11] * sc[11]);
  qr[322] = 0.0;

  // reaction 317: c2h3 + o2 => ch2cho + o
  qf[323] = sc[3] * sc[19];
  qr[323] = 0.0;

  // reaction 318: ch2cho + o => c2h3 + o2
  qf[324] = sc[2] * sc[23];
  qr[324] = 0.0;

  // reaction 321: ch3o2h => ch3o + oh
  qf[325] = sc[39];
  qr[325] = 0.0;

  // reaction 322: ch3o + oh => ch3o2h
  qf[326] = sc[4] * sc[14];
  qr[326] = 0.0;

  // reaction 323: c3h2 + o2 => co + h + hcco
  qf[327] = sc[3] * sc[49];
  qr[327] = 0.0;

  // reaction 324: ch2o + ch3o2 => ch3o2h + hco
  qf[328] = sc[13] * sc[38];
  qr[328] = 0.0;

  // reaction 325: ch3o2h + hco => ch2o + ch3o2
  qf[329] = sc[7] * sc[39];
  qr[329] = 0.0;

  // reaction 326: c2h4 + ch3o2 => c2h3 + ch3o2h
  qf[330] = sc[16] * sc[38];
  qr[330] = 0.0;

  // reaction 327: c2h3 + ch3o2h => c2h4 + ch3o2
  qf[331] = sc[19] * sc[39];
  qr[331] = 0.0;

  // reaction 328: ch3o2 + ch4 => ch3 + ch3o2h
  qf[332] = sc[10] * sc[38];
  qr[332] = 0.0;

  // reaction 329: ch3 + ch3o2h => ch3o2 + ch4
  qf[333] = sc[9] * sc[39];
  qr[333] = 0.0;

  // reaction 330: c2h5 + ho2 => c2h5o + oh
  qf[334] = sc[11] * sc[17];
  qr[334] = 0.0;

  // reaction 331: c2h5o + oh => c2h5 + ho2
  qf[335] = sc[4] * sc[37];
  qr[335] = 0.0;

  // reaction 332: ch3 + ch3o2 => 2 ch3o
  qf[336] = sc[9] * sc[38];
  qr[336] = 0.0;

  // reaction 333: 2 ch3o => ch3 + ch3o2
  qf[337] = (sc[14] * sc[14]);
  qr[337] = 0.0;

  // reaction 334: c2h5 + ch3o2 => c2h5o + ch3o
  qf[338] = sc[17] * sc[38];
  qr[338] = 0.0;

  // reaction 335: c2h5o + ch3o => c2h5 + ch3o2
  qf[339] = sc[14] * sc[37];
  qr[339] = 0.0;

  // reaction 336: ch3o2 + ho2 => ch3o2h + o2
  qf[340] = sc[11] * sc[38];
  qr[340] = 0.0;

  // reaction 337: ch3o2h + o2 => ch3o2 + ho2
  qf[341] = sc[3] * sc[39];
  qr[341] = 0.0;

  // reaction 338: h2o2 + oh => h2o + ho2
  qf[342] = sc[4] * sc[12];
  qr[342] = 0.0;

  // reaction 339: h2o + ho2 => h2o2 + oh
  qf[343] = sc[5] * sc[11];
  qr[343] = 0.0;

  // reaction 340: 2 ch3o2 => 2 ch3o + o2
  qf[344] = (sc[38] * sc[38]);
  qr[344] = 0.0;

  // reaction 341: c2h6 + ch3o2 => c2h5 + ch3o2h
  qf[345] = sc[15] * sc[38];
  qr[345] = 0.0;

  // reaction 342: c2h5 + ch3o2h => c2h6 + ch3o2
  qf[346] = sc[17] * sc[39];
  qr[346] = 0.0;

  // reaction 345: ch3cho + ch3o2 => ch3co + ch3o2h
  qf[347] = sc[24] * sc[38];
  qr[347] = 0.0;

  // reaction 346: ch3co + ch3o2h => ch3cho + ch3o2
  qf[348] = sc[22] * sc[39];
  qr[348] = 0.0;

  // reaction 347: c2h3co => c2h3 + co
  qf[349] = sc[40];
  qr[349] = 0.0;

  // reaction 348: c2h3 + co => c2h3co
  qf[350] = sc[6] * sc[19];
  qr[350] = 0.0;

  // reaction 349: c2h3cho + oh => c2h3co + h2o
  qf[351] = sc[4] * sc[41];
  qr[351] = 0.0;

  // reaction 350: c2h3co + h2o => c2h3cho + oh
  qf[352] = sc[5] * sc[40];
  qr[352] = 0.0;

  // reaction 351: c2h3cho + h => c2h3co + h2
  qf[353] = sc[0] * sc[41];
  qr[353] = 0.0;

  // reaction 352: c2h3co + h2 => c2h3cho + h
  qf[354] = sc[1] * sc[40];
  qr[354] = 0.0;

  // reaction 353: c2h3cho + o => c2h3co + oh
  qf[355] = sc[2] * sc[41];
  qr[355] = 0.0;

  // reaction 354: c2h3co + oh => c2h3cho + o
  qf[356] = sc[4] * sc[40];
  qr[356] = 0.0;

  // reaction 355: c2h3cho + ho2 => c2h3co + h2o2
  qf[357] = sc[11] * sc[41];
  qr[357] = 0.0;

  // reaction 356: c2h3co + h2o2 => c2h3cho + ho2
  qf[358] = sc[12] * sc[40];
  qr[358] = 0.0;

  // reaction 357: c2h3cho + ch3 => c2h3co + ch4
  qf[359] = sc[9] * sc[41];
  qr[359] = 0.0;

  // reaction 358: c2h3co + ch4 => c2h3cho + ch3
  qf[360] = sc[10] * sc[40];
  qr[360] = 0.0;

  // reaction 359: c2h3cho + ch3o2 => c2h3co + ch3o2h
  qf[361] = sc[38] * sc[41];
  qr[361] = 0.0;

  // reaction 360: c2h3co + ch3o2h => c2h3cho + ch3o2
  qf[362] = sc[39] * sc[40];
  qr[362] = 0.0;

  // reaction 361: c3h5o => c2h3cho + h
  qf[363] = sc[42];
  qr[363] = 0.0;

  // reaction 362: c2h3cho + h => c3h5o
  qf[364] = sc[0] * sc[41];
  qr[364] = 0.0;

  // reaction 363: c3h5o => c2h3 + ch2o
  qf[365] = sc[42];
  qr[365] = 0.0;

  // reaction 364: c2h3 + ch2o => c3h5o
  qf[366] = sc[13] * sc[19];
  qr[366] = 0.0;

  // reaction 365: c3h5o + o2 => c2h3cho + ho2
  qf[367] = sc[3] * sc[42];
  qr[367] = 0.0;

  // reaction 366: c2h3cho + ho2 => c3h5o + o2
  qf[368] = sc[11] * sc[41];
  qr[368] = 0.0;

  // reaction 367: c3h5-a + ho2 => c3h5o + oh
  qf[369] = sc[11] * sc[47];
  qr[369] = 0.0;

  // reaction 368: c3h5o + oh => c3h5-a + ho2
  qf[370] = sc[4] * sc[42];
  qr[370] = 0.0;

  // reaction 369: c3h5-a + ch3o2 => c3h5o + ch3o
  qf[371] = sc[38] * sc[47];
  qr[371] = 0.0;

  // reaction 370: c3h5o + ch3o => c3h5-a + ch3o2
  qf[372] = sc[14] * sc[42];
  qr[372] = 0.0;

  // reaction 371: c3h6 + ch3o2 => c3h5-a + ch3o2h
  qf[373] = sc[26] * sc[38];
  qr[373] = 0.0;

  // reaction 372: c3h5-a + ch3o2h => c3h6 + ch3o2
  qf[374] = sc[39] * sc[47];
  qr[374] = 0.0;

  // reaction 373: ch3 + oh => ch2(s) + h2o
  qf[375] = sc[4] * sc[9];
  qr[375] = 0.0;

  // reaction 374: ch2(s) + h2o => ch3 + oh
  qf[376] = sc[5] * sc[50];
  qr[376] = 0.0;

  // reaction 375: c4h7o => c2h3 + ch3cho
  qf[377] = sc[43];
  qr[377] = 0.0;

  // reaction 376: c2h3 + ch3cho => c4h7o
  qf[378] = sc[19] * sc[24];
  qr[378] = 0.0;

  // reaction 377: c4h7o => c2h3cho + ch3
  qf[379] = sc[43];
  qr[379] = 0.0;

  // reaction 378: c2h3cho + ch3 => c4h7o
  qf[380] = sc[9] * sc[41];
  qr[380] = 0.0;

  // reaction 379: c4h7 + ho2 => c4h7o + oh
  qf[381] = sc[11] * sc[29];
  qr[381] = 0.0;

  // reaction 380: c4h7o + oh => c4h7 + ho2
  qf[382] = sc[4] * sc[43];
  qr[382] = 0.0;

  // reaction 381: c4h7 + ch3o2 => c4h7o + ch3o
  qf[383] = sc[29] * sc[38];
  qr[383] = 0.0;

  // reaction 382: c4h7o + ch3o => c4h7 + ch3o2
  qf[384] = sc[14] * sc[43];
  qr[384] = 0.0;

  // reaction 383: c4h8-1 + oh => ch2o + nc3h7
  qf[385] = sc[4] * sc[30];
  qr[385] = 0.0;

  // reaction 384: ch2o + nc3h7 => c4h8-1 + oh
  qf[386] = sc[13] * sc[28];
  qr[386] = 0.0;

  // reaction 385: c4h8-1 + o => c3h6 + ch2o
  qf[387] = sc[2] * sc[30];
  qr[387] = 0.0;

  // reaction 386: c3h6 + ch2o => c4h8-1 + o
  qf[388] = sc[13] * sc[26];
  qr[388] = 0.0;

  // reaction 387: c4h8-1 + o => c2h4 + ch3cho
  qf[389] = sc[2] * sc[30];
  qr[389] = 0.0;

  // reaction 388: c2h4 + ch3cho => c4h8-1 + o
  qf[390] = sc[16] * sc[24];
  qr[390] = 0.0;

  // reaction 389: c4h8-1 + o => c2h5 + ch3co
  qf[391] = sc[2] * sc[30];
  qr[391] = 0.0;

  // reaction 390: c2h5 + ch3co => c4h8-1 + o
  qf[392] = sc[17] * sc[22];
  qr[392] = 0.0;

  // reaction 391: c4h8-1 + oh => c2h5 + ch3cho
  qf[393] = sc[4] * sc[30];
  qr[393] = 0.0;

  // reaction 392: c2h5 + ch3cho => c4h8-1 + oh
  qf[394] = sc[17] * sc[24];
  qr[394] = 0.0;

  // reaction 393: c4h8-1 + oh => c2h6 + ch3co
  qf[395] = sc[4] * sc[30];
  qr[395] = 0.0;

  // reaction 394: c2h6 + ch3co => c4h8-1 + oh
  qf[396] = sc[15] * sc[22];
  qr[396] = 0.0;

  // reaction 395: c4h8-1 + o => c2h5co + ch3
  qf[397] = sc[2] * sc[30];
  qr[397] = 0.0;

  // reaction 396: c2h5co + ch3 => c4h8-1 + o
  qf[398] = sc[9] * sc[34];
  qr[398] = 0.0;

  // reaction 397: c4h8-1 + oh => c2h5cho + ch3
  qf[399] = sc[4] * sc[30];
  qr[399] = 0.0;

  // reaction 398: c2h5cho + ch3 => c4h8-1 + oh
  qf[400] = sc[9] * sc[33];
  qr[400] = 0.0;

  // reaction 399: c4h8-1 + oh => c2h5co + ch4
  qf[401] = sc[4] * sc[30];
  qr[401] = 0.0;

  // reaction 400: c2h5co + ch4 => c4h8-1 + oh
  qf[402] = sc[10] * sc[34];
  qr[402] = 0.0;

  // reaction 401: c4h8-1 + ch3o2 => c4h7 + ch3o2h
  qf[403] = sc[30] * sc[38];
  qr[403] = 0.0;

  // reaction 402: c4h7 + ch3o2h => c4h8-1 + ch3o2
  qf[404] = sc[29] * sc[39];
  qr[404] = 0.0;

  // reaction 403: c4h8ooh1-3o2 => c4h8ooh1-3 + o2
  qf[405] = sc[44];
  qr[405] = 0.0;

  // reaction 404: c4h8ooh1-3 + o2 => c4h8ooh1-3o2
  qf[406] = sc[3] * sc[45];
  qr[406] = 0.0;

  // reaction 405: c4h8ooh1-3o2 => nc4ket13 + oh
  qf[407] = sc[44];
  qr[407] = 0.0;

  // reaction 406: nc4ket13 + oh => c4h8ooh1-3o2
  qf[408] = sc[4] * sc[51];
  qr[408] = 0.0;

  // reaction 407: c4h8ooh1-3 => c3h6 + ch2o + oh
  qf[409] = sc[45];
  qr[409] = 0.0;

  // reaction 408: pc4h9o2 => c4h8ooh1-3
  qf[410] = sc[46];
  qr[410] = 0.0;

  // reaction 409: c4h8ooh1-3 => pc4h9o2
  qf[411] = sc[45];
  qr[411] = 0.0;

  // reaction 410: c2h5cho + ch3o2 => c2h5co + ch3o2h
  qf[412] = sc[33] * sc[38];
  qr[412] = 0.0;

  // reaction 411: c2h5co + ch3o2h => c2h5cho + ch3o2
  qf[413] = sc[34] * sc[39];
  qr[413] = 0.0;

  // reaction 412: c2h5cho + c4h7 => c2h5co + c4h8-1
  qf[414] = sc[29] * sc[33];
  qr[414] = 0.0;

  // reaction 413: c2h5co + c4h8-1 => c2h5cho + c4h7
  qf[415] = sc[30] * sc[34];
  qr[415] = 0.0;

  // reaction 414: c3h4-a + ho2 => c2h4 + co + oh
  qf[416] = sc[11] * sc[25];
  qr[416] = 0.0;

  // reaction 415: c2h4 + co + oh => c3h4-a + ho2
  qf[417] = sc[4] * sc[6] * sc[16];
  qr[417] = 0.0;

  // reaction 416: c3h4-a + ho2 => c3h3 + h2o2
  qf[418] = sc[11] * sc[25];
  qr[418] = 0.0;

  // reaction 417: c3h3 + h2o2 => c3h4-a + ho2
  qf[419] = sc[12] * sc[48];
  qr[419] = 0.0;

  // reaction 418: c3h6 + o2 => c3h5-a + ho2
  qf[420] = sc[3] * sc[26];
  qr[420] = 0.0;

  // reaction 419: c3h5-a + ho2 => c3h6 + o2
  qf[421] = sc[11] * sc[47];
  qr[421] = 0.0;

  // reaction 420: c3h6 + ch3 => c3h5-a + ch4
  qf[422] = sc[9] * sc[26];
  qr[422] = 0.0;

  // reaction 421: c3h5-a + ch4 => c3h6 + ch3
  qf[423] = sc[10] * sc[47];
  qr[423] = 0.0;

  // reaction 422: c2h5 + c3h6 => c2h6 + c3h5-a
  qf[424] = sc[17] * sc[26];
  qr[424] = 0.0;

  // reaction 423: c2h6 + c3h5-a => c2h5 + c3h6
  qf[425] = sc[15] * sc[47];
  qr[425] = 0.0;

  // reaction 424: c3h5-a + ho2 => c2h3 + ch2o + oh
  qf[426] = sc[11] * sc[47];
  qr[426] = 0.0;

  // reaction 425: c2h3 + ch2o + oh => c3h5-a + ho2
  qf[427] = sc[4] * sc[13] * sc[19];
  qr[427] = 0.0;

  // reaction 426: c3h5-a + h => c3h4-a + h2
  qf[428] = sc[0] * sc[47];
  qr[428] = 0.0;

  // reaction 427: c3h4-a + h2 => c3h5-a + h
  qf[429] = sc[1] * sc[25];
  qr[429] = 0.0;

  // reaction 428: c3h5-a + ch3 => c3h4-a + ch4
  qf[430] = sc[9] * sc[47];
  qr[430] = 0.0;

  // reaction 429: c3h4-a + ch4 => c3h5-a + ch3
  qf[431] = sc[10] * sc[25];
  qr[431] = 0.0;

  // reaction 430: c2h5 + c3h5-a => c2h6 + c3h4-a
  qf[432] = sc[17] * sc[47];
  qr[432] = 0.0;

  // reaction 431: c2h6 + c3h4-a => c2h5 + c3h5-a
  qf[433] = sc[15] * sc[25];
  qr[433] = 0.0;

  // reaction 432: c2h5 + c3h5-a => c2h4 + c3h6
  qf[434] = sc[17] * sc[47];
  qr[434] = 0.0;

  // reaction 433: c2h4 + c3h6 => c2h5 + c3h5-a
  qf[435] = sc[16] * sc[26];
  qr[435] = 0.0;

  // reaction 434: c2h3 + c3h5-a => c2h4 + c3h4-a
  qf[436] = sc[19] * sc[47];
  qr[436] = 0.0;

  // reaction 435: c2h4 + c3h4-a => c2h3 + c3h5-a
  qf[437] = sc[16] * sc[25];
  qr[437] = 0.0;

  // reaction 436: c3h4-a + c3h6 => 2 c3h5-a
  qf[438] = sc[25] * sc[26];
  qr[438] = 0.0;

  // reaction 437: 2 c3h5-a => c3h4-a + c3h6
  qf[439] = (sc[47] * sc[47]);
  qr[439] = 0.0;

  // reaction 438: c3h5-a + o2 => c2h3cho + oh
  qf[440] = sc[3] * sc[47];
  qr[440] = 0.0;

  // reaction 439: c2h3cho + oh => c3h5-a + o2
  qf[441] = sc[4] * sc[41];
  qr[441] = 0.0;

  // reaction 442: c3h4-a + o2 => c3h3 + ho2
  qf[442] = sc[3] * sc[25];
  qr[442] = 0.0;

  // reaction 443: c3h3 + ho2 => c3h4-a + o2
  qf[443] = sc[11] * sc[48];
  qr[443] = 0.0;

  // reaction 444: c3h3 + h => c3h2 + h2
  qf[444] = sc[0] * sc[48];
  qr[444] = 0.0;

  // reaction 445: c3h2 + h2 => c3h3 + h
  qf[445] = sc[1] * sc[49];
  qr[445] = 0.0;

  // reaction 446: c3h4-a + oh => c3h3 + h2o
  qf[446] = sc[4] * sc[25];
  qr[446] = 0.0;

  // reaction 447: c3h3 + h2o => c3h4-a + oh
  qf[447] = sc[5] * sc[48];
  qr[447] = 0.0;

  // reaction 448: c3h4-a + o => c2h4 + co
  qf[448] = sc[2] * sc[25];
  qr[448] = 0.0;

  // reaction 449: c2h4 + co => c3h4-a + o
  qf[449] = sc[6] * sc[16];
  qr[449] = 0.0;

  // reaction 450: c3h2 + oh => c2h2 + hco
  qf[450] = sc[4] * sc[49];
  qr[450] = 0.0;

  // reaction 451: c2h2 + hco => c3h2 + oh
  qf[451] = sc[7] * sc[18];
  qr[451] = 0.0;

  // reaction 452: c3h5-a => c3h4-a + h
  qf[452] = sc[47];
  qr[452] = 0.0;

  // reaction 453: c3h4-a + h => c3h5-a
  qf[453] = sc[0] * sc[25];
  qr[453] = 0.0;

  // reaction 454: c3h4-a + h => c3h3 + h2
  qf[454] = sc[0] * sc[25];
  qr[454] = 0.0;

  // reaction 455: c3h3 + h2 => c3h4-a + h
  qf[455] = sc[1] * sc[48];
  qr[455] = 0.0;

  // reaction 456: c3h4-a + ch3 => c3h3 + ch4
  qf[456] = sc[9] * sc[25];
  qr[456] = 0.0;

  // reaction 457: c3h3 + ch4 => c3h4-a + ch3
  qf[457] = sc[10] * sc[48];
  qr[457] = 0.0;

  // reaction 458: c3h4-a + c3h5-a => c3h3 + c3h6
  qf[458] = sc[25] * sc[47];
  qr[458] = 0.0;

  // reaction 459: c3h3 + c3h6 => c3h4-a + c3h5-a
  qf[459] = sc[26] * sc[48];
  qr[459] = 0.0;

  // reaction 460: c3h3 + oh => c3h2 + h2o
  qf[460] = sc[4] * sc[48];
  qr[460] = 0.0;

  // reaction 461: c3h2 + h2o => c3h3 + oh
  qf[461] = sc[5] * sc[49];
  qr[461] = 0.0;

  // reaction 462: c3h3 + o2 => ch2co + hco
  qf[462] = sc[3] * sc[48];
  qr[462] = 0.0;

  // reaction 463: ch2co + hco => c3h3 + o2
  qf[463] = sc[7] * sc[20];
  qr[463] = 0.0;

  // reaction 464: pc4h9o2 => o2 + pc4h9
  qf[464] = sc[46];
  qr[464] = 0.0;

  // reaction 465: o2 + pc4h9 => pc4h9o2
  qf[465] = sc[3] * sc[31];
  qr[465] = 0.0;

  // reaction 466: ch2cho => ch2co + h
  qf[466] = sc[23];
  qr[466] = 0.0;

  // reaction 467: ch2co + h => ch2cho
  qf[467] = sc[0] * sc[20];
  qr[467] = 0.0;

  // reaction 468: ch2cho + o2 => ch2o + co + oh
  qf[468] = sc[3] * sc[23];
  qr[468] = 0.0;

  // reaction 469: nc4ket13 => ch2cho + ch3cho + oh
  qf[469] = sc[51];
  qr[469] = 0.0;

  // reaction 470: c3h5-a + o2 => c3h4-a + ho2
  qf[470] = sc[3] * sc[47];
  qr[470] = 0.0;

  // reaction 471: c3h4-a + ho2 => c3h5-a + o2
  qf[471] = sc[11] * sc[25];
  qr[471] = 0.0;

  // reaction 472: c3h5-a + o2 => ch2cho + ch2o
  qf[472] = sc[3] * sc[47];
  qr[472] = 0.0;

  // reaction 473: ch2cho + ch2o => c3h5-a + o2
  qf[473] = sc[13] * sc[23];
  qr[473] = 0.0;

  // reaction 474: c3h5-a + o2 => c2h2 + ch2o + oh
  qf[474] = sc[3] * sc[47];
  qr[474] = 0.0;

  // reaction 475: hcco + o2 => co2 + hco
  qf[475] = sc[3] * sc[21];
  qr[475] = 0.0;

  // reaction 476: co2 + hco => hcco + o2
  qf[476] = sc[7] * sc[8];
  qr[476] = 0.0;

  // reaction 477: ch3 + o2 => ch2o + oh
  qf[477] = sc[3] * sc[9];
  qr[477] = 0.0;

  // reaction 478: ch2o + oh => ch3 + o2
  qf[478] = sc[4] * sc[13];
  qr[478] = 0.0;

  // reaction 479: c2h4 + h2 => 2 ch3
  qf[479] = sc[1] * sc[16];
  qr[479] = 0.0;

  // reaction 480: 2 ch3 => c2h4 + h2
  qf[480] = (sc[9] * sc[9]);
  qr[480] = 0.0;

  // reaction 481: nc3h7cho + o2 => ho2 + nc3h7co
  qf[481] = sc[3] * sc[52];
  qr[481] = 0.0;

  // reaction 482: ho2 + nc3h7co => nc3h7cho + o2
  qf[482] = sc[11] * sc[53];
  qr[482] = 0.0;

  // reaction 483: nc3h7cho + oh => h2o + nc3h7co
  qf[483] = sc[4] * sc[52];
  qr[483] = 0.0;

  // reaction 484: h2o + nc3h7co => nc3h7cho + oh
  qf[484] = sc[5] * sc[53];
  qr[484] = 0.0;

  // reaction 485: h + nc3h7cho => h2 + nc3h7co
  qf[485] = sc[0] * sc[52];
  qr[485] = 0.0;

  // reaction 486: h2 + nc3h7co => h + nc3h7cho
  qf[486] = sc[1] * sc[53];
  qr[486] = 0.0;

  // reaction 487: nc3h7cho + o => nc3h7co + oh
  qf[487] = sc[2] * sc[52];
  qr[487] = 0.0;

  // reaction 488: nc3h7co + oh => nc3h7cho + o
  qf[488] = sc[4] * sc[53];
  qr[488] = 0.0;

  // reaction 489: ho2 + nc3h7cho => h2o2 + nc3h7co
  qf[489] = sc[11] * sc[52];
  qr[489] = 0.0;

  // reaction 490: h2o2 + nc3h7co => ho2 + nc3h7cho
  qf[490] = sc[12] * sc[53];
  qr[490] = 0.0;

  // reaction 491: ch3 + nc3h7cho => ch4 + nc3h7co
  qf[491] = sc[9] * sc[52];
  qr[491] = 0.0;

  // reaction 492: ch4 + nc3h7co => ch3 + nc3h7cho
  qf[492] = sc[10] * sc[53];
  qr[492] = 0.0;

  // reaction 493: ch3o2 + nc3h7cho => ch3o2h + nc3h7co
  qf[493] = sc[38] * sc[52];
  qr[493] = 0.0;

  // reaction 494: ch3o2h + nc3h7co => ch3o2 + nc3h7cho
  qf[494] = sc[39] * sc[53];
  qr[494] = 0.0;

  // reaction 495: nc3h7co => co + nc3h7
  qf[495] = sc[53];
  qr[495] = 0.0;

  // reaction 496: co + nc3h7 => nc3h7co
  qf[496] = sc[6] * sc[28];
  qr[496] = 0.0;

  // reaction 497: c2h5coch2 => c2h5 + ch2co
  qf[497] = sc[54];
  qr[497] = 0.0;

  // reaction 498: c2h5 + ch2co => c2h5coch2
  qf[498] = sc[17] * sc[20];
  qr[498] = 0.0;

  // reaction 499: nc3h7coch2 => ch2co + nc3h7
  qf[499] = sc[55];
  qr[499] = 0.0;

  // reaction 500: ch2co + nc3h7 => nc3h7coch2
  qf[500] = sc[20] * sc[28];
  qr[500] = 0.0;

  // reaction 501: nc4h9cho + o2 => ho2 + nc4h9co
  qf[501] = sc[3] * sc[56];
  qr[501] = 0.0;

  // reaction 502: ho2 + nc4h9co => nc4h9cho + o2
  qf[502] = sc[11] * sc[57];
  qr[502] = 0.0;

  // reaction 503: nc4h9cho + oh => h2o + nc4h9co
  qf[503] = sc[4] * sc[56];
  qr[503] = 0.0;

  // reaction 504: h2o + nc4h9co => nc4h9cho + oh
  qf[504] = sc[5] * sc[57];
  qr[504] = 0.0;

  // reaction 505: h + nc4h9cho => h2 + nc4h9co
  qf[505] = sc[0] * sc[56];
  qr[505] = 0.0;

  // reaction 506: h2 + nc4h9co => h + nc4h9cho
  qf[506] = sc[1] * sc[57];
  qr[506] = 0.0;

  // reaction 507: nc4h9cho + o => nc4h9co + oh
  qf[507] = sc[2] * sc[56];
  qr[507] = 0.0;

  // reaction 508: nc4h9co + oh => nc4h9cho + o
  qf[508] = sc[4] * sc[57];
  qr[508] = 0.0;

  // reaction 509: ho2 + nc4h9cho => h2o2 + nc4h9co
  qf[509] = sc[11] * sc[56];
  qr[509] = 0.0;

  // reaction 510: h2o2 + nc4h9co => ho2 + nc4h9cho
  qf[510] = sc[12] * sc[57];
  qr[510] = 0.0;

  // reaction 511: ch3 + nc4h9cho => ch4 + nc4h9co
  qf[511] = sc[9] * sc[56];
  qr[511] = 0.0;

  // reaction 512: ch4 + nc4h9co => ch3 + nc4h9cho
  qf[512] = sc[10] * sc[57];
  qr[512] = 0.0;

  // reaction 513: ch3o2 + nc4h9cho => ch3o2h + nc4h9co
  qf[513] = sc[38] * sc[56];
  qr[513] = 0.0;

  // reaction 514: ch3o2h + nc4h9co => ch3o2 + nc4h9cho
  qf[514] = sc[39] * sc[57];
  qr[514] = 0.0;

  // reaction 515: nc4h9co => co + pc4h9
  qf[515] = sc[57];
  qr[515] = 0.0;

  // reaction 516: co + pc4h9 => nc4h9co
  qf[516] = sc[6] * sc[31];
  qr[516] = 0.0;

  // reaction 517: ch2(s) + ch4 => 2 ch3
  qf[517] = sc[10] * sc[50];
  qr[517] = 0.0;

  // reaction 518: 2 ch3 => ch2(s) + ch4
  qf[518] = (sc[9] * sc[9]);
  qr[518] = 0.0;

  // reaction 519: c2h6 + ch2(s) => c2h5 + ch3
  qf[519] = sc[15] * sc[50];
  qr[519] = 0.0;

  // reaction 520: c2h5 + ch3 => c2h6 + ch2(s)
  qf[520] = sc[9] * sc[17];
  qr[520] = 0.0;

  // reaction 521: ch2(s) + o2 => co + h + oh
  qf[521] = sc[3] * sc[50];
  qr[521] = 0.0;

  // reaction 522: ch2(s) + h2 => ch3 + h
  qf[522] = sc[1] * sc[50];
  qr[522] = 0.0;

  // reaction 523: ch3 + h => ch2(s) + h2
  qf[523] = sc[0] * sc[9];
  qr[523] = 0.0;

  // reaction 524: ch2(s) + o => co + 2 h
  qf[524] = sc[2] * sc[50];
  qr[524] = 0.0;

  // reaction 525: ch2(s) + oh => ch2o + h
  qf[525] = sc[4] * sc[50];
  qr[525] = 0.0;

  // reaction 526: ch2o + h => ch2(s) + oh
  qf[526] = sc[0] * sc[13];
  qr[526] = 0.0;

  // reaction 527: ch2(s) + co2 => ch2o + co
  qf[527] = sc[8] * sc[50];
  qr[527] = 0.0;

  // reaction 528: ch2o + co => ch2(s) + co2
  qf[528] = sc[6] * sc[13];
  qr[528] = 0.0;

  // reaction 529: ch2(s) + ch3 => c2h4 + h
  qf[529] = sc[9] * sc[50];
  qr[529] = 0.0;

  // reaction 530: c2h4 + h => ch2(s) + ch3
  qf[530] = sc[0] * sc[16];
  qr[530] = 0.0;

  // reaction 531: ch2(s) + ch2co => c2h4 + co
  qf[531] = sc[20] * sc[50];
  qr[531] = 0.0;

  // reaction 532: c2h4 + co => ch2(s) + ch2co
  qf[532] = sc[6] * sc[16];
  qr[532] = 0.0;

  // reaction 533: nc7h16 => c7h15-1 + h
  qf[533] = sc[58];
  qr[533] = 0.0;

  // reaction 534: c7h15-1 + h => nc7h16
  qf[534] = sc[0] * sc[59];
  qr[534] = 0.0;

  // reaction 535: nc7h16 => c7h15-2 + h
  qf[535] = sc[58];
  qr[535] = 0.0;

  // reaction 536: c7h15-2 + h => nc7h16
  qf[536] = sc[0] * sc[60];
  qr[536] = 0.0;

  // reaction 537: nc7h16 => c7h15-3 + h
  qf[537] = sc[58];
  qr[537] = 0.0;

  // reaction 538: c7h15-3 + h => nc7h16
  qf[538] = sc[0] * sc[61];
  qr[538] = 0.0;

  // reaction 539: nc7h16 => c7h15-4 + h
  qf[539] = sc[58];
  qr[539] = 0.0;

  // reaction 540: c7h15-4 + h => nc7h16
  qf[540] = sc[0] * sc[62];
  qr[540] = 0.0;

  // reaction 541: nc7h16 => nc3h7 + pc4h9
  qf[541] = sc[58];
  qr[541] = 0.0;

  // reaction 542: nc3h7 + pc4h9 => nc7h16
  qf[542] = sc[28] * sc[31];
  qr[542] = 0.0;

  // reaction 543: h + nc7h16 => c7h15-1 + h2
  qf[543] = sc[0] * sc[58];
  qr[543] = 0.0;

  // reaction 544: c7h15-1 + h2 => h + nc7h16
  qf[544] = sc[1] * sc[59];
  qr[544] = 0.0;

  // reaction 545: h + nc7h16 => c7h15-2 + h2
  qf[545] = sc[0] * sc[58];
  qr[545] = 0.0;

  // reaction 546: c7h15-2 + h2 => h + nc7h16
  qf[546] = sc[1] * sc[60];
  qr[546] = 0.0;

  // reaction 547: h + nc7h16 => c7h15-3 + h2
  qf[547] = sc[0] * sc[58];
  qr[547] = 0.0;

  // reaction 548: c7h15-3 + h2 => h + nc7h16
  qf[548] = sc[1] * sc[61];
  qr[548] = 0.0;

  // reaction 549: h + nc7h16 => c7h15-4 + h2
  qf[549] = sc[0] * sc[58];
  qr[549] = 0.0;

  // reaction 550: c7h15-4 + h2 => h + nc7h16
  qf[550] = sc[1] * sc[62];
  qr[550] = 0.0;

  // reaction 551: nc7h16 + o => c7h15-1 + oh
  qf[551] = sc[2] * sc[58];
  qr[551] = 0.0;

  // reaction 552: c7h15-1 + oh => nc7h16 + o
  qf[552] = sc[4] * sc[59];
  qr[552] = 0.0;

  // reaction 553: nc7h16 + o => c7h15-2 + oh
  qf[553] = sc[2] * sc[58];
  qr[553] = 0.0;

  // reaction 554: c7h15-2 + oh => nc7h16 + o
  qf[554] = sc[4] * sc[60];
  qr[554] = 0.0;

  // reaction 555: nc7h16 + o => c7h15-3 + oh
  qf[555] = sc[2] * sc[58];
  qr[555] = 0.0;

  // reaction 556: c7h15-3 + oh => nc7h16 + o
  qf[556] = sc[4] * sc[61];
  qr[556] = 0.0;

  // reaction 557: nc7h16 + o => c7h15-4 + oh
  qf[557] = sc[2] * sc[58];
  qr[557] = 0.0;

  // reaction 558: c7h15-4 + oh => nc7h16 + o
  qf[558] = sc[4] * sc[62];
  qr[558] = 0.0;

  // reaction 559: nc7h16 + oh => c7h15-1 + h2o
  qf[559] = sc[4] * sc[58];
  qr[559] = 0.0;

  // reaction 560: c7h15-1 + h2o => nc7h16 + oh
  qf[560] = sc[5] * sc[59];
  qr[560] = 0.0;

  // reaction 561: nc7h16 + oh => c7h15-2 + h2o
  qf[561] = sc[4] * sc[58];
  qr[561] = 0.0;

  // reaction 562: c7h15-2 + h2o => nc7h16 + oh
  qf[562] = sc[5] * sc[60];
  qr[562] = 0.0;

  // reaction 563: nc7h16 + oh => c7h15-3 + h2o
  qf[563] = sc[4] * sc[58];
  qr[563] = 0.0;

  // reaction 564: c7h15-3 + h2o => nc7h16 + oh
  qf[564] = sc[5] * sc[61];
  qr[564] = 0.0;

  // reaction 565: nc7h16 + oh => c7h15-4 + h2o
  qf[565] = sc[4] * sc[58];
  qr[565] = 0.0;

  // reaction 566: c7h15-4 + h2o => nc7h16 + oh
  qf[566] = sc[5] * sc[62];
  qr[566] = 0.0;

  // reaction 567: ho2 + nc7h16 => c7h15-1 + h2o2
  qf[567] = sc[11] * sc[58];
  qr[567] = 0.0;

  // reaction 568: c7h15-1 + h2o2 => ho2 + nc7h16
  qf[568] = sc[12] * sc[59];
  qr[568] = 0.0;

  // reaction 569: ho2 + nc7h16 => c7h15-2 + h2o2
  qf[569] = sc[11] * sc[58];
  qr[569] = 0.0;

  // reaction 570: c7h15-2 + h2o2 => ho2 + nc7h16
  qf[570] = sc[12] * sc[60];
  qr[570] = 0.0;

  // reaction 571: ho2 + nc7h16 => c7h15-3 + h2o2
  qf[571] = sc[11] * sc[58];
  qr[571] = 0.0;

  // reaction 572: c7h15-3 + h2o2 => ho2 + nc7h16
  qf[572] = sc[12] * sc[61];
  qr[572] = 0.0;

  // reaction 573: ho2 + nc7h16 => c7h15-4 + h2o2
  qf[573] = sc[11] * sc[58];
  qr[573] = 0.0;

  // reaction 574: c7h15-4 + h2o2 => ho2 + nc7h16
  qf[574] = sc[12] * sc[62];
  qr[574] = 0.0;

  // reaction 575: ch3 + nc7h16 => c7h15-1 + ch4
  qf[575] = sc[9] * sc[58];
  qr[575] = 0.0;

  // reaction 576: c7h15-1 + ch4 => ch3 + nc7h16
  qf[576] = sc[10] * sc[59];
  qr[576] = 0.0;

  // reaction 577: ch3 + nc7h16 => c7h15-2 + ch4
  qf[577] = sc[9] * sc[58];
  qr[577] = 0.0;

  // reaction 578: c7h15-2 + ch4 => ch3 + nc7h16
  qf[578] = sc[10] * sc[60];
  qr[578] = 0.0;

  // reaction 579: ch3 + nc7h16 => c7h15-3 + ch4
  qf[579] = sc[9] * sc[58];
  qr[579] = 0.0;

  // reaction 580: c7h15-3 + ch4 => ch3 + nc7h16
  qf[580] = sc[10] * sc[61];
  qr[580] = 0.0;

  // reaction 581: ch3 + nc7h16 => c7h15-4 + ch4
  qf[581] = sc[9] * sc[58];
  qr[581] = 0.0;

  // reaction 582: c7h15-4 + ch4 => ch3 + nc7h16
  qf[582] = sc[10] * sc[62];
  qr[582] = 0.0;

  // reaction 583: nc7h16 + o2 => c7h15-1 + ho2
  qf[583] = sc[3] * sc[58];
  qr[583] = 0.0;

  // reaction 584: c7h15-1 + ho2 => nc7h16 + o2
  qf[584] = sc[11] * sc[59];
  qr[584] = 0.0;

  // reaction 585: nc7h16 + o2 => c7h15-2 + ho2
  qf[585] = sc[3] * sc[58];
  qr[585] = 0.0;

  // reaction 586: c7h15-2 + ho2 => nc7h16 + o2
  qf[586] = sc[11] * sc[60];
  qr[586] = 0.0;

  // reaction 587: nc7h16 + o2 => c7h15-3 + ho2
  qf[587] = sc[3] * sc[58];
  qr[587] = 0.0;

  // reaction 588: c7h15-3 + ho2 => nc7h16 + o2
  qf[588] = sc[11] * sc[61];
  qr[588] = 0.0;

  // reaction 589: nc7h16 + o2 => c7h15-4 + ho2
  qf[589] = sc[3] * sc[58];
  qr[589] = 0.0;

  // reaction 590: c7h15-4 + ho2 => nc7h16 + o2
  qf[590] = sc[11] * sc[62];
  qr[590] = 0.0;

  // reaction 591: c2h5 + nc7h16 => c2h6 + c7h15-1
  qf[591] = sc[17] * sc[58];
  qr[591] = 0.0;

  // reaction 592: c2h6 + c7h15-1 => c2h5 + nc7h16
  qf[592] = sc[15] * sc[59];
  qr[592] = 0.0;

  // reaction 593: c2h5 + nc7h16 => c2h6 + c7h15-2
  qf[593] = sc[17] * sc[58];
  qr[593] = 0.0;

  // reaction 594: c2h6 + c7h15-2 => c2h5 + nc7h16
  qf[594] = sc[15] * sc[60];
  qr[594] = 0.0;

  // reaction 595: c2h5 + nc7h16 => c2h6 + c7h15-3
  qf[595] = sc[17] * sc[58];
  qr[595] = 0.0;

  // reaction 596: c2h6 + c7h15-3 => c2h5 + nc7h16
  qf[596] = sc[15] * sc[61];
  qr[596] = 0.0;

  // reaction 597: c2h5 + nc7h16 => c2h6 + c7h15-4
  qf[597] = sc[17] * sc[58];
  qr[597] = 0.0;

  // reaction 598: c2h6 + c7h15-4 => c2h5 + nc7h16
  qf[598] = sc[15] * sc[62];
  qr[598] = 0.0;

  // reaction 599: c2h3 + nc7h16 => c2h4 + c7h15-1
  qf[599] = sc[19] * sc[58];
  qr[599] = 0.0;

  // reaction 600: c2h4 + c7h15-1 => c2h3 + nc7h16
  qf[600] = sc[16] * sc[59];
  qr[600] = 0.0;

  // reaction 601: c2h3 + nc7h16 => c2h4 + c7h15-2
  qf[601] = sc[19] * sc[58];
  qr[601] = 0.0;

  // reaction 602: c2h4 + c7h15-2 => c2h3 + nc7h16
  qf[602] = sc[16] * sc[60];
  qr[602] = 0.0;

  // reaction 603: c2h3 + nc7h16 => c2h4 + c7h15-3
  qf[603] = sc[19] * sc[58];
  qr[603] = 0.0;

  // reaction 604: c2h4 + c7h15-3 => c2h3 + nc7h16
  qf[604] = sc[16] * sc[61];
  qr[604] = 0.0;

  // reaction 605: c2h3 + nc7h16 => c2h4 + c7h15-4
  qf[605] = sc[19] * sc[58];
  qr[605] = 0.0;

  // reaction 606: c2h4 + c7h15-4 => c2h3 + nc7h16
  qf[606] = sc[16] * sc[62];
  qr[606] = 0.0;

  // reaction 607: ch3o2 + nc7h16 => c7h15-1 + ch3o2h
  qf[607] = sc[38] * sc[58];
  qr[607] = 0.0;

  // reaction 608: c7h15-1 + ch3o2h => ch3o2 + nc7h16
  qf[608] = sc[39] * sc[59];
  qr[608] = 0.0;

  // reaction 609: ch3o2 + nc7h16 => c7h15-2 + ch3o2h
  qf[609] = sc[38] * sc[58];
  qr[609] = 0.0;

  // reaction 610: c7h15-2 + ch3o2h => ch3o2 + nc7h16
  qf[610] = sc[39] * sc[60];
  qr[610] = 0.0;

  // reaction 611: ch3o2 + nc7h16 => c7h15-3 + ch3o2h
  qf[611] = sc[38] * sc[58];
  qr[611] = 0.0;

  // reaction 612: c7h15-3 + ch3o2h => ch3o2 + nc7h16
  qf[612] = sc[39] * sc[61];
  qr[612] = 0.0;

  // reaction 613: ch3o2 + nc7h16 => c7h15-4 + ch3o2h
  qf[613] = sc[38] * sc[58];
  qr[613] = 0.0;

  // reaction 614: c7h15-4 + ch3o2h => ch3o2 + nc7h16
  qf[614] = sc[39] * sc[62];
  qr[614] = 0.0;

  // reaction 615: c7h15-1 + nc7h16 => c7h15-2 + nc7h16
  qf[615] = sc[58] * sc[59];
  qr[615] = 0.0;

  // reaction 616: c7h15-2 + nc7h16 => c7h15-1 + nc7h16
  qf[616] = sc[58] * sc[60];
  qr[616] = 0.0;

  // reaction 617: c7h15-1 + nc7h16 => c7h15-3 + nc7h16
  qf[617] = sc[58] * sc[59];
  qr[617] = 0.0;

  // reaction 618: c7h15-3 + nc7h16 => c7h15-1 + nc7h16
  qf[618] = sc[58] * sc[61];
  qr[618] = 0.0;

  // reaction 619: c7h15-1 + nc7h16 => c7h15-4 + nc7h16
  qf[619] = sc[58] * sc[59];
  qr[619] = 0.0;

  // reaction 620: c7h15-4 + nc7h16 => c7h15-1 + nc7h16
  qf[620] = sc[58] * sc[62];
  qr[620] = 0.0;

  // reaction 621: c7h15-2 + nc7h16 => c7h15-3 + nc7h16
  qf[621] = sc[58] * sc[60];
  qr[621] = 0.0;

  // reaction 622: c7h15-3 + nc7h16 => c7h15-2 + nc7h16
  qf[622] = sc[58] * sc[61];
  qr[622] = 0.0;

  // reaction 623: c7h15-2 + nc7h16 => c7h15-4 + nc7h16
  qf[623] = sc[58] * sc[60];
  qr[623] = 0.0;

  // reaction 624: c7h15-4 + nc7h16 => c7h15-2 + nc7h16
  qf[624] = sc[58] * sc[62];
  qr[624] = 0.0;

  // reaction 625: c7h15-3 + nc7h16 => c7h15-4 + nc7h16
  qf[625] = sc[58] * sc[61];
  qr[625] = 0.0;

  // reaction 626: c7h15-4 + nc7h16 => c7h15-3 + nc7h16
  qf[626] = sc[58] * sc[62];
  qr[626] = 0.0;

  // reaction 627: c7h15-2 => c3h6 + pc4h9
  qf[627] = sc[60];
  qr[627] = 0.0;

  // reaction 628: c3h6 + pc4h9 => c7h15-2
  qf[628] = sc[26] * sc[31];
  qr[628] = 0.0;

  // reaction 629: c7h15-2 => c7h14-2 + h
  qf[629] = sc[60];
  qr[629] = 0.0;

  // reaction 630: c7h14-2 + h => c7h15-2
  qf[630] = sc[0] * sc[63];
  qr[630] = 0.0;

  // reaction 631: c7h15-3 => c4h8-1 + nc3h7
  qf[631] = sc[61];
  qr[631] = 0.0;

  // reaction 632: c4h8-1 + nc3h7 => c7h15-3
  qf[632] = sc[28] * sc[30];
  qr[632] = 0.0;

  // reaction 633: c7h15-3 => c7h14-2 + h
  qf[633] = sc[61];
  qr[633] = 0.0;

  // reaction 634: c7h14-2 + h => c7h15-3
  qf[634] = sc[0] * sc[63];
  qr[634] = 0.0;

  // reaction 635: c7h15-3 => c7h14-3 + h
  qf[635] = sc[61];
  qr[635] = 0.0;

  // reaction 636: c7h14-3 + h => c7h15-3
  qf[636] = sc[0] * sc[64];
  qr[636] = 0.0;

  // reaction 637: c7h15-4 => c2h5 + c5h10-1
  qf[637] = sc[62];
  qr[637] = 0.0;

  // reaction 638: c2h5 + c5h10-1 => c7h15-4
  qf[638] = sc[17] * sc[36];
  qr[638] = 0.0;

  // reaction 639: c7h15-4 => c7h14-3 + h
  qf[639] = sc[62];
  qr[639] = 0.0;

  // reaction 640: c7h14-3 + h => c7h15-4
  qf[640] = sc[0] * sc[64];
  qr[640] = 0.0;

  // reaction 641: c7h15-2 + o2 => c7h14-2 + ho2
  qf[641] = sc[3] * sc[60];
  qr[641] = 0.0;

  // reaction 642: c7h14-2 + ho2 => c7h15-2 + o2
  qf[642] = sc[11] * sc[63];
  qr[642] = 0.0;

  // reaction 643: c7h15-3 + o2 => c7h14-2 + ho2
  qf[643] = sc[3] * sc[61];
  qr[643] = 0.0;

  // reaction 644: c7h14-2 + ho2 => c7h15-3 + o2
  qf[644] = sc[11] * sc[63];
  qr[644] = 0.0;

  // reaction 645: c7h15-3 + o2 => c7h14-3 + ho2
  qf[645] = sc[3] * sc[61];
  qr[645] = 0.0;

  // reaction 646: c7h14-3 + ho2 => c7h15-3 + o2
  qf[646] = sc[11] * sc[64];
  qr[646] = 0.0;

  // reaction 647: c7h15-4 + o2 => c7h14-3 + ho2
  qf[647] = sc[3] * sc[62];
  qr[647] = 0.0;

  // reaction 648: c7h14-3 + ho2 => c7h15-4 + o2
  qf[648] = sc[11] * sc[64];
  qr[648] = 0.0;

  // reaction 649: c7h15-1 => c7h15-3
  qf[649] = sc[59];
  qr[649] = 0.0;

  // reaction 650: c7h15-3 => c7h15-1
  qf[650] = sc[61];
  qr[650] = 0.0;

  // reaction 651: c7h15-1 => c7h15-4
  qf[651] = sc[59];
  qr[651] = 0.0;

  // reaction 652: c7h15-4 => c7h15-1
  qf[652] = sc[62];
  qr[652] = 0.0;

  // reaction 653: c7h15-2 => c7h15-3
  qf[653] = sc[60];
  qr[653] = 0.0;

  // reaction 654: c7h15-3 => c7h15-2
  qf[654] = sc[61];
  qr[654] = 0.0;

  // reaction 655: c7h15-1 => c7h15-2
  qf[655] = sc[59];
  qr[655] = 0.0;

  // reaction 656: c7h15-2 => c7h15-1
  qf[656] = sc[60];
  qr[656] = 0.0;

  // reaction 657: c7h14-2 + oh => c2h5cho + pc4h9
  qf[657] = sc[4] * sc[63];
  qr[657] = 0.0;

  // reaction 658: c7h14-3 + oh => c2h5cho + pc4h9
  qf[658] = sc[4] * sc[64];
  qr[658] = 0.0;

  // reaction 659: c7h14-2 + o => c5h10-1 + ch3cho
  qf[659] = sc[2] * sc[63];
  qr[659] = 0.0;

  // reaction 660: c7h14-3 + o => c5h10-1 + ch3cho
  qf[660] = sc[2] * sc[64];
  qr[660] = 0.0;

  // reaction 661: c7h14-2 => c4h7 + nc3h7
  qf[661] = sc[63];
  qr[661] = 0.0;

  // reaction 662: c4h7 + nc3h7 => c7h14-2
  qf[662] = sc[28] * sc[29];
  qr[662] = 0.0;

  // reaction 663: c7h14-3 => c4h7 + nc3h7
  qf[663] = sc[64];
  qr[663] = 0.0;

  // reaction 664: c4h7 + nc3h7 => c7h14-3
  qf[664] = sc[28] * sc[29];
  qr[664] = 0.0;

  // reaction 665: c7h15o2-1 => c7h15-1 + o2
  qf[665] = sc[65];
  qr[665] = 0.0;

  // reaction 666: c7h15-1 + o2 => c7h15o2-1
  qf[666] = sc[3] * sc[59];
  qr[666] = 0.0;

  // reaction 667: c7h15o2-2 => c7h15-2 + o2
  qf[667] = sc[66];
  qr[667] = 0.0;

  // reaction 668: c7h15-2 + o2 => c7h15o2-2
  qf[668] = sc[3] * sc[60];
  qr[668] = 0.0;

  // reaction 669: c7h15o2-3 => c7h15-3 + o2
  qf[669] = sc[67];
  qr[669] = 0.0;

  // reaction 670: c7h15-3 + o2 => c7h15o2-3
  qf[670] = sc[3] * sc[61];
  qr[670] = 0.0;

  // reaction 671: c7h15o2-4 => c7h15-4 + o2
  qf[671] = sc[68];
  qr[671] = 0.0;

  // reaction 672: c7h15-4 + o2 => c7h15o2-4
  qf[672] = sc[3] * sc[62];
  qr[672] = 0.0;

  // reaction 673: c7h15o2-1 => c7h14ooh1-3
  qf[673] = sc[65];
  qr[673] = 0.0;

  // reaction 674: c7h14ooh1-3 => c7h15o2-1
  qf[674] = sc[69];
  qr[674] = 0.0;

  // reaction 675: c7h15o2-2 => c7h14ooh2-3
  qf[675] = sc[66];
  qr[675] = 0.0;

  // reaction 676: c7h14ooh2-3 => c7h15o2-2
  qf[676] = sc[70];
  qr[676] = 0.0;

  // reaction 677: c7h15o2-2 => c7h14ooh2-4
  qf[677] = sc[66];
  qr[677] = 0.0;

  // reaction 678: c7h14ooh2-4 => c7h15o2-2
  qf[678] = sc[71];
  qr[678] = 0.0;

  // reaction 679: c7h15o2-3 => c7h14ooh3-2
  qf[679] = sc[67];
  qr[679] = 0.0;

  // reaction 680: c7h14ooh3-2 => c7h15o2-3
  qf[680] = sc[72];
  qr[680] = 0.0;

  // reaction 681: c7h15o2-3 => c7h14ooh3-4
  qf[681] = sc[67];
  qr[681] = 0.0;

  // reaction 682: c7h14ooh3-4 => c7h15o2-3
  qf[682] = sc[73];
  qr[682] = 0.0;

  // reaction 683: c7h15o2-3 => c7h14ooh3-5
  qf[683] = sc[67];
  qr[683] = 0.0;

  // reaction 684: c7h14ooh3-5 => c7h15o2-3
  qf[684] = sc[74];
  qr[684] = 0.0;

  // reaction 685: c7h15o2-4 => c7h14ooh4-2
  qf[685] = sc[68];
  qr[685] = 0.0;

  // reaction 686: c7h14ooh4-2 => c7h15o2-4
  qf[686] = sc[75];
  qr[686] = 0.0;

  // reaction 687: c7h15o2-4 => c7h14ooh4-3
  qf[687] = sc[68];
  qr[687] = 0.0;

  // reaction 688: c7h14ooh4-3 => c7h15o2-4
  qf[688] = sc[76];
  qr[688] = 0.0;

  // reaction 689: c7h14ooh2-3 => c7h14-2 + ho2
  qf[689] = sc[70];
  qr[689] = 0.0;

  // reaction 690: c7h14-2 + ho2 => c7h14ooh2-3
  qf[690] = sc[11] * sc[63];
  qr[690] = 0.0;

  // reaction 691: c7h14ooh3-2 => c7h14-2 + ho2
  qf[691] = sc[72];
  qr[691] = 0.0;

  // reaction 692: c7h14-2 + ho2 => c7h14ooh3-2
  qf[692] = sc[11] * sc[63];
  qr[692] = 0.0;

  // reaction 693: c7h14ooh3-4 => c7h14-3 + ho2
  qf[693] = sc[73];
  qr[693] = 0.0;

  // reaction 694: c7h14-3 + ho2 => c7h14ooh3-4
  qf[694] = sc[11] * sc[64];
  qr[694] = 0.0;

  // reaction 695: c7h14ooh4-3 => c7h14-3 + ho2
  qf[695] = sc[76];
  qr[695] = 0.0;

  // reaction 696: c7h14-3 + ho2 => c7h14ooh4-3
  qf[696] = sc[11] * sc[64];
  qr[696] = 0.0;

  // reaction 697: c7h14ooh1-3 => c7h14o1-3 + oh
  qf[697] = sc[69];
  qr[697] = 0.0;

  // reaction 698: c7h14ooh2-4 => c7h14o2-4 + oh
  qf[698] = sc[71];
  qr[698] = 0.0;

  // reaction 699: c7h14ooh4-2 => c7h14o2-4 + oh
  qf[699] = sc[75];
  qr[699] = 0.0;

  // reaction 700: c7h14ooh2-4 => c5h10-1 + ch3cho + oh
  qf[700] = sc[71];
  qr[700] = 0.0;

  // reaction 701: c7h14ooh3-5 => c2h5cho + c4h8-1 + oh
  qf[701] = sc[74];
  qr[701] = 0.0;

  // reaction 702: c7h14ooh4-2 => c3h6 + nc3h7cho + oh
  qf[702] = sc[75];
  qr[702] = 0.0;

  // reaction 703: c7h14ooh1-3o2 => c7h14ooh1-3 + o2
  qf[703] = sc[77];
  qr[703] = 0.0;

  // reaction 704: c7h14ooh1-3 + o2 => c7h14ooh1-3o2
  qf[704] = sc[3] * sc[69];
  qr[704] = 0.0;

  // reaction 705: c7h14ooh2-4o2 => c7h14ooh2-4 + o2
  qf[705] = sc[78];
  qr[705] = 0.0;

  // reaction 706: c7h14ooh2-4 + o2 => c7h14ooh2-4o2
  qf[706] = sc[3] * sc[71];
  qr[706] = 0.0;

  // reaction 707: c7h14ooh3-5o2 => c7h14ooh3-5 + o2
  qf[707] = sc[79];
  qr[707] = 0.0;

  // reaction 708: c7h14ooh3-5 + o2 => c7h14ooh3-5o2
  qf[708] = sc[3] * sc[74];
  qr[708] = 0.0;

  // reaction 709: c7h14ooh4-2o2 => c7h14ooh4-2 + o2
  qf[709] = sc[80];
  qr[709] = 0.0;

  // reaction 710: c7h14ooh4-2 + o2 => c7h14ooh4-2o2
  qf[710] = sc[3] * sc[75];
  qr[710] = 0.0;

  // reaction 711: c7h14ooh1-3o2 => nc7ket13 + oh
  qf[711] = sc[77];
  qr[711] = 0.0;

  // reaction 712: nc7ket13 + oh => c7h14ooh1-3o2
  qf[712] = sc[4] * sc[83];
  qr[712] = 0.0;

  // reaction 713: c7h14ooh2-4o2 => nc7ket24 + oh
  qf[713] = sc[78];
  qr[713] = 0.0;

  // reaction 714: nc7ket24 + oh => c7h14ooh2-4o2
  qf[714] = sc[4] * sc[84];
  qr[714] = 0.0;

  // reaction 715: c7h14ooh3-5o2 => nc7ket35 + oh
  qf[715] = sc[79];
  qr[715] = 0.0;

  // reaction 716: nc7ket35 + oh => c7h14ooh3-5o2
  qf[716] = sc[4] * sc[85];
  qr[716] = 0.0;

  // reaction 717: c7h14ooh4-2o2 => nc7ket42 + oh
  qf[717] = sc[80];
  qr[717] = 0.0;

  // reaction 718: nc7ket42 + oh => c7h14ooh4-2o2
  qf[718] = sc[4] * sc[86];
  qr[718] = 0.0;

  // reaction 719: nc7ket13 => ch2cho + nc4h9cho + oh
  qf[719] = sc[83];
  qr[719] = 0.0;

  // reaction 720: nc7ket24 => ch3coch2 + nc3h7cho + oh
  qf[720] = sc[84];
  qr[720] = 0.0;

  // reaction 721: nc7ket35 => c2h5cho + c2h5coch2 + oh
  qf[721] = sc[85];
  qr[721] = 0.0;

  // reaction 722: nc7ket42 => ch3cho + nc3h7coch2 + oh
  qf[722] = sc[86];
  qr[722] = 0.0;

  // reaction 723: c7h14o2-4 + oh => c5h10-1 + ch3co + h2o
  qf[723] = sc[4] * sc[82];
  qr[723] = 0.0;

  // reaction 724: c7h14o1-3 + oh => c2h4 + h2o + nc4h9co
  qf[724] = sc[4] * sc[81];
  qr[724] = 0.0;

  // reaction 725: c7h14o2-4 + oh => c3h6 + h2o + nc3h7co
  qf[725] = sc[4] * sc[82];
  qr[725] = 0.0;

  // reaction 726: c7h14o2-4 + ho2 => c5h10-1 + ch3co + h2o2
  qf[726] = sc[11] * sc[82];
  qr[726] = 0.0;

  // reaction 727: c7h14o1-3 + ho2 => c2h4 + h2o2 + nc4h9co
  qf[727] = sc[11] * sc[81];
  qr[727] = 0.0;

  // reaction 728: c7h14o2-4 + ho2 => c3h6 + h2o2 + nc3h7co
  qf[728] = sc[11] * sc[82];
  qr[728] = 0.0;

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int i = 0; i < 88; ++i) {
    mixture += sc[i];
  }

  // compute the Gibbs free energy
  amrex::Real g_RT[88];
  gibbs(g_RT, T);

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  amrex::Real refC = 101325 / 8.31446 * invT;
  amrex::Real refCinv = 1 / refC;

  // Evaluate the kfs
  amrex::Real k_f, Corr;
  amrex::Real redP, F, logPred, logFcent, troe_c, troe_n, troe, F_troe;

  // reaction 0:  ch3 + h (+M) <=> ch4 (+M)
  k_f = 2138000000 * exp((-0.4) * logT);
  Corr = mixture + sc[1] + (4) * sc[5] + sc[6] + (2) * sc[8];
  redP = Corr / k_f * 3.31e+18 * exp(-4 * logT - (1060.78073151635) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent =
    log10((1) * exp(-T * 1e+15) + 0 * exp(-T * 1e+15) + exp(-40 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[0] *= Corr * k_f;
  qr[0] *= Corr * k_f * exp(-(g_RT[0] + g_RT[9] - g_RT[10])) * (refC);
  // reaction 1:  ch4 + h => ch3 + h2
  k_f = 0.01727 * exp((3) * logT - (4138.45385957801) * invT);
  qf[33] *= k_f;
  qr[33] *= k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[9] + g_RT[10]));
  // reaction 2:  ch3 + h2 => ch4 + h
  k_f = 0.000661 * exp((3) * logT - (3896.90985999175) * invT);
  qf[34] *= k_f;
  qr[34] *= k_f * exp(-(-g_RT[0] + g_RT[1] + g_RT[9] - g_RT[10]));
  // reaction 3:  ch4 + oh => ch3 + h2o
  k_f = 0.193 * exp((2.4) * logT - (1059.77429818474) * invT);
  qf[35] *= k_f;
  qr[35] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[9] + g_RT[10]));
  // reaction 4:  ch3 + h2o => ch4 + oh
  k_f = 0.03199 * exp((2.4) * logT - (8443.9756522032) * invT);
  qf[36] *= k_f;
  qr[36] *= k_f * exp(-(-g_RT[4] + g_RT[5] + g_RT[9] - g_RT[10]));
  // reaction 5:  ch4 + o => ch3 + oh
  k_f = 3150000 * exp((0.5) * logT - (5178.09949113057) * invT);
  qf[37] *= k_f;
  qr[37] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[9] + g_RT[10]));
  // reaction 6:  ch3 + oh => ch4 + o
  k_f = 52960 * exp((0.5) * logT - (3882.31657668341) * invT);
  qf[38] *= k_f;
  qr[38] *= k_f * exp(-(-g_RT[2] + g_RT[4] + g_RT[9] - g_RT[10]));
  // reaction 7:  c2h6 + ch3 => c2h5 + ch4
  k_f = 1.51e-13 * exp((6) * logT - (3042.95117812114) * invT);
  qf[39] *= k_f;
  qr[39] *= k_f * exp(-(g_RT[9] - g_RT[10] + g_RT[15] - g_RT[17]));
  // reaction 8:  c2h5 + ch4 => c2h6 + ch3
  k_f = 9.649e-16 * exp((6.56) * logT - (5142.87432452423) * invT);
  qf[40] *= k_f;
  qr[40] *= k_f * exp(-(-g_RT[9] + g_RT[10] - g_RT[15] + g_RT[17]));
  // reaction 9:  hco + oh => co + h2o
  k_f = 102000000;
  qf[41] *= k_f;
  qr[41] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[6] + g_RT[7]));
  // reaction 10:  co + h2o => hco + oh
  k_f = 2896000000 * exp(-(52938.3932426565) * invT);
  qf[42] *= k_f;
  qr[42] *= k_f * exp(-(-g_RT[4] + g_RT[5] + g_RT[6] - g_RT[7]));
  // reaction 11:  co + oh => co2 + h
  k_f = 0.14 * exp((1.95) * logT - (-677.832848838957) * invT);
  qf[43] *= k_f;
  qr[43] *= k_f * exp(-(-g_RT[0] + g_RT[4] + g_RT[6] - g_RT[8]));
  // reaction 12:  co2 + h => co + oh
  k_f = 15.68 * exp((1.95) * logT - (10562.5178152411) * invT);
  qf[44] *= k_f;
  qr[44] *= k_f * exp(-(g_RT[0] - g_RT[4] - g_RT[6] + g_RT[8]));
  // reaction 13:  h + o2 => o + oh
  k_f = 197000000 * exp(-(8323.20365241006) * invT);
  qf[45] *= k_f;
  qr[45] *= k_f * exp(-(g_RT[0] - g_RT[2] + g_RT[3] - g_RT[4]));
  // reaction 14:  o + oh => h + o2
  k_f = 15550000 * exp(-(213.867082967006) * invT);
  qf[46] *= k_f;
  qr[46] *= k_f * exp(-(-g_RT[0] + g_RT[2] - g_RT[3] + g_RT[4]));
  // reaction 15:  h2 + o => h + oh
  k_f = 0.0508 * exp((2.67) * logT - (3166.2392612433) * invT);
  qf[47] *= k_f;
  qr[47] *= k_f * exp(-(-g_RT[0] + g_RT[1] + g_RT[2] - g_RT[4]));
  // reaction 16:  h + oh => h2 + o
  k_f = 0.02231 * exp((2.67) * logT - (2112.00034638241) * invT);
  qf[48] *= k_f;
  qr[48] *= k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[2] + g_RT[4]));
  // reaction 17:  h2o + o => 2 oh
  k_f = 2.97 * exp((2.02) * logT - (6743.10332178324) * invT);
  qf[49] *= k_f;
  qr[49] *= k_f * exp(-(g_RT[2] - 2.000000 * g_RT[4] + g_RT[5]));
  // reaction 18:  2 oh => h2o + o
  k_f = 0.3013 * exp((2.02) * logT - (-1937.38416334817) * invT);
  qf[50] *= k_f;
  qr[50] *= k_f * exp(-(-g_RT[2] + 2.000000 * g_RT[4] - g_RT[5]));
  // reaction 19:  h2 + oh => h + h2o
  k_f = 216 * exp((1.51) * logT - (1726.03316371019) * invT);
  qf[51] *= k_f;
  qr[51] *= k_f * exp(-(-g_RT[0] + g_RT[1] + g_RT[4] - g_RT[5]));
  // reaction 20:  h + h2o => h2 + oh
  k_f = 935.2 * exp((1.51) * logT - (9349.76565065169) * invT);
  qf[52] *= k_f;
  qr[52] *= k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[4] + g_RT[5]));
  // reaction 21:  hco + M => co + h + M
  k_f = 186000000000 * exp((-1) * logT - (8554.68331868023) * invT);
  Corr = mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[8];
  qf[11] *= Corr * k_f;
  qr[11] *= Corr * k_f * exp(-(-g_RT[0] - g_RT[6] + g_RT[7])) * (refCinv);
  // reaction 22:  co + h + M => hco + M
  k_f = 64.67 * exp(-(-222.421766285686) * invT);
  Corr = mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[8];
  qf[12] *= Corr * k_f;
  qr[12] *= Corr * k_f * exp(-(g_RT[0] + g_RT[6] - g_RT[7])) * (refC);
  // reaction 23:  h2o2 + oh => h2o + ho2
  k_f = 1000000;
  qf[53] *= k_f;
  qr[53] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[11] + g_RT[12]));
  // reaction 24:  h2o + ho2 => h2o2 + oh
  k_f = 168500 * exp((0.33) * logT - (15831.1963062165) * invT);
  qf[54] *= k_f;
  qr[54] *= k_f * exp(-(-g_RT[4] + g_RT[5] + g_RT[11] - g_RT[12]));
  // reaction 25:  c2h4 + o => ch3 + hco
  k_f = 10.2 * exp((1.88) * logT - (90.0757831790448) * invT);
  qf[55] *= k_f;
  qr[55] *= k_f * exp(-(g_RT[2] - g_RT[7] - g_RT[9] + g_RT[16]));
  // reaction 26:  ch3 + hco => c2h4 + o
  k_f = 285.1 * exp((1.05) * logT - (15987.1934726159) * invT);
  qf[56] *= k_f;
  qr[56] *= k_f * exp(-(-g_RT[2] + g_RT[7] + g_RT[9] - g_RT[16]));
  // reaction 27:  c2h4 + h (+M) <=> c2h5 (+M)
  k_f = 1081000 * exp((0.45) * logT - (916.860765096199) * invT);
  Corr = mixture + sc[1] + (4) * sc[5] + sc[6] + (2) * sc[8];
  redP = Corr / k_f * 1.112e+22 * exp(-5 * logT - (2238.30772949939) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(+exp(-T * 0.0105263157894737) + exp(-200 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[1] *= Corr * k_f;
  qr[1] *= Corr * k_f * exp(-(g_RT[0] + g_RT[16] - g_RT[17])) * (refC);
  // reaction 28:  c2h6 + h => c2h5 + h2
  k_f = 0.000554 * exp((3.5) * logT - (2600.12051221299) * invT);
  qf[57] *= k_f;
  qr[57] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[15] - g_RT[17]));
  // reaction 29:  c2h5 + h2 => c2h6 + h
  k_f = 1.355e-07 * exp((4.06) * logT - (4456.9900090324) * invT);
  qf[58] *= k_f;
  qr[58] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[15] + g_RT[17]));
  // reaction 30:  c2h5 + o2 => c2h4 + ho2
  k_f = 1.22e+24 * exp((-5.76) * logT - (5082.48832462767) * invT);
  qf[59] *= k_f;
  qr[59] *= k_f * exp(-(g_RT[3] - g_RT[11] - g_RT[16] + g_RT[17]));
  // reaction 31:  c2h4 + ho2 => c2h5 + o2
  k_f = 1.259e+24 * exp((-5.63) * logT - (11221.7316474452) * invT);
  qf[60] *= k_f;
  qr[60] *= k_f * exp(-(-g_RT[3] + g_RT[11] + g_RT[16] - g_RT[17]));
  // reaction 32:  c2h6 + oh => c2h5 + h2o
  k_f = 58 * exp((1.73) * logT - (583.731332333475) * invT);
  qf[61] *= k_f;
  qr[61] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[15] - g_RT[17]));
  // reaction 33:  c2h5 + h2o => c2h6 + oh
  k_f = 0.06142 * exp((2.29) * logT - (10064.3333160944) * invT);
  qf[62] *= k_f;
  qr[62] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[15] + g_RT[17]));
  // reaction 34:  c2h6 + o => c2h5 + oh
  k_f = 13 * exp((2.13) * logT - (2611.6944955265) * invT);
  qf[63] *= k_f;
  qr[63] *= k_f * exp(-(g_RT[2] - g_RT[4] + g_RT[15] - g_RT[17]));
  // reaction 35:  c2h5 + oh => c2h6 + o
  k_f = 0.001397 * exp((2.69) * logT - (3414.32507748502) * invT);
  qf[64] *= k_f;
  qr[64] *= k_f * exp(-(-g_RT[2] + g_RT[4] - g_RT[15] + g_RT[17]));
  // reaction 36:  ch3 + ho2 => ch3o + oh
  k_f = 11000000;
  qf[65] *= k_f;
  qr[65] *= k_f * exp(-(-g_RT[4] + g_RT[9] + g_RT[11] - g_RT[14]));
  // reaction 37:  ch3o + oh => ch3 + ho2
  k_f = 478000000 * exp((-0.35) * logT - (12353.9691455059) * invT);
  qf[66] *= k_f;
  qr[66] *= k_f * exp(-(g_RT[4] - g_RT[9] - g_RT[11] + g_RT[14]));
  // reaction 38:  co + ho2 => co2 + oh
  k_f = 30100000 * exp(-(11573.9833135086) * invT);
  qf[67] *= k_f;
  qr[67] *= k_f * exp(-(-g_RT[4] + g_RT[6] - g_RT[8] + g_RT[11]));
  // reaction 39:  co2 + oh => co + ho2
  k_f = 6435000000 * exp((-0.33) * logT - (42577.1620937373) * invT);
  qf[68] *= k_f;
  qr[68] *= k_f * exp(-(g_RT[4] - g_RT[6] + g_RT[8] - g_RT[11]));
  // reaction 40:  2 ch3 (+M) <=> c2h6 (+M)
  k_f = 92140000000 * exp((-1.17) * logT - (319.945156118641) * invT);
  Corr = mixture + sc[1] + (4) * sc[5] + sc[6] + (2) * sc[8];
  redP =
    Corr / k_f * 1.135e+24 * exp(-5.246 * logT - (857.984415197047) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.595) * exp(-T * 0.000892857142857143) +
    0.405 * exp(-T * 0.014367816091954) + exp(-1e+15 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[2] *= Corr * k_f;
  qr[2] *= Corr * k_f * exp(-(2.000000 * g_RT[9] - g_RT[15])) * (refC);
  // reaction 41:  h2o + M => h + oh + M
  k_f = 1.837e+21 * exp((-3) * logT - (61694.3632276586) * invT);
  Corr = mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[8];
  qf[13] *= Corr * k_f;
  qr[13] *= Corr * k_f * exp(-(-g_RT[0] - g_RT[4] + g_RT[5])) * (refCinv);
  // reaction 42:  h + oh + M => h2o + M
  k_f = 22500000000 * exp((-2) * logT);
  Corr = mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[8];
  qf[14] *= Corr * k_f;
  qr[14] *= Corr * k_f * exp(-(g_RT[0] + g_RT[4] - g_RT[5])) * (refC);
  // reaction 43:  h + o2 (+M) <=> ho2 (+M)
  k_f = 1475000 * exp((0.6) * logT);
  Corr = mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[8];
  redP = Corr / k_f * 35000 * exp(-0.41 * logT - (-561.589799038067) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.5) * exp(-T * 1e+30) + 0.5 * exp(-T * 1e-30) + exp(-1e+100 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[3] *= Corr * k_f;
  qr[3] *= Corr * k_f * exp(-(g_RT[0] + g_RT[3] - g_RT[11])) * (refC);
  // reaction 44:  co + o (+M) <=> co2 (+M)
  k_f = 18000 * exp(-(1199.66853127845) * invT);
  Corr = mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[8];
  redP =
    Corr / k_f * 1350000000000 * exp(-2.788 * logT - (2108.98104638758) * invT);
  Corr = redP / (1. + redP);
  qf[7] *= Corr * k_f;
  qr[7] *= Corr * k_f * exp(-(g_RT[2] + g_RT[6] - g_RT[8])) * (refC);
  // reaction 45:  co + o2 => co2 + o
  k_f = 16200000 * exp(-(24003.4349588851) * invT);
  qf[69] *= k_f;
  qr[69] *= k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[6] - g_RT[8]));
  // reaction 46:  co2 + o => co + o2
  k_f = 143300000 * exp(-(27133.4426201905) * invT);
  qf[70] *= k_f;
  qr[70] *= k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[6] + g_RT[8]));
  // reaction 47:  h + hco => co + h2
  k_f = 73400000;
  qf[71] *= k_f;
  qr[71] *= k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[6] + g_RT[7]));
  // reaction 48:  co + h2 => h + hco
  k_f = 481300000 * exp(-(45289.4999224248) * invT);
  qf[72] *= k_f;
  qr[72] *= k_f * exp(-(-g_RT[0] + g_RT[1] + g_RT[6] - g_RT[7]));
  // reaction 49:  hco + o => co + oh
  k_f = 30200000;
  qf[73] *= k_f;
  qr[73] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[6] + g_RT[7]));
  // reaction 50:  co + oh => hco + o
  k_f = 86970000 * exp(-(44232.7449242349) * invT);
  qf[74] *= k_f;
  qr[74] *= k_f * exp(-(-g_RT[2] + g_RT[4] + g_RT[6] - g_RT[7]));
  // reaction 51:  ch2o + M => h + hco + M
  k_f = 6.283e+23 * exp((-3.57) * logT - (46899.7932529999) * invT);
  Corr = mixture;
  qf[15] *= Corr * k_f;
  qr[15] *= Corr * k_f * exp(-(-g_RT[0] - g_RT[7] + g_RT[13])) * (refCinv);
  // reaction 52:  h + hco + M => ch2o + M
  k_f = 2660000000000 * exp((-2.57) * logT - (214.873516298615) * invT);
  Corr = mixture;
  qf[16] *= Corr * k_f;
  qr[16] *= Corr * k_f * exp(-(g_RT[0] + g_RT[7] - g_RT[13])) * (refC);
  // reaction 53:  ch2o + oh => h2o + hco
  k_f = 3430 * exp((1.18) * logT - (-224.93784961471) * invT);
  qf[75] *= k_f;
  qr[75] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[7] + g_RT[13]));
  // reaction 54:  h2o + hco => ch2o + oh
  k_f = 1186 * exp((1.18) * logT - (14784.5056413427) * invT);
  qf[76] *= k_f;
  qr[76] *= k_f * exp(-(-g_RT[4] + g_RT[5] + g_RT[7] - g_RT[13]));
  // reaction 55:  ch2o + h => h2 + hco
  k_f = 933.4 * exp((1.5) * logT - (1497.57279743485) * invT);
  qf[77] *= k_f;
  qr[77] *= k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[7] + g_RT[13]));
  // reaction 56:  h2 + hco => ch2o + h
  k_f = 74.53 * exp((1.5) * logT - (8881.7741514533) * invT);
  qf[78] *= k_f;
  qr[78] *= k_f * exp(-(-g_RT[0] + g_RT[1] + g_RT[7] - g_RT[13]));
  // reaction 57:  ch2o + o => hco + oh
  k_f = 416000 * exp((0.57) * logT - (1389.88443095264) * invT);
  qf[79] *= k_f;
  qr[79] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[7] + g_RT[13]));
  // reaction 58:  hco + oh => ch2o + o
  k_f = 14590 * exp((0.57) * logT - (7719.3436534444) * invT);
  qf[80] *= k_f;
  qr[80] *= k_f * exp(-(-g_RT[2] + g_RT[4] + g_RT[7] - g_RT[13]));
  // reaction 59:  ch3 + oh => ch2o + h2
  k_f = 22500000 * exp(-(2163.83166296029) * invT);
  qf[81] *= k_f;
  qr[81] *= k_f * exp(-(-g_RT[1] + g_RT[4] + g_RT[9] - g_RT[13]));
  // reaction 60:  ch2o + h2 => ch3 + oh
  k_f = 675600000 * exp(-(38254.5309344748) * invT);
  qf[82] *= k_f;
  qr[82] *= k_f * exp(-(g_RT[1] - g_RT[4] - g_RT[9] + g_RT[13]));
  // reaction 61:  ch3 + o => ch2o + h
  k_f = 80000000;
  qf[83] *= k_f;
  qr[83] *= k_f * exp(-(-g_RT[0] + g_RT[2] + g_RT[9] - g_RT[13]));
  // reaction 62:  ch2o + h => ch3 + o
  k_f = 1055000000 * exp(-(35038.9764399826) * invT);
  qf[84] *= k_f;
  qr[84] *= k_f * exp(-(g_RT[0] - g_RT[2] - g_RT[9] + g_RT[13]));
  // reaction 63:  ch3 + o2 => ch3o + o
  k_f = 1995000000000 * exp((-1.57) * logT - (14698.9588081559) * invT);
  qf[85] *= k_f;
  qr[85] *= k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[9] - g_RT[14]));
  // reaction 64:  ch3o + o => ch3 + o2
  k_f = 3585000000000 * exp((-1.59) * logT - (-820.746381927498) * invT);
  qf[86] *= k_f;
  qr[86] *= k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[9] + g_RT[14]));
  // reaction 65:  ch2o + ch3 => ch4 + hco
  k_f = 3.636e-12 * exp((5.42) * logT - (502.21023247311) * invT);
  qf[87] *= k_f;
  qr[87] *= k_f * exp(-(-g_RT[7] + g_RT[9] - g_RT[10] + g_RT[13]));
  // reaction 66:  ch4 + hco => ch2o + ch3
  k_f = 7.584e-12 * exp((5.42) * logT - (8126.94915274622) * invT);
  qf[88] *= k_f;
  qr[88] *= k_f * exp(-(g_RT[7] - g_RT[9] + g_RT[10] - g_RT[13]));
  // reaction 67:  ch3 + hco => ch4 + co
  k_f = 121000000;
  qf[89] *= k_f;
  qr[89] *= k_f * exp(-(-g_RT[6] + g_RT[7] + g_RT[9] - g_RT[10]));
  // reaction 68:  ch4 + co => ch3 + hco
  k_f = 20730000000 * exp(-(45531.043922011) * invT);
  qf[90] *= k_f;
  qr[90] *= k_f * exp(-(g_RT[6] - g_RT[7] - g_RT[9] + g_RT[10]));
  // reaction 69:  ch3o (+M) <=> ch2o + h (+M)
  k_f = 54500000000000 * exp(-(6793.42498836372) * invT);
  Corr = mixture;
  redP = Corr / k_f * 2.344e+19 * exp(-2.7 * logT - (15398.4299736244) * invT);
  Corr = redP / (1. + redP);
  qf[8] *= Corr * k_f;
  qr[8] *= Corr * k_f * exp(-(-g_RT[0] - g_RT[13] + g_RT[14])) * (refCinv);
  // reaction 70:  c2h4 (+M) <=> c2h2 + h2 (+M)
  k_f = 18000000000000 * exp(-(38244.4666011587) * invT);
  Corr = mixture;
  redP = Corr / k_f * 1500000000 * exp(-(27899.8416022111) * invT);
  Corr = redP / (1. + redP);
  qf[9] *= Corr * k_f;
  qr[9] *= Corr * k_f * exp(-(-g_RT[1] + g_RT[16] - g_RT[18])) * (refCinv);
  // reaction 71:  ho2 + o => o2 + oh
  k_f = 32500000;
  qf[91] *= k_f;
  qr[91] *= k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[4] + g_RT[11]));
  // reaction 72:  o2 + oh => ho2 + o
  k_f = 785700000 * exp((-0.33) * logT - (27873.1711189234) * invT);
  qf[92] *= k_f;
  qr[92] *= k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[4] - g_RT[11]));
  // reaction 73:  hco + ho2 => ch2o + o2
  k_f = 29740 * exp((0.33) * logT - (-1942.91954667202) * invT);
  qf[93] *= k_f;
  qr[93] *= k_f * exp(-(-g_RT[3] + g_RT[7] + g_RT[11] - g_RT[13]));
  // reaction 74:  ch2o + o2 => hco + ho2
  k_f = 20500000 * exp(-(19600.2891330938) * invT);
  qf[94] *= k_f;
  qr[94] *= k_f * exp(-(g_RT[3] - g_RT[7] - g_RT[11] + g_RT[13]));
  // reaction 75:  ch3o + o2 => ch2o + ho2
  k_f = 55000 * exp(-(1219.79719791064) * invT);
  qf[95] *= k_f;
  qr[95] *= k_f * exp(-(g_RT[3] - g_RT[11] - g_RT[13] + g_RT[14]));
  // reaction 76:  ch2o + ho2 => ch3o + o2
  k_f = 1318 * exp((0.35) * logT - (15795.9711396102) * invT);
  qf[96] *= k_f;
  qr[96] *= k_f * exp(-(-g_RT[3] + g_RT[11] + g_RT[13] - g_RT[14]));
  // reaction 77:  ch3 + ho2 => ch4 + o2
  k_f = 3600000;
  qf[97] *= k_f;
  qr[97] *= k_f * exp(-(-g_RT[3] + g_RT[9] - g_RT[10] + g_RT[11]));
  // reaction 78:  ch4 + o2 => ch3 + ho2
  k_f = 5177000000 * exp((-0.33) * logT - (29166.4379500416) * invT);
  qf[98] *= k_f;
  qr[98] *= k_f * exp(-(g_RT[3] - g_RT[9] + g_RT[10] - g_RT[11]));
  // reaction 79:  hco + o2 => co + ho2
  k_f = 7580000 * exp(-(206.318832979935) * invT);
  qf[99] *= k_f;
  qr[99] *= k_f * exp(-(g_RT[3] - g_RT[6] + g_RT[7] - g_RT[11]));
  // reaction 80:  co + ho2 => hco + o2
  k_f = 902900 * exp((0.33) * logT - (16570.9248049494) * invT);
  qf[100] *= k_f;
  qr[100] *= k_f * exp(-(-g_RT[3] + g_RT[6] - g_RT[7] + g_RT[11]));
  // reaction 81:  h + ho2 => 2 oh
  k_f = 70800000 * exp(-(150.964999741416) * invT);
  qf[101] *= k_f;
  qr[101] *= k_f * exp(-(g_RT[0] - 2.000000 * g_RT[4] + g_RT[11]));
  // reaction 82:  2 oh => h + ho2
  k_f = 135200000 * exp((-0.33) * logT - (19912.2834658928) * invT);
  qf[102] *= k_f;
  qr[102] *= k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[4] - g_RT[11]));
  // reaction 83:  h + ho2 => h2 + o2
  k_f = 16600000 * exp(-(412.63766595987) * invT);
  qf[103] *= k_f;
  qr[103] *= k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[3] + g_RT[11]));
  // reaction 84:  h2 + o2 => h + ho2
  k_f = 913800000 * exp((-0.33) * logT - (29337.5316164152) * invT);
  qf[104] *= k_f;
  qr[104] *= k_f * exp(-(-g_RT[0] + g_RT[1] + g_RT[3] - g_RT[11]));
  // reaction 85:  ho2 + oh => h2o + o2
  k_f = 28900000 * exp(-(-251.60833290236) * invT);
  qf[105] *= k_f;
  qr[105] *= k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[5] + g_RT[11]));
  // reaction 86:  h2o + o2 => ho2 + oh
  k_f = 6888000000 * exp((-0.33) * logT - (36302.0502711525) * invT);
  qf[106] *= k_f;
  qr[106] *= k_f * exp(-(g_RT[3] - g_RT[4] + g_RT[5] - g_RT[11]));
  // reaction 87:  h2o2 + o2 => 2 ho2
  k_f = 594200000000 * exp((-0.66) * logT - (26745.9657875209) * invT);
  qf[107] *= k_f;
  qr[107] *= k_f * exp(-(g_RT[3] - 2.000000 * g_RT[11] + g_RT[12]));
  // reaction 88:  2 ho2 => h2o2 + o2
  k_f = 420000000 * exp(-(6028.53565634054) * invT);
  qf[108] *= k_f;
  qr[108] *= k_f * exp(-(-g_RT[3] + 2.000000 * g_RT[11] - g_RT[12]));
  // reaction 89:  2 oh (+M) <=> h2o2 (+M)
  k_f = 123600000 * exp((-0.37) * logT);
  Corr = mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[8];
  redP = Corr / k_f * 3.041e+18 * exp(-4.63 * logT - (1031.09094823387) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.53) * exp(-T * 0.01) + 0.47 * exp(-T * 0.0005) + exp(-1e+15 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[4] *= Corr * k_f;
  qr[4] *= Corr * k_f * exp(-(2.000000 * g_RT[4] - g_RT[12])) * (refC);
  // reaction 90:  h + h2o2 => h2o + oh
  k_f = 24100000 * exp(-(1997.77016324474) * invT);
  qf[109] *= k_f;
  qr[109] *= k_f * exp(-(g_RT[0] - g_RT[4] - g_RT[5] + g_RT[12]));
  // reaction 91:  h2o + oh => h + h2o2
  k_f = 7750000 * exp(-(37590.2849356126) * invT);
  qf[110] *= k_f;
  qr[110] *= k_f * exp(-(-g_RT[0] + g_RT[4] + g_RT[5] - g_RT[12]));
  // reaction 92:  ch4 + ho2 => ch3 + h2o2
  k_f = 342000 * exp(-(9707.04948337304) * invT);
  qf[111] *= k_f;
  qr[111] *= k_f * exp(-(-g_RT[9] + g_RT[10] + g_RT[11] - g_RT[12]));
  // reaction 93:  ch3 + h2o2 => ch4 + ho2
  k_f = 336500 * exp((-0.33) * logT - (1259.04809784341) * invT);
  qf[112] *= k_f;
  qr[112] *= k_f * exp(-(g_RT[9] - g_RT[10] - g_RT[11] + g_RT[12]));
  // reaction 94:  ch2o + ho2 => h2o2 + hco
  k_f = 5.82e-09 * exp((4.53) * logT - (3299.59167768155) * invT);
  qf[113] *= k_f;
  qr[113] *= k_f * exp(-(-g_RT[7] + g_RT[11] - g_RT[12] + g_RT[13]));
  // reaction 95:  h2o2 + hco => ch2o + ho2
  k_f = 1.194e-08 * exp((4.2) * logT - (2476.32921242503) * invT);
  qf[114] *= k_f;
  qr[114] *= k_f * exp(-(g_RT[7] - g_RT[11] + g_RT[12] - g_RT[13]));
  // reaction 96:  oh + M => h + o + M
  k_f = 3.909e+16 * exp((-2) * logT - (52988.714909237) * invT);
  Corr = mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[8];
  qf[17] *= Corr * k_f;
  qr[17] *= Corr * k_f * exp(-(-g_RT[0] - g_RT[2] + g_RT[4])) * (refCinv);
  // reaction 97:  h + o + M => oh + M
  k_f = 4720000 * exp((-1) * logT);
  Corr = mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[8];
  qf[18] *= Corr * k_f;
  qr[18] *= Corr * k_f * exp(-(g_RT[0] + g_RT[2] - g_RT[4])) * (refC);
  // reaction 98:  o2 + M => 2 o + M
  k_f = 647300000000000 * exp((-1.5) * logT - (61140.8248952734) * invT);
  Corr = mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[8];
  qf[19] *= Corr * k_f;
  qr[19] *= Corr * k_f * exp(-(-2.000000 * g_RT[2] + g_RT[3])) * (refCinv);
  // reaction 99:  2 o + M => o2 + M
  k_f = 6170 * exp((-0.5) * logT);
  Corr = mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[8];
  qf[20] *= Corr * k_f;
  qr[20] *= Corr * k_f * exp(-(2.000000 * g_RT[2] - g_RT[3])) * (refC);
  // reaction 100:  h2 + M => 2 h + M
  k_f = 45700000000000 * exp((-1.4) * logT - (52535.8199100127) * invT);
  Corr = mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[8];
  qf[21] *= Corr * k_f;
  qr[21] *= Corr * k_f * exp(-(-2.000000 * g_RT[0] + g_RT[1])) * (refCinv);
  // reaction 101:  2 h + M => h2 + M
  k_f = 2423 * exp((-0.4) * logT - (-1529.77866404635) * invT);
  Corr = mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[8];
  qf[22] *= Corr * k_f;
  qr[22] *= Corr * k_f * exp(-(2.000000 * g_RT[0] - g_RT[1])) * (refC);
  // reaction 102:  c2h3 + h (+M) <=> c2h4 (+M)
  k_f = 6100000 * exp((0.27) * logT - (140.900666425322) * invT);
  Corr = mixture;
  redP = Corr / k_f * 9.8e+17 * exp(-3.86 * logT - (1670.67933047167) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.218) * exp(-T * 0.00480769230769231) +
    0.782 * exp(-T * 0.000375516334960571) + exp(-6095 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[5] *= Corr * k_f;
  qr[5] *= Corr * k_f * exp(-(g_RT[0] - g_RT[16] + g_RT[19])) * (refC);
  // reaction 103:  c2h3 + c2h5 => 2 c2h4
  k_f = 576500000 * exp((-0.63) * logT - (1253.00949785375) * invT);
  qf[115] *= k_f;
  qr[115] *= k_f * exp(-(-2.000000 * g_RT[16] + g_RT[17] + g_RT[19]));
  // reaction 104:  2 c2h4 => c2h3 + c2h5
  k_f = 482000000 * exp(-(35995.0881050116) * invT);
  qf[116] *= k_f;
  qr[116] *= k_f * exp(-(2.000000 * g_RT[16] - g_RT[17] - g_RT[19]));
  // reaction 105:  c2h2 + h (+M) <=> c2h3 (+M)
  k_f = 311000 * exp((0.58) * logT - (1302.82794776842) * invT);
  Corr = mixture + sc[1] + (4) * sc[5] + sc[6] + (2) * sc[8];
  redP =
    Corr / k_f * 2.254e+28 * exp(-7.269 * logT - (3309.65601099764) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(+exp(-T * 0.00148148148148148) + exp(-1e+15 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[6] *= Corr * k_f;
  qr[6] *= Corr * k_f * exp(-(g_RT[0] + g_RT[18] - g_RT[19])) * (refC);
  // reaction 106:  c2h4 + h => c2h3 + h2
  k_f = 8.42e-09 * exp((4.62) * logT - (1299.80864777359) * invT);
  qf[117] *= k_f;
  qr[117] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[16] - g_RT[19]));
  // reaction 107:  c2h3 + h2 => c2h4 + h
  k_f = 5.723e-07 * exp((3.79) * logT - (1626.89948054666) * invT);
  qf[118] *= k_f;
  qr[118] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[16] + g_RT[19]));
  // reaction 108:  c2h4 + oh => c2h3 + h2o
  k_f = 20500000 * exp(-(2994.13916153808) * invT);
  qf[119] *= k_f;
  qr[119] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[16] - g_RT[19]));
  // reaction 109:  c2h3 + h2o => c2h4 + oh
  k_f = 6033000000 * exp((-0.83) * logT - (10949.9946479107) * invT);
  qf[120] *= k_f;
  qr[120] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[16] + g_RT[19]));
  // reaction 110:  c2h2 + o2 => hcco + oh
  k_f = 200 * exp((1.5) * logT - (15146.8216407221) * invT);
  qf[121] *= k_f;
  qr[121] *= k_f * exp(-(g_RT[3] - g_RT[4] + g_RT[18] - g_RT[21]));
  // reaction 111:  hcco + oh => c2h2 + o2
  k_f = 0.2232 * exp((1.5) * logT - (12781.7033114399) * invT);
  qf[122] *= k_f;
  qr[122] *= k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[18] + g_RT[21]));
  // reaction 112:  c2h3 + o2 => c2h2 + ho2
  k_f = 2.12e-12 * exp((6) * logT - (4772.50685849196) * invT);
  qf[123] *= k_f;
  qr[123] *= k_f * exp(-(g_RT[3] - g_RT[11] - g_RT[18] + g_RT[19]));
  // reaction 113:  c2h2 + ho2 => c2h3 + o2
  k_f = 1.114e-13 * exp((6.33) * logT - (8841.51681818893) * invT);
  qf[124] *= k_f;
  qr[124] *= k_f * exp(-(-g_RT[3] + g_RT[11] + g_RT[18] - g_RT[19]));
  // reaction 114:  h2o2 + o => ho2 + oh
  k_f = 9.55 * exp((2) * logT - (1997.77016324474) * invT);
  qf[125] *= k_f;
  qr[125] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[11] + g_RT[12]));
  // reaction 115:  ho2 + oh => h2o2 + o
  k_f = 0.1632 * exp((2.33) * logT - (9148.4789843298) * invT);
  qf[126] *= k_f;
  qr[126] *= k_f * exp(-(-g_RT[2] + g_RT[4] + g_RT[11] - g_RT[12]));
  // reaction 116:  c2h2 + o => h + hcco
  k_f = 14.3 * exp((2) * logT - (956.111665028967) * invT);
  qf[127] *= k_f;
  qr[127] *= k_f * exp(-(-g_RT[0] + g_RT[2] + g_RT[18] - g_RT[21]));
  // reaction 117:  h + hcco => c2h2 + o
  k_f = 0.2021 * exp((2) * logT - (6697.81382186082) * invT);
  qf[128] *= k_f;
  qr[128] *= k_f * exp(-(g_RT[0] - g_RT[2] - g_RT[18] + g_RT[21]));
  // reaction 118:  c2h2 + oh => ch2co + h
  k_f = 2.19e-10 * exp((4.5) * logT - (-503.21666580472) * invT);
  qf[129] *= k_f;
  qr[129] *= k_f * exp(-(-g_RT[0] + g_RT[4] + g_RT[18] - g_RT[20]));
  // reaction 119:  ch2co + h => c2h2 + oh
  k_f = 2.161e-09 * exp((4.5) * logT - (9893.23964972079) * invT);
  qf[130] *= k_f;
  qr[130] *= k_f * exp(-(g_RT[0] - g_RT[4] - g_RT[18] + g_RT[20]));
  // reaction 120:  ch2co + h => ch3 + co
  k_f = 11000000 * exp(-(1710.93666373605) * invT);
  qf[131] *= k_f;
  qr[131] *= k_f * exp(-(g_RT[0] - g_RT[6] - g_RT[9] + g_RT[20]));
  // reaction 121:  ch3 + co => ch2co + h
  k_f = 2400000 * exp(-(20229.3099653497) * invT);
  qf[132] *= k_f;
  qr[132] *= k_f * exp(-(-g_RT[0] + g_RT[6] + g_RT[9] - g_RT[20]));
  // reaction 122:  ch2co + o => hcco + oh
  k_f = 10000000 * exp(-(4025.73332643776) * invT);
  qf[133] *= k_f;
  qr[133] *= k_f * exp(-(g_RT[2] - g_RT[4] + g_RT[20] - g_RT[21]));
  // reaction 123:  hcco + oh => ch2co + o
  k_f = 14320 * exp(-(-631.536915584923) * invT);
  qf[134] *= k_f;
  qr[134] *= k_f * exp(-(-g_RT[2] + g_RT[4] - g_RT[20] + g_RT[21]));
  // reaction 124:  ch2co + oh => h2o + hcco
  k_f = 10000000 * exp(-(1006.43333160944) * invT);
  qf[135] *= k_f;
  qr[135] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[20] - g_RT[21]));
  // reaction 125:  h2o + hcco => ch2co + oh
  k_f = 141200 * exp(-(5029.65057471817) * invT);
  qf[136] *= k_f;
  qr[136] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[20] + g_RT[21]));
  // reaction 126:  ch2co + h => h2 + hcco
  k_f = 200000000 * exp(-(4025.73332643776) * invT);
  qf[137] *= k_f;
  qr[137] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[20] - g_RT[21]));
  // reaction 127:  h2 + hcco => ch2co + h
  k_f = 652200 * exp(-(422.701999275965) * invT);
  qf[138] *= k_f;
  qr[138] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[20] + g_RT[21]));
  // reaction 128:  hcco + oh => 2 hco
  k_f = 10000000;
  qf[139] *= k_f;
  qr[139] *= k_f * exp(-(g_RT[4] - 2.000000 * g_RT[7] + g_RT[21]));
  // reaction 129:  2 hco => hcco + oh
  k_f = 241100000 * exp(-(20309.8246318785) * invT);
  qf[140] *= k_f;
  qr[140] *= k_f * exp(-(-g_RT[4] + 2.000000 * g_RT[7] - g_RT[21]));
  // reaction 130:  h + hcco => ch2(s) + co
  k_f = 110000000;
  qf[141] *= k_f;
  qr[141] *= k_f * exp(-(g_RT[0] - g_RT[6] + g_RT[21] - g_RT[50]));
  // reaction 131:  ch2(s) + co => h + hcco
  k_f = 2046000 * exp((0.89) * logT - (14004.5198093453) * invT);
  qf[142] *= k_f;
  qr[142] *= k_f * exp(-(-g_RT[0] + g_RT[6] - g_RT[21] + g_RT[50]));
  // reaction 132:  hcco + o => 2 co + h
  k_f = 80000000;
  qf[143] *= k_f;
  qr[143] *= k_f * exp(-(-g_RT[0] + g_RT[2] - 2.000000 * g_RT[6] + g_RT[21])) *
             (refCinv);
  // reaction 133:  c2h6 + o2 => c2h5 + ho2
  k_f = 60300000 * exp(-(26101.8484552908) * invT);
  qf[144] *= k_f;
  qr[144] *= k_f * exp(-(g_RT[3] - g_RT[11] + g_RT[15] - g_RT[17]));
  // reaction 134:  c2h5 + ho2 => c2h6 + o2
  k_f = 267.9 * exp((0.89) * logT - (-967.182431676671) * invT);
  qf[145] *= k_f;
  qr[145] *= k_f * exp(-(-g_RT[3] + g_RT[11] - g_RT[15] + g_RT[17]));
  // reaction 135:  c2h6 + ho2 => c2h5 + h2o2
  k_f = 13200000 * exp(-(10300.8451490226) * invT);
  qf[146] *= k_f;
  qr[146] *= k_f * exp(-(g_RT[11] - g_RT[12] + g_RT[15] - g_RT[17]));
  // reaction 136:  c2h5 + h2o2 => c2h6 + ho2
  k_f = 82980 * exp((0.24) * logT - (3951.25725989866) * invT);
  qf[147] *= k_f;
  qr[147] *= k_f * exp(-(-g_RT[11] + g_RT[12] - g_RT[15] + g_RT[17]));
  // reaction 137:  c2h3 + ch3 => c2h2 + ch4
  k_f = 392000;
  qf[148] *= k_f;
  qr[148] *= k_f * exp(-(g_RT[9] - g_RT[10] - g_RT[18] + g_RT[19]));
  // reaction 138:  c2h2 + ch4 => c2h3 + ch3
  k_f = 29620000 * exp(-(33237.4607764017) * invT);
  qf[149] *= k_f;
  qr[149] *= k_f * exp(-(-g_RT[9] + g_RT[10] + g_RT[18] - g_RT[19]));
  // reaction 139:  c2h5 + ch3 => c2h4 + ch4
  k_f = 19500000 * exp((-0.5) * logT);
  qf[150] *= k_f;
  qr[150] *= k_f * exp(-(g_RT[9] - g_RT[10] - g_RT[16] + g_RT[17]));
  // reaction 140:  c2h4 + ch4 => c2h5 + ch3
  k_f = 28950000000 * exp((-0.7) * logT - (35310.7134395172) * invT);
  qf[151] *= k_f;
  qr[151] *= k_f * exp(-(-g_RT[9] + g_RT[10] + g_RT[16] - g_RT[17]));
  // reaction 141:  c2h3 + h => c2h2 + h2
  k_f = 20000000 * exp(-(1258.0416645118) * invT);
  qf[152] *= k_f;
  qr[152] *= k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[18] + g_RT[19]));
  // reaction 142:  c2h2 + h2 => c2h3 + h
  k_f = 13310000 * exp(-(34258.9906079853) * invT);
  qf[153] *= k_f;
  qr[153] *= k_f * exp(-(-g_RT[0] + g_RT[1] + g_RT[18] - g_RT[19]));
  // reaction 143:  c2h5 + h => 2 ch3
  k_f = 36100000;
  qf[154] *= k_f;
  qr[154] *= k_f * exp(-(g_RT[0] - 2.000000 * g_RT[9] + g_RT[17]));
  // reaction 144:  2 ch3 => c2h5 + h
  k_f = 54460000000 * exp((-1.03) * logT - (8544.61898536414) * invT);
  qf[155] *= k_f;
  qr[155] *= k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[9] - g_RT[17]));
  // reaction 145:  c2h3 + o2 => ch2o + hco
  k_f = 1.7e+23 * exp((-5.31) * logT - (3270.90832773068) * invT);
  qf[156] *= k_f;
  qr[156] *= k_f * exp(-(g_RT[3] - g_RT[7] - g_RT[13] + g_RT[19]));
  // reaction 146:  ch2o + hco => c2h3 + o2
  k_f = 1.657e+23 * exp((-5.31) * logT - (46824.3107531292) * invT);
  qf[157] *= k_f;
  qr[157] *= k_f * exp(-(-g_RT[3] + g_RT[7] + g_RT[13] - g_RT[19]));
  // reaction 147:  c2h6 => c2h5 + h
  k_f = 2.783e+21 * exp((-1.56) * logT - (52233.8899105299) * invT);
  qf[158] *= k_f;
  qr[158] *= k_f * exp(-(-g_RT[0] + g_RT[15] - g_RT[17])) * (refCinv);
  // reaction 148:  c2h5 + h => c2h6
  k_f = 36100000;
  qf[159] *= k_f;
  qr[159] *= k_f * exp(-(g_RT[0] - g_RT[15] + g_RT[17])) * (refC);
  // reaction 149:  c2h4 + ch3 => c2h3 + ch4
  k_f = 6.62e-06 * exp((3.7) * logT - (4780.55832514484) * invT);
  qf[160] *= k_f;
  qr[160] *= k_f * exp(-(g_RT[9] - g_RT[10] + g_RT[16] - g_RT[19]));
  // reaction 150:  c2h3 + ch4 => c2h4 + ch3
  k_f = 1.44e-06 * exp((4.02) * logT - (2753.60159528343) * invT);
  qf[161] *= k_f;
  qr[161] *= k_f * exp(-(-g_RT[9] + g_RT[10] - g_RT[16] + g_RT[19]));
  // reaction 151:  ch3co (+M) <=> ch3 + co (+M)
  k_f = 3000000000000 * exp(-(8413.78265225491) * invT);
  Corr = mixture;
  redP = Corr / k_f * 1200000000 * exp(-(6299.26622254348) * invT);
  Corr = redP / (1. + redP);
  qf[10] *= Corr * k_f;
  qr[10] *= Corr * k_f * exp(-(-g_RT[6] - g_RT[9] + g_RT[22])) * (refCinv);
  // reaction 152:  ch3cho => ch3 + hco
  k_f = 2.614e+15 * exp((0.15) * logT - (40534.1024305702) * invT);
  qf[162] *= k_f;
  qr[162] *= k_f * exp(-(-g_RT[7] - g_RT[9] + g_RT[24])) * (refCinv);
  // reaction 153:  ch3 + hco => ch3cho
  k_f = 20000000;
  qf[163] *= k_f;
  qr[163] *= k_f * exp(-(g_RT[7] + g_RT[9] - g_RT[24])) * (refC);
  // reaction 154:  ch3cho + o2 => ch3co + ho2
  k_f = 30100000 * exp(-(19700.9324662548) * invT);
  qf[164] *= k_f;
  qr[164] *= k_f * exp(-(g_RT[3] - g_RT[11] - g_RT[22] + g_RT[24]));
  // reaction 155:  ch3co + ho2 => ch3cho + o2
  k_f = 85520 * exp((0.32) * logT - (-976.240331661156) * invT);
  qf[165] *= k_f;
  qr[165] *= k_f * exp(-(-g_RT[3] + g_RT[11] + g_RT[22] - g_RT[24]));
  // reaction 156:  ch3cho + oh => ch3co + h2o
  k_f = 2 * exp((1.8) * logT - (654.181665546136) * invT);
  qf[166] *= k_f;
  qr[166] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[22] + g_RT[24]));
  // reaction 157:  ch3co + h2o => ch3cho + oh
  k_f = 1.354 * exp((1.79) * logT - (16530.667471685) * invT);
  qf[167] *= k_f;
  qr[167] *= k_f * exp(-(-g_RT[4] + g_RT[5] + g_RT[22] - g_RT[24]));
  // reaction 158:  ch3cho + h => ch3co + h2
  k_f = 13400000 * exp(-(1660.61499715557) * invT);
  qf[168] *= k_f;
  qr[168] *= k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[22] + g_RT[24]));
  // reaction 159:  ch3co + h2 => ch3cho + h
  k_f = 2096000 * exp((-0.01) * logT - (9908.33614969493) * invT);
  qf[169] *= k_f;
  qr[169] *= k_f * exp(-(-g_RT[0] + g_RT[1] + g_RT[22] - g_RT[24]));
  // reaction 160:  ch3cho + o => ch3co + oh
  k_f = 5940000 * exp(-(940.008731723216) * invT);
  qf[170] *= k_f;
  qr[170] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[22] + g_RT[24]));
  // reaction 161:  ch3co + oh => ch3cho + o
  k_f = 408000 * exp((-0.01) * logT - (8137.01348606232) * invT);
  qf[171] *= k_f;
  qr[171] *= k_f * exp(-(-g_RT[2] + g_RT[4] + g_RT[22] - g_RT[24]));
  // reaction 162:  ch3cho + ho2 => ch3co + h2o2
  k_f = 3010000 * exp(-(5998.34265639226) * invT);
  qf[172] *= k_f;
  qr[172] *= k_f * exp(-(g_RT[11] - g_RT[12] - g_RT[22] + g_RT[24]));
  // reaction 163:  ch3co + h2o2 => ch3cho + ho2
  k_f = 12100000 * exp((-0.34) * logT - (6043.63215631468) * invT);
  qf[173] *= k_f;
  qr[173] *= k_f * exp(-(-g_RT[11] + g_RT[12] + g_RT[22] - g_RT[24]));
  // reaction 164:  ch3 + ch3cho => ch3co + ch4
  k_f = 2.608 * exp((1.78) * logT - (2974.5137115717) * invT);
  qf[174] *= k_f;
  qr[174] *= k_f * exp(-(g_RT[9] - g_RT[10] - g_RT[22] + g_RT[24]));
  // reaction 165:  ch3co + ch4 => ch3 + ch3cho
  k_f = 10.66 * exp((1.77) * logT - (11463.2756470315) * invT);
  qf[175] *= k_f;
  qr[175] *= k_f * exp(-(-g_RT[9] + g_RT[10] + g_RT[22] - g_RT[24]));
  // reaction 166:  c3h5-a => c2h2 + ch3
  k_f = 2.397e+48 * exp((-9.9) * logT - (41304.0239292514) * invT);
  qf[176] *= k_f;
  qr[176] *= k_f * exp(-(-g_RT[9] - g_RT[18] + g_RT[47])) * (refCinv);
  // reaction 167:  c2h2 + ch3 => c3h5-a
  k_f = 2.61e+40 * exp((-9.82) * logT - (18593.8558014844) * invT);
  qf[177] *= k_f;
  qr[177] *= k_f * exp(-(g_RT[9] + g_RT[18] - g_RT[47])) * (refC);
  // reaction 168:  c3h6 => c2h3 + ch3
  k_f = 2.73e+62 * exp((-13.28) * logT - (61996.2932271415) * invT);
  qf[178] *= k_f;
  qr[178] *= k_f * exp(-(-g_RT[9] - g_RT[19] + g_RT[26])) * (refCinv);
  // reaction 169:  c2h3 + ch3 => c3h6
  k_f = 4.712e+53 * exp((-13.19) * logT - (14865.0203078714) * invT);
  qf[179] *= k_f;
  qr[179] *= k_f * exp(-(g_RT[9] + g_RT[19] - g_RT[26])) * (refC);
  // reaction 170:  c2h2 + ch3 => c3h4-a + h
  k_f = 67400000000000 * exp((-2.08) * logT - (15896.6144727711) * invT);
  qf[180] *= k_f;
  qr[180] *= k_f * exp(-(-g_RT[0] + g_RT[9] + g_RT[18] - g_RT[25]));
  // reaction 171:  c3h4-a + h => c2h2 + ch3
  k_f = 11490000000 * exp((-0.7) * logT - (7945.79115305652) * invT);
  qf[181] *= k_f;
  qr[181] *= k_f * exp(-(g_RT[0] - g_RT[9] - g_RT[18] + g_RT[25]));
  // reaction 172:  c3h6 => c3h5-a + h
  k_f = 2.01e+61 * exp((-13.26) * logT - (59631.1748978593) * invT);
  qf[182] *= k_f;
  qr[182] *= k_f * exp(-(-g_RT[0] + g_RT[26] - g_RT[47])) * (refCinv);
  // reaction 173:  c3h5-a + h => c3h6
  k_f = 4.887e+50 * exp((-12.25) * logT - (14130.3239757965) * invT);
  qf[183] *= k_f;
  qr[183] *= k_f * exp(-(g_RT[0] - g_RT[26] + g_RT[47])) * (refC);
  // reaction 174:  c3h6 + o => ch2co + ch3 + h
  k_f = 25 * exp((1.76) * logT - (38.2444666011587) * invT);
  qf[184] *= k_f;
  qr[184] *= k_f * exp(-(-g_RT[0] + g_RT[2] - g_RT[9] - g_RT[20] + g_RT[26])) *
             (refCinv);
  // reaction 175:  ch2co + ch3 + h => c3h6 + o
  k_f = 1e-12;
  qf[185] *= k_f;
  qr[185] *=
    k_f * exp(-(g_RT[0] - g_RT[2] + g_RT[9] + g_RT[20] - g_RT[26])) * (refC);
  // reaction 176:  c3h6 + o => c2h5 + hco
  k_f = 15.8 * exp((1.76) * logT - (-611.911465618539) * invT);
  qf[186] *= k_f;
  qr[186] *= k_f * exp(-(g_RT[2] - g_RT[7] - g_RT[17] + g_RT[26]));
  // reaction 177:  c2h5 + hco => c3h6 + o
  k_f = 0.1402 * exp((1.88) * logT - (13340.2738104831) * invT);
  qf[187] *= k_f;
  qr[187] *= k_f * exp(-(-g_RT[2] + g_RT[7] + g_RT[17] - g_RT[26]));
  // reaction 178:  c3h6 + ho2 => c3h5-a + h2o2
  k_f = 150000 * exp(-(7140.64448776897) * invT);
  qf[188] *= k_f;
  qr[188] *= k_f * exp(-(g_RT[11] - g_RT[12] + g_RT[26] - g_RT[47]));
  // reaction 179:  c3h5-a + h2o2 => c3h6 + ho2
  k_f = 0.5867 * exp((1.33) * logT - (4910.89144158826) * invT);
  qf[189] *= k_f;
  qr[189] *= k_f * exp(-(-g_RT[11] + g_RT[12] - g_RT[26] + g_RT[47]));
  // reaction 180:  c3h6 + oh => c3h5-a + h2o
  k_f = 3.12 * exp((2) * logT - (-149.958566409806) * invT);
  qf[190] *= k_f;
  qr[190] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[26] - g_RT[47]));
  // reaction 181:  c3h5-a + h2o => c3h6 + oh
  k_f = 6.194 * exp((2.01) * logT - (16042.5473058545) * invT);
  qf[191] *= k_f;
  qr[191] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[26] + g_RT[47]));
  // reaction 182:  c4h6 => 2 c2h3
  k_f = 4.027e+19 * exp((-1) * logT - (49390.7157487332) * invT);
  qf[192] *= k_f;
  qr[192] *= k_f * exp(-(-2.000000 * g_RT[19] + g_RT[27])) * (refCinv);
  // reaction 183:  2 c2h3 => c4h6
  k_f = 12600000;
  qf[193] *= k_f;
  qr[193] *= k_f * exp(-(2.000000 * g_RT[19] - g_RT[27])) * (refC);
  // reaction 184:  c4h6 + oh => c2h5 + ch2co
  k_f = 1000000;
  qf[194] *= k_f;
  qr[194] *= k_f * exp(-(g_RT[4] - g_RT[17] - g_RT[20] + g_RT[27]));
  // reaction 185:  c2h5 + ch2co => c4h6 + oh
  k_f = 3730000 * exp(-(15106.5643074577) * invT);
  qf[195] *= k_f;
  qr[195] *= k_f * exp(-(-g_RT[4] + g_RT[17] + g_RT[20] - g_RT[27]));
  // reaction 186:  c4h6 + oh => c3h5-a + ch2o
  k_f = 1000000;
  qf[196] *= k_f;
  qr[196] *= k_f * exp(-(g_RT[4] - g_RT[13] + g_RT[27] - g_RT[47]));
  // reaction 187:  c3h5-a + ch2o => c4h6 + oh
  k_f = 3.501 * exp(-(35758.5762720834) * invT);
  qf[197] *= k_f;
  qr[197] *= k_f * exp(-(-g_RT[4] + g_RT[13] - g_RT[27] + g_RT[47]));
  // reaction 188:  c4h6 + oh => c2h3 + ch3cho
  k_f = 1000000;
  qf[198] *= k_f;
  qr[198] *= k_f * exp(-(g_RT[4] - g_RT[19] - g_RT[24] + g_RT[27]));
  // reaction 189:  c2h3 + ch3cho => c4h6 + oh
  k_f = 543700 * exp(-(9334.66915067755) * invT);
  qf[199] *= k_f;
  qr[199] *= k_f * exp(-(-g_RT[4] + g_RT[19] + g_RT[24] - g_RT[27]));
  // reaction 190:  c4h6 + o => c2h4 + ch2co
  k_f = 1000000;
  qf[200] *= k_f;
  qr[200] *= k_f * exp(-(g_RT[2] - g_RT[16] - g_RT[20] + g_RT[27]));
  // reaction 191:  c2h4 + ch2co => c4h6 + o
  k_f = 637700 * exp(-(47473.4602520173) * invT);
  qf[201] *= k_f;
  qr[201] *= k_f * exp(-(-g_RT[2] + g_RT[16] + g_RT[20] - g_RT[27]));
  // reaction 192:  c4h6 + o => c3h4-a + ch2o
  k_f = 1000000;
  qf[202] *= k_f;
  qr[202] *= k_f * exp(-(g_RT[2] - g_RT[13] - g_RT[25] + g_RT[27]));
  // reaction 193:  c3h4-a + ch2o => c4h6 + o
  k_f = 1075000 * exp(-(39779.2774318631) * invT);
  qf[203] *= k_f;
  qr[203] *= k_f * exp(-(-g_RT[2] + g_RT[13] + g_RT[25] - g_RT[27]));
  // reaction 194:  c2h4 + o2 => c2h3 + ho2
  k_f = 40000000 * exp(-(29287.2099498347) * invT);
  qf[204] *= k_f;
  qr[204] *= k_f * exp(-(g_RT[3] - g_RT[11] + g_RT[16] - g_RT[19]));
  // reaction 195:  c2h3 + ho2 => c2h4 + o2
  k_f = 49390000 * exp((-0.5) * logT - (688.400398820856) * invT);
  qf[205] *= k_f;
  qr[205] *= k_f * exp(-(-g_RT[3] + g_RT[11] - g_RT[16] + g_RT[19]));
  // reaction 196:  ch2o + M => co + h2 + M
  k_f = 1.826e+26 * exp((-4.42) * logT - (43840.2359249072) * invT);
  Corr = mixture;
  qf[23] *= Corr * k_f;
  qr[23] *= Corr * k_f * exp(-(-g_RT[1] - g_RT[6] + g_RT[13])) * (refCinv);
  // reaction 197:  co + h2 + M => ch2o + M
  k_f = 5.07e+15 * exp((-3.42) * logT - (42446.3257606281) * invT);
  Corr = mixture;
  qf[24] *= Corr * k_f;
  qr[24] *= Corr * k_f * exp(-(g_RT[1] + g_RT[6] - g_RT[13])) * (refC);
  // reaction 198:  nc3h7 => c2h4 + ch3
  k_f = 228400000000000 * exp((-0.55) * logT - (14291.353308854) * invT);
  qf[206] *= k_f;
  qr[206] *= k_f * exp(-(-g_RT[9] - g_RT[16] + g_RT[28])) * (refCinv);
  // reaction 199:  c2h4 + ch3 => nc3h7
  k_f = 410000 * exp(-(3625.1728604572) * invT);
  qf[207] *= k_f;
  qr[207] *= k_f * exp(-(g_RT[9] + g_RT[16] - g_RT[28])) * (refC);
  // reaction 200:  nc3h7 => c3h6 + h
  k_f = 2.667e+15 * exp((-0.64) * logT - (18528.4376349298) * invT);
  qf[208] *= k_f;
  qr[208] *= k_f * exp(-(-g_RT[0] - g_RT[26] + g_RT[28])) * (refCinv);
  // reaction 201:  c3h6 + h => nc3h7
  k_f = 10000000 * exp(-(1258.0416645118) * invT);
  qf[209] *= k_f;
  qr[209] *= k_f * exp(-(g_RT[0] + g_RT[26] - g_RT[28])) * (refC);
  // reaction 202:  nc3h7 + o2 => c3h6 + ho2
  k_f = 300000 * exp(-(1509.64999741416) * invT);
  qf[210] *= k_f;
  qr[210] *= k_f * exp(-(g_RT[3] - g_RT[11] - g_RT[26] + g_RT[28]));
  // reaction 203:  c3h6 + ho2 => nc3h7 + o2
  k_f = 200000 * exp(-(8806.29165158259) * invT);
  qf[211] *= k_f;
  qr[211] *= k_f * exp(-(-g_RT[3] + g_RT[11] + g_RT[26] - g_RT[28]));
  // reaction 204:  c3h6 + o => c3h5-a + oh
  k_f = 524000 * exp((0.7) * logT - (2960.92686159497) * invT);
  qf[212] *= k_f;
  qr[212] *= k_f * exp(-(g_RT[2] - g_RT[4] + g_RT[26] - g_RT[47]));
  // reaction 205:  c3h5-a + oh => c3h6 + o
  k_f = 105500 * exp((0.71) * logT - (10476.9709820543) * invT);
  qf[213] *= k_f;
  qr[213] *= k_f * exp(-(-g_RT[2] + g_RT[4] - g_RT[26] + g_RT[47]));
  // reaction 206:  c3h6 + h => c3h5-a + h2
  k_f = 0.173 * exp((2.5) * logT - (1254.01593118536) * invT);
  qf[214] *= k_f;
  qr[214] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[26] - g_RT[47]));
  // reaction 207:  c3h5-a + h2 => c3h6 + h
  k_f = 0.07933 * exp((2.51) * logT - (9822.78931650813) * invT);
  qf[215] *= k_f;
  qr[215] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[26] + g_RT[47]));
  // reaction 208:  c3h6 + h => c2h4 + ch3
  k_f = 4.83e+27 * exp((-5.81) * logT - (9309.50831738731) * invT);
  qf[216] *= k_f;
  qr[216] *= k_f * exp(-(g_RT[0] - g_RT[9] - g_RT[16] + g_RT[26]));
  // reaction 209:  c2h4 + ch3 => c3h6 + h
  k_f = 2.313e+27 * exp((-5.9) * logT - (15911.7109727452) * invT);
  qf[217] *= k_f;
  qr[217] *= k_f * exp(-(-g_RT[0] + g_RT[9] + g_RT[16] - g_RT[26]));
  // reaction 210:  c5h9 => c2h4 + c3h5-a
  k_f = 25000000000000 * exp(-(22644.7499612124) * invT);
  qf[218] *= k_f;
  qr[218] *= k_f * exp(-(-g_RT[16] + g_RT[35] - g_RT[47])) * (refCinv);
  // reaction 211:  c5h9 => c4h6 + ch3
  k_f = 1.339e+15 * exp((-0.52) * logT - (19283.2626336369) * invT);
  qf[219] *= k_f;
  qr[219] *= k_f * exp(-(-g_RT[9] - g_RT[27] + g_RT[35])) * (refCinv);
  // reaction 212:  c4h6 + ch3 => c5h9
  k_f = 175000 * exp(-(3824.44666011587) * invT);
  qf[220] *= k_f;
  qr[220] *= k_f * exp(-(g_RT[9] + g_RT[27] - g_RT[35])) * (refC);
  // reaction 213:  c4h7 => c4h6 + h
  k_f = 120000000000000 * exp(-(24808.5816241727) * invT);
  qf[221] *= k_f;
  qr[221] *= k_f * exp(-(-g_RT[0] - g_RT[27] + g_RT[29])) * (refCinv);
  // reaction 214:  c4h6 + h => c4h7
  k_f = 40000000 * exp(-(654.181665546136) * invT);
  qf[222] *= k_f;
  qr[222] *= k_f * exp(-(g_RT[0] + g_RT[27] - g_RT[29])) * (refC);
  // reaction 215:  c4h7 => c2h3 + c2h4
  k_f = 100000000000 * exp(-(18619.0166347746) * invT);
  qf[223] *= k_f;
  qr[223] *= k_f * exp(-(-g_RT[16] - g_RT[19] + g_RT[29])) * (refCinv);
  // reaction 216:  c2h3 + c2h4 => c4h7
  k_f = 50000 * exp(-(3522.51666063304) * invT);
  qf[224] *= k_f;
  qr[224] *= k_f * exp(-(g_RT[16] + g_RT[19] - g_RT[29])) * (refC);
  // reaction 217:  c4h6 + c4h8-1 => 2 c4h7
  k_f = 2350000 * exp(-(23510.2826263965) * invT);
  qf[225] *= k_f;
  qr[225] *= k_f * exp(-(g_RT[27] - 2.000000 * g_RT[29] + g_RT[30]));
  // reaction 218:  2 c4h7 => c4h6 + c4h8-1
  k_f = 1600000;
  qf[226] *= k_f;
  qr[226] *= k_f * exp(-(-g_RT[27] + 2.000000 * g_RT[29] - g_RT[30]));
  // reaction 219:  c4h7 + ch3 => c4h6 + ch4
  k_f = 8000000;
  qf[227] *= k_f;
  qr[227] *= k_f * exp(-(g_RT[9] - g_RT[10] - g_RT[27] + g_RT[29]));
  // reaction 220:  c4h6 + ch4 => c4h7 + ch3
  k_f = 70500000 * exp(-(28824.2506172943) * invT);
  qf[228] *= k_f;
  qr[228] *= k_f * exp(-(-g_RT[9] + g_RT[10] + g_RT[27] - g_RT[29]));
  // reaction 221:  c3h5-a + c4h7 => c3h6 + c4h6
  k_f = 6310000;
  qf[229] *= k_f;
  qr[229] *= k_f * exp(-(-g_RT[26] - g_RT[27] + g_RT[29] + g_RT[47]));
  // reaction 222:  c3h6 + c4h6 => c3h5-a + c4h7
  k_f = 10000 * exp(-(25160.833290236) * invT);
  qf[230] *= k_f;
  qr[230] *= k_f * exp(-(g_RT[26] + g_RT[27] - g_RT[29] - g_RT[47]));
  // reaction 223:  c4h7 + o2 => c4h6 + ho2
  k_f = 1000;
  qf[231] *= k_f;
  qr[231] *= k_f * exp(-(g_RT[3] - g_RT[11] - g_RT[27] + g_RT[29]));
  // reaction 224:  c4h6 + ho2 => c4h7 + o2
  k_f = 100000 * exp(-(8554.68331868023) * invT);
  qf[232] *= k_f;
  qr[232] *= k_f * exp(-(-g_RT[3] + g_RT[11] + g_RT[27] - g_RT[29]));
  // reaction 225:  c4h7 + h => c4h6 + h2
  k_f = 31600000;
  qf[233] *= k_f;
  qr[233] *= k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[27] + g_RT[29]));
  // reaction 226:  c4h6 + h2 => c4h7 + h
  k_f = 10660000 * exp(-(28587.7387843661) * invT);
  qf[234] *= k_f;
  qr[234] *= k_f * exp(-(-g_RT[0] + g_RT[1] + g_RT[27] - g_RT[29]));
  // reaction 227:  c2h5 + c4h7 => c2h6 + c4h6
  k_f = 3980000;
  qf[235] *= k_f;
  qr[235] *= k_f * exp(-(-g_RT[15] + g_RT[17] - g_RT[27] + g_RT[29]));
  // reaction 228:  c2h6 + c4h6 => c2h5 + c4h7
  k_f = 3211000 * exp(-(25080.3186237072) * invT);
  qf[236] *= k_f;
  qr[236] *= k_f * exp(-(g_RT[15] - g_RT[17] + g_RT[27] - g_RT[29]));
  // reaction 229:  c2h5 + c4h7 => c2h4 + c4h8-1
  k_f = 9.24 * exp((1.5) * logT - (-484.09443250414) * invT);
  qf[237] *= k_f;
  qr[237] *= k_f * exp(-(-g_RT[16] + g_RT[17] + g_RT[29] - g_RT[30]));
  // reaction 230:  c2h4 + c4h8-1 => c2h5 + c4h7
  k_f = 0.0007807 * exp((2.91) * logT - (25643.9212894085) * invT);
  qf[238] *= k_f;
  qr[238] *= k_f * exp(-(g_RT[16] - g_RT[17] - g_RT[29] + g_RT[30]));
  // reaction 231:  c2h3 + c4h7 => c2h4 + c4h6
  k_f = 3980000;
  qf[239] *= k_f;
  qr[239] *= k_f * exp(-(-g_RT[16] + g_RT[19] - g_RT[27] + g_RT[29]));
  // reaction 232:  c2h4 + c4h6 => c2h3 + c4h7
  k_f = 11570000 * exp(-(29040.6337835904) * invT);
  qf[240] *= k_f;
  qr[240] *= k_f * exp(-(g_RT[16] - g_RT[19] + g_RT[27] - g_RT[29]));
  // reaction 233:  c4h8-1 => c3h5-a + ch3
  k_f = 5e+15 * exp(-(35728.3832721351) * invT);
  qf[241] *= k_f;
  qr[241] *= k_f * exp(-(-g_RT[9] + g_RT[30] - g_RT[47])) * (refCinv);
  // reaction 234:  c3h5-a + ch3 => c4h8-1
  k_f = 5000000;
  qf[242] *= k_f;
  qr[242] *= k_f * exp(-(g_RT[9] - g_RT[30] + g_RT[47])) * (refC);
  // reaction 235:  c4h8-1 => c2h3 + c2h5
  k_f = 1e+19 * exp((-1) * logT - (48696.2767499227) * invT);
  qf[243] *= k_f;
  qr[243] *= k_f * exp(-(-g_RT[17] - g_RT[19] + g_RT[30])) * (refCinv);
  // reaction 236:  c2h3 + c2h5 => c4h8-1
  k_f = 9000000;
  qf[244] *= k_f;
  qr[244] *= k_f * exp(-(g_RT[17] + g_RT[19] - g_RT[30])) * (refC);
  // reaction 237:  c4h8-1 => c4h7 + h
  k_f = 4.107e+18 * exp((-1) * logT - (48988.1424160895) * invT);
  qf[245] *= k_f;
  qr[245] *= k_f * exp(-(-g_RT[0] - g_RT[29] + g_RT[30])) * (refCinv);
  // reaction 238:  c4h7 + h => c4h8-1
  k_f = 50000000;
  qf[246] *= k_f;
  qr[246] *= k_f * exp(-(g_RT[0] + g_RT[29] - g_RT[30])) * (refC);
  // reaction 239:  c4h8-1 + ch3 => c4h7 + ch4
  k_f = 100000 * exp(-(3673.48166037445) * invT);
  qf[247] *= k_f;
  qr[247] *= k_f * exp(-(g_RT[9] - g_RT[10] - g_RT[29] + g_RT[30]));
  // reaction 240:  c4h7 + ch4 => c4h8-1 + ch3
  k_f = 600000 * exp(-(8987.44965127229) * invT);
  qf[248] *= k_f;
  qr[248] *= k_f * exp(-(-g_RT[9] + g_RT[10] + g_RT[29] - g_RT[30]));
  // reaction 241:  c4h8-1 + h => c4h7 + h2
  k_f = 50000000 * exp(-(1962.54499663841) * invT);
  qf[249] *= k_f;
  qr[249] *= k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[29] + g_RT[30]));
  // reaction 242:  c4h7 + h2 => c4h8-1 + h
  k_f = 40000000 * exp(-(12681.0599782789) * invT);
  qf[250] *= k_f;
  qr[250] *= k_f * exp(-(-g_RT[0] + g_RT[1] + g_RT[29] - g_RT[30]));
  // reaction 243:  c4h8-1 + oh => c4h7 + h2o
  k_f = 22500000 * exp(-(1115.63134808906) * invT);
  qf[251] *= k_f;
  qr[251] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[29] + g_RT[30]));
  // reaction 244:  c4h7 + h2o => c4h8-1 + oh
  k_f = 4772000 * exp(-(13320.1451438509) * invT);
  qf[252] *= k_f;
  qr[252] *= k_f * exp(-(-g_RT[4] + g_RT[5] + g_RT[29] - g_RT[30]));
  // reaction 245:  c3h5-a + c4h8-1 => c3h6 + c4h7
  k_f = 79000 * exp(-(6239.88665597852) * invT);
  qf[253] *= k_f;
  qr[253] *= k_f * exp(-(-g_RT[26] - g_RT[29] + g_RT[30] + g_RT[47]));
  // reaction 246:  c3h6 + c4h7 => c3h5-a + c4h8-1
  k_f = 100000 * exp(-(8806.29165158259) * invT);
  qf[254] *= k_f;
  qr[254] *= k_f * exp(-(g_RT[26] + g_RT[29] - g_RT[30] - g_RT[47]));
  // reaction 247:  c4h8-1 + ho2 => c4h7 + h2o2
  k_f = 1400000 * exp(-(7497.92832049032) * invT);
  qf[255] *= k_f;
  qr[255] *= k_f * exp(-(g_RT[11] - g_RT[12] - g_RT[29] + g_RT[30]));
  // reaction 248:  c4h7 + h2o2 => c4h8-1 + ho2
  k_f = 316000 * exp(-(6541.81665546136) * invT);
  qf[256] *= k_f;
  qr[256] *= k_f * exp(-(-g_RT[11] + g_RT[12] + g_RT[29] - g_RT[30]));
  // reaction 249:  c4h8-1 + o2 => c4h7 + ho2
  k_f = 27000000 * exp(-(16706.7933047167) * invT);
  qf[257] *= k_f;
  qr[257] *= k_f * exp(-(g_RT[3] - g_RT[11] - g_RT[29] + g_RT[30]));
  // reaction 250:  c4h7 + ho2 => c4h8-1 + o2
  k_f = 300000;
  qf[258] *= k_f;
  qr[258] *= k_f * exp(-(-g_RT[3] + g_RT[11] + g_RT[29] - g_RT[30]));
  // reaction 251:  pc4h9 => c2h4 + c2h5
  k_f = 7.497e+17 * exp((-1.41) * logT - (14885.1489745036) * invT);
  qf[259] *= k_f;
  qr[259] *= k_f * exp(-(-g_RT[16] - g_RT[17] + g_RT[31])) * (refCinv);
  // reaction 252:  c2h4 + c2h5 => pc4h9
  k_f = 330000 * exp(-(3623.15999379398) * invT);
  qf[260] *= k_f;
  qr[260] *= k_f * exp(-(g_RT[16] + g_RT[17] - g_RT[31])) * (refC);
  // reaction 253:  pc4h9 => c4h8-1 + h
  k_f = 1.159e+17 * exp((-1.17) * logT - (19202.7479671081) * invT);
  qf[261] *= k_f;
  qr[261] *= k_f * exp(-(-g_RT[0] - g_RT[30] + g_RT[31])) * (refCinv);
  // reaction 254:  c4h8-1 + h => pc4h9
  k_f = 10000000 * exp(-(1459.32833083369) * invT);
  qf[262] *= k_f;
  qr[262] *= k_f * exp(-(g_RT[0] + g_RT[30] - g_RT[31])) * (refC);
  // reaction 255:  o2 + pc4h9 => c4h8-1 + ho2
  k_f = 3e-25 * exp(-(1509.64999741416) * invT);
  qf[263] *= k_f;
  qr[263] *= k_f * exp(-(g_RT[3] - g_RT[11] - g_RT[30] + g_RT[31]));
  // reaction 256:  c4h8-1 + ho2 => o2 + pc4h9
  k_f = 2e-25 * exp(-(8806.29165158259) * invT);
  qf[264] *= k_f;
  qr[264] *= k_f * exp(-(-g_RT[3] + g_RT[11] + g_RT[30] - g_RT[31]));
  // reaction 257:  ch3coch2 => ch2co + ch3
  k_f = 100000000000000 * exp(-(15599.7166399463) * invT);
  qf[265] *= k_f;
  qr[265] *= k_f * exp(-(-g_RT[9] - g_RT[20] + g_RT[32])) * (refCinv);
  // reaction 258:  ch2co + ch3 => ch3coch2
  k_f = 100000 * exp(-(3019.29999482832) * invT);
  qf[266] *= k_f;
  qr[266] *= k_f * exp(-(g_RT[9] + g_RT[20] - g_RT[32])) * (refC);
  // reaction 259:  c2h5co => c2h5 + co
  k_f = 1.834e+15 * exp((-0.73) * logT - (6496.52715553893) * invT);
  qf[267] *= k_f;
  qr[267] *= k_f * exp(-(-g_RT[6] - g_RT[17] + g_RT[34])) * (refCinv);
  // reaction 260:  c2h5 + co => c2h5co
  k_f = 151000 * exp(-(2420.4721625207) * invT);
  qf[268] *= k_f;
  qr[268] *= k_f * exp(-(g_RT[6] + g_RT[17] - g_RT[34])) * (refC);
  // reaction 261:  c2h5cho + h => c2h5co + h2
  k_f = 40000000 * exp(-(2113.50999637982) * invT);
  qf[269] *= k_f;
  qr[269] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[33] - g_RT[34]));
  // reaction 262:  c2h5co + h2 => c2h5cho + h
  k_f = 5854000 * exp(-(10361.2311489192) * invT);
  qf[270] *= k_f;
  qr[270] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[33] + g_RT[34]));
  // reaction 263:  c2h5cho + o => c2h5co + oh
  k_f = 5000000 * exp(-(900.757831790448) * invT);
  qf[271] *= k_f;
  qr[271] *= k_f * exp(-(g_RT[2] - g_RT[4] + g_RT[33] - g_RT[34]));
  // reaction 264:  c2h5co + oh => c2h5cho + o
  k_f = 321400 * exp(-(8091.72398613989) * invT);
  qf[272] *= k_f;
  qr[272] *= k_f * exp(-(-g_RT[2] + g_RT[4] - g_RT[33] + g_RT[34]));
  // reaction 265:  c2h5cho + oh => c2h5co + h2o
  k_f = 26900 * exp((0.76) * logT - (-171.093666373605) * invT);
  qf[273] *= k_f;
  qr[273] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[33] - g_RT[34]));
  // reaction 266:  c2h5co + h2o => c2h5cho + oh
  k_f = 17050 * exp((0.76) * logT - (15700.3599731073) * invT);
  qf[274] *= k_f;
  qr[274] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[33] + g_RT[34]));
  // reaction 267:  c2h5cho + ch3 => c2h5co + ch4
  k_f = 2.608 * exp((1.78) * logT - (2974.5137115717) * invT);
  qf[275] *= k_f;
  qr[275] *= k_f * exp(-(g_RT[9] - g_RT[10] + g_RT[33] - g_RT[34]));
  // reaction 268:  c2h5co + ch4 => c2h5cho + ch3
  k_f = 9.972 * exp((1.78) * logT - (11463.2756470315) * invT);
  qf[276] *= k_f;
  qr[276] *= k_f * exp(-(-g_RT[9] + g_RT[10] - g_RT[33] + g_RT[34]));
  // reaction 269:  c2h5cho + ho2 => c2h5co + h2o2
  k_f = 2800000 * exp(-(6843.74665494419) * invT);
  qf[277] *= k_f;
  qr[277] *= k_f * exp(-(g_RT[11] - g_RT[12] + g_RT[33] - g_RT[34]));
  // reaction 270:  c2h5co + h2o2 => c2h5cho + ho2
  k_f = 10530000 * exp((-0.33) * logT - (6884.00398820857) * invT);
  qf[278] *= k_f;
  qr[278] *= k_f * exp(-(-g_RT[11] + g_RT[12] - g_RT[33] + g_RT[34]));
  // reaction 271:  c2h5 + c2h5cho => c2h5co + c2h6
  k_f = 1000000 * exp(-(4025.73332643776) * invT);
  qf[279] *= k_f;
  qr[279] *= k_f * exp(-(-g_RT[15] + g_RT[17] + g_RT[33] - g_RT[34]));
  // reaction 272:  c2h5co + c2h6 => c2h5 + c2h5cho
  k_f = 598400000 * exp((-0.57) * logT - (10416.5849821577) * invT);
  qf[280] *= k_f;
  qr[280] *= k_f * exp(-(g_RT[15] - g_RT[17] - g_RT[33] + g_RT[34]));
  // reaction 273:  c2h5cho => c2h5 + hco
  k_f = 9.85e+18 * exp((-0.73) * logT - (41117.8337629036) * invT);
  qf[281] *= k_f;
  qr[281] *= k_f * exp(-(-g_RT[7] - g_RT[17] + g_RT[33])) * (refCinv);
  // reaction 274:  c2h5 + hco => c2h5cho
  k_f = 18100000;
  qf[282] *= k_f;
  qr[282] *= k_f * exp(-(g_RT[7] + g_RT[17] - g_RT[33])) * (refC);
  // reaction 275:  c2h5cho + o2 => c2h5co + ho2
  k_f = 10050000 * exp(-(20480.9182982521) * invT);
  qf[283] *= k_f;
  qr[283] *= k_f * exp(-(g_RT[3] - g_RT[11] + g_RT[33] - g_RT[34]));
  // reaction 276:  c2h5co + ho2 => c2h5cho + o2
  k_f = 26720 * exp((0.33) * logT - (-199.273799658669) * invT);
  qf[284] *= k_f;
  qr[284] *= k_f * exp(-(-g_RT[3] + g_RT[11] - g_RT[33] + g_RT[34]));
  // reaction 277:  c2h3 + c2h5cho => c2h4 + c2h5co
  k_f = 1700000 * exp(-(4247.14865939183) * invT);
  qf[285] *= k_f;
  qr[285] *= k_f * exp(-(-g_RT[16] + g_RT[19] + g_RT[33] - g_RT[34]));
  // reaction 278:  c2h4 + c2h5co => c2h3 + c2h5cho
  k_f = 3661 * exp((0.83) * logT - (12167.7789791581) * invT);
  qf[286] *= k_f;
  qr[286] *= k_f * exp(-(g_RT[16] - g_RT[19] - g_RT[33] + g_RT[34]));
  // reaction 279:  c2h5cho + c3h5-a => c2h5co + c3h6
  k_f = 1700000 * exp(-(4247.14865939183) * invT);
  qf[287] *= k_f;
  qr[287] *= k_f * exp(-(-g_RT[26] + g_RT[33] - g_RT[34] + g_RT[47]));
  // reaction 280:  c2h5co + c3h6 => c2h5cho + c3h5-a
  k_f = 10000000 * exp(-(14090.0666425322) * invT);
  qf[288] *= k_f;
  qr[288] *= k_f * exp(-(g_RT[26] - g_RT[33] + g_RT[34] - g_RT[47]));
  // reaction 281:  c5h10-1 => c2h5 + c3h5-a
  k_f = 9.173e+20 * exp((-1.63) * logT - (37233.0011028912) * invT);
  qf[289] *= k_f;
  qr[289] *= k_f * exp(-(-g_RT[17] + g_RT[36] - g_RT[47])) * (refCinv);
  // reaction 282:  c2h5 + c3h5-a => c5h10-1
  k_f = 4000000 * exp(-(-299.917132819613) * invT);
  qf[290] *= k_f;
  qr[290] *= k_f * exp(-(g_RT[17] - g_RT[36] + g_RT[47])) * (refC);
  // reaction 283:  c5h10-1 + h => c5h9 + h2
  k_f = 28000000 * exp(-(2012.86666321888) * invT);
  qf[291] *= k_f;
  qr[291] *= k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[35] + g_RT[36]));
  // reaction 284:  c5h9 + h2 => c5h10-1 + h
  k_f = 1000000 * exp(-(7045.03332126608) * invT);
  qf[292] *= k_f;
  qr[292] *= k_f * exp(-(-g_RT[0] + g_RT[1] + g_RT[35] - g_RT[36]));
  // reaction 285:  c5h10-1 + o => c5h9 + oh
  k_f = 0.254 * exp((2.56) * logT - (-568.634832359333) * invT);
  qf[293] *= k_f;
  qr[293] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[35] + g_RT[36]));
  // reaction 286:  c5h9 + oh => c5h10-1 + o
  k_f = 700000 * exp(-(15046.1783075611) * invT);
  qf[294] *= k_f;
  qr[294] *= k_f * exp(-(-g_RT[2] + g_RT[4] + g_RT[35] - g_RT[36]));
  // reaction 287:  c5h10-1 + o => hco + pc4h9
  k_f = 100000;
  qf[295] *= k_f;
  qr[295] *= k_f * exp(-(g_RT[2] - g_RT[7] - g_RT[31] + g_RT[36]));
  // reaction 288:  c5h10-1 + o => ch3co + nc3h7
  k_f = 100000;
  qf[296] *= k_f;
  qr[296] *= k_f * exp(-(g_RT[2] - g_RT[22] - g_RT[28] + g_RT[36]));
  // reaction 289:  c5h10-1 + oh => c5h9 + h2o
  k_f = 5.12 * exp((2) * logT - (-149.958566409806) * invT);
  qf[297] *= k_f;
  qr[297] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[35] + g_RT[36]));
  // reaction 290:  c5h9 + h2o => c5h10-1 + oh
  k_f = 20.6 * exp((2.16) * logT - (17597.486803191) * invT);
  qf[298] *= k_f;
  qr[298] *= k_f * exp(-(-g_RT[4] + g_RT[5] + g_RT[35] - g_RT[36]));
  // reaction 291:  c5h10-1 + oh => ch2o + pc4h9
  k_f = 100000;
  qf[299] *= k_f;
  qr[299] *= k_f * exp(-(g_RT[4] - g_RT[13] - g_RT[31] + g_RT[36]));
  // reaction 292:  c5h10-1 + oh => ch3cho + nc3h7
  k_f = 100000;
  qf[300] *= k_f;
  qr[300] *= k_f * exp(-(g_RT[4] - g_RT[24] - g_RT[28] + g_RT[36]));
  // reaction 293:  c5h10-1 + ch3 => c5h9 + ch4
  k_f = 100000 * exp(-(3673.48166037445) * invT);
  qf[301] *= k_f;
  qr[301] *= k_f * exp(-(g_RT[9] - g_RT[10] - g_RT[35] + g_RT[36]));
  // reaction 294:  c5h9 + ch4 => c5h10-1 + ch3
  k_f = 600000 * exp(-(9007.57831790448) * invT);
  qf[302] *= k_f;
  qr[302] *= k_f * exp(-(-g_RT[9] + g_RT[10] + g_RT[35] - g_RT[36]));
  // reaction 295:  h + h2o2 => h2 + ho2
  k_f = 48200000 * exp(-(4000.57249314752) * invT);
  qf[303] *= k_f;
  qr[303] *= k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[11] + g_RT[12]));
  // reaction 296:  h2 + ho2 => h + h2o2
  k_f = 1875000 * exp((0.33) * logT - (12208.0363124225) * invT);
  qf[304] *= k_f;
  qr[304] *= k_f * exp(-(-g_RT[0] + g_RT[1] + g_RT[11] - g_RT[12]));
  // reaction 297:  hco + o => co2 + h
  k_f = 30000000;
  qf[305] *= k_f;
  qr[305] *= k_f * exp(-(-g_RT[0] + g_RT[2] + g_RT[7] - g_RT[8]));
  // reaction 298:  co2 + h => hco + o
  k_f = 9677000000 * exp(-(55454.4765716801) * invT);
  qf[306] *= k_f;
  qr[306] *= k_f * exp(-(g_RT[0] - g_RT[2] - g_RT[7] + g_RT[8]));
  // reaction 299:  ch3co + h => ch2co + h2
  k_f = 20000000;
  qf[307] *= k_f;
  qr[307] *= k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[20] + g_RT[22]));
  // reaction 300:  ch2co + h2 => ch3co + h
  k_f = 562600000000 * exp((-1.13) * logT - (32054.9016117606) * invT);
  qf[308] *= k_f;
  qr[308] *= k_f * exp(-(-g_RT[0] + g_RT[1] + g_RT[20] - g_RT[22]));
  // reaction 301:  ch3co + o => ch2co + oh
  k_f = 20000000;
  qf[309] *= k_f;
  qr[309] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[20] + g_RT[22]));
  // reaction 302:  ch2co + oh => ch3co + o
  k_f = 5951000000000 * exp((-1.13) * logT - (60738.2515626297) * invT);
  qf[310] *= k_f;
  qr[310] *= k_f * exp(-(-g_RT[2] + g_RT[4] + g_RT[20] - g_RT[22]));
  // reaction 303:  ch3 + ch3co => ch2co + ch4
  k_f = 50000000;
  qf[311] *= k_f;
  qr[311] *= k_f * exp(-(g_RT[9] - g_RT[10] - g_RT[20] + g_RT[22]));
  // reaction 304:  ch2co + ch4 => ch3 + ch3co
  k_f = 819700000000 * exp((-0.67) * logT - (40171.7864311908) * invT);
  qf[312] *= k_f;
  qr[312] *= k_f * exp(-(-g_RT[9] + g_RT[10] + g_RT[20] - g_RT[22]));
  // reaction 305:  c2h4 + o => ch2cho + h
  k_f = 3.39 * exp((1.88) * logT - (90.0757831790448) * invT);
  qf[313] *= k_f;
  qr[313] *= k_f * exp(-(-g_RT[0] + g_RT[2] + g_RT[16] - g_RT[23]));
  // reaction 306:  ch2cho + h => c2h4 + o
  k_f = 9.481 * exp((1.79) * logT - (8076.62748616575) * invT);
  qf[314] *= k_f;
  qr[314] *= k_f * exp(-(g_RT[0] - g_RT[2] - g_RT[16] + g_RT[23]));
  // reaction 307:  c2h5 + o => ch3cho + h
  k_f = 50000000;
  qf[315] *= k_f;
  qr[315] *= k_f * exp(-(-g_RT[0] + g_RT[2] + g_RT[17] - g_RT[24]));
  // reaction 308:  ch3cho + h => c2h5 + o
  k_f = 550500000 * exp((0.11) * logT - (37434.2877692131) * invT);
  qf[316] *= k_f;
  qr[316] *= k_f * exp(-(g_RT[0] - g_RT[2] - g_RT[17] + g_RT[24]));
  // reaction 309:  c2h3 + c2h4 => c4h6 + h
  k_f = 500000 * exp(-(3673.48166037445) * invT);
  qf[317] *= k_f;
  qr[317] *= k_f * exp(-(-g_RT[0] + g_RT[16] + g_RT[19] - g_RT[27]));
  // reaction 310:  c4h6 + h => c2h3 + c2h4
  k_f = 10000000 * exp(-(2365.11832928218) * invT);
  qf[318] *= k_f;
  qr[318] *= k_f * exp(-(g_RT[0] - g_RT[16] - g_RT[19] + g_RT[27]));
  // reaction 311:  c2h5o + M => ch2o + ch3 + M
  k_f = 1.35e+32 * exp((-6.96) * logT - (11976.5566461523) * invT);
  Corr = mixture;
  qf[25] *= Corr * k_f;
  qr[25] *= Corr * k_f * exp(-(-g_RT[9] - g_RT[13] + g_RT[37])) * (refCinv);
  // reaction 312:  ch2o + ch3 + M => c2h5o + M
  k_f = 6.442e+24 * exp((-6.99) * logT - (8479.20081880953) * invT);
  Corr = mixture;
  qf[26] *= Corr * k_f;
  qr[26] *= Corr * k_f * exp(-(g_RT[9] + g_RT[13] - g_RT[37])) * (refC);
  // reaction 313:  c2h5o + o2 => ch3cho + ho2
  k_f = 42800 * exp(-(552.028682387778) * invT);
  qf[319] *= k_f;
  qr[319] *= k_f * exp(-(g_RT[3] - g_RT[11] - g_RT[24] + g_RT[37]));
  // reaction 314:  ch3cho + ho2 => c2h5o + o2
  k_f = 387.2 * exp((0.44) * logT - (16042.5473058545) * invT);
  qf[320] *= k_f;
  qr[320] *= k_f * exp(-(-g_RT[3] + g_RT[11] + g_RT[24] - g_RT[37]));
  // reaction 315:  h2o2 + o2 => 2 ho2
  k_f = 183900000 * exp((-0.66) * logT - (19897.1869659186) * invT);
  qf[321] *= k_f;
  qr[321] *= k_f * exp(-(g_RT[3] - 2.000000 * g_RT[11] + g_RT[12]));
  // reaction 316:  2 ho2 => h2o2 + o2
  k_f = 130000 * exp(-(-819.739948595888) * invT);
  qf[322] *= k_f;
  qr[322] *= k_f * exp(-(-g_RT[3] + 2.000000 * g_RT[11] - g_RT[12]));
  // reaction 317:  c2h3 + o2 => ch2cho + o
  k_f = 350000000 * exp((-0.61) * logT - (2646.91966213283) * invT);
  qf[323] *= k_f;
  qr[323] *= k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[19] - g_RT[23]));
  // reaction 318:  ch2cho + o => c2h3 + o2
  k_f = 2589000 * exp((0.12) * logT - (3250.27644443268) * invT);
  qf[324] *= k_f;
  qr[324] *= k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[19] + g_RT[23]));
  // reaction 319:  ch3o2 + M => ch3 + o2 + M
  k_f = 4.343e+21 * exp((-3.42) * logT - (15333.0118070698) * invT);
  Corr = mixture;
  qf[27] *= Corr * k_f;
  qr[27] *= Corr * k_f * exp(-(-g_RT[3] - g_RT[9] + g_RT[38])) * (refCinv);
  // reaction 320:  ch3 + o2 + M => ch3o2 + M
  k_f = 54400000000000 * exp((-3.3) * logT);
  Corr = mixture;
  qf[28] *= Corr * k_f;
  qr[28] *= Corr * k_f * exp(-(g_RT[3] + g_RT[9] - g_RT[38])) * (refC);
  // reaction 321:  ch3o2h => ch3o + oh
  k_f = 631000000000000 * exp(-(21286.0649635396) * invT);
  qf[325] *= k_f;
  qr[325] *= k_f * exp(-(-g_RT[4] - g_RT[14] + g_RT[39])) * (refCinv);
  // reaction 322:  ch3o + oh => ch3o2h
  k_f = 116600 * exp((0.6) * logT - (-891.196715140159) * invT);
  qf[326] *= k_f;
  qr[326] *= k_f * exp(-(g_RT[4] + g_RT[14] - g_RT[39])) * (refC);
  // reaction 323:  c3h2 + o2 => co + h + hcco
  k_f = 50000000;
  qf[327] *= k_f;
  qr[327] *= k_f * exp(-(-g_RT[0] + g_RT[3] - g_RT[6] - g_RT[21] + g_RT[49])) *
             (refCinv);
  // reaction 324:  ch2o + ch3o2 => ch3o2h + hco
  k_f = 1990000 * exp(-(5867.50632328303) * invT);
  qf[328] *= k_f;
  qr[328] *= k_f * exp(-(-g_RT[7] + g_RT[13] + g_RT[38] - g_RT[39]));
  // reaction 325:  ch3o2h + hco => ch2o + ch3o2
  k_f = 8504000 * exp((-0.5) * logT - (3527.04561062528) * invT);
  qf[329] *= k_f;
  qr[329] *= k_f * exp(-(g_RT[7] - g_RT[13] - g_RT[38] + g_RT[39]));
  // reaction 326:  c2h4 + ch3o2 => c2h3 + ch3o2h
  k_f = 2230000 * exp(-(8650.29448518313) * invT);
  qf[330] *= k_f;
  qr[330] *= k_f * exp(-(g_RT[16] - g_RT[19] + g_RT[38] - g_RT[39]));
  // reaction 327:  c2h3 + ch3o2h => c2h4 + ch3o2
  k_f = 8112000000 * exp((-1.33) * logT - (-749.289615383228) * invT);
  qf[331] *= k_f;
  qr[331] *= k_f * exp(-(-g_RT[16] + g_RT[19] - g_RT[38] + g_RT[39]));
  // reaction 328:  ch3o2 + ch4 => ch3 + ch3o2h
  k_f = 181000 * exp(-(9299.44398407122) * invT);
  qf[332] *= k_f;
  qr[332] *= k_f * exp(-(-g_RT[9] + g_RT[10] + g_RT[38] - g_RT[39]));
  // reaction 329:  ch3 + ch3o2h => ch3o2 + ch4
  k_f = 370800 * exp((-0.5) * logT - (-667.768515522863) * invT);
  qf[333] *= k_f;
  qr[333] *= k_f * exp(-(g_RT[9] - g_RT[10] - g_RT[38] + g_RT[39]));
  // reaction 330:  c2h5 + ho2 => c2h5o + oh
  k_f = 32000000;
  qf[334] *= k_f;
  qr[334] *= k_f * exp(-(-g_RT[4] + g_RT[11] + g_RT[17] - g_RT[37]));
  // reaction 331:  c2h5o + oh => c2h5 + ho2
  k_f = 3075000000 * exp((-0.32) * logT - (13833.4261429717) * invT);
  qf[335] *= k_f;
  qr[335] *= k_f * exp(-(g_RT[4] - g_RT[11] - g_RT[17] + g_RT[37]));
  // reaction 332:  ch3 + ch3o2 => 2 ch3o
  k_f = 7000000 * exp(-(-503.21666580472) * invT);
  qf[336] *= k_f;
  qr[336] *= k_f * exp(-(g_RT[9] - 2.000000 * g_RT[14] + g_RT[38]));
  // reaction 333:  2 ch3o => ch3 + ch3o2
  k_f = 29710000000 * exp((-0.93) * logT - (14246.0638089316) * invT);
  qf[337] *= k_f;
  qr[337] *= k_f * exp(-(-g_RT[9] + 2.000000 * g_RT[14] - g_RT[38]));
  // reaction 334:  c2h5 + ch3o2 => c2h5o + ch3o
  k_f = 7000000 * exp(-(-503.21666580472) * invT);
  qf[338] *= k_f;
  qr[338] *= k_f * exp(-(-g_RT[14] + g_RT[17] - g_RT[37] + g_RT[38]));
  // reaction 335:  c2h5o + ch3o => c2h5 + ch3o2
  k_f = 65690000000 * exp((-0.9) * logT - (15730.5529730555) * invT);
  qf[339] *= k_f;
  qr[339] *= k_f * exp(-(g_RT[14] - g_RT[17] + g_RT[37] - g_RT[38]));
  // reaction 336:  ch3o2 + ho2 => ch3o2h + o2
  k_f = 17500 * exp(-(-1648.03458051046) * invT);
  qf[340] *= k_f;
  qr[340] *= k_f * exp(-(-g_RT[3] + g_RT[11] + g_RT[38] - g_RT[39]));
  // reaction 337:  ch3o2h + o2 => ch3o2 + ho2
  k_f = 51560000 * exp((-0.83) * logT - (17552.1973032686) * invT);
  qf[341] *= k_f;
  qr[341] *= k_f * exp(-(g_RT[3] - g_RT[11] - g_RT[38] + g_RT[39]));
  // reaction 338:  h2o2 + oh => h2o + ho2
  k_f = 580000000 * exp(-(4810.75132509312) * invT);
  qf[342] *= k_f;
  qr[342] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[11] + g_RT[12]));
  // reaction 339:  h2o + ho2 => h2o2 + oh
  k_f = 97710000 * exp((0.33) * logT - (20641.9476313096) * invT);
  qf[343] *= k_f;
  qr[343] *= k_f * exp(-(-g_RT[4] + g_RT[5] + g_RT[11] - g_RT[12]));
  // reaction 340:  2 ch3o2 => 2 ch3o + o2
  k_f = 14000000000 * exp((-1.61) * logT - (935.982998396779) * invT);
  qf[344] *= k_f;
  qr[344] *= k_f *
             exp(-(-g_RT[3] - 2.000000 * g_RT[14] + 2.000000 * g_RT[38])) *
             (refCinv);
  // reaction 341:  c2h6 + ch3o2 => c2h5 + ch3o2h
  k_f = 13200000 * exp(-(10300.8451490226) * invT);
  qf[345] *= k_f;
  qr[345] *= k_f * exp(-(g_RT[15] - g_RT[17] + g_RT[38] - g_RT[39]));
  // reaction 342:  c2h5 + ch3o2h => c2h6 + ch3o2
  k_f = 172800 * exp((0.06) * logT - (2431.54292916841) * invT);
  qf[346] *= k_f;
  qr[346] *= k_f * exp(-(-g_RT[15] + g_RT[17] - g_RT[38] + g_RT[39]));
  // reaction 343:  c2h5o + M => ch3cho + h + M
  k_f = 1.16e+29 * exp((-5.89) * logT - (12716.2851448853) * invT);
  Corr = mixture;
  qf[29] *= Corr * k_f;
  qr[29] *= Corr * k_f * exp(-(-g_RT[0] - g_RT[24] + g_RT[37])) * (refCinv);
  // reaction 344:  ch3cho + h + M => c2h5o + M
  k_f = 3.063e+18 * exp((-4.78) * logT - (3069.62166140879) * invT);
  Corr = mixture;
  qf[30] *= Corr * k_f;
  qr[30] *= Corr * k_f * exp(-(g_RT[0] + g_RT[24] - g_RT[37])) * (refC);
  // reaction 345:  ch3cho + ch3o2 => ch3co + ch3o2h
  k_f = 3010000 * exp(-(5998.34265639226) * invT);
  qf[347] *= k_f;
  qr[347] *= k_f * exp(-(-g_RT[22] + g_RT[24] + g_RT[38] - g_RT[39]));
  // reaction 346:  ch3co + ch3o2h => ch3cho + ch3o2
  k_f = 25190000 * exp((-0.51) * logT - (4524.42104225023) * invT);
  qf[348] *= k_f;
  qr[348] *= k_f * exp(-(g_RT[22] - g_RT[24] - g_RT[38] + g_RT[39]));
  // reaction 347:  c2h3co => c2h3 + co
  k_f = 304300000000000 * exp((-0.46) * logT - (15353.140473702) * invT);
  qf[349] *= k_f;
  qr[349] *= k_f * exp(-(-g_RT[6] - g_RT[19] + g_RT[40])) * (refCinv);
  // reaction 348:  c2h3 + co => c2h3co
  k_f = 151000 * exp(-(2420.4721625207) * invT);
  qf[350] *= k_f;
  qr[350] *= k_f * exp(-(g_RT[6] + g_RT[19] - g_RT[40])) * (refC);
  // reaction 349:  c2h3cho + oh => c2h3co + h2o
  k_f = 9.24 * exp((1.5) * logT - (-484.09443250414) * invT);
  qf[351] *= k_f;
  qr[351] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[40] + g_RT[41]));
  // reaction 350:  c2h3co + h2o => c2h3cho + oh
  k_f = 21.47 * exp((1.48) * logT - (17869.2238027256) * invT);
  qf[352] *= k_f;
  qr[352] *= k_f * exp(-(-g_RT[4] + g_RT[5] + g_RT[40] - g_RT[41]));
  // reaction 351:  c2h3cho + h => c2h3co + h2
  k_f = 13400000 * exp(-(1660.61499715557) * invT);
  qf[353] *= k_f;
  qr[353] *= k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[40] + g_RT[41]));
  // reaction 352:  c2h3co + h2 => c2h3cho + h
  k_f = 7191000 * exp((-0.02) * logT - (12389.1943121122) * invT);
  qf[354] *= k_f;
  qr[354] *= k_f * exp(-(-g_RT[0] + g_RT[1] + g_RT[40] - g_RT[41]));
  // reaction 353:  c2h3cho + o => c2h3co + oh
  k_f = 5940000 * exp(-(940.008731723216) * invT);
  qf[355] *= k_f;
  qr[355] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[40] + g_RT[41]));
  // reaction 354:  c2h3co + oh => c2h3cho + o
  k_f = 1400000 * exp((-0.02) * logT - (10612.8394818215) * invT);
  qf[356] *= k_f;
  qr[356] *= k_f * exp(-(-g_RT[2] + g_RT[4] + g_RT[40] - g_RT[41]));
  // reaction 355:  c2h3cho + ho2 => c2h3co + h2o2
  k_f = 3010000 * exp(-(5998.34265639226) * invT);
  qf[357] *= k_f;
  qr[357] *= k_f * exp(-(g_RT[11] - g_RT[12] - g_RT[40] + g_RT[41]));
  // reaction 356:  c2h3co + h2o2 => c2h3cho + ho2
  k_f = 41520000 * exp((-0.35) * logT - (8524.49031873195) * invT);
  qf[358] *= k_f;
  qr[358] *= k_f * exp(-(-g_RT[11] + g_RT[12] + g_RT[40] - g_RT[41]));
  // reaction 357:  c2h3cho + ch3 => c2h3co + ch4
  k_f = 2.608 * exp((1.78) * logT - (2974.5137115717) * invT);
  qf[359] *= k_f;
  qr[359] *= k_f * exp(-(g_RT[9] - g_RT[10] - g_RT[40] + g_RT[41]));
  // reaction 358:  c2h3co + ch4 => c2h3cho + ch3
  k_f = 36.56 * exp((1.76) * logT - (13944.1338094488) * invT);
  qf[360] *= k_f;
  qr[360] *= k_f * exp(-(-g_RT[9] + g_RT[10] + g_RT[40] - g_RT[41]));
  // reaction 359:  c2h3cho + ch3o2 => c2h3co + ch3o2h
  k_f = 3010000 * exp(-(5998.34265639226) * invT);
  qf[361] *= k_f;
  qr[361] *= k_f * exp(-(g_RT[38] - g_RT[39] - g_RT[40] + g_RT[41]));
  // reaction 360:  c2h3co + ch3o2h => c2h3cho + ch3o2
  k_f = 86450000 * exp((-0.53) * logT - (7004.7759880017) * invT);
  qf[362] *= k_f;
  qr[362] *= k_f * exp(-(-g_RT[38] + g_RT[39] + g_RT[40] - g_RT[41]));
  // reaction 361:  c3h5o => c2h3cho + h
  k_f = 100000000000000 * exp(-(14643.6049749173) * invT);
  qf[363] *= k_f;
  qr[363] *= k_f * exp(-(-g_RT[0] - g_RT[41] + g_RT[42])) * (refCinv);
  // reaction 362:  c2h3cho + h => c3h5o
  k_f = 771400 * exp((0.48) * logT - (8932.09581803377) * invT);
  qf[364] *= k_f;
  qr[364] *= k_f * exp(-(g_RT[0] + g_RT[41] - g_RT[42])) * (refC);
  // reaction 363:  c3h5o => c2h3 + ch2o
  k_f = 2028000000000 * exp((0.09) * logT - (11855.7846463592) * invT);
  qf[365] *= k_f;
  qr[365] *= k_f * exp(-(-g_RT[13] - g_RT[19] + g_RT[42])) * (refCinv);
  // reaction 364:  c2h3 + ch2o => c3h5o
  k_f = 150000 * exp(-(5334.09665753003) * invT);
  qf[366] *= k_f;
  qr[366] *= k_f * exp(-(g_RT[13] + g_RT[19] - g_RT[42])) * (refC);
  // reaction 365:  c3h5o + o2 => c2h3cho + ho2
  k_f = 1000000 * exp(-(3019.29999482832) * invT);
  qf[367] *= k_f;
  qr[367] *= k_f * exp(-(g_RT[3] - g_RT[11] - g_RT[41] + g_RT[42]));
  // reaction 366:  c2h3cho + ho2 => c3h5o + o2
  k_f = 128800 * exp(-(16102.933305751) * invT);
  qf[368] *= k_f;
  qr[368] *= k_f * exp(-(-g_RT[3] + g_RT[11] + g_RT[41] - g_RT[42]));
  // reaction 367:  c3h5-a + ho2 => c3h5o + oh
  k_f = 7000000 * exp(-(-503.21666580472) * invT);
  qf[369] *= k_f;
  qr[369] *= k_f * exp(-(-g_RT[4] + g_RT[11] - g_RT[42] + g_RT[47]));
  // reaction 368:  c3h5o + oh => c3h5-a + ho2
  k_f = 20410000 * exp((-0.16) * logT - (6169.43632276586) * invT);
  qf[370] *= k_f;
  qr[370] *= k_f * exp(-(g_RT[4] - g_RT[11] + g_RT[42] - g_RT[47]));
  // reaction 369:  c3h5-a + ch3o2 => c3h5o + ch3o
  k_f = 7000000 * exp(-(-503.21666580472) * invT);
  qf[371] *= k_f;
  qr[371] *= k_f * exp(-(-g_RT[14] + g_RT[38] - g_RT[42] + g_RT[47]));
  // reaction 370:  c3h5o + ch3o => c3h5-a + ch3o2
  k_f = 1994000000 * exp((-0.74) * logT - (8564.74765199633) * invT);
  qf[372] *= k_f;
  qr[372] *= k_f * exp(-(g_RT[14] - g_RT[38] + g_RT[42] - g_RT[47]));
  // reaction 371:  c3h6 + ch3o2 => c3h5-a + ch3o2h
  k_f = 324000 * exp(-(7497.92832049032) * invT);
  qf[373] *= k_f;
  qr[373] *= k_f * exp(-(g_RT[26] + g_RT[38] - g_RT[39] - g_RT[47]));
  // reaction 372:  c3h5-a + ch3o2h => c3h6 + ch3o2
  k_f = 20000 * exp(-(7548.2499870708) * invT);
  qf[374] *= k_f;
  qr[374] *= k_f * exp(-(-g_RT[26] - g_RT[38] + g_RT[39] + g_RT[47]));
  // reaction 373:  ch3 + oh => ch2(s) + h2o
  k_f = 26500000 * exp(-(1100.03163144912) * invT);
  qf[375] *= k_f;
  qr[375] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[9] - g_RT[50]));
  // reaction 374:  ch2(s) + h2o => ch3 + oh
  k_f = 32360 * exp((0.89) * logT - (609.395382289516) * invT);
  qf[376] *= k_f;
  qr[376] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[9] + g_RT[50]));
  // reaction 375:  c4h7o => c2h3 + ch3cho
  k_f = 794000000000000 * exp(-(9561.11665028967) * invT);
  qf[377] *= k_f;
  qr[377] *= k_f * exp(-(-g_RT[19] - g_RT[24] + g_RT[43])) * (refCinv);
  // reaction 376:  c2h3 + ch3cho => c4h7o
  k_f = 10000 * exp(-(10064.3333160944) * invT);
  qf[378] *= k_f;
  qr[378] *= k_f * exp(-(g_RT[19] + g_RT[24] - g_RT[43])) * (refC);
  // reaction 377:  c4h7o => c2h3cho + ch3
  k_f = 794000000000000 * exp(-(9561.11665028967) * invT);
  qf[379] *= k_f;
  qr[379] *= k_f * exp(-(-g_RT[9] - g_RT[41] + g_RT[43])) * (refCinv);
  // reaction 378:  c2h3cho + ch3 => c4h7o
  k_f = 10000 * exp(-(10064.3333160944) * invT);
  qf[380] *= k_f;
  qr[380] *= k_f * exp(-(g_RT[9] + g_RT[41] - g_RT[43])) * (refC);
  // reaction 379:  c4h7 + ho2 => c4h7o + oh
  k_f = 7000000 * exp(-(-503.21666580472) * invT);
  qf[381] *= k_f;
  qr[381] *= k_f * exp(-(-g_RT[4] + g_RT[11] + g_RT[29] - g_RT[43]));
  // reaction 380:  c4h7o + oh => c4h7 + ho2
  k_f = 100800 * exp((0.26) * logT - (8499.32948544172) * invT);
  qf[382] *= k_f;
  qr[382] *= k_f * exp(-(g_RT[4] - g_RT[11] - g_RT[29] + g_RT[43]));
  // reaction 381:  c4h7 + ch3o2 => c4h7o + ch3o
  k_f = 7000000 * exp(-(-503.21666580472) * invT);
  qf[383] *= k_f;
  qr[383] *= k_f * exp(-(-g_RT[14] + g_RT[29] + g_RT[38] - g_RT[43]));
  // reaction 382:  c4h7o + ch3o => c4h7 + ch3o2
  k_f = 9844000 * exp((-0.32) * logT - (10894.6408146722) * invT);
  qf[384] *= k_f;
  qr[384] *= k_f * exp(-(g_RT[14] - g_RT[29] - g_RT[38] + g_RT[43]));
  // reaction 383:  c4h8-1 + oh => ch2o + nc3h7
  k_f = 1000000;
  qf[385] *= k_f;
  qr[385] *= k_f * exp(-(g_RT[4] - g_RT[13] - g_RT[28] + g_RT[30]));
  // reaction 384:  ch2o + nc3h7 => c4h8-1 + oh
  k_f = 1620000 * exp(-(6657.55648859644) * invT);
  qf[386] *= k_f;
  qr[386] *= k_f * exp(-(-g_RT[4] + g_RT[13] + g_RT[28] - g_RT[30]));
  // reaction 385:  c4h8-1 + o => c3h6 + ch2o
  k_f = 0.723 * exp((2.34) * logT - (-528.377499094956) * invT);
  qf[387] *= k_f;
  qr[387] *= k_f * exp(-(g_RT[2] - g_RT[13] - g_RT[26] + g_RT[30]));
  // reaction 386:  c3h6 + ch2o => c4h8-1 + o
  k_f = 0.2 * exp((2.34) * logT - (40398.2339308029) * invT);
  qf[388] *= k_f;
  qr[388] *= k_f * exp(-(-g_RT[2] + g_RT[13] + g_RT[26] - g_RT[30]));
  // reaction 387:  c4h8-1 + o => c2h4 + ch3cho
  k_f = 13000000 * exp(-(427.734165934012) * invT);
  qf[389] *= k_f;
  qr[389] *= k_f * exp(-(g_RT[2] - g_RT[16] - g_RT[24] + g_RT[30]));
  // reaction 388:  c2h4 + ch3cho => c4h8-1 + o
  k_f = 2070000 * exp(-(42823.7382599816) * invT);
  qf[390] *= k_f;
  qr[390] *= k_f * exp(-(-g_RT[2] + g_RT[16] + g_RT[24] - g_RT[30]));
  // reaction 389:  c4h8-1 + o => c2h5 + ch3co
  k_f = 13000000 * exp(-(427.734165934012) * invT);
  qf[391] *= k_f;
  qr[391] *= k_f * exp(-(g_RT[2] - g_RT[17] - g_RT[22] + g_RT[30]));
  // reaction 390:  c2h5 + ch3co => c4h8-1 + o
  k_f = 2350000 * exp(-(19197.7158004501) * invT);
  qf[392] *= k_f;
  qr[392] *= k_f * exp(-(-g_RT[2] + g_RT[17] + g_RT[22] - g_RT[30]));
  // reaction 391:  c4h8-1 + oh => c2h5 + ch3cho
  k_f = 1000000;
  qf[393] *= k_f;
  qr[393] *= k_f * exp(-(g_RT[4] - g_RT[17] - g_RT[24] + g_RT[30]));
  // reaction 392:  c2h5 + ch3cho => c4h8-1 + oh
  k_f = 9330000 * exp(-(10029.1081494881) * invT);
  qf[394] *= k_f;
  qr[394] *= k_f * exp(-(-g_RT[4] + g_RT[17] + g_RT[24] - g_RT[30]));
  // reaction 393:  c4h8-1 + oh => c2h6 + ch3co
  k_f = 500000;
  qf[395] *= k_f;
  qr[395] *= k_f * exp(-(g_RT[4] - g_RT[15] - g_RT[22] + g_RT[30]));
  // reaction 394:  c2h6 + ch3co => c4h8-1 + oh
  k_f = 9830000 * exp(-(16319.3164720471) * invT);
  qf[396] *= k_f;
  qr[396] *= k_f * exp(-(-g_RT[4] + g_RT[15] + g_RT[22] - g_RT[30]));
  // reaction 395:  c4h8-1 + o => c2h5co + ch3
  k_f = 13000000 * exp(-(427.734165934012) * invT);
  qf[397] *= k_f;
  qr[397] *= k_f * exp(-(g_RT[2] - g_RT[9] + g_RT[30] - g_RT[34]));
  // reaction 396:  c2h5co + ch3 => c4h8-1 + o
  k_f = 480000 * exp(-(16379.7024719436) * invT);
  qf[398] *= k_f;
  qr[398] *= k_f * exp(-(-g_RT[2] + g_RT[9] - g_RT[30] + g_RT[34]));
  // reaction 397:  c4h8-1 + oh => c2h5cho + ch3
  k_f = 1000000;
  qf[399] *= k_f;
  qr[399] *= k_f * exp(-(g_RT[4] - g_RT[9] + g_RT[30] - g_RT[33]));
  // reaction 398:  c2h5cho + ch3 => c4h8-1 + oh
  k_f = 49500 * exp(-(8524.49031873195) * invT);
  qf[400] *= k_f;
  qr[400] *= k_f * exp(-(-g_RT[4] + g_RT[9] - g_RT[30] + g_RT[33]));
  // reaction 399:  c4h8-1 + oh => c2h5co + ch4
  k_f = 500000;
  qf[401] *= k_f;
  qr[401] *= k_f * exp(-(g_RT[4] - g_RT[10] + g_RT[30] - g_RT[34]));
  // reaction 400:  c2h5co + ch4 => c4h8-1 + oh
  k_f = 22000000 * exp(-(17245.2351371277) * invT);
  qf[402] *= k_f;
  qr[402] *= k_f * exp(-(-g_RT[4] + g_RT[10] - g_RT[30] + g_RT[34]));
  // reaction 401:  c4h8-1 + ch3o2 => c4h7 + ch3o2h
  k_f = 1400000 * exp(-(7497.92832049032) * invT);
  qf[403] *= k_f;
  qr[403] *= k_f * exp(-(-g_RT[29] + g_RT[30] + g_RT[38] - g_RT[39]));
  // reaction 402:  c4h7 + ch3o2h => c4h8-1 + ch3o2
  k_f = 316000 * exp(-(6541.81665546136) * invT);
  qf[404] *= k_f;
  qr[404] *= k_f * exp(-(g_RT[29] - g_RT[30] - g_RT[38] + g_RT[39]));
  // reaction 403:  c4h8ooh1-3o2 => c4h8ooh1-3 + o2
  k_f = 5.601e+22 * exp((-2.23) * logT - (19102.1046339472) * invT);
  qf[405] *= k_f;
  qr[405] *= k_f * exp(-(-g_RT[3] + g_RT[44] - g_RT[45])) * (refCinv);
  // reaction 404:  c4h8ooh1-3 + o2 => c4h8ooh1-3o2
  k_f = 7540000;
  qf[406] *= k_f;
  qr[406] *= k_f * exp(-(g_RT[3] - g_RT[44] + g_RT[45])) * (refC);
  // reaction 405:  c4h8ooh1-3o2 => nc4ket13 + oh
  k_f = 25000000000 * exp(-(10768.836648221) * invT);
  qf[407] *= k_f;
  qr[407] *= k_f * exp(-(-g_RT[4] + g_RT[44] - g_RT[51])) * (refCinv);
  // reaction 406:  nc4ket13 + oh => c4h8ooh1-3o2
  k_f = 0.006893 * exp((1.3) * logT - (22493.784961471) * invT);
  qf[408] *= k_f;
  qr[408] *= k_f * exp(-(g_RT[4] - g_RT[44] + g_RT[51])) * (refC);
  // reaction 407:  c4h8ooh1-3 => c3h6 + ch2o + oh
  k_f = 66370000000000 * exp((-0.16) * logT - (15046.1783075611) * invT);
  qf[409] *= k_f;
  qr[409] *= k_f * exp(-(-g_RT[4] - g_RT[13] - g_RT[26] + g_RT[45])) *
             ((refCinv * refCinv));
  // reaction 408:  pc4h9o2 => c4h8ooh1-3
  k_f = 25000000000 * exp(-(10492.0674820284) * invT);
  qf[410] *= k_f;
  qr[410] *= k_f * exp(-(-g_RT[45] + g_RT[46]));
  // reaction 409:  c4h8ooh1-3 => pc4h9o2
  k_f = 3231000000 * exp((-0.14) * logT - (3960.81837654895) * invT);
  qf[411] *= k_f;
  qr[411] *= k_f * exp(-(g_RT[45] - g_RT[46]));
  // reaction 410:  c2h5cho + ch3o2 => c2h5co + ch3o2h
  k_f = 3010000 * exp(-(5998.34265639226) * invT);
  qf[412] *= k_f;
  qr[412] *= k_f * exp(-(g_RT[33] - g_RT[34] + g_RT[38] - g_RT[39]));
  // reaction 411:  c2h5co + ch3o2h => c2h5cho + ch3o2
  k_f = 23580000 * exp((-0.51) * logT - (4520.3953089238) * invT);
  qf[413] *= k_f;
  qr[413] *= k_f * exp(-(-g_RT[33] + g_RT[34] - g_RT[38] + g_RT[39]));
  // reaction 412:  c2h5cho + c4h7 => c2h5co + c4h8-1
  k_f = 1700000 * exp(-(4247.14865939183) * invT);
  qf[414] *= k_f;
  qr[414] *= k_f * exp(-(g_RT[29] - g_RT[30] + g_RT[33] - g_RT[34]));
  // reaction 413:  c2h5co + c4h8-1 => c2h5cho + c4h7
  k_f = 10000000 * exp(-(14090.0666425322) * invT);
  qf[415] *= k_f;
  qr[415] *= k_f * exp(-(-g_RT[29] + g_RT[30] - g_RT[33] + g_RT[34]));
  // reaction 414:  c3h4-a + ho2 => c2h4 + co + oh
  k_f = 1000000 * exp(-(7045.03332126608) * invT);
  qf[416] *= k_f;
  qr[416] *= k_f * exp(-(-g_RT[4] - g_RT[6] + g_RT[11] - g_RT[16] + g_RT[25])) *
             (refCinv);
  // reaction 415:  c2h4 + co + oh => c3h4-a + ho2
  k_f = 1e-12;
  qf[417] *= k_f;
  qr[417] *=
    k_f * exp(-(g_RT[4] + g_RT[6] - g_RT[11] + g_RT[16] - g_RT[25])) * (refC);
  // reaction 416:  c3h4-a + ho2 => c3h3 + h2o2
  k_f = 30000000 * exp(-(7045.03332126608) * invT);
  qf[418] *= k_f;
  qr[418] *= k_f * exp(-(g_RT[11] - g_RT[12] + g_RT[25] - g_RT[48]));
  // reaction 417:  c3h3 + h2o2 => c3h4-a + ho2
  k_f = 15510000000 * exp((-1.38) * logT - (22141.5332954077) * invT);
  qf[419] *= k_f;
  qr[419] *= k_f * exp(-(-g_RT[11] + g_RT[12] - g_RT[25] + g_RT[48]));
  // reaction 418:  c3h6 + o2 => c3h5-a + ho2
  k_f = 4000000 * exp(-(20078.3449656083) * invT);
  qf[420] *= k_f;
  qr[420] *= k_f * exp(-(g_RT[3] - g_RT[11] + g_RT[26] - g_RT[47]));
  // reaction 419:  c3h5-a + ho2 => c3h6 + o2
  k_f = 33320 * exp((0.34) * logT - (-279.788466187424) * invT);
  qf[421] *= k_f;
  qr[421] *= k_f * exp(-(-g_RT[3] + g_RT[11] - g_RT[26] + g_RT[47]));
  // reaction 420:  c3h6 + ch3 => c3h5-a + ch4
  k_f = 2.21e-06 * exp((3.5) * logT - (2855.75457844178) * invT);
  qf[422] *= k_f;
  qr[422] *= k_f * exp(-(g_RT[9] - g_RT[10] + g_RT[26] - g_RT[47]));
  // reaction 421:  c3h5-a + ch4 => c3h6 + ch3
  k_f = 2.647e-05 * exp((3.51) * logT - (11664.5623133534) * invT);
  qf[423] *= k_f;
  qr[423] *= k_f * exp(-(-g_RT[9] + g_RT[10] - g_RT[26] + g_RT[47]));
  // reaction 422:  c2h5 + c3h6 => c2h6 + c3h5-a
  k_f = 100000 * exp(-(4931.52332488625) * invT);
  qf[424] *= k_f;
  qr[424] *= k_f * exp(-(-g_RT[15] + g_RT[17] + g_RT[26] - g_RT[47]));
  // reaction 423:  c2h6 + c3h5-a => c2h5 + c3h6
  k_f = 0.5369 * exp((1.33) * logT - (8272.88198582959) * invT);
  qf[425] *= k_f;
  qr[425] *= k_f * exp(-(g_RT[15] - g_RT[17] - g_RT[26] + g_RT[47]));
  // reaction 424:  c3h5-a + ho2 => c2h3 + ch2o + oh
  k_f = 1e-24;
  qf[426] *= k_f;
  qr[426] *= k_f *
             exp(-(-g_RT[4] + g_RT[11] - g_RT[13] - g_RT[19] + g_RT[47])) *
             (refCinv);
  // reaction 425:  c2h3 + ch2o + oh => c3h5-a + ho2
  k_f = 1e-42;
  qf[427] *= k_f;
  qr[427] *=
    k_f * exp(-(g_RT[4] - g_RT[11] + g_RT[13] + g_RT[19] - g_RT[47])) * (refC);
  // reaction 426:  c3h5-a + h => c3h4-a + h2
  k_f = 18100000;
  qf[428] *= k_f;
  qr[428] *= k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[25] + g_RT[47]));
  // reaction 427:  c3h4-a + h2 => c3h5-a + h
  k_f = 12300000 * exp((0.12) * logT - (23766.9231259569) * invT);
  qf[429] *= k_f;
  qr[429] *= k_f * exp(-(-g_RT[0] + g_RT[1] + g_RT[25] - g_RT[47]));
  // reaction 428:  c3h5-a + ch3 => c3h4-a + ch4
  k_f = 100000;
  qf[430] *= k_f;
  qr[430] *= k_f * exp(-(g_RT[9] - g_RT[10] - g_RT[25] + g_RT[47]));
  // reaction 429:  c3h4-a + ch4 => c3h5-a + ch3
  k_f = 4921000 * exp((0.05) * logT - (24043.6922921495) * invT);
  qf[431] *= k_f;
  qr[431] *= k_f * exp(-(-g_RT[9] + g_RT[10] + g_RT[25] - g_RT[47]));
  // reaction 430:  c2h5 + c3h5-a => c2h6 + c3h4-a
  k_f = 400000;
  qf[432] *= k_f;
  qr[432] *= k_f * exp(-(-g_RT[15] + g_RT[17] - g_RT[25] + g_RT[47]));
  // reaction 431:  c2h6 + c3h4-a => c2h5 + c3h5-a
  k_f = 1802000 * exp((0.05) * logT - (20294.7281319043) * invT);
  qf[433] *= k_f;
  qr[433] *= k_f * exp(-(g_RT[15] - g_RT[17] + g_RT[25] - g_RT[47]));
  // reaction 432:  c2h5 + c3h5-a => c2h4 + c3h6
  k_f = 400000;
  qf[434] *= k_f;
  qr[434] *= k_f * exp(-(-g_RT[16] + g_RT[17] - g_RT[26] + g_RT[47]));
  // reaction 433:  c2h4 + c3h6 => c2h5 + c3h5-a
  k_f = 69370000000 * exp((-1.33) * logT - (26569.8399544892) * invT);
  qf[435] *= k_f;
  qr[435] *= k_f * exp(-(g_RT[16] - g_RT[17] + g_RT[26] - g_RT[47]));
  // reaction 434:  c2h3 + c3h5-a => c2h4 + c3h4-a
  k_f = 1000000;
  qf[436] *= k_f;
  qr[436] *= k_f * exp(-(-g_RT[16] + g_RT[19] - g_RT[25] + g_RT[47]));
  // reaction 435:  c2h4 + c3h4-a => c2h3 + c3h5-a
  k_f = 16240000 * exp((0.05) * logT - (24250.0111251294) * invT);
  qf[437] *= k_f;
  qr[437] *= k_f * exp(-(g_RT[16] - g_RT[19] + g_RT[25] - g_RT[47]));
  // reaction 436:  c3h4-a + c3h6 => 2 c3h5-a
  k_f = 839100000000 * exp((-1.29) * logT - (16953.369470961) * invT);
  qf[438] *= k_f;
  qr[438] *= k_f * exp(-(g_RT[25] + g_RT[26] - 2.000000 * g_RT[47]));
  // reaction 437:  2 c3h5-a => c3h4-a + c3h6
  k_f = 1000000;
  qf[439] *= k_f;
  qr[439] *= k_f * exp(-(-g_RT[25] - g_RT[26] + 2.000000 * g_RT[47]));
  // reaction 438:  c3h5-a + o2 => c2h3cho + oh
  k_f = 24700000 * exp((-0.44) * logT - (11584.0476468246) * invT);
  qf[440] *= k_f;
  qr[440] *= k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[41] + g_RT[47]));
  // reaction 439:  c2h3cho + oh => c3h5-a + o2
  k_f = 190300000 * exp((-0.8) * logT - (37680.8639354574) * invT);
  qf[441] *= k_f;
  qr[441] *= k_f * exp(-(-g_RT[3] + g_RT[4] + g_RT[41] - g_RT[47]));
  // reaction 440:  c3h4-a + M => c3h3 + h + M
  k_f = 114300000000 * exp(-(35225.1666063304) * invT);
  Corr = mixture;
  qf[31] *= Corr * k_f;
  qr[31] *= Corr * k_f * exp(-(-g_RT[0] + g_RT[25] - g_RT[48])) * (refCinv);
  // reaction 441:  c3h3 + h + M => c3h4-a + M
  k_f = 1798 * exp((-0.38) * logT - (5339.12882418808) * invT);
  Corr = mixture;
  qf[32] *= Corr * k_f;
  qr[32] *= Corr * k_f * exp(-(g_RT[0] - g_RT[25] + g_RT[48])) * (refC);
  // reaction 442:  c3h4-a + o2 => c3h3 + ho2
  k_f = 40000000 * exp(-(19705.9646329128) * invT);
  qf[442] *= k_f;
  qr[442] *= k_f * exp(-(g_RT[3] - g_RT[11] + g_RT[25] - g_RT[48]));
  // reaction 443:  c3h3 + ho2 => c3h4-a + o2
  k_f = 117500 * exp((0.3) * logT - (19.1222333005793) * invT);
  qf[443] *= k_f;
  qr[443] *= k_f * exp(-(-g_RT[3] + g_RT[11] - g_RT[25] + g_RT[48]));
  // reaction 444:  c3h3 + h => c3h2 + h2
  k_f = 50000000;
  qf[444] *= k_f;
  qr[444] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[48] - g_RT[49]));
  // reaction 445:  c3h2 + h2 => c3h3 + h
  k_f = 38530 * exp((0.38) * logT - (2314.79666270171) * invT);
  qf[445] *= k_f;
  qr[445] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[48] + g_RT[49]));
  // reaction 446:  c3h4-a + oh => c3h3 + h2o
  k_f = 10 * exp((2) * logT - (503.21666580472) * invT);
  qf[446] *= k_f;
  qr[446] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[25] - g_RT[48]));
  // reaction 447:  c3h3 + h2o => c3h4-a + oh
  k_f = 7.003 * exp((1.97) * logT - (17371.0393035789) * invT);
  qf[447] *= k_f;
  qr[447] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[25] + g_RT[48]));
  // reaction 448:  c3h4-a + o => c2h4 + co
  k_f = 7800000 * exp(-(805.146665287552) * invT);
  qf[448] *= k_f;
  qr[448] *= k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[16] + g_RT[25]));
  // reaction 449:  c2h4 + co => c3h4-a + o
  k_f = 82800000 * exp((-0.21) * logT - (62801.439892429) * invT);
  qf[449] *= k_f;
  qr[449] *= k_f * exp(-(-g_RT[2] + g_RT[6] + g_RT[16] - g_RT[25]));
  // reaction 450:  c3h2 + oh => c2h2 + hco
  k_f = 50000000;
  qf[450] *= k_f;
  qr[450] *= k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[18] + g_RT[49]));
  // reaction 451:  c2h2 + hco => c3h2 + oh
  k_f = 290700000000000 * exp((-1.39) * logT - (39512.5725989866) * invT);
  qf[451] *= k_f;
  qr[451] *= k_f * exp(-(-g_RT[4] + g_RT[7] + g_RT[18] - g_RT[49]));
  // reaction 452:  c3h5-a => c3h4-a + h
  k_f = 6.663e+15 * exp((-0.43) * logT - (31813.3576121744) * invT);
  qf[452] *= k_f;
  qr[452] *= k_f * exp(-(-g_RT[0] - g_RT[25] + g_RT[47])) * (refCinv);
  // reaction 453:  c3h4-a + h => c3h5-a
  k_f = 240000 * exp((0.69) * logT - (1513.17251407479) * invT);
  qf[453] *= k_f;
  qr[453] *= k_f * exp(-(g_RT[0] + g_RT[25] - g_RT[47])) * (refC);
  // reaction 454:  c3h4-a + h => c3h3 + h2
  k_f = 20 * exp((2) * logT - (2516.0833290236) * invT);
  qf[454] *= k_f;
  qr[454] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[25] - g_RT[48]));
  // reaction 455:  c3h3 + h2 => c3h4-a + h
  k_f = 3.235 * exp((1.97) * logT - (11755.1413131983) * invT);
  qf[455] *= k_f;
  qr[455] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[25] + g_RT[48]));
  // reaction 456:  c3h4-a + ch3 => c3h3 + ch4
  k_f = 3.67e-08 * exp((4.01) * logT - (3436.96982744624) * invT);
  qf[456] *= k_f;
  qr[456] *= k_f * exp(-(g_RT[9] - g_RT[10] + g_RT[25] - g_RT[48]));
  // reaction 457:  c3h3 + ch4 => c3h4-a + ch3
  k_f = 1.551e-07 * exp((3.98) * logT - (12917.5718112072) * invT);
  qf[457] *= k_f;
  qr[457] *= k_f * exp(-(-g_RT[9] + g_RT[10] - g_RT[25] + g_RT[48]));
  // reaction 458:  c3h4-a + c3h5-a => c3h3 + c3h6
  k_f = 200000 * exp(-(3874.76832669634) * invT);
  qf[458] *= k_f;
  qr[458] *= k_f * exp(-(g_RT[25] - g_RT[26] + g_RT[47] - g_RT[48]));
  // reaction 459:  c3h3 + c3h6 => c3h4-a + c3h5-a
  k_f = 26440000000000 * exp((-2.71) * logT - (21205.5502970109) * invT);
  qf[459] *= k_f;
  qr[459] *= k_f * exp(-(-g_RT[25] + g_RT[26] - g_RT[47] + g_RT[48]));
  // reaction 460:  c3h3 + oh => c3h2 + h2o
  k_f = 10000000;
  qf[460] *= k_f;
  qr[460] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[48] - g_RT[49]));
  // reaction 461:  c3h2 + h2o => c3h3 + oh
  k_f = 1343000000 * exp(-(7890.437319818) * invT);
  qf[461] *= k_f;
  qr[461] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[48] + g_RT[49]));
  // reaction 462:  c3h3 + o2 => ch2co + hco
  k_f = 30100 * exp(-(1444.23183085955) * invT);
  qf[462] *= k_f;
  qr[462] *= k_f * exp(-(g_RT[3] - g_RT[7] - g_RT[20] + g_RT[48]));
  // reaction 463:  ch2co + hco => c3h3 + o2
  k_f = 488100 * exp(-(29926.2951154067) * invT);
  qf[463] *= k_f;
  qr[463] *= k_f * exp(-(-g_RT[3] + g_RT[7] + g_RT[20] - g_RT[48]));
  // reaction 464:  pc4h9o2 => o2 + pc4h9
  k_f = 6.155e+19 * exp((-1.38) * logT - (17869.2238027256) * invT);
  qf[464] *= k_f;
  qr[464] *= k_f * exp(-(-g_RT[3] - g_RT[31] + g_RT[46])) * (refCinv);
  // reaction 465:  o2 + pc4h9 => pc4h9o2
  k_f = 4520000;
  qf[465] *= k_f;
  qr[465] *= k_f * exp(-(g_RT[3] + g_RT[31] - g_RT[46])) * (refC);
  // reaction 466:  ch2cho => ch2co + h
  k_f = 3.094e+15 * exp((-0.26) * logT - (25573.4709561959) * invT);
  qf[466] *= k_f;
  qr[466] *= k_f * exp(-(-g_RT[0] - g_RT[20] + g_RT[23])) * (refCinv);
  // reaction 467:  ch2co + h => ch2cho
  k_f = 50000000 * exp(-(6189.56498939805) * invT);
  qf[467] *= k_f;
  qr[467] *= k_f * exp(-(g_RT[0] + g_RT[20] - g_RT[23])) * (refC);
  // reaction 468:  ch2cho + o2 => ch2o + co + oh
  k_f = 20000000 * exp(-(2113.50999637982) * invT);
  qf[468] *= k_f;
  qr[468] *=
    k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[6] - g_RT[13] + g_RT[23])) * (refCinv);
  // reaction 469:  nc4ket13 => ch2cho + ch3cho + oh
  k_f = 1.05e+16 * exp(-(20933.8132974763) * invT);
  qf[469] *= k_f;
  qr[469] *= k_f * exp(-(-g_RT[4] - g_RT[23] - g_RT[24] + g_RT[51])) *
             ((refCinv * refCinv));
  // reaction 470:  c3h5-a + o2 => c3h4-a + ho2
  k_f = 2.18e+15 * exp((-2.85) * logT - (15478.9446401532) * invT);
  qf[470] *= k_f;
  qr[470] *= k_f * exp(-(g_RT[3] - g_RT[11] - g_RT[25] + g_RT[47]));
  // reaction 471:  c3h4-a + ho2 => c3h5-a + o2
  k_f = 26900000000000 * exp((-2.4) * logT - (10315.9416489968) * invT);
  qf[471] *= k_f;
  qr[471] *= k_f * exp(-(-g_RT[3] + g_RT[11] + g_RT[25] - g_RT[47]));
  // reaction 472:  c3h5-a + o2 => ch2cho + ch2o
  k_f = 7140000000 * exp((-1.21) * logT - (10592.7108151893) * invT);
  qf[472] *= k_f;
  qr[472] *= k_f * exp(-(g_RT[3] - g_RT[13] - g_RT[23] + g_RT[47]));
  // reaction 473:  ch2cho + ch2o => c3h5-a + o2
  k_f = 49440000000 * exp((-1.4) * logT - (44595.0609236143) * invT);
  qf[473] *= k_f;
  qr[473] *= k_f * exp(-(-g_RT[3] + g_RT[13] + g_RT[23] - g_RT[47]));
  // reaction 474:  c3h5-a + o2 => c2h2 + ch2o + oh
  k_f = 9.72e+23 * exp((-5.71) * logT - (10793.9974815112) * invT);
  qf[474] *= k_f;
  qr[474] *= k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[13] - g_RT[18] + g_RT[47])) *
             (refCinv);
  // reaction 475:  hcco + o2 => co2 + hco
  k_f = 240000 * exp(-(-429.747032597231) * invT);
  qf[475] *= k_f;
  qr[475] *= k_f * exp(-(g_RT[3] - g_RT[7] - g_RT[8] + g_RT[21]));
  // reaction 476:  co2 + hco => hcco + o2
  k_f = 147400000 * exp(-(67229.7465515105) * invT);
  qf[476] *= k_f;
  qr[476] *= k_f * exp(-(-g_RT[3] + g_RT[7] + g_RT[8] - g_RT[21]));
  // reaction 477:  ch3 + o2 => ch2o + oh
  k_f = 747000 * exp(-(7170.83748771726) * invT);
  qf[477] *= k_f;
  qr[477] *= k_f * exp(-(g_RT[3] - g_RT[4] + g_RT[9] - g_RT[13]));
  // reaction 478:  ch2o + oh => ch3 + o2
  k_f = 777800 * exp(-(34102.9934415859) * invT);
  qf[478] *= k_f;
  qr[478] *= k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[9] + g_RT[13]));
  // reaction 479:  c2h4 + h2 => 2 ch3
  k_f = 3767000 * exp((0.83) * logT - (42627.4837603178) * invT);
  qf[479] *= k_f;
  qr[479] *= k_f * exp(-(g_RT[1] - 2.000000 * g_RT[9] + g_RT[16]));
  // reaction 480:  2 ch3 => c2h4 + h2
  k_f = 100000000 * exp(-(16102.933305751) * invT);
  qf[480] *= k_f;
  qr[480] *= k_f * exp(-(-g_RT[1] + 2.000000 * g_RT[9] - g_RT[16]));
  // reaction 481:  nc3h7cho + o2 => ho2 + nc3h7co
  k_f = 20000000 * exp((0.5) * logT - (21235.7432969592) * invT);
  qf[481] *= k_f;
  qr[481] *= k_f * exp(-(g_RT[3] - g_RT[11] + g_RT[52] - g_RT[53]));
  // reaction 482:  ho2 + nc3h7co => nc3h7cho + o2
  k_f = 10 * exp((0.5) * logT - (2012.86666321888) * invT);
  qf[482] *= k_f;
  qr[482] *= k_f * exp(-(-g_RT[3] + g_RT[11] - g_RT[52] + g_RT[53]));
  // reaction 483:  nc3h7cho + oh => h2o + nc3h7co
  k_f = 26900 * exp((0.76) * logT - (-171.093666373605) * invT);
  qf[483] *= k_f;
  qr[483] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[52] - g_RT[53]));
  // reaction 484:  h2o + nc3h7co => nc3h7cho + oh
  k_f = 18520 * exp((0.75) * logT - (15710.4243064233) * invT);
  qf[484] *= k_f;
  qr[484] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[52] + g_RT[53]));
  // reaction 485:  h + nc3h7cho => h2 + nc3h7co
  k_f = 40000000 * exp(-(2113.50999637982) * invT);
  qf[485] *= k_f;
  qr[485] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[52] - g_RT[53]));
  // reaction 486:  h2 + nc3h7co => h + nc3h7cho
  k_f = 18000000 * exp(-(12077.1999793133) * invT);
  qf[486] *= k_f;
  qr[486] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[52] + g_RT[53]));
  // reaction 487:  nc3h7cho + o => nc3h7co + oh
  k_f = 5000000 * exp(-(900.757831790448) * invT);
  qf[487] *= k_f;
  qr[487] *= k_f * exp(-(g_RT[2] - g_RT[4] + g_RT[52] - g_RT[53]));
  // reaction 488:  nc3h7co + oh => nc3h7cho + o
  k_f = 1000000 * exp(-(9561.11665028967) * invT);
  qf[488] *= k_f;
  qr[488] *= k_f * exp(-(-g_RT[2] + g_RT[4] - g_RT[52] + g_RT[53]));
  // reaction 489:  ho2 + nc3h7cho => h2o2 + nc3h7co
  k_f = 2800000 * exp(-(6843.74665494419) * invT);
  qf[489] *= k_f;
  qr[489] *= k_f * exp(-(g_RT[11] - g_RT[12] + g_RT[52] - g_RT[53]));
  // reaction 490:  h2o2 + nc3h7co => ho2 + nc3h7cho
  k_f = 1000000 * exp(-(5032.1666580472) * invT);
  qf[490] *= k_f;
  qr[490] *= k_f * exp(-(-g_RT[11] + g_RT[12] - g_RT[52] + g_RT[53]));
  // reaction 491:  ch3 + nc3h7cho => ch4 + nc3h7co
  k_f = 1700000 * exp(-(4247.14865939183) * invT);
  qf[491] *= k_f;
  qr[491] *= k_f * exp(-(g_RT[9] - g_RT[10] + g_RT[52] - g_RT[53]));
  // reaction 492:  ch4 + nc3h7co => ch3 + nc3h7cho
  k_f = 15000000 * exp(-(14090.0666425322) * invT);
  qf[492] *= k_f;
  qr[492] *= k_f * exp(-(-g_RT[9] + g_RT[10] - g_RT[52] + g_RT[53]));
  // reaction 493:  ch3o2 + nc3h7cho => ch3o2h + nc3h7co
  k_f = 1000000 * exp(-(4780.55832514484) * invT);
  qf[493] *= k_f;
  qr[493] *= k_f * exp(-(g_RT[38] - g_RT[39] + g_RT[52] - g_RT[53]));
  // reaction 494:  ch3o2h + nc3h7co => ch3o2 + nc3h7cho
  k_f = 25000 * exp(-(5032.1666580472) * invT);
  qf[494] *= k_f;
  qr[494] *= k_f * exp(-(-g_RT[38] + g_RT[39] - g_RT[52] + g_RT[53]));
  // reaction 495:  nc3h7co => co + nc3h7
  k_f = 5.325e+15 * exp((-0.86) * logT - (6743.10332178324) * invT);
  qf[495] *= k_f;
  qr[495] *= k_f * exp(-(-g_RT[6] - g_RT[28] + g_RT[53])) * (refCinv);
  // reaction 496:  co + nc3h7 => nc3h7co
  k_f = 150000 * exp(-(2415.43999586265) * invT);
  qf[496] *= k_f;
  qr[496] *= k_f * exp(-(g_RT[6] + g_RT[28] - g_RT[53])) * (refC);
  // reaction 497:  c2h5coch2 => c2h5 + ch2co
  k_f = 15700000000000 * exp(-(15096.4999741416) * invT);
  qf[497] *= k_f;
  qr[497] *= k_f * exp(-(-g_RT[17] - g_RT[20] + g_RT[54])) * (refCinv);
  // reaction 498:  c2h5 + ch2co => c2h5coch2
  k_f = 211000 * exp(-(3698.64249366469) * invT);
  qf[498] *= k_f;
  qr[498] *= k_f * exp(-(g_RT[17] + g_RT[20] - g_RT[54])) * (refC);
  // reaction 499:  nc3h7coch2 => ch2co + nc3h7
  k_f = 1.226e+18 * exp((-1.4) * logT - (21864.7641292151) * invT);
  qf[499] *= k_f;
  qr[499] *= k_f * exp(-(-g_RT[20] - g_RT[28] + g_RT[55])) * (refCinv);
  // reaction 500:  ch2co + nc3h7 => nc3h7coch2
  k_f = 100000 * exp(-(5837.31332333475) * invT);
  qf[500] *= k_f;
  qr[500] *= k_f * exp(-(g_RT[20] + g_RT[28] - g_RT[55])) * (refC);
  // reaction 501:  nc4h9cho + o2 => ho2 + nc4h9co
  k_f = 20000000 * exp((0.5) * logT - (21235.7432969592) * invT);
  qf[501] *= k_f;
  qr[501] *= k_f * exp(-(g_RT[3] - g_RT[11] + g_RT[56] - g_RT[57]));
  // reaction 502:  ho2 + nc4h9co => nc4h9cho + o2
  k_f = 10 * exp(-(20128.6666321888) * invT);
  qf[502] *= k_f;
  qr[502] *= k_f * exp(-(-g_RT[3] + g_RT[11] - g_RT[56] + g_RT[57]));
  // reaction 503:  nc4h9cho + oh => h2o + nc4h9co
  k_f = 26900 * exp((0.76) * logT - (-171.093666373605) * invT);
  qf[503] *= k_f;
  qr[503] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[56] - g_RT[57]));
  // reaction 504:  h2o + nc4h9co => nc4h9cho + oh
  k_f = 21430 * exp((0.73) * logT - (15720.4886397394) * invT);
  qf[504] *= k_f;
  qr[504] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[56] + g_RT[57]));
  // reaction 505:  h + nc4h9cho => h2 + nc4h9co
  k_f = 40000000 * exp(-(2113.50999637982) * invT);
  qf[505] *= k_f;
  qr[505] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[56] - g_RT[57]));
  // reaction 506:  h2 + nc4h9co => h + nc4h9cho
  k_f = 18000000 * exp(-(12077.1999793133) * invT);
  qf[506] *= k_f;
  qr[506] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[56] + g_RT[57]));
  // reaction 507:  nc4h9cho + o => nc4h9co + oh
  k_f = 5000000 * exp(-(900.757831790448) * invT);
  qf[507] *= k_f;
  qr[507] *= k_f * exp(-(g_RT[2] - g_RT[4] + g_RT[56] - g_RT[57]));
  // reaction 508:  nc4h9co + oh => nc4h9cho + o
  k_f = 1000000 * exp(-(9561.11665028967) * invT);
  qf[508] *= k_f;
  qr[508] *= k_f * exp(-(-g_RT[2] + g_RT[4] - g_RT[56] + g_RT[57]));
  // reaction 509:  ho2 + nc4h9cho => h2o2 + nc4h9co
  k_f = 2800000 * exp(-(6843.74665494419) * invT);
  qf[509] *= k_f;
  qr[509] *= k_f * exp(-(g_RT[11] - g_RT[12] + g_RT[56] - g_RT[57]));
  // reaction 510:  h2o2 + nc4h9co => ho2 + nc4h9cho
  k_f = 1000000 * exp(-(5032.1666580472) * invT);
  qf[510] *= k_f;
  qr[510] *= k_f * exp(-(-g_RT[11] + g_RT[12] - g_RT[56] + g_RT[57]));
  // reaction 511:  ch3 + nc4h9cho => ch4 + nc4h9co
  k_f = 1700000 * exp(-(4247.14865939183) * invT);
  qf[511] *= k_f;
  qr[511] *= k_f * exp(-(g_RT[9] - g_RT[10] + g_RT[56] - g_RT[57]));
  // reaction 512:  ch4 + nc4h9co => ch3 + nc4h9cho
  k_f = 15000000 * exp(-(14090.0666425322) * invT);
  qf[512] *= k_f;
  qr[512] *= k_f * exp(-(-g_RT[9] + g_RT[10] - g_RT[56] + g_RT[57]));
  // reaction 513:  ch3o2 + nc4h9cho => ch3o2h + nc4h9co
  k_f = 1000000 * exp(-(4780.55832514484) * invT);
  qf[513] *= k_f;
  qr[513] *= k_f * exp(-(g_RT[38] - g_RT[39] + g_RT[56] - g_RT[57]));
  // reaction 514:  ch3o2h + nc4h9co => ch3o2 + nc4h9cho
  k_f = 25000 * exp(-(5032.1666580472) * invT);
  qf[514] *= k_f;
  qr[514] *= k_f * exp(-(-g_RT[38] + g_RT[39] - g_RT[56] + g_RT[57]));
  // reaction 515:  nc4h9co => co + pc4h9
  k_f = 100000000000 * exp(-(4830.87999172531) * invT);
  qf[515] *= k_f;
  qr[515] *= k_f * exp(-(-g_RT[6] - g_RT[31] + g_RT[57])) * (refCinv);
  // reaction 516:  co + pc4h9 => nc4h9co
  k_f = 100000;
  qf[516] *= k_f;
  qr[516] *= k_f * exp(-(g_RT[6] + g_RT[31] - g_RT[57])) * (refC);
  // reaction 517:  ch2(s) + ch4 => 2 ch3
  k_f = 40000000;
  qf[517] *= k_f;
  qr[517] *= k_f * exp(-(-2.000000 * g_RT[9] + g_RT[10] + g_RT[50]));
  // reaction 518:  2 ch3 => ch2(s) + ch4
  k_f = 5429000000 * exp((-0.89) * logT - (7875.34081984386) * invT);
  qf[518] *= k_f;
  qr[518] *= k_f * exp(-(2.000000 * g_RT[9] - g_RT[10] - g_RT[50]));
  // reaction 519:  c2h6 + ch2(s) => c2h5 + ch3
  k_f = 120000000;
  qf[519] *= k_f;
  qr[519] *= k_f * exp(-(-g_RT[9] + g_RT[15] - g_RT[17] + g_RT[50]));
  // reaction 520:  c2h5 + ch3 => c2h6 + ch2(s)
  k_f = 104100000 * exp((-0.33) * logT - (9973.75431624954) * invT);
  qf[520] *= k_f;
  qr[520] *= k_f * exp(-(g_RT[9] - g_RT[15] + g_RT[17] - g_RT[50]));
  // reaction 521:  ch2(s) + o2 => co + h + oh
  k_f = 70000000;
  qf[521] *= k_f;
  qr[521] *=
    k_f * exp(-(-g_RT[0] + g_RT[3] - g_RT[4] - g_RT[6] + g_RT[50])) * (refCinv);
  // reaction 522:  ch2(s) + h2 => ch3 + h
  k_f = 70000000;
  qf[522] *= k_f;
  qr[522] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[9] + g_RT[50]));
  // reaction 523:  ch3 + h => ch2(s) + h2
  k_f = 248200000000 * exp((-0.89) * logT - (8116.88481943013) * invT);
  qf[523] *= k_f;
  qr[523] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[9] - g_RT[50]));
  // reaction 524:  ch2(s) + o => co + 2 h
  k_f = 30000000;
  qf[524] *= k_f;
  qr[524] *= k_f * exp(-(-2.000000 * g_RT[0] + g_RT[2] - g_RT[6] + g_RT[50])) *
             (refCinv);
  // reaction 525:  ch2(s) + oh => ch2o + h
  k_f = 30000000;
  qf[525] *= k_f;
  qr[525] *= k_f * exp(-(-g_RT[0] + g_RT[4] - g_RT[13] + g_RT[50]));
  // reaction 526:  ch2o + h => ch2(s) + oh
  k_f = 3194000000000 * exp((-0.89) * logT - (44212.6162576027) * invT);
  qf[526] *= k_f;
  qr[526] *= k_f * exp(-(g_RT[0] - g_RT[4] + g_RT[13] - g_RT[50]));
  // reaction 527:  ch2(s) + co2 => ch2o + co
  k_f = 3000000;
  qf[527] *= k_f;
  qr[527] *= k_f * exp(-(-g_RT[6] + g_RT[8] - g_RT[13] + g_RT[50]));
  // reaction 528:  ch2o + co => ch2(s) + co2
  k_f = 2852000000 * exp((-0.89) * logT - (32970.7559435252) * invT);
  qf[528] *= k_f;
  qr[528] *= k_f * exp(-(g_RT[6] - g_RT[8] + g_RT[13] - g_RT[50]));
  // reaction 529:  ch2(s) + ch3 => c2h4 + h
  k_f = 20000000;
  qf[529] *= k_f;
  qr[529] *= k_f * exp(-(-g_RT[0] + g_RT[9] - g_RT[16] + g_RT[50]));
  // reaction 530:  c2h4 + h => ch2(s) + ch3
  k_f = 2671000000 * exp((-0.06) * logT - (34641.4352739969) * invT);
  qf[530] *= k_f;
  qr[530] *= k_f * exp(-(g_RT[0] - g_RT[9] + g_RT[16] - g_RT[50]));
  // reaction 531:  ch2(s) + ch2co => c2h4 + co
  k_f = 160000000;
  qf[531] *= k_f;
  qr[531] *= k_f * exp(-(-g_RT[6] - g_RT[16] + g_RT[20] + g_RT[50]));
  // reaction 532:  c2h4 + co => ch2(s) + ch2co
  k_f = 4596000000 * exp((-0.06) * logT - (53139.6799089784) * invT);
  qf[532] *= k_f;
  qr[532] *= k_f * exp(-(g_RT[6] + g_RT[16] - g_RT[20] - g_RT[50]));
  // reaction 533:  nc7h16 => c7h15-1 + h
  k_f = 1.34e+88 * exp((-21.17) * logT - (71859.339876914) * invT);
  qf[533] *= k_f;
  qr[533] *= k_f * exp(-(-g_RT[0] + g_RT[58] - g_RT[59])) * (refCinv);
  // reaction 534:  c7h15-1 + h => nc7h16
  k_f = 3.374e+76 * exp((-20.22) * logT - (19932.4121325249) * invT);
  qf[534] *= k_f;
  qr[534] *= k_f * exp(-(g_RT[0] - g_RT[58] + g_RT[59])) * (refC);
  // reaction 535:  nc7h16 => c7h15-2 + h
  k_f = 6.5e+87 * exp((-21.01) * logT - (70198.7248797584) * invT);
  qf[535] *= k_f;
  qr[535] *= k_f * exp(-(-g_RT[0] + g_RT[58] - g_RT[60])) * (refCinv);
  // reaction 536:  c7h15-2 + h => nc7h16
  k_f = 5.207e+74 * exp((-19.67) * logT - (19570.0961331455) * invT);
  qf[536] *= k_f;
  qr[536] *= k_f * exp(-(g_RT[0] - g_RT[58] + g_RT[60])) * (refC);
  // reaction 537:  nc7h16 => c7h15-3 + h
  k_f = 6.5e+87 * exp((-21.01) * logT - (70198.7248797584) * invT);
  qf[537] *= k_f;
  qr[537] *= k_f * exp(-(-g_RT[0] + g_RT[58] - g_RT[61])) * (refCinv);
  // reaction 538:  c7h15-3 + h => nc7h16
  k_f = 5.207e+74 * exp((-19.67) * logT - (19570.0961331455) * invT);
  qf[538] *= k_f;
  qr[538] *= k_f * exp(-(g_RT[0] - g_RT[58] + g_RT[61])) * (refC);
  // reaction 539:  nc7h16 => c7h15-4 + h
  k_f = 3.25e+87 * exp((-21.01) * logT - (70198.7248797584) * invT);
  qf[539] *= k_f;
  qr[539] *= k_f * exp(-(-g_RT[0] + g_RT[58] - g_RT[62])) * (refCinv);
  // reaction 540:  c7h15-4 + h => nc7h16
  k_f = 5.187e+74 * exp((-19.67) * logT - (19570.0961331455) * invT);
  qf[540] *= k_f;
  qr[540] *= k_f * exp(-(g_RT[0] - g_RT[58] + g_RT[62])) * (refC);
  // reaction 541:  nc7h16 => nc3h7 + pc4h9
  k_f = 1.415e+78 * exp((-17.71) * logT - (60738.2515626297) * invT);
  qf[541] *= k_f;
  qr[541] *= k_f * exp(-(-g_RT[28] - g_RT[31] + g_RT[58])) * (refCinv);
  // reaction 542:  nc3h7 + pc4h9 => nc7h16
  k_f = 1.363e+62 * exp((-16.11) * logT - (16334.4129720212) * invT);
  qf[542] *= k_f;
  qr[542] *= k_f * exp(-(g_RT[28] + g_RT[31] - g_RT[58])) * (refC);
  // reaction 543:  h + nc7h16 => c7h15-1 + h2
  k_f = 0.188 * exp((2.75) * logT - (3160.20066125364) * invT);
  qf[543] *= k_f;
  qr[543] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[58] - g_RT[59]));
  // reaction 544:  c7h15-1 + h2 => h + nc7h16
  k_f = 0.008926 * exp((2.7) * logT - (5308.93582423979) * invT);
  qf[544] *= k_f;
  qr[544] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[58] + g_RT[59]));
  // reaction 545:  h + nc7h16 => c7h15-2 + h2
  k_f = 2.6 * exp((2.4) * logT - (2249.8817128129) * invT);
  qf[545] *= k_f;
  qr[545] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[58] - g_RT[60]));
  // reaction 546:  c7h15-2 + h2 => h + nc7h16
  k_f = 0.003928 * exp((2.74) * logT - (5666.21965696114) * invT);
  qf[546] *= k_f;
  qr[546] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[58] + g_RT[60]));
  // reaction 547:  h + nc7h16 => c7h15-3 + h2
  k_f = 2.6 * exp((2.4) * logT - (2249.8817128129) * invT);
  qf[547] *= k_f;
  qr[547] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[58] - g_RT[61]));
  // reaction 548:  c7h15-3 + h2 => h + nc7h16
  k_f = 0.003928 * exp((2.74) * logT - (5666.21965696114) * invT);
  qf[548] *= k_f;
  qr[548] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[58] + g_RT[61]));
  // reaction 549:  h + nc7h16 => c7h15-4 + h2
  k_f = 1.3 * exp((2.4) * logT - (2249.8817128129) * invT);
  qf[549] *= k_f;
  qr[549] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[58] - g_RT[62]));
  // reaction 550:  c7h15-4 + h2 => h + nc7h16
  k_f = 0.003913 * exp((2.74) * logT - (5666.21965696114) * invT);
  qf[550] *= k_f;
  qr[550] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[58] + g_RT[62]));
  // reaction 551:  nc7h16 + o => c7h15-1 + oh
  k_f = 0.193 * exp((2.68) * logT - (1869.95313013034) * invT);
  qf[551] *= k_f;
  qr[551] *= k_f * exp(-(g_RT[2] - g_RT[4] + g_RT[58] - g_RT[59]));
  // reaction 552:  c7h15-1 + oh => nc7h16 + o
  k_f = 0.004025 * exp((2.63) * logT - (2965.45581158721) * invT);
  qf[552] *= k_f;
  qr[552] *= k_f * exp(-(-g_RT[2] + g_RT[4] - g_RT[58] + g_RT[59]));
  // reaction 553:  nc7h16 + o => c7h15-2 + oh
  k_f = 0.0954 * exp((2.71) * logT - (1059.77429818474) * invT);
  qf[553] *= k_f;
  qr[553] *= k_f * exp(-(g_RT[2] - g_RT[4] + g_RT[58] - g_RT[60]));
  // reaction 554:  c7h15-2 + oh => nc7h16 + o
  k_f = 6.33e-05 * exp((3.05) * logT - (3420.86689414048) * invT);
  qf[554] *= k_f;
  qr[554] *= k_f * exp(-(-g_RT[2] + g_RT[4] - g_RT[58] + g_RT[60]));
  // reaction 555:  nc7h16 + o => c7h15-3 + oh
  k_f = 0.0954 * exp((2.71) * logT - (1059.77429818474) * invT);
  qf[555] *= k_f;
  qr[555] *= k_f * exp(-(g_RT[2] - g_RT[4] + g_RT[58] - g_RT[61]));
  // reaction 556:  c7h15-3 + oh => nc7h16 + o
  k_f = 6.33e-05 * exp((3.05) * logT - (3420.86689414048) * invT);
  qf[556] *= k_f;
  qr[556] *= k_f * exp(-(-g_RT[2] + g_RT[4] - g_RT[58] + g_RT[61]));
  // reaction 557:  nc7h16 + o => c7h15-4 + oh
  k_f = 0.0477 * exp((2.71) * logT - (1059.77429818474) * invT);
  qf[557] *= k_f;
  qr[557] *= k_f * exp(-(g_RT[2] - g_RT[4] + g_RT[58] - g_RT[62]));
  // reaction 558:  c7h15-4 + oh => nc7h16 + o
  k_f = 6.306e-05 * exp((3.05) * logT - (3420.86689414048) * invT);
  qf[558] *= k_f;
  qr[558] *= k_f * exp(-(-g_RT[2] + g_RT[4] - g_RT[58] + g_RT[62]));
  // reaction 559:  nc7h16 + oh => c7h15-1 + h2o
  k_f = 10500 * exp((0.97) * logT - (800.114498629504) * invT);
  qf[559] *= k_f;
  qr[559] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[58] - g_RT[59]));
  // reaction 560:  c7h15-1 + h2o => nc7h16 + oh
  k_f = 15000 * exp((1.05) * logT - (11740.0448132241) * invT);
  qf[560] *= k_f;
  qr[560] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[58] + g_RT[59]));
  // reaction 561:  nc7h16 + oh => c7h15-2 + h2o
  k_f = 94 * exp((1.61) * logT - (-17.6125833031652) * invT);
  qf[561] *= k_f;
  qr[561] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[58] - g_RT[60]));
  // reaction 562:  c7h15-2 + h2o => nc7h16 + oh
  k_f = 0.6148 * exp((1.95) * logT - (11025.4771477814) * invT);
  qf[562] *= k_f;
  qr[562] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[58] + g_RT[60]));
  // reaction 563:  nc7h16 + oh => c7h15-3 + h2o
  k_f = 94 * exp((1.61) * logT - (-17.6125833031652) * invT);
  qf[563] *= k_f;
  qr[563] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[58] - g_RT[61]));
  // reaction 564:  c7h15-3 + h2o => nc7h16 + oh
  k_f = 0.6148 * exp((1.95) * logT - (11025.4771477814) * invT);
  qf[564] *= k_f;
  qr[564] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[58] + g_RT[61]));
  // reaction 565:  nc7h16 + oh => c7h15-4 + h2o
  k_f = 47 * exp((1.61) * logT - (-17.6125833031652) * invT);
  qf[565] *= k_f;
  qr[565] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[58] - g_RT[62]));
  // reaction 566:  c7h15-4 + h2o => nc7h16 + oh
  k_f = 0.6125 * exp((1.95) * logT - (11025.4771477814) * invT);
  qf[566] *= k_f;
  qr[566] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[58] + g_RT[62]));
  // reaction 567:  ho2 + nc7h16 => c7h15-1 + h2o2
  k_f = 16800000 * exp(-(10285.7486490485) * invT);
  qf[567] *= k_f;
  qr[567] *= k_f * exp(-(g_RT[11] - g_RT[12] + g_RT[58] - g_RT[59]));
  // reaction 568:  c7h15-1 + h2o2 => ho2 + nc7h16
  k_f = 20500000 * exp((-0.38) * logT - (4226.51677609384) * invT);
  qf[568] *= k_f;
  qr[568] *= k_f * exp(-(-g_RT[11] + g_RT[12] - g_RT[58] + g_RT[59]));
  // reaction 569:  ho2 + nc7h16 => c7h15-2 + h2o2
  k_f = 11200000 * exp(-(8901.90281808549) * invT);
  qf[569] *= k_f;
  qr[569] *= k_f * exp(-(g_RT[11] - g_RT[12] + g_RT[58] - g_RT[60]));
  // reaction 570:  c7h15-2 + h2o2 => ho2 + nc7h16
  k_f = 434800 * exp((0.01) * logT - (4108.76407629554) * invT);
  qf[570] *= k_f;
  qr[570] *= k_f * exp(-(-g_RT[11] + g_RT[12] - g_RT[58] + g_RT[60]));
  // reaction 571:  ho2 + nc7h16 => c7h15-3 + h2o2
  k_f = 11200000 * exp(-(8901.90281808549) * invT);
  qf[571] *= k_f;
  qr[571] *= k_f * exp(-(g_RT[11] - g_RT[12] + g_RT[58] - g_RT[61]));
  // reaction 572:  c7h15-3 + h2o2 => ho2 + nc7h16
  k_f = 434800 * exp((0.01) * logT - (4108.76407629554) * invT);
  qf[572] *= k_f;
  qr[572] *= k_f * exp(-(-g_RT[11] + g_RT[12] - g_RT[58] + g_RT[61]));
  // reaction 573:  ho2 + nc7h16 => c7h15-4 + h2o2
  k_f = 5600000 * exp(-(8901.90281808549) * invT);
  qf[573] *= k_f;
  qr[573] *= k_f * exp(-(g_RT[11] - g_RT[12] + g_RT[58] - g_RT[62]));
  // reaction 574:  c7h15-4 + h2o2 => ho2 + nc7h16
  k_f = 433200 * exp((0.01) * logT - (4108.76407629554) * invT);
  qf[574] *= k_f;
  qr[574] *= k_f * exp(-(-g_RT[11] + g_RT[12] - g_RT[58] + g_RT[62]));
  // reaction 575:  ch3 + nc7h16 => c7h15-1 + ch4
  k_f = 9.04e-07 * exp((3.65) * logT - (3600.01202716696) * invT);
  qf[575] *= k_f;
  qr[575] *= k_f * exp(-(g_RT[9] - g_RT[10] + g_RT[58] - g_RT[59]));
  // reaction 576:  c7h15-1 + ch4 => ch3 + nc7h16
  k_f = 1.121e-06 * exp((3.6) * logT - (5993.31048973421) * invT);
  qf[576] *= k_f;
  qr[576] *= k_f * exp(-(-g_RT[9] + g_RT[10] - g_RT[58] + g_RT[59]));
  // reaction 577:  ch3 + nc7h16 => c7h15-2 + ch4
  k_f = 0.0541 * exp((2.26) * logT - (3666.93984371899) * invT);
  qf[577] *= k_f;
  qr[577] *= k_f * exp(-(g_RT[9] - g_RT[10] + g_RT[58] - g_RT[60]));
  // reaction 578:  c7h15-2 + ch4 => ch3 + nc7h16
  k_f = 0.002135 * exp((2.6) * logT - (7321.80248745867) * invT);
  qf[578] *= k_f;
  qr[578] *= k_f * exp(-(-g_RT[9] + g_RT[10] - g_RT[58] + g_RT[60]));
  // reaction 579:  ch3 + nc7h16 => c7h15-3 + ch4
  k_f = 0.0541 * exp((2.26) * logT - (3666.93984371899) * invT);
  qf[579] *= k_f;
  qr[579] *= k_f * exp(-(g_RT[9] - g_RT[10] + g_RT[58] - g_RT[61]));
  // reaction 580:  c7h15-3 + ch4 => ch3 + nc7h16
  k_f = 0.002135 * exp((2.6) * logT - (7321.80248745867) * invT);
  qf[580] *= k_f;
  qr[580] *= k_f * exp(-(-g_RT[9] + g_RT[10] - g_RT[58] + g_RT[61]));
  // reaction 581:  ch3 + nc7h16 => c7h15-4 + ch4
  k_f = 0.02705 * exp((2.26) * logT - (3666.93984371899) * invT);
  qf[581] *= k_f;
  qr[581] *= k_f * exp(-(g_RT[9] - g_RT[10] + g_RT[58] - g_RT[62]));
  // reaction 582:  c7h15-4 + ch4 => ch3 + nc7h16
  k_f = 0.002127 * exp((2.6) * logT - (7321.80248745867) * invT);
  qf[582] *= k_f;
  qr[582] *= k_f * exp(-(-g_RT[9] + g_RT[10] - g_RT[58] + g_RT[62]));
  // reaction 583:  nc7h16 + o2 => c7h15-1 + ho2
  k_f = 60000000 * exp(-(26569.8399544892) * invT);
  qf[583] *= k_f;
  qr[583] *= k_f * exp(-(g_RT[3] - g_RT[11] + g_RT[58] - g_RT[59]));
  // reaction 584:  c7h15-1 + ho2 => nc7h16 + o2
  k_f = 51750 * exp((0.28) * logT - (-204.305966316716) * invT);
  qf[584] *= k_f;
  qr[584] *= k_f * exp(-(-g_RT[3] + g_RT[11] - g_RT[58] + g_RT[59]));
  // reaction 585:  nc7h16 + o2 => c7h15-2 + ho2
  k_f = 40000000 * exp(-(25236.3157901067) * invT);
  qf[585] *= k_f;
  qr[585] *= k_f * exp(-(g_RT[3] - g_RT[11] + g_RT[58] - g_RT[60]));
  // reaction 586:  c7h15-2 + ho2 => nc7h16 + o2
  k_f = 1098 * exp((0.67) * logT - (-272.240216200353) * invT);
  qf[586] *= k_f;
  qr[586] *= k_f * exp(-(-g_RT[3] + g_RT[11] - g_RT[58] + g_RT[60]));
  // reaction 587:  nc7h16 + o2 => c7h15-3 + ho2
  k_f = 40000000 * exp(-(25236.3157901067) * invT);
  qf[587] *= k_f;
  qr[587] *= k_f * exp(-(g_RT[3] - g_RT[11] + g_RT[58] - g_RT[61]));
  // reaction 588:  c7h15-3 + ho2 => nc7h16 + o2
  k_f = 1098 * exp((0.67) * logT - (-272.240216200353) * invT);
  qf[588] *= k_f;
  qr[588] *= k_f * exp(-(-g_RT[3] + g_RT[11] - g_RT[58] + g_RT[61]));
  // reaction 589:  nc7h16 + o2 => c7h15-4 + ho2
  k_f = 20000000 * exp(-(25236.3157901067) * invT);
  qf[589] *= k_f;
  qr[589] *= k_f * exp(-(g_RT[3] - g_RT[11] + g_RT[58] - g_RT[62]));
  // reaction 590:  c7h15-4 + ho2 => nc7h16 + o2
  k_f = 1094 * exp((0.67) * logT - (-272.240216200353) * invT);
  qf[590] *= k_f;
  qr[590] *= k_f * exp(-(-g_RT[3] + g_RT[11] - g_RT[58] + g_RT[62]));
  // reaction 591:  c2h5 + nc7h16 => c2h6 + c7h15-1
  k_f = 100000 * exp(-(6743.10332178324) * invT);
  qf[591] *= k_f;
  qr[591] *= k_f * exp(-(-g_RT[15] + g_RT[17] + g_RT[58] - g_RT[59]));
  // reaction 592:  c2h6 + c7h15-1 => c2h5 + nc7h16
  k_f = 320000 * exp(-(6189.56498939805) * invT);
  qf[592] *= k_f;
  qr[592] *= k_f * exp(-(g_RT[15] - g_RT[17] - g_RT[58] + g_RT[59]));
  // reaction 593:  c2h5 + nc7h16 => c2h6 + c7h15-2
  k_f = 100000 * exp(-(5233.45332436908) * invT);
  qf[593] *= k_f;
  qr[593] *= k_f * exp(-(-g_RT[15] + g_RT[17] + g_RT[58] - g_RT[60]));
  // reaction 594:  c2h6 + c7h15-2 => c2h5 + nc7h16
  k_f = 100000 * exp(-(6491.49498888088) * invT);
  qf[594] *= k_f;
  qr[594] *= k_f * exp(-(g_RT[15] - g_RT[17] - g_RT[58] + g_RT[60]));
  // reaction 595:  c2h5 + nc7h16 => c2h6 + c7h15-3
  k_f = 100000 * exp(-(5233.45332436908) * invT);
  qf[595] *= k_f;
  qr[595] *= k_f * exp(-(-g_RT[15] + g_RT[17] + g_RT[58] - g_RT[61]));
  // reaction 596:  c2h6 + c7h15-3 => c2h5 + nc7h16
  k_f = 100000 * exp(-(6491.49498888088) * invT);
  qf[596] *= k_f;
  qr[596] *= k_f * exp(-(g_RT[15] - g_RT[17] - g_RT[58] + g_RT[61]));
  // reaction 597:  c2h5 + nc7h16 => c2h6 + c7h15-4
  k_f = 50000 * exp(-(5233.45332436908) * invT);
  qf[597] *= k_f;
  qr[597] *= k_f * exp(-(-g_RT[15] + g_RT[17] + g_RT[58] - g_RT[62]));
  // reaction 598:  c2h6 + c7h15-4 => c2h5 + nc7h16
  k_f = 100000 * exp(-(6491.49498888088) * invT);
  qf[598] *= k_f;
  qr[598] *= k_f * exp(-(g_RT[15] - g_RT[17] - g_RT[58] + g_RT[62]));
  // reaction 599:  c2h3 + nc7h16 => c2h4 + c7h15-1
  k_f = 1000000 * exp(-(9057.89998448495) * invT);
  qf[599] *= k_f;
  qr[599] *= k_f * exp(-(-g_RT[16] + g_RT[19] + g_RT[58] - g_RT[59]));
  // reaction 600:  c2h4 + c7h15-1 => c2h3 + nc7h16
  k_f = 2570000 * exp(-(12781.7033114399) * invT);
  qf[600] *= k_f;
  qr[600] *= k_f * exp(-(g_RT[16] - g_RT[19] - g_RT[58] + g_RT[59]));
  // reaction 601:  c2h3 + nc7h16 => c2h4 + c7h15-2
  k_f = 800000 * exp(-(8454.03998551929) * invT);
  qf[601] *= k_f;
  qr[601] *= k_f * exp(-(-g_RT[16] + g_RT[19] + g_RT[58] - g_RT[60]));
  // reaction 602:  c2h4 + c7h15-2 => c2h3 + nc7h16
  k_f = 2000000 * exp(-(12177.8433124742) * invT);
  qf[602] *= k_f;
  qr[602] *= k_f * exp(-(g_RT[16] - g_RT[19] - g_RT[58] + g_RT[60]));
  // reaction 603:  c2h3 + nc7h16 => c2h4 + c7h15-3
  k_f = 800000 * exp(-(8454.03998551929) * invT);
  qf[603] *= k_f;
  qr[603] *= k_f * exp(-(-g_RT[16] + g_RT[19] + g_RT[58] - g_RT[61]));
  // reaction 604:  c2h4 + c7h15-3 => c2h3 + nc7h16
  k_f = 2000000 * exp(-(12177.8433124742) * invT);
  qf[604] *= k_f;
  qr[604] *= k_f * exp(-(g_RT[16] - g_RT[19] - g_RT[58] + g_RT[61]));
  // reaction 605:  c2h3 + nc7h16 => c2h4 + c7h15-4
  k_f = 400000 * exp(-(8454.03998551929) * invT);
  qf[605] *= k_f;
  qr[605] *= k_f * exp(-(-g_RT[16] + g_RT[19] + g_RT[58] - g_RT[62]));
  // reaction 606:  c2h4 + c7h15-4 => c2h3 + nc7h16
  k_f = 2000000 * exp(-(12177.8433124742) * invT);
  qf[606] *= k_f;
  qr[606] *= k_f * exp(-(g_RT[16] - g_RT[19] - g_RT[58] + g_RT[62]));
  // reaction 607:  ch3o2 + nc7h16 => c7h15-1 + ch3o2h
  k_f = 12100000 * exp(-(10280.7164823904) * invT);
  qf[607] *= k_f;
  qr[607] *= k_f * exp(-(g_RT[38] - g_RT[39] + g_RT[58] - g_RT[59]));
  // reaction 608:  c7h15-1 + ch3o2h => ch3o2 + nc7h16
  k_f = 3600000 * exp(-(4931.52332488625) * invT);
  qf[608] *= k_f;
  qr[608] *= k_f * exp(-(-g_RT[38] + g_RT[39] - g_RT[58] + g_RT[59]));
  // reaction 609:  ch3o2 + nc7h16 => c7h15-2 + ch3o2h
  k_f = 8064000 * exp(-(8906.93498474354) * invT);
  qf[609] *= k_f;
  qr[609] *= k_f * exp(-(g_RT[38] - g_RT[39] + g_RT[58] - g_RT[60]));
  // reaction 610:  c7h15-2 + ch3o2h => ch3o2 + nc7h16
  k_f = 237600 * exp(-(1861.90166347746) * invT);
  qf[610] *= k_f;
  qr[610] *= k_f * exp(-(-g_RT[38] + g_RT[39] - g_RT[58] + g_RT[60]));
  // reaction 611:  ch3o2 + nc7h16 => c7h15-3 + ch3o2h
  k_f = 8064000 * exp(-(8906.93498474354) * invT);
  qf[611] *= k_f;
  qr[611] *= k_f * exp(-(g_RT[38] - g_RT[39] + g_RT[58] - g_RT[61]));
  // reaction 612:  c7h15-3 + ch3o2h => ch3o2 + nc7h16
  k_f = 237600 * exp(-(1861.90166347746) * invT);
  qf[612] *= k_f;
  qr[612] *= k_f * exp(-(-g_RT[38] + g_RT[39] - g_RT[58] + g_RT[61]));
  // reaction 613:  ch3o2 + nc7h16 => c7h15-4 + ch3o2h
  k_f = 4032000 * exp(-(8906.93498474354) * invT);
  qf[613] *= k_f;
  qr[613] *= k_f * exp(-(g_RT[38] - g_RT[39] + g_RT[58] - g_RT[62]));
  // reaction 614:  c7h15-4 + ch3o2h => ch3o2 + nc7h16
  k_f = 237600 * exp(-(1861.90166347746) * invT);
  qf[614] *= k_f;
  qr[614] *= k_f * exp(-(-g_RT[38] + g_RT[39] - g_RT[58] + g_RT[62]));
  // reaction 615:  c7h15-1 + nc7h16 => c7h15-2 + nc7h16
  k_f = 100000 * exp(-(5233.45332436908) * invT);
  qf[615] *= k_f;
  qr[615] *= k_f * exp(-(g_RT[58] - g_RT[58] + g_RT[59] - g_RT[60]));
  // reaction 616:  c7h15-2 + nc7h16 => c7h15-1 + nc7h16
  k_f = 150000 * exp(-(6189.56498939805) * invT);
  qf[616] *= k_f;
  qr[616] *= k_f * exp(-(g_RT[58] - g_RT[58] - g_RT[59] + g_RT[60]));
  // reaction 617:  c7h15-1 + nc7h16 => c7h15-3 + nc7h16
  k_f = 100000 * exp(-(5233.45332436908) * invT);
  qf[617] *= k_f;
  qr[617] *= k_f * exp(-(g_RT[58] - g_RT[58] + g_RT[59] - g_RT[61]));
  // reaction 618:  c7h15-3 + nc7h16 => c7h15-1 + nc7h16
  k_f = 150000 * exp(-(6189.56498939805) * invT);
  qf[618] *= k_f;
  qr[618] *= k_f * exp(-(g_RT[58] - g_RT[58] - g_RT[59] + g_RT[61]));
  // reaction 619:  c7h15-1 + nc7h16 => c7h15-4 + nc7h16
  k_f = 50000 * exp(-(5233.45332436908) * invT);
  qf[619] *= k_f;
  qr[619] *= k_f * exp(-(g_RT[58] - g_RT[58] + g_RT[59] - g_RT[62]));
  // reaction 620:  c7h15-4 + nc7h16 => c7h15-1 + nc7h16
  k_f = 150000 * exp(-(6189.56498939805) * invT);
  qf[620] *= k_f;
  qr[620] *= k_f * exp(-(g_RT[58] - g_RT[58] - g_RT[59] + g_RT[62]));
  // reaction 621:  c7h15-2 + nc7h16 => c7h15-3 + nc7h16
  k_f = 100000 * exp(-(5233.45332436908) * invT);
  qf[621] *= k_f;
  qr[621] *= k_f * exp(-(g_RT[58] - g_RT[58] + g_RT[60] - g_RT[61]));
  // reaction 622:  c7h15-3 + nc7h16 => c7h15-2 + nc7h16
  k_f = 100000 * exp(-(5233.45332436908) * invT);
  qf[622] *= k_f;
  qr[622] *= k_f * exp(-(g_RT[58] - g_RT[58] - g_RT[60] + g_RT[61]));
  // reaction 623:  c7h15-2 + nc7h16 => c7h15-4 + nc7h16
  k_f = 50000 * exp(-(5233.45332436908) * invT);
  qf[623] *= k_f;
  qr[623] *= k_f * exp(-(g_RT[58] - g_RT[58] + g_RT[60] - g_RT[62]));
  // reaction 624:  c7h15-4 + nc7h16 => c7h15-2 + nc7h16
  k_f = 100000 * exp(-(5233.45332436908) * invT);
  qf[624] *= k_f;
  qr[624] *= k_f * exp(-(g_RT[58] - g_RT[58] - g_RT[60] + g_RT[62]));
  // reaction 625:  c7h15-3 + nc7h16 => c7h15-4 + nc7h16
  k_f = 50000 * exp(-(5233.45332436908) * invT);
  qf[625] *= k_f;
  qr[625] *= k_f * exp(-(g_RT[58] - g_RT[58] + g_RT[61] - g_RT[62]));
  // reaction 626:  c7h15-4 + nc7h16 => c7h15-3 + nc7h16
  k_f = 100000 * exp(-(5233.45332436908) * invT);
  qf[626] *= k_f;
  qr[626] *= k_f * exp(-(g_RT[58] - g_RT[58] - g_RT[61] + g_RT[62]));
  // reaction 627:  c7h15-2 => c3h6 + pc4h9
  k_f = 2.218e+16 * exp((-0.89) * logT - (15161.9181406962) * invT);
  qf[627] *= k_f;
  qr[627] *= k_f * exp(-(-g_RT[26] - g_RT[31] + g_RT[60])) * (refCinv);
  // reaction 628:  c3h6 + pc4h9 => c7h15-2
  k_f = 100000 * exp(-(4126.3766595987) * invT);
  qf[628] *= k_f;
  qr[628] *= k_f * exp(-(g_RT[26] + g_RT[31] - g_RT[60])) * (refC);
  // reaction 629:  c7h15-2 => c7h14-2 + h
  k_f = 2.71e+15 * exp((-0.72) * logT - (18915.9144675994) * invT);
  qf[629] *= k_f;
  qr[629] *= k_f * exp(-(-g_RT[0] + g_RT[60] - g_RT[63])) * (refCinv);
  // reaction 630:  c7h14-2 + h => c7h15-2
  k_f = 10000000 * exp(-(1459.32833083369) * invT);
  qf[630] *= k_f;
  qr[630] *= k_f * exp(-(g_RT[0] - g_RT[60] + g_RT[63])) * (refC);
  // reaction 631:  c7h15-3 => c4h8-1 + nc3h7
  k_f = 9.633e+17 * exp((-1.42) * logT - (15388.3656403083) * invT);
  qf[631] *= k_f;
  qr[631] *= k_f * exp(-(-g_RT[28] - g_RT[30] + g_RT[61])) * (refCinv);
  // reaction 632:  c4h8-1 + nc3h7 => c7h15-3
  k_f = 100000 * exp(-(3874.76832669634) * invT);
  qf[632] *= k_f;
  qr[632] *= k_f * exp(-(g_RT[28] + g_RT[30] - g_RT[61])) * (refC);
  // reaction 633:  c7h15-3 => c7h14-2 + h
  k_f = 2.71e+15 * exp((-0.72) * logT - (18915.9144675994) * invT);
  qf[633] *= k_f;
  qr[633] *= k_f * exp(-(-g_RT[0] + g_RT[61] - g_RT[63])) * (refCinv);
  // reaction 634:  c7h14-2 + h => c7h15-3
  k_f = 10000000 * exp(-(1459.32833083369) * invT);
  qf[634] *= k_f;
  qr[634] *= k_f * exp(-(g_RT[0] - g_RT[61] + g_RT[63])) * (refC);
  // reaction 635:  c7h15-3 => c7h14-3 + h
  k_f = 2.018e+15 * exp((-0.66) * logT - (18961.2039675218) * invT);
  qf[635] *= k_f;
  qr[635] *= k_f * exp(-(-g_RT[0] + g_RT[61] - g_RT[64])) * (refCinv);
  // reaction 636:  c7h14-3 + h => c7h15-3
  k_f = 10000000 * exp(-(1459.32833083369) * invT);
  qf[636] *= k_f;
  qr[636] *= k_f * exp(-(g_RT[0] - g_RT[61] + g_RT[64])) * (refC);
  // reaction 637:  c7h15-4 => c2h5 + c5h10-1
  k_f = 5.426e+16 * exp((-0.89) * logT - (15393.3978069664) * invT);
  qf[637] *= k_f;
  qr[637] *= k_f * exp(-(-g_RT[17] - g_RT[36] + g_RT[62])) * (refCinv);
  // reaction 638:  c2h5 + c5h10-1 => c7h15-4
  k_f = 100000 * exp(-(4126.3766595987) * invT);
  qf[638] *= k_f;
  qr[638] *= k_f * exp(-(g_RT[17] + g_RT[36] - g_RT[62])) * (refC);
  // reaction 639:  c7h15-4 => c7h14-3 + h
  k_f = 4.02e+15 * exp((-0.66) * logT - (18961.2039675218) * invT);
  qf[639] *= k_f;
  qr[639] *= k_f * exp(-(-g_RT[0] + g_RT[62] - g_RT[64])) * (refCinv);
  // reaction 640:  c7h14-3 + h => c7h15-4
  k_f = 10000000 * exp(-(1459.32833083369) * invT);
  qf[640] *= k_f;
  qr[640] *= k_f * exp(-(g_RT[0] - g_RT[62] + g_RT[64])) * (refC);
  // reaction 641:  c7h15-2 + o2 => c7h14-2 + ho2
  k_f = 3e-15 * exp(-(1509.64999741416) * invT);
  qf[641] *= k_f;
  qr[641] *= k_f * exp(-(g_RT[3] - g_RT[11] + g_RT[60] - g_RT[63]));
  // reaction 642:  c7h14-2 + ho2 => c7h15-2 + o2
  k_f = 3.793e-15 * exp((0.05) * logT - (9193.76848425223) * invT);
  qf[642] *= k_f;
  qr[642] *= k_f * exp(-(-g_RT[3] + g_RT[11] - g_RT[60] + g_RT[63]));
  // reaction 643:  c7h15-3 + o2 => c7h14-2 + ho2
  k_f = 3e-15 * exp(-(1509.64999741416) * invT);
  qf[643] *= k_f;
  qr[643] *= k_f * exp(-(g_RT[3] - g_RT[11] + g_RT[61] - g_RT[63]));
  // reaction 644:  c7h14-2 + ho2 => c7h15-3 + o2
  k_f = 3.793e-15 * exp((0.05) * logT - (9193.76848425223) * invT);
  qf[644] *= k_f;
  qr[644] *= k_f * exp(-(-g_RT[3] + g_RT[11] - g_RT[61] + g_RT[63]));
  // reaction 645:  c7h15-3 + o2 => c7h14-3 + ho2
  k_f = 3e-15 * exp(-(1509.64999741416) * invT);
  qf[645] *= k_f;
  qr[645] *= k_f * exp(-(g_RT[3] - g_RT[11] + g_RT[61] - g_RT[64]));
  // reaction 646:  c7h14-3 + ho2 => c7h15-3 + o2
  k_f = 5.094e-15 * exp((-0.01) * logT - (9148.4789843298) * invT);
  qf[646] *= k_f;
  qr[646] *= k_f * exp(-(-g_RT[3] + g_RT[11] - g_RT[61] + g_RT[64]));
  // reaction 647:  c7h15-4 + o2 => c7h14-3 + ho2
  k_f = 6e-15 * exp(-(1509.64999741416) * invT);
  qf[647] *= k_f;
  qr[647] *= k_f * exp(-(g_RT[3] - g_RT[11] + g_RT[62] - g_RT[64]));
  // reaction 648:  c7h14-3 + ho2 => c7h15-4 + o2
  k_f = 5.113e-15 * exp((-0.01) * logT - (9148.4789843298) * invT);
  qf[648] *= k_f;
  qr[648] *= k_f * exp(-(-g_RT[3] + g_RT[11] - g_RT[62] + g_RT[64]));
  // reaction 649:  c7h15-1 => c7h15-3
  k_f = 1386000000 * exp((0.98) * logT - (16988.5946375673) * invT);
  qf[649] *= k_f;
  qr[649] *= k_f * exp(-(g_RT[59] - g_RT[61]));
  // reaction 650:  c7h15-3 => c7h15-1
  k_f = 44100000 * exp((1.38) * logT - (18256.7006353952) * invT);
  qf[650] *= k_f;
  qr[650] *= k_f * exp(-(-g_RT[59] + g_RT[61]));
  // reaction 651:  c7h15-1 => c7h15-4
  k_f = 2541000000 * exp((0.35) * logT - (9943.56131630126) * invT);
  qf[651] *= k_f;
  qr[651] *= k_f * exp(-(g_RT[59] - g_RT[62]));
  // reaction 652:  c7h15-4 => c7h15-1
  k_f = 161100000 * exp((0.74) * logT - (11211.6673141292) * invT);
  qf[652] *= k_f;
  qr[652] *= k_f * exp(-(-g_RT[59] + g_RT[62]));
  // reaction 653:  c7h15-2 => c7h15-3
  k_f = 958700000 * exp((1.39) * logT - (19977.7016324474) * invT);
  qf[653] *= k_f;
  qr[653] *= k_f * exp(-(g_RT[60] - g_RT[61]));
  // reaction 654:  c7h15-3 => c7h15-2
  k_f = 958700000 * exp((1.39) * logT - (19977.7016324474) * invT);
  qf[654] *= k_f;
  qr[654] *= k_f * exp(-(-g_RT[60] + g_RT[61]));
  // reaction 655:  c7h15-1 => c7h15-2
  k_f = 547800000 * exp((1.62) * logT - (19504.6779665909) * invT);
  qf[655] *= k_f;
  qr[655] *= k_f * exp(-(g_RT[59] - g_RT[60]));
  // reaction 656:  c7h15-2 => c7h15-1
  k_f = 17430000 * exp((2.01) * logT - (20772.7839644188) * invT);
  qf[656] *= k_f;
  qr[656] *= k_f * exp(-(-g_RT[59] + g_RT[60]));
  // reaction 657:  c7h14-2 + oh => c2h5cho + pc4h9
  k_f = 100000 * exp(-(-2012.86666321888) * invT);
  qf[657] *= k_f;
  qr[657] *= k_f * exp(-(g_RT[4] - g_RT[31] - g_RT[33] + g_RT[63]));
  // reaction 658:  c7h14-3 + oh => c2h5cho + pc4h9
  k_f = 100000 * exp(-(-2012.86666321888) * invT);
  qf[658] *= k_f;
  qr[658] *= k_f * exp(-(g_RT[4] - g_RT[31] - g_RT[33] + g_RT[64]));
  // reaction 659:  c7h14-2 + o => c5h10-1 + ch3cho
  k_f = 100000 * exp(-(-528.377499094956) * invT);
  qf[659] *= k_f;
  qr[659] *= k_f * exp(-(g_RT[2] - g_RT[24] - g_RT[36] + g_RT[63]));
  // reaction 660:  c7h14-3 + o => c5h10-1 + ch3cho
  k_f = 100000 * exp(-(-528.377499094956) * invT);
  qf[660] *= k_f;
  qr[660] *= k_f * exp(-(g_RT[2] - g_RT[24] - g_RT[36] + g_RT[64]));
  // reaction 661:  c7h14-2 => c4h7 + nc3h7
  k_f = 1e+16 * exp(-(35728.3832721351) * invT);
  qf[661] *= k_f;
  qr[661] *= k_f * exp(-(-g_RT[28] - g_RT[29] + g_RT[63])) * (refCinv);
  // reaction 662:  c4h7 + nc3h7 => c7h14-2
  k_f = 10000000;
  qf[662] *= k_f;
  qr[662] *= k_f * exp(-(g_RT[28] + g_RT[29] - g_RT[63])) * (refC);
  // reaction 663:  c7h14-3 => c4h7 + nc3h7
  k_f = 1e+16 * exp(-(35728.3832721351) * invT);
  qf[663] *= k_f;
  qr[663] *= k_f * exp(-(-g_RT[28] - g_RT[29] + g_RT[64])) * (refCinv);
  // reaction 664:  c4h7 + nc3h7 => c7h14-3
  k_f = 10000000;
  qf[664] *= k_f;
  qr[664] *= k_f * exp(-(g_RT[28] + g_RT[29] - g_RT[64])) * (refC);
  // reaction 665:  c7h15o2-1 => c7h15-1 + o2
  k_f = 2.657e+20 * exp((-1.67) * logT - (17813.8699694871) * invT);
  qf[665] *= k_f;
  qr[665] *= k_f * exp(-(-g_RT[3] - g_RT[59] + g_RT[65])) * (refCinv);
  // reaction 666:  c7h15-1 + o2 => c7h15o2-1
  k_f = 4520000;
  qf[666] *= k_f;
  qr[666] *= k_f * exp(-(g_RT[3] + g_RT[59] - g_RT[65])) * (refC);
  // reaction 667:  c7h15o2-2 => c7h15-2 + o2
  k_f = 1.357e+23 * exp((-2.36) * logT - (18956.1718008638) * invT);
  qf[667] *= k_f;
  qr[667] *= k_f * exp(-(-g_RT[3] - g_RT[60] + g_RT[66])) * (refCinv);
  // reaction 668:  c7h15-2 + o2 => c7h15o2-2
  k_f = 7540000;
  qf[668] *= k_f;
  qr[668] *= k_f * exp(-(g_RT[3] + g_RT[60] - g_RT[66])) * (refC);
  // reaction 669:  c7h15o2-3 => c7h15-3 + o2
  k_f = 9.879e+21 * exp((-1.97) * logT - (19051.7829673667) * invT);
  qf[669] *= k_f;
  qr[669] *= k_f * exp(-(-g_RT[3] - g_RT[61] + g_RT[67])) * (refCinv);
  // reaction 670:  c7h15-3 + o2 => c7h15o2-3
  k_f = 7540000;
  qf[670] *= k_f;
  qr[670] *= k_f * exp(-(g_RT[3] + g_RT[61] - g_RT[67])) * (refC);
  // reaction 671:  c7h15o2-4 => c7h15-4 + o2
  k_f = 1.357e+23 * exp((-2.36) * logT - (18956.1718008638) * invT);
  qf[671] *= k_f;
  qr[671] *= k_f * exp(-(-g_RT[3] - g_RT[62] + g_RT[68])) * (refCinv);
  // reaction 672:  c7h15-4 + o2 => c7h15o2-4
  k_f = 7540000;
  qf[672] *= k_f;
  qr[672] *= k_f * exp(-(g_RT[3] + g_RT[62] - g_RT[68])) * (refC);
  // reaction 673:  c7h15o2-1 => c7h14ooh1-3
  k_f = 25000000000 * exp(-(10492.0674820284) * invT);
  qf[673] *= k_f;
  qr[673] *= k_f * exp(-(g_RT[65] - g_RT[69]));
  // reaction 674:  c7h14ooh1-3 => c7h15o2-1
  k_f = 2653000000 * exp((-0.11) * logT - (4146.50532623089) * invT);
  qf[674] *= k_f;
  qr[674] *= k_f * exp(-(-g_RT[65] + g_RT[69]));
  // reaction 675:  c7h15o2-2 => c7h14ooh2-3
  k_f = 200000000000 * exp(-(13511.3674768567) * invT);
  qf[675] *= k_f;
  qr[675] *= k_f * exp(-(g_RT[66] - g_RT[70]));
  // reaction 676:  c7h14ooh2-3 => c7h15o2-2
  k_f = 22620000000 * exp((-0.11) * logT - (7180.90182103335) * invT);
  qf[676] *= k_f;
  qr[676] *= k_f * exp(-(-g_RT[66] + g_RT[70]));
  // reaction 677:  c7h15o2-2 => c7h14ooh2-4
  k_f = 25000000000 * exp(-(10492.0674820284) * invT);
  qf[677] *= k_f;
  qr[677] *= k_f * exp(-(g_RT[66] - g_RT[71]));
  // reaction 678:  c7h14ooh2-4 => c7h15o2-2
  k_f = 2827000000 * exp((-0.11) * logT - (4161.60182620503) * invT);
  qf[678] *= k_f;
  qr[678] *= k_f * exp(-(-g_RT[66] + g_RT[71]));
  // reaction 679:  c7h15o2-3 => c7h14ooh3-2
  k_f = 200000000000 * exp(-(13511.3674768567) * invT);
  qf[679] *= k_f;
  qr[679] *= k_f * exp(-(g_RT[67] - g_RT[72]));
  // reaction 680:  c7h14ooh3-2 => c7h15o2-3
  k_f = 310700000000 * exp((-0.51) * logT - (7085.29065453045) * invT);
  qf[680] *= k_f;
  qr[680] *= k_f * exp(-(-g_RT[67] + g_RT[72]));
  // reaction 681:  c7h15o2-3 => c7h14ooh3-4
  k_f = 200000000000 * exp(-(13511.3674768567) * invT);
  qf[681] *= k_f;
  qr[681] *= k_f * exp(-(g_RT[67] - g_RT[73]));
  // reaction 682:  c7h14ooh3-4 => c7h15o2-3
  k_f = 310700000000 * exp((-0.51) * logT - (7085.29065453045) * invT);
  qf[682] *= k_f;
  qr[682] *= k_f * exp(-(-g_RT[67] + g_RT[73]));
  // reaction 683:  c7h15o2-3 => c7h14ooh3-5
  k_f = 25000000000 * exp(-(10492.0674820284) * invT);
  qf[683] *= k_f;
  qr[683] *= k_f * exp(-(g_RT[67] - g_RT[74]));
  // reaction 684:  c7h14ooh3-5 => c7h15o2-3
  k_f = 38840000000 * exp((-0.51) * logT - (4065.99065970213) * invT);
  qf[684] *= k_f;
  qr[684] *= k_f * exp(-(-g_RT[67] + g_RT[74]));
  // reaction 685:  c7h15o2-4 => c7h14ooh4-2
  k_f = 50000000000 * exp(-(10492.0674820284) * invT);
  qf[685] *= k_f;
  qr[685] *= k_f * exp(-(g_RT[68] - g_RT[75]));
  // reaction 686:  c7h14ooh4-2 => c7h15o2-4
  k_f = 5655000000 * exp((-0.11) * logT - (4161.60182620503) * invT);
  qf[686] *= k_f;
  qr[686] *= k_f * exp(-(-g_RT[68] + g_RT[75]));
  // reaction 687:  c7h15o2-4 => c7h14ooh4-3
  k_f = 400000000000 * exp(-(13511.3674768567) * invT);
  qf[687] *= k_f;
  qr[687] *= k_f * exp(-(g_RT[68] - g_RT[76]));
  // reaction 688:  c7h14ooh4-3 => c7h15o2-4
  k_f = 45240000000 * exp((-0.11) * logT - (7180.90182103335) * invT);
  qf[688] *= k_f;
  qr[688] *= k_f * exp(-(-g_RT[68] + g_RT[76]));
  // reaction 689:  c7h14ooh2-3 => c7h14-2 + ho2
  k_f = 1.61e+20 * exp((-2.52) * logT - (10743.6758149308) * invT);
  qf[689] *= k_f;
  qr[689] *= k_f * exp(-(-g_RT[11] - g_RT[63] + g_RT[70])) * (refCinv);
  // reaction 690:  c7h14-2 + ho2 => c7h14ooh2-3
  k_f = 100000 * exp(-(5802.08815672842) * invT);
  qf[690] *= k_f;
  qr[690] *= k_f * exp(-(g_RT[11] + g_RT[63] - g_RT[70])) * (refC);
  // reaction 691:  c7h14ooh3-2 => c7h14-2 + ho2
  k_f = 1.61e+20 * exp((-2.52) * logT - (10743.6758149308) * invT);
  qf[691] *= k_f;
  qr[691] *= k_f * exp(-(-g_RT[11] - g_RT[63] + g_RT[72])) * (refCinv);
  // reaction 692:  c7h14-2 + ho2 => c7h14ooh3-2
  k_f = 100000 * exp(-(5802.08815672842) * invT);
  qf[692] *= k_f;
  qr[692] *= k_f * exp(-(g_RT[11] + g_RT[63] - g_RT[72])) * (refC);
  // reaction 693:  c7h14ooh3-4 => c7h14-3 + ho2
  k_f = 1.199e+20 * exp((-2.46) * logT - (10285.7486490485) * invT);
  qf[693] *= k_f;
  qr[693] *= k_f * exp(-(-g_RT[11] - g_RT[64] + g_RT[73])) * (refCinv);
  // reaction 694:  c7h14-3 + ho2 => c7h14ooh3-4
  k_f = 100000 * exp(-(5298.8714909237) * invT);
  qf[694] *= k_f;
  qr[694] *= k_f * exp(-(g_RT[11] + g_RT[64] - g_RT[73])) * (refC);
  // reaction 695:  c7h14ooh4-3 => c7h14-3 + ho2
  k_f = 2.389e+20 * exp((-2.46) * logT - (10285.7486490485) * invT);
  qf[695] *= k_f;
  qr[695] *= k_f * exp(-(-g_RT[11] - g_RT[64] + g_RT[76])) * (refCinv);
  // reaction 696:  c7h14-3 + ho2 => c7h14ooh4-3
  k_f = 100000 * exp(-(5298.8714909237) * invT);
  qf[696] *= k_f;
  qr[696] *= k_f * exp(-(g_RT[11] + g_RT[64] - g_RT[76])) * (refC);
  // reaction 697:  c7h14ooh1-3 => c7h14o1-3 + oh
  k_f = 75000000000 * exp(-(7674.05415352198) * invT);
  qf[697] *= k_f;
  qr[697] *= k_f * exp(-(-g_RT[4] + g_RT[69] - g_RT[81])) * (refCinv);
  // reaction 698:  c7h14ooh2-4 => c7h14o2-4 + oh
  k_f = 75000000000 * exp(-(7674.05415352198) * invT);
  qf[698] *= k_f;
  qr[698] *= k_f * exp(-(-g_RT[4] + g_RT[71] - g_RT[82])) * (refCinv);
  // reaction 699:  c7h14ooh4-2 => c7h14o2-4 + oh
  k_f = 75000000000 * exp(-(7674.05415352198) * invT);
  qf[699] *= k_f;
  qr[699] *= k_f * exp(-(-g_RT[4] + g_RT[75] - g_RT[82])) * (refCinv);
  // reaction 700:  c7h14ooh2-4 => c5h10-1 + ch3cho + oh
  k_f = 5.364e+17 * exp((-1.4) * logT - (13461.0458102763) * invT);
  qf[700] *= k_f;
  qr[700] *= k_f * exp(-(-g_RT[4] - g_RT[24] - g_RT[36] + g_RT[71])) *
             ((refCinv * refCinv));
  // reaction 701:  c7h14ooh3-5 => c2h5cho + c4h8-1 + oh
  k_f = 2.47e+18 * exp((-1.55) * logT - (13596.9143100435) * invT);
  qf[701] *= k_f;
  qr[701] *= k_f * exp(-(-g_RT[4] - g_RT[30] - g_RT[33] + g_RT[74])) *
             ((refCinv * refCinv));
  // reaction 702:  c7h14ooh4-2 => c3h6 + nc3h7cho + oh
  k_f = 1.3e+18 * exp((-1.49) * logT - (13486.2066435665) * invT);
  qf[702] *= k_f;
  qr[702] *= k_f * exp(-(-g_RT[4] - g_RT[26] - g_RT[52] + g_RT[75])) *
             ((refCinv * refCinv));
  // reaction 703:  c7h14ooh1-3o2 => c7h14ooh1-3 + o2
  k_f = 1.367e+23 * exp((-2.37) * logT - (18941.0753008896) * invT);
  qf[703] *= k_f;
  qr[703] *= k_f * exp(-(-g_RT[3] - g_RT[69] + g_RT[77])) * (refCinv);
  // reaction 704:  c7h14ooh1-3 + o2 => c7h14ooh1-3o2
  k_f = 7540000;
  qf[704] *= k_f;
  qr[704] *= k_f * exp(-(g_RT[3] + g_RT[69] - g_RT[77])) * (refC);
  // reaction 705:  c7h14ooh2-4o2 => c7h14ooh2-4 + o2
  k_f = 1.389e+23 * exp((-2.38) * logT - (18920.9466342575) * invT);
  qf[705] *= k_f;
  qr[705] *= k_f * exp(-(-g_RT[3] - g_RT[71] + g_RT[78])) * (refCinv);
  // reaction 706:  c7h14ooh2-4 + o2 => c7h14ooh2-4o2
  k_f = 7540000;
  qf[706] *= k_f;
  qr[706] *= k_f * exp(-(g_RT[3] + g_RT[71] - g_RT[78])) * (refC);
  // reaction 707:  c7h14ooh3-5o2 => c7h14ooh3-5 + o2
  k_f = 1.389e+23 * exp((-2.38) * logT - (18920.9466342575) * invT);
  qf[707] *= k_f;
  qr[707] *= k_f * exp(-(-g_RT[3] - g_RT[74] + g_RT[79])) * (refCinv);
  // reaction 708:  c7h14ooh3-5 + o2 => c7h14ooh3-5o2
  k_f = 7540000;
  qf[708] *= k_f;
  qr[708] *= k_f * exp(-(g_RT[3] + g_RT[74] - g_RT[79])) * (refC);
  // reaction 709:  c7h14ooh4-2o2 => c7h14ooh4-2 + o2
  k_f = 6.969e+22 * exp((-2.38) * logT - (18920.9466342575) * invT);
  qf[709] *= k_f;
  qr[709] *= k_f * exp(-(-g_RT[3] - g_RT[75] + g_RT[80])) * (refCinv);
  // reaction 710:  c7h14ooh4-2 + o2 => c7h14ooh4-2o2
  k_f = 7540000;
  qf[710] *= k_f;
  qr[710] *= k_f * exp(-(g_RT[3] + g_RT[75] - g_RT[80])) * (refC);
  // reaction 711:  c7h14ooh1-3o2 => nc7ket13 + oh
  k_f = 25000000000 * exp(-(10768.836648221) * invT);
  qf[711] *= k_f;
  qr[711] *= k_f * exp(-(-g_RT[4] + g_RT[77] - g_RT[83])) * (refCinv);
  // reaction 712:  nc7ket13 + oh => c7h14ooh1-3o2
  k_f = 0.003303 * exp((1.41) * logT - (22664.8786278446) * invT);
  qf[712] *= k_f;
  qr[712] *= k_f * exp(-(g_RT[4] - g_RT[77] + g_RT[83])) * (refC);
  // reaction 713:  c7h14ooh2-4o2 => nc7ket24 + oh
  k_f = 12500000000 * exp(-(8982.41748461425) * invT);
  qf[713] *= k_f;
  qr[713] *= k_f * exp(-(-g_RT[4] + g_RT[78] - g_RT[84])) * (refCinv);
  // reaction 714:  nc7ket24 + oh => c7h14ooh2-4o2
  k_f = 0.0001615 * exp((1.83) * logT - (22242.1766285686) * invT);
  qf[714] *= k_f;
  qr[714] *= k_f * exp(-(g_RT[4] - g_RT[78] + g_RT[84])) * (refC);
  // reaction 715:  c7h14ooh3-5o2 => nc7ket35 + oh
  k_f = 12500000000 * exp(-(8982.41748461425) * invT);
  qf[715] *= k_f;
  qr[715] *= k_f * exp(-(-g_RT[4] + g_RT[79] - g_RT[85])) * (refCinv);
  // reaction 716:  nc7ket35 + oh => c7h14ooh3-5o2
  k_f = 0.0001615 * exp((1.83) * logT - (22242.1766285686) * invT);
  qf[716] *= k_f;
  qr[716] *= k_f * exp(-(g_RT[4] - g_RT[79] + g_RT[85])) * (refC);
  // reaction 717:  c7h14ooh4-2o2 => nc7ket42 + oh
  k_f = 12500000000 * exp(-(8982.41748461425) * invT);
  qf[717] *= k_f;
  qr[717] *= k_f * exp(-(-g_RT[4] + g_RT[80] - g_RT[86])) * (refCinv);
  // reaction 718:  nc7ket42 + oh => c7h14ooh4-2o2
  k_f = 0.0001615 * exp((1.83) * logT - (22242.1766285686) * invT);
  qf[718] *= k_f;
  qr[718] *= k_f * exp(-(g_RT[4] - g_RT[80] + g_RT[86])) * (refC);
  // reaction 719:  nc7ket13 => ch2cho + nc4h9cho + oh
  k_f = 1.05e+16 * exp(-(20933.8132974763) * invT);
  qf[719] *= k_f;
  qr[719] *= k_f * exp(-(-g_RT[4] - g_RT[23] - g_RT[56] + g_RT[83])) *
             ((refCinv * refCinv));
  // reaction 720:  nc7ket24 => ch3coch2 + nc3h7cho + oh
  k_f = 1.05e+16 * exp(-(20933.8132974763) * invT);
  qf[720] *= k_f;
  qr[720] *= k_f * exp(-(-g_RT[4] - g_RT[32] - g_RT[52] + g_RT[84])) *
             ((refCinv * refCinv));
  // reaction 721:  nc7ket35 => c2h5cho + c2h5coch2 + oh
  k_f = 1.05e+16 * exp(-(20933.8132974763) * invT);
  qf[721] *= k_f;
  qr[721] *= k_f * exp(-(-g_RT[4] - g_RT[33] - g_RT[54] + g_RT[85])) *
             ((refCinv * refCinv));
  // reaction 722:  nc7ket42 => ch3cho + nc3h7coch2 + oh
  k_f = 1.05e+16 * exp(-(20933.8132974763) * invT);
  qf[722] *= k_f;
  qr[722] *= k_f * exp(-(-g_RT[4] - g_RT[24] - g_RT[55] + g_RT[86])) *
             ((refCinv * refCinv));
  // reaction 723:  c7h14o2-4 + oh => c5h10-1 + ch3co + h2o
  k_f = 2500000;
  qf[723] *= k_f;
  qr[723] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[22] - g_RT[36] + g_RT[82])) *
             (refCinv);
  // reaction 724:  c7h14o1-3 + oh => c2h4 + h2o + nc4h9co
  k_f = 2500000;
  qf[724] *= k_f;
  qr[724] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[16] - g_RT[57] + g_RT[81])) *
             (refCinv);
  // reaction 725:  c7h14o2-4 + oh => c3h6 + h2o + nc3h7co
  k_f = 2500000;
  qf[725] *= k_f;
  qr[725] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[26] - g_RT[53] + g_RT[82])) *
             (refCinv);
  // reaction 726:  c7h14o2-4 + ho2 => c5h10-1 + ch3co + h2o2
  k_f = 5000000 * exp(-(8906.93498474354) * invT);
  qf[726] *= k_f;
  qr[726] *= k_f *
             exp(-(g_RT[11] - g_RT[12] - g_RT[22] - g_RT[36] + g_RT[82])) *
             (refCinv);
  // reaction 727:  c7h14o1-3 + ho2 => c2h4 + h2o2 + nc4h9co
  k_f = 5000000 * exp(-(8906.93498474354) * invT);
  qf[727] *= k_f;
  qr[727] *= k_f *
             exp(-(g_RT[11] - g_RT[12] - g_RT[16] - g_RT[57] + g_RT[81])) *
             (refCinv);
  // reaction 728:  c7h14o2-4 + ho2 => c3h6 + h2o2 + nc3h7co
  k_f = 5000000 * exp(-(8906.93498474354) * invT);
  qf[728] *= k_f;
  qr[728] *= k_f *
             exp(-(g_RT[11] - g_RT[12] - g_RT[26] - g_RT[53] + g_RT[82])) *
             (refCinv);
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
productionRate(amrex::Real* wdot, const amrex::Real* sc, const amrex::Real T)
{
  const amrex::Real invT = 1.0 / T;
  const amrex::Real logT = log(T);

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  const amrex::Real refC = 101325 / 8.31446 * invT;
  const amrex::Real refCinv = 1 / refC;

  for (int i = 0; i < 88; ++i) {
    wdot[i] = 0.0;
  }

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int i = 0; i < 88; ++i) {
    mixture += sc[i];
  }

  // compute the Gibbs free energy
  amrex::Real g_RT[88];
  gibbs(g_RT, T);

  {
    // reaction 0:  ch3 + h (+M) <=> ch4 (+M)
    const amrex::Real k_f = 2138000000 * exp((-0.4) * logT);
    amrex::Real Corr = mixture + sc[1] + (4) * sc[5] + sc[6] + (2) * sc[8];
    const amrex::Real redP =
      Corr / k_f * 3.31e+18 * exp(-4 * logT - 1060.78073151635 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(1 * exp(-T * 1e+15) + exp(-40 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[0] * sc[9]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] + g_RT[9] - g_RT[10])) * (refC) * (sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[9] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 27:  c2h4 + h (+M) <=> c2h5 (+M)
    const amrex::Real k_f =
      1081000 * exp((0.45) * logT - (916.860765096199) * invT);
    amrex::Real Corr = mixture + sc[1] + (4) * sc[5] + sc[6] + (2) * sc[8];
    const amrex::Real redP =
      Corr / k_f * 1.112e+22 * exp(-5 * logT - 2238.30772949939 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-T * 0.0105263157894737) + exp(-200 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[0] * sc[16]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] + g_RT[16] - g_RT[17])) * (refC) * (sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[16] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 40:  2 ch3 (+M) <=> c2h6 (+M)
    const amrex::Real k_f =
      92140000000 * exp((-1.17) * logT - (319.945156118641) * invT);
    amrex::Real Corr = mixture + sc[1] + (4) * sc[5] + sc[6] + (2) * sc[8];
    const amrex::Real redP =
      Corr / k_f * 1.135e+24 * exp(-5.246 * logT - 857.984415197047 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.595 * exp(-T * 0.000892857142857143) +
      0.405 * exp(-T * 0.014367816091954) + exp(-1e+15 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * ((sc[9] * sc[9]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[9] - g_RT[15])) * (refC) * (sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[9] -= 2.000000 * qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 43:  h + o2 (+M) <=> ho2 (+M)
    const amrex::Real k_f = 1475000 * exp((0.6) * logT);
    amrex::Real Corr =
      mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[8];
    const amrex::Real redP =
      Corr / k_f * 35000 * exp(-0.41 * logT - -561.589799038067 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.5 * exp(-T * 1e+30) + 0.5 * exp(-T * 1e-30) + exp(-1e+100 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[0] * sc[3]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] + g_RT[3] - g_RT[11])) * (refC) * (sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[3] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 89:  2 oh (+M) <=> h2o2 (+M)
    const amrex::Real k_f = 123600000 * exp((-0.37) * logT);
    amrex::Real Corr =
      mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[8];
    const amrex::Real redP =
      Corr / k_f * 3.041e+18 * exp(-4.63 * logT - 1031.09094823387 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.53 * exp(-T * 0.01) + 0.47 * exp(-T * 0.0005) + exp(-1e+15 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * ((sc[4] * sc[4]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[4] - g_RT[12])) * (refC) * (sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= 2.000000 * qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 102:  c2h3 + h (+M) <=> c2h4 (+M)
    const amrex::Real k_f =
      6100000 * exp((0.27) * logT - (140.900666425322) * invT);
    amrex::Real Corr = mixture;
    const amrex::Real redP =
      Corr / k_f * 9.8e+17 * exp(-3.86 * logT - 1670.67933047167 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.218 * exp(-T * 0.00480769230769231) +
      0.782 * exp(-T * 0.000375516334960571) + exp(-6095 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[0] * sc[19]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] - g_RT[16] + g_RT[19])) * (refC) * (sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[16] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 105:  c2h2 + h (+M) <=> c2h3 (+M)
    const amrex::Real k_f =
      311000 * exp((0.58) * logT - (1302.82794776842) * invT);
    amrex::Real Corr = mixture + sc[1] + (4) * sc[5] + sc[6] + (2) * sc[8];
    const amrex::Real redP =
      Corr / k_f * 2.254e+28 * exp(-7.269 * logT - 3309.65601099764 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-T * 0.00148148148148148) + exp(-1e+15 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[0] * sc[18]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] + g_RT[18] - g_RT[19])) * (refC) * (sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[18] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 44:  co + o (+M) <=> co2 (+M)
    const amrex::Real k_f = 18000 * exp(-(1199.66853127845) * invT);
    amrex::Real Corr =
      mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[8];
    const amrex::Real redP =
      Corr / k_f * 1350000000000 * exp(-2.788 * logT - 2108.98104638758 * invT);
    Corr = redP / (1.0 + redP);
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[6]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[6] - g_RT[8])) * (refC) * (sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 69:  ch3o (+M) <=> ch2o + h (+M)
    const amrex::Real k_f = 54500000000000 * exp(-(6793.42498836372) * invT);
    amrex::Real Corr = mixture;
    const amrex::Real redP =
      Corr / k_f * 2.344e+19 * exp(-2.7 * logT - 15398.4299736244 * invT);
    Corr = redP / (1.0 + redP);
    const amrex::Real qf = Corr * k_f * (sc[14]);
    const amrex::Real qr = Corr * k_f * exp(-(-g_RT[0] - g_RT[13] + g_RT[14])) *
                           (refCinv) * (sc[0] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[13] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 70:  c2h4 (+M) <=> c2h2 + h2 (+M)
    const amrex::Real k_f = 18000000000000 * exp(-(38244.4666011587) * invT);
    amrex::Real Corr = mixture;
    const amrex::Real redP =
      Corr / k_f * 1500000000 * exp(-27899.8416022111 * invT);
    Corr = redP / (1.0 + redP);
    const amrex::Real qf = Corr * k_f * (sc[16]);
    const amrex::Real qr = Corr * k_f * exp(-(-g_RT[1] + g_RT[16] - g_RT[18])) *
                           (refCinv) * (sc[1] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[16] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 151:  ch3co (+M) <=> ch3 + co (+M)
    const amrex::Real k_f = 3000000000000 * exp(-(8413.78265225491) * invT);
    amrex::Real Corr = mixture;
    const amrex::Real redP =
      Corr / k_f * 1200000000 * exp(-6299.26622254348 * invT);
    Corr = redP / (1.0 + redP);
    const amrex::Real qf = Corr * k_f * (sc[22]);
    const amrex::Real qr = Corr * k_f * exp(-(-g_RT[6] - g_RT[9] + g_RT[22])) *
                           (refCinv) * (sc[6] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[9] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 21:  hco + M => co + h + M
    const amrex::Real k_f =
      186000000000 * exp((-1) * logT - (8554.68331868023) * invT);
    const amrex::Real Corr =
      mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[8];
    const amrex::Real qf = Corr * k_f * (sc[7]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[0] - g_RT[6] + g_RT[7])) * (refCinv) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 22:  co + h + M => hco + M
    const amrex::Real k_f = 64.67 * exp(-(-222.421766285686) * invT);
    const amrex::Real Corr =
      mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[8];
    const amrex::Real qf = Corr * k_f * (sc[0] * sc[6]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] + g_RT[6] - g_RT[7])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[6] -= qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 41:  h2o + M => h + oh + M
    const amrex::Real k_f =
      1.837e+21 * exp((-3) * logT - (61694.3632276586) * invT);
    const amrex::Real Corr =
      mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[8];
    const amrex::Real qf = Corr * k_f * (sc[5]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[0] - g_RT[4] + g_RT[5])) * (refCinv) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[4] += qdot;
    wdot[5] -= qdot;
  }

  {
    // reaction 42:  h + oh + M => h2o + M
    const amrex::Real k_f = 22500000000 * exp((-2) * logT);
    const amrex::Real Corr =
      mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[8];
    const amrex::Real qf = Corr * k_f * (sc[0] * sc[4]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] + g_RT[4] - g_RT[5])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[4] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 51:  ch2o + M => h + hco + M
    const amrex::Real k_f =
      6.283e+23 * exp((-3.57) * logT - (46899.7932529999) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[13]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[0] - g_RT[7] + g_RT[13])) * (refCinv) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[7] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 52:  h + hco + M => ch2o + M
    const amrex::Real k_f =
      2660000000000 * exp((-2.57) * logT - (214.873516298615) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[0] * sc[7]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] + g_RT[7] - g_RT[13])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[7] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 96:  oh + M => h + o + M
    const amrex::Real k_f =
      3.909e+16 * exp((-2) * logT - (52988.714909237) * invT);
    const amrex::Real Corr =
      mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[8];
    const amrex::Real qf = Corr * k_f * (sc[4]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[0] - g_RT[2] + g_RT[4])) * (refCinv) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[2] += qdot;
    wdot[4] -= qdot;
  }

  {
    // reaction 97:  h + o + M => oh + M
    const amrex::Real k_f = 4720000 * exp((-1) * logT);
    const amrex::Real Corr =
      mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[8];
    const amrex::Real qf = Corr * k_f * (sc[0] * sc[2]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] + g_RT[2] - g_RT[4])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[2] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 98:  o2 + M => 2 o + M
    const amrex::Real k_f =
      647300000000000 * exp((-1.5) * logT - (61140.8248952734) * invT);
    const amrex::Real Corr =
      mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[8];
    const amrex::Real qf = Corr * k_f * (sc[3]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-2.000000 * g_RT[2] + g_RT[3])) * (refCinv) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[2] += 2.000000 * qdot;
    wdot[3] -= qdot;
  }

  {
    // reaction 99:  2 o + M => o2 + M
    const amrex::Real k_f = 6170 * exp((-0.5) * logT);
    const amrex::Real Corr =
      mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[8];
    const amrex::Real qf = Corr * k_f * ((sc[2] * sc[2]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[2] - g_RT[3])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= 2.000000 * qdot;
    wdot[3] += qdot;
  }

  {
    // reaction 100:  h2 + M => 2 h + M
    const amrex::Real k_f =
      45700000000000 * exp((-1.4) * logT - (52535.8199100127) * invT);
    const amrex::Real Corr =
      mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[8];
    const amrex::Real qf = Corr * k_f * (sc[1]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-2.000000 * g_RT[0] + g_RT[1])) * (refCinv) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] += 2.000000 * qdot;
    wdot[1] -= qdot;
  }

  {
    // reaction 101:  2 h + M => h2 + M
    const amrex::Real k_f =
      2423 * exp((-0.4) * logT - (-1529.77866404635) * invT);
    const amrex::Real Corr =
      mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[8];
    const amrex::Real qf = Corr * k_f * ((sc[0] * sc[0]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[0] - g_RT[1])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= 2.000000 * qdot;
    wdot[1] += qdot;
  }

  {
    // reaction 196:  ch2o + M => co + h2 + M
    const amrex::Real k_f =
      1.826e+26 * exp((-4.42) * logT - (43840.2359249072) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[13]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[1] - g_RT[6] + g_RT[13])) * (refCinv) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[6] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 197:  co + h2 + M => ch2o + M
    const amrex::Real k_f =
      5.07e+15 * exp((-3.42) * logT - (42446.3257606281) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[6]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[6] - g_RT[13])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[6] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 311:  c2h5o + M => ch2o + ch3 + M
    const amrex::Real k_f =
      1.35e+32 * exp((-6.96) * logT - (11976.5566461523) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[37]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[9] - g_RT[13] + g_RT[37])) * (refCinv) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[13] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 312:  ch2o + ch3 + M => c2h5o + M
    const amrex::Real k_f =
      6.442e+24 * exp((-6.99) * logT - (8479.20081880953) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[9] * sc[13]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[9] + g_RT[13] - g_RT[37])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[13] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 319:  ch3o2 + M => ch3 + o2 + M
    const amrex::Real k_f =
      4.343e+21 * exp((-3.42) * logT - (15333.0118070698) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[38]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[3] - g_RT[9] + g_RT[38])) * (refCinv) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[9] += qdot;
    wdot[38] -= qdot;
  }

  {
    // reaction 320:  ch3 + o2 + M => ch3o2 + M
    const amrex::Real k_f = 54400000000000 * exp((-3.3) * logT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[3] * sc[9]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[3] + g_RT[9] - g_RT[38])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[9] -= qdot;
    wdot[38] += qdot;
  }

  {
    // reaction 343:  c2h5o + M => ch3cho + h + M
    const amrex::Real k_f =
      1.16e+29 * exp((-5.89) * logT - (12716.2851448853) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[37]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[0] - g_RT[24] + g_RT[37])) * (refCinv) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[24] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 344:  ch3cho + h + M => c2h5o + M
    const amrex::Real k_f =
      3.063e+18 * exp((-4.78) * logT - (3069.62166140879) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[0] * sc[24]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] + g_RT[24] - g_RT[37])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[24] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 440:  c3h4-a + M => c3h3 + h + M
    const amrex::Real k_f = 114300000000 * exp(-(35225.1666063304) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[25]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[0] + g_RT[25] - g_RT[48])) * (refCinv) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[25] -= qdot;
    wdot[48] += qdot;
  }

  {
    // reaction 441:  c3h3 + h + M => c3h4-a + M
    const amrex::Real k_f =
      1798 * exp((-0.38) * logT - (5339.12882418808) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[0] * sc[48]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] - g_RT[25] + g_RT[48])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[25] += qdot;
    wdot[48] -= qdot;
  }

  {
    // reaction 1:  ch4 + h => ch3 + h2
    const amrex::Real k_f =
      0.01727 * exp((3) * logT - (4138.45385957801) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[9] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 2:  ch3 + h2 => ch4 + h
    const amrex::Real k_f =
      0.000661 * exp((3) * logT - (3896.90985999175) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[9]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[9] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 3:  ch4 + oh => ch3 + h2o
    const amrex::Real k_f =
      0.193 * exp((2.4) * logT - (1059.77429818474) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[9] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 4:  ch3 + h2o => ch4 + oh
    const amrex::Real k_f =
      0.03199 * exp((2.4) * logT - (8443.9756522032) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[9]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[9] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 5:  ch4 + o => ch3 + oh
    const amrex::Real k_f =
      3150000 * exp((0.5) * logT - (5178.09949113057) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[9] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 6:  ch3 + oh => ch4 + o
    const amrex::Real k_f =
      52960 * exp((0.5) * logT - (3882.31657668341) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[9]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[9] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 7:  c2h6 + ch3 => c2h5 + ch4
    const amrex::Real k_f =
      1.51e-13 * exp((6) * logT - (3042.95117812114) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[15] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 8:  c2h5 + ch4 => c2h6 + ch3
    const amrex::Real k_f =
      9.649e-16 * exp((6.56) * logT - (5142.87432452423) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[10] -= qdot;
    wdot[15] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 9:  hco + oh => co + h2o
    const amrex::Real k_f = 102000000;
    const amrex::Real qf = k_f * (sc[4] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 10:  co + h2o => hco + oh
    const amrex::Real k_f = 2896000000 * exp(-(52938.3932426565) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[6]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[6] -= qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 11:  co + oh => co2 + h
    const amrex::Real k_f =
      0.14 * exp((1.95) * logT - (-677.832848838957) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[6]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[4] -= qdot;
    wdot[6] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 12:  co2 + h => co + oh
    const amrex::Real k_f =
      15.68 * exp((1.95) * logT - (10562.5178152411) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[4] += qdot;
    wdot[6] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 13:  h + o2 => o + oh
    const amrex::Real k_f = 197000000 * exp(-(8323.20365241006) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[3]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 14:  o + oh => h + o2
    const amrex::Real k_f = 15550000 * exp(-(213.867082967006) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[4]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[4] -= qdot;
  }

  {
    // reaction 15:  h2 + o => h + oh
    const amrex::Real k_f =
      0.0508 * exp((2.67) * logT - (3166.2392612433) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[2] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 16:  h + oh => h2 + o
    const amrex::Real k_f =
      0.02231 * exp((2.67) * logT - (2112.00034638241) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[4]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[2] += qdot;
    wdot[4] -= qdot;
  }

  {
    // reaction 17:  h2o + o => 2 oh
    const amrex::Real k_f =
      2.97 * exp((2.02) * logT - (6743.10332178324) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += 2.000000 * qdot;
    wdot[5] -= qdot;
  }

  {
    // reaction 18:  2 oh => h2o + o
    const amrex::Real k_f =
      0.3013 * exp((2.02) * logT - (-1937.38416334817) * invT);
    const amrex::Real qf = k_f * ((sc[4] * sc[4]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= 2.000000 * qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 19:  h2 + oh => h + h2o
    const amrex::Real k_f =
      216 * exp((1.51) * logT - (1726.03316371019) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[4]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[4] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 20:  h + h2o => h2 + oh
    const amrex::Real k_f =
      935.2 * exp((1.51) * logT - (9349.76565065169) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[4] += qdot;
    wdot[5] -= qdot;
  }

  {
    // reaction 23:  h2o2 + oh => h2o + ho2
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[4] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[11] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 24:  h2o + ho2 => h2o2 + oh
    const amrex::Real k_f =
      168500 * exp((0.33) * logT - (15831.1963062165) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[11] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 25:  c2h4 + o => ch3 + hco
    const amrex::Real k_f =
      10.2 * exp((1.88) * logT - (90.0757831790448) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[7] += qdot;
    wdot[9] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 26:  ch3 + hco => c2h4 + o
    const amrex::Real k_f =
      285.1 * exp((1.05) * logT - (15987.1934726159) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc[9]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[7] -= qdot;
    wdot[9] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 28:  c2h6 + h => c2h5 + h2
    const amrex::Real k_f =
      0.000554 * exp((3.5) * logT - (2600.12051221299) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[15] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 29:  c2h5 + h2 => c2h6 + h
    const amrex::Real k_f =
      1.355e-07 * exp((4.06) * logT - (4456.9900090324) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[15] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 30:  c2h5 + o2 => c2h4 + ho2
    const amrex::Real k_f =
      1.22e+24 * exp((-5.76) * logT - (5082.48832462767) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 31:  c2h4 + ho2 => c2h5 + o2
    const amrex::Real k_f =
      1.259e+24 * exp((-5.63) * logT - (11221.7316474452) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[11] -= qdot;
    wdot[16] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 32:  c2h6 + oh => c2h5 + h2o
    const amrex::Real k_f = 58 * exp((1.73) * logT - (583.731332333475) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[15] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 33:  c2h5 + h2o => c2h6 + oh
    const amrex::Real k_f =
      0.06142 * exp((2.29) * logT - (10064.3333160944) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[15] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 34:  c2h6 + o => c2h5 + oh
    const amrex::Real k_f = 13 * exp((2.13) * logT - (2611.6944955265) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[15] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 35:  c2h5 + oh => c2h6 + o
    const amrex::Real k_f =
      0.001397 * exp((2.69) * logT - (3414.32507748502) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[15] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 36:  ch3 + ho2 => ch3o + oh
    const amrex::Real k_f = 11000000;
    const amrex::Real qf = k_f * (sc[9] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[9] -= qdot;
    wdot[11] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 37:  ch3o + oh => ch3 + ho2
    const amrex::Real k_f =
      478000000 * exp((-0.35) * logT - (12353.9691455059) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[9] += qdot;
    wdot[11] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 38:  co + ho2 => co2 + oh
    const amrex::Real k_f = 30100000 * exp(-(11573.9833135086) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[8] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 39:  co2 + oh => co + ho2
    const amrex::Real k_f =
      6435000000 * exp((-0.33) * logT - (42577.1620937373) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[6] += qdot;
    wdot[8] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 45:  co + o2 => co2 + o
    const amrex::Real k_f = 16200000 * exp(-(24003.4349588851) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[6]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[6] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 46:  co2 + o => co + o2
    const amrex::Real k_f = 143300000 * exp(-(27133.4426201905) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[6] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 47:  h + hco => co + h2
    const amrex::Real k_f = 73400000;
    const amrex::Real qf = k_f * (sc[0] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 48:  co + h2 => h + hco
    const amrex::Real k_f = 481300000 * exp(-(45289.4999224248) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[6]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[6] -= qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 49:  hco + o => co + oh
    const amrex::Real k_f = 30200000;
    const amrex::Real qf = k_f * (sc[2] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 50:  co + oh => hco + o
    const amrex::Real k_f = 86970000 * exp(-(44232.7449242349) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[6]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[6] -= qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 53:  ch2o + oh => h2o + hco
    const amrex::Real k_f =
      3430 * exp((1.18) * logT - (-224.93784961471) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[7] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 54:  h2o + hco => ch2o + oh
    const amrex::Real k_f =
      1186 * exp((1.18) * logT - (14784.5056413427) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[7] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 55:  ch2o + h => h2 + hco
    const amrex::Real k_f =
      933.4 * exp((1.5) * logT - (1497.57279743485) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[7] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 56:  h2 + hco => ch2o + h
    const amrex::Real k_f =
      74.53 * exp((1.5) * logT - (8881.7741514533) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[7] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 57:  ch2o + o => hco + oh
    const amrex::Real k_f =
      416000 * exp((0.57) * logT - (1389.88443095264) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[7] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 58:  hco + oh => ch2o + o
    const amrex::Real k_f =
      14590 * exp((0.57) * logT - (7719.3436534444) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[7] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 59:  ch3 + oh => ch2o + h2
    const amrex::Real k_f = 22500000 * exp(-(2163.83166296029) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[9]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[9] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 60:  ch2o + h2 => ch3 + oh
    const amrex::Real k_f = 675600000 * exp(-(38254.5309344748) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] += qdot;
    wdot[9] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 61:  ch3 + o => ch2o + h
    const amrex::Real k_f = 80000000;
    const amrex::Real qf = k_f * (sc[2] * sc[9]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[9] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 62:  ch2o + h => ch3 + o
    const amrex::Real k_f = 1055000000 * exp(-(35038.9764399826) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[2] += qdot;
    wdot[9] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 63:  ch3 + o2 => ch3o + o
    const amrex::Real k_f =
      1995000000000 * exp((-1.57) * logT - (14698.9588081559) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[9]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[9] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 64:  ch3o + o => ch3 + o2
    const amrex::Real k_f =
      3585000000000 * exp((-1.59) * logT - (-820.746381927498) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[9] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 65:  ch2o + ch3 => ch4 + hco
    const amrex::Real k_f =
      3.636e-12 * exp((5.42) * logT - (502.21023247311) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[7] += qdot;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 66:  ch4 + hco => ch2o + ch3
    const amrex::Real k_f =
      7.584e-12 * exp((5.42) * logT - (8126.94915274622) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[7] -= qdot;
    wdot[9] += qdot;
    wdot[10] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 67:  ch3 + hco => ch4 + co
    const amrex::Real k_f = 121000000;
    const amrex::Real qf = k_f * (sc[7] * sc[9]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[7] -= qdot;
    wdot[9] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 68:  ch4 + co => ch3 + hco
    const amrex::Real k_f = 20730000000 * exp(-(45531.043922011) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[9] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 71:  ho2 + o => o2 + oh
    const amrex::Real k_f = 32500000;
    const amrex::Real qf = k_f * (sc[2] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[4] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 72:  o2 + oh => ho2 + o
    const amrex::Real k_f =
      785700000 * exp((-0.33) * logT - (27873.1711189234) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[4]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[4] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 73:  hco + ho2 => ch2o + o2
    const amrex::Real k_f =
      29740 * exp((0.33) * logT - (-1942.91954667202) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[7] -= qdot;
    wdot[11] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 74:  ch2o + o2 => hco + ho2
    const amrex::Real k_f = 20500000 * exp(-(19600.2891330938) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[7] += qdot;
    wdot[11] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 75:  ch3o + o2 => ch2o + ho2
    const amrex::Real k_f = 55000 * exp(-(1219.79719791064) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
    wdot[13] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 76:  ch2o + ho2 => ch3o + o2
    const amrex::Real k_f =
      1318 * exp((0.35) * logT - (15795.9711396102) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[11] -= qdot;
    wdot[13] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 77:  ch3 + ho2 => ch4 + o2
    const amrex::Real k_f = 3600000;
    const amrex::Real qf = k_f * (sc[9] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 78:  ch4 + o2 => ch3 + ho2
    const amrex::Real k_f =
      5177000000 * exp((-0.33) * logT - (29166.4379500416) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[9] += qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 79:  hco + o2 => co + ho2
    const amrex::Real k_f = 7580000 * exp(-(206.318832979935) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 80:  co + ho2 => hco + o2
    const amrex::Real k_f =
      902900 * exp((0.33) * logT - (16570.9248049494) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 81:  h + ho2 => 2 oh
    const amrex::Real k_f = 70800000 * exp(-(150.964999741416) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[4] += 2.000000 * qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 82:  2 oh => h + ho2
    const amrex::Real k_f =
      135200000 * exp((-0.33) * logT - (19912.2834658928) * invT);
    const amrex::Real qf = k_f * ((sc[4] * sc[4]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[4] -= 2.000000 * qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 83:  h + ho2 => h2 + o2
    const amrex::Real k_f = 16600000 * exp(-(412.63766595987) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[3] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 84:  h2 + o2 => h + ho2
    const amrex::Real k_f =
      913800000 * exp((-0.33) * logT - (29337.5316164152) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[3]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[3] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 85:  ho2 + oh => h2o + o2
    const amrex::Real k_f = 28900000 * exp(-(-251.60833290236) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 86:  h2o + o2 => ho2 + oh
    const amrex::Real k_f =
      6888000000 * exp((-0.33) * logT - (36302.0502711525) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 87:  h2o2 + o2 => 2 ho2
    const amrex::Real k_f =
      594200000000 * exp((-0.66) * logT - (26745.9657875209) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += 2.000000 * qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 88:  2 ho2 => h2o2 + o2
    const amrex::Real k_f = 420000000 * exp(-(6028.53565634054) * invT);
    const amrex::Real qf = k_f * ((sc[11] * sc[11]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[11] -= 2.000000 * qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 90:  h + h2o2 => h2o + oh
    const amrex::Real k_f = 24100000 * exp(-(1997.77016324474) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[4] += qdot;
    wdot[5] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 91:  h2o + oh => h + h2o2
    const amrex::Real k_f = 7750000 * exp(-(37590.2849356126) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[4] -= qdot;
    wdot[5] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 92:  ch4 + ho2 => ch3 + h2o2
    const amrex::Real k_f = 342000 * exp(-(9707.04948337304) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[10] -= qdot;
    wdot[11] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 93:  ch3 + h2o2 => ch4 + ho2
    const amrex::Real k_f =
      336500 * exp((-0.33) * logT - (1259.04809784341) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[11] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 94:  ch2o + ho2 => h2o2 + hco
    const amrex::Real k_f =
      5.82e-09 * exp((4.53) * logT - (3299.59167768155) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[7] += qdot;
    wdot[11] -= qdot;
    wdot[12] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 95:  h2o2 + hco => ch2o + ho2
    const amrex::Real k_f =
      1.194e-08 * exp((4.2) * logT - (2476.32921242503) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[7] -= qdot;
    wdot[11] += qdot;
    wdot[12] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 103:  c2h3 + c2h5 => 2 c2h4
    const amrex::Real k_f =
      576500000 * exp((-0.63) * logT - (1253.00949785375) * invT);
    const amrex::Real qf = k_f * (sc[17] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[16] += 2.000000 * qdot;
    wdot[17] -= qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 104:  2 c2h4 => c2h3 + c2h5
    const amrex::Real k_f = 482000000 * exp(-(35995.0881050116) * invT);
    const amrex::Real qf = k_f * ((sc[16] * sc[16]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[16] -= 2.000000 * qdot;
    wdot[17] += qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 106:  c2h4 + h => c2h3 + h2
    const amrex::Real k_f =
      8.42e-09 * exp((4.62) * logT - (1299.80864777359) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[16] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 107:  c2h3 + h2 => c2h4 + h
    const amrex::Real k_f =
      5.723e-07 * exp((3.79) * logT - (1626.89948054666) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[16] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 108:  c2h4 + oh => c2h3 + h2o
    const amrex::Real k_f = 20500000 * exp(-(2994.13916153808) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[16] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 109:  c2h3 + h2o => c2h4 + oh
    const amrex::Real k_f =
      6033000000 * exp((-0.83) * logT - (10949.9946479107) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[16] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 110:  c2h2 + o2 => hcco + oh
    const amrex::Real k_f = 200 * exp((1.5) * logT - (15146.8216407221) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[18] -= qdot;
    wdot[21] += qdot;
  }

  {
    // reaction 111:  hcco + oh => c2h2 + o2
    const amrex::Real k_f =
      0.2232 * exp((1.5) * logT - (12781.7033114399) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[18] += qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 112:  c2h3 + o2 => c2h2 + ho2
    const amrex::Real k_f =
      2.12e-12 * exp((6) * logT - (4772.50685849196) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
    wdot[18] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 113:  c2h2 + ho2 => c2h3 + o2
    const amrex::Real k_f =
      1.114e-13 * exp((6.33) * logT - (8841.51681818893) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[11] -= qdot;
    wdot[18] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 114:  h2o2 + o => ho2 + oh
    const amrex::Real k_f = 9.55 * exp((2) * logT - (1997.77016324474) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[11] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 115:  ho2 + oh => h2o2 + o
    const amrex::Real k_f =
      0.1632 * exp((2.33) * logT - (9148.4789843298) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[11] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 116:  c2h2 + o => h + hcco
    const amrex::Real k_f = 14.3 * exp((2) * logT - (956.111665028967) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[18] -= qdot;
    wdot[21] += qdot;
  }

  {
    // reaction 117:  h + hcco => c2h2 + o
    const amrex::Real k_f =
      0.2021 * exp((2) * logT - (6697.81382186082) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[2] += qdot;
    wdot[18] += qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 118:  c2h2 + oh => ch2co + h
    const amrex::Real k_f =
      2.19e-10 * exp((4.5) * logT - (-503.21666580472) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[4] -= qdot;
    wdot[18] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 119:  ch2co + h => c2h2 + oh
    const amrex::Real k_f =
      2.161e-09 * exp((4.5) * logT - (9893.23964972079) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[4] += qdot;
    wdot[18] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 120:  ch2co + h => ch3 + co
    const amrex::Real k_f = 11000000 * exp(-(1710.93666373605) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[6] += qdot;
    wdot[9] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 121:  ch3 + co => ch2co + h
    const amrex::Real k_f = 2400000 * exp(-(20229.3099653497) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[9]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[6] -= qdot;
    wdot[9] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 122:  ch2co + o => hcco + oh
    const amrex::Real k_f = 10000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[20] -= qdot;
    wdot[21] += qdot;
  }

  {
    // reaction 123:  hcco + oh => ch2co + o
    const amrex::Real k_f = 14320 * exp(-(-631.536915584923) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[20] += qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 124:  ch2co + oh => h2o + hcco
    const amrex::Real k_f = 10000000 * exp(-(1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[20] -= qdot;
    wdot[21] += qdot;
  }

  {
    // reaction 125:  h2o + hcco => ch2co + oh
    const amrex::Real k_f = 141200 * exp(-(5029.65057471817) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[20] += qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 126:  ch2co + h => h2 + hcco
    const amrex::Real k_f = 200000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[20] -= qdot;
    wdot[21] += qdot;
  }

  {
    // reaction 127:  h2 + hcco => ch2co + h
    const amrex::Real k_f = 652200 * exp(-(422.701999275965) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[20] += qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 128:  hcco + oh => 2 hco
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[4] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += 2.000000 * qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 129:  2 hco => hcco + oh
    const amrex::Real k_f = 241100000 * exp(-(20309.8246318785) * invT);
    const amrex::Real qf = k_f * ((sc[7] * sc[7]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[7] -= 2.000000 * qdot;
    wdot[21] += qdot;
  }

  {
    // reaction 130:  h + hcco => ch2(s) + co
    const amrex::Real k_f = 110000000;
    const amrex::Real qf = k_f * (sc[0] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[6] += qdot;
    wdot[21] -= qdot;
    wdot[50] += qdot;
  }

  {
    // reaction 131:  ch2(s) + co => h + hcco
    const amrex::Real k_f =
      2046000 * exp((0.89) * logT - (14004.5198093453) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[50]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[6] -= qdot;
    wdot[21] += qdot;
    wdot[50] -= qdot;
  }

  {
    // reaction 132:  hcco + o => 2 co + h
    const amrex::Real k_f = 80000000;
    const amrex::Real qf = k_f * (sc[2] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[6] += 2.000000 * qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 133:  c2h6 + o2 => c2h5 + ho2
    const amrex::Real k_f = 60300000 * exp(-(26101.8484552908) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
    wdot[15] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 134:  c2h5 + ho2 => c2h6 + o2
    const amrex::Real k_f =
      267.9 * exp((0.89) * logT - (-967.182431676671) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[11] -= qdot;
    wdot[15] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 135:  c2h6 + ho2 => c2h5 + h2o2
    const amrex::Real k_f = 13200000 * exp(-(10300.8451490226) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[12] += qdot;
    wdot[15] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 136:  c2h5 + h2o2 => c2h6 + ho2
    const amrex::Real k_f =
      82980 * exp((0.24) * logT - (3951.25725989866) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[12] -= qdot;
    wdot[15] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 137:  c2h3 + ch3 => c2h2 + ch4
    const amrex::Real k_f = 392000;
    const amrex::Real qf = k_f * (sc[9] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[18] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 138:  c2h2 + ch4 => c2h3 + ch3
    const amrex::Real k_f = 29620000 * exp(-(33237.4607764017) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[10] -= qdot;
    wdot[18] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 139:  c2h5 + ch3 => c2h4 + ch4
    const amrex::Real k_f = 19500000 * exp((-0.5) * logT);
    const amrex::Real qf = k_f * (sc[9] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 140:  c2h4 + ch4 => c2h5 + ch3
    const amrex::Real k_f =
      28950000000 * exp((-0.7) * logT - (35310.7134395172) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[10] -= qdot;
    wdot[16] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 141:  c2h3 + h => c2h2 + h2
    const amrex::Real k_f = 20000000 * exp(-(1258.0416645118) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[18] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 142:  c2h2 + h2 => c2h3 + h
    const amrex::Real k_f = 13310000 * exp(-(34258.9906079853) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[18] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 143:  c2h5 + h => 2 ch3
    const amrex::Real k_f = 36100000;
    const amrex::Real qf = k_f * (sc[0] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[9] += 2.000000 * qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 144:  2 ch3 => c2h5 + h
    const amrex::Real k_f =
      54460000000 * exp((-1.03) * logT - (8544.61898536414) * invT);
    const amrex::Real qf = k_f * ((sc[9] * sc[9]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[9] -= 2.000000 * qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 145:  c2h3 + o2 => ch2o + hco
    const amrex::Real k_f =
      1.7e+23 * exp((-5.31) * logT - (3270.90832773068) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[7] += qdot;
    wdot[13] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 146:  ch2o + hco => c2h3 + o2
    const amrex::Real k_f =
      1.657e+23 * exp((-5.31) * logT - (46824.3107531292) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[7] -= qdot;
    wdot[13] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 147:  c2h6 => c2h5 + h
    const amrex::Real k_f =
      2.783e+21 * exp((-1.56) * logT - (52233.8899105299) * invT);
    const amrex::Real qf = k_f * (sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[15] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 148:  c2h5 + h => c2h6
    const amrex::Real k_f = 36100000;
    const amrex::Real qf = k_f * (sc[0] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[15] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 149:  c2h4 + ch3 => c2h3 + ch4
    const amrex::Real k_f =
      6.62e-06 * exp((3.7) * logT - (4780.55832514484) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[16] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 150:  c2h3 + ch4 => c2h4 + ch3
    const amrex::Real k_f =
      1.44e-06 * exp((4.02) * logT - (2753.60159528343) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[10] -= qdot;
    wdot[16] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 152:  ch3cho => ch3 + hco
    const amrex::Real k_f =
      2.614e+15 * exp((0.15) * logT - (40534.1024305702) * invT);
    const amrex::Real qf = k_f * (sc[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[7] += qdot;
    wdot[9] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 153:  ch3 + hco => ch3cho
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[7] * sc[9]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[7] -= qdot;
    wdot[9] -= qdot;
    wdot[24] += qdot;
  }

  {
    // reaction 154:  ch3cho + o2 => ch3co + ho2
    const amrex::Real k_f = 30100000 * exp(-(19700.9324662548) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
    wdot[22] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 155:  ch3co + ho2 => ch3cho + o2
    const amrex::Real k_f =
      85520 * exp((0.32) * logT - (-976.240331661156) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[11] -= qdot;
    wdot[22] -= qdot;
    wdot[24] += qdot;
  }

  {
    // reaction 156:  ch3cho + oh => ch3co + h2o
    const amrex::Real k_f = 2 * exp((1.8) * logT - (654.181665546136) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[22] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 157:  ch3co + h2o => ch3cho + oh
    const amrex::Real k_f =
      1.354 * exp((1.79) * logT - (16530.667471685) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[22] -= qdot;
    wdot[24] += qdot;
  }

  {
    // reaction 158:  ch3cho + h => ch3co + h2
    const amrex::Real k_f = 13400000 * exp(-(1660.61499715557) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[22] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 159:  ch3co + h2 => ch3cho + h
    const amrex::Real k_f =
      2096000 * exp((-0.01) * logT - (9908.33614969493) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[22] -= qdot;
    wdot[24] += qdot;
  }

  {
    // reaction 160:  ch3cho + o => ch3co + oh
    const amrex::Real k_f = 5940000 * exp(-(940.008731723216) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[22] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 161:  ch3co + oh => ch3cho + o
    const amrex::Real k_f =
      408000 * exp((-0.01) * logT - (8137.01348606232) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[22] -= qdot;
    wdot[24] += qdot;
  }

  {
    // reaction 162:  ch3cho + ho2 => ch3co + h2o2
    const amrex::Real k_f = 3010000 * exp(-(5998.34265639226) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[12] += qdot;
    wdot[22] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 163:  ch3co + h2o2 => ch3cho + ho2
    const amrex::Real k_f =
      12100000 * exp((-0.34) * logT - (6043.63215631468) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[12] -= qdot;
    wdot[22] -= qdot;
    wdot[24] += qdot;
  }

  {
    // reaction 164:  ch3 + ch3cho => ch3co + ch4
    const amrex::Real k_f =
      2.608 * exp((1.78) * logT - (2974.5137115717) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[22] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 165:  ch3co + ch4 => ch3 + ch3cho
    const amrex::Real k_f =
      10.66 * exp((1.77) * logT - (11463.2756470315) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[10] -= qdot;
    wdot[22] -= qdot;
    wdot[24] += qdot;
  }

  {
    // reaction 166:  c3h5-a => c2h2 + ch3
    const amrex::Real k_f =
      2.397e+48 * exp((-9.9) * logT - (41304.0239292514) * invT);
    const amrex::Real qf = k_f * (sc[47]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[18] += qdot;
    wdot[47] -= qdot;
  }

  {
    // reaction 167:  c2h2 + ch3 => c3h5-a
    const amrex::Real k_f =
      2.61e+40 * exp((-9.82) * logT - (18593.8558014844) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[18] -= qdot;
    wdot[47] += qdot;
  }

  {
    // reaction 168:  c3h6 => c2h3 + ch3
    const amrex::Real k_f =
      2.73e+62 * exp((-13.28) * logT - (61996.2932271415) * invT);
    const amrex::Real qf = k_f * (sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[19] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 169:  c2h3 + ch3 => c3h6
    const amrex::Real k_f =
      4.712e+53 * exp((-13.19) * logT - (14865.0203078714) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[19] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 170:  c2h2 + ch3 => c3h4-a + h
    const amrex::Real k_f =
      67400000000000 * exp((-2.08) * logT - (15896.6144727711) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[9] -= qdot;
    wdot[18] -= qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 171:  c3h4-a + h => c2h2 + ch3
    const amrex::Real k_f =
      11490000000 * exp((-0.7) * logT - (7945.79115305652) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[9] += qdot;
    wdot[18] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 172:  c3h6 => c3h5-a + h
    const amrex::Real k_f =
      2.01e+61 * exp((-13.26) * logT - (59631.1748978593) * invT);
    const amrex::Real qf = k_f * (sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[26] -= qdot;
    wdot[47] += qdot;
  }

  {
    // reaction 173:  c3h5-a + h => c3h6
    const amrex::Real k_f =
      4.887e+50 * exp((-12.25) * logT - (14130.3239757965) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[47]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[26] += qdot;
    wdot[47] -= qdot;
  }

  {
    // reaction 174:  c3h6 + o => ch2co + ch3 + h
    const amrex::Real k_f = 25 * exp((1.76) * logT - (38.2444666011587) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[9] += qdot;
    wdot[20] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 175:  ch2co + ch3 + h => c3h6 + o
    const amrex::Real k_f = 1e-12;
    const amrex::Real qf = k_f * (sc[0] * sc[9] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[2] += qdot;
    wdot[9] -= qdot;
    wdot[20] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 176:  c3h6 + o => c2h5 + hco
    const amrex::Real k_f =
      15.8 * exp((1.76) * logT - (-611.911465618539) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[7] += qdot;
    wdot[17] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 177:  c2h5 + hco => c3h6 + o
    const amrex::Real k_f =
      0.1402 * exp((1.88) * logT - (13340.2738104831) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[7] -= qdot;
    wdot[17] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 178:  c3h6 + ho2 => c3h5-a + h2o2
    const amrex::Real k_f = 150000 * exp(-(7140.64448776897) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[12] += qdot;
    wdot[26] -= qdot;
    wdot[47] += qdot;
  }

  {
    // reaction 179:  c3h5-a + h2o2 => c3h6 + ho2
    const amrex::Real k_f =
      0.5867 * exp((1.33) * logT - (4910.89144158826) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc[47]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[12] -= qdot;
    wdot[26] += qdot;
    wdot[47] -= qdot;
  }

  {
    // reaction 180:  c3h6 + oh => c3h5-a + h2o
    const amrex::Real k_f = 3.12 * exp((2) * logT - (-149.958566409806) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[26] -= qdot;
    wdot[47] += qdot;
  }

  {
    // reaction 181:  c3h5-a + h2o => c3h6 + oh
    const amrex::Real k_f =
      6.194 * exp((2.01) * logT - (16042.5473058545) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[47]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[26] += qdot;
    wdot[47] -= qdot;
  }

  {
    // reaction 182:  c4h6 => 2 c2h3
    const amrex::Real k_f =
      4.027e+19 * exp((-1) * logT - (49390.7157487332) * invT);
    const amrex::Real qf = k_f * (sc[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[19] += 2.000000 * qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 183:  2 c2h3 => c4h6
    const amrex::Real k_f = 12600000;
    const amrex::Real qf = k_f * ((sc[19] * sc[19]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[19] -= 2.000000 * qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 184:  c4h6 + oh => c2h5 + ch2co
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[4] * sc[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[17] += qdot;
    wdot[20] += qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 185:  c2h5 + ch2co => c4h6 + oh
    const amrex::Real k_f = 3730000 * exp(-(15106.5643074577) * invT);
    const amrex::Real qf = k_f * (sc[17] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[17] -= qdot;
    wdot[20] -= qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 186:  c4h6 + oh => c3h5-a + ch2o
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[4] * sc[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[13] += qdot;
    wdot[27] -= qdot;
    wdot[47] += qdot;
  }

  {
    // reaction 187:  c3h5-a + ch2o => c4h6 + oh
    const amrex::Real k_f = 3.501 * exp(-(35758.5762720834) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc[47]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[13] -= qdot;
    wdot[27] += qdot;
    wdot[47] -= qdot;
  }

  {
    // reaction 188:  c4h6 + oh => c2h3 + ch3cho
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[4] * sc[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[19] += qdot;
    wdot[24] += qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 189:  c2h3 + ch3cho => c4h6 + oh
    const amrex::Real k_f = 543700 * exp(-(9334.66915067755) * invT);
    const amrex::Real qf = k_f * (sc[19] * sc[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[19] -= qdot;
    wdot[24] -= qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 190:  c4h6 + o => c2h4 + ch2co
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[2] * sc[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[16] += qdot;
    wdot[20] += qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 191:  c2h4 + ch2co => c4h6 + o
    const amrex::Real k_f = 637700 * exp(-(47473.4602520173) * invT);
    const amrex::Real qf = k_f * (sc[16] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[16] -= qdot;
    wdot[20] -= qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 192:  c4h6 + o => c3h4-a + ch2o
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[2] * sc[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[13] += qdot;
    wdot[25] += qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 193:  c3h4-a + ch2o => c4h6 + o
    const amrex::Real k_f = 1075000 * exp(-(39779.2774318631) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[13] -= qdot;
    wdot[25] -= qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 194:  c2h4 + o2 => c2h3 + ho2
    const amrex::Real k_f = 40000000 * exp(-(29287.2099498347) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
    wdot[16] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 195:  c2h3 + ho2 => c2h4 + o2
    const amrex::Real k_f =
      49390000 * exp((-0.5) * logT - (688.400398820856) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[11] -= qdot;
    wdot[16] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 198:  nc3h7 => c2h4 + ch3
    const amrex::Real k_f =
      228400000000000 * exp((-0.55) * logT - (14291.353308854) * invT);
    const amrex::Real qf = k_f * (sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[16] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 199:  c2h4 + ch3 => nc3h7
    const amrex::Real k_f = 410000 * exp(-(3625.1728604572) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[16] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 200:  nc3h7 => c3h6 + h
    const amrex::Real k_f =
      2.667e+15 * exp((-0.64) * logT - (18528.4376349298) * invT);
    const amrex::Real qf = k_f * (sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[26] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 201:  c3h6 + h => nc3h7
    const amrex::Real k_f = 10000000 * exp(-(1258.0416645118) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[26] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 202:  nc3h7 + o2 => c3h6 + ho2
    const amrex::Real k_f = 300000 * exp(-(1509.64999741416) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
    wdot[26] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 203:  c3h6 + ho2 => nc3h7 + o2
    const amrex::Real k_f = 200000 * exp(-(8806.29165158259) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[11] -= qdot;
    wdot[26] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 204:  c3h6 + o => c3h5-a + oh
    const amrex::Real k_f =
      524000 * exp((0.7) * logT - (2960.92686159497) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[26] -= qdot;
    wdot[47] += qdot;
  }

  {
    // reaction 205:  c3h5-a + oh => c3h6 + o
    const amrex::Real k_f =
      105500 * exp((0.71) * logT - (10476.9709820543) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[47]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[26] += qdot;
    wdot[47] -= qdot;
  }

  {
    // reaction 206:  c3h6 + h => c3h5-a + h2
    const amrex::Real k_f =
      0.173 * exp((2.5) * logT - (1254.01593118536) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[26] -= qdot;
    wdot[47] += qdot;
  }

  {
    // reaction 207:  c3h5-a + h2 => c3h6 + h
    const amrex::Real k_f =
      0.07933 * exp((2.51) * logT - (9822.78931650813) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[47]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[26] += qdot;
    wdot[47] -= qdot;
  }

  {
    // reaction 208:  c3h6 + h => c2h4 + ch3
    const amrex::Real k_f =
      4.83e+27 * exp((-5.81) * logT - (9309.50831738731) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[9] += qdot;
    wdot[16] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 209:  c2h4 + ch3 => c3h6 + h
    const amrex::Real k_f =
      2.313e+27 * exp((-5.9) * logT - (15911.7109727452) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[9] -= qdot;
    wdot[16] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 210:  c5h9 => c2h4 + c3h5-a
    const amrex::Real k_f = 25000000000000 * exp(-(22644.7499612124) * invT);
    const amrex::Real qf = k_f * (sc[35]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[16] += qdot;
    wdot[35] -= qdot;
    wdot[47] += qdot;
  }

  {
    // reaction 211:  c5h9 => c4h6 + ch3
    const amrex::Real k_f =
      1.339e+15 * exp((-0.52) * logT - (19283.2626336369) * invT);
    const amrex::Real qf = k_f * (sc[35]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[27] += qdot;
    wdot[35] -= qdot;
  }

  {
    // reaction 212:  c4h6 + ch3 => c5h9
    const amrex::Real k_f = 175000 * exp(-(3824.44666011587) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[27] -= qdot;
    wdot[35] += qdot;
  }

  {
    // reaction 213:  c4h7 => c4h6 + h
    const amrex::Real k_f = 120000000000000 * exp(-(24808.5816241727) * invT);
    const amrex::Real qf = k_f * (sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[27] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 214:  c4h6 + h => c4h7
    const amrex::Real k_f = 40000000 * exp(-(654.181665546136) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[27] -= qdot;
    wdot[29] += qdot;
  }

  {
    // reaction 215:  c4h7 => c2h3 + c2h4
    const amrex::Real k_f = 100000000000 * exp(-(18619.0166347746) * invT);
    const amrex::Real qf = k_f * (sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[16] += qdot;
    wdot[19] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 216:  c2h3 + c2h4 => c4h7
    const amrex::Real k_f = 50000 * exp(-(3522.51666063304) * invT);
    const amrex::Real qf = k_f * (sc[16] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[16] -= qdot;
    wdot[19] -= qdot;
    wdot[29] += qdot;
  }

  {
    // reaction 217:  c4h6 + c4h8-1 => 2 c4h7
    const amrex::Real k_f = 2350000 * exp(-(23510.2826263965) * invT);
    const amrex::Real qf = k_f * (sc[27] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[27] -= qdot;
    wdot[29] += 2.000000 * qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 218:  2 c4h7 => c4h6 + c4h8-1
    const amrex::Real k_f = 1600000;
    const amrex::Real qf = k_f * ((sc[29] * sc[29]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[27] += qdot;
    wdot[29] -= 2.000000 * qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 219:  c4h7 + ch3 => c4h6 + ch4
    const amrex::Real k_f = 8000000;
    const amrex::Real qf = k_f * (sc[9] * sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[27] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 220:  c4h6 + ch4 => c4h7 + ch3
    const amrex::Real k_f = 70500000 * exp(-(28824.2506172943) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[10] -= qdot;
    wdot[27] -= qdot;
    wdot[29] += qdot;
  }

  {
    // reaction 221:  c3h5-a + c4h7 => c3h6 + c4h6
    const amrex::Real k_f = 6310000;
    const amrex::Real qf = k_f * (sc[29] * sc[47]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[26] += qdot;
    wdot[27] += qdot;
    wdot[29] -= qdot;
    wdot[47] -= qdot;
  }

  {
    // reaction 222:  c3h6 + c4h6 => c3h5-a + c4h7
    const amrex::Real k_f = 10000 * exp(-(25160.833290236) * invT);
    const amrex::Real qf = k_f * (sc[26] * sc[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[26] -= qdot;
    wdot[27] -= qdot;
    wdot[29] += qdot;
    wdot[47] += qdot;
  }

  {
    // reaction 223:  c4h7 + o2 => c4h6 + ho2
    const amrex::Real k_f = 1000;
    const amrex::Real qf = k_f * (sc[3] * sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
    wdot[27] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 224:  c4h6 + ho2 => c4h7 + o2
    const amrex::Real k_f = 100000 * exp(-(8554.68331868023) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[11] -= qdot;
    wdot[27] -= qdot;
    wdot[29] += qdot;
  }

  {
    // reaction 225:  c4h7 + h => c4h6 + h2
    const amrex::Real k_f = 31600000;
    const amrex::Real qf = k_f * (sc[0] * sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[27] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 226:  c4h6 + h2 => c4h7 + h
    const amrex::Real k_f = 10660000 * exp(-(28587.7387843661) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[27] -= qdot;
    wdot[29] += qdot;
  }

  {
    // reaction 227:  c2h5 + c4h7 => c2h6 + c4h6
    const amrex::Real k_f = 3980000;
    const amrex::Real qf = k_f * (sc[17] * sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] += qdot;
    wdot[17] -= qdot;
    wdot[27] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 228:  c2h6 + c4h6 => c2h5 + c4h7
    const amrex::Real k_f = 3211000 * exp(-(25080.3186237072) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
    wdot[17] += qdot;
    wdot[27] -= qdot;
    wdot[29] += qdot;
  }

  {
    // reaction 229:  c2h5 + c4h7 => c2h4 + c4h8-1
    const amrex::Real k_f =
      9.24 * exp((1.5) * logT - (-484.09443250414) * invT);
    const amrex::Real qf = k_f * (sc[17] * sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[16] += qdot;
    wdot[17] -= qdot;
    wdot[29] -= qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 230:  c2h4 + c4h8-1 => c2h5 + c4h7
    const amrex::Real k_f =
      0.0007807 * exp((2.91) * logT - (25643.9212894085) * invT);
    const amrex::Real qf = k_f * (sc[16] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[16] -= qdot;
    wdot[17] += qdot;
    wdot[29] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 231:  c2h3 + c4h7 => c2h4 + c4h6
    const amrex::Real k_f = 3980000;
    const amrex::Real qf = k_f * (sc[19] * sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[16] += qdot;
    wdot[19] -= qdot;
    wdot[27] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 232:  c2h4 + c4h6 => c2h3 + c4h7
    const amrex::Real k_f = 11570000 * exp(-(29040.6337835904) * invT);
    const amrex::Real qf = k_f * (sc[16] * sc[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[16] -= qdot;
    wdot[19] += qdot;
    wdot[27] -= qdot;
    wdot[29] += qdot;
  }

  {
    // reaction 233:  c4h8-1 => c3h5-a + ch3
    const amrex::Real k_f = 5e+15 * exp(-(35728.3832721351) * invT);
    const amrex::Real qf = k_f * (sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[30] -= qdot;
    wdot[47] += qdot;
  }

  {
    // reaction 234:  c3h5-a + ch3 => c4h8-1
    const amrex::Real k_f = 5000000;
    const amrex::Real qf = k_f * (sc[9] * sc[47]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[30] += qdot;
    wdot[47] -= qdot;
  }

  {
    // reaction 235:  c4h8-1 => c2h3 + c2h5
    const amrex::Real k_f =
      1e+19 * exp((-1) * logT - (48696.2767499227) * invT);
    const amrex::Real qf = k_f * (sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[17] += qdot;
    wdot[19] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 236:  c2h3 + c2h5 => c4h8-1
    const amrex::Real k_f = 9000000;
    const amrex::Real qf = k_f * (sc[17] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[17] -= qdot;
    wdot[19] -= qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 237:  c4h8-1 => c4h7 + h
    const amrex::Real k_f =
      4.107e+18 * exp((-1) * logT - (48988.1424160895) * invT);
    const amrex::Real qf = k_f * (sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[29] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 238:  c4h7 + h => c4h8-1
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[0] * sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[29] -= qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 239:  c4h8-1 + ch3 => c4h7 + ch4
    const amrex::Real k_f = 100000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[29] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 240:  c4h7 + ch4 => c4h8-1 + ch3
    const amrex::Real k_f = 600000 * exp(-(8987.44965127229) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[10] -= qdot;
    wdot[29] -= qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 241:  c4h8-1 + h => c4h7 + h2
    const amrex::Real k_f = 50000000 * exp(-(1962.54499663841) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[29] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 242:  c4h7 + h2 => c4h8-1 + h
    const amrex::Real k_f = 40000000 * exp(-(12681.0599782789) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[29] -= qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 243:  c4h8-1 + oh => c4h7 + h2o
    const amrex::Real k_f = 22500000 * exp(-(1115.63134808906) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[29] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 244:  c4h7 + h2o => c4h8-1 + oh
    const amrex::Real k_f = 4772000 * exp(-(13320.1451438509) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[29] -= qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 245:  c3h5-a + c4h8-1 => c3h6 + c4h7
    const amrex::Real k_f = 79000 * exp(-(6239.88665597852) * invT);
    const amrex::Real qf = k_f * (sc[30] * sc[47]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[26] += qdot;
    wdot[29] += qdot;
    wdot[30] -= qdot;
    wdot[47] -= qdot;
  }

  {
    // reaction 246:  c3h6 + c4h7 => c3h5-a + c4h8-1
    const amrex::Real k_f = 100000 * exp(-(8806.29165158259) * invT);
    const amrex::Real qf = k_f * (sc[26] * sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[26] -= qdot;
    wdot[29] -= qdot;
    wdot[30] += qdot;
    wdot[47] += qdot;
  }

  {
    // reaction 247:  c4h8-1 + ho2 => c4h7 + h2o2
    const amrex::Real k_f = 1400000 * exp(-(7497.92832049032) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[12] += qdot;
    wdot[29] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 248:  c4h7 + h2o2 => c4h8-1 + ho2
    const amrex::Real k_f = 316000 * exp(-(6541.81665546136) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[12] -= qdot;
    wdot[29] -= qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 249:  c4h8-1 + o2 => c4h7 + ho2
    const amrex::Real k_f = 27000000 * exp(-(16706.7933047167) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
    wdot[29] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 250:  c4h7 + ho2 => c4h8-1 + o2
    const amrex::Real k_f = 300000;
    const amrex::Real qf = k_f * (sc[11] * sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[11] -= qdot;
    wdot[29] -= qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 251:  pc4h9 => c2h4 + c2h5
    const amrex::Real k_f =
      7.497e+17 * exp((-1.41) * logT - (14885.1489745036) * invT);
    const amrex::Real qf = k_f * (sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[16] += qdot;
    wdot[17] += qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 252:  c2h4 + c2h5 => pc4h9
    const amrex::Real k_f = 330000 * exp(-(3623.15999379398) * invT);
    const amrex::Real qf = k_f * (sc[16] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[16] -= qdot;
    wdot[17] -= qdot;
    wdot[31] += qdot;
  }

  {
    // reaction 253:  pc4h9 => c4h8-1 + h
    const amrex::Real k_f =
      1.159e+17 * exp((-1.17) * logT - (19202.7479671081) * invT);
    const amrex::Real qf = k_f * (sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[30] += qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 254:  c4h8-1 + h => pc4h9
    const amrex::Real k_f = 10000000 * exp(-(1459.32833083369) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[30] -= qdot;
    wdot[31] += qdot;
  }

  {
    // reaction 255:  o2 + pc4h9 => c4h8-1 + ho2
    const amrex::Real k_f = 3e-25 * exp(-(1509.64999741416) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
    wdot[30] += qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 256:  c4h8-1 + ho2 => o2 + pc4h9
    const amrex::Real k_f = 2e-25 * exp(-(8806.29165158259) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[11] -= qdot;
    wdot[30] -= qdot;
    wdot[31] += qdot;
  }

  {
    // reaction 257:  ch3coch2 => ch2co + ch3
    const amrex::Real k_f = 100000000000000 * exp(-(15599.7166399463) * invT);
    const amrex::Real qf = k_f * (sc[32]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[20] += qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 258:  ch2co + ch3 => ch3coch2
    const amrex::Real k_f = 100000 * exp(-(3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[20] -= qdot;
    wdot[32] += qdot;
  }

  {
    // reaction 259:  c2h5co => c2h5 + co
    const amrex::Real k_f =
      1.834e+15 * exp((-0.73) * logT - (6496.52715553893) * invT);
    const amrex::Real qf = k_f * (sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[17] += qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 260:  c2h5 + co => c2h5co
    const amrex::Real k_f = 151000 * exp(-(2420.4721625207) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[17] -= qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 261:  c2h5cho + h => c2h5co + h2
    const amrex::Real k_f = 40000000 * exp(-(2113.50999637982) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[33]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[33] -= qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 262:  c2h5co + h2 => c2h5cho + h
    const amrex::Real k_f = 5854000 * exp(-(10361.2311489192) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[33] += qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 263:  c2h5cho + o => c2h5co + oh
    const amrex::Real k_f = 5000000 * exp(-(900.757831790448) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[33]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[33] -= qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 264:  c2h5co + oh => c2h5cho + o
    const amrex::Real k_f = 321400 * exp(-(8091.72398613989) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[33] += qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 265:  c2h5cho + oh => c2h5co + h2o
    const amrex::Real k_f =
      26900 * exp((0.76) * logT - (-171.093666373605) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[33]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[33] -= qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 266:  c2h5co + h2o => c2h5cho + oh
    const amrex::Real k_f =
      17050 * exp((0.76) * logT - (15700.3599731073) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[33] += qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 267:  c2h5cho + ch3 => c2h5co + ch4
    const amrex::Real k_f =
      2.608 * exp((1.78) * logT - (2974.5137115717) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[33]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[33] -= qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 268:  c2h5co + ch4 => c2h5cho + ch3
    const amrex::Real k_f =
      9.972 * exp((1.78) * logT - (11463.2756470315) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[10] -= qdot;
    wdot[33] += qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 269:  c2h5cho + ho2 => c2h5co + h2o2
    const amrex::Real k_f = 2800000 * exp(-(6843.74665494419) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[33]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[12] += qdot;
    wdot[33] -= qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 270:  c2h5co + h2o2 => c2h5cho + ho2
    const amrex::Real k_f =
      10530000 * exp((-0.33) * logT - (6884.00398820857) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[12] -= qdot;
    wdot[33] += qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 271:  c2h5 + c2h5cho => c2h5co + c2h6
    const amrex::Real k_f = 1000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[17] * sc[33]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] += qdot;
    wdot[17] -= qdot;
    wdot[33] -= qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 272:  c2h5co + c2h6 => c2h5 + c2h5cho
    const amrex::Real k_f =
      598400000 * exp((-0.57) * logT - (10416.5849821577) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
    wdot[17] += qdot;
    wdot[33] += qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 273:  c2h5cho => c2h5 + hco
    const amrex::Real k_f =
      9.85e+18 * exp((-0.73) * logT - (41117.8337629036) * invT);
    const amrex::Real qf = k_f * (sc[33]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[7] += qdot;
    wdot[17] += qdot;
    wdot[33] -= qdot;
  }

  {
    // reaction 274:  c2h5 + hco => c2h5cho
    const amrex::Real k_f = 18100000;
    const amrex::Real qf = k_f * (sc[7] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[7] -= qdot;
    wdot[17] -= qdot;
    wdot[33] += qdot;
  }

  {
    // reaction 275:  c2h5cho + o2 => c2h5co + ho2
    const amrex::Real k_f = 10050000 * exp(-(20480.9182982521) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[33]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
    wdot[33] -= qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 276:  c2h5co + ho2 => c2h5cho + o2
    const amrex::Real k_f =
      26720 * exp((0.33) * logT - (-199.273799658669) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[11] -= qdot;
    wdot[33] += qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 277:  c2h3 + c2h5cho => c2h4 + c2h5co
    const amrex::Real k_f = 1700000 * exp(-(4247.14865939183) * invT);
    const amrex::Real qf = k_f * (sc[19] * sc[33]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[16] += qdot;
    wdot[19] -= qdot;
    wdot[33] -= qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 278:  c2h4 + c2h5co => c2h3 + c2h5cho
    const amrex::Real k_f =
      3661 * exp((0.83) * logT - (12167.7789791581) * invT);
    const amrex::Real qf = k_f * (sc[16] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[16] -= qdot;
    wdot[19] += qdot;
    wdot[33] += qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 279:  c2h5cho + c3h5-a => c2h5co + c3h6
    const amrex::Real k_f = 1700000 * exp(-(4247.14865939183) * invT);
    const amrex::Real qf = k_f * (sc[33] * sc[47]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[26] += qdot;
    wdot[33] -= qdot;
    wdot[34] += qdot;
    wdot[47] -= qdot;
  }

  {
    // reaction 280:  c2h5co + c3h6 => c2h5cho + c3h5-a
    const amrex::Real k_f = 10000000 * exp(-(14090.0666425322) * invT);
    const amrex::Real qf = k_f * (sc[26] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[26] -= qdot;
    wdot[33] += qdot;
    wdot[34] -= qdot;
    wdot[47] += qdot;
  }

  {
    // reaction 281:  c5h10-1 => c2h5 + c3h5-a
    const amrex::Real k_f =
      9.173e+20 * exp((-1.63) * logT - (37233.0011028912) * invT);
    const amrex::Real qf = k_f * (sc[36]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[17] += qdot;
    wdot[36] -= qdot;
    wdot[47] += qdot;
  }

  {
    // reaction 282:  c2h5 + c3h5-a => c5h10-1
    const amrex::Real k_f = 4000000 * exp(-(-299.917132819613) * invT);
    const amrex::Real qf = k_f * (sc[17] * sc[47]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[17] -= qdot;
    wdot[36] += qdot;
    wdot[47] -= qdot;
  }

  {
    // reaction 283:  c5h10-1 + h => c5h9 + h2
    const amrex::Real k_f = 28000000 * exp(-(2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[36]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[35] += qdot;
    wdot[36] -= qdot;
  }

  {
    // reaction 284:  c5h9 + h2 => c5h10-1 + h
    const amrex::Real k_f = 1000000 * exp(-(7045.03332126608) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[35]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[35] -= qdot;
    wdot[36] += qdot;
  }

  {
    // reaction 285:  c5h10-1 + o => c5h9 + oh
    const amrex::Real k_f =
      0.254 * exp((2.56) * logT - (-568.634832359333) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[36]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[35] += qdot;
    wdot[36] -= qdot;
  }

  {
    // reaction 286:  c5h9 + oh => c5h10-1 + o
    const amrex::Real k_f = 700000 * exp(-(15046.1783075611) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[35]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[35] -= qdot;
    wdot[36] += qdot;
  }

  {
    // reaction 287:  c5h10-1 + o => hco + pc4h9
    const amrex::Real k_f = 100000;
    const amrex::Real qf = k_f * (sc[2] * sc[36]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[7] += qdot;
    wdot[31] += qdot;
    wdot[36] -= qdot;
  }

  {
    // reaction 288:  c5h10-1 + o => ch3co + nc3h7
    const amrex::Real k_f = 100000;
    const amrex::Real qf = k_f * (sc[2] * sc[36]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[22] += qdot;
    wdot[28] += qdot;
    wdot[36] -= qdot;
  }

  {
    // reaction 289:  c5h10-1 + oh => c5h9 + h2o
    const amrex::Real k_f = 5.12 * exp((2) * logT - (-149.958566409806) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[36]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[35] += qdot;
    wdot[36] -= qdot;
  }

  {
    // reaction 290:  c5h9 + h2o => c5h10-1 + oh
    const amrex::Real k_f =
      20.6 * exp((2.16) * logT - (17597.486803191) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[35]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[35] -= qdot;
    wdot[36] += qdot;
  }

  {
    // reaction 291:  c5h10-1 + oh => ch2o + pc4h9
    const amrex::Real k_f = 100000;
    const amrex::Real qf = k_f * (sc[4] * sc[36]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[13] += qdot;
    wdot[31] += qdot;
    wdot[36] -= qdot;
  }

  {
    // reaction 292:  c5h10-1 + oh => ch3cho + nc3h7
    const amrex::Real k_f = 100000;
    const amrex::Real qf = k_f * (sc[4] * sc[36]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[24] += qdot;
    wdot[28] += qdot;
    wdot[36] -= qdot;
  }

  {
    // reaction 293:  c5h10-1 + ch3 => c5h9 + ch4
    const amrex::Real k_f = 100000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[36]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[35] += qdot;
    wdot[36] -= qdot;
  }

  {
    // reaction 294:  c5h9 + ch4 => c5h10-1 + ch3
    const amrex::Real k_f = 600000 * exp(-(9007.57831790448) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[35]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[10] -= qdot;
    wdot[35] -= qdot;
    wdot[36] += qdot;
  }

  {
    // reaction 295:  h + h2o2 => h2 + ho2
    const amrex::Real k_f = 48200000 * exp(-(4000.57249314752) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[11] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 296:  h2 + ho2 => h + h2o2
    const amrex::Real k_f =
      1875000 * exp((0.33) * logT - (12208.0363124225) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[11] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 297:  hco + o => co2 + h
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[2] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[7] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 298:  co2 + h => hco + o
    const amrex::Real k_f = 9677000000 * exp(-(55454.4765716801) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[2] += qdot;
    wdot[7] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 299:  ch3co + h => ch2co + h2
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[0] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[20] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 300:  ch2co + h2 => ch3co + h
    const amrex::Real k_f =
      562600000000 * exp((-1.13) * logT - (32054.9016117606) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[20] -= qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 301:  ch3co + o => ch2co + oh
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[2] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[20] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 302:  ch2co + oh => ch3co + o
    const amrex::Real k_f =
      5951000000000 * exp((-1.13) * logT - (60738.2515626297) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[20] -= qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 303:  ch3 + ch3co => ch2co + ch4
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[9] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[20] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 304:  ch2co + ch4 => ch3 + ch3co
    const amrex::Real k_f =
      819700000000 * exp((-0.67) * logT - (40171.7864311908) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[10] -= qdot;
    wdot[20] -= qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 305:  c2h4 + o => ch2cho + h
    const amrex::Real k_f =
      3.39 * exp((1.88) * logT - (90.0757831790448) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[16] -= qdot;
    wdot[23] += qdot;
  }

  {
    // reaction 306:  ch2cho + h => c2h4 + o
    const amrex::Real k_f =
      9.481 * exp((1.79) * logT - (8076.62748616575) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[2] += qdot;
    wdot[16] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 307:  c2h5 + o => ch3cho + h
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[2] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[17] -= qdot;
    wdot[24] += qdot;
  }

  {
    // reaction 308:  ch3cho + h => c2h5 + o
    const amrex::Real k_f =
      550500000 * exp((0.11) * logT - (37434.2877692131) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[2] += qdot;
    wdot[17] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 309:  c2h3 + c2h4 => c4h6 + h
    const amrex::Real k_f = 500000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[16] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[16] -= qdot;
    wdot[19] -= qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 310:  c4h6 + h => c2h3 + c2h4
    const amrex::Real k_f = 10000000 * exp(-(2365.11832928218) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[16] += qdot;
    wdot[19] += qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 313:  c2h5o + o2 => ch3cho + ho2
    const amrex::Real k_f = 42800 * exp(-(552.028682387778) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
    wdot[24] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 314:  ch3cho + ho2 => c2h5o + o2
    const amrex::Real k_f =
      387.2 * exp((0.44) * logT - (16042.5473058545) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[11] -= qdot;
    wdot[24] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 315:  h2o2 + o2 => 2 ho2
    const amrex::Real k_f =
      183900000 * exp((-0.66) * logT - (19897.1869659186) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += 2.000000 * qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 316:  2 ho2 => h2o2 + o2
    const amrex::Real k_f = 130000 * exp(-(-819.739948595888) * invT);
    const amrex::Real qf = k_f * ((sc[11] * sc[11]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[11] -= 2.000000 * qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 317:  c2h3 + o2 => ch2cho + o
    const amrex::Real k_f =
      350000000 * exp((-0.61) * logT - (2646.91966213283) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[19] -= qdot;
    wdot[23] += qdot;
  }

  {
    // reaction 318:  ch2cho + o => c2h3 + o2
    const amrex::Real k_f =
      2589000 * exp((0.12) * logT - (3250.27644443268) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[19] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 321:  ch3o2h => ch3o + oh
    const amrex::Real k_f = 631000000000000 * exp(-(21286.0649635396) * invT);
    const amrex::Real qf = k_f * (sc[39]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[14] += qdot;
    wdot[39] -= qdot;
  }

  {
    // reaction 322:  ch3o + oh => ch3o2h
    const amrex::Real k_f =
      116600 * exp((0.6) * logT - (-891.196715140159) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[14] -= qdot;
    wdot[39] += qdot;
  }

  {
    // reaction 323:  c3h2 + o2 => co + h + hcco
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[3] * sc[49]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[21] += qdot;
    wdot[49] -= qdot;
  }

  {
    // reaction 324:  ch2o + ch3o2 => ch3o2h + hco
    const amrex::Real k_f = 1990000 * exp(-(5867.50632328303) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc[38]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[7] += qdot;
    wdot[13] -= qdot;
    wdot[38] -= qdot;
    wdot[39] += qdot;
  }

  {
    // reaction 325:  ch3o2h + hco => ch2o + ch3o2
    const amrex::Real k_f =
      8504000 * exp((-0.5) * logT - (3527.04561062528) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc[39]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[7] -= qdot;
    wdot[13] += qdot;
    wdot[38] += qdot;
    wdot[39] -= qdot;
  }

  {
    // reaction 326:  c2h4 + ch3o2 => c2h3 + ch3o2h
    const amrex::Real k_f = 2230000 * exp(-(8650.29448518313) * invT);
    const amrex::Real qf = k_f * (sc[16] * sc[38]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[16] -= qdot;
    wdot[19] += qdot;
    wdot[38] -= qdot;
    wdot[39] += qdot;
  }

  {
    // reaction 327:  c2h3 + ch3o2h => c2h4 + ch3o2
    const amrex::Real k_f =
      8112000000 * exp((-1.33) * logT - (-749.289615383228) * invT);
    const amrex::Real qf = k_f * (sc[19] * sc[39]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[16] += qdot;
    wdot[19] -= qdot;
    wdot[38] += qdot;
    wdot[39] -= qdot;
  }

  {
    // reaction 328:  ch3o2 + ch4 => ch3 + ch3o2h
    const amrex::Real k_f = 181000 * exp(-(9299.44398407122) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[38]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[10] -= qdot;
    wdot[38] -= qdot;
    wdot[39] += qdot;
  }

  {
    // reaction 329:  ch3 + ch3o2h => ch3o2 + ch4
    const amrex::Real k_f =
      370800 * exp((-0.5) * logT - (-667.768515522863) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[39]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[38] += qdot;
    wdot[39] -= qdot;
  }

  {
    // reaction 330:  c2h5 + ho2 => c2h5o + oh
    const amrex::Real k_f = 32000000;
    const amrex::Real qf = k_f * (sc[11] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[11] -= qdot;
    wdot[17] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 331:  c2h5o + oh => c2h5 + ho2
    const amrex::Real k_f =
      3075000000 * exp((-0.32) * logT - (13833.4261429717) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[11] += qdot;
    wdot[17] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 332:  ch3 + ch3o2 => 2 ch3o
    const amrex::Real k_f = 7000000 * exp(-(-503.21666580472) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[38]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[14] += 2.000000 * qdot;
    wdot[38] -= qdot;
  }

  {
    // reaction 333:  2 ch3o => ch3 + ch3o2
    const amrex::Real k_f =
      29710000000 * exp((-0.93) * logT - (14246.0638089316) * invT);
    const amrex::Real qf = k_f * ((sc[14] * sc[14]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[14] -= 2.000000 * qdot;
    wdot[38] += qdot;
  }

  {
    // reaction 334:  c2h5 + ch3o2 => c2h5o + ch3o
    const amrex::Real k_f = 7000000 * exp(-(-503.21666580472) * invT);
    const amrex::Real qf = k_f * (sc[17] * sc[38]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] += qdot;
    wdot[17] -= qdot;
    wdot[37] += qdot;
    wdot[38] -= qdot;
  }

  {
    // reaction 335:  c2h5o + ch3o => c2h5 + ch3o2
    const amrex::Real k_f =
      65690000000 * exp((-0.9) * logT - (15730.5529730555) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[17] += qdot;
    wdot[37] -= qdot;
    wdot[38] += qdot;
  }

  {
    // reaction 336:  ch3o2 + ho2 => ch3o2h + o2
    const amrex::Real k_f = 17500 * exp(-(-1648.03458051046) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[38]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[11] -= qdot;
    wdot[38] -= qdot;
    wdot[39] += qdot;
  }

  {
    // reaction 337:  ch3o2h + o2 => ch3o2 + ho2
    const amrex::Real k_f =
      51560000 * exp((-0.83) * logT - (17552.1973032686) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[39]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
    wdot[38] += qdot;
    wdot[39] -= qdot;
  }

  {
    // reaction 338:  h2o2 + oh => h2o + ho2
    const amrex::Real k_f = 580000000 * exp(-(4810.75132509312) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[11] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 339:  h2o + ho2 => h2o2 + oh
    const amrex::Real k_f =
      97710000 * exp((0.33) * logT - (20641.9476313096) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[11] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 340:  2 ch3o2 => 2 ch3o + o2
    const amrex::Real k_f =
      14000000000 * exp((-1.61) * logT - (935.982998396779) * invT);
    const amrex::Real qf = k_f * ((sc[38] * sc[38]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[14] += 2.000000 * qdot;
    wdot[38] -= 2.000000 * qdot;
  }

  {
    // reaction 341:  c2h6 + ch3o2 => c2h5 + ch3o2h
    const amrex::Real k_f = 13200000 * exp(-(10300.8451490226) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[38]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
    wdot[17] += qdot;
    wdot[38] -= qdot;
    wdot[39] += qdot;
  }

  {
    // reaction 342:  c2h5 + ch3o2h => c2h6 + ch3o2
    const amrex::Real k_f =
      172800 * exp((0.06) * logT - (2431.54292916841) * invT);
    const amrex::Real qf = k_f * (sc[17] * sc[39]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] += qdot;
    wdot[17] -= qdot;
    wdot[38] += qdot;
    wdot[39] -= qdot;
  }

  {
    // reaction 345:  ch3cho + ch3o2 => ch3co + ch3o2h
    const amrex::Real k_f = 3010000 * exp(-(5998.34265639226) * invT);
    const amrex::Real qf = k_f * (sc[24] * sc[38]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[22] += qdot;
    wdot[24] -= qdot;
    wdot[38] -= qdot;
    wdot[39] += qdot;
  }

  {
    // reaction 346:  ch3co + ch3o2h => ch3cho + ch3o2
    const amrex::Real k_f =
      25190000 * exp((-0.51) * logT - (4524.42104225023) * invT);
    const amrex::Real qf = k_f * (sc[22] * sc[39]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[22] -= qdot;
    wdot[24] += qdot;
    wdot[38] += qdot;
    wdot[39] -= qdot;
  }

  {
    // reaction 347:  c2h3co => c2h3 + co
    const amrex::Real k_f =
      304300000000000 * exp((-0.46) * logT - (15353.140473702) * invT);
    const amrex::Real qf = k_f * (sc[40]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[19] += qdot;
    wdot[40] -= qdot;
  }

  {
    // reaction 348:  c2h3 + co => c2h3co
    const amrex::Real k_f = 151000 * exp(-(2420.4721625207) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[19] -= qdot;
    wdot[40] += qdot;
  }

  {
    // reaction 349:  c2h3cho + oh => c2h3co + h2o
    const amrex::Real k_f =
      9.24 * exp((1.5) * logT - (-484.09443250414) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[41]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[40] += qdot;
    wdot[41] -= qdot;
  }

  {
    // reaction 350:  c2h3co + h2o => c2h3cho + oh
    const amrex::Real k_f =
      21.47 * exp((1.48) * logT - (17869.2238027256) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[40]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[40] -= qdot;
    wdot[41] += qdot;
  }

  {
    // reaction 351:  c2h3cho + h => c2h3co + h2
    const amrex::Real k_f = 13400000 * exp(-(1660.61499715557) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[41]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[40] += qdot;
    wdot[41] -= qdot;
  }

  {
    // reaction 352:  c2h3co + h2 => c2h3cho + h
    const amrex::Real k_f =
      7191000 * exp((-0.02) * logT - (12389.1943121122) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[40]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[40] -= qdot;
    wdot[41] += qdot;
  }

  {
    // reaction 353:  c2h3cho + o => c2h3co + oh
    const amrex::Real k_f = 5940000 * exp(-(940.008731723216) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[41]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[40] += qdot;
    wdot[41] -= qdot;
  }

  {
    // reaction 354:  c2h3co + oh => c2h3cho + o
    const amrex::Real k_f =
      1400000 * exp((-0.02) * logT - (10612.8394818215) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[40]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[40] -= qdot;
    wdot[41] += qdot;
  }

  {
    // reaction 355:  c2h3cho + ho2 => c2h3co + h2o2
    const amrex::Real k_f = 3010000 * exp(-(5998.34265639226) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[41]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[12] += qdot;
    wdot[40] += qdot;
    wdot[41] -= qdot;
  }

  {
    // reaction 356:  c2h3co + h2o2 => c2h3cho + ho2
    const amrex::Real k_f =
      41520000 * exp((-0.35) * logT - (8524.49031873195) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc[40]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[12] -= qdot;
    wdot[40] -= qdot;
    wdot[41] += qdot;
  }

  {
    // reaction 357:  c2h3cho + ch3 => c2h3co + ch4
    const amrex::Real k_f =
      2.608 * exp((1.78) * logT - (2974.5137115717) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[41]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[40] += qdot;
    wdot[41] -= qdot;
  }

  {
    // reaction 358:  c2h3co + ch4 => c2h3cho + ch3
    const amrex::Real k_f =
      36.56 * exp((1.76) * logT - (13944.1338094488) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[40]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[10] -= qdot;
    wdot[40] -= qdot;
    wdot[41] += qdot;
  }

  {
    // reaction 359:  c2h3cho + ch3o2 => c2h3co + ch3o2h
    const amrex::Real k_f = 3010000 * exp(-(5998.34265639226) * invT);
    const amrex::Real qf = k_f * (sc[38] * sc[41]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[38] -= qdot;
    wdot[39] += qdot;
    wdot[40] += qdot;
    wdot[41] -= qdot;
  }

  {
    // reaction 360:  c2h3co + ch3o2h => c2h3cho + ch3o2
    const amrex::Real k_f =
      86450000 * exp((-0.53) * logT - (7004.7759880017) * invT);
    const amrex::Real qf = k_f * (sc[39] * sc[40]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[38] += qdot;
    wdot[39] -= qdot;
    wdot[40] -= qdot;
    wdot[41] += qdot;
  }

  {
    // reaction 361:  c3h5o => c2h3cho + h
    const amrex::Real k_f = 100000000000000 * exp(-(14643.6049749173) * invT);
    const amrex::Real qf = k_f * (sc[42]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[41] += qdot;
    wdot[42] -= qdot;
  }

  {
    // reaction 362:  c2h3cho + h => c3h5o
    const amrex::Real k_f =
      771400 * exp((0.48) * logT - (8932.09581803377) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[41]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[41] -= qdot;
    wdot[42] += qdot;
  }

  {
    // reaction 363:  c3h5o => c2h3 + ch2o
    const amrex::Real k_f =
      2028000000000 * exp((0.09) * logT - (11855.7846463592) * invT);
    const amrex::Real qf = k_f * (sc[42]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[13] += qdot;
    wdot[19] += qdot;
    wdot[42] -= qdot;
  }

  {
    // reaction 364:  c2h3 + ch2o => c3h5o
    const amrex::Real k_f = 150000 * exp(-(5334.09665753003) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
    wdot[19] -= qdot;
    wdot[42] += qdot;
  }

  {
    // reaction 365:  c3h5o + o2 => c2h3cho + ho2
    const amrex::Real k_f = 1000000 * exp(-(3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[42]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
    wdot[41] += qdot;
    wdot[42] -= qdot;
  }

  {
    // reaction 366:  c2h3cho + ho2 => c3h5o + o2
    const amrex::Real k_f = 128800 * exp(-(16102.933305751) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[41]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[11] -= qdot;
    wdot[41] -= qdot;
    wdot[42] += qdot;
  }

  {
    // reaction 367:  c3h5-a + ho2 => c3h5o + oh
    const amrex::Real k_f = 7000000 * exp(-(-503.21666580472) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[47]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[11] -= qdot;
    wdot[42] += qdot;
    wdot[47] -= qdot;
  }

  {
    // reaction 368:  c3h5o + oh => c3h5-a + ho2
    const amrex::Real k_f =
      20410000 * exp((-0.16) * logT - (6169.43632276586) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[42]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[11] += qdot;
    wdot[42] -= qdot;
    wdot[47] += qdot;
  }

  {
    // reaction 369:  c3h5-a + ch3o2 => c3h5o + ch3o
    const amrex::Real k_f = 7000000 * exp(-(-503.21666580472) * invT);
    const amrex::Real qf = k_f * (sc[38] * sc[47]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] += qdot;
    wdot[38] -= qdot;
    wdot[42] += qdot;
    wdot[47] -= qdot;
  }

  {
    // reaction 370:  c3h5o + ch3o => c3h5-a + ch3o2
    const amrex::Real k_f =
      1994000000 * exp((-0.74) * logT - (8564.74765199633) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[42]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[38] += qdot;
    wdot[42] -= qdot;
    wdot[47] += qdot;
  }

  {
    // reaction 371:  c3h6 + ch3o2 => c3h5-a + ch3o2h
    const amrex::Real k_f = 324000 * exp(-(7497.92832049032) * invT);
    const amrex::Real qf = k_f * (sc[26] * sc[38]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[26] -= qdot;
    wdot[38] -= qdot;
    wdot[39] += qdot;
    wdot[47] += qdot;
  }

  {
    // reaction 372:  c3h5-a + ch3o2h => c3h6 + ch3o2
    const amrex::Real k_f = 20000 * exp(-(7548.2499870708) * invT);
    const amrex::Real qf = k_f * (sc[39] * sc[47]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[26] += qdot;
    wdot[38] += qdot;
    wdot[39] -= qdot;
    wdot[47] -= qdot;
  }

  {
    // reaction 373:  ch3 + oh => ch2(s) + h2o
    const amrex::Real k_f = 26500000 * exp(-(1100.03163144912) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[9]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[9] -= qdot;
    wdot[50] += qdot;
  }

  {
    // reaction 374:  ch2(s) + h2o => ch3 + oh
    const amrex::Real k_f =
      32360 * exp((0.89) * logT - (609.395382289516) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[50]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[9] += qdot;
    wdot[50] -= qdot;
  }

  {
    // reaction 375:  c4h7o => c2h3 + ch3cho
    const amrex::Real k_f = 794000000000000 * exp(-(9561.11665028967) * invT);
    const amrex::Real qf = k_f * (sc[43]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[19] += qdot;
    wdot[24] += qdot;
    wdot[43] -= qdot;
  }

  {
    // reaction 376:  c2h3 + ch3cho => c4h7o
    const amrex::Real k_f = 10000 * exp(-(10064.3333160944) * invT);
    const amrex::Real qf = k_f * (sc[19] * sc[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[19] -= qdot;
    wdot[24] -= qdot;
    wdot[43] += qdot;
  }

  {
    // reaction 377:  c4h7o => c2h3cho + ch3
    const amrex::Real k_f = 794000000000000 * exp(-(9561.11665028967) * invT);
    const amrex::Real qf = k_f * (sc[43]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[41] += qdot;
    wdot[43] -= qdot;
  }

  {
    // reaction 378:  c2h3cho + ch3 => c4h7o
    const amrex::Real k_f = 10000 * exp(-(10064.3333160944) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[41]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[41] -= qdot;
    wdot[43] += qdot;
  }

  {
    // reaction 379:  c4h7 + ho2 => c4h7o + oh
    const amrex::Real k_f = 7000000 * exp(-(-503.21666580472) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[11] -= qdot;
    wdot[29] -= qdot;
    wdot[43] += qdot;
  }

  {
    // reaction 380:  c4h7o + oh => c4h7 + ho2
    const amrex::Real k_f =
      100800 * exp((0.26) * logT - (8499.32948544172) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[43]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[11] += qdot;
    wdot[29] += qdot;
    wdot[43] -= qdot;
  }

  {
    // reaction 381:  c4h7 + ch3o2 => c4h7o + ch3o
    const amrex::Real k_f = 7000000 * exp(-(-503.21666580472) * invT);
    const amrex::Real qf = k_f * (sc[29] * sc[38]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] += qdot;
    wdot[29] -= qdot;
    wdot[38] -= qdot;
    wdot[43] += qdot;
  }

  {
    // reaction 382:  c4h7o + ch3o => c4h7 + ch3o2
    const amrex::Real k_f =
      9844000 * exp((-0.32) * logT - (10894.6408146722) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[43]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[29] += qdot;
    wdot[38] += qdot;
    wdot[43] -= qdot;
  }

  {
    // reaction 383:  c4h8-1 + oh => ch2o + nc3h7
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[4] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[13] += qdot;
    wdot[28] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 384:  ch2o + nc3h7 => c4h8-1 + oh
    const amrex::Real k_f = 1620000 * exp(-(6657.55648859644) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[13] -= qdot;
    wdot[28] -= qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 385:  c4h8-1 + o => c3h6 + ch2o
    const amrex::Real k_f =
      0.723 * exp((2.34) * logT - (-528.377499094956) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[13] += qdot;
    wdot[26] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 386:  c3h6 + ch2o => c4h8-1 + o
    const amrex::Real k_f =
      0.2 * exp((2.34) * logT - (40398.2339308029) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[13] -= qdot;
    wdot[26] -= qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 387:  c4h8-1 + o => c2h4 + ch3cho
    const amrex::Real k_f = 13000000 * exp(-(427.734165934012) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[16] += qdot;
    wdot[24] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 388:  c2h4 + ch3cho => c4h8-1 + o
    const amrex::Real k_f = 2070000 * exp(-(42823.7382599816) * invT);
    const amrex::Real qf = k_f * (sc[16] * sc[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[16] -= qdot;
    wdot[24] -= qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 389:  c4h8-1 + o => c2h5 + ch3co
    const amrex::Real k_f = 13000000 * exp(-(427.734165934012) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[17] += qdot;
    wdot[22] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 390:  c2h5 + ch3co => c4h8-1 + o
    const amrex::Real k_f = 2350000 * exp(-(19197.7158004501) * invT);
    const amrex::Real qf = k_f * (sc[17] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[17] -= qdot;
    wdot[22] -= qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 391:  c4h8-1 + oh => c2h5 + ch3cho
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[4] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[17] += qdot;
    wdot[24] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 392:  c2h5 + ch3cho => c4h8-1 + oh
    const amrex::Real k_f = 9330000 * exp(-(10029.1081494881) * invT);
    const amrex::Real qf = k_f * (sc[17] * sc[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[17] -= qdot;
    wdot[24] -= qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 393:  c4h8-1 + oh => c2h6 + ch3co
    const amrex::Real k_f = 500000;
    const amrex::Real qf = k_f * (sc[4] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[15] += qdot;
    wdot[22] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 394:  c2h6 + ch3co => c4h8-1 + oh
    const amrex::Real k_f = 9830000 * exp(-(16319.3164720471) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[15] -= qdot;
    wdot[22] -= qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 395:  c4h8-1 + o => c2h5co + ch3
    const amrex::Real k_f = 13000000 * exp(-(427.734165934012) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[9] += qdot;
    wdot[30] -= qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 396:  c2h5co + ch3 => c4h8-1 + o
    const amrex::Real k_f = 480000 * exp(-(16379.7024719436) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[9] -= qdot;
    wdot[30] += qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 397:  c4h8-1 + oh => c2h5cho + ch3
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[4] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[9] += qdot;
    wdot[30] -= qdot;
    wdot[33] += qdot;
  }

  {
    // reaction 398:  c2h5cho + ch3 => c4h8-1 + oh
    const amrex::Real k_f = 49500 * exp(-(8524.49031873195) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[33]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[9] -= qdot;
    wdot[30] += qdot;
    wdot[33] -= qdot;
  }

  {
    // reaction 399:  c4h8-1 + oh => c2h5co + ch4
    const amrex::Real k_f = 500000;
    const amrex::Real qf = k_f * (sc[4] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[10] += qdot;
    wdot[30] -= qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 400:  c2h5co + ch4 => c4h8-1 + oh
    const amrex::Real k_f = 22000000 * exp(-(17245.2351371277) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[10] -= qdot;
    wdot[30] += qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 401:  c4h8-1 + ch3o2 => c4h7 + ch3o2h
    const amrex::Real k_f = 1400000 * exp(-(7497.92832049032) * invT);
    const amrex::Real qf = k_f * (sc[30] * sc[38]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[29] += qdot;
    wdot[30] -= qdot;
    wdot[38] -= qdot;
    wdot[39] += qdot;
  }

  {
    // reaction 402:  c4h7 + ch3o2h => c4h8-1 + ch3o2
    const amrex::Real k_f = 316000 * exp(-(6541.81665546136) * invT);
    const amrex::Real qf = k_f * (sc[29] * sc[39]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[29] -= qdot;
    wdot[30] += qdot;
    wdot[38] += qdot;
    wdot[39] -= qdot;
  }

  {
    // reaction 403:  c4h8ooh1-3o2 => c4h8ooh1-3 + o2
    const amrex::Real k_f =
      5.601e+22 * exp((-2.23) * logT - (19102.1046339472) * invT);
    const amrex::Real qf = k_f * (sc[44]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[44] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 404:  c4h8ooh1-3 + o2 => c4h8ooh1-3o2
    const amrex::Real k_f = 7540000;
    const amrex::Real qf = k_f * (sc[3] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[44] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 405:  c4h8ooh1-3o2 => nc4ket13 + oh
    const amrex::Real k_f = 25000000000 * exp(-(10768.836648221) * invT);
    const amrex::Real qf = k_f * (sc[44]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[44] -= qdot;
    wdot[51] += qdot;
  }

  {
    // reaction 406:  nc4ket13 + oh => c4h8ooh1-3o2
    const amrex::Real k_f =
      0.006893 * exp((1.3) * logT - (22493.784961471) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[51]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[44] += qdot;
    wdot[51] -= qdot;
  }

  {
    // reaction 407:  c4h8ooh1-3 => c3h6 + ch2o + oh
    const amrex::Real k_f =
      66370000000000 * exp((-0.16) * logT - (15046.1783075611) * invT);
    const amrex::Real qf = k_f * (sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[13] += qdot;
    wdot[26] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 408:  pc4h9o2 => c4h8ooh1-3
    const amrex::Real k_f = 25000000000 * exp(-(10492.0674820284) * invT);
    const amrex::Real qf = k_f * (sc[46]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[45] += qdot;
    wdot[46] -= qdot;
  }

  {
    // reaction 409:  c4h8ooh1-3 => pc4h9o2
    const amrex::Real k_f =
      3231000000 * exp((-0.14) * logT - (3960.81837654895) * invT);
    const amrex::Real qf = k_f * (sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[45] -= qdot;
    wdot[46] += qdot;
  }

  {
    // reaction 410:  c2h5cho + ch3o2 => c2h5co + ch3o2h
    const amrex::Real k_f = 3010000 * exp(-(5998.34265639226) * invT);
    const amrex::Real qf = k_f * (sc[33] * sc[38]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[33] -= qdot;
    wdot[34] += qdot;
    wdot[38] -= qdot;
    wdot[39] += qdot;
  }

  {
    // reaction 411:  c2h5co + ch3o2h => c2h5cho + ch3o2
    const amrex::Real k_f =
      23580000 * exp((-0.51) * logT - (4520.3953089238) * invT);
    const amrex::Real qf = k_f * (sc[34] * sc[39]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[33] += qdot;
    wdot[34] -= qdot;
    wdot[38] += qdot;
    wdot[39] -= qdot;
  }

  {
    // reaction 412:  c2h5cho + c4h7 => c2h5co + c4h8-1
    const amrex::Real k_f = 1700000 * exp(-(4247.14865939183) * invT);
    const amrex::Real qf = k_f * (sc[29] * sc[33]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[29] -= qdot;
    wdot[30] += qdot;
    wdot[33] -= qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 413:  c2h5co + c4h8-1 => c2h5cho + c4h7
    const amrex::Real k_f = 10000000 * exp(-(14090.0666425322) * invT);
    const amrex::Real qf = k_f * (sc[30] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[29] += qdot;
    wdot[30] -= qdot;
    wdot[33] += qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 414:  c3h4-a + ho2 => c2h4 + co + oh
    const amrex::Real k_f = 1000000 * exp(-(7045.03332126608) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] += qdot;
    wdot[11] -= qdot;
    wdot[16] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 415:  c2h4 + co + oh => c3h4-a + ho2
    const amrex::Real k_f = 1e-12;
    const amrex::Real qf = k_f * (sc[4] * sc[6] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[6] -= qdot;
    wdot[11] += qdot;
    wdot[16] -= qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 416:  c3h4-a + ho2 => c3h3 + h2o2
    const amrex::Real k_f = 30000000 * exp(-(7045.03332126608) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[12] += qdot;
    wdot[25] -= qdot;
    wdot[48] += qdot;
  }

  {
    // reaction 417:  c3h3 + h2o2 => c3h4-a + ho2
    const amrex::Real k_f =
      15510000000 * exp((-1.38) * logT - (22141.5332954077) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc[48]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[12] -= qdot;
    wdot[25] += qdot;
    wdot[48] -= qdot;
  }

  {
    // reaction 418:  c3h6 + o2 => c3h5-a + ho2
    const amrex::Real k_f = 4000000 * exp(-(20078.3449656083) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
    wdot[26] -= qdot;
    wdot[47] += qdot;
  }

  {
    // reaction 419:  c3h5-a + ho2 => c3h6 + o2
    const amrex::Real k_f =
      33320 * exp((0.34) * logT - (-279.788466187424) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[47]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[11] -= qdot;
    wdot[26] += qdot;
    wdot[47] -= qdot;
  }

  {
    // reaction 420:  c3h6 + ch3 => c3h5-a + ch4
    const amrex::Real k_f =
      2.21e-06 * exp((3.5) * logT - (2855.75457844178) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[26] -= qdot;
    wdot[47] += qdot;
  }

  {
    // reaction 421:  c3h5-a + ch4 => c3h6 + ch3
    const amrex::Real k_f =
      2.647e-05 * exp((3.51) * logT - (11664.5623133534) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[47]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[10] -= qdot;
    wdot[26] += qdot;
    wdot[47] -= qdot;
  }

  {
    // reaction 422:  c2h5 + c3h6 => c2h6 + c3h5-a
    const amrex::Real k_f = 100000 * exp(-(4931.52332488625) * invT);
    const amrex::Real qf = k_f * (sc[17] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] += qdot;
    wdot[17] -= qdot;
    wdot[26] -= qdot;
    wdot[47] += qdot;
  }

  {
    // reaction 423:  c2h6 + c3h5-a => c2h5 + c3h6
    const amrex::Real k_f =
      0.5369 * exp((1.33) * logT - (8272.88198582959) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[47]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
    wdot[17] += qdot;
    wdot[26] += qdot;
    wdot[47] -= qdot;
  }

  {
    // reaction 424:  c3h5-a + ho2 => c2h3 + ch2o + oh
    const amrex::Real k_f = 1e-24;
    const amrex::Real qf = k_f * (sc[11] * sc[47]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[11] -= qdot;
    wdot[13] += qdot;
    wdot[19] += qdot;
    wdot[47] -= qdot;
  }

  {
    // reaction 425:  c2h3 + ch2o + oh => c3h5-a + ho2
    const amrex::Real k_f = 1e-42;
    const amrex::Real qf = k_f * (sc[4] * sc[13] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[11] += qdot;
    wdot[13] -= qdot;
    wdot[19] -= qdot;
    wdot[47] += qdot;
  }

  {
    // reaction 426:  c3h5-a + h => c3h4-a + h2
    const amrex::Real k_f = 18100000;
    const amrex::Real qf = k_f * (sc[0] * sc[47]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[25] += qdot;
    wdot[47] -= qdot;
  }

  {
    // reaction 427:  c3h4-a + h2 => c3h5-a + h
    const amrex::Real k_f =
      12300000 * exp((0.12) * logT - (23766.9231259569) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[25] -= qdot;
    wdot[47] += qdot;
  }

  {
    // reaction 428:  c3h5-a + ch3 => c3h4-a + ch4
    const amrex::Real k_f = 100000;
    const amrex::Real qf = k_f * (sc[9] * sc[47]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[25] += qdot;
    wdot[47] -= qdot;
  }

  {
    // reaction 429:  c3h4-a + ch4 => c3h5-a + ch3
    const amrex::Real k_f =
      4921000 * exp((0.05) * logT - (24043.6922921495) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[10] -= qdot;
    wdot[25] -= qdot;
    wdot[47] += qdot;
  }

  {
    // reaction 430:  c2h5 + c3h5-a => c2h6 + c3h4-a
    const amrex::Real k_f = 400000;
    const amrex::Real qf = k_f * (sc[17] * sc[47]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] += qdot;
    wdot[17] -= qdot;
    wdot[25] += qdot;
    wdot[47] -= qdot;
  }

  {
    // reaction 431:  c2h6 + c3h4-a => c2h5 + c3h5-a
    const amrex::Real k_f =
      1802000 * exp((0.05) * logT - (20294.7281319043) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
    wdot[17] += qdot;
    wdot[25] -= qdot;
    wdot[47] += qdot;
  }

  {
    // reaction 432:  c2h5 + c3h5-a => c2h4 + c3h6
    const amrex::Real k_f = 400000;
    const amrex::Real qf = k_f * (sc[17] * sc[47]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[16] += qdot;
    wdot[17] -= qdot;
    wdot[26] += qdot;
    wdot[47] -= qdot;
  }

  {
    // reaction 433:  c2h4 + c3h6 => c2h5 + c3h5-a
    const amrex::Real k_f =
      69370000000 * exp((-1.33) * logT - (26569.8399544892) * invT);
    const amrex::Real qf = k_f * (sc[16] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[16] -= qdot;
    wdot[17] += qdot;
    wdot[26] -= qdot;
    wdot[47] += qdot;
  }

  {
    // reaction 434:  c2h3 + c3h5-a => c2h4 + c3h4-a
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[19] * sc[47]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[16] += qdot;
    wdot[19] -= qdot;
    wdot[25] += qdot;
    wdot[47] -= qdot;
  }

  {
    // reaction 435:  c2h4 + c3h4-a => c2h3 + c3h5-a
    const amrex::Real k_f =
      16240000 * exp((0.05) * logT - (24250.0111251294) * invT);
    const amrex::Real qf = k_f * (sc[16] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[16] -= qdot;
    wdot[19] += qdot;
    wdot[25] -= qdot;
    wdot[47] += qdot;
  }

  {
    // reaction 436:  c3h4-a + c3h6 => 2 c3h5-a
    const amrex::Real k_f =
      839100000000 * exp((-1.29) * logT - (16953.369470961) * invT);
    const amrex::Real qf = k_f * (sc[25] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[25] -= qdot;
    wdot[26] -= qdot;
    wdot[47] += 2.000000 * qdot;
  }

  {
    // reaction 437:  2 c3h5-a => c3h4-a + c3h6
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * ((sc[47] * sc[47]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[25] += qdot;
    wdot[26] += qdot;
    wdot[47] -= 2.000000 * qdot;
  }

  {
    // reaction 438:  c3h5-a + o2 => c2h3cho + oh
    const amrex::Real k_f =
      24700000 * exp((-0.44) * logT - (11584.0476468246) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[47]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[41] += qdot;
    wdot[47] -= qdot;
  }

  {
    // reaction 439:  c2h3cho + oh => c3h5-a + o2
    const amrex::Real k_f =
      190300000 * exp((-0.8) * logT - (37680.8639354574) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[41]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[41] -= qdot;
    wdot[47] += qdot;
  }

  {
    // reaction 442:  c3h4-a + o2 => c3h3 + ho2
    const amrex::Real k_f = 40000000 * exp(-(19705.9646329128) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
    wdot[25] -= qdot;
    wdot[48] += qdot;
  }

  {
    // reaction 443:  c3h3 + ho2 => c3h4-a + o2
    const amrex::Real k_f =
      117500 * exp((0.3) * logT - (19.1222333005793) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[48]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[11] -= qdot;
    wdot[25] += qdot;
    wdot[48] -= qdot;
  }

  {
    // reaction 444:  c3h3 + h => c3h2 + h2
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[0] * sc[48]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[48] -= qdot;
    wdot[49] += qdot;
  }

  {
    // reaction 445:  c3h2 + h2 => c3h3 + h
    const amrex::Real k_f =
      38530 * exp((0.38) * logT - (2314.79666270171) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[49]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[48] += qdot;
    wdot[49] -= qdot;
  }

  {
    // reaction 446:  c3h4-a + oh => c3h3 + h2o
    const amrex::Real k_f = 10 * exp((2) * logT - (503.21666580472) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[25] -= qdot;
    wdot[48] += qdot;
  }

  {
    // reaction 447:  c3h3 + h2o => c3h4-a + oh
    const amrex::Real k_f =
      7.003 * exp((1.97) * logT - (17371.0393035789) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[48]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[25] += qdot;
    wdot[48] -= qdot;
  }

  {
    // reaction 448:  c3h4-a + o => c2h4 + co
    const amrex::Real k_f = 7800000 * exp(-(805.146665287552) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
    wdot[16] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 449:  c2h4 + co => c3h4-a + o
    const amrex::Real k_f =
      82800000 * exp((-0.21) * logT - (62801.439892429) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[6] -= qdot;
    wdot[16] -= qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 450:  c3h2 + oh => c2h2 + hco
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[4] * sc[49]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[18] += qdot;
    wdot[49] -= qdot;
  }

  {
    // reaction 451:  c2h2 + hco => c3h2 + oh
    const amrex::Real k_f =
      290700000000000 * exp((-1.39) * logT - (39512.5725989866) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[7] -= qdot;
    wdot[18] -= qdot;
    wdot[49] += qdot;
  }

  {
    // reaction 452:  c3h5-a => c3h4-a + h
    const amrex::Real k_f =
      6.663e+15 * exp((-0.43) * logT - (31813.3576121744) * invT);
    const amrex::Real qf = k_f * (sc[47]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[25] += qdot;
    wdot[47] -= qdot;
  }

  {
    // reaction 453:  c3h4-a + h => c3h5-a
    const amrex::Real k_f =
      240000 * exp((0.69) * logT - (1513.17251407479) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[25] -= qdot;
    wdot[47] += qdot;
  }

  {
    // reaction 454:  c3h4-a + h => c3h3 + h2
    const amrex::Real k_f = 20 * exp((2) * logT - (2516.0833290236) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[25] -= qdot;
    wdot[48] += qdot;
  }

  {
    // reaction 455:  c3h3 + h2 => c3h4-a + h
    const amrex::Real k_f =
      3.235 * exp((1.97) * logT - (11755.1413131983) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[48]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[25] += qdot;
    wdot[48] -= qdot;
  }

  {
    // reaction 456:  c3h4-a + ch3 => c3h3 + ch4
    const amrex::Real k_f =
      3.67e-08 * exp((4.01) * logT - (3436.96982744624) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[25] -= qdot;
    wdot[48] += qdot;
  }

  {
    // reaction 457:  c3h3 + ch4 => c3h4-a + ch3
    const amrex::Real k_f =
      1.551e-07 * exp((3.98) * logT - (12917.5718112072) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[48]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[10] -= qdot;
    wdot[25] += qdot;
    wdot[48] -= qdot;
  }

  {
    // reaction 458:  c3h4-a + c3h5-a => c3h3 + c3h6
    const amrex::Real k_f = 200000 * exp(-(3874.76832669634) * invT);
    const amrex::Real qf = k_f * (sc[25] * sc[47]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[25] -= qdot;
    wdot[26] += qdot;
    wdot[47] -= qdot;
    wdot[48] += qdot;
  }

  {
    // reaction 459:  c3h3 + c3h6 => c3h4-a + c3h5-a
    const amrex::Real k_f =
      26440000000000 * exp((-2.71) * logT - (21205.5502970109) * invT);
    const amrex::Real qf = k_f * (sc[26] * sc[48]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[25] += qdot;
    wdot[26] -= qdot;
    wdot[47] += qdot;
    wdot[48] -= qdot;
  }

  {
    // reaction 460:  c3h3 + oh => c3h2 + h2o
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[4] * sc[48]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[48] -= qdot;
    wdot[49] += qdot;
  }

  {
    // reaction 461:  c3h2 + h2o => c3h3 + oh
    const amrex::Real k_f = 1343000000 * exp(-(7890.437319818) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[49]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[48] += qdot;
    wdot[49] -= qdot;
  }

  {
    // reaction 462:  c3h3 + o2 => ch2co + hco
    const amrex::Real k_f = 30100 * exp(-(1444.23183085955) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[48]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[7] += qdot;
    wdot[20] += qdot;
    wdot[48] -= qdot;
  }

  {
    // reaction 463:  ch2co + hco => c3h3 + o2
    const amrex::Real k_f = 488100 * exp(-(29926.2951154067) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[7] -= qdot;
    wdot[20] -= qdot;
    wdot[48] += qdot;
  }

  {
    // reaction 464:  pc4h9o2 => o2 + pc4h9
    const amrex::Real k_f =
      6.155e+19 * exp((-1.38) * logT - (17869.2238027256) * invT);
    const amrex::Real qf = k_f * (sc[46]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[31] += qdot;
    wdot[46] -= qdot;
  }

  {
    // reaction 465:  o2 + pc4h9 => pc4h9o2
    const amrex::Real k_f = 4520000;
    const amrex::Real qf = k_f * (sc[3] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[31] -= qdot;
    wdot[46] += qdot;
  }

  {
    // reaction 466:  ch2cho => ch2co + h
    const amrex::Real k_f =
      3.094e+15 * exp((-0.26) * logT - (25573.4709561959) * invT);
    const amrex::Real qf = k_f * (sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[20] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 467:  ch2co + h => ch2cho
    const amrex::Real k_f = 50000000 * exp(-(6189.56498939805) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[20] -= qdot;
    wdot[23] += qdot;
  }

  {
    // reaction 468:  ch2cho + o2 => ch2o + co + oh
    const amrex::Real k_f = 20000000 * exp(-(2113.50999637982) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[6] += qdot;
    wdot[13] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 469:  nc4ket13 => ch2cho + ch3cho + oh
    const amrex::Real k_f = 1.05e+16 * exp(-(20933.8132974763) * invT);
    const amrex::Real qf = k_f * (sc[51]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[23] += qdot;
    wdot[24] += qdot;
    wdot[51] -= qdot;
  }

  {
    // reaction 470:  c3h5-a + o2 => c3h4-a + ho2
    const amrex::Real k_f =
      2.18e+15 * exp((-2.85) * logT - (15478.9446401532) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[47]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
    wdot[25] += qdot;
    wdot[47] -= qdot;
  }

  {
    // reaction 471:  c3h4-a + ho2 => c3h5-a + o2
    const amrex::Real k_f =
      26900000000000 * exp((-2.4) * logT - (10315.9416489968) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[11] -= qdot;
    wdot[25] -= qdot;
    wdot[47] += qdot;
  }

  {
    // reaction 472:  c3h5-a + o2 => ch2cho + ch2o
    const amrex::Real k_f =
      7140000000 * exp((-1.21) * logT - (10592.7108151893) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[47]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[13] += qdot;
    wdot[23] += qdot;
    wdot[47] -= qdot;
  }

  {
    // reaction 473:  ch2cho + ch2o => c3h5-a + o2
    const amrex::Real k_f =
      49440000000 * exp((-1.4) * logT - (44595.0609236143) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[13] -= qdot;
    wdot[23] -= qdot;
    wdot[47] += qdot;
  }

  {
    // reaction 474:  c3h5-a + o2 => c2h2 + ch2o + oh
    const amrex::Real k_f =
      9.72e+23 * exp((-5.71) * logT - (10793.9974815112) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[47]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[13] += qdot;
    wdot[18] += qdot;
    wdot[47] -= qdot;
  }

  {
    // reaction 475:  hcco + o2 => co2 + hco
    const amrex::Real k_f = 240000 * exp(-(-429.747032597231) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[7] += qdot;
    wdot[8] += qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 476:  co2 + hco => hcco + o2
    const amrex::Real k_f = 147400000 * exp(-(67229.7465515105) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[7] -= qdot;
    wdot[8] -= qdot;
    wdot[21] += qdot;
  }

  {
    // reaction 477:  ch3 + o2 => ch2o + oh
    const amrex::Real k_f = 747000 * exp(-(7170.83748771726) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[9]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[9] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 478:  ch2o + oh => ch3 + o2
    const amrex::Real k_f = 777800 * exp(-(34102.9934415859) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[9] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 479:  c2h4 + h2 => 2 ch3
    const amrex::Real k_f =
      3767000 * exp((0.83) * logT - (42627.4837603178) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[9] += 2.000000 * qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 480:  2 ch3 => c2h4 + h2
    const amrex::Real k_f = 100000000 * exp(-(16102.933305751) * invT);
    const amrex::Real qf = k_f * ((sc[9] * sc[9]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[9] -= 2.000000 * qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 481:  nc3h7cho + o2 => ho2 + nc3h7co
    const amrex::Real k_f =
      20000000 * exp((0.5) * logT - (21235.7432969592) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[52]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
    wdot[52] -= qdot;
    wdot[53] += qdot;
  }

  {
    // reaction 482:  ho2 + nc3h7co => nc3h7cho + o2
    const amrex::Real k_f = 10 * exp((0.5) * logT - (2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[53]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[11] -= qdot;
    wdot[52] += qdot;
    wdot[53] -= qdot;
  }

  {
    // reaction 483:  nc3h7cho + oh => h2o + nc3h7co
    const amrex::Real k_f =
      26900 * exp((0.76) * logT - (-171.093666373605) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[52]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[52] -= qdot;
    wdot[53] += qdot;
  }

  {
    // reaction 484:  h2o + nc3h7co => nc3h7cho + oh
    const amrex::Real k_f =
      18520 * exp((0.75) * logT - (15710.4243064233) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[53]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[52] += qdot;
    wdot[53] -= qdot;
  }

  {
    // reaction 485:  h + nc3h7cho => h2 + nc3h7co
    const amrex::Real k_f = 40000000 * exp(-(2113.50999637982) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[52]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[52] -= qdot;
    wdot[53] += qdot;
  }

  {
    // reaction 486:  h2 + nc3h7co => h + nc3h7cho
    const amrex::Real k_f = 18000000 * exp(-(12077.1999793133) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[53]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[52] += qdot;
    wdot[53] -= qdot;
  }

  {
    // reaction 487:  nc3h7cho + o => nc3h7co + oh
    const amrex::Real k_f = 5000000 * exp(-(900.757831790448) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[52]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[52] -= qdot;
    wdot[53] += qdot;
  }

  {
    // reaction 488:  nc3h7co + oh => nc3h7cho + o
    const amrex::Real k_f = 1000000 * exp(-(9561.11665028967) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[53]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[52] += qdot;
    wdot[53] -= qdot;
  }

  {
    // reaction 489:  ho2 + nc3h7cho => h2o2 + nc3h7co
    const amrex::Real k_f = 2800000 * exp(-(6843.74665494419) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[52]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[12] += qdot;
    wdot[52] -= qdot;
    wdot[53] += qdot;
  }

  {
    // reaction 490:  h2o2 + nc3h7co => ho2 + nc3h7cho
    const amrex::Real k_f = 1000000 * exp(-(5032.1666580472) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc[53]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[12] -= qdot;
    wdot[52] += qdot;
    wdot[53] -= qdot;
  }

  {
    // reaction 491:  ch3 + nc3h7cho => ch4 + nc3h7co
    const amrex::Real k_f = 1700000 * exp(-(4247.14865939183) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[52]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[52] -= qdot;
    wdot[53] += qdot;
  }

  {
    // reaction 492:  ch4 + nc3h7co => ch3 + nc3h7cho
    const amrex::Real k_f = 15000000 * exp(-(14090.0666425322) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[53]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[10] -= qdot;
    wdot[52] += qdot;
    wdot[53] -= qdot;
  }

  {
    // reaction 493:  ch3o2 + nc3h7cho => ch3o2h + nc3h7co
    const amrex::Real k_f = 1000000 * exp(-(4780.55832514484) * invT);
    const amrex::Real qf = k_f * (sc[38] * sc[52]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[38] -= qdot;
    wdot[39] += qdot;
    wdot[52] -= qdot;
    wdot[53] += qdot;
  }

  {
    // reaction 494:  ch3o2h + nc3h7co => ch3o2 + nc3h7cho
    const amrex::Real k_f = 25000 * exp(-(5032.1666580472) * invT);
    const amrex::Real qf = k_f * (sc[39] * sc[53]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[38] += qdot;
    wdot[39] -= qdot;
    wdot[52] += qdot;
    wdot[53] -= qdot;
  }

  {
    // reaction 495:  nc3h7co => co + nc3h7
    const amrex::Real k_f =
      5.325e+15 * exp((-0.86) * logT - (6743.10332178324) * invT);
    const amrex::Real qf = k_f * (sc[53]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[28] += qdot;
    wdot[53] -= qdot;
  }

  {
    // reaction 496:  co + nc3h7 => nc3h7co
    const amrex::Real k_f = 150000 * exp(-(2415.43999586265) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[28] -= qdot;
    wdot[53] += qdot;
  }

  {
    // reaction 497:  c2h5coch2 => c2h5 + ch2co
    const amrex::Real k_f = 15700000000000 * exp(-(15096.4999741416) * invT);
    const amrex::Real qf = k_f * (sc[54]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[17] += qdot;
    wdot[20] += qdot;
    wdot[54] -= qdot;
  }

  {
    // reaction 498:  c2h5 + ch2co => c2h5coch2
    const amrex::Real k_f = 211000 * exp(-(3698.64249366469) * invT);
    const amrex::Real qf = k_f * (sc[17] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[17] -= qdot;
    wdot[20] -= qdot;
    wdot[54] += qdot;
  }

  {
    // reaction 499:  nc3h7coch2 => ch2co + nc3h7
    const amrex::Real k_f =
      1.226e+18 * exp((-1.4) * logT - (21864.7641292151) * invT);
    const amrex::Real qf = k_f * (sc[55]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[20] += qdot;
    wdot[28] += qdot;
    wdot[55] -= qdot;
  }

  {
    // reaction 500:  ch2co + nc3h7 => nc3h7coch2
    const amrex::Real k_f = 100000 * exp(-(5837.31332333475) * invT);
    const amrex::Real qf = k_f * (sc[20] * sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[20] -= qdot;
    wdot[28] -= qdot;
    wdot[55] += qdot;
  }

  {
    // reaction 501:  nc4h9cho + o2 => ho2 + nc4h9co
    const amrex::Real k_f =
      20000000 * exp((0.5) * logT - (21235.7432969592) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[56]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
    wdot[56] -= qdot;
    wdot[57] += qdot;
  }

  {
    // reaction 502:  ho2 + nc4h9co => nc4h9cho + o2
    const amrex::Real k_f = 10 * exp(-(20128.6666321888) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[57]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[11] -= qdot;
    wdot[56] += qdot;
    wdot[57] -= qdot;
  }

  {
    // reaction 503:  nc4h9cho + oh => h2o + nc4h9co
    const amrex::Real k_f =
      26900 * exp((0.76) * logT - (-171.093666373605) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[56]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[56] -= qdot;
    wdot[57] += qdot;
  }

  {
    // reaction 504:  h2o + nc4h9co => nc4h9cho + oh
    const amrex::Real k_f =
      21430 * exp((0.73) * logT - (15720.4886397394) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[57]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[56] += qdot;
    wdot[57] -= qdot;
  }

  {
    // reaction 505:  h + nc4h9cho => h2 + nc4h9co
    const amrex::Real k_f = 40000000 * exp(-(2113.50999637982) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[56]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[56] -= qdot;
    wdot[57] += qdot;
  }

  {
    // reaction 506:  h2 + nc4h9co => h + nc4h9cho
    const amrex::Real k_f = 18000000 * exp(-(12077.1999793133) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[57]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[56] += qdot;
    wdot[57] -= qdot;
  }

  {
    // reaction 507:  nc4h9cho + o => nc4h9co + oh
    const amrex::Real k_f = 5000000 * exp(-(900.757831790448) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[56]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[56] -= qdot;
    wdot[57] += qdot;
  }

  {
    // reaction 508:  nc4h9co + oh => nc4h9cho + o
    const amrex::Real k_f = 1000000 * exp(-(9561.11665028967) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[57]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[56] += qdot;
    wdot[57] -= qdot;
  }

  {
    // reaction 509:  ho2 + nc4h9cho => h2o2 + nc4h9co
    const amrex::Real k_f = 2800000 * exp(-(6843.74665494419) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[56]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[12] += qdot;
    wdot[56] -= qdot;
    wdot[57] += qdot;
  }

  {
    // reaction 510:  h2o2 + nc4h9co => ho2 + nc4h9cho
    const amrex::Real k_f = 1000000 * exp(-(5032.1666580472) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc[57]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[12] -= qdot;
    wdot[56] += qdot;
    wdot[57] -= qdot;
  }

  {
    // reaction 511:  ch3 + nc4h9cho => ch4 + nc4h9co
    const amrex::Real k_f = 1700000 * exp(-(4247.14865939183) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[56]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[56] -= qdot;
    wdot[57] += qdot;
  }

  {
    // reaction 512:  ch4 + nc4h9co => ch3 + nc4h9cho
    const amrex::Real k_f = 15000000 * exp(-(14090.0666425322) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[57]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[10] -= qdot;
    wdot[56] += qdot;
    wdot[57] -= qdot;
  }

  {
    // reaction 513:  ch3o2 + nc4h9cho => ch3o2h + nc4h9co
    const amrex::Real k_f = 1000000 * exp(-(4780.55832514484) * invT);
    const amrex::Real qf = k_f * (sc[38] * sc[56]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[38] -= qdot;
    wdot[39] += qdot;
    wdot[56] -= qdot;
    wdot[57] += qdot;
  }

  {
    // reaction 514:  ch3o2h + nc4h9co => ch3o2 + nc4h9cho
    const amrex::Real k_f = 25000 * exp(-(5032.1666580472) * invT);
    const amrex::Real qf = k_f * (sc[39] * sc[57]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[38] += qdot;
    wdot[39] -= qdot;
    wdot[56] += qdot;
    wdot[57] -= qdot;
  }

  {
    // reaction 515:  nc4h9co => co + pc4h9
    const amrex::Real k_f = 100000000000 * exp(-(4830.87999172531) * invT);
    const amrex::Real qf = k_f * (sc[57]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[31] += qdot;
    wdot[57] -= qdot;
  }

  {
    // reaction 516:  co + pc4h9 => nc4h9co
    const amrex::Real k_f = 100000;
    const amrex::Real qf = k_f * (sc[6] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[31] -= qdot;
    wdot[57] += qdot;
  }

  {
    // reaction 517:  ch2(s) + ch4 => 2 ch3
    const amrex::Real k_f = 40000000;
    const amrex::Real qf = k_f * (sc[10] * sc[50]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] += 2.000000 * qdot;
    wdot[10] -= qdot;
    wdot[50] -= qdot;
  }

  {
    // reaction 518:  2 ch3 => ch2(s) + ch4
    const amrex::Real k_f =
      5429000000 * exp((-0.89) * logT - (7875.34081984386) * invT);
    const amrex::Real qf = k_f * ((sc[9] * sc[9]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] -= 2.000000 * qdot;
    wdot[10] += qdot;
    wdot[50] += qdot;
  }

  {
    // reaction 519:  c2h6 + ch2(s) => c2h5 + ch3
    const amrex::Real k_f = 120000000;
    const amrex::Real qf = k_f * (sc[15] * sc[50]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[15] -= qdot;
    wdot[17] += qdot;
    wdot[50] -= qdot;
  }

  {
    // reaction 520:  c2h5 + ch3 => c2h6 + ch2(s)
    const amrex::Real k_f =
      104100000 * exp((-0.33) * logT - (9973.75431624954) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[15] += qdot;
    wdot[17] -= qdot;
    wdot[50] += qdot;
  }

  {
    // reaction 521:  ch2(s) + o2 => co + h + oh
    const amrex::Real k_f = 70000000;
    const amrex::Real qf = k_f * (sc[3] * sc[50]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[6] += qdot;
    wdot[50] -= qdot;
  }

  {
    // reaction 522:  ch2(s) + h2 => ch3 + h
    const amrex::Real k_f = 70000000;
    const amrex::Real qf = k_f * (sc[1] * sc[50]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[9] += qdot;
    wdot[50] -= qdot;
  }

  {
    // reaction 523:  ch3 + h => ch2(s) + h2
    const amrex::Real k_f =
      248200000000 * exp((-0.89) * logT - (8116.88481943013) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[9]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[9] -= qdot;
    wdot[50] += qdot;
  }

  {
    // reaction 524:  ch2(s) + o => co + 2 h
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[2] * sc[50]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += 2.000000 * qdot;
    wdot[2] -= qdot;
    wdot[6] += qdot;
    wdot[50] -= qdot;
  }

  {
    // reaction 525:  ch2(s) + oh => ch2o + h
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[4] * sc[50]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[4] -= qdot;
    wdot[13] += qdot;
    wdot[50] -= qdot;
  }

  {
    // reaction 526:  ch2o + h => ch2(s) + oh
    const amrex::Real k_f =
      3194000000000 * exp((-0.89) * logT - (44212.6162576027) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[4] += qdot;
    wdot[13] -= qdot;
    wdot[50] += qdot;
  }

  {
    // reaction 527:  ch2(s) + co2 => ch2o + co
    const amrex::Real k_f = 3000000;
    const amrex::Real qf = k_f * (sc[8] * sc[50]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[8] -= qdot;
    wdot[13] += qdot;
    wdot[50] -= qdot;
  }

  {
    // reaction 528:  ch2o + co => ch2(s) + co2
    const amrex::Real k_f =
      2852000000 * exp((-0.89) * logT - (32970.7559435252) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[8] += qdot;
    wdot[13] -= qdot;
    wdot[50] += qdot;
  }

  {
    // reaction 529:  ch2(s) + ch3 => c2h4 + h
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[9] * sc[50]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[9] -= qdot;
    wdot[16] += qdot;
    wdot[50] -= qdot;
  }

  {
    // reaction 530:  c2h4 + h => ch2(s) + ch3
    const amrex::Real k_f =
      2671000000 * exp((-0.06) * logT - (34641.4352739969) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[9] += qdot;
    wdot[16] -= qdot;
    wdot[50] += qdot;
  }

  {
    // reaction 531:  ch2(s) + ch2co => c2h4 + co
    const amrex::Real k_f = 160000000;
    const amrex::Real qf = k_f * (sc[20] * sc[50]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[16] += qdot;
    wdot[20] -= qdot;
    wdot[50] -= qdot;
  }

  {
    // reaction 532:  c2h4 + co => ch2(s) + ch2co
    const amrex::Real k_f =
      4596000000 * exp((-0.06) * logT - (53139.6799089784) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[16] -= qdot;
    wdot[20] += qdot;
    wdot[50] += qdot;
  }

  {
    // reaction 533:  nc7h16 => c7h15-1 + h
    const amrex::Real k_f =
      1.34e+88 * exp((-21.17) * logT - (71859.339876914) * invT);
    const amrex::Real qf = k_f * (sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[58] -= qdot;
    wdot[59] += qdot;
  }

  {
    // reaction 534:  c7h15-1 + h => nc7h16
    const amrex::Real k_f =
      3.374e+76 * exp((-20.22) * logT - (19932.4121325249) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[59]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[58] += qdot;
    wdot[59] -= qdot;
  }

  {
    // reaction 535:  nc7h16 => c7h15-2 + h
    const amrex::Real k_f =
      6.5e+87 * exp((-21.01) * logT - (70198.7248797584) * invT);
    const amrex::Real qf = k_f * (sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[58] -= qdot;
    wdot[60] += qdot;
  }

  {
    // reaction 536:  c7h15-2 + h => nc7h16
    const amrex::Real k_f =
      5.207e+74 * exp((-19.67) * logT - (19570.0961331455) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[60]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[58] += qdot;
    wdot[60] -= qdot;
  }

  {
    // reaction 537:  nc7h16 => c7h15-3 + h
    const amrex::Real k_f =
      6.5e+87 * exp((-21.01) * logT - (70198.7248797584) * invT);
    const amrex::Real qf = k_f * (sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[58] -= qdot;
    wdot[61] += qdot;
  }

  {
    // reaction 538:  c7h15-3 + h => nc7h16
    const amrex::Real k_f =
      5.207e+74 * exp((-19.67) * logT - (19570.0961331455) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[61]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[58] += qdot;
    wdot[61] -= qdot;
  }

  {
    // reaction 539:  nc7h16 => c7h15-4 + h
    const amrex::Real k_f =
      3.25e+87 * exp((-21.01) * logT - (70198.7248797584) * invT);
    const amrex::Real qf = k_f * (sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[58] -= qdot;
    wdot[62] += qdot;
  }

  {
    // reaction 540:  c7h15-4 + h => nc7h16
    const amrex::Real k_f =
      5.187e+74 * exp((-19.67) * logT - (19570.0961331455) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[62]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[58] += qdot;
    wdot[62] -= qdot;
  }

  {
    // reaction 541:  nc7h16 => nc3h7 + pc4h9
    const amrex::Real k_f =
      1.415e+78 * exp((-17.71) * logT - (60738.2515626297) * invT);
    const amrex::Real qf = k_f * (sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[28] += qdot;
    wdot[31] += qdot;
    wdot[58] -= qdot;
  }

  {
    // reaction 542:  nc3h7 + pc4h9 => nc7h16
    const amrex::Real k_f =
      1.363e+62 * exp((-16.11) * logT - (16334.4129720212) * invT);
    const amrex::Real qf = k_f * (sc[28] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[28] -= qdot;
    wdot[31] -= qdot;
    wdot[58] += qdot;
  }

  {
    // reaction 543:  h + nc7h16 => c7h15-1 + h2
    const amrex::Real k_f =
      0.188 * exp((2.75) * logT - (3160.20066125364) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[58] -= qdot;
    wdot[59] += qdot;
  }

  {
    // reaction 544:  c7h15-1 + h2 => h + nc7h16
    const amrex::Real k_f =
      0.008926 * exp((2.7) * logT - (5308.93582423979) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[59]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[58] += qdot;
    wdot[59] -= qdot;
  }

  {
    // reaction 545:  h + nc7h16 => c7h15-2 + h2
    const amrex::Real k_f = 2.6 * exp((2.4) * logT - (2249.8817128129) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[58] -= qdot;
    wdot[60] += qdot;
  }

  {
    // reaction 546:  c7h15-2 + h2 => h + nc7h16
    const amrex::Real k_f =
      0.003928 * exp((2.74) * logT - (5666.21965696114) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[60]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[58] += qdot;
    wdot[60] -= qdot;
  }

  {
    // reaction 547:  h + nc7h16 => c7h15-3 + h2
    const amrex::Real k_f = 2.6 * exp((2.4) * logT - (2249.8817128129) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[58] -= qdot;
    wdot[61] += qdot;
  }

  {
    // reaction 548:  c7h15-3 + h2 => h + nc7h16
    const amrex::Real k_f =
      0.003928 * exp((2.74) * logT - (5666.21965696114) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[61]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[58] += qdot;
    wdot[61] -= qdot;
  }

  {
    // reaction 549:  h + nc7h16 => c7h15-4 + h2
    const amrex::Real k_f = 1.3 * exp((2.4) * logT - (2249.8817128129) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[58] -= qdot;
    wdot[62] += qdot;
  }

  {
    // reaction 550:  c7h15-4 + h2 => h + nc7h16
    const amrex::Real k_f =
      0.003913 * exp((2.74) * logT - (5666.21965696114) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[62]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[58] += qdot;
    wdot[62] -= qdot;
  }

  {
    // reaction 551:  nc7h16 + o => c7h15-1 + oh
    const amrex::Real k_f =
      0.193 * exp((2.68) * logT - (1869.95313013034) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[58] -= qdot;
    wdot[59] += qdot;
  }

  {
    // reaction 552:  c7h15-1 + oh => nc7h16 + o
    const amrex::Real k_f =
      0.004025 * exp((2.63) * logT - (2965.45581158721) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[59]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[58] += qdot;
    wdot[59] -= qdot;
  }

  {
    // reaction 553:  nc7h16 + o => c7h15-2 + oh
    const amrex::Real k_f =
      0.0954 * exp((2.71) * logT - (1059.77429818474) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[58] -= qdot;
    wdot[60] += qdot;
  }

  {
    // reaction 554:  c7h15-2 + oh => nc7h16 + o
    const amrex::Real k_f =
      6.33e-05 * exp((3.05) * logT - (3420.86689414048) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[60]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[58] += qdot;
    wdot[60] -= qdot;
  }

  {
    // reaction 555:  nc7h16 + o => c7h15-3 + oh
    const amrex::Real k_f =
      0.0954 * exp((2.71) * logT - (1059.77429818474) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[58] -= qdot;
    wdot[61] += qdot;
  }

  {
    // reaction 556:  c7h15-3 + oh => nc7h16 + o
    const amrex::Real k_f =
      6.33e-05 * exp((3.05) * logT - (3420.86689414048) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[61]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[58] += qdot;
    wdot[61] -= qdot;
  }

  {
    // reaction 557:  nc7h16 + o => c7h15-4 + oh
    const amrex::Real k_f =
      0.0477 * exp((2.71) * logT - (1059.77429818474) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[58] -= qdot;
    wdot[62] += qdot;
  }

  {
    // reaction 558:  c7h15-4 + oh => nc7h16 + o
    const amrex::Real k_f =
      6.306e-05 * exp((3.05) * logT - (3420.86689414048) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[62]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[58] += qdot;
    wdot[62] -= qdot;
  }

  {
    // reaction 559:  nc7h16 + oh => c7h15-1 + h2o
    const amrex::Real k_f =
      10500 * exp((0.97) * logT - (800.114498629504) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[58] -= qdot;
    wdot[59] += qdot;
  }

  {
    // reaction 560:  c7h15-1 + h2o => nc7h16 + oh
    const amrex::Real k_f =
      15000 * exp((1.05) * logT - (11740.0448132241) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[59]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[58] += qdot;
    wdot[59] -= qdot;
  }

  {
    // reaction 561:  nc7h16 + oh => c7h15-2 + h2o
    const amrex::Real k_f =
      94 * exp((1.61) * logT - (-17.6125833031652) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[58] -= qdot;
    wdot[60] += qdot;
  }

  {
    // reaction 562:  c7h15-2 + h2o => nc7h16 + oh
    const amrex::Real k_f =
      0.6148 * exp((1.95) * logT - (11025.4771477814) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[60]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[58] += qdot;
    wdot[60] -= qdot;
  }

  {
    // reaction 563:  nc7h16 + oh => c7h15-3 + h2o
    const amrex::Real k_f =
      94 * exp((1.61) * logT - (-17.6125833031652) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[58] -= qdot;
    wdot[61] += qdot;
  }

  {
    // reaction 564:  c7h15-3 + h2o => nc7h16 + oh
    const amrex::Real k_f =
      0.6148 * exp((1.95) * logT - (11025.4771477814) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[61]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[58] += qdot;
    wdot[61] -= qdot;
  }

  {
    // reaction 565:  nc7h16 + oh => c7h15-4 + h2o
    const amrex::Real k_f =
      47 * exp((1.61) * logT - (-17.6125833031652) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[58] -= qdot;
    wdot[62] += qdot;
  }

  {
    // reaction 566:  c7h15-4 + h2o => nc7h16 + oh
    const amrex::Real k_f =
      0.6125 * exp((1.95) * logT - (11025.4771477814) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[62]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[58] += qdot;
    wdot[62] -= qdot;
  }

  {
    // reaction 567:  ho2 + nc7h16 => c7h15-1 + h2o2
    const amrex::Real k_f = 16800000 * exp(-(10285.7486490485) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[12] += qdot;
    wdot[58] -= qdot;
    wdot[59] += qdot;
  }

  {
    // reaction 568:  c7h15-1 + h2o2 => ho2 + nc7h16
    const amrex::Real k_f =
      20500000 * exp((-0.38) * logT - (4226.51677609384) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc[59]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[12] -= qdot;
    wdot[58] += qdot;
    wdot[59] -= qdot;
  }

  {
    // reaction 569:  ho2 + nc7h16 => c7h15-2 + h2o2
    const amrex::Real k_f = 11200000 * exp(-(8901.90281808549) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[12] += qdot;
    wdot[58] -= qdot;
    wdot[60] += qdot;
  }

  {
    // reaction 570:  c7h15-2 + h2o2 => ho2 + nc7h16
    const amrex::Real k_f =
      434800 * exp((0.01) * logT - (4108.76407629554) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc[60]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[12] -= qdot;
    wdot[58] += qdot;
    wdot[60] -= qdot;
  }

  {
    // reaction 571:  ho2 + nc7h16 => c7h15-3 + h2o2
    const amrex::Real k_f = 11200000 * exp(-(8901.90281808549) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[12] += qdot;
    wdot[58] -= qdot;
    wdot[61] += qdot;
  }

  {
    // reaction 572:  c7h15-3 + h2o2 => ho2 + nc7h16
    const amrex::Real k_f =
      434800 * exp((0.01) * logT - (4108.76407629554) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc[61]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[12] -= qdot;
    wdot[58] += qdot;
    wdot[61] -= qdot;
  }

  {
    // reaction 573:  ho2 + nc7h16 => c7h15-4 + h2o2
    const amrex::Real k_f = 5600000 * exp(-(8901.90281808549) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[12] += qdot;
    wdot[58] -= qdot;
    wdot[62] += qdot;
  }

  {
    // reaction 574:  c7h15-4 + h2o2 => ho2 + nc7h16
    const amrex::Real k_f =
      433200 * exp((0.01) * logT - (4108.76407629554) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc[62]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[12] -= qdot;
    wdot[58] += qdot;
    wdot[62] -= qdot;
  }

  {
    // reaction 575:  ch3 + nc7h16 => c7h15-1 + ch4
    const amrex::Real k_f =
      9.04e-07 * exp((3.65) * logT - (3600.01202716696) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[58] -= qdot;
    wdot[59] += qdot;
  }

  {
    // reaction 576:  c7h15-1 + ch4 => ch3 + nc7h16
    const amrex::Real k_f =
      1.121e-06 * exp((3.6) * logT - (5993.31048973421) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[59]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[10] -= qdot;
    wdot[58] += qdot;
    wdot[59] -= qdot;
  }

  {
    // reaction 577:  ch3 + nc7h16 => c7h15-2 + ch4
    const amrex::Real k_f =
      0.0541 * exp((2.26) * logT - (3666.93984371899) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[58] -= qdot;
    wdot[60] += qdot;
  }

  {
    // reaction 578:  c7h15-2 + ch4 => ch3 + nc7h16
    const amrex::Real k_f =
      0.002135 * exp((2.6) * logT - (7321.80248745867) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[60]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[10] -= qdot;
    wdot[58] += qdot;
    wdot[60] -= qdot;
  }

  {
    // reaction 579:  ch3 + nc7h16 => c7h15-3 + ch4
    const amrex::Real k_f =
      0.0541 * exp((2.26) * logT - (3666.93984371899) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[58] -= qdot;
    wdot[61] += qdot;
  }

  {
    // reaction 580:  c7h15-3 + ch4 => ch3 + nc7h16
    const amrex::Real k_f =
      0.002135 * exp((2.6) * logT - (7321.80248745867) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[61]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[10] -= qdot;
    wdot[58] += qdot;
    wdot[61] -= qdot;
  }

  {
    // reaction 581:  ch3 + nc7h16 => c7h15-4 + ch4
    const amrex::Real k_f =
      0.02705 * exp((2.26) * logT - (3666.93984371899) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[58] -= qdot;
    wdot[62] += qdot;
  }

  {
    // reaction 582:  c7h15-4 + ch4 => ch3 + nc7h16
    const amrex::Real k_f =
      0.002127 * exp((2.6) * logT - (7321.80248745867) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[62]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[10] -= qdot;
    wdot[58] += qdot;
    wdot[62] -= qdot;
  }

  {
    // reaction 583:  nc7h16 + o2 => c7h15-1 + ho2
    const amrex::Real k_f = 60000000 * exp(-(26569.8399544892) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
    wdot[58] -= qdot;
    wdot[59] += qdot;
  }

  {
    // reaction 584:  c7h15-1 + ho2 => nc7h16 + o2
    const amrex::Real k_f =
      51750 * exp((0.28) * logT - (-204.305966316716) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[59]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[11] -= qdot;
    wdot[58] += qdot;
    wdot[59] -= qdot;
  }

  {
    // reaction 585:  nc7h16 + o2 => c7h15-2 + ho2
    const amrex::Real k_f = 40000000 * exp(-(25236.3157901067) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
    wdot[58] -= qdot;
    wdot[60] += qdot;
  }

  {
    // reaction 586:  c7h15-2 + ho2 => nc7h16 + o2
    const amrex::Real k_f =
      1098 * exp((0.67) * logT - (-272.240216200353) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[60]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[11] -= qdot;
    wdot[58] += qdot;
    wdot[60] -= qdot;
  }

  {
    // reaction 587:  nc7h16 + o2 => c7h15-3 + ho2
    const amrex::Real k_f = 40000000 * exp(-(25236.3157901067) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
    wdot[58] -= qdot;
    wdot[61] += qdot;
  }

  {
    // reaction 588:  c7h15-3 + ho2 => nc7h16 + o2
    const amrex::Real k_f =
      1098 * exp((0.67) * logT - (-272.240216200353) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[61]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[11] -= qdot;
    wdot[58] += qdot;
    wdot[61] -= qdot;
  }

  {
    // reaction 589:  nc7h16 + o2 => c7h15-4 + ho2
    const amrex::Real k_f = 20000000 * exp(-(25236.3157901067) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
    wdot[58] -= qdot;
    wdot[62] += qdot;
  }

  {
    // reaction 590:  c7h15-4 + ho2 => nc7h16 + o2
    const amrex::Real k_f =
      1094 * exp((0.67) * logT - (-272.240216200353) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[62]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[11] -= qdot;
    wdot[58] += qdot;
    wdot[62] -= qdot;
  }

  {
    // reaction 591:  c2h5 + nc7h16 => c2h6 + c7h15-1
    const amrex::Real k_f = 100000 * exp(-(6743.10332178324) * invT);
    const amrex::Real qf = k_f * (sc[17] * sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] += qdot;
    wdot[17] -= qdot;
    wdot[58] -= qdot;
    wdot[59] += qdot;
  }

  {
    // reaction 592:  c2h6 + c7h15-1 => c2h5 + nc7h16
    const amrex::Real k_f = 320000 * exp(-(6189.56498939805) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[59]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
    wdot[17] += qdot;
    wdot[58] += qdot;
    wdot[59] -= qdot;
  }

  {
    // reaction 593:  c2h5 + nc7h16 => c2h6 + c7h15-2
    const amrex::Real k_f = 100000 * exp(-(5233.45332436908) * invT);
    const amrex::Real qf = k_f * (sc[17] * sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] += qdot;
    wdot[17] -= qdot;
    wdot[58] -= qdot;
    wdot[60] += qdot;
  }

  {
    // reaction 594:  c2h6 + c7h15-2 => c2h5 + nc7h16
    const amrex::Real k_f = 100000 * exp(-(6491.49498888088) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[60]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
    wdot[17] += qdot;
    wdot[58] += qdot;
    wdot[60] -= qdot;
  }

  {
    // reaction 595:  c2h5 + nc7h16 => c2h6 + c7h15-3
    const amrex::Real k_f = 100000 * exp(-(5233.45332436908) * invT);
    const amrex::Real qf = k_f * (sc[17] * sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] += qdot;
    wdot[17] -= qdot;
    wdot[58] -= qdot;
    wdot[61] += qdot;
  }

  {
    // reaction 596:  c2h6 + c7h15-3 => c2h5 + nc7h16
    const amrex::Real k_f = 100000 * exp(-(6491.49498888088) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[61]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
    wdot[17] += qdot;
    wdot[58] += qdot;
    wdot[61] -= qdot;
  }

  {
    // reaction 597:  c2h5 + nc7h16 => c2h6 + c7h15-4
    const amrex::Real k_f = 50000 * exp(-(5233.45332436908) * invT);
    const amrex::Real qf = k_f * (sc[17] * sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] += qdot;
    wdot[17] -= qdot;
    wdot[58] -= qdot;
    wdot[62] += qdot;
  }

  {
    // reaction 598:  c2h6 + c7h15-4 => c2h5 + nc7h16
    const amrex::Real k_f = 100000 * exp(-(6491.49498888088) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[62]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
    wdot[17] += qdot;
    wdot[58] += qdot;
    wdot[62] -= qdot;
  }

  {
    // reaction 599:  c2h3 + nc7h16 => c2h4 + c7h15-1
    const amrex::Real k_f = 1000000 * exp(-(9057.89998448495) * invT);
    const amrex::Real qf = k_f * (sc[19] * sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[16] += qdot;
    wdot[19] -= qdot;
    wdot[58] -= qdot;
    wdot[59] += qdot;
  }

  {
    // reaction 600:  c2h4 + c7h15-1 => c2h3 + nc7h16
    const amrex::Real k_f = 2570000 * exp(-(12781.7033114399) * invT);
    const amrex::Real qf = k_f * (sc[16] * sc[59]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[16] -= qdot;
    wdot[19] += qdot;
    wdot[58] += qdot;
    wdot[59] -= qdot;
  }

  {
    // reaction 601:  c2h3 + nc7h16 => c2h4 + c7h15-2
    const amrex::Real k_f = 800000 * exp(-(8454.03998551929) * invT);
    const amrex::Real qf = k_f * (sc[19] * sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[16] += qdot;
    wdot[19] -= qdot;
    wdot[58] -= qdot;
    wdot[60] += qdot;
  }

  {
    // reaction 602:  c2h4 + c7h15-2 => c2h3 + nc7h16
    const amrex::Real k_f = 2000000 * exp(-(12177.8433124742) * invT);
    const amrex::Real qf = k_f * (sc[16] * sc[60]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[16] -= qdot;
    wdot[19] += qdot;
    wdot[58] += qdot;
    wdot[60] -= qdot;
  }

  {
    // reaction 603:  c2h3 + nc7h16 => c2h4 + c7h15-3
    const amrex::Real k_f = 800000 * exp(-(8454.03998551929) * invT);
    const amrex::Real qf = k_f * (sc[19] * sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[16] += qdot;
    wdot[19] -= qdot;
    wdot[58] -= qdot;
    wdot[61] += qdot;
  }

  {
    // reaction 604:  c2h4 + c7h15-3 => c2h3 + nc7h16
    const amrex::Real k_f = 2000000 * exp(-(12177.8433124742) * invT);
    const amrex::Real qf = k_f * (sc[16] * sc[61]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[16] -= qdot;
    wdot[19] += qdot;
    wdot[58] += qdot;
    wdot[61] -= qdot;
  }

  {
    // reaction 605:  c2h3 + nc7h16 => c2h4 + c7h15-4
    const amrex::Real k_f = 400000 * exp(-(8454.03998551929) * invT);
    const amrex::Real qf = k_f * (sc[19] * sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[16] += qdot;
    wdot[19] -= qdot;
    wdot[58] -= qdot;
    wdot[62] += qdot;
  }

  {
    // reaction 606:  c2h4 + c7h15-4 => c2h3 + nc7h16
    const amrex::Real k_f = 2000000 * exp(-(12177.8433124742) * invT);
    const amrex::Real qf = k_f * (sc[16] * sc[62]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[16] -= qdot;
    wdot[19] += qdot;
    wdot[58] += qdot;
    wdot[62] -= qdot;
  }

  {
    // reaction 607:  ch3o2 + nc7h16 => c7h15-1 + ch3o2h
    const amrex::Real k_f = 12100000 * exp(-(10280.7164823904) * invT);
    const amrex::Real qf = k_f * (sc[38] * sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[38] -= qdot;
    wdot[39] += qdot;
    wdot[58] -= qdot;
    wdot[59] += qdot;
  }

  {
    // reaction 608:  c7h15-1 + ch3o2h => ch3o2 + nc7h16
    const amrex::Real k_f = 3600000 * exp(-(4931.52332488625) * invT);
    const amrex::Real qf = k_f * (sc[39] * sc[59]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[38] += qdot;
    wdot[39] -= qdot;
    wdot[58] += qdot;
    wdot[59] -= qdot;
  }

  {
    // reaction 609:  ch3o2 + nc7h16 => c7h15-2 + ch3o2h
    const amrex::Real k_f = 8064000 * exp(-(8906.93498474354) * invT);
    const amrex::Real qf = k_f * (sc[38] * sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[38] -= qdot;
    wdot[39] += qdot;
    wdot[58] -= qdot;
    wdot[60] += qdot;
  }

  {
    // reaction 610:  c7h15-2 + ch3o2h => ch3o2 + nc7h16
    const amrex::Real k_f = 237600 * exp(-(1861.90166347746) * invT);
    const amrex::Real qf = k_f * (sc[39] * sc[60]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[38] += qdot;
    wdot[39] -= qdot;
    wdot[58] += qdot;
    wdot[60] -= qdot;
  }

  {
    // reaction 611:  ch3o2 + nc7h16 => c7h15-3 + ch3o2h
    const amrex::Real k_f = 8064000 * exp(-(8906.93498474354) * invT);
    const amrex::Real qf = k_f * (sc[38] * sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[38] -= qdot;
    wdot[39] += qdot;
    wdot[58] -= qdot;
    wdot[61] += qdot;
  }

  {
    // reaction 612:  c7h15-3 + ch3o2h => ch3o2 + nc7h16
    const amrex::Real k_f = 237600 * exp(-(1861.90166347746) * invT);
    const amrex::Real qf = k_f * (sc[39] * sc[61]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[38] += qdot;
    wdot[39] -= qdot;
    wdot[58] += qdot;
    wdot[61] -= qdot;
  }

  {
    // reaction 613:  ch3o2 + nc7h16 => c7h15-4 + ch3o2h
    const amrex::Real k_f = 4032000 * exp(-(8906.93498474354) * invT);
    const amrex::Real qf = k_f * (sc[38] * sc[58]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[38] -= qdot;
    wdot[39] += qdot;
    wdot[58] -= qdot;
    wdot[62] += qdot;
  }

  {
    // reaction 614:  c7h15-4 + ch3o2h => ch3o2 + nc7h16
    const amrex::Real k_f = 237600 * exp(-(1861.90166347746) * invT);
    const amrex::Real qf = k_f * (sc[39] * sc[62]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[38] += qdot;
    wdot[39] -= qdot;
    wdot[58] += qdot;
    wdot[62] -= qdot;
  }

  {
    // reaction 615:  c7h15-1 + nc7h16 => c7h15-2 + nc7h16
    const amrex::Real k_f = 100000 * exp(-(5233.45332436908) * invT);
    const amrex::Real qf = k_f * (sc[58] * sc[59]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[58] -= qdot;
    wdot[58] += qdot;
    wdot[59] -= qdot;
    wdot[60] += qdot;
  }

  {
    // reaction 616:  c7h15-2 + nc7h16 => c7h15-1 + nc7h16
    const amrex::Real k_f = 150000 * exp(-(6189.56498939805) * invT);
    const amrex::Real qf = k_f * (sc[58] * sc[60]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[58] -= qdot;
    wdot[58] += qdot;
    wdot[59] += qdot;
    wdot[60] -= qdot;
  }

  {
    // reaction 617:  c7h15-1 + nc7h16 => c7h15-3 + nc7h16
    const amrex::Real k_f = 100000 * exp(-(5233.45332436908) * invT);
    const amrex::Real qf = k_f * (sc[58] * sc[59]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[58] -= qdot;
    wdot[58] += qdot;
    wdot[59] -= qdot;
    wdot[61] += qdot;
  }

  {
    // reaction 618:  c7h15-3 + nc7h16 => c7h15-1 + nc7h16
    const amrex::Real k_f = 150000 * exp(-(6189.56498939805) * invT);
    const amrex::Real qf = k_f * (sc[58] * sc[61]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[58] -= qdot;
    wdot[58] += qdot;
    wdot[59] += qdot;
    wdot[61] -= qdot;
  }

  {
    // reaction 619:  c7h15-1 + nc7h16 => c7h15-4 + nc7h16
    const amrex::Real k_f = 50000 * exp(-(5233.45332436908) * invT);
    const amrex::Real qf = k_f * (sc[58] * sc[59]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[58] -= qdot;
    wdot[58] += qdot;
    wdot[59] -= qdot;
    wdot[62] += qdot;
  }

  {
    // reaction 620:  c7h15-4 + nc7h16 => c7h15-1 + nc7h16
    const amrex::Real k_f = 150000 * exp(-(6189.56498939805) * invT);
    const amrex::Real qf = k_f * (sc[58] * sc[62]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[58] -= qdot;
    wdot[58] += qdot;
    wdot[59] += qdot;
    wdot[62] -= qdot;
  }

  {
    // reaction 621:  c7h15-2 + nc7h16 => c7h15-3 + nc7h16
    const amrex::Real k_f = 100000 * exp(-(5233.45332436908) * invT);
    const amrex::Real qf = k_f * (sc[58] * sc[60]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[58] -= qdot;
    wdot[58] += qdot;
    wdot[60] -= qdot;
    wdot[61] += qdot;
  }

  {
    // reaction 622:  c7h15-3 + nc7h16 => c7h15-2 + nc7h16
    const amrex::Real k_f = 100000 * exp(-(5233.45332436908) * invT);
    const amrex::Real qf = k_f * (sc[58] * sc[61]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[58] -= qdot;
    wdot[58] += qdot;
    wdot[60] += qdot;
    wdot[61] -= qdot;
  }

  {
    // reaction 623:  c7h15-2 + nc7h16 => c7h15-4 + nc7h16
    const amrex::Real k_f = 50000 * exp(-(5233.45332436908) * invT);
    const amrex::Real qf = k_f * (sc[58] * sc[60]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[58] -= qdot;
    wdot[58] += qdot;
    wdot[60] -= qdot;
    wdot[62] += qdot;
  }

  {
    // reaction 624:  c7h15-4 + nc7h16 => c7h15-2 + nc7h16
    const amrex::Real k_f = 100000 * exp(-(5233.45332436908) * invT);
    const amrex::Real qf = k_f * (sc[58] * sc[62]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[58] -= qdot;
    wdot[58] += qdot;
    wdot[60] += qdot;
    wdot[62] -= qdot;
  }

  {
    // reaction 625:  c7h15-3 + nc7h16 => c7h15-4 + nc7h16
    const amrex::Real k_f = 50000 * exp(-(5233.45332436908) * invT);
    const amrex::Real qf = k_f * (sc[58] * sc[61]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[58] -= qdot;
    wdot[58] += qdot;
    wdot[61] -= qdot;
    wdot[62] += qdot;
  }

  {
    // reaction 626:  c7h15-4 + nc7h16 => c7h15-3 + nc7h16
    const amrex::Real k_f = 100000 * exp(-(5233.45332436908) * invT);
    const amrex::Real qf = k_f * (sc[58] * sc[62]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[58] -= qdot;
    wdot[58] += qdot;
    wdot[61] += qdot;
    wdot[62] -= qdot;
  }

  {
    // reaction 627:  c7h15-2 => c3h6 + pc4h9
    const amrex::Real k_f =
      2.218e+16 * exp((-0.89) * logT - (15161.9181406962) * invT);
    const amrex::Real qf = k_f * (sc[60]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[26] += qdot;
    wdot[31] += qdot;
    wdot[60] -= qdot;
  }

  {
    // reaction 628:  c3h6 + pc4h9 => c7h15-2
    const amrex::Real k_f = 100000 * exp(-(4126.3766595987) * invT);
    const amrex::Real qf = k_f * (sc[26] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[26] -= qdot;
    wdot[31] -= qdot;
    wdot[60] += qdot;
  }

  {
    // reaction 629:  c7h15-2 => c7h14-2 + h
    const amrex::Real k_f =
      2.71e+15 * exp((-0.72) * logT - (18915.9144675994) * invT);
    const amrex::Real qf = k_f * (sc[60]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[60] -= qdot;
    wdot[63] += qdot;
  }

  {
    // reaction 630:  c7h14-2 + h => c7h15-2
    const amrex::Real k_f = 10000000 * exp(-(1459.32833083369) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[63]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[60] += qdot;
    wdot[63] -= qdot;
  }

  {
    // reaction 631:  c7h15-3 => c4h8-1 + nc3h7
    const amrex::Real k_f =
      9.633e+17 * exp((-1.42) * logT - (15388.3656403083) * invT);
    const amrex::Real qf = k_f * (sc[61]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[28] += qdot;
    wdot[30] += qdot;
    wdot[61] -= qdot;
  }

  {
    // reaction 632:  c4h8-1 + nc3h7 => c7h15-3
    const amrex::Real k_f = 100000 * exp(-(3874.76832669634) * invT);
    const amrex::Real qf = k_f * (sc[28] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[28] -= qdot;
    wdot[30] -= qdot;
    wdot[61] += qdot;
  }

  {
    // reaction 633:  c7h15-3 => c7h14-2 + h
    const amrex::Real k_f =
      2.71e+15 * exp((-0.72) * logT - (18915.9144675994) * invT);
    const amrex::Real qf = k_f * (sc[61]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[61] -= qdot;
    wdot[63] += qdot;
  }

  {
    // reaction 634:  c7h14-2 + h => c7h15-3
    const amrex::Real k_f = 10000000 * exp(-(1459.32833083369) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[63]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[61] += qdot;
    wdot[63] -= qdot;
  }

  {
    // reaction 635:  c7h15-3 => c7h14-3 + h
    const amrex::Real k_f =
      2.018e+15 * exp((-0.66) * logT - (18961.2039675218) * invT);
    const amrex::Real qf = k_f * (sc[61]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[61] -= qdot;
    wdot[64] += qdot;
  }

  {
    // reaction 636:  c7h14-3 + h => c7h15-3
    const amrex::Real k_f = 10000000 * exp(-(1459.32833083369) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[64]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[61] += qdot;
    wdot[64] -= qdot;
  }

  {
    // reaction 637:  c7h15-4 => c2h5 + c5h10-1
    const amrex::Real k_f =
      5.426e+16 * exp((-0.89) * logT - (15393.3978069664) * invT);
    const amrex::Real qf = k_f * (sc[62]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[17] += qdot;
    wdot[36] += qdot;
    wdot[62] -= qdot;
  }

  {
    // reaction 638:  c2h5 + c5h10-1 => c7h15-4
    const amrex::Real k_f = 100000 * exp(-(4126.3766595987) * invT);
    const amrex::Real qf = k_f * (sc[17] * sc[36]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[17] -= qdot;
    wdot[36] -= qdot;
    wdot[62] += qdot;
  }

  {
    // reaction 639:  c7h15-4 => c7h14-3 + h
    const amrex::Real k_f =
      4.02e+15 * exp((-0.66) * logT - (18961.2039675218) * invT);
    const amrex::Real qf = k_f * (sc[62]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[62] -= qdot;
    wdot[64] += qdot;
  }

  {
    // reaction 640:  c7h14-3 + h => c7h15-4
    const amrex::Real k_f = 10000000 * exp(-(1459.32833083369) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[64]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[62] += qdot;
    wdot[64] -= qdot;
  }

  {
    // reaction 641:  c7h15-2 + o2 => c7h14-2 + ho2
    const amrex::Real k_f = 3e-15 * exp(-(1509.64999741416) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[60]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
    wdot[60] -= qdot;
    wdot[63] += qdot;
  }

  {
    // reaction 642:  c7h14-2 + ho2 => c7h15-2 + o2
    const amrex::Real k_f =
      3.793e-15 * exp((0.05) * logT - (9193.76848425223) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[63]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[11] -= qdot;
    wdot[60] += qdot;
    wdot[63] -= qdot;
  }

  {
    // reaction 643:  c7h15-3 + o2 => c7h14-2 + ho2
    const amrex::Real k_f = 3e-15 * exp(-(1509.64999741416) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[61]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
    wdot[61] -= qdot;
    wdot[63] += qdot;
  }

  {
    // reaction 644:  c7h14-2 + ho2 => c7h15-3 + o2
    const amrex::Real k_f =
      3.793e-15 * exp((0.05) * logT - (9193.76848425223) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[63]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[11] -= qdot;
    wdot[61] += qdot;
    wdot[63] -= qdot;
  }

  {
    // reaction 645:  c7h15-3 + o2 => c7h14-3 + ho2
    const amrex::Real k_f = 3e-15 * exp(-(1509.64999741416) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[61]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
    wdot[61] -= qdot;
    wdot[64] += qdot;
  }

  {
    // reaction 646:  c7h14-3 + ho2 => c7h15-3 + o2
    const amrex::Real k_f =
      5.094e-15 * exp((-0.01) * logT - (9148.4789843298) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[64]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[11] -= qdot;
    wdot[61] += qdot;
    wdot[64] -= qdot;
  }

  {
    // reaction 647:  c7h15-4 + o2 => c7h14-3 + ho2
    const amrex::Real k_f = 6e-15 * exp(-(1509.64999741416) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[62]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
    wdot[62] -= qdot;
    wdot[64] += qdot;
  }

  {
    // reaction 648:  c7h14-3 + ho2 => c7h15-4 + o2
    const amrex::Real k_f =
      5.113e-15 * exp((-0.01) * logT - (9148.4789843298) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[64]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[11] -= qdot;
    wdot[62] += qdot;
    wdot[64] -= qdot;
  }

  {
    // reaction 649:  c7h15-1 => c7h15-3
    const amrex::Real k_f =
      1386000000 * exp((0.98) * logT - (16988.5946375673) * invT);
    const amrex::Real qf = k_f * (sc[59]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[59] -= qdot;
    wdot[61] += qdot;
  }

  {
    // reaction 650:  c7h15-3 => c7h15-1
    const amrex::Real k_f =
      44100000 * exp((1.38) * logT - (18256.7006353952) * invT);
    const amrex::Real qf = k_f * (sc[61]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[59] += qdot;
    wdot[61] -= qdot;
  }

  {
    // reaction 651:  c7h15-1 => c7h15-4
    const amrex::Real k_f =
      2541000000 * exp((0.35) * logT - (9943.56131630126) * invT);
    const amrex::Real qf = k_f * (sc[59]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[59] -= qdot;
    wdot[62] += qdot;
  }

  {
    // reaction 652:  c7h15-4 => c7h15-1
    const amrex::Real k_f =
      161100000 * exp((0.74) * logT - (11211.6673141292) * invT);
    const amrex::Real qf = k_f * (sc[62]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[59] += qdot;
    wdot[62] -= qdot;
  }

  {
    // reaction 653:  c7h15-2 => c7h15-3
    const amrex::Real k_f =
      958700000 * exp((1.39) * logT - (19977.7016324474) * invT);
    const amrex::Real qf = k_f * (sc[60]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[60] -= qdot;
    wdot[61] += qdot;
  }

  {
    // reaction 654:  c7h15-3 => c7h15-2
    const amrex::Real k_f =
      958700000 * exp((1.39) * logT - (19977.7016324474) * invT);
    const amrex::Real qf = k_f * (sc[61]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[60] += qdot;
    wdot[61] -= qdot;
  }

  {
    // reaction 655:  c7h15-1 => c7h15-2
    const amrex::Real k_f =
      547800000 * exp((1.62) * logT - (19504.6779665909) * invT);
    const amrex::Real qf = k_f * (sc[59]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[59] -= qdot;
    wdot[60] += qdot;
  }

  {
    // reaction 656:  c7h15-2 => c7h15-1
    const amrex::Real k_f =
      17430000 * exp((2.01) * logT - (20772.7839644188) * invT);
    const amrex::Real qf = k_f * (sc[60]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[59] += qdot;
    wdot[60] -= qdot;
  }

  {
    // reaction 657:  c7h14-2 + oh => c2h5cho + pc4h9
    const amrex::Real k_f = 100000 * exp(-(-2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[63]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[31] += qdot;
    wdot[33] += qdot;
    wdot[63] -= qdot;
  }

  {
    // reaction 658:  c7h14-3 + oh => c2h5cho + pc4h9
    const amrex::Real k_f = 100000 * exp(-(-2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[64]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[31] += qdot;
    wdot[33] += qdot;
    wdot[64] -= qdot;
  }

  {
    // reaction 659:  c7h14-2 + o => c5h10-1 + ch3cho
    const amrex::Real k_f = 100000 * exp(-(-528.377499094956) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[63]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[24] += qdot;
    wdot[36] += qdot;
    wdot[63] -= qdot;
  }

  {
    // reaction 660:  c7h14-3 + o => c5h10-1 + ch3cho
    const amrex::Real k_f = 100000 * exp(-(-528.377499094956) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[64]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[24] += qdot;
    wdot[36] += qdot;
    wdot[64] -= qdot;
  }

  {
    // reaction 661:  c7h14-2 => c4h7 + nc3h7
    const amrex::Real k_f = 1e+16 * exp(-(35728.3832721351) * invT);
    const amrex::Real qf = k_f * (sc[63]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[28] += qdot;
    wdot[29] += qdot;
    wdot[63] -= qdot;
  }

  {
    // reaction 662:  c4h7 + nc3h7 => c7h14-2
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[28] * sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[28] -= qdot;
    wdot[29] -= qdot;
    wdot[63] += qdot;
  }

  {
    // reaction 663:  c7h14-3 => c4h7 + nc3h7
    const amrex::Real k_f = 1e+16 * exp(-(35728.3832721351) * invT);
    const amrex::Real qf = k_f * (sc[64]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[28] += qdot;
    wdot[29] += qdot;
    wdot[64] -= qdot;
  }

  {
    // reaction 664:  c4h7 + nc3h7 => c7h14-3
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[28] * sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[28] -= qdot;
    wdot[29] -= qdot;
    wdot[64] += qdot;
  }

  {
    // reaction 665:  c7h15o2-1 => c7h15-1 + o2
    const amrex::Real k_f =
      2.657e+20 * exp((-1.67) * logT - (17813.8699694871) * invT);
    const amrex::Real qf = k_f * (sc[65]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[59] += qdot;
    wdot[65] -= qdot;
  }

  {
    // reaction 666:  c7h15-1 + o2 => c7h15o2-1
    const amrex::Real k_f = 4520000;
    const amrex::Real qf = k_f * (sc[3] * sc[59]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[59] -= qdot;
    wdot[65] += qdot;
  }

  {
    // reaction 667:  c7h15o2-2 => c7h15-2 + o2
    const amrex::Real k_f =
      1.357e+23 * exp((-2.36) * logT - (18956.1718008638) * invT);
    const amrex::Real qf = k_f * (sc[66]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[60] += qdot;
    wdot[66] -= qdot;
  }

  {
    // reaction 668:  c7h15-2 + o2 => c7h15o2-2
    const amrex::Real k_f = 7540000;
    const amrex::Real qf = k_f * (sc[3] * sc[60]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[60] -= qdot;
    wdot[66] += qdot;
  }

  {
    // reaction 669:  c7h15o2-3 => c7h15-3 + o2
    const amrex::Real k_f =
      9.879e+21 * exp((-1.97) * logT - (19051.7829673667) * invT);
    const amrex::Real qf = k_f * (sc[67]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[61] += qdot;
    wdot[67] -= qdot;
  }

  {
    // reaction 670:  c7h15-3 + o2 => c7h15o2-3
    const amrex::Real k_f = 7540000;
    const amrex::Real qf = k_f * (sc[3] * sc[61]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[61] -= qdot;
    wdot[67] += qdot;
  }

  {
    // reaction 671:  c7h15o2-4 => c7h15-4 + o2
    const amrex::Real k_f =
      1.357e+23 * exp((-2.36) * logT - (18956.1718008638) * invT);
    const amrex::Real qf = k_f * (sc[68]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[62] += qdot;
    wdot[68] -= qdot;
  }

  {
    // reaction 672:  c7h15-4 + o2 => c7h15o2-4
    const amrex::Real k_f = 7540000;
    const amrex::Real qf = k_f * (sc[3] * sc[62]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[62] -= qdot;
    wdot[68] += qdot;
  }

  {
    // reaction 673:  c7h15o2-1 => c7h14ooh1-3
    const amrex::Real k_f = 25000000000 * exp(-(10492.0674820284) * invT);
    const amrex::Real qf = k_f * (sc[65]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[65] -= qdot;
    wdot[69] += qdot;
  }

  {
    // reaction 674:  c7h14ooh1-3 => c7h15o2-1
    const amrex::Real k_f =
      2653000000 * exp((-0.11) * logT - (4146.50532623089) * invT);
    const amrex::Real qf = k_f * (sc[69]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[65] += qdot;
    wdot[69] -= qdot;
  }

  {
    // reaction 675:  c7h15o2-2 => c7h14ooh2-3
    const amrex::Real k_f = 200000000000 * exp(-(13511.3674768567) * invT);
    const amrex::Real qf = k_f * (sc[66]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[66] -= qdot;
    wdot[70] += qdot;
  }

  {
    // reaction 676:  c7h14ooh2-3 => c7h15o2-2
    const amrex::Real k_f =
      22620000000 * exp((-0.11) * logT - (7180.90182103335) * invT);
    const amrex::Real qf = k_f * (sc[70]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[66] += qdot;
    wdot[70] -= qdot;
  }

  {
    // reaction 677:  c7h15o2-2 => c7h14ooh2-4
    const amrex::Real k_f = 25000000000 * exp(-(10492.0674820284) * invT);
    const amrex::Real qf = k_f * (sc[66]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[66] -= qdot;
    wdot[71] += qdot;
  }

  {
    // reaction 678:  c7h14ooh2-4 => c7h15o2-2
    const amrex::Real k_f =
      2827000000 * exp((-0.11) * logT - (4161.60182620503) * invT);
    const amrex::Real qf = k_f * (sc[71]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[66] += qdot;
    wdot[71] -= qdot;
  }

  {
    // reaction 679:  c7h15o2-3 => c7h14ooh3-2
    const amrex::Real k_f = 200000000000 * exp(-(13511.3674768567) * invT);
    const amrex::Real qf = k_f * (sc[67]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[67] -= qdot;
    wdot[72] += qdot;
  }

  {
    // reaction 680:  c7h14ooh3-2 => c7h15o2-3
    const amrex::Real k_f =
      310700000000 * exp((-0.51) * logT - (7085.29065453045) * invT);
    const amrex::Real qf = k_f * (sc[72]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[67] += qdot;
    wdot[72] -= qdot;
  }

  {
    // reaction 681:  c7h15o2-3 => c7h14ooh3-4
    const amrex::Real k_f = 200000000000 * exp(-(13511.3674768567) * invT);
    const amrex::Real qf = k_f * (sc[67]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[67] -= qdot;
    wdot[73] += qdot;
  }

  {
    // reaction 682:  c7h14ooh3-4 => c7h15o2-3
    const amrex::Real k_f =
      310700000000 * exp((-0.51) * logT - (7085.29065453045) * invT);
    const amrex::Real qf = k_f * (sc[73]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[67] += qdot;
    wdot[73] -= qdot;
  }

  {
    // reaction 683:  c7h15o2-3 => c7h14ooh3-5
    const amrex::Real k_f = 25000000000 * exp(-(10492.0674820284) * invT);
    const amrex::Real qf = k_f * (sc[67]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[67] -= qdot;
    wdot[74] += qdot;
  }

  {
    // reaction 684:  c7h14ooh3-5 => c7h15o2-3
    const amrex::Real k_f =
      38840000000 * exp((-0.51) * logT - (4065.99065970213) * invT);
    const amrex::Real qf = k_f * (sc[74]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[67] += qdot;
    wdot[74] -= qdot;
  }

  {
    // reaction 685:  c7h15o2-4 => c7h14ooh4-2
    const amrex::Real k_f = 50000000000 * exp(-(10492.0674820284) * invT);
    const amrex::Real qf = k_f * (sc[68]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[68] -= qdot;
    wdot[75] += qdot;
  }

  {
    // reaction 686:  c7h14ooh4-2 => c7h15o2-4
    const amrex::Real k_f =
      5655000000 * exp((-0.11) * logT - (4161.60182620503) * invT);
    const amrex::Real qf = k_f * (sc[75]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[68] += qdot;
    wdot[75] -= qdot;
  }

  {
    // reaction 687:  c7h15o2-4 => c7h14ooh4-3
    const amrex::Real k_f = 400000000000 * exp(-(13511.3674768567) * invT);
    const amrex::Real qf = k_f * (sc[68]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[68] -= qdot;
    wdot[76] += qdot;
  }

  {
    // reaction 688:  c7h14ooh4-3 => c7h15o2-4
    const amrex::Real k_f =
      45240000000 * exp((-0.11) * logT - (7180.90182103335) * invT);
    const amrex::Real qf = k_f * (sc[76]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[68] += qdot;
    wdot[76] -= qdot;
  }

  {
    // reaction 689:  c7h14ooh2-3 => c7h14-2 + ho2
    const amrex::Real k_f =
      1.61e+20 * exp((-2.52) * logT - (10743.6758149308) * invT);
    const amrex::Real qf = k_f * (sc[70]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[63] += qdot;
    wdot[70] -= qdot;
  }

  {
    // reaction 690:  c7h14-2 + ho2 => c7h14ooh2-3
    const amrex::Real k_f = 100000 * exp(-(5802.08815672842) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[63]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[63] -= qdot;
    wdot[70] += qdot;
  }

  {
    // reaction 691:  c7h14ooh3-2 => c7h14-2 + ho2
    const amrex::Real k_f =
      1.61e+20 * exp((-2.52) * logT - (10743.6758149308) * invT);
    const amrex::Real qf = k_f * (sc[72]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[63] += qdot;
    wdot[72] -= qdot;
  }

  {
    // reaction 692:  c7h14-2 + ho2 => c7h14ooh3-2
    const amrex::Real k_f = 100000 * exp(-(5802.08815672842) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[63]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[63] -= qdot;
    wdot[72] += qdot;
  }

  {
    // reaction 693:  c7h14ooh3-4 => c7h14-3 + ho2
    const amrex::Real k_f =
      1.199e+20 * exp((-2.46) * logT - (10285.7486490485) * invT);
    const amrex::Real qf = k_f * (sc[73]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[64] += qdot;
    wdot[73] -= qdot;
  }

  {
    // reaction 694:  c7h14-3 + ho2 => c7h14ooh3-4
    const amrex::Real k_f = 100000 * exp(-(5298.8714909237) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[64]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[64] -= qdot;
    wdot[73] += qdot;
  }

  {
    // reaction 695:  c7h14ooh4-3 => c7h14-3 + ho2
    const amrex::Real k_f =
      2.389e+20 * exp((-2.46) * logT - (10285.7486490485) * invT);
    const amrex::Real qf = k_f * (sc[76]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[64] += qdot;
    wdot[76] -= qdot;
  }

  {
    // reaction 696:  c7h14-3 + ho2 => c7h14ooh4-3
    const amrex::Real k_f = 100000 * exp(-(5298.8714909237) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[64]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[64] -= qdot;
    wdot[76] += qdot;
  }

  {
    // reaction 697:  c7h14ooh1-3 => c7h14o1-3 + oh
    const amrex::Real k_f = 75000000000 * exp(-(7674.05415352198) * invT);
    const amrex::Real qf = k_f * (sc[69]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[69] -= qdot;
    wdot[81] += qdot;
  }

  {
    // reaction 698:  c7h14ooh2-4 => c7h14o2-4 + oh
    const amrex::Real k_f = 75000000000 * exp(-(7674.05415352198) * invT);
    const amrex::Real qf = k_f * (sc[71]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[71] -= qdot;
    wdot[82] += qdot;
  }

  {
    // reaction 699:  c7h14ooh4-2 => c7h14o2-4 + oh
    const amrex::Real k_f = 75000000000 * exp(-(7674.05415352198) * invT);
    const amrex::Real qf = k_f * (sc[75]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[75] -= qdot;
    wdot[82] += qdot;
  }

  {
    // reaction 700:  c7h14ooh2-4 => c5h10-1 + ch3cho + oh
    const amrex::Real k_f =
      5.364e+17 * exp((-1.4) * logT - (13461.0458102763) * invT);
    const amrex::Real qf = k_f * (sc[71]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[24] += qdot;
    wdot[36] += qdot;
    wdot[71] -= qdot;
  }

  {
    // reaction 701:  c7h14ooh3-5 => c2h5cho + c4h8-1 + oh
    const amrex::Real k_f =
      2.47e+18 * exp((-1.55) * logT - (13596.9143100435) * invT);
    const amrex::Real qf = k_f * (sc[74]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[30] += qdot;
    wdot[33] += qdot;
    wdot[74] -= qdot;
  }

  {
    // reaction 702:  c7h14ooh4-2 => c3h6 + nc3h7cho + oh
    const amrex::Real k_f =
      1.3e+18 * exp((-1.49) * logT - (13486.2066435665) * invT);
    const amrex::Real qf = k_f * (sc[75]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[26] += qdot;
    wdot[52] += qdot;
    wdot[75] -= qdot;
  }

  {
    // reaction 703:  c7h14ooh1-3o2 => c7h14ooh1-3 + o2
    const amrex::Real k_f =
      1.367e+23 * exp((-2.37) * logT - (18941.0753008896) * invT);
    const amrex::Real qf = k_f * (sc[77]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[69] += qdot;
    wdot[77] -= qdot;
  }

  {
    // reaction 704:  c7h14ooh1-3 + o2 => c7h14ooh1-3o2
    const amrex::Real k_f = 7540000;
    const amrex::Real qf = k_f * (sc[3] * sc[69]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[69] -= qdot;
    wdot[77] += qdot;
  }

  {
    // reaction 705:  c7h14ooh2-4o2 => c7h14ooh2-4 + o2
    const amrex::Real k_f =
      1.389e+23 * exp((-2.38) * logT - (18920.9466342575) * invT);
    const amrex::Real qf = k_f * (sc[78]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[71] += qdot;
    wdot[78] -= qdot;
  }

  {
    // reaction 706:  c7h14ooh2-4 + o2 => c7h14ooh2-4o2
    const amrex::Real k_f = 7540000;
    const amrex::Real qf = k_f * (sc[3] * sc[71]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[71] -= qdot;
    wdot[78] += qdot;
  }

  {
    // reaction 707:  c7h14ooh3-5o2 => c7h14ooh3-5 + o2
    const amrex::Real k_f =
      1.389e+23 * exp((-2.38) * logT - (18920.9466342575) * invT);
    const amrex::Real qf = k_f * (sc[79]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[74] += qdot;
    wdot[79] -= qdot;
  }

  {
    // reaction 708:  c7h14ooh3-5 + o2 => c7h14ooh3-5o2
    const amrex::Real k_f = 7540000;
    const amrex::Real qf = k_f * (sc[3] * sc[74]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[74] -= qdot;
    wdot[79] += qdot;
  }

  {
    // reaction 709:  c7h14ooh4-2o2 => c7h14ooh4-2 + o2
    const amrex::Real k_f =
      6.969e+22 * exp((-2.38) * logT - (18920.9466342575) * invT);
    const amrex::Real qf = k_f * (sc[80]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[75] += qdot;
    wdot[80] -= qdot;
  }

  {
    // reaction 710:  c7h14ooh4-2 + o2 => c7h14ooh4-2o2
    const amrex::Real k_f = 7540000;
    const amrex::Real qf = k_f * (sc[3] * sc[75]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[75] -= qdot;
    wdot[80] += qdot;
  }

  {
    // reaction 711:  c7h14ooh1-3o2 => nc7ket13 + oh
    const amrex::Real k_f = 25000000000 * exp(-(10768.836648221) * invT);
    const amrex::Real qf = k_f * (sc[77]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[77] -= qdot;
    wdot[83] += qdot;
  }

  {
    // reaction 712:  nc7ket13 + oh => c7h14ooh1-3o2
    const amrex::Real k_f =
      0.003303 * exp((1.41) * logT - (22664.8786278446) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[83]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[77] += qdot;
    wdot[83] -= qdot;
  }

  {
    // reaction 713:  c7h14ooh2-4o2 => nc7ket24 + oh
    const amrex::Real k_f = 12500000000 * exp(-(8982.41748461425) * invT);
    const amrex::Real qf = k_f * (sc[78]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[78] -= qdot;
    wdot[84] += qdot;
  }

  {
    // reaction 714:  nc7ket24 + oh => c7h14ooh2-4o2
    const amrex::Real k_f =
      0.0001615 * exp((1.83) * logT - (22242.1766285686) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[84]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[78] += qdot;
    wdot[84] -= qdot;
  }

  {
    // reaction 715:  c7h14ooh3-5o2 => nc7ket35 + oh
    const amrex::Real k_f = 12500000000 * exp(-(8982.41748461425) * invT);
    const amrex::Real qf = k_f * (sc[79]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[79] -= qdot;
    wdot[85] += qdot;
  }

  {
    // reaction 716:  nc7ket35 + oh => c7h14ooh3-5o2
    const amrex::Real k_f =
      0.0001615 * exp((1.83) * logT - (22242.1766285686) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[85]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[79] += qdot;
    wdot[85] -= qdot;
  }

  {
    // reaction 717:  c7h14ooh4-2o2 => nc7ket42 + oh
    const amrex::Real k_f = 12500000000 * exp(-(8982.41748461425) * invT);
    const amrex::Real qf = k_f * (sc[80]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[80] -= qdot;
    wdot[86] += qdot;
  }

  {
    // reaction 718:  nc7ket42 + oh => c7h14ooh4-2o2
    const amrex::Real k_f =
      0.0001615 * exp((1.83) * logT - (22242.1766285686) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[86]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[80] += qdot;
    wdot[86] -= qdot;
  }

  {
    // reaction 719:  nc7ket13 => ch2cho + nc4h9cho + oh
    const amrex::Real k_f = 1.05e+16 * exp(-(20933.8132974763) * invT);
    const amrex::Real qf = k_f * (sc[83]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[23] += qdot;
    wdot[56] += qdot;
    wdot[83] -= qdot;
  }

  {
    // reaction 720:  nc7ket24 => ch3coch2 + nc3h7cho + oh
    const amrex::Real k_f = 1.05e+16 * exp(-(20933.8132974763) * invT);
    const amrex::Real qf = k_f * (sc[84]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[32] += qdot;
    wdot[52] += qdot;
    wdot[84] -= qdot;
  }

  {
    // reaction 721:  nc7ket35 => c2h5cho + c2h5coch2 + oh
    const amrex::Real k_f = 1.05e+16 * exp(-(20933.8132974763) * invT);
    const amrex::Real qf = k_f * (sc[85]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[33] += qdot;
    wdot[54] += qdot;
    wdot[85] -= qdot;
  }

  {
    // reaction 722:  nc7ket42 => ch3cho + nc3h7coch2 + oh
    const amrex::Real k_f = 1.05e+16 * exp(-(20933.8132974763) * invT);
    const amrex::Real qf = k_f * (sc[86]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[24] += qdot;
    wdot[55] += qdot;
    wdot[86] -= qdot;
  }

  {
    // reaction 723:  c7h14o2-4 + oh => c5h10-1 + ch3co + h2o
    const amrex::Real k_f = 2500000;
    const amrex::Real qf = k_f * (sc[4] * sc[82]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[22] += qdot;
    wdot[36] += qdot;
    wdot[82] -= qdot;
  }

  {
    // reaction 724:  c7h14o1-3 + oh => c2h4 + h2o + nc4h9co
    const amrex::Real k_f = 2500000;
    const amrex::Real qf = k_f * (sc[4] * sc[81]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[16] += qdot;
    wdot[57] += qdot;
    wdot[81] -= qdot;
  }

  {
    // reaction 725:  c7h14o2-4 + oh => c3h6 + h2o + nc3h7co
    const amrex::Real k_f = 2500000;
    const amrex::Real qf = k_f * (sc[4] * sc[82]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[26] += qdot;
    wdot[53] += qdot;
    wdot[82] -= qdot;
  }

  {
    // reaction 726:  c7h14o2-4 + ho2 => c5h10-1 + ch3co + h2o2
    const amrex::Real k_f = 5000000 * exp(-(8906.93498474354) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[82]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[12] += qdot;
    wdot[22] += qdot;
    wdot[36] += qdot;
    wdot[82] -= qdot;
  }

  {
    // reaction 727:  c7h14o1-3 + ho2 => c2h4 + h2o2 + nc4h9co
    const amrex::Real k_f = 5000000 * exp(-(8906.93498474354) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[81]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[12] += qdot;
    wdot[16] += qdot;
    wdot[57] += qdot;
    wdot[81] -= qdot;
  }

  {
    // reaction 728:  c7h14o2-4 + ho2 => c3h6 + h2o2 + nc3h7co
    const amrex::Real k_f = 5000000 * exp(-(8906.93498474354) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[82]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[12] += qdot;
    wdot[26] += qdot;
    wdot[53] += qdot;
    wdot[82] -= qdot;
  }
}

// compute the production rate for each species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWC(const amrex::Real T, amrex::Real C[], amrex::Real wdot[])
{

  // convert to SI
  for (int id = 0; id < 88; ++id) {
    C[id] *= 1.0e6;
  }

  // convert to chemkin units
  productionRate(wdot, C, T);

  // convert to chemkin units
  for (int id = 0; id < 88; ++id) {
    C[id] *= 1.0e-6;
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given P, T, and mass fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWYP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real wdot[])
{
  amrex::Real c[88]; // temporary storage
  amrex::Real YOW = 0;
  amrex::Real PWORT;

  // Compute inverse of mean molecular wt first
  for (int i = 0; i < 88; i++) {
    YOW += y[i] * imw(i);
  }
  // PW/RT (see Eq. 7)
  PWORT = P / (YOW * 8.31446261815324e+07 * T);
  // multiply by 1e6 so c goes to SI
  PWORT *= 1e6;
  // Now compute conversion (and go to SI)
  for (int i = 0; i < 88; i++) {
    c[i] = PWORT * y[i] * imw(i);
  }

  // convert to chemkin units
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 88; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given P, T, and mole fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWXP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real wdot[])
{
  amrex::Real c[88]; // temporary storage
  amrex::Real PORT =
    1e6 * P / (8.31446261815324e+07 * T); // 1e6 * P/RT so c goes to SI units

  // Compute conversion, see Eq 10
  for (int id = 0; id < 88; ++id) {
    c[id] = x[id] * PORT;
  }

  // convert to chemkin units
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 88; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given rho, T, and mass fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWYR(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real wdot[])
{
  amrex::Real c[88]; // temporary storage

  // See Eq 8 with an extra 1e6 so c goes to SI
  for (int i = 0; i < 88; i++) {
    c[i] = 1e6 * rho * y[i] * imw(i);
  }

  // call productionRate
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 88; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given rho, T, and mole fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWXR(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real wdot[])
{
  amrex::Real c[88];  // temporary storage
  amrex::Real XW = 0; // See Eq 4, 11 in CK Manual
  amrex::Real ROW;
  // Compute mean molecular wt first
  XW += x[0] * 1.008000;    // h
  XW += x[1] * 2.016000;    // h2
  XW += x[2] * 15.999000;   // o
  XW += x[3] * 31.998000;   // o2
  XW += x[4] * 17.007000;   // oh
  XW += x[5] * 18.015000;   // h2o
  XW += x[6] * 28.010000;   // co
  XW += x[7] * 29.018000;   // hco
  XW += x[8] * 44.009000;   // co2
  XW += x[9] * 15.035000;   // ch3
  XW += x[10] * 16.043000;  // ch4
  XW += x[11] * 33.006000;  // ho2
  XW += x[12] * 34.014000;  // h2o2
  XW += x[13] * 30.026000;  // ch2o
  XW += x[14] * 31.034000;  // ch3o
  XW += x[15] * 30.070000;  // c2h6
  XW += x[16] * 28.054000;  // c2h4
  XW += x[17] * 29.062000;  // c2h5
  XW += x[18] * 26.038000;  // c2h2
  XW += x[19] * 27.046000;  // c2h3
  XW += x[20] * 42.037000;  // ch2co
  XW += x[21] * 41.029000;  // hcco
  XW += x[22] * 43.045000;  // ch3co
  XW += x[23] * 43.045000;  // ch2cho
  XW += x[24] * 44.053000;  // ch3cho
  XW += x[25] * 40.065000;  // c3h4-a
  XW += x[26] * 42.081000;  // c3h6
  XW += x[27] * 54.092000;  // c4h6
  XW += x[28] * 43.089000;  // nc3h7
  XW += x[29] * 55.100000;  // c4h7
  XW += x[30] * 56.108000;  // c4h8-1
  XW += x[31] * 57.116000;  // pc4h9
  XW += x[32] * 57.072000;  // ch3coch2
  XW += x[33] * 58.080000;  // c2h5cho
  XW += x[34] * 57.072000;  // c2h5co
  XW += x[35] * 69.127000;  // c5h9
  XW += x[36] * 70.135000;  // c5h10-1
  XW += x[37] * 45.061000;  // c2h5o
  XW += x[38] * 47.033000;  // ch3o2
  XW += x[39] * 48.041000;  // ch3o2h
  XW += x[40] * 55.056000;  // c2h3co
  XW += x[41] * 56.064000;  // c2h3cho
  XW += x[42] * 57.072000;  // c3h5o
  XW += x[43] * 71.099000;  // c4h7o
  XW += x[44] * 121.112000; // c4h8ooh1-3o2
  XW += x[45] * 89.114000;  // c4h8ooh1-3
  XW += x[46] * 89.114000;  // pc4h9o2
  XW += x[47] * 41.073000;  // c3h5-a
  XW += x[48] * 39.057000;  // c3h3
  XW += x[49] * 38.049000;  // c3h2
  XW += x[50] * 14.027000;  // ch2(s)
  XW += x[51] * 104.105000; // nc4ket13
  XW += x[52] * 72.107000;  // nc3h7cho
  XW += x[53] * 71.099000;  // nc3h7co
  XW += x[54] * 71.099000;  // c2h5coch2
  XW += x[55] * 85.126000;  // nc3h7coch2
  XW += x[56] * 86.134000;  // nc4h9cho
  XW += x[57] * 85.126000;  // nc4h9co
  XW += x[58] * 100.205000; // nc7h16
  XW += x[59] * 99.197000;  // c7h15-1
  XW += x[60] * 99.197000;  // c7h15-2
  XW += x[61] * 99.197000;  // c7h15-3
  XW += x[62] * 99.197000;  // c7h15-4
  XW += x[63] * 98.189000;  // c7h14-2
  XW += x[64] * 98.189000;  // c7h14-3
  XW += x[65] * 131.195000; // c7h15o2-1
  XW += x[66] * 131.195000; // c7h15o2-2
  XW += x[67] * 131.195000; // c7h15o2-3
  XW += x[68] * 131.195000; // c7h15o2-4
  XW += x[69] * 131.195000; // c7h14ooh1-3
  XW += x[70] * 131.195000; // c7h14ooh2-3
  XW += x[71] * 131.195000; // c7h14ooh2-4
  XW += x[72] * 131.195000; // c7h14ooh3-2
  XW += x[73] * 131.195000; // c7h14ooh3-4
  XW += x[74] * 131.195000; // c7h14ooh3-5
  XW += x[75] * 131.195000; // c7h14ooh4-2
  XW += x[76] * 131.195000; // c7h14ooh4-3
  XW += x[77] * 163.193000; // c7h14ooh1-3o2
  XW += x[78] * 163.193000; // c7h14ooh2-4o2
  XW += x[79] * 163.193000; // c7h14ooh3-5o2
  XW += x[80] * 163.193000; // c7h14ooh4-2o2
  XW += x[81] * 114.188000; // c7h14o1-3
  XW += x[82] * 114.188000; // c7h14o2-4
  XW += x[83] * 146.186000; // nc7ket13
  XW += x[84] * 146.186000; // nc7ket24
  XW += x[85] * 146.186000; // nc7ket35
  XW += x[86] * 146.186000; // nc7ket42
  XW += x[87] * 28.014000;  // n2
  // Extra 1e6 factor to take c to SI
  ROW = 1e6 * rho / XW;

  // Compute conversion, see Eq 11
  for (int id = 0; id < 88; ++id) {
    c[id] = x[id] * ROW;
  }

  // convert to chemkin units
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 88; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

//  species unit charge number
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCHRG(int kcharge[])
{
  kcharge[0] = 0;  // h
  kcharge[1] = 0;  // h2
  kcharge[2] = 0;  // o
  kcharge[3] = 0;  // o2
  kcharge[4] = 0;  // oh
  kcharge[5] = 0;  // h2o
  kcharge[6] = 0;  // co
  kcharge[7] = 0;  // hco
  kcharge[8] = 0;  // co2
  kcharge[9] = 0;  // ch3
  kcharge[10] = 0; // ch4
  kcharge[11] = 0; // ho2
  kcharge[12] = 0; // h2o2
  kcharge[13] = 0; // ch2o
  kcharge[14] = 0; // ch3o
  kcharge[15] = 0; // c2h6
  kcharge[16] = 0; // c2h4
  kcharge[17] = 0; // c2h5
  kcharge[18] = 0; // c2h2
  kcharge[19] = 0; // c2h3
  kcharge[20] = 0; // ch2co
  kcharge[21] = 0; // hcco
  kcharge[22] = 0; // ch3co
  kcharge[23] = 0; // ch2cho
  kcharge[24] = 0; // ch3cho
  kcharge[25] = 0; // c3h4-a
  kcharge[26] = 0; // c3h6
  kcharge[27] = 0; // c4h6
  kcharge[28] = 0; // nc3h7
  kcharge[29] = 0; // c4h7
  kcharge[30] = 0; // c4h8-1
  kcharge[31] = 0; // pc4h9
  kcharge[32] = 0; // ch3coch2
  kcharge[33] = 0; // c2h5cho
  kcharge[34] = 0; // c2h5co
  kcharge[35] = 0; // c5h9
  kcharge[36] = 0; // c5h10-1
  kcharge[37] = 0; // c2h5o
  kcharge[38] = 0; // ch3o2
  kcharge[39] = 0; // ch3o2h
  kcharge[40] = 0; // c2h3co
  kcharge[41] = 0; // c2h3cho
  kcharge[42] = 0; // c3h5o
  kcharge[43] = 0; // c4h7o
  kcharge[44] = 0; // c4h8ooh1-3o2
  kcharge[45] = 0; // c4h8ooh1-3
  kcharge[46] = 0; // pc4h9o2
  kcharge[47] = 0; // c3h5-a
  kcharge[48] = 0; // c3h3
  kcharge[49] = 0; // c3h2
  kcharge[50] = 0; // ch2(s)
  kcharge[51] = 0; // nc4ket13
  kcharge[52] = 0; // nc3h7cho
  kcharge[53] = 0; // nc3h7co
  kcharge[54] = 0; // c2h5coch2
  kcharge[55] = 0; // nc3h7coch2
  kcharge[56] = 0; // nc4h9cho
  kcharge[57] = 0; // nc4h9co
  kcharge[58] = 0; // nc7h16
  kcharge[59] = 0; // c7h15-1
  kcharge[60] = 0; // c7h15-2
  kcharge[61] = 0; // c7h15-3
  kcharge[62] = 0; // c7h15-4
  kcharge[63] = 0; // c7h14-2
  kcharge[64] = 0; // c7h14-3
  kcharge[65] = 0; // c7h15o2-1
  kcharge[66] = 0; // c7h15o2-2
  kcharge[67] = 0; // c7h15o2-3
  kcharge[68] = 0; // c7h15o2-4
  kcharge[69] = 0; // c7h14ooh1-3
  kcharge[70] = 0; // c7h14ooh2-3
  kcharge[71] = 0; // c7h14ooh2-4
  kcharge[72] = 0; // c7h14ooh3-2
  kcharge[73] = 0; // c7h14ooh3-4
  kcharge[74] = 0; // c7h14ooh3-5
  kcharge[75] = 0; // c7h14ooh4-2
  kcharge[76] = 0; // c7h14ooh4-3
  kcharge[77] = 0; // c7h14ooh1-3o2
  kcharge[78] = 0; // c7h14ooh2-4o2
  kcharge[79] = 0; // c7h14ooh3-5o2
  kcharge[80] = 0; // c7h14ooh4-2o2
  kcharge[81] = 0; // c7h14o1-3
  kcharge[82] = 0; // c7h14o2-4
  kcharge[83] = 0; // nc7ket13
  kcharge[84] = 0; // nc7ket24
  kcharge[85] = 0; // nc7ket35
  kcharge[86] = 0; // nc7ket42
  kcharge[87] = 0; // n2
}

//  species charge per unit mass
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCHRGMASS(amrex::Real zk[])
{

  int kchrg[88];
  CKCHRG(kchrg);

  for (int id = 0; id < 88; ++id) {
    zk[id] = 6.02214076e+23 * 1.60217663e-19 * kchrg[id] * imw(id);
  }
}

// compute an approx to the reaction Jacobian
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
aJacobian_precond(
  amrex::Real* J, const amrex::Real* sc, const amrex::Real T, const int HP)
{

#if defined(PELE_COMPILE_AJACOBIAN) || !defined(AMREX_USE_HIP)
  for (int i = 0; i < 7921; i++) {
    J[i] = 0.0;
  }

  amrex::Real wdot[88];
  for (auto& val : wdot) {
    val = 0.0;
  }

  const amrex::Real invT = 1.0 / T;
  const amrex::Real invT2 = invT * invT;
  const amrex::Real logT = log(T);

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  amrex::Real refC = 101325 / 8.31446 / T;
  amrex::Real refCinv = 1.0 / refC;

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int k = 0; k < 88; ++k) {
    mixture += sc[k];
  }

  // compute the Gibbs free energy
  amrex::Real g_RT[88];
  gibbs(g_RT, T);

  // compute the species enthalpy
  amrex::Real h_RT[88];
  speciesEnthalpy(h_RT, T);

  amrex::Real phi_f, k_f, k_r, phi_r, Kc, q, q_nocor, Corr, alpha;
  amrex::Real dlnkfdT, dlnk0dT, dlnKcdT, dkrdT, dqdT;
  amrex::Real dqdci, dcdc_fac, dqdc[88];
  amrex::Real Pr, fPr, F, k_0, logPr;
  amrex::Real logFcent, troe_c, troe_n, troePr_den, troePr, troe;
  amrex::Real Fcent1, Fcent2, Fcent3, Fcent;
  amrex::Real dlogFdc, dlogFdn, dlogFdcn_fac;
  amrex::Real dlogPrdT, dlogfPrdT, dlogFdT, dlogFcentdT, dlogFdlogPr, dlnCorrdT;
  const amrex::Real ln10 = log(10.0);
  const amrex::Real log10e = 1.0 / log(10.0);
  // reaction 0: ch3 + h (+M) <=> ch4 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[1] + (5 - 1) * sc[5] + sc[6] + (3 - 1) * sc[8];
  // forward
  phi_f = sc[0] * sc[9];
  k_f = 2138000000 * exp(-0.4 * logT);
  dlnkfdT = -0.4 * invT;
  // pressure-fall-off
  k_0 = 3.31e+30 * exp(-4 * logT - (1060.78073151635) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -4 * invT + (1060.78073151635) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0) * exp(-T / 1e-15);
  Fcent2 = 0 * exp(-T / 1e-15);
  Fcent3 = exp(-40 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 1e-15 - Fcent2 / 1e-15 + Fcent3 * 40 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[10];
  Kc = refCinv * exp(g_RT[0] + g_RT[9] - g_RT[10]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[9]) + (h_RT[10]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[0] -= q;  // h
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac + k_f * sc[9];
  dqdc[1] = 2 * dcdc_fac;
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = 5 * dcdc_fac;
  dqdc[6] = 2 * dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = 3 * dcdc_fac;
  dqdc[9] = dcdc_fac + k_f * sc[0];
  dqdc[10] = dcdc_fac - k_r;
  dqdc[11] = dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = dcdc_fac;
  dqdc[17] = dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  dqdc[47] = dcdc_fac;
  dqdc[48] = dcdc_fac;
  dqdc[49] = dcdc_fac;
  dqdc[50] = dcdc_fac;
  dqdc[51] = dcdc_fac;
  dqdc[52] = dcdc_fac;
  dqdc[53] = dcdc_fac;
  dqdc[54] = dcdc_fac;
  dqdc[55] = dcdc_fac;
  dqdc[56] = dcdc_fac;
  dqdc[57] = dcdc_fac;
  dqdc[58] = dcdc_fac;
  dqdc[59] = dcdc_fac;
  dqdc[60] = dcdc_fac;
  dqdc[61] = dcdc_fac;
  dqdc[62] = dcdc_fac;
  dqdc[63] = dcdc_fac;
  dqdc[64] = dcdc_fac;
  dqdc[65] = dcdc_fac;
  dqdc[66] = dcdc_fac;
  dqdc[67] = dcdc_fac;
  dqdc[68] = dcdc_fac;
  dqdc[69] = dcdc_fac;
  dqdc[70] = dcdc_fac;
  dqdc[71] = dcdc_fac;
  dqdc[72] = dcdc_fac;
  dqdc[73] = dcdc_fac;
  dqdc[74] = dcdc_fac;
  dqdc[75] = dcdc_fac;
  dqdc[76] = dcdc_fac;
  dqdc[77] = dcdc_fac;
  dqdc[78] = dcdc_fac;
  dqdc[79] = dcdc_fac;
  dqdc[80] = dcdc_fac;
  dqdc[81] = dcdc_fac;
  dqdc[82] = dcdc_fac;
  dqdc[83] = dcdc_fac;
  dqdc[84] = dcdc_fac;
  dqdc[85] = dcdc_fac;
  dqdc[86] = dcdc_fac;
  dqdc[87] = dcdc_fac;
  for (int k = 0; k < 88; k++) {
    J[89 * k + 0] -= dqdc[k];
    J[89 * k + 9] -= dqdc[k];
    J[89 * k + 10] += dqdc[k];
  }
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT

  // reaction 27: c2h4 + h (+M) <=> c2h5 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[1] + (5 - 1) * sc[5] + sc[6] + (3 - 1) * sc[8];
  // forward
  phi_f = sc[0] * sc[16];
  k_f = 1081000 * exp(0.45 * logT - (916.860765096199) * invT);
  dlnkfdT = 0.45 * invT + (916.860765096199) * invT2;
  // pressure-fall-off
  k_0 = 1.112e+34 * exp(-5 * logT - (2238.30772949939) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -5 * invT + (2238.30772949939) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 1) * exp(-T / 1e-15);
  Fcent2 = 1 * exp(-T / 95);
  Fcent3 = exp(-200 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 1e-15 - Fcent2 / 95 + Fcent3 * 200 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[17];
  Kc = refCinv * exp(g_RT[0] + g_RT[16] - g_RT[17]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[16]) + (h_RT[17]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[0] -= q;  // h
  wdot[16] -= q; // c2h4
  wdot[17] += q; // c2h5
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac + k_f * sc[16];
  dqdc[1] = 2 * dcdc_fac;
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = 5 * dcdc_fac;
  dqdc[6] = 2 * dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = 3 * dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = dcdc_fac + k_f * sc[0];
  dqdc[17] = dcdc_fac - k_r;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  dqdc[47] = dcdc_fac;
  dqdc[48] = dcdc_fac;
  dqdc[49] = dcdc_fac;
  dqdc[50] = dcdc_fac;
  dqdc[51] = dcdc_fac;
  dqdc[52] = dcdc_fac;
  dqdc[53] = dcdc_fac;
  dqdc[54] = dcdc_fac;
  dqdc[55] = dcdc_fac;
  dqdc[56] = dcdc_fac;
  dqdc[57] = dcdc_fac;
  dqdc[58] = dcdc_fac;
  dqdc[59] = dcdc_fac;
  dqdc[60] = dcdc_fac;
  dqdc[61] = dcdc_fac;
  dqdc[62] = dcdc_fac;
  dqdc[63] = dcdc_fac;
  dqdc[64] = dcdc_fac;
  dqdc[65] = dcdc_fac;
  dqdc[66] = dcdc_fac;
  dqdc[67] = dcdc_fac;
  dqdc[68] = dcdc_fac;
  dqdc[69] = dcdc_fac;
  dqdc[70] = dcdc_fac;
  dqdc[71] = dcdc_fac;
  dqdc[72] = dcdc_fac;
  dqdc[73] = dcdc_fac;
  dqdc[74] = dcdc_fac;
  dqdc[75] = dcdc_fac;
  dqdc[76] = dcdc_fac;
  dqdc[77] = dcdc_fac;
  dqdc[78] = dcdc_fac;
  dqdc[79] = dcdc_fac;
  dqdc[80] = dcdc_fac;
  dqdc[81] = dcdc_fac;
  dqdc[82] = dcdc_fac;
  dqdc[83] = dcdc_fac;
  dqdc[84] = dcdc_fac;
  dqdc[85] = dcdc_fac;
  dqdc[86] = dcdc_fac;
  dqdc[87] = dcdc_fac;
  for (int k = 0; k < 88; k++) {
    J[89 * k + 0] -= dqdc[k];
    J[89 * k + 16] -= dqdc[k];
    J[89 * k + 17] += dqdc[k];
  }
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT

  // reaction 40: 2 ch3 (+M) <=> c2h6 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[1] + (5 - 1) * sc[5] + sc[6] + (3 - 1) * sc[8];
  // forward
  phi_f = (sc[9] * sc[9]);
  k_f = 92140000000 * exp(-1.17 * logT - (319.945156118641) * invT);
  dlnkfdT = -1.17 * invT + (319.945156118641) * invT2;
  // pressure-fall-off
  k_0 = 1.135e+36 * exp(-5.246 * logT - (857.984415197047) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -5.246 * invT + (857.984415197047) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.405) * exp(-T / 1120);
  Fcent2 = 0.405 * exp(-T / 69.6);
  Fcent3 = exp(-1e+15 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 1120 - Fcent2 / 69.6 + Fcent3 * 1e+15 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[15];
  Kc = refCinv * exp(2.000000 * g_RT[9] - g_RT[15]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[9]) + (h_RT[15]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[9] -= 2 * q; // ch3
  wdot[15] += q;    // c2h6
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = 2 * dcdc_fac;
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = 5 * dcdc_fac;
  dqdc[6] = 2 * dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = 3 * dcdc_fac;
  dqdc[9] = dcdc_fac + k_f * 2.000000 * sc[9];
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac - k_r;
  dqdc[16] = dcdc_fac;
  dqdc[17] = dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  dqdc[47] = dcdc_fac;
  dqdc[48] = dcdc_fac;
  dqdc[49] = dcdc_fac;
  dqdc[50] = dcdc_fac;
  dqdc[51] = dcdc_fac;
  dqdc[52] = dcdc_fac;
  dqdc[53] = dcdc_fac;
  dqdc[54] = dcdc_fac;
  dqdc[55] = dcdc_fac;
  dqdc[56] = dcdc_fac;
  dqdc[57] = dcdc_fac;
  dqdc[58] = dcdc_fac;
  dqdc[59] = dcdc_fac;
  dqdc[60] = dcdc_fac;
  dqdc[61] = dcdc_fac;
  dqdc[62] = dcdc_fac;
  dqdc[63] = dcdc_fac;
  dqdc[64] = dcdc_fac;
  dqdc[65] = dcdc_fac;
  dqdc[66] = dcdc_fac;
  dqdc[67] = dcdc_fac;
  dqdc[68] = dcdc_fac;
  dqdc[69] = dcdc_fac;
  dqdc[70] = dcdc_fac;
  dqdc[71] = dcdc_fac;
  dqdc[72] = dcdc_fac;
  dqdc[73] = dcdc_fac;
  dqdc[74] = dcdc_fac;
  dqdc[75] = dcdc_fac;
  dqdc[76] = dcdc_fac;
  dqdc[77] = dcdc_fac;
  dqdc[78] = dcdc_fac;
  dqdc[79] = dcdc_fac;
  dqdc[80] = dcdc_fac;
  dqdc[81] = dcdc_fac;
  dqdc[82] = dcdc_fac;
  dqdc[83] = dcdc_fac;
  dqdc[84] = dcdc_fac;
  dqdc[85] = dcdc_fac;
  dqdc[86] = dcdc_fac;
  dqdc[87] = dcdc_fac;
  for (int k = 0; k < 88; k++) {
    J[89 * k + 9] += -2 * dqdc[k];
    J[89 * k + 15] += dqdc[k];
  }
  J[7841] += -2 * dqdT; // dwdot[ch3]/dT
  J[7847] += dqdT;      // dwdot[c2h6]/dT

  // reaction 43: h + o2 (+M) <=> ho2 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[1] + (12 - 1) * sc[5] + (1.9 - 1) * sc[6] +
          (3.8 - 1) * sc[8];
  // forward
  phi_f = sc[0] * sc[3];
  k_f = 1475000 * exp(0.6 * logT);
  dlnkfdT = 0.6 * invT;
  // pressure-fall-off
  k_0 = 3.5e+16 * exp(-0.41 * logT - (-561.589799038067) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -0.41 * invT + (-561.589799038067) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.5) * exp(-T / 1e-30);
  Fcent2 = 0.5 * exp(-T / 1e+30);
  Fcent3 = exp(-1e+100 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent *
                (-Fcent1 / 1e-30 - Fcent2 / 1e+30 + Fcent3 * 1e+100 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[11];
  Kc = refCinv * exp(g_RT[0] + g_RT[3] - g_RT[11]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[3]) + (h_RT[11]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[0] -= q;  // h
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac + k_f * sc[3];
  dqdc[1] = 2.5 * dcdc_fac;
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac + k_f * sc[0];
  dqdc[4] = dcdc_fac;
  dqdc[5] = 12 * dcdc_fac;
  dqdc[6] = 1.9 * dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = 3.8 * dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac - k_r;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = dcdc_fac;
  dqdc[17] = dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  dqdc[47] = dcdc_fac;
  dqdc[48] = dcdc_fac;
  dqdc[49] = dcdc_fac;
  dqdc[50] = dcdc_fac;
  dqdc[51] = dcdc_fac;
  dqdc[52] = dcdc_fac;
  dqdc[53] = dcdc_fac;
  dqdc[54] = dcdc_fac;
  dqdc[55] = dcdc_fac;
  dqdc[56] = dcdc_fac;
  dqdc[57] = dcdc_fac;
  dqdc[58] = dcdc_fac;
  dqdc[59] = dcdc_fac;
  dqdc[60] = dcdc_fac;
  dqdc[61] = dcdc_fac;
  dqdc[62] = dcdc_fac;
  dqdc[63] = dcdc_fac;
  dqdc[64] = dcdc_fac;
  dqdc[65] = dcdc_fac;
  dqdc[66] = dcdc_fac;
  dqdc[67] = dcdc_fac;
  dqdc[68] = dcdc_fac;
  dqdc[69] = dcdc_fac;
  dqdc[70] = dcdc_fac;
  dqdc[71] = dcdc_fac;
  dqdc[72] = dcdc_fac;
  dqdc[73] = dcdc_fac;
  dqdc[74] = dcdc_fac;
  dqdc[75] = dcdc_fac;
  dqdc[76] = dcdc_fac;
  dqdc[77] = dcdc_fac;
  dqdc[78] = dcdc_fac;
  dqdc[79] = dcdc_fac;
  dqdc[80] = dcdc_fac;
  dqdc[81] = dcdc_fac;
  dqdc[82] = dcdc_fac;
  dqdc[83] = dcdc_fac;
  dqdc[84] = dcdc_fac;
  dqdc[85] = dcdc_fac;
  dqdc[86] = dcdc_fac;
  dqdc[87] = dcdc_fac;
  for (int k = 0; k < 88; k++) {
    J[89 * k + 0] -= dqdc[k];
    J[89 * k + 3] -= dqdc[k];
    J[89 * k + 11] += dqdc[k];
  }
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT

  // reaction 89: 2 oh (+M) <=> h2o2 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[1] + (12 - 1) * sc[5] + (1.9 - 1) * sc[6] +
          (3.8 - 1) * sc[8];
  // forward
  phi_f = (sc[4] * sc[4]);
  k_f = 123600000 * exp(-0.37 * logT);
  dlnkfdT = -0.37 * invT;
  // pressure-fall-off
  k_0 = 3.041e+30 * exp(-4.63 * logT - (1031.09094823387) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -4.63 * invT + (1031.09094823387) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.47) * exp(-T / 100);
  Fcent2 = 0.47 * exp(-T / 2000);
  Fcent3 = exp(-1e+15 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 100 - Fcent2 / 2000 + Fcent3 * 1e+15 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[12];
  Kc = refCinv * exp(2.000000 * g_RT[4] - g_RT[12]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[4]) + (h_RT[12]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[4] -= 2 * q; // oh
  wdot[12] += q;    // h2o2
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = 2.5 * dcdc_fac;
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac + k_f * 2.000000 * sc[4];
  dqdc[5] = 12 * dcdc_fac;
  dqdc[6] = 1.9 * dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = 3.8 * dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = dcdc_fac - k_r;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = dcdc_fac;
  dqdc[17] = dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  dqdc[47] = dcdc_fac;
  dqdc[48] = dcdc_fac;
  dqdc[49] = dcdc_fac;
  dqdc[50] = dcdc_fac;
  dqdc[51] = dcdc_fac;
  dqdc[52] = dcdc_fac;
  dqdc[53] = dcdc_fac;
  dqdc[54] = dcdc_fac;
  dqdc[55] = dcdc_fac;
  dqdc[56] = dcdc_fac;
  dqdc[57] = dcdc_fac;
  dqdc[58] = dcdc_fac;
  dqdc[59] = dcdc_fac;
  dqdc[60] = dcdc_fac;
  dqdc[61] = dcdc_fac;
  dqdc[62] = dcdc_fac;
  dqdc[63] = dcdc_fac;
  dqdc[64] = dcdc_fac;
  dqdc[65] = dcdc_fac;
  dqdc[66] = dcdc_fac;
  dqdc[67] = dcdc_fac;
  dqdc[68] = dcdc_fac;
  dqdc[69] = dcdc_fac;
  dqdc[70] = dcdc_fac;
  dqdc[71] = dcdc_fac;
  dqdc[72] = dcdc_fac;
  dqdc[73] = dcdc_fac;
  dqdc[74] = dcdc_fac;
  dqdc[75] = dcdc_fac;
  dqdc[76] = dcdc_fac;
  dqdc[77] = dcdc_fac;
  dqdc[78] = dcdc_fac;
  dqdc[79] = dcdc_fac;
  dqdc[80] = dcdc_fac;
  dqdc[81] = dcdc_fac;
  dqdc[82] = dcdc_fac;
  dqdc[83] = dcdc_fac;
  dqdc[84] = dcdc_fac;
  dqdc[85] = dcdc_fac;
  dqdc[86] = dcdc_fac;
  dqdc[87] = dcdc_fac;
  for (int k = 0; k < 88; k++) {
    J[89 * k + 4] += -2 * dqdc[k];
    J[89 * k + 12] += dqdc[k];
  }
  J[7836] += -2 * dqdT; // dwdot[oh]/dT
  J[7844] += dqdT;      // dwdot[h2o2]/dT

  // reaction 102: c2h3 + h (+M) <=> c2h4 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[0] * sc[19];
  k_f = 6100000 * exp(0.27 * logT - (140.900666425322) * invT);
  dlnkfdT = 0.27 * invT + (140.900666425322) * invT2;
  // pressure-fall-off
  k_0 = 9.8e+29 * exp(-3.86 * logT - (1670.67933047167) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -3.86 * invT + (1670.67933047167) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.782) * exp(-T / 208);
  Fcent2 = 0.782 * exp(-T / 2663);
  Fcent3 = exp(-6095 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 208 - Fcent2 / 2663 + Fcent3 * 6095 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[16];
  Kc = refCinv * exp(g_RT[0] - g_RT[16] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[19]) + (h_RT[16]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[0] -= q;  // h
  wdot[16] += q; // c2h4
  wdot[19] -= q; // c2h3
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac + k_f * sc[19];
  dqdc[1] = dcdc_fac;
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = dcdc_fac;
  dqdc[6] = dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = dcdc_fac - k_r;
  dqdc[17] = dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac + k_f * sc[0];
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  dqdc[47] = dcdc_fac;
  dqdc[48] = dcdc_fac;
  dqdc[49] = dcdc_fac;
  dqdc[50] = dcdc_fac;
  dqdc[51] = dcdc_fac;
  dqdc[52] = dcdc_fac;
  dqdc[53] = dcdc_fac;
  dqdc[54] = dcdc_fac;
  dqdc[55] = dcdc_fac;
  dqdc[56] = dcdc_fac;
  dqdc[57] = dcdc_fac;
  dqdc[58] = dcdc_fac;
  dqdc[59] = dcdc_fac;
  dqdc[60] = dcdc_fac;
  dqdc[61] = dcdc_fac;
  dqdc[62] = dcdc_fac;
  dqdc[63] = dcdc_fac;
  dqdc[64] = dcdc_fac;
  dqdc[65] = dcdc_fac;
  dqdc[66] = dcdc_fac;
  dqdc[67] = dcdc_fac;
  dqdc[68] = dcdc_fac;
  dqdc[69] = dcdc_fac;
  dqdc[70] = dcdc_fac;
  dqdc[71] = dcdc_fac;
  dqdc[72] = dcdc_fac;
  dqdc[73] = dcdc_fac;
  dqdc[74] = dcdc_fac;
  dqdc[75] = dcdc_fac;
  dqdc[76] = dcdc_fac;
  dqdc[77] = dcdc_fac;
  dqdc[78] = dcdc_fac;
  dqdc[79] = dcdc_fac;
  dqdc[80] = dcdc_fac;
  dqdc[81] = dcdc_fac;
  dqdc[82] = dcdc_fac;
  dqdc[83] = dcdc_fac;
  dqdc[84] = dcdc_fac;
  dqdc[85] = dcdc_fac;
  dqdc[86] = dcdc_fac;
  dqdc[87] = dcdc_fac;
  for (int k = 0; k < 88; k++) {
    J[89 * k + 0] -= dqdc[k];
    J[89 * k + 16] += dqdc[k];
    J[89 * k + 19] -= dqdc[k];
  }
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT

  // reaction 105: c2h2 + h (+M) <=> c2h3 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[1] + (5 - 1) * sc[5] + sc[6] + (3 - 1) * sc[8];
  // forward
  phi_f = sc[0] * sc[18];
  k_f = 311000 * exp(0.58 * logT - (1302.82794776842) * invT);
  dlnkfdT = 0.58 * invT + (1302.82794776842) * invT2;
  // pressure-fall-off
  k_0 = 2.254e+40 * exp(-7.269 * logT - (3309.65601099764) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -7.269 * invT + (3309.65601099764) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 1) * exp(-T / 1e-15);
  Fcent2 = 1 * exp(-T / 675);
  Fcent3 = exp(-1e+15 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 1e-15 - Fcent2 / 675 + Fcent3 * 1e+15 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[19];
  Kc = refCinv * exp(g_RT[0] + g_RT[18] - g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[18]) + (h_RT[19]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[0] -= q;  // h
  wdot[18] -= q; // c2h2
  wdot[19] += q; // c2h3
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac + k_f * sc[18];
  dqdc[1] = 2 * dcdc_fac;
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = 5 * dcdc_fac;
  dqdc[6] = 2 * dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = 3 * dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = dcdc_fac;
  dqdc[17] = dcdc_fac;
  dqdc[18] = dcdc_fac + k_f * sc[0];
  dqdc[19] = dcdc_fac - k_r;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  dqdc[47] = dcdc_fac;
  dqdc[48] = dcdc_fac;
  dqdc[49] = dcdc_fac;
  dqdc[50] = dcdc_fac;
  dqdc[51] = dcdc_fac;
  dqdc[52] = dcdc_fac;
  dqdc[53] = dcdc_fac;
  dqdc[54] = dcdc_fac;
  dqdc[55] = dcdc_fac;
  dqdc[56] = dcdc_fac;
  dqdc[57] = dcdc_fac;
  dqdc[58] = dcdc_fac;
  dqdc[59] = dcdc_fac;
  dqdc[60] = dcdc_fac;
  dqdc[61] = dcdc_fac;
  dqdc[62] = dcdc_fac;
  dqdc[63] = dcdc_fac;
  dqdc[64] = dcdc_fac;
  dqdc[65] = dcdc_fac;
  dqdc[66] = dcdc_fac;
  dqdc[67] = dcdc_fac;
  dqdc[68] = dcdc_fac;
  dqdc[69] = dcdc_fac;
  dqdc[70] = dcdc_fac;
  dqdc[71] = dcdc_fac;
  dqdc[72] = dcdc_fac;
  dqdc[73] = dcdc_fac;
  dqdc[74] = dcdc_fac;
  dqdc[75] = dcdc_fac;
  dqdc[76] = dcdc_fac;
  dqdc[77] = dcdc_fac;
  dqdc[78] = dcdc_fac;
  dqdc[79] = dcdc_fac;
  dqdc[80] = dcdc_fac;
  dqdc[81] = dcdc_fac;
  dqdc[82] = dcdc_fac;
  dqdc[83] = dcdc_fac;
  dqdc[84] = dcdc_fac;
  dqdc[85] = dcdc_fac;
  dqdc[86] = dcdc_fac;
  dqdc[87] = dcdc_fac;
  for (int k = 0; k < 88; k++) {
    J[89 * k + 0] -= dqdc[k];
    J[89 * k + 18] -= dqdc[k];
    J[89 * k + 19] += dqdc[k];
  }
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7850] -= dqdT; // dwdot[c2h2]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT

  // reaction 44: co + o (+M) <=> co2 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[1] + (12 - 1) * sc[5] + (1.9 - 1) * sc[6] +
          (3.8 - 1) * sc[8];
  // forward
  phi_f = sc[2] * sc[6];
  k_f = 18000 * exp(-(1199.66853127845) * invT);
  dlnkfdT = (1199.66853127845) * invT2;
  // pressure-fall-off
  k_0 = 1.35e+24 * exp(-2.788 * logT - (2108.98104638758) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -2.788 * invT + (2108.98104638758) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Lindemann form
  F = 1.0;
  // dlogFdlogPr is 0.0 and unused
  dlogFdT = 0.0;
  // reverse
  phi_r = sc[8];
  Kc = refCinv * exp(g_RT[2] + g_RT[6] - g_RT[8]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[6]) + (h_RT[8]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[2] -= q; // o
  wdot[6] -= q; // co
  wdot[8] += q; // co2
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = 2.5 * dcdc_fac;
  dqdc[2] = dcdc_fac + k_f * sc[6];
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = 12 * dcdc_fac;
  dqdc[6] = 1.9 * dcdc_fac + k_f * sc[2];
  dqdc[7] = dcdc_fac;
  dqdc[8] = 3.8 * dcdc_fac - k_r;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = dcdc_fac;
  dqdc[17] = dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  dqdc[47] = dcdc_fac;
  dqdc[48] = dcdc_fac;
  dqdc[49] = dcdc_fac;
  dqdc[50] = dcdc_fac;
  dqdc[51] = dcdc_fac;
  dqdc[52] = dcdc_fac;
  dqdc[53] = dcdc_fac;
  dqdc[54] = dcdc_fac;
  dqdc[55] = dcdc_fac;
  dqdc[56] = dcdc_fac;
  dqdc[57] = dcdc_fac;
  dqdc[58] = dcdc_fac;
  dqdc[59] = dcdc_fac;
  dqdc[60] = dcdc_fac;
  dqdc[61] = dcdc_fac;
  dqdc[62] = dcdc_fac;
  dqdc[63] = dcdc_fac;
  dqdc[64] = dcdc_fac;
  dqdc[65] = dcdc_fac;
  dqdc[66] = dcdc_fac;
  dqdc[67] = dcdc_fac;
  dqdc[68] = dcdc_fac;
  dqdc[69] = dcdc_fac;
  dqdc[70] = dcdc_fac;
  dqdc[71] = dcdc_fac;
  dqdc[72] = dcdc_fac;
  dqdc[73] = dcdc_fac;
  dqdc[74] = dcdc_fac;
  dqdc[75] = dcdc_fac;
  dqdc[76] = dcdc_fac;
  dqdc[77] = dcdc_fac;
  dqdc[78] = dcdc_fac;
  dqdc[79] = dcdc_fac;
  dqdc[80] = dcdc_fac;
  dqdc[81] = dcdc_fac;
  dqdc[82] = dcdc_fac;
  dqdc[83] = dcdc_fac;
  dqdc[84] = dcdc_fac;
  dqdc[85] = dcdc_fac;
  dqdc[86] = dcdc_fac;
  dqdc[87] = dcdc_fac;
  for (int k = 0; k < 88; k++) {
    J[89 * k + 2] -= dqdc[k];
    J[89 * k + 6] -= dqdc[k];
    J[89 * k + 8] += dqdc[k];
  }
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7840] += dqdT; // dwdot[co2]/dT

  // reaction 69: ch3o (+M) <=> ch2o + h (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[14];
  k_f = 54500000000000 * exp(-(6793.42498836372) * invT);
  dlnkfdT = (6793.42498836372) * invT2;
  // pressure-fall-off
  k_0 = 2.344e+25 * exp(-2.7 * logT - (15398.4299736244) * invT);
  Pr = 1e-6 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -2.7 * invT + (15398.4299736244) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Lindemann form
  F = 1.0;
  // dlogFdlogPr is 0.0 and unused
  dlogFdT = 0.0;
  // reverse
  phi_r = sc[0] * sc[13];
  Kc = refC * exp(-g_RT[0] - g_RT[13] + g_RT[14]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14]) + (h_RT[0] + h_RT[13]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[0] += q;  // h
  wdot[13] += q; // ch2o
  wdot[14] -= q; // ch3o
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac - k_r * sc[13];
  dqdc[1] = dcdc_fac;
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = dcdc_fac;
  dqdc[6] = dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac - k_r * sc[0];
  dqdc[14] = dcdc_fac + k_f;
  dqdc[15] = dcdc_fac;
  dqdc[16] = dcdc_fac;
  dqdc[17] = dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  dqdc[47] = dcdc_fac;
  dqdc[48] = dcdc_fac;
  dqdc[49] = dcdc_fac;
  dqdc[50] = dcdc_fac;
  dqdc[51] = dcdc_fac;
  dqdc[52] = dcdc_fac;
  dqdc[53] = dcdc_fac;
  dqdc[54] = dcdc_fac;
  dqdc[55] = dcdc_fac;
  dqdc[56] = dcdc_fac;
  dqdc[57] = dcdc_fac;
  dqdc[58] = dcdc_fac;
  dqdc[59] = dcdc_fac;
  dqdc[60] = dcdc_fac;
  dqdc[61] = dcdc_fac;
  dqdc[62] = dcdc_fac;
  dqdc[63] = dcdc_fac;
  dqdc[64] = dcdc_fac;
  dqdc[65] = dcdc_fac;
  dqdc[66] = dcdc_fac;
  dqdc[67] = dcdc_fac;
  dqdc[68] = dcdc_fac;
  dqdc[69] = dcdc_fac;
  dqdc[70] = dcdc_fac;
  dqdc[71] = dcdc_fac;
  dqdc[72] = dcdc_fac;
  dqdc[73] = dcdc_fac;
  dqdc[74] = dcdc_fac;
  dqdc[75] = dcdc_fac;
  dqdc[76] = dcdc_fac;
  dqdc[77] = dcdc_fac;
  dqdc[78] = dcdc_fac;
  dqdc[79] = dcdc_fac;
  dqdc[80] = dcdc_fac;
  dqdc[81] = dcdc_fac;
  dqdc[82] = dcdc_fac;
  dqdc[83] = dcdc_fac;
  dqdc[84] = dcdc_fac;
  dqdc[85] = dcdc_fac;
  dqdc[86] = dcdc_fac;
  dqdc[87] = dcdc_fac;
  for (int k = 0; k < 88; k++) {
    J[89 * k + 0] += dqdc[k];
    J[89 * k + 13] += dqdc[k];
    J[89 * k + 14] -= dqdc[k];
  }
  J[7832] += dqdT; // dwdot[h]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT
  J[7846] -= dqdT; // dwdot[ch3o]/dT

  // reaction 70: c2h4 (+M) <=> c2h2 + h2 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[16];
  k_f = 18000000000000 * exp(-(38244.4666011587) * invT);
  dlnkfdT = (38244.4666011587) * invT2;
  // pressure-fall-off
  k_0 = 1.5e+15 * exp(-(27899.8416022111) * invT);
  Pr = 1e-6 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = (27899.8416022111) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Lindemann form
  F = 1.0;
  // dlogFdlogPr is 0.0 and unused
  dlogFdT = 0.0;
  // reverse
  phi_r = sc[1] * sc[18];
  Kc = refC * exp(-g_RT[1] + g_RT[16] - g_RT[18]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[16]) + (h_RT[1] + h_RT[18]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] += q;  // h2
  wdot[16] -= q; // c2h4
  wdot[18] += q; // c2h2
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac - k_r * sc[18];
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = dcdc_fac;
  dqdc[6] = dcdc_fac;
  dqdc[7] = dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = dcdc_fac + k_f;
  dqdc[17] = dcdc_fac;
  dqdc[18] = dcdc_fac - k_r * sc[1];
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  dqdc[47] = dcdc_fac;
  dqdc[48] = dcdc_fac;
  dqdc[49] = dcdc_fac;
  dqdc[50] = dcdc_fac;
  dqdc[51] = dcdc_fac;
  dqdc[52] = dcdc_fac;
  dqdc[53] = dcdc_fac;
  dqdc[54] = dcdc_fac;
  dqdc[55] = dcdc_fac;
  dqdc[56] = dcdc_fac;
  dqdc[57] = dcdc_fac;
  dqdc[58] = dcdc_fac;
  dqdc[59] = dcdc_fac;
  dqdc[60] = dcdc_fac;
  dqdc[61] = dcdc_fac;
  dqdc[62] = dcdc_fac;
  dqdc[63] = dcdc_fac;
  dqdc[64] = dcdc_fac;
  dqdc[65] = dcdc_fac;
  dqdc[66] = dcdc_fac;
  dqdc[67] = dcdc_fac;
  dqdc[68] = dcdc_fac;
  dqdc[69] = dcdc_fac;
  dqdc[70] = dcdc_fac;
  dqdc[71] = dcdc_fac;
  dqdc[72] = dcdc_fac;
  dqdc[73] = dcdc_fac;
  dqdc[74] = dcdc_fac;
  dqdc[75] = dcdc_fac;
  dqdc[76] = dcdc_fac;
  dqdc[77] = dcdc_fac;
  dqdc[78] = dcdc_fac;
  dqdc[79] = dcdc_fac;
  dqdc[80] = dcdc_fac;
  dqdc[81] = dcdc_fac;
  dqdc[82] = dcdc_fac;
  dqdc[83] = dcdc_fac;
  dqdc[84] = dcdc_fac;
  dqdc[85] = dcdc_fac;
  dqdc[86] = dcdc_fac;
  dqdc[87] = dcdc_fac;
  for (int k = 0; k < 88; k++) {
    J[89 * k + 1] += dqdc[k];
    J[89 * k + 16] -= dqdc[k];
    J[89 * k + 18] += dqdc[k];
  }
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7850] += dqdT; // dwdot[c2h2]/dT

  // reaction 151: ch3co (+M) <=> ch3 + co (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[22];
  k_f = 3000000000000 * exp(-(8413.78265225491) * invT);
  dlnkfdT = (8413.78265225491) * invT2;
  // pressure-fall-off
  k_0 = 1.2e+15 * exp(-(6299.26622254348) * invT);
  Pr = 1e-6 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = (6299.26622254348) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Lindemann form
  F = 1.0;
  // dlogFdlogPr is 0.0 and unused
  dlogFdT = 0.0;
  // reverse
  phi_r = sc[6] * sc[9];
  Kc = refC * exp(-g_RT[6] - g_RT[9] + g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[22]) + (h_RT[6] + h_RT[9]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[6] += q;  // co
  wdot[9] += q;  // ch3
  wdot[22] -= q; // ch3co
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = dcdc_fac;
  dqdc[5] = dcdc_fac;
  dqdc[6] = dcdc_fac - k_r * sc[9];
  dqdc[7] = dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac - k_r * sc[6];
  dqdc[10] = dcdc_fac;
  dqdc[11] = dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = dcdc_fac;
  dqdc[16] = dcdc_fac;
  dqdc[17] = dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac + k_f;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  dqdc[47] = dcdc_fac;
  dqdc[48] = dcdc_fac;
  dqdc[49] = dcdc_fac;
  dqdc[50] = dcdc_fac;
  dqdc[51] = dcdc_fac;
  dqdc[52] = dcdc_fac;
  dqdc[53] = dcdc_fac;
  dqdc[54] = dcdc_fac;
  dqdc[55] = dcdc_fac;
  dqdc[56] = dcdc_fac;
  dqdc[57] = dcdc_fac;
  dqdc[58] = dcdc_fac;
  dqdc[59] = dcdc_fac;
  dqdc[60] = dcdc_fac;
  dqdc[61] = dcdc_fac;
  dqdc[62] = dcdc_fac;
  dqdc[63] = dcdc_fac;
  dqdc[64] = dcdc_fac;
  dqdc[65] = dcdc_fac;
  dqdc[66] = dcdc_fac;
  dqdc[67] = dcdc_fac;
  dqdc[68] = dcdc_fac;
  dqdc[69] = dcdc_fac;
  dqdc[70] = dcdc_fac;
  dqdc[71] = dcdc_fac;
  dqdc[72] = dcdc_fac;
  dqdc[73] = dcdc_fac;
  dqdc[74] = dcdc_fac;
  dqdc[75] = dcdc_fac;
  dqdc[76] = dcdc_fac;
  dqdc[77] = dcdc_fac;
  dqdc[78] = dcdc_fac;
  dqdc[79] = dcdc_fac;
  dqdc[80] = dcdc_fac;
  dqdc[81] = dcdc_fac;
  dqdc[82] = dcdc_fac;
  dqdc[83] = dcdc_fac;
  dqdc[84] = dcdc_fac;
  dqdc[85] = dcdc_fac;
  dqdc[86] = dcdc_fac;
  dqdc[87] = dcdc_fac;
  for (int k = 0; k < 88; k++) {
    J[89 * k + 6] += dqdc[k];
    J[89 * k + 9] += dqdc[k];
    J[89 * k + 22] -= dqdc[k];
  }
  J[7838] += dqdT; // dwdot[co]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7854] -= dqdT; // dwdot[ch3co]/dT

  // reaction 21: hco + M => co + h + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[1] + (12 - 1) * sc[5] + (1.9 - 1) * sc[6] +
          (3.8 - 1) * sc[8];
  // forward
  phi_f = sc[7];
  k_f = 186000000000 * exp(-1 * logT - (8554.68331868023) * invT);
  dlnkfdT = -1 * invT + (8554.68331868023) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q; // h
  wdot[6] += q; // co
  wdot[7] -= q; // hco
  // for convenience
  k_f *= alpha;
  dqdc[0] = q_nocor;
  dqdc[1] = 2.5 * q_nocor;
  dqdc[2] = q_nocor;
  dqdc[3] = q_nocor;
  dqdc[4] = q_nocor;
  dqdc[5] = 12 * q_nocor;
  dqdc[6] = 1.9 * q_nocor;
  dqdc[7] = q_nocor + k_f;
  dqdc[8] = 3.8 * q_nocor;
  dqdc[9] = q_nocor;
  dqdc[10] = q_nocor;
  dqdc[11] = q_nocor;
  dqdc[12] = q_nocor;
  dqdc[13] = q_nocor;
  dqdc[14] = q_nocor;
  dqdc[15] = q_nocor;
  dqdc[16] = q_nocor;
  dqdc[17] = q_nocor;
  dqdc[18] = q_nocor;
  dqdc[19] = q_nocor;
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = q_nocor;
  dqdc[26] = q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  dqdc[34] = q_nocor;
  dqdc[35] = q_nocor;
  dqdc[36] = q_nocor;
  dqdc[37] = q_nocor;
  dqdc[38] = q_nocor;
  dqdc[39] = q_nocor;
  dqdc[40] = q_nocor;
  dqdc[41] = q_nocor;
  dqdc[42] = q_nocor;
  dqdc[43] = q_nocor;
  dqdc[44] = q_nocor;
  dqdc[45] = q_nocor;
  dqdc[46] = q_nocor;
  dqdc[47] = q_nocor;
  dqdc[48] = q_nocor;
  dqdc[49] = q_nocor;
  dqdc[50] = q_nocor;
  dqdc[51] = q_nocor;
  dqdc[52] = q_nocor;
  dqdc[53] = q_nocor;
  dqdc[54] = q_nocor;
  dqdc[55] = q_nocor;
  dqdc[56] = q_nocor;
  dqdc[57] = q_nocor;
  dqdc[58] = q_nocor;
  dqdc[59] = q_nocor;
  dqdc[60] = q_nocor;
  dqdc[61] = q_nocor;
  dqdc[62] = q_nocor;
  dqdc[63] = q_nocor;
  dqdc[64] = q_nocor;
  dqdc[65] = q_nocor;
  dqdc[66] = q_nocor;
  dqdc[67] = q_nocor;
  dqdc[68] = q_nocor;
  dqdc[69] = q_nocor;
  dqdc[70] = q_nocor;
  dqdc[71] = q_nocor;
  dqdc[72] = q_nocor;
  dqdc[73] = q_nocor;
  dqdc[74] = q_nocor;
  dqdc[75] = q_nocor;
  dqdc[76] = q_nocor;
  dqdc[77] = q_nocor;
  dqdc[78] = q_nocor;
  dqdc[79] = q_nocor;
  dqdc[80] = q_nocor;
  dqdc[81] = q_nocor;
  dqdc[82] = q_nocor;
  dqdc[83] = q_nocor;
  dqdc[84] = q_nocor;
  dqdc[85] = q_nocor;
  dqdc[86] = q_nocor;
  dqdc[87] = q_nocor;
  for (int k = 0; k < 88; k++) {
    J[89 * k + 0] += dqdc[k];
    J[89 * k + 6] += dqdc[k];
    J[89 * k + 7] -= dqdc[k];
  }
  J[7832] += dqdT; // dwdot[h]/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7839] -= dqdT; // dwdot[hco]/dT

  // reaction 22: co + h + M => hco + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[1] + (12 - 1) * sc[5] + (1.9 - 1) * sc[6] +
          (3.8 - 1) * sc[8];
  // forward
  phi_f = sc[0] * sc[6];
  k_f = 64.67 * exp(-(-222.421766285686) * invT);
  dlnkfdT = (-222.421766285686) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q; // h
  wdot[6] -= q; // co
  wdot[7] += q; // hco
  // for convenience
  k_f *= alpha;
  dqdc[0] = q_nocor + k_f * sc[6];
  dqdc[1] = 2.5 * q_nocor;
  dqdc[2] = q_nocor;
  dqdc[3] = q_nocor;
  dqdc[4] = q_nocor;
  dqdc[5] = 12 * q_nocor;
  dqdc[6] = 1.9 * q_nocor + k_f * sc[0];
  dqdc[7] = q_nocor;
  dqdc[8] = 3.8 * q_nocor;
  dqdc[9] = q_nocor;
  dqdc[10] = q_nocor;
  dqdc[11] = q_nocor;
  dqdc[12] = q_nocor;
  dqdc[13] = q_nocor;
  dqdc[14] = q_nocor;
  dqdc[15] = q_nocor;
  dqdc[16] = q_nocor;
  dqdc[17] = q_nocor;
  dqdc[18] = q_nocor;
  dqdc[19] = q_nocor;
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = q_nocor;
  dqdc[26] = q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  dqdc[34] = q_nocor;
  dqdc[35] = q_nocor;
  dqdc[36] = q_nocor;
  dqdc[37] = q_nocor;
  dqdc[38] = q_nocor;
  dqdc[39] = q_nocor;
  dqdc[40] = q_nocor;
  dqdc[41] = q_nocor;
  dqdc[42] = q_nocor;
  dqdc[43] = q_nocor;
  dqdc[44] = q_nocor;
  dqdc[45] = q_nocor;
  dqdc[46] = q_nocor;
  dqdc[47] = q_nocor;
  dqdc[48] = q_nocor;
  dqdc[49] = q_nocor;
  dqdc[50] = q_nocor;
  dqdc[51] = q_nocor;
  dqdc[52] = q_nocor;
  dqdc[53] = q_nocor;
  dqdc[54] = q_nocor;
  dqdc[55] = q_nocor;
  dqdc[56] = q_nocor;
  dqdc[57] = q_nocor;
  dqdc[58] = q_nocor;
  dqdc[59] = q_nocor;
  dqdc[60] = q_nocor;
  dqdc[61] = q_nocor;
  dqdc[62] = q_nocor;
  dqdc[63] = q_nocor;
  dqdc[64] = q_nocor;
  dqdc[65] = q_nocor;
  dqdc[66] = q_nocor;
  dqdc[67] = q_nocor;
  dqdc[68] = q_nocor;
  dqdc[69] = q_nocor;
  dqdc[70] = q_nocor;
  dqdc[71] = q_nocor;
  dqdc[72] = q_nocor;
  dqdc[73] = q_nocor;
  dqdc[74] = q_nocor;
  dqdc[75] = q_nocor;
  dqdc[76] = q_nocor;
  dqdc[77] = q_nocor;
  dqdc[78] = q_nocor;
  dqdc[79] = q_nocor;
  dqdc[80] = q_nocor;
  dqdc[81] = q_nocor;
  dqdc[82] = q_nocor;
  dqdc[83] = q_nocor;
  dqdc[84] = q_nocor;
  dqdc[85] = q_nocor;
  dqdc[86] = q_nocor;
  dqdc[87] = q_nocor;
  for (int k = 0; k < 88; k++) {
    J[89 * k + 0] -= dqdc[k];
    J[89 * k + 6] -= dqdc[k];
    J[89 * k + 7] += dqdc[k];
  }
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7839] += dqdT; // dwdot[hco]/dT

  // reaction 41: h2o + M => h + oh + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[1] + (12 - 1) * sc[5] + (1.9 - 1) * sc[6] +
          (3.8 - 1) * sc[8];
  // forward
  phi_f = sc[5];
  k_f = 1.837e+21 * exp(-3 * logT - (61694.3632276586) * invT);
  dlnkfdT = -3 * invT + (61694.3632276586) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q; // h
  wdot[4] += q; // oh
  wdot[5] -= q; // h2o
  // for convenience
  k_f *= alpha;
  dqdc[0] = q_nocor;
  dqdc[1] = 2.5 * q_nocor;
  dqdc[2] = q_nocor;
  dqdc[3] = q_nocor;
  dqdc[4] = q_nocor;
  dqdc[5] = 12 * q_nocor + k_f;
  dqdc[6] = 1.9 * q_nocor;
  dqdc[7] = q_nocor;
  dqdc[8] = 3.8 * q_nocor;
  dqdc[9] = q_nocor;
  dqdc[10] = q_nocor;
  dqdc[11] = q_nocor;
  dqdc[12] = q_nocor;
  dqdc[13] = q_nocor;
  dqdc[14] = q_nocor;
  dqdc[15] = q_nocor;
  dqdc[16] = q_nocor;
  dqdc[17] = q_nocor;
  dqdc[18] = q_nocor;
  dqdc[19] = q_nocor;
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = q_nocor;
  dqdc[26] = q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  dqdc[34] = q_nocor;
  dqdc[35] = q_nocor;
  dqdc[36] = q_nocor;
  dqdc[37] = q_nocor;
  dqdc[38] = q_nocor;
  dqdc[39] = q_nocor;
  dqdc[40] = q_nocor;
  dqdc[41] = q_nocor;
  dqdc[42] = q_nocor;
  dqdc[43] = q_nocor;
  dqdc[44] = q_nocor;
  dqdc[45] = q_nocor;
  dqdc[46] = q_nocor;
  dqdc[47] = q_nocor;
  dqdc[48] = q_nocor;
  dqdc[49] = q_nocor;
  dqdc[50] = q_nocor;
  dqdc[51] = q_nocor;
  dqdc[52] = q_nocor;
  dqdc[53] = q_nocor;
  dqdc[54] = q_nocor;
  dqdc[55] = q_nocor;
  dqdc[56] = q_nocor;
  dqdc[57] = q_nocor;
  dqdc[58] = q_nocor;
  dqdc[59] = q_nocor;
  dqdc[60] = q_nocor;
  dqdc[61] = q_nocor;
  dqdc[62] = q_nocor;
  dqdc[63] = q_nocor;
  dqdc[64] = q_nocor;
  dqdc[65] = q_nocor;
  dqdc[66] = q_nocor;
  dqdc[67] = q_nocor;
  dqdc[68] = q_nocor;
  dqdc[69] = q_nocor;
  dqdc[70] = q_nocor;
  dqdc[71] = q_nocor;
  dqdc[72] = q_nocor;
  dqdc[73] = q_nocor;
  dqdc[74] = q_nocor;
  dqdc[75] = q_nocor;
  dqdc[76] = q_nocor;
  dqdc[77] = q_nocor;
  dqdc[78] = q_nocor;
  dqdc[79] = q_nocor;
  dqdc[80] = q_nocor;
  dqdc[81] = q_nocor;
  dqdc[82] = q_nocor;
  dqdc[83] = q_nocor;
  dqdc[84] = q_nocor;
  dqdc[85] = q_nocor;
  dqdc[86] = q_nocor;
  dqdc[87] = q_nocor;
  for (int k = 0; k < 88; k++) {
    J[89 * k + 0] += dqdc[k];
    J[89 * k + 4] += dqdc[k];
    J[89 * k + 5] -= dqdc[k];
  }
  J[7832] += dqdT; // dwdot[h]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT

  // reaction 42: h + oh + M => h2o + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[1] + (12 - 1) * sc[5] + (1.9 - 1) * sc[6] +
          (3.8 - 1) * sc[8];
  // forward
  phi_f = sc[0] * sc[4];
  k_f = 22500000000 * exp(-2 * logT);
  dlnkfdT = -2 * invT;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q; // h
  wdot[4] -= q; // oh
  wdot[5] += q; // h2o
  // for convenience
  k_f *= alpha;
  dqdc[0] = q_nocor + k_f * sc[4];
  dqdc[1] = 2.5 * q_nocor;
  dqdc[2] = q_nocor;
  dqdc[3] = q_nocor;
  dqdc[4] = q_nocor + k_f * sc[0];
  dqdc[5] = 12 * q_nocor;
  dqdc[6] = 1.9 * q_nocor;
  dqdc[7] = q_nocor;
  dqdc[8] = 3.8 * q_nocor;
  dqdc[9] = q_nocor;
  dqdc[10] = q_nocor;
  dqdc[11] = q_nocor;
  dqdc[12] = q_nocor;
  dqdc[13] = q_nocor;
  dqdc[14] = q_nocor;
  dqdc[15] = q_nocor;
  dqdc[16] = q_nocor;
  dqdc[17] = q_nocor;
  dqdc[18] = q_nocor;
  dqdc[19] = q_nocor;
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = q_nocor;
  dqdc[26] = q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  dqdc[34] = q_nocor;
  dqdc[35] = q_nocor;
  dqdc[36] = q_nocor;
  dqdc[37] = q_nocor;
  dqdc[38] = q_nocor;
  dqdc[39] = q_nocor;
  dqdc[40] = q_nocor;
  dqdc[41] = q_nocor;
  dqdc[42] = q_nocor;
  dqdc[43] = q_nocor;
  dqdc[44] = q_nocor;
  dqdc[45] = q_nocor;
  dqdc[46] = q_nocor;
  dqdc[47] = q_nocor;
  dqdc[48] = q_nocor;
  dqdc[49] = q_nocor;
  dqdc[50] = q_nocor;
  dqdc[51] = q_nocor;
  dqdc[52] = q_nocor;
  dqdc[53] = q_nocor;
  dqdc[54] = q_nocor;
  dqdc[55] = q_nocor;
  dqdc[56] = q_nocor;
  dqdc[57] = q_nocor;
  dqdc[58] = q_nocor;
  dqdc[59] = q_nocor;
  dqdc[60] = q_nocor;
  dqdc[61] = q_nocor;
  dqdc[62] = q_nocor;
  dqdc[63] = q_nocor;
  dqdc[64] = q_nocor;
  dqdc[65] = q_nocor;
  dqdc[66] = q_nocor;
  dqdc[67] = q_nocor;
  dqdc[68] = q_nocor;
  dqdc[69] = q_nocor;
  dqdc[70] = q_nocor;
  dqdc[71] = q_nocor;
  dqdc[72] = q_nocor;
  dqdc[73] = q_nocor;
  dqdc[74] = q_nocor;
  dqdc[75] = q_nocor;
  dqdc[76] = q_nocor;
  dqdc[77] = q_nocor;
  dqdc[78] = q_nocor;
  dqdc[79] = q_nocor;
  dqdc[80] = q_nocor;
  dqdc[81] = q_nocor;
  dqdc[82] = q_nocor;
  dqdc[83] = q_nocor;
  dqdc[84] = q_nocor;
  dqdc[85] = q_nocor;
  dqdc[86] = q_nocor;
  dqdc[87] = q_nocor;
  for (int k = 0; k < 88; k++) {
    J[89 * k + 0] -= dqdc[k];
    J[89 * k + 4] -= dqdc[k];
    J[89 * k + 5] += dqdc[k];
  }
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT

  // reaction 51: ch2o + M => h + hco + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[13];
  k_f = 6.283e+23 * exp(-3.57 * logT - (46899.7932529999) * invT);
  dlnkfdT = -3.57 * invT + (46899.7932529999) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[7] += q;  // hco
  wdot[13] -= q; // ch2o
  // for convenience
  k_f *= alpha;
  dqdc[0] = q_nocor;
  dqdc[1] = q_nocor;
  dqdc[2] = q_nocor;
  dqdc[3] = q_nocor;
  dqdc[4] = q_nocor;
  dqdc[5] = q_nocor;
  dqdc[6] = q_nocor;
  dqdc[7] = q_nocor;
  dqdc[8] = q_nocor;
  dqdc[9] = q_nocor;
  dqdc[10] = q_nocor;
  dqdc[11] = q_nocor;
  dqdc[12] = q_nocor;
  dqdc[13] = q_nocor + k_f;
  dqdc[14] = q_nocor;
  dqdc[15] = q_nocor;
  dqdc[16] = q_nocor;
  dqdc[17] = q_nocor;
  dqdc[18] = q_nocor;
  dqdc[19] = q_nocor;
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = q_nocor;
  dqdc[26] = q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  dqdc[34] = q_nocor;
  dqdc[35] = q_nocor;
  dqdc[36] = q_nocor;
  dqdc[37] = q_nocor;
  dqdc[38] = q_nocor;
  dqdc[39] = q_nocor;
  dqdc[40] = q_nocor;
  dqdc[41] = q_nocor;
  dqdc[42] = q_nocor;
  dqdc[43] = q_nocor;
  dqdc[44] = q_nocor;
  dqdc[45] = q_nocor;
  dqdc[46] = q_nocor;
  dqdc[47] = q_nocor;
  dqdc[48] = q_nocor;
  dqdc[49] = q_nocor;
  dqdc[50] = q_nocor;
  dqdc[51] = q_nocor;
  dqdc[52] = q_nocor;
  dqdc[53] = q_nocor;
  dqdc[54] = q_nocor;
  dqdc[55] = q_nocor;
  dqdc[56] = q_nocor;
  dqdc[57] = q_nocor;
  dqdc[58] = q_nocor;
  dqdc[59] = q_nocor;
  dqdc[60] = q_nocor;
  dqdc[61] = q_nocor;
  dqdc[62] = q_nocor;
  dqdc[63] = q_nocor;
  dqdc[64] = q_nocor;
  dqdc[65] = q_nocor;
  dqdc[66] = q_nocor;
  dqdc[67] = q_nocor;
  dqdc[68] = q_nocor;
  dqdc[69] = q_nocor;
  dqdc[70] = q_nocor;
  dqdc[71] = q_nocor;
  dqdc[72] = q_nocor;
  dqdc[73] = q_nocor;
  dqdc[74] = q_nocor;
  dqdc[75] = q_nocor;
  dqdc[76] = q_nocor;
  dqdc[77] = q_nocor;
  dqdc[78] = q_nocor;
  dqdc[79] = q_nocor;
  dqdc[80] = q_nocor;
  dqdc[81] = q_nocor;
  dqdc[82] = q_nocor;
  dqdc[83] = q_nocor;
  dqdc[84] = q_nocor;
  dqdc[85] = q_nocor;
  dqdc[86] = q_nocor;
  dqdc[87] = q_nocor;
  for (int k = 0; k < 88; k++) {
    J[89 * k + 0] += dqdc[k];
    J[89 * k + 7] += dqdc[k];
    J[89 * k + 13] -= dqdc[k];
  }
  J[7832] += dqdT; // dwdot[h]/dT
  J[7839] += dqdT; // dwdot[hco]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT

  // reaction 52: h + hco + M => ch2o + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[0] * sc[7];
  k_f = 2660000000000 * exp(-2.57 * logT - (214.873516298615) * invT);
  dlnkfdT = -2.57 * invT + (214.873516298615) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[7] -= q;  // hco
  wdot[13] += q; // ch2o
  // for convenience
  k_f *= alpha;
  dqdc[0] = q_nocor + k_f * sc[7];
  dqdc[1] = q_nocor;
  dqdc[2] = q_nocor;
  dqdc[3] = q_nocor;
  dqdc[4] = q_nocor;
  dqdc[5] = q_nocor;
  dqdc[6] = q_nocor;
  dqdc[7] = q_nocor + k_f * sc[0];
  dqdc[8] = q_nocor;
  dqdc[9] = q_nocor;
  dqdc[10] = q_nocor;
  dqdc[11] = q_nocor;
  dqdc[12] = q_nocor;
  dqdc[13] = q_nocor;
  dqdc[14] = q_nocor;
  dqdc[15] = q_nocor;
  dqdc[16] = q_nocor;
  dqdc[17] = q_nocor;
  dqdc[18] = q_nocor;
  dqdc[19] = q_nocor;
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = q_nocor;
  dqdc[26] = q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  dqdc[34] = q_nocor;
  dqdc[35] = q_nocor;
  dqdc[36] = q_nocor;
  dqdc[37] = q_nocor;
  dqdc[38] = q_nocor;
  dqdc[39] = q_nocor;
  dqdc[40] = q_nocor;
  dqdc[41] = q_nocor;
  dqdc[42] = q_nocor;
  dqdc[43] = q_nocor;
  dqdc[44] = q_nocor;
  dqdc[45] = q_nocor;
  dqdc[46] = q_nocor;
  dqdc[47] = q_nocor;
  dqdc[48] = q_nocor;
  dqdc[49] = q_nocor;
  dqdc[50] = q_nocor;
  dqdc[51] = q_nocor;
  dqdc[52] = q_nocor;
  dqdc[53] = q_nocor;
  dqdc[54] = q_nocor;
  dqdc[55] = q_nocor;
  dqdc[56] = q_nocor;
  dqdc[57] = q_nocor;
  dqdc[58] = q_nocor;
  dqdc[59] = q_nocor;
  dqdc[60] = q_nocor;
  dqdc[61] = q_nocor;
  dqdc[62] = q_nocor;
  dqdc[63] = q_nocor;
  dqdc[64] = q_nocor;
  dqdc[65] = q_nocor;
  dqdc[66] = q_nocor;
  dqdc[67] = q_nocor;
  dqdc[68] = q_nocor;
  dqdc[69] = q_nocor;
  dqdc[70] = q_nocor;
  dqdc[71] = q_nocor;
  dqdc[72] = q_nocor;
  dqdc[73] = q_nocor;
  dqdc[74] = q_nocor;
  dqdc[75] = q_nocor;
  dqdc[76] = q_nocor;
  dqdc[77] = q_nocor;
  dqdc[78] = q_nocor;
  dqdc[79] = q_nocor;
  dqdc[80] = q_nocor;
  dqdc[81] = q_nocor;
  dqdc[82] = q_nocor;
  dqdc[83] = q_nocor;
  dqdc[84] = q_nocor;
  dqdc[85] = q_nocor;
  dqdc[86] = q_nocor;
  dqdc[87] = q_nocor;
  for (int k = 0; k < 88; k++) {
    J[89 * k + 0] -= dqdc[k];
    J[89 * k + 7] -= dqdc[k];
    J[89 * k + 13] += dqdc[k];
  }
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7839] -= dqdT; // dwdot[hco]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT

  // reaction 96: oh + M => h + o + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[1] + (12 - 1) * sc[5] + (1.9 - 1) * sc[6] +
          (3.8 - 1) * sc[8];
  // forward
  phi_f = sc[4];
  k_f = 3.909e+16 * exp(-2 * logT - (52988.714909237) * invT);
  dlnkfdT = -2 * invT + (52988.714909237) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q; // h
  wdot[2] += q; // o
  wdot[4] -= q; // oh
  // for convenience
  k_f *= alpha;
  dqdc[0] = q_nocor;
  dqdc[1] = 2.5 * q_nocor;
  dqdc[2] = q_nocor;
  dqdc[3] = q_nocor;
  dqdc[4] = q_nocor + k_f;
  dqdc[5] = 12 * q_nocor;
  dqdc[6] = 1.9 * q_nocor;
  dqdc[7] = q_nocor;
  dqdc[8] = 3.8 * q_nocor;
  dqdc[9] = q_nocor;
  dqdc[10] = q_nocor;
  dqdc[11] = q_nocor;
  dqdc[12] = q_nocor;
  dqdc[13] = q_nocor;
  dqdc[14] = q_nocor;
  dqdc[15] = q_nocor;
  dqdc[16] = q_nocor;
  dqdc[17] = q_nocor;
  dqdc[18] = q_nocor;
  dqdc[19] = q_nocor;
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = q_nocor;
  dqdc[26] = q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  dqdc[34] = q_nocor;
  dqdc[35] = q_nocor;
  dqdc[36] = q_nocor;
  dqdc[37] = q_nocor;
  dqdc[38] = q_nocor;
  dqdc[39] = q_nocor;
  dqdc[40] = q_nocor;
  dqdc[41] = q_nocor;
  dqdc[42] = q_nocor;
  dqdc[43] = q_nocor;
  dqdc[44] = q_nocor;
  dqdc[45] = q_nocor;
  dqdc[46] = q_nocor;
  dqdc[47] = q_nocor;
  dqdc[48] = q_nocor;
  dqdc[49] = q_nocor;
  dqdc[50] = q_nocor;
  dqdc[51] = q_nocor;
  dqdc[52] = q_nocor;
  dqdc[53] = q_nocor;
  dqdc[54] = q_nocor;
  dqdc[55] = q_nocor;
  dqdc[56] = q_nocor;
  dqdc[57] = q_nocor;
  dqdc[58] = q_nocor;
  dqdc[59] = q_nocor;
  dqdc[60] = q_nocor;
  dqdc[61] = q_nocor;
  dqdc[62] = q_nocor;
  dqdc[63] = q_nocor;
  dqdc[64] = q_nocor;
  dqdc[65] = q_nocor;
  dqdc[66] = q_nocor;
  dqdc[67] = q_nocor;
  dqdc[68] = q_nocor;
  dqdc[69] = q_nocor;
  dqdc[70] = q_nocor;
  dqdc[71] = q_nocor;
  dqdc[72] = q_nocor;
  dqdc[73] = q_nocor;
  dqdc[74] = q_nocor;
  dqdc[75] = q_nocor;
  dqdc[76] = q_nocor;
  dqdc[77] = q_nocor;
  dqdc[78] = q_nocor;
  dqdc[79] = q_nocor;
  dqdc[80] = q_nocor;
  dqdc[81] = q_nocor;
  dqdc[82] = q_nocor;
  dqdc[83] = q_nocor;
  dqdc[84] = q_nocor;
  dqdc[85] = q_nocor;
  dqdc[86] = q_nocor;
  dqdc[87] = q_nocor;
  for (int k = 0; k < 88; k++) {
    J[89 * k + 0] += dqdc[k];
    J[89 * k + 2] += dqdc[k];
    J[89 * k + 4] -= dqdc[k];
  }
  J[7832] += dqdT; // dwdot[h]/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT

  // reaction 97: h + o + M => oh + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[1] + (12 - 1) * sc[5] + (1.9 - 1) * sc[6] +
          (3.8 - 1) * sc[8];
  // forward
  phi_f = sc[0] * sc[2];
  k_f = 4720000 * exp(-1 * logT);
  dlnkfdT = -1 * invT;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q; // h
  wdot[2] -= q; // o
  wdot[4] += q; // oh
  // for convenience
  k_f *= alpha;
  dqdc[0] = q_nocor + k_f * sc[2];
  dqdc[1] = 2.5 * q_nocor;
  dqdc[2] = q_nocor + k_f * sc[0];
  dqdc[3] = q_nocor;
  dqdc[4] = q_nocor;
  dqdc[5] = 12 * q_nocor;
  dqdc[6] = 1.9 * q_nocor;
  dqdc[7] = q_nocor;
  dqdc[8] = 3.8 * q_nocor;
  dqdc[9] = q_nocor;
  dqdc[10] = q_nocor;
  dqdc[11] = q_nocor;
  dqdc[12] = q_nocor;
  dqdc[13] = q_nocor;
  dqdc[14] = q_nocor;
  dqdc[15] = q_nocor;
  dqdc[16] = q_nocor;
  dqdc[17] = q_nocor;
  dqdc[18] = q_nocor;
  dqdc[19] = q_nocor;
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = q_nocor;
  dqdc[26] = q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  dqdc[34] = q_nocor;
  dqdc[35] = q_nocor;
  dqdc[36] = q_nocor;
  dqdc[37] = q_nocor;
  dqdc[38] = q_nocor;
  dqdc[39] = q_nocor;
  dqdc[40] = q_nocor;
  dqdc[41] = q_nocor;
  dqdc[42] = q_nocor;
  dqdc[43] = q_nocor;
  dqdc[44] = q_nocor;
  dqdc[45] = q_nocor;
  dqdc[46] = q_nocor;
  dqdc[47] = q_nocor;
  dqdc[48] = q_nocor;
  dqdc[49] = q_nocor;
  dqdc[50] = q_nocor;
  dqdc[51] = q_nocor;
  dqdc[52] = q_nocor;
  dqdc[53] = q_nocor;
  dqdc[54] = q_nocor;
  dqdc[55] = q_nocor;
  dqdc[56] = q_nocor;
  dqdc[57] = q_nocor;
  dqdc[58] = q_nocor;
  dqdc[59] = q_nocor;
  dqdc[60] = q_nocor;
  dqdc[61] = q_nocor;
  dqdc[62] = q_nocor;
  dqdc[63] = q_nocor;
  dqdc[64] = q_nocor;
  dqdc[65] = q_nocor;
  dqdc[66] = q_nocor;
  dqdc[67] = q_nocor;
  dqdc[68] = q_nocor;
  dqdc[69] = q_nocor;
  dqdc[70] = q_nocor;
  dqdc[71] = q_nocor;
  dqdc[72] = q_nocor;
  dqdc[73] = q_nocor;
  dqdc[74] = q_nocor;
  dqdc[75] = q_nocor;
  dqdc[76] = q_nocor;
  dqdc[77] = q_nocor;
  dqdc[78] = q_nocor;
  dqdc[79] = q_nocor;
  dqdc[80] = q_nocor;
  dqdc[81] = q_nocor;
  dqdc[82] = q_nocor;
  dqdc[83] = q_nocor;
  dqdc[84] = q_nocor;
  dqdc[85] = q_nocor;
  dqdc[86] = q_nocor;
  dqdc[87] = q_nocor;
  for (int k = 0; k < 88; k++) {
    J[89 * k + 0] -= dqdc[k];
    J[89 * k + 2] -= dqdc[k];
    J[89 * k + 4] += dqdc[k];
  }
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7836] += dqdT; // dwdot[oh]/dT

  // reaction 98: o2 + M => 2 o + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[1] + (12 - 1) * sc[5] + (1.9 - 1) * sc[6] +
          (3.8 - 1) * sc[8];
  // forward
  phi_f = sc[3];
  k_f = 647300000000000 * exp(-1.5 * logT - (61140.8248952734) * invT);
  dlnkfdT = -1.5 * invT + (61140.8248952734) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += 2 * q; // o
  wdot[3] -= q;     // o2
  // for convenience
  k_f *= alpha;
  dqdc[0] = q_nocor;
  dqdc[1] = 2.5 * q_nocor;
  dqdc[2] = q_nocor;
  dqdc[3] = q_nocor + k_f;
  dqdc[4] = q_nocor;
  dqdc[5] = 12 * q_nocor;
  dqdc[6] = 1.9 * q_nocor;
  dqdc[7] = q_nocor;
  dqdc[8] = 3.8 * q_nocor;
  dqdc[9] = q_nocor;
  dqdc[10] = q_nocor;
  dqdc[11] = q_nocor;
  dqdc[12] = q_nocor;
  dqdc[13] = q_nocor;
  dqdc[14] = q_nocor;
  dqdc[15] = q_nocor;
  dqdc[16] = q_nocor;
  dqdc[17] = q_nocor;
  dqdc[18] = q_nocor;
  dqdc[19] = q_nocor;
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = q_nocor;
  dqdc[26] = q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  dqdc[34] = q_nocor;
  dqdc[35] = q_nocor;
  dqdc[36] = q_nocor;
  dqdc[37] = q_nocor;
  dqdc[38] = q_nocor;
  dqdc[39] = q_nocor;
  dqdc[40] = q_nocor;
  dqdc[41] = q_nocor;
  dqdc[42] = q_nocor;
  dqdc[43] = q_nocor;
  dqdc[44] = q_nocor;
  dqdc[45] = q_nocor;
  dqdc[46] = q_nocor;
  dqdc[47] = q_nocor;
  dqdc[48] = q_nocor;
  dqdc[49] = q_nocor;
  dqdc[50] = q_nocor;
  dqdc[51] = q_nocor;
  dqdc[52] = q_nocor;
  dqdc[53] = q_nocor;
  dqdc[54] = q_nocor;
  dqdc[55] = q_nocor;
  dqdc[56] = q_nocor;
  dqdc[57] = q_nocor;
  dqdc[58] = q_nocor;
  dqdc[59] = q_nocor;
  dqdc[60] = q_nocor;
  dqdc[61] = q_nocor;
  dqdc[62] = q_nocor;
  dqdc[63] = q_nocor;
  dqdc[64] = q_nocor;
  dqdc[65] = q_nocor;
  dqdc[66] = q_nocor;
  dqdc[67] = q_nocor;
  dqdc[68] = q_nocor;
  dqdc[69] = q_nocor;
  dqdc[70] = q_nocor;
  dqdc[71] = q_nocor;
  dqdc[72] = q_nocor;
  dqdc[73] = q_nocor;
  dqdc[74] = q_nocor;
  dqdc[75] = q_nocor;
  dqdc[76] = q_nocor;
  dqdc[77] = q_nocor;
  dqdc[78] = q_nocor;
  dqdc[79] = q_nocor;
  dqdc[80] = q_nocor;
  dqdc[81] = q_nocor;
  dqdc[82] = q_nocor;
  dqdc[83] = q_nocor;
  dqdc[84] = q_nocor;
  dqdc[85] = q_nocor;
  dqdc[86] = q_nocor;
  dqdc[87] = q_nocor;
  for (int k = 0; k < 88; k++) {
    J[89 * k + 2] += 2 * dqdc[k];
    J[89 * k + 3] -= dqdc[k];
  }
  J[7834] += 2 * dqdT; // dwdot[o]/dT
  J[7835] -= dqdT;     // dwdot[o2]/dT

  // reaction 99: 2 o + M => o2 + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[1] + (12 - 1) * sc[5] + (1.9 - 1) * sc[6] +
          (3.8 - 1) * sc[8];
  // forward
  phi_f = (sc[2] * sc[2]);
  k_f = 6170 * exp(-0.5 * logT);
  dlnkfdT = -0.5 * invT;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= 2 * q; // o
  wdot[3] += q;     // o2
  // for convenience
  k_f *= alpha;
  dqdc[0] = q_nocor;
  dqdc[1] = 2.5 * q_nocor;
  dqdc[2] = q_nocor + k_f * 2.000000 * sc[2];
  dqdc[3] = q_nocor;
  dqdc[4] = q_nocor;
  dqdc[5] = 12 * q_nocor;
  dqdc[6] = 1.9 * q_nocor;
  dqdc[7] = q_nocor;
  dqdc[8] = 3.8 * q_nocor;
  dqdc[9] = q_nocor;
  dqdc[10] = q_nocor;
  dqdc[11] = q_nocor;
  dqdc[12] = q_nocor;
  dqdc[13] = q_nocor;
  dqdc[14] = q_nocor;
  dqdc[15] = q_nocor;
  dqdc[16] = q_nocor;
  dqdc[17] = q_nocor;
  dqdc[18] = q_nocor;
  dqdc[19] = q_nocor;
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = q_nocor;
  dqdc[26] = q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  dqdc[34] = q_nocor;
  dqdc[35] = q_nocor;
  dqdc[36] = q_nocor;
  dqdc[37] = q_nocor;
  dqdc[38] = q_nocor;
  dqdc[39] = q_nocor;
  dqdc[40] = q_nocor;
  dqdc[41] = q_nocor;
  dqdc[42] = q_nocor;
  dqdc[43] = q_nocor;
  dqdc[44] = q_nocor;
  dqdc[45] = q_nocor;
  dqdc[46] = q_nocor;
  dqdc[47] = q_nocor;
  dqdc[48] = q_nocor;
  dqdc[49] = q_nocor;
  dqdc[50] = q_nocor;
  dqdc[51] = q_nocor;
  dqdc[52] = q_nocor;
  dqdc[53] = q_nocor;
  dqdc[54] = q_nocor;
  dqdc[55] = q_nocor;
  dqdc[56] = q_nocor;
  dqdc[57] = q_nocor;
  dqdc[58] = q_nocor;
  dqdc[59] = q_nocor;
  dqdc[60] = q_nocor;
  dqdc[61] = q_nocor;
  dqdc[62] = q_nocor;
  dqdc[63] = q_nocor;
  dqdc[64] = q_nocor;
  dqdc[65] = q_nocor;
  dqdc[66] = q_nocor;
  dqdc[67] = q_nocor;
  dqdc[68] = q_nocor;
  dqdc[69] = q_nocor;
  dqdc[70] = q_nocor;
  dqdc[71] = q_nocor;
  dqdc[72] = q_nocor;
  dqdc[73] = q_nocor;
  dqdc[74] = q_nocor;
  dqdc[75] = q_nocor;
  dqdc[76] = q_nocor;
  dqdc[77] = q_nocor;
  dqdc[78] = q_nocor;
  dqdc[79] = q_nocor;
  dqdc[80] = q_nocor;
  dqdc[81] = q_nocor;
  dqdc[82] = q_nocor;
  dqdc[83] = q_nocor;
  dqdc[84] = q_nocor;
  dqdc[85] = q_nocor;
  dqdc[86] = q_nocor;
  dqdc[87] = q_nocor;
  for (int k = 0; k < 88; k++) {
    J[89 * k + 2] += -2 * dqdc[k];
    J[89 * k + 3] += dqdc[k];
  }
  J[7834] += -2 * dqdT; // dwdot[o]/dT
  J[7835] += dqdT;      // dwdot[o2]/dT

  // reaction 100: h2 + M => 2 h + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[1] + (12 - 1) * sc[5] + (1.9 - 1) * sc[6] +
          (3.8 - 1) * sc[8];
  // forward
  phi_f = sc[1];
  k_f = 45700000000000 * exp(-1.4 * logT - (52535.8199100127) * invT);
  dlnkfdT = -1.4 * invT + (52535.8199100127) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += 2 * q; // h
  wdot[1] -= q;     // h2
  // for convenience
  k_f *= alpha;
  dqdc[0] = q_nocor;
  dqdc[1] = 2.5 * q_nocor + k_f;
  dqdc[2] = q_nocor;
  dqdc[3] = q_nocor;
  dqdc[4] = q_nocor;
  dqdc[5] = 12 * q_nocor;
  dqdc[6] = 1.9 * q_nocor;
  dqdc[7] = q_nocor;
  dqdc[8] = 3.8 * q_nocor;
  dqdc[9] = q_nocor;
  dqdc[10] = q_nocor;
  dqdc[11] = q_nocor;
  dqdc[12] = q_nocor;
  dqdc[13] = q_nocor;
  dqdc[14] = q_nocor;
  dqdc[15] = q_nocor;
  dqdc[16] = q_nocor;
  dqdc[17] = q_nocor;
  dqdc[18] = q_nocor;
  dqdc[19] = q_nocor;
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = q_nocor;
  dqdc[26] = q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  dqdc[34] = q_nocor;
  dqdc[35] = q_nocor;
  dqdc[36] = q_nocor;
  dqdc[37] = q_nocor;
  dqdc[38] = q_nocor;
  dqdc[39] = q_nocor;
  dqdc[40] = q_nocor;
  dqdc[41] = q_nocor;
  dqdc[42] = q_nocor;
  dqdc[43] = q_nocor;
  dqdc[44] = q_nocor;
  dqdc[45] = q_nocor;
  dqdc[46] = q_nocor;
  dqdc[47] = q_nocor;
  dqdc[48] = q_nocor;
  dqdc[49] = q_nocor;
  dqdc[50] = q_nocor;
  dqdc[51] = q_nocor;
  dqdc[52] = q_nocor;
  dqdc[53] = q_nocor;
  dqdc[54] = q_nocor;
  dqdc[55] = q_nocor;
  dqdc[56] = q_nocor;
  dqdc[57] = q_nocor;
  dqdc[58] = q_nocor;
  dqdc[59] = q_nocor;
  dqdc[60] = q_nocor;
  dqdc[61] = q_nocor;
  dqdc[62] = q_nocor;
  dqdc[63] = q_nocor;
  dqdc[64] = q_nocor;
  dqdc[65] = q_nocor;
  dqdc[66] = q_nocor;
  dqdc[67] = q_nocor;
  dqdc[68] = q_nocor;
  dqdc[69] = q_nocor;
  dqdc[70] = q_nocor;
  dqdc[71] = q_nocor;
  dqdc[72] = q_nocor;
  dqdc[73] = q_nocor;
  dqdc[74] = q_nocor;
  dqdc[75] = q_nocor;
  dqdc[76] = q_nocor;
  dqdc[77] = q_nocor;
  dqdc[78] = q_nocor;
  dqdc[79] = q_nocor;
  dqdc[80] = q_nocor;
  dqdc[81] = q_nocor;
  dqdc[82] = q_nocor;
  dqdc[83] = q_nocor;
  dqdc[84] = q_nocor;
  dqdc[85] = q_nocor;
  dqdc[86] = q_nocor;
  dqdc[87] = q_nocor;
  for (int k = 0; k < 88; k++) {
    J[89 * k + 0] += 2 * dqdc[k];
    J[89 * k + 1] -= dqdc[k];
  }
  J[7832] += 2 * dqdT; // dwdot[h]/dT
  J[7833] -= dqdT;     // dwdot[h2]/dT

  // reaction 101: 2 h + M => h2 + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[1] + (12 - 1) * sc[5] + (1.9 - 1) * sc[6] +
          (3.8 - 1) * sc[8];
  // forward
  phi_f = (sc[0] * sc[0]);
  k_f = 2423 * exp(-0.4 * logT - (-1529.77866404635) * invT);
  dlnkfdT = -0.4 * invT + (-1529.77866404635) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= 2 * q; // h
  wdot[1] += q;     // h2
  // for convenience
  k_f *= alpha;
  dqdc[0] = q_nocor + k_f * 2.000000 * sc[0];
  dqdc[1] = 2.5 * q_nocor;
  dqdc[2] = q_nocor;
  dqdc[3] = q_nocor;
  dqdc[4] = q_nocor;
  dqdc[5] = 12 * q_nocor;
  dqdc[6] = 1.9 * q_nocor;
  dqdc[7] = q_nocor;
  dqdc[8] = 3.8 * q_nocor;
  dqdc[9] = q_nocor;
  dqdc[10] = q_nocor;
  dqdc[11] = q_nocor;
  dqdc[12] = q_nocor;
  dqdc[13] = q_nocor;
  dqdc[14] = q_nocor;
  dqdc[15] = q_nocor;
  dqdc[16] = q_nocor;
  dqdc[17] = q_nocor;
  dqdc[18] = q_nocor;
  dqdc[19] = q_nocor;
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = q_nocor;
  dqdc[26] = q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  dqdc[34] = q_nocor;
  dqdc[35] = q_nocor;
  dqdc[36] = q_nocor;
  dqdc[37] = q_nocor;
  dqdc[38] = q_nocor;
  dqdc[39] = q_nocor;
  dqdc[40] = q_nocor;
  dqdc[41] = q_nocor;
  dqdc[42] = q_nocor;
  dqdc[43] = q_nocor;
  dqdc[44] = q_nocor;
  dqdc[45] = q_nocor;
  dqdc[46] = q_nocor;
  dqdc[47] = q_nocor;
  dqdc[48] = q_nocor;
  dqdc[49] = q_nocor;
  dqdc[50] = q_nocor;
  dqdc[51] = q_nocor;
  dqdc[52] = q_nocor;
  dqdc[53] = q_nocor;
  dqdc[54] = q_nocor;
  dqdc[55] = q_nocor;
  dqdc[56] = q_nocor;
  dqdc[57] = q_nocor;
  dqdc[58] = q_nocor;
  dqdc[59] = q_nocor;
  dqdc[60] = q_nocor;
  dqdc[61] = q_nocor;
  dqdc[62] = q_nocor;
  dqdc[63] = q_nocor;
  dqdc[64] = q_nocor;
  dqdc[65] = q_nocor;
  dqdc[66] = q_nocor;
  dqdc[67] = q_nocor;
  dqdc[68] = q_nocor;
  dqdc[69] = q_nocor;
  dqdc[70] = q_nocor;
  dqdc[71] = q_nocor;
  dqdc[72] = q_nocor;
  dqdc[73] = q_nocor;
  dqdc[74] = q_nocor;
  dqdc[75] = q_nocor;
  dqdc[76] = q_nocor;
  dqdc[77] = q_nocor;
  dqdc[78] = q_nocor;
  dqdc[79] = q_nocor;
  dqdc[80] = q_nocor;
  dqdc[81] = q_nocor;
  dqdc[82] = q_nocor;
  dqdc[83] = q_nocor;
  dqdc[84] = q_nocor;
  dqdc[85] = q_nocor;
  dqdc[86] = q_nocor;
  dqdc[87] = q_nocor;
  for (int k = 0; k < 88; k++) {
    J[89 * k + 0] += -2 * dqdc[k];
    J[89 * k + 1] += dqdc[k];
  }
  J[7832] += -2 * dqdT; // dwdot[h]/dT
  J[7833] += dqdT;      // dwdot[h2]/dT

  // reaction 196: ch2o + M => co + h2 + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[13];
  k_f = 1.826e+26 * exp(-4.42 * logT - (43840.2359249072) * invT);
  dlnkfdT = -4.42 * invT + (43840.2359249072) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] += q;  // h2
  wdot[6] += q;  // co
  wdot[13] -= q; // ch2o
  // for convenience
  k_f *= alpha;
  dqdc[0] = q_nocor;
  dqdc[1] = q_nocor;
  dqdc[2] = q_nocor;
  dqdc[3] = q_nocor;
  dqdc[4] = q_nocor;
  dqdc[5] = q_nocor;
  dqdc[6] = q_nocor;
  dqdc[7] = q_nocor;
  dqdc[8] = q_nocor;
  dqdc[9] = q_nocor;
  dqdc[10] = q_nocor;
  dqdc[11] = q_nocor;
  dqdc[12] = q_nocor;
  dqdc[13] = q_nocor + k_f;
  dqdc[14] = q_nocor;
  dqdc[15] = q_nocor;
  dqdc[16] = q_nocor;
  dqdc[17] = q_nocor;
  dqdc[18] = q_nocor;
  dqdc[19] = q_nocor;
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = q_nocor;
  dqdc[26] = q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  dqdc[34] = q_nocor;
  dqdc[35] = q_nocor;
  dqdc[36] = q_nocor;
  dqdc[37] = q_nocor;
  dqdc[38] = q_nocor;
  dqdc[39] = q_nocor;
  dqdc[40] = q_nocor;
  dqdc[41] = q_nocor;
  dqdc[42] = q_nocor;
  dqdc[43] = q_nocor;
  dqdc[44] = q_nocor;
  dqdc[45] = q_nocor;
  dqdc[46] = q_nocor;
  dqdc[47] = q_nocor;
  dqdc[48] = q_nocor;
  dqdc[49] = q_nocor;
  dqdc[50] = q_nocor;
  dqdc[51] = q_nocor;
  dqdc[52] = q_nocor;
  dqdc[53] = q_nocor;
  dqdc[54] = q_nocor;
  dqdc[55] = q_nocor;
  dqdc[56] = q_nocor;
  dqdc[57] = q_nocor;
  dqdc[58] = q_nocor;
  dqdc[59] = q_nocor;
  dqdc[60] = q_nocor;
  dqdc[61] = q_nocor;
  dqdc[62] = q_nocor;
  dqdc[63] = q_nocor;
  dqdc[64] = q_nocor;
  dqdc[65] = q_nocor;
  dqdc[66] = q_nocor;
  dqdc[67] = q_nocor;
  dqdc[68] = q_nocor;
  dqdc[69] = q_nocor;
  dqdc[70] = q_nocor;
  dqdc[71] = q_nocor;
  dqdc[72] = q_nocor;
  dqdc[73] = q_nocor;
  dqdc[74] = q_nocor;
  dqdc[75] = q_nocor;
  dqdc[76] = q_nocor;
  dqdc[77] = q_nocor;
  dqdc[78] = q_nocor;
  dqdc[79] = q_nocor;
  dqdc[80] = q_nocor;
  dqdc[81] = q_nocor;
  dqdc[82] = q_nocor;
  dqdc[83] = q_nocor;
  dqdc[84] = q_nocor;
  dqdc[85] = q_nocor;
  dqdc[86] = q_nocor;
  dqdc[87] = q_nocor;
  for (int k = 0; k < 88; k++) {
    J[89 * k + 1] += dqdc[k];
    J[89 * k + 6] += dqdc[k];
    J[89 * k + 13] -= dqdc[k];
  }
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT

  // reaction 197: co + h2 + M => ch2o + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[1] * sc[6];
  k_f = 5.07e+15 * exp(-3.42 * logT - (42446.3257606281) * invT);
  dlnkfdT = -3.42 * invT + (42446.3257606281) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // h2
  wdot[6] -= q;  // co
  wdot[13] += q; // ch2o
  // for convenience
  k_f *= alpha;
  dqdc[0] = q_nocor;
  dqdc[1] = q_nocor + k_f * sc[6];
  dqdc[2] = q_nocor;
  dqdc[3] = q_nocor;
  dqdc[4] = q_nocor;
  dqdc[5] = q_nocor;
  dqdc[6] = q_nocor + k_f * sc[1];
  dqdc[7] = q_nocor;
  dqdc[8] = q_nocor;
  dqdc[9] = q_nocor;
  dqdc[10] = q_nocor;
  dqdc[11] = q_nocor;
  dqdc[12] = q_nocor;
  dqdc[13] = q_nocor;
  dqdc[14] = q_nocor;
  dqdc[15] = q_nocor;
  dqdc[16] = q_nocor;
  dqdc[17] = q_nocor;
  dqdc[18] = q_nocor;
  dqdc[19] = q_nocor;
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = q_nocor;
  dqdc[26] = q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  dqdc[34] = q_nocor;
  dqdc[35] = q_nocor;
  dqdc[36] = q_nocor;
  dqdc[37] = q_nocor;
  dqdc[38] = q_nocor;
  dqdc[39] = q_nocor;
  dqdc[40] = q_nocor;
  dqdc[41] = q_nocor;
  dqdc[42] = q_nocor;
  dqdc[43] = q_nocor;
  dqdc[44] = q_nocor;
  dqdc[45] = q_nocor;
  dqdc[46] = q_nocor;
  dqdc[47] = q_nocor;
  dqdc[48] = q_nocor;
  dqdc[49] = q_nocor;
  dqdc[50] = q_nocor;
  dqdc[51] = q_nocor;
  dqdc[52] = q_nocor;
  dqdc[53] = q_nocor;
  dqdc[54] = q_nocor;
  dqdc[55] = q_nocor;
  dqdc[56] = q_nocor;
  dqdc[57] = q_nocor;
  dqdc[58] = q_nocor;
  dqdc[59] = q_nocor;
  dqdc[60] = q_nocor;
  dqdc[61] = q_nocor;
  dqdc[62] = q_nocor;
  dqdc[63] = q_nocor;
  dqdc[64] = q_nocor;
  dqdc[65] = q_nocor;
  dqdc[66] = q_nocor;
  dqdc[67] = q_nocor;
  dqdc[68] = q_nocor;
  dqdc[69] = q_nocor;
  dqdc[70] = q_nocor;
  dqdc[71] = q_nocor;
  dqdc[72] = q_nocor;
  dqdc[73] = q_nocor;
  dqdc[74] = q_nocor;
  dqdc[75] = q_nocor;
  dqdc[76] = q_nocor;
  dqdc[77] = q_nocor;
  dqdc[78] = q_nocor;
  dqdc[79] = q_nocor;
  dqdc[80] = q_nocor;
  dqdc[81] = q_nocor;
  dqdc[82] = q_nocor;
  dqdc[83] = q_nocor;
  dqdc[84] = q_nocor;
  dqdc[85] = q_nocor;
  dqdc[86] = q_nocor;
  dqdc[87] = q_nocor;
  for (int k = 0; k < 88; k++) {
    J[89 * k + 1] -= dqdc[k];
    J[89 * k + 6] -= dqdc[k];
    J[89 * k + 13] += dqdc[k];
  }
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT

  // reaction 311: c2h5o + M => ch2o + ch3 + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[37];
  k_f = 1.35e+32 * exp(-6.96 * logT - (11976.5566461523) * invT);
  dlnkfdT = -6.96 * invT + (11976.5566461523) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[13] += q; // ch2o
  wdot[37] -= q; // c2h5o
  // for convenience
  k_f *= alpha;
  dqdc[0] = q_nocor;
  dqdc[1] = q_nocor;
  dqdc[2] = q_nocor;
  dqdc[3] = q_nocor;
  dqdc[4] = q_nocor;
  dqdc[5] = q_nocor;
  dqdc[6] = q_nocor;
  dqdc[7] = q_nocor;
  dqdc[8] = q_nocor;
  dqdc[9] = q_nocor;
  dqdc[10] = q_nocor;
  dqdc[11] = q_nocor;
  dqdc[12] = q_nocor;
  dqdc[13] = q_nocor;
  dqdc[14] = q_nocor;
  dqdc[15] = q_nocor;
  dqdc[16] = q_nocor;
  dqdc[17] = q_nocor;
  dqdc[18] = q_nocor;
  dqdc[19] = q_nocor;
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = q_nocor;
  dqdc[26] = q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  dqdc[34] = q_nocor;
  dqdc[35] = q_nocor;
  dqdc[36] = q_nocor;
  dqdc[37] = q_nocor + k_f;
  dqdc[38] = q_nocor;
  dqdc[39] = q_nocor;
  dqdc[40] = q_nocor;
  dqdc[41] = q_nocor;
  dqdc[42] = q_nocor;
  dqdc[43] = q_nocor;
  dqdc[44] = q_nocor;
  dqdc[45] = q_nocor;
  dqdc[46] = q_nocor;
  dqdc[47] = q_nocor;
  dqdc[48] = q_nocor;
  dqdc[49] = q_nocor;
  dqdc[50] = q_nocor;
  dqdc[51] = q_nocor;
  dqdc[52] = q_nocor;
  dqdc[53] = q_nocor;
  dqdc[54] = q_nocor;
  dqdc[55] = q_nocor;
  dqdc[56] = q_nocor;
  dqdc[57] = q_nocor;
  dqdc[58] = q_nocor;
  dqdc[59] = q_nocor;
  dqdc[60] = q_nocor;
  dqdc[61] = q_nocor;
  dqdc[62] = q_nocor;
  dqdc[63] = q_nocor;
  dqdc[64] = q_nocor;
  dqdc[65] = q_nocor;
  dqdc[66] = q_nocor;
  dqdc[67] = q_nocor;
  dqdc[68] = q_nocor;
  dqdc[69] = q_nocor;
  dqdc[70] = q_nocor;
  dqdc[71] = q_nocor;
  dqdc[72] = q_nocor;
  dqdc[73] = q_nocor;
  dqdc[74] = q_nocor;
  dqdc[75] = q_nocor;
  dqdc[76] = q_nocor;
  dqdc[77] = q_nocor;
  dqdc[78] = q_nocor;
  dqdc[79] = q_nocor;
  dqdc[80] = q_nocor;
  dqdc[81] = q_nocor;
  dqdc[82] = q_nocor;
  dqdc[83] = q_nocor;
  dqdc[84] = q_nocor;
  dqdc[85] = q_nocor;
  dqdc[86] = q_nocor;
  dqdc[87] = q_nocor;
  for (int k = 0; k < 88; k++) {
    J[89 * k + 9] += dqdc[k];
    J[89 * k + 13] += dqdc[k];
    J[89 * k + 37] -= dqdc[k];
  }
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT
  J[7869] -= dqdT; // dwdot[c2h5o]/dT

  // reaction 312: ch2o + ch3 + M => c2h5o + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[9] * sc[13];
  k_f = 6.442e+24 * exp(-6.99 * logT - (8479.20081880953) * invT);
  dlnkfdT = -6.99 * invT + (8479.20081880953) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[13] -= q; // ch2o
  wdot[37] += q; // c2h5o
  // for convenience
  k_f *= alpha;
  dqdc[0] = q_nocor;
  dqdc[1] = q_nocor;
  dqdc[2] = q_nocor;
  dqdc[3] = q_nocor;
  dqdc[4] = q_nocor;
  dqdc[5] = q_nocor;
  dqdc[6] = q_nocor;
  dqdc[7] = q_nocor;
  dqdc[8] = q_nocor;
  dqdc[9] = q_nocor + k_f * sc[13];
  dqdc[10] = q_nocor;
  dqdc[11] = q_nocor;
  dqdc[12] = q_nocor;
  dqdc[13] = q_nocor + k_f * sc[9];
  dqdc[14] = q_nocor;
  dqdc[15] = q_nocor;
  dqdc[16] = q_nocor;
  dqdc[17] = q_nocor;
  dqdc[18] = q_nocor;
  dqdc[19] = q_nocor;
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = q_nocor;
  dqdc[26] = q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  dqdc[34] = q_nocor;
  dqdc[35] = q_nocor;
  dqdc[36] = q_nocor;
  dqdc[37] = q_nocor;
  dqdc[38] = q_nocor;
  dqdc[39] = q_nocor;
  dqdc[40] = q_nocor;
  dqdc[41] = q_nocor;
  dqdc[42] = q_nocor;
  dqdc[43] = q_nocor;
  dqdc[44] = q_nocor;
  dqdc[45] = q_nocor;
  dqdc[46] = q_nocor;
  dqdc[47] = q_nocor;
  dqdc[48] = q_nocor;
  dqdc[49] = q_nocor;
  dqdc[50] = q_nocor;
  dqdc[51] = q_nocor;
  dqdc[52] = q_nocor;
  dqdc[53] = q_nocor;
  dqdc[54] = q_nocor;
  dqdc[55] = q_nocor;
  dqdc[56] = q_nocor;
  dqdc[57] = q_nocor;
  dqdc[58] = q_nocor;
  dqdc[59] = q_nocor;
  dqdc[60] = q_nocor;
  dqdc[61] = q_nocor;
  dqdc[62] = q_nocor;
  dqdc[63] = q_nocor;
  dqdc[64] = q_nocor;
  dqdc[65] = q_nocor;
  dqdc[66] = q_nocor;
  dqdc[67] = q_nocor;
  dqdc[68] = q_nocor;
  dqdc[69] = q_nocor;
  dqdc[70] = q_nocor;
  dqdc[71] = q_nocor;
  dqdc[72] = q_nocor;
  dqdc[73] = q_nocor;
  dqdc[74] = q_nocor;
  dqdc[75] = q_nocor;
  dqdc[76] = q_nocor;
  dqdc[77] = q_nocor;
  dqdc[78] = q_nocor;
  dqdc[79] = q_nocor;
  dqdc[80] = q_nocor;
  dqdc[81] = q_nocor;
  dqdc[82] = q_nocor;
  dqdc[83] = q_nocor;
  dqdc[84] = q_nocor;
  dqdc[85] = q_nocor;
  dqdc[86] = q_nocor;
  dqdc[87] = q_nocor;
  for (int k = 0; k < 88; k++) {
    J[89 * k + 9] -= dqdc[k];
    J[89 * k + 13] -= dqdc[k];
    J[89 * k + 37] += dqdc[k];
  }
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT
  J[7869] += dqdT; // dwdot[c2h5o]/dT

  // reaction 319: ch3o2 + M => ch3 + o2 + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[38];
  k_f = 4.343e+21 * exp(-3.42 * logT - (15333.0118070698) * invT);
  dlnkfdT = -3.42 * invT + (15333.0118070698) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[9] += q;  // ch3
  wdot[38] -= q; // ch3o2
  // for convenience
  k_f *= alpha;
  dqdc[0] = q_nocor;
  dqdc[1] = q_nocor;
  dqdc[2] = q_nocor;
  dqdc[3] = q_nocor;
  dqdc[4] = q_nocor;
  dqdc[5] = q_nocor;
  dqdc[6] = q_nocor;
  dqdc[7] = q_nocor;
  dqdc[8] = q_nocor;
  dqdc[9] = q_nocor;
  dqdc[10] = q_nocor;
  dqdc[11] = q_nocor;
  dqdc[12] = q_nocor;
  dqdc[13] = q_nocor;
  dqdc[14] = q_nocor;
  dqdc[15] = q_nocor;
  dqdc[16] = q_nocor;
  dqdc[17] = q_nocor;
  dqdc[18] = q_nocor;
  dqdc[19] = q_nocor;
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = q_nocor;
  dqdc[26] = q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  dqdc[34] = q_nocor;
  dqdc[35] = q_nocor;
  dqdc[36] = q_nocor;
  dqdc[37] = q_nocor;
  dqdc[38] = q_nocor + k_f;
  dqdc[39] = q_nocor;
  dqdc[40] = q_nocor;
  dqdc[41] = q_nocor;
  dqdc[42] = q_nocor;
  dqdc[43] = q_nocor;
  dqdc[44] = q_nocor;
  dqdc[45] = q_nocor;
  dqdc[46] = q_nocor;
  dqdc[47] = q_nocor;
  dqdc[48] = q_nocor;
  dqdc[49] = q_nocor;
  dqdc[50] = q_nocor;
  dqdc[51] = q_nocor;
  dqdc[52] = q_nocor;
  dqdc[53] = q_nocor;
  dqdc[54] = q_nocor;
  dqdc[55] = q_nocor;
  dqdc[56] = q_nocor;
  dqdc[57] = q_nocor;
  dqdc[58] = q_nocor;
  dqdc[59] = q_nocor;
  dqdc[60] = q_nocor;
  dqdc[61] = q_nocor;
  dqdc[62] = q_nocor;
  dqdc[63] = q_nocor;
  dqdc[64] = q_nocor;
  dqdc[65] = q_nocor;
  dqdc[66] = q_nocor;
  dqdc[67] = q_nocor;
  dqdc[68] = q_nocor;
  dqdc[69] = q_nocor;
  dqdc[70] = q_nocor;
  dqdc[71] = q_nocor;
  dqdc[72] = q_nocor;
  dqdc[73] = q_nocor;
  dqdc[74] = q_nocor;
  dqdc[75] = q_nocor;
  dqdc[76] = q_nocor;
  dqdc[77] = q_nocor;
  dqdc[78] = q_nocor;
  dqdc[79] = q_nocor;
  dqdc[80] = q_nocor;
  dqdc[81] = q_nocor;
  dqdc[82] = q_nocor;
  dqdc[83] = q_nocor;
  dqdc[84] = q_nocor;
  dqdc[85] = q_nocor;
  dqdc[86] = q_nocor;
  dqdc[87] = q_nocor;
  for (int k = 0; k < 88; k++) {
    J[89 * k + 3] += dqdc[k];
    J[89 * k + 9] += dqdc[k];
    J[89 * k + 38] -= dqdc[k];
  }
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7870] -= dqdT; // dwdot[ch3o2]/dT

  // reaction 320: ch3 + o2 + M => ch3o2 + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[3] * sc[9];
  k_f = 54400000000000 * exp(-3.3 * logT);
  dlnkfdT = -3.3 * invT;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[9] -= q;  // ch3
  wdot[38] += q; // ch3o2
  // for convenience
  k_f *= alpha;
  dqdc[0] = q_nocor;
  dqdc[1] = q_nocor;
  dqdc[2] = q_nocor;
  dqdc[3] = q_nocor + k_f * sc[9];
  dqdc[4] = q_nocor;
  dqdc[5] = q_nocor;
  dqdc[6] = q_nocor;
  dqdc[7] = q_nocor;
  dqdc[8] = q_nocor;
  dqdc[9] = q_nocor + k_f * sc[3];
  dqdc[10] = q_nocor;
  dqdc[11] = q_nocor;
  dqdc[12] = q_nocor;
  dqdc[13] = q_nocor;
  dqdc[14] = q_nocor;
  dqdc[15] = q_nocor;
  dqdc[16] = q_nocor;
  dqdc[17] = q_nocor;
  dqdc[18] = q_nocor;
  dqdc[19] = q_nocor;
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = q_nocor;
  dqdc[26] = q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  dqdc[34] = q_nocor;
  dqdc[35] = q_nocor;
  dqdc[36] = q_nocor;
  dqdc[37] = q_nocor;
  dqdc[38] = q_nocor;
  dqdc[39] = q_nocor;
  dqdc[40] = q_nocor;
  dqdc[41] = q_nocor;
  dqdc[42] = q_nocor;
  dqdc[43] = q_nocor;
  dqdc[44] = q_nocor;
  dqdc[45] = q_nocor;
  dqdc[46] = q_nocor;
  dqdc[47] = q_nocor;
  dqdc[48] = q_nocor;
  dqdc[49] = q_nocor;
  dqdc[50] = q_nocor;
  dqdc[51] = q_nocor;
  dqdc[52] = q_nocor;
  dqdc[53] = q_nocor;
  dqdc[54] = q_nocor;
  dqdc[55] = q_nocor;
  dqdc[56] = q_nocor;
  dqdc[57] = q_nocor;
  dqdc[58] = q_nocor;
  dqdc[59] = q_nocor;
  dqdc[60] = q_nocor;
  dqdc[61] = q_nocor;
  dqdc[62] = q_nocor;
  dqdc[63] = q_nocor;
  dqdc[64] = q_nocor;
  dqdc[65] = q_nocor;
  dqdc[66] = q_nocor;
  dqdc[67] = q_nocor;
  dqdc[68] = q_nocor;
  dqdc[69] = q_nocor;
  dqdc[70] = q_nocor;
  dqdc[71] = q_nocor;
  dqdc[72] = q_nocor;
  dqdc[73] = q_nocor;
  dqdc[74] = q_nocor;
  dqdc[75] = q_nocor;
  dqdc[76] = q_nocor;
  dqdc[77] = q_nocor;
  dqdc[78] = q_nocor;
  dqdc[79] = q_nocor;
  dqdc[80] = q_nocor;
  dqdc[81] = q_nocor;
  dqdc[82] = q_nocor;
  dqdc[83] = q_nocor;
  dqdc[84] = q_nocor;
  dqdc[85] = q_nocor;
  dqdc[86] = q_nocor;
  dqdc[87] = q_nocor;
  for (int k = 0; k < 88; k++) {
    J[89 * k + 3] -= dqdc[k];
    J[89 * k + 9] -= dqdc[k];
    J[89 * k + 38] += dqdc[k];
  }
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7870] += dqdT; // dwdot[ch3o2]/dT

  // reaction 343: c2h5o + M => ch3cho + h + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[37];
  k_f = 1.16e+29 * exp(-5.89 * logT - (12716.2851448853) * invT);
  dlnkfdT = -5.89 * invT + (12716.2851448853) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[24] += q; // ch3cho
  wdot[37] -= q; // c2h5o
  // for convenience
  k_f *= alpha;
  dqdc[0] = q_nocor;
  dqdc[1] = q_nocor;
  dqdc[2] = q_nocor;
  dqdc[3] = q_nocor;
  dqdc[4] = q_nocor;
  dqdc[5] = q_nocor;
  dqdc[6] = q_nocor;
  dqdc[7] = q_nocor;
  dqdc[8] = q_nocor;
  dqdc[9] = q_nocor;
  dqdc[10] = q_nocor;
  dqdc[11] = q_nocor;
  dqdc[12] = q_nocor;
  dqdc[13] = q_nocor;
  dqdc[14] = q_nocor;
  dqdc[15] = q_nocor;
  dqdc[16] = q_nocor;
  dqdc[17] = q_nocor;
  dqdc[18] = q_nocor;
  dqdc[19] = q_nocor;
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = q_nocor;
  dqdc[26] = q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  dqdc[34] = q_nocor;
  dqdc[35] = q_nocor;
  dqdc[36] = q_nocor;
  dqdc[37] = q_nocor + k_f;
  dqdc[38] = q_nocor;
  dqdc[39] = q_nocor;
  dqdc[40] = q_nocor;
  dqdc[41] = q_nocor;
  dqdc[42] = q_nocor;
  dqdc[43] = q_nocor;
  dqdc[44] = q_nocor;
  dqdc[45] = q_nocor;
  dqdc[46] = q_nocor;
  dqdc[47] = q_nocor;
  dqdc[48] = q_nocor;
  dqdc[49] = q_nocor;
  dqdc[50] = q_nocor;
  dqdc[51] = q_nocor;
  dqdc[52] = q_nocor;
  dqdc[53] = q_nocor;
  dqdc[54] = q_nocor;
  dqdc[55] = q_nocor;
  dqdc[56] = q_nocor;
  dqdc[57] = q_nocor;
  dqdc[58] = q_nocor;
  dqdc[59] = q_nocor;
  dqdc[60] = q_nocor;
  dqdc[61] = q_nocor;
  dqdc[62] = q_nocor;
  dqdc[63] = q_nocor;
  dqdc[64] = q_nocor;
  dqdc[65] = q_nocor;
  dqdc[66] = q_nocor;
  dqdc[67] = q_nocor;
  dqdc[68] = q_nocor;
  dqdc[69] = q_nocor;
  dqdc[70] = q_nocor;
  dqdc[71] = q_nocor;
  dqdc[72] = q_nocor;
  dqdc[73] = q_nocor;
  dqdc[74] = q_nocor;
  dqdc[75] = q_nocor;
  dqdc[76] = q_nocor;
  dqdc[77] = q_nocor;
  dqdc[78] = q_nocor;
  dqdc[79] = q_nocor;
  dqdc[80] = q_nocor;
  dqdc[81] = q_nocor;
  dqdc[82] = q_nocor;
  dqdc[83] = q_nocor;
  dqdc[84] = q_nocor;
  dqdc[85] = q_nocor;
  dqdc[86] = q_nocor;
  dqdc[87] = q_nocor;
  for (int k = 0; k < 88; k++) {
    J[89 * k + 0] += dqdc[k];
    J[89 * k + 24] += dqdc[k];
    J[89 * k + 37] -= dqdc[k];
  }
  J[7832] += dqdT; // dwdot[h]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT
  J[7869] -= dqdT; // dwdot[c2h5o]/dT

  // reaction 344: ch3cho + h + M => c2h5o + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[0] * sc[24];
  k_f = 3.063e+18 * exp(-4.78 * logT - (3069.62166140879) * invT);
  dlnkfdT = -4.78 * invT + (3069.62166140879) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[24] -= q; // ch3cho
  wdot[37] += q; // c2h5o
  // for convenience
  k_f *= alpha;
  dqdc[0] = q_nocor + k_f * sc[24];
  dqdc[1] = q_nocor;
  dqdc[2] = q_nocor;
  dqdc[3] = q_nocor;
  dqdc[4] = q_nocor;
  dqdc[5] = q_nocor;
  dqdc[6] = q_nocor;
  dqdc[7] = q_nocor;
  dqdc[8] = q_nocor;
  dqdc[9] = q_nocor;
  dqdc[10] = q_nocor;
  dqdc[11] = q_nocor;
  dqdc[12] = q_nocor;
  dqdc[13] = q_nocor;
  dqdc[14] = q_nocor;
  dqdc[15] = q_nocor;
  dqdc[16] = q_nocor;
  dqdc[17] = q_nocor;
  dqdc[18] = q_nocor;
  dqdc[19] = q_nocor;
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor + k_f * sc[0];
  dqdc[25] = q_nocor;
  dqdc[26] = q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  dqdc[34] = q_nocor;
  dqdc[35] = q_nocor;
  dqdc[36] = q_nocor;
  dqdc[37] = q_nocor;
  dqdc[38] = q_nocor;
  dqdc[39] = q_nocor;
  dqdc[40] = q_nocor;
  dqdc[41] = q_nocor;
  dqdc[42] = q_nocor;
  dqdc[43] = q_nocor;
  dqdc[44] = q_nocor;
  dqdc[45] = q_nocor;
  dqdc[46] = q_nocor;
  dqdc[47] = q_nocor;
  dqdc[48] = q_nocor;
  dqdc[49] = q_nocor;
  dqdc[50] = q_nocor;
  dqdc[51] = q_nocor;
  dqdc[52] = q_nocor;
  dqdc[53] = q_nocor;
  dqdc[54] = q_nocor;
  dqdc[55] = q_nocor;
  dqdc[56] = q_nocor;
  dqdc[57] = q_nocor;
  dqdc[58] = q_nocor;
  dqdc[59] = q_nocor;
  dqdc[60] = q_nocor;
  dqdc[61] = q_nocor;
  dqdc[62] = q_nocor;
  dqdc[63] = q_nocor;
  dqdc[64] = q_nocor;
  dqdc[65] = q_nocor;
  dqdc[66] = q_nocor;
  dqdc[67] = q_nocor;
  dqdc[68] = q_nocor;
  dqdc[69] = q_nocor;
  dqdc[70] = q_nocor;
  dqdc[71] = q_nocor;
  dqdc[72] = q_nocor;
  dqdc[73] = q_nocor;
  dqdc[74] = q_nocor;
  dqdc[75] = q_nocor;
  dqdc[76] = q_nocor;
  dqdc[77] = q_nocor;
  dqdc[78] = q_nocor;
  dqdc[79] = q_nocor;
  dqdc[80] = q_nocor;
  dqdc[81] = q_nocor;
  dqdc[82] = q_nocor;
  dqdc[83] = q_nocor;
  dqdc[84] = q_nocor;
  dqdc[85] = q_nocor;
  dqdc[86] = q_nocor;
  dqdc[87] = q_nocor;
  for (int k = 0; k < 88; k++) {
    J[89 * k + 0] -= dqdc[k];
    J[89 * k + 24] -= dqdc[k];
    J[89 * k + 37] += dqdc[k];
  }
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7856] -= dqdT; // dwdot[ch3cho]/dT
  J[7869] += dqdT; // dwdot[c2h5o]/dT

  // reaction 440: c3h4-a + M => c3h3 + h + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[25];
  k_f = 114300000000 * exp(-(35225.1666063304) * invT);
  dlnkfdT = (35225.1666063304) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[25] -= q; // c3h4-a
  wdot[48] += q; // c3h3
  // for convenience
  k_f *= alpha;
  dqdc[0] = q_nocor;
  dqdc[1] = q_nocor;
  dqdc[2] = q_nocor;
  dqdc[3] = q_nocor;
  dqdc[4] = q_nocor;
  dqdc[5] = q_nocor;
  dqdc[6] = q_nocor;
  dqdc[7] = q_nocor;
  dqdc[8] = q_nocor;
  dqdc[9] = q_nocor;
  dqdc[10] = q_nocor;
  dqdc[11] = q_nocor;
  dqdc[12] = q_nocor;
  dqdc[13] = q_nocor;
  dqdc[14] = q_nocor;
  dqdc[15] = q_nocor;
  dqdc[16] = q_nocor;
  dqdc[17] = q_nocor;
  dqdc[18] = q_nocor;
  dqdc[19] = q_nocor;
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = q_nocor + k_f;
  dqdc[26] = q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  dqdc[34] = q_nocor;
  dqdc[35] = q_nocor;
  dqdc[36] = q_nocor;
  dqdc[37] = q_nocor;
  dqdc[38] = q_nocor;
  dqdc[39] = q_nocor;
  dqdc[40] = q_nocor;
  dqdc[41] = q_nocor;
  dqdc[42] = q_nocor;
  dqdc[43] = q_nocor;
  dqdc[44] = q_nocor;
  dqdc[45] = q_nocor;
  dqdc[46] = q_nocor;
  dqdc[47] = q_nocor;
  dqdc[48] = q_nocor;
  dqdc[49] = q_nocor;
  dqdc[50] = q_nocor;
  dqdc[51] = q_nocor;
  dqdc[52] = q_nocor;
  dqdc[53] = q_nocor;
  dqdc[54] = q_nocor;
  dqdc[55] = q_nocor;
  dqdc[56] = q_nocor;
  dqdc[57] = q_nocor;
  dqdc[58] = q_nocor;
  dqdc[59] = q_nocor;
  dqdc[60] = q_nocor;
  dqdc[61] = q_nocor;
  dqdc[62] = q_nocor;
  dqdc[63] = q_nocor;
  dqdc[64] = q_nocor;
  dqdc[65] = q_nocor;
  dqdc[66] = q_nocor;
  dqdc[67] = q_nocor;
  dqdc[68] = q_nocor;
  dqdc[69] = q_nocor;
  dqdc[70] = q_nocor;
  dqdc[71] = q_nocor;
  dqdc[72] = q_nocor;
  dqdc[73] = q_nocor;
  dqdc[74] = q_nocor;
  dqdc[75] = q_nocor;
  dqdc[76] = q_nocor;
  dqdc[77] = q_nocor;
  dqdc[78] = q_nocor;
  dqdc[79] = q_nocor;
  dqdc[80] = q_nocor;
  dqdc[81] = q_nocor;
  dqdc[82] = q_nocor;
  dqdc[83] = q_nocor;
  dqdc[84] = q_nocor;
  dqdc[85] = q_nocor;
  dqdc[86] = q_nocor;
  dqdc[87] = q_nocor;
  for (int k = 0; k < 88; k++) {
    J[89 * k + 0] += dqdc[k];
    J[89 * k + 25] -= dqdc[k];
    J[89 * k + 48] += dqdc[k];
  }
  J[7832] += dqdT; // dwdot[h]/dT
  J[7857] -= dqdT; // dwdot[c3h4-a]/dT
  J[7880] += dqdT; // dwdot[c3h3]/dT

  // reaction 441: c3h3 + h + M => c3h4-a + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[0] * sc[48];
  k_f = 1798 * exp(-0.38 * logT - (5339.12882418808) * invT);
  dlnkfdT = -0.38 * invT + (5339.12882418808) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[25] += q; // c3h4-a
  wdot[48] -= q; // c3h3
  // for convenience
  k_f *= alpha;
  dqdc[0] = q_nocor + k_f * sc[48];
  dqdc[1] = q_nocor;
  dqdc[2] = q_nocor;
  dqdc[3] = q_nocor;
  dqdc[4] = q_nocor;
  dqdc[5] = q_nocor;
  dqdc[6] = q_nocor;
  dqdc[7] = q_nocor;
  dqdc[8] = q_nocor;
  dqdc[9] = q_nocor;
  dqdc[10] = q_nocor;
  dqdc[11] = q_nocor;
  dqdc[12] = q_nocor;
  dqdc[13] = q_nocor;
  dqdc[14] = q_nocor;
  dqdc[15] = q_nocor;
  dqdc[16] = q_nocor;
  dqdc[17] = q_nocor;
  dqdc[18] = q_nocor;
  dqdc[19] = q_nocor;
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = q_nocor;
  dqdc[26] = q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  dqdc[34] = q_nocor;
  dqdc[35] = q_nocor;
  dqdc[36] = q_nocor;
  dqdc[37] = q_nocor;
  dqdc[38] = q_nocor;
  dqdc[39] = q_nocor;
  dqdc[40] = q_nocor;
  dqdc[41] = q_nocor;
  dqdc[42] = q_nocor;
  dqdc[43] = q_nocor;
  dqdc[44] = q_nocor;
  dqdc[45] = q_nocor;
  dqdc[46] = q_nocor;
  dqdc[47] = q_nocor;
  dqdc[48] = q_nocor + k_f * sc[0];
  dqdc[49] = q_nocor;
  dqdc[50] = q_nocor;
  dqdc[51] = q_nocor;
  dqdc[52] = q_nocor;
  dqdc[53] = q_nocor;
  dqdc[54] = q_nocor;
  dqdc[55] = q_nocor;
  dqdc[56] = q_nocor;
  dqdc[57] = q_nocor;
  dqdc[58] = q_nocor;
  dqdc[59] = q_nocor;
  dqdc[60] = q_nocor;
  dqdc[61] = q_nocor;
  dqdc[62] = q_nocor;
  dqdc[63] = q_nocor;
  dqdc[64] = q_nocor;
  dqdc[65] = q_nocor;
  dqdc[66] = q_nocor;
  dqdc[67] = q_nocor;
  dqdc[68] = q_nocor;
  dqdc[69] = q_nocor;
  dqdc[70] = q_nocor;
  dqdc[71] = q_nocor;
  dqdc[72] = q_nocor;
  dqdc[73] = q_nocor;
  dqdc[74] = q_nocor;
  dqdc[75] = q_nocor;
  dqdc[76] = q_nocor;
  dqdc[77] = q_nocor;
  dqdc[78] = q_nocor;
  dqdc[79] = q_nocor;
  dqdc[80] = q_nocor;
  dqdc[81] = q_nocor;
  dqdc[82] = q_nocor;
  dqdc[83] = q_nocor;
  dqdc[84] = q_nocor;
  dqdc[85] = q_nocor;
  dqdc[86] = q_nocor;
  dqdc[87] = q_nocor;
  for (int k = 0; k < 88; k++) {
    J[89 * k + 0] -= dqdc[k];
    J[89 * k + 25] += dqdc[k];
    J[89 * k + 48] -= dqdc[k];
  }
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7857] += dqdT; // dwdot[c3h4-a]/dT
  J[7880] -= dqdT; // dwdot[c3h3]/dT

  // reaction 1: ch4 + h => ch3 + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[10];
  k_f = 0.01727 * exp(3 * logT - (4138.45385957801) * invT);
  dlnkfdT = 3 * invT + (4138.45385957801) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  // d()/d[h]
  dqdci = +k_f * sc[10];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[9] += dqdci;  // dwdot[ch3]/d[h]
  J[10] -= dqdci; // dwdot[ch4]/d[h]
  // d()/d[ch4]
  dqdci = +k_f * sc[0];
  J[890] -= dqdci; // dwdot[h]/d[ch4]
  J[891] += dqdci; // dwdot[h2]/d[ch4]
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT

  // reaction 2: ch3 + h2 => ch4 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[9];
  k_f = 0.000661 * exp(3 * logT - (3896.90985999175) * invT);
  dlnkfdT = 3 * invT + (3896.90985999175) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  // d()/d[h2]
  dqdci = +k_f * sc[9];
  J[89] += dqdci; // dwdot[h]/d[h2]
  J[90] -= dqdci; // dwdot[h2]/d[h2]
  J[98] -= dqdci; // dwdot[ch3]/d[h2]
  J[99] += dqdci; // dwdot[ch4]/d[h2]
  // d()/d[ch3]
  dqdci = +k_f * sc[1];
  J[801] += dqdci; // dwdot[h]/d[ch3]
  J[802] -= dqdci; // dwdot[h2]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT

  // reaction 3: ch4 + oh => ch3 + h2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[10];
  k_f = 0.193 * exp(2.4 * logT - (1059.77429818474) * invT);
  dlnkfdT = 2.4 * invT + (1059.77429818474) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  // d()/d[oh]
  dqdci = +k_f * sc[10];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[365] += dqdci; // dwdot[ch3]/d[oh]
  J[366] -= dqdci; // dwdot[ch4]/d[oh]
  // d()/d[ch4]
  dqdci = +k_f * sc[4];
  J[894] -= dqdci; // dwdot[oh]/d[ch4]
  J[895] += dqdci; // dwdot[h2o]/d[ch4]
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT

  // reaction 4: ch3 + h2o => ch4 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[9];
  k_f = 0.03199 * exp(2.4 * logT - (8443.9756522032) * invT);
  dlnkfdT = 2.4 * invT + (8443.9756522032) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  // d()/d[h2o]
  dqdci = +k_f * sc[9];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[454] -= dqdci; // dwdot[ch3]/d[h2o]
  J[455] += dqdci; // dwdot[ch4]/d[h2o]
  // d()/d[ch3]
  dqdci = +k_f * sc[5];
  J[805] += dqdci; // dwdot[oh]/d[ch3]
  J[806] -= dqdci; // dwdot[h2o]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT

  // reaction 5: ch4 + o => ch3 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[10];
  k_f = 3150000 * exp(0.5 * logT - (5178.09949113057) * invT);
  dlnkfdT = 0.5 * invT + (5178.09949113057) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[4] += q;  // oh
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  // d()/d[o]
  dqdci = +k_f * sc[10];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[182] += dqdci; // dwdot[oh]/d[o]
  J[187] += dqdci; // dwdot[ch3]/d[o]
  J[188] -= dqdci; // dwdot[ch4]/d[o]
  // d()/d[ch4]
  dqdci = +k_f * sc[2];
  J[892] -= dqdci; // dwdot[o]/d[ch4]
  J[894] += dqdci; // dwdot[oh]/d[ch4]
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT

  // reaction 6: ch3 + oh => ch4 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[9];
  k_f = 52960 * exp(0.5 * logT - (3882.31657668341) * invT);
  dlnkfdT = 0.5 * invT + (3882.31657668341) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[4] -= q;  // oh
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  // d()/d[oh]
  dqdci = +k_f * sc[9];
  J[358] += dqdci; // dwdot[o]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[365] -= dqdci; // dwdot[ch3]/d[oh]
  J[366] += dqdci; // dwdot[ch4]/d[oh]
  // d()/d[ch3]
  dqdci = +k_f * sc[4];
  J[803] += dqdci; // dwdot[o]/d[ch3]
  J[805] -= dqdci; // dwdot[oh]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT

  // reaction 7: c2h6 + ch3 => c2h5 + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[15];
  k_f = 1.51e-13 * exp(6 * logT - (3042.95117812114) * invT);
  dlnkfdT = 6 * invT + (3042.95117812114) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[15] -= q; // c2h6
  wdot[17] += q; // c2h5
  // d()/d[ch3]
  dqdci = +k_f * sc[15];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[816] -= dqdci; // dwdot[c2h6]/d[ch3]
  J[818] += dqdci; // dwdot[c2h5]/d[ch3]
  // d()/d[c2h6]
  dqdci = +k_f * sc[9];
  J[1344] -= dqdci; // dwdot[ch3]/d[c2h6]
  J[1345] += dqdci; // dwdot[ch4]/d[c2h6]
  J[1350] -= dqdci; // dwdot[c2h6]/d[c2h6]
  J[1352] += dqdci; // dwdot[c2h5]/d[c2h6]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7847] -= dqdT; // dwdot[c2h6]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT

  // reaction 8: c2h5 + ch4 => c2h6 + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[17];
  k_f = 9.649e-16 * exp(6.56 * logT - (5142.87432452423) * invT);
  dlnkfdT = 6.56 * invT + (5142.87432452423) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[15] += q; // c2h6
  wdot[17] -= q; // c2h5
  // d()/d[ch4]
  dqdci = +k_f * sc[17];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[905] += dqdci; // dwdot[c2h6]/d[ch4]
  J[907] -= dqdci; // dwdot[c2h5]/d[ch4]
  // d()/d[c2h5]
  dqdci = +k_f * sc[10];
  J[1522] += dqdci; // dwdot[ch3]/d[c2h5]
  J[1523] -= dqdci; // dwdot[ch4]/d[c2h5]
  J[1528] += dqdci; // dwdot[c2h6]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7847] += dqdT; // dwdot[c2h6]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT

  // reaction 9: hco + oh => co + h2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[7];
  k_f = 102000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q; // oh
  wdot[5] += q; // h2o
  wdot[6] += q; // co
  wdot[7] -= q; // hco
  // d()/d[oh]
  dqdci = +k_f * sc[7];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[362] += dqdci; // dwdot[co]/d[oh]
  J[363] -= dqdci; // dwdot[hco]/d[oh]
  // d()/d[hco]
  dqdci = +k_f * sc[4];
  J[627] -= dqdci; // dwdot[oh]/d[hco]
  J[628] += dqdci; // dwdot[h2o]/d[hco]
  J[629] += dqdci; // dwdot[co]/d[hco]
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7839] -= dqdT; // dwdot[hco]/dT

  // reaction 10: co + h2o => hco + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[6];
  k_f = 2896000000 * exp(-(52938.3932426565) * invT);
  dlnkfdT = (52938.3932426565) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q; // oh
  wdot[5] -= q; // h2o
  wdot[6] -= q; // co
  wdot[7] += q; // hco
  // d()/d[h2o]
  dqdci = +k_f * sc[6];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[451] -= dqdci; // dwdot[co]/d[h2o]
  J[452] += dqdci; // dwdot[hco]/d[h2o]
  // d()/d[co]
  dqdci = +k_f * sc[5];
  J[538] += dqdci; // dwdot[oh]/d[co]
  J[539] -= dqdci; // dwdot[h2o]/d[co]
  J[540] -= dqdci; // dwdot[co]/d[co]
  J[541] += dqdci; // dwdot[hco]/d[co]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7839] += dqdT; // dwdot[hco]/dT

  // reaction 11: co + oh => co2 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[6];
  k_f = 0.14 * exp(1.95 * logT - (-677.832848838957) * invT);
  dlnkfdT = 1.95 * invT + (-677.832848838957) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q; // h
  wdot[4] -= q; // oh
  wdot[6] -= q; // co
  wdot[8] += q; // co2
  // d()/d[oh]
  dqdci = +k_f * sc[6];
  J[356] += dqdci; // dwdot[h]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[362] -= dqdci; // dwdot[co]/d[oh]
  J[364] += dqdci; // dwdot[co2]/d[oh]
  // d()/d[co]
  dqdci = +k_f * sc[4];
  J[534] += dqdci; // dwdot[h]/d[co]
  J[538] -= dqdci; // dwdot[oh]/d[co]
  J[540] -= dqdci; // dwdot[co]/d[co]
  J[542] += dqdci; // dwdot[co2]/d[co]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7840] += dqdT; // dwdot[co2]/dT

  // reaction 12: co2 + h => co + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[8];
  k_f = 15.68 * exp(1.95 * logT - (10562.5178152411) * invT);
  dlnkfdT = 1.95 * invT + (10562.5178152411) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q; // h
  wdot[4] += q; // oh
  wdot[6] += q; // co
  wdot[8] -= q; // co2
  // d()/d[h]
  dqdci = +k_f * sc[8];
  J[0] -= dqdci; // dwdot[h]/d[h]
  J[4] += dqdci; // dwdot[oh]/d[h]
  J[6] += dqdci; // dwdot[co]/d[h]
  J[8] -= dqdci; // dwdot[co2]/d[h]
  // d()/d[co2]
  dqdci = +k_f * sc[0];
  J[712] -= dqdci; // dwdot[h]/d[co2]
  J[716] += dqdci; // dwdot[oh]/d[co2]
  J[718] += dqdci; // dwdot[co]/d[co2]
  J[720] -= dqdci; // dwdot[co2]/d[co2]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7840] -= dqdT; // dwdot[co2]/dT

  // reaction 13: h + o2 => o + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[3];
  k_f = 197000000 * exp(-(8323.20365241006) * invT);
  dlnkfdT = (8323.20365241006) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q; // h
  wdot[2] += q; // o
  wdot[3] -= q; // o2
  wdot[4] += q; // oh
  // d()/d[h]
  dqdci = +k_f * sc[3];
  J[0] -= dqdci; // dwdot[h]/d[h]
  J[2] += dqdci; // dwdot[o]/d[h]
  J[3] -= dqdci; // dwdot[o2]/d[h]
  J[4] += dqdci; // dwdot[oh]/d[h]
  // d()/d[o2]
  dqdci = +k_f * sc[0];
  J[267] -= dqdci; // dwdot[h]/d[o2]
  J[269] += dqdci; // dwdot[o]/d[o2]
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[271] += dqdci; // dwdot[oh]/d[o2]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7836] += dqdT; // dwdot[oh]/dT

  // reaction 14: o + oh => h + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[4];
  k_f = 15550000 * exp(-(213.867082967006) * invT);
  dlnkfdT = (213.867082967006) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q; // h
  wdot[2] -= q; // o
  wdot[3] += q; // o2
  wdot[4] -= q; // oh
  // d()/d[o]
  dqdci = +k_f * sc[4];
  J[178] += dqdci; // dwdot[h]/d[o]
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[181] += dqdci; // dwdot[o2]/d[o]
  J[182] -= dqdci; // dwdot[oh]/d[o]
  // d()/d[oh]
  dqdci = +k_f * sc[2];
  J[356] += dqdci; // dwdot[h]/d[oh]
  J[358] -= dqdci; // dwdot[o]/d[oh]
  J[359] += dqdci; // dwdot[o2]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT

  // reaction 15: h2 + o => h + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[2];
  k_f = 0.0508 * exp(2.67 * logT - (3166.2392612433) * invT);
  dlnkfdT = 2.67 * invT + (3166.2392612433) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q; // h
  wdot[1] -= q; // h2
  wdot[2] -= q; // o
  wdot[4] += q; // oh
  // d()/d[h2]
  dqdci = +k_f * sc[2];
  J[89] += dqdci; // dwdot[h]/d[h2]
  J[90] -= dqdci; // dwdot[h2]/d[h2]
  J[91] -= dqdci; // dwdot[o]/d[h2]
  J[93] += dqdci; // dwdot[oh]/d[h2]
  // d()/d[o]
  dqdci = +k_f * sc[1];
  J[178] += dqdci; // dwdot[h]/d[o]
  J[179] -= dqdci; // dwdot[h2]/d[o]
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[182] += dqdci; // dwdot[oh]/d[o]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7836] += dqdT; // dwdot[oh]/dT

  // reaction 16: h + oh => h2 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[4];
  k_f = 0.02231 * exp(2.67 * logT - (2112.00034638241) * invT);
  dlnkfdT = 2.67 * invT + (2112.00034638241) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q; // h
  wdot[1] += q; // h2
  wdot[2] += q; // o
  wdot[4] -= q; // oh
  // d()/d[h]
  dqdci = +k_f * sc[4];
  J[0] -= dqdci; // dwdot[h]/d[h]
  J[1] += dqdci; // dwdot[h2]/d[h]
  J[2] += dqdci; // dwdot[o]/d[h]
  J[4] -= dqdci; // dwdot[oh]/d[h]
  // d()/d[oh]
  dqdci = +k_f * sc[0];
  J[356] -= dqdci; // dwdot[h]/d[oh]
  J[357] += dqdci; // dwdot[h2]/d[oh]
  J[358] += dqdci; // dwdot[o]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT

  // reaction 17: h2o + o => 2 oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[5];
  k_f = 2.97 * exp(2.02 * logT - (6743.10332178324) * invT);
  dlnkfdT = 2.02 * invT + (6743.10332178324) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;     // o
  wdot[4] += 2 * q; // oh
  wdot[5] -= q;     // h2o
  // d()/d[o]
  dqdci = +k_f * sc[5];
  J[180] -= dqdci;     // dwdot[o]/d[o]
  J[182] += 2 * dqdci; // dwdot[oh]/d[o]
  J[183] -= dqdci;     // dwdot[h2o]/d[o]
  // d()/d[h2o]
  dqdci = +k_f * sc[2];
  J[447] -= dqdci;     // dwdot[o]/d[h2o]
  J[449] += 2 * dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci;     // dwdot[h2o]/d[h2o]
  // d()/dT
  J[7834] -= dqdT;     // dwdot[o]/dT
  J[7836] += 2 * dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT;     // dwdot[h2o]/dT

  // reaction 18: 2 oh => h2o + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[4] * sc[4]);
  k_f = 0.3013 * exp(2.02 * logT - (-1937.38416334817) * invT);
  dlnkfdT = 2.02 * invT + (-1937.38416334817) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;     // o
  wdot[4] -= 2 * q; // oh
  wdot[5] += q;     // h2o
  // d()/d[oh]
  dqdci = +k_f * 2.000000 * sc[4];
  J[358] += dqdci;      // dwdot[o]/d[oh]
  J[360] += -2 * dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci;      // dwdot[h2o]/d[oh]
  // d()/dT
  J[7834] += dqdT;      // dwdot[o]/dT
  J[7836] += -2 * dqdT; // dwdot[oh]/dT
  J[7837] += dqdT;      // dwdot[h2o]/dT

  // reaction 19: h2 + oh => h + h2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[4];
  k_f = 216 * exp(1.51 * logT - (1726.03316371019) * invT);
  dlnkfdT = 1.51 * invT + (1726.03316371019) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q; // h
  wdot[1] -= q; // h2
  wdot[4] -= q; // oh
  wdot[5] += q; // h2o
  // d()/d[h2]
  dqdci = +k_f * sc[4];
  J[89] += dqdci; // dwdot[h]/d[h2]
  J[90] -= dqdci; // dwdot[h2]/d[h2]
  J[93] -= dqdci; // dwdot[oh]/d[h2]
  J[94] += dqdci; // dwdot[h2o]/d[h2]
  // d()/d[oh]
  dqdci = +k_f * sc[1];
  J[356] += dqdci; // dwdot[h]/d[oh]
  J[357] -= dqdci; // dwdot[h2]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT

  // reaction 20: h + h2o => h2 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[5];
  k_f = 935.2 * exp(1.51 * logT - (9349.76565065169) * invT);
  dlnkfdT = 1.51 * invT + (9349.76565065169) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q; // h
  wdot[1] += q; // h2
  wdot[4] += q; // oh
  wdot[5] -= q; // h2o
  // d()/d[h]
  dqdci = +k_f * sc[5];
  J[0] -= dqdci; // dwdot[h]/d[h]
  J[1] += dqdci; // dwdot[h2]/d[h]
  J[4] += dqdci; // dwdot[oh]/d[h]
  J[5] -= dqdci; // dwdot[h2o]/d[h]
  // d()/d[h2o]
  dqdci = +k_f * sc[0];
  J[445] -= dqdci; // dwdot[h]/d[h2o]
  J[446] += dqdci; // dwdot[h2]/d[h2o]
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT

  // reaction 23: h2o2 + oh => h2o + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[12];
  k_f = 1000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[11] += q; // ho2
  wdot[12] -= q; // h2o2
  // d()/d[oh]
  dqdci = +k_f * sc[12];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[367] += dqdci; // dwdot[ho2]/d[oh]
  J[368] -= dqdci; // dwdot[h2o2]/d[oh]
  // d()/d[h2o2]
  dqdci = +k_f * sc[4];
  J[1072] -= dqdci; // dwdot[oh]/d[h2o2]
  J[1073] += dqdci; // dwdot[h2o]/d[h2o2]
  J[1079] += dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci; // dwdot[h2o2]/d[h2o2]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT; // dwdot[h2o2]/dT

  // reaction 24: h2o + ho2 => h2o2 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[11];
  k_f = 168500 * exp(0.33 * logT - (15831.1963062165) * invT);
  dlnkfdT = 0.33 * invT + (15831.1963062165) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  // d()/d[h2o]
  dqdci = +k_f * sc[11];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[456] -= dqdci; // dwdot[ho2]/d[h2o]
  J[457] += dqdci; // dwdot[h2o2]/d[h2o]
  // d()/d[ho2]
  dqdci = +k_f * sc[5];
  J[983] += dqdci; // dwdot[oh]/d[ho2]
  J[984] -= dqdci; // dwdot[h2o]/d[ho2]
  J[990] -= dqdci; // dwdot[ho2]/d[ho2]
  J[991] += dqdci; // dwdot[h2o2]/d[ho2]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT

  // reaction 25: c2h4 + o => ch3 + hco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[16];
  k_f = 10.2 * exp(1.88 * logT - (90.0757831790448) * invT);
  dlnkfdT = 1.88 * invT + (90.0757831790448) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[7] += q;  // hco
  wdot[9] += q;  // ch3
  wdot[16] -= q; // c2h4
  // d()/d[o]
  dqdci = +k_f * sc[16];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[185] += dqdci; // dwdot[hco]/d[o]
  J[187] += dqdci; // dwdot[ch3]/d[o]
  J[194] -= dqdci; // dwdot[c2h4]/d[o]
  // d()/d[c2h4]
  dqdci = +k_f * sc[2];
  J[1426] -= dqdci; // dwdot[o]/d[c2h4]
  J[1431] += dqdci; // dwdot[hco]/d[c2h4]
  J[1433] += dqdci; // dwdot[ch3]/d[c2h4]
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7839] += dqdT; // dwdot[hco]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT

  // reaction 26: ch3 + hco => c2h4 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[9];
  k_f = 285.1 * exp(1.05 * logT - (15987.1934726159) * invT);
  dlnkfdT = 1.05 * invT + (15987.1934726159) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[7] -= q;  // hco
  wdot[9] -= q;  // ch3
  wdot[16] += q; // c2h4
  // d()/d[hco]
  dqdci = +k_f * sc[9];
  J[625] += dqdci; // dwdot[o]/d[hco]
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  J[632] -= dqdci; // dwdot[ch3]/d[hco]
  J[639] += dqdci; // dwdot[c2h4]/d[hco]
  // d()/d[ch3]
  dqdci = +k_f * sc[7];
  J[803] += dqdci; // dwdot[o]/d[ch3]
  J[808] -= dqdci; // dwdot[hco]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[817] += dqdci; // dwdot[c2h4]/d[ch3]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7839] -= dqdT; // dwdot[hco]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT

  // reaction 28: c2h6 + h => c2h5 + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[15];
  k_f = 0.000554 * exp(3.5 * logT - (2600.12051221299) * invT);
  dlnkfdT = 3.5 * invT + (2600.12051221299) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[15] -= q; // c2h6
  wdot[17] += q; // c2h5
  // d()/d[h]
  dqdci = +k_f * sc[15];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[15] -= dqdci; // dwdot[c2h6]/d[h]
  J[17] += dqdci; // dwdot[c2h5]/d[h]
  // d()/d[c2h6]
  dqdci = +k_f * sc[0];
  J[1335] -= dqdci; // dwdot[h]/d[c2h6]
  J[1336] += dqdci; // dwdot[h2]/d[c2h6]
  J[1350] -= dqdci; // dwdot[c2h6]/d[c2h6]
  J[1352] += dqdci; // dwdot[c2h5]/d[c2h6]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7847] -= dqdT; // dwdot[c2h6]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT

  // reaction 29: c2h5 + h2 => c2h6 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[17];
  k_f = 1.355e-07 * exp(4.06 * logT - (4456.9900090324) * invT);
  dlnkfdT = 4.06 * invT + (4456.9900090324) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[15] += q; // c2h6
  wdot[17] -= q; // c2h5
  // d()/d[h2]
  dqdci = +k_f * sc[17];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[104] += dqdci; // dwdot[c2h6]/d[h2]
  J[106] -= dqdci; // dwdot[c2h5]/d[h2]
  // d()/d[c2h5]
  dqdci = +k_f * sc[1];
  J[1513] += dqdci; // dwdot[h]/d[c2h5]
  J[1514] -= dqdci; // dwdot[h2]/d[c2h5]
  J[1528] += dqdci; // dwdot[c2h6]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7847] += dqdT; // dwdot[c2h6]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT

  // reaction 30: c2h5 + o2 => c2h4 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[17];
  k_f = 1.22e+24 * exp(-5.76 * logT - (5082.48832462767) * invT);
  dlnkfdT = -5.76 * invT + (5082.48832462767) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[16] += q; // c2h4
  wdot[17] -= q; // c2h5
  // d()/d[o2]
  dqdci = +k_f * sc[17];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[283] += dqdci; // dwdot[c2h4]/d[o2]
  J[284] -= dqdci; // dwdot[c2h5]/d[o2]
  // d()/d[c2h5]
  dqdci = +k_f * sc[3];
  J[1516] -= dqdci; // dwdot[o2]/d[c2h5]
  J[1524] += dqdci; // dwdot[ho2]/d[c2h5]
  J[1529] += dqdci; // dwdot[c2h4]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT

  // reaction 31: c2h4 + ho2 => c2h5 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[16];
  k_f = 1.259e+24 * exp(-5.63 * logT - (11221.7316474452) * invT);
  dlnkfdT = -5.63 * invT + (11221.7316474452) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[16] -= q; // c2h4
  wdot[17] += q; // c2h5
  // d()/d[ho2]
  dqdci = +k_f * sc[16];
  J[982] += dqdci; // dwdot[o2]/d[ho2]
  J[990] -= dqdci; // dwdot[ho2]/d[ho2]
  J[995] -= dqdci; // dwdot[c2h4]/d[ho2]
  J[996] += dqdci; // dwdot[c2h5]/d[ho2]
  // d()/d[c2h4]
  dqdci = +k_f * sc[11];
  J[1427] += dqdci; // dwdot[o2]/d[c2h4]
  J[1435] -= dqdci; // dwdot[ho2]/d[c2h4]
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1441] += dqdci; // dwdot[c2h5]/d[c2h4]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT

  // reaction 32: c2h6 + oh => c2h5 + h2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[15];
  k_f = 58 * exp(1.73 * logT - (583.731332333475) * invT);
  dlnkfdT = 1.73 * invT + (583.731332333475) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[15] -= q; // c2h6
  wdot[17] += q; // c2h5
  // d()/d[oh]
  dqdci = +k_f * sc[15];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[371] -= dqdci; // dwdot[c2h6]/d[oh]
  J[373] += dqdci; // dwdot[c2h5]/d[oh]
  // d()/d[c2h6]
  dqdci = +k_f * sc[4];
  J[1339] -= dqdci; // dwdot[oh]/d[c2h6]
  J[1340] += dqdci; // dwdot[h2o]/d[c2h6]
  J[1350] -= dqdci; // dwdot[c2h6]/d[c2h6]
  J[1352] += dqdci; // dwdot[c2h5]/d[c2h6]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7847] -= dqdT; // dwdot[c2h6]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT

  // reaction 33: c2h5 + h2o => c2h6 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[17];
  k_f = 0.06142 * exp(2.29 * logT - (10064.3333160944) * invT);
  dlnkfdT = 2.29 * invT + (10064.3333160944) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[15] += q; // c2h6
  wdot[17] -= q; // c2h5
  // d()/d[h2o]
  dqdci = +k_f * sc[17];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[460] += dqdci; // dwdot[c2h6]/d[h2o]
  J[462] -= dqdci; // dwdot[c2h5]/d[h2o]
  // d()/d[c2h5]
  dqdci = +k_f * sc[5];
  J[1517] += dqdci; // dwdot[oh]/d[c2h5]
  J[1518] -= dqdci; // dwdot[h2o]/d[c2h5]
  J[1528] += dqdci; // dwdot[c2h6]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7847] += dqdT; // dwdot[c2h6]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT

  // reaction 34: c2h6 + o => c2h5 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[15];
  k_f = 13 * exp(2.13 * logT - (2611.6944955265) * invT);
  dlnkfdT = 2.13 * invT + (2611.6944955265) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[4] += q;  // oh
  wdot[15] -= q; // c2h6
  wdot[17] += q; // c2h5
  // d()/d[o]
  dqdci = +k_f * sc[15];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[182] += dqdci; // dwdot[oh]/d[o]
  J[193] -= dqdci; // dwdot[c2h6]/d[o]
  J[195] += dqdci; // dwdot[c2h5]/d[o]
  // d()/d[c2h6]
  dqdci = +k_f * sc[2];
  J[1337] -= dqdci; // dwdot[o]/d[c2h6]
  J[1339] += dqdci; // dwdot[oh]/d[c2h6]
  J[1350] -= dqdci; // dwdot[c2h6]/d[c2h6]
  J[1352] += dqdci; // dwdot[c2h5]/d[c2h6]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7847] -= dqdT; // dwdot[c2h6]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT

  // reaction 35: c2h5 + oh => c2h6 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[17];
  k_f = 0.001397 * exp(2.69 * logT - (3414.32507748502) * invT);
  dlnkfdT = 2.69 * invT + (3414.32507748502) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[4] -= q;  // oh
  wdot[15] += q; // c2h6
  wdot[17] -= q; // c2h5
  // d()/d[oh]
  dqdci = +k_f * sc[17];
  J[358] += dqdci; // dwdot[o]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[371] += dqdci; // dwdot[c2h6]/d[oh]
  J[373] -= dqdci; // dwdot[c2h5]/d[oh]
  // d()/d[c2h5]
  dqdci = +k_f * sc[4];
  J[1515] += dqdci; // dwdot[o]/d[c2h5]
  J[1517] -= dqdci; // dwdot[oh]/d[c2h5]
  J[1528] += dqdci; // dwdot[c2h6]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7847] += dqdT; // dwdot[c2h6]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT

  // reaction 36: ch3 + ho2 => ch3o + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[11];
  k_f = 11000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[9] -= q;  // ch3
  wdot[11] -= q; // ho2
  wdot[14] += q; // ch3o
  // d()/d[ch3]
  dqdci = +k_f * sc[11];
  J[805] += dqdci; // dwdot[oh]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[812] -= dqdci; // dwdot[ho2]/d[ch3]
  J[815] += dqdci; // dwdot[ch3o]/d[ch3]
  // d()/d[ho2]
  dqdci = +k_f * sc[9];
  J[983] += dqdci; // dwdot[oh]/d[ho2]
  J[988] -= dqdci; // dwdot[ch3]/d[ho2]
  J[990] -= dqdci; // dwdot[ho2]/d[ho2]
  J[993] += dqdci; // dwdot[ch3o]/d[ho2]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7846] += dqdT; // dwdot[ch3o]/dT

  // reaction 37: ch3o + oh => ch3 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[14];
  k_f = 478000000 * exp(-0.35 * logT - (12353.9691455059) * invT);
  dlnkfdT = -0.35 * invT + (12353.9691455059) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[9] += q;  // ch3
  wdot[11] += q; // ho2
  wdot[14] -= q; // ch3o
  // d()/d[oh]
  dqdci = +k_f * sc[14];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[365] += dqdci; // dwdot[ch3]/d[oh]
  J[367] += dqdci; // dwdot[ho2]/d[oh]
  J[370] -= dqdci; // dwdot[ch3o]/d[oh]
  // d()/d[ch3o]
  dqdci = +k_f * sc[4];
  J[1250] -= dqdci; // dwdot[oh]/d[ch3o]
  J[1255] += dqdci; // dwdot[ch3]/d[ch3o]
  J[1257] += dqdci; // dwdot[ho2]/d[ch3o]
  J[1260] -= dqdci; // dwdot[ch3o]/d[ch3o]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7846] -= dqdT; // dwdot[ch3o]/dT

  // reaction 38: co + ho2 => co2 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[11];
  k_f = 30100000 * exp(-(11573.9833135086) * invT);
  dlnkfdT = (11573.9833135086) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[6] -= q;  // co
  wdot[8] += q;  // co2
  wdot[11] -= q; // ho2
  // d()/d[co]
  dqdci = +k_f * sc[11];
  J[538] += dqdci; // dwdot[oh]/d[co]
  J[540] -= dqdci; // dwdot[co]/d[co]
  J[542] += dqdci; // dwdot[co2]/d[co]
  J[545] -= dqdci; // dwdot[ho2]/d[co]
  // d()/d[ho2]
  dqdci = +k_f * sc[6];
  J[983] += dqdci; // dwdot[oh]/d[ho2]
  J[985] -= dqdci; // dwdot[co]/d[ho2]
  J[987] += dqdci; // dwdot[co2]/d[ho2]
  J[990] -= dqdci; // dwdot[ho2]/d[ho2]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7840] += dqdT; // dwdot[co2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT

  // reaction 39: co2 + oh => co + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[8];
  k_f = 6435000000 * exp(-0.33 * logT - (42577.1620937373) * invT);
  dlnkfdT = -0.33 * invT + (42577.1620937373) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[6] += q;  // co
  wdot[8] -= q;  // co2
  wdot[11] += q; // ho2
  // d()/d[oh]
  dqdci = +k_f * sc[8];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[362] += dqdci; // dwdot[co]/d[oh]
  J[364] -= dqdci; // dwdot[co2]/d[oh]
  J[367] += dqdci; // dwdot[ho2]/d[oh]
  // d()/d[co2]
  dqdci = +k_f * sc[4];
  J[716] -= dqdci; // dwdot[oh]/d[co2]
  J[718] += dqdci; // dwdot[co]/d[co2]
  J[720] -= dqdci; // dwdot[co2]/d[co2]
  J[723] += dqdci; // dwdot[ho2]/d[co2]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7840] -= dqdT; // dwdot[co2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT

  // reaction 45: co + o2 => co2 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[6];
  k_f = 16200000 * exp(-(24003.4349588851) * invT);
  dlnkfdT = (24003.4349588851) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q; // o
  wdot[3] -= q; // o2
  wdot[6] -= q; // co
  wdot[8] += q; // co2
  // d()/d[o2]
  dqdci = +k_f * sc[6];
  J[269] += dqdci; // dwdot[o]/d[o2]
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[273] -= dqdci; // dwdot[co]/d[o2]
  J[275] += dqdci; // dwdot[co2]/d[o2]
  // d()/d[co]
  dqdci = +k_f * sc[3];
  J[536] += dqdci; // dwdot[o]/d[co]
  J[537] -= dqdci; // dwdot[o2]/d[co]
  J[540] -= dqdci; // dwdot[co]/d[co]
  J[542] += dqdci; // dwdot[co2]/d[co]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7840] += dqdT; // dwdot[co2]/dT

  // reaction 46: co2 + o => co + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[8];
  k_f = 143300000 * exp(-(27133.4426201905) * invT);
  dlnkfdT = (27133.4426201905) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q; // o
  wdot[3] += q; // o2
  wdot[6] += q; // co
  wdot[8] -= q; // co2
  // d()/d[o]
  dqdci = +k_f * sc[8];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[181] += dqdci; // dwdot[o2]/d[o]
  J[184] += dqdci; // dwdot[co]/d[o]
  J[186] -= dqdci; // dwdot[co2]/d[o]
  // d()/d[co2]
  dqdci = +k_f * sc[2];
  J[714] -= dqdci; // dwdot[o]/d[co2]
  J[715] += dqdci; // dwdot[o2]/d[co2]
  J[718] += dqdci; // dwdot[co]/d[co2]
  J[720] -= dqdci; // dwdot[co2]/d[co2]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7840] -= dqdT; // dwdot[co2]/dT

  // reaction 47: h + hco => co + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[7];
  k_f = 73400000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q; // h
  wdot[1] += q; // h2
  wdot[6] += q; // co
  wdot[7] -= q; // hco
  // d()/d[h]
  dqdci = +k_f * sc[7];
  J[0] -= dqdci; // dwdot[h]/d[h]
  J[1] += dqdci; // dwdot[h2]/d[h]
  J[6] += dqdci; // dwdot[co]/d[h]
  J[7] -= dqdci; // dwdot[hco]/d[h]
  // d()/d[hco]
  dqdci = +k_f * sc[0];
  J[623] -= dqdci; // dwdot[h]/d[hco]
  J[624] += dqdci; // dwdot[h2]/d[hco]
  J[629] += dqdci; // dwdot[co]/d[hco]
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7839] -= dqdT; // dwdot[hco]/dT

  // reaction 48: co + h2 => h + hco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[6];
  k_f = 481300000 * exp(-(45289.4999224248) * invT);
  dlnkfdT = (45289.4999224248) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q; // h
  wdot[1] -= q; // h2
  wdot[6] -= q; // co
  wdot[7] += q; // hco
  // d()/d[h2]
  dqdci = +k_f * sc[6];
  J[89] += dqdci; // dwdot[h]/d[h2]
  J[90] -= dqdci; // dwdot[h2]/d[h2]
  J[95] -= dqdci; // dwdot[co]/d[h2]
  J[96] += dqdci; // dwdot[hco]/d[h2]
  // d()/d[co]
  dqdci = +k_f * sc[1];
  J[534] += dqdci; // dwdot[h]/d[co]
  J[535] -= dqdci; // dwdot[h2]/d[co]
  J[540] -= dqdci; // dwdot[co]/d[co]
  J[541] += dqdci; // dwdot[hco]/d[co]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7839] += dqdT; // dwdot[hco]/dT

  // reaction 49: hco + o => co + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[7];
  k_f = 30200000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q; // o
  wdot[4] += q; // oh
  wdot[6] += q; // co
  wdot[7] -= q; // hco
  // d()/d[o]
  dqdci = +k_f * sc[7];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[182] += dqdci; // dwdot[oh]/d[o]
  J[184] += dqdci; // dwdot[co]/d[o]
  J[185] -= dqdci; // dwdot[hco]/d[o]
  // d()/d[hco]
  dqdci = +k_f * sc[2];
  J[625] -= dqdci; // dwdot[o]/d[hco]
  J[627] += dqdci; // dwdot[oh]/d[hco]
  J[629] += dqdci; // dwdot[co]/d[hco]
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7839] -= dqdT; // dwdot[hco]/dT

  // reaction 50: co + oh => hco + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[6];
  k_f = 86970000 * exp(-(44232.7449242349) * invT);
  dlnkfdT = (44232.7449242349) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q; // o
  wdot[4] -= q; // oh
  wdot[6] -= q; // co
  wdot[7] += q; // hco
  // d()/d[oh]
  dqdci = +k_f * sc[6];
  J[358] += dqdci; // dwdot[o]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[362] -= dqdci; // dwdot[co]/d[oh]
  J[363] += dqdci; // dwdot[hco]/d[oh]
  // d()/d[co]
  dqdci = +k_f * sc[4];
  J[536] += dqdci; // dwdot[o]/d[co]
  J[538] -= dqdci; // dwdot[oh]/d[co]
  J[540] -= dqdci; // dwdot[co]/d[co]
  J[541] += dqdci; // dwdot[hco]/d[co]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7839] += dqdT; // dwdot[hco]/dT

  // reaction 53: ch2o + oh => h2o + hco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[13];
  k_f = 3430 * exp(1.18 * logT - (-224.93784961471) * invT);
  dlnkfdT = 1.18 * invT + (-224.93784961471) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[7] += q;  // hco
  wdot[13] -= q; // ch2o
  // d()/d[oh]
  dqdci = +k_f * sc[13];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[363] += dqdci; // dwdot[hco]/d[oh]
  J[369] -= dqdci; // dwdot[ch2o]/d[oh]
  // d()/d[ch2o]
  dqdci = +k_f * sc[4];
  J[1161] -= dqdci; // dwdot[oh]/d[ch2o]
  J[1162] += dqdci; // dwdot[h2o]/d[ch2o]
  J[1164] += dqdci; // dwdot[hco]/d[ch2o]
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7839] += dqdT; // dwdot[hco]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT

  // reaction 54: h2o + hco => ch2o + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[7];
  k_f = 1186 * exp(1.18 * logT - (14784.5056413427) * invT);
  dlnkfdT = 1.18 * invT + (14784.5056413427) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[7] -= q;  // hco
  wdot[13] += q; // ch2o
  // d()/d[h2o]
  dqdci = +k_f * sc[7];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[452] -= dqdci; // dwdot[hco]/d[h2o]
  J[458] += dqdci; // dwdot[ch2o]/d[h2o]
  // d()/d[hco]
  dqdci = +k_f * sc[5];
  J[627] += dqdci; // dwdot[oh]/d[hco]
  J[628] -= dqdci; // dwdot[h2o]/d[hco]
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  J[636] += dqdci; // dwdot[ch2o]/d[hco]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7839] -= dqdT; // dwdot[hco]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT

  // reaction 55: ch2o + h => h2 + hco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[13];
  k_f = 933.4 * exp(1.5 * logT - (1497.57279743485) * invT);
  dlnkfdT = 1.5 * invT + (1497.57279743485) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[7] += q;  // hco
  wdot[13] -= q; // ch2o
  // d()/d[h]
  dqdci = +k_f * sc[13];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[7] += dqdci;  // dwdot[hco]/d[h]
  J[13] -= dqdci; // dwdot[ch2o]/d[h]
  // d()/d[ch2o]
  dqdci = +k_f * sc[0];
  J[1157] -= dqdci; // dwdot[h]/d[ch2o]
  J[1158] += dqdci; // dwdot[h2]/d[ch2o]
  J[1164] += dqdci; // dwdot[hco]/d[ch2o]
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7839] += dqdT; // dwdot[hco]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT

  // reaction 56: h2 + hco => ch2o + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[7];
  k_f = 74.53 * exp(1.5 * logT - (8881.7741514533) * invT);
  dlnkfdT = 1.5 * invT + (8881.7741514533) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[7] -= q;  // hco
  wdot[13] += q; // ch2o
  // d()/d[h2]
  dqdci = +k_f * sc[7];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[96] -= dqdci;  // dwdot[hco]/d[h2]
  J[102] += dqdci; // dwdot[ch2o]/d[h2]
  // d()/d[hco]
  dqdci = +k_f * sc[1];
  J[623] += dqdci; // dwdot[h]/d[hco]
  J[624] -= dqdci; // dwdot[h2]/d[hco]
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  J[636] += dqdci; // dwdot[ch2o]/d[hco]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7839] -= dqdT; // dwdot[hco]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT

  // reaction 57: ch2o + o => hco + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[13];
  k_f = 416000 * exp(0.57 * logT - (1389.88443095264) * invT);
  dlnkfdT = 0.57 * invT + (1389.88443095264) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[4] += q;  // oh
  wdot[7] += q;  // hco
  wdot[13] -= q; // ch2o
  // d()/d[o]
  dqdci = +k_f * sc[13];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[182] += dqdci; // dwdot[oh]/d[o]
  J[185] += dqdci; // dwdot[hco]/d[o]
  J[191] -= dqdci; // dwdot[ch2o]/d[o]
  // d()/d[ch2o]
  dqdci = +k_f * sc[2];
  J[1159] -= dqdci; // dwdot[o]/d[ch2o]
  J[1161] += dqdci; // dwdot[oh]/d[ch2o]
  J[1164] += dqdci; // dwdot[hco]/d[ch2o]
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7839] += dqdT; // dwdot[hco]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT

  // reaction 58: hco + oh => ch2o + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[7];
  k_f = 14590 * exp(0.57 * logT - (7719.3436534444) * invT);
  dlnkfdT = 0.57 * invT + (7719.3436534444) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[4] -= q;  // oh
  wdot[7] -= q;  // hco
  wdot[13] += q; // ch2o
  // d()/d[oh]
  dqdci = +k_f * sc[7];
  J[358] += dqdci; // dwdot[o]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[363] -= dqdci; // dwdot[hco]/d[oh]
  J[369] += dqdci; // dwdot[ch2o]/d[oh]
  // d()/d[hco]
  dqdci = +k_f * sc[4];
  J[625] += dqdci; // dwdot[o]/d[hco]
  J[627] -= dqdci; // dwdot[oh]/d[hco]
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  J[636] += dqdci; // dwdot[ch2o]/d[hco]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7839] -= dqdT; // dwdot[hco]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT

  // reaction 59: ch3 + oh => ch2o + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[9];
  k_f = 22500000 * exp(-(2163.83166296029) * invT);
  dlnkfdT = (2163.83166296029) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] += q;  // h2
  wdot[4] -= q;  // oh
  wdot[9] -= q;  // ch3
  wdot[13] += q; // ch2o
  // d()/d[oh]
  dqdci = +k_f * sc[9];
  J[357] += dqdci; // dwdot[h2]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[365] -= dqdci; // dwdot[ch3]/d[oh]
  J[369] += dqdci; // dwdot[ch2o]/d[oh]
  // d()/d[ch3]
  dqdci = +k_f * sc[4];
  J[802] += dqdci; // dwdot[h2]/d[ch3]
  J[805] -= dqdci; // dwdot[oh]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[814] += dqdci; // dwdot[ch2o]/d[ch3]
  // d()/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT

  // reaction 60: ch2o + h2 => ch3 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[13];
  k_f = 675600000 * exp(-(38254.5309344748) * invT);
  dlnkfdT = (38254.5309344748) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // h2
  wdot[4] += q;  // oh
  wdot[9] += q;  // ch3
  wdot[13] -= q; // ch2o
  // d()/d[h2]
  dqdci = +k_f * sc[13];
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[93] += dqdci;  // dwdot[oh]/d[h2]
  J[98] += dqdci;  // dwdot[ch3]/d[h2]
  J[102] -= dqdci; // dwdot[ch2o]/d[h2]
  // d()/d[ch2o]
  dqdci = +k_f * sc[1];
  J[1158] -= dqdci; // dwdot[h2]/d[ch2o]
  J[1161] += dqdci; // dwdot[oh]/d[ch2o]
  J[1166] += dqdci; // dwdot[ch3]/d[ch2o]
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  // d()/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT

  // reaction 61: ch3 + o => ch2o + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[9];
  k_f = 80000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[2] -= q;  // o
  wdot[9] -= q;  // ch3
  wdot[13] += q; // ch2o
  // d()/d[o]
  dqdci = +k_f * sc[9];
  J[178] += dqdci; // dwdot[h]/d[o]
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[187] -= dqdci; // dwdot[ch3]/d[o]
  J[191] += dqdci; // dwdot[ch2o]/d[o]
  // d()/d[ch3]
  dqdci = +k_f * sc[2];
  J[801] += dqdci; // dwdot[h]/d[ch3]
  J[803] -= dqdci; // dwdot[o]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[814] += dqdci; // dwdot[ch2o]/d[ch3]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT

  // reaction 62: ch2o + h => ch3 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[13];
  k_f = 1055000000 * exp(-(35038.9764399826) * invT);
  dlnkfdT = (35038.9764399826) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[2] += q;  // o
  wdot[9] += q;  // ch3
  wdot[13] -= q; // ch2o
  // d()/d[h]
  dqdci = +k_f * sc[13];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[2] += dqdci;  // dwdot[o]/d[h]
  J[9] += dqdci;  // dwdot[ch3]/d[h]
  J[13] -= dqdci; // dwdot[ch2o]/d[h]
  // d()/d[ch2o]
  dqdci = +k_f * sc[0];
  J[1157] -= dqdci; // dwdot[h]/d[ch2o]
  J[1159] += dqdci; // dwdot[o]/d[ch2o]
  J[1166] += dqdci; // dwdot[ch3]/d[ch2o]
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT

  // reaction 63: ch3 + o2 => ch3o + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[9];
  k_f = 1995000000000 * exp(-1.57 * logT - (14698.9588081559) * invT);
  dlnkfdT = -1.57 * invT + (14698.9588081559) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[3] -= q;  // o2
  wdot[9] -= q;  // ch3
  wdot[14] += q; // ch3o
  // d()/d[o2]
  dqdci = +k_f * sc[9];
  J[269] += dqdci; // dwdot[o]/d[o2]
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[276] -= dqdci; // dwdot[ch3]/d[o2]
  J[281] += dqdci; // dwdot[ch3o]/d[o2]
  // d()/d[ch3]
  dqdci = +k_f * sc[3];
  J[803] += dqdci; // dwdot[o]/d[ch3]
  J[804] -= dqdci; // dwdot[o2]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[815] += dqdci; // dwdot[ch3o]/d[ch3]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7846] += dqdT; // dwdot[ch3o]/dT

  // reaction 64: ch3o + o => ch3 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[14];
  k_f = 3585000000000 * exp(-1.59 * logT - (-820.746381927498) * invT);
  dlnkfdT = -1.59 * invT + (-820.746381927498) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[3] += q;  // o2
  wdot[9] += q;  // ch3
  wdot[14] -= q; // ch3o
  // d()/d[o]
  dqdci = +k_f * sc[14];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[181] += dqdci; // dwdot[o2]/d[o]
  J[187] += dqdci; // dwdot[ch3]/d[o]
  J[192] -= dqdci; // dwdot[ch3o]/d[o]
  // d()/d[ch3o]
  dqdci = +k_f * sc[2];
  J[1248] -= dqdci; // dwdot[o]/d[ch3o]
  J[1249] += dqdci; // dwdot[o2]/d[ch3o]
  J[1255] += dqdci; // dwdot[ch3]/d[ch3o]
  J[1260] -= dqdci; // dwdot[ch3o]/d[ch3o]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7846] -= dqdT; // dwdot[ch3o]/dT

  // reaction 65: ch2o + ch3 => ch4 + hco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[13];
  k_f = 3.636e-12 * exp(5.42 * logT - (502.21023247311) * invT);
  dlnkfdT = 5.42 * invT + (502.21023247311) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[7] += q;  // hco
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[13] -= q; // ch2o
  // d()/d[ch3]
  dqdci = +k_f * sc[13];
  J[808] += dqdci; // dwdot[hco]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[814] -= dqdci; // dwdot[ch2o]/d[ch3]
  // d()/d[ch2o]
  dqdci = +k_f * sc[9];
  J[1164] += dqdci; // dwdot[hco]/d[ch2o]
  J[1166] -= dqdci; // dwdot[ch3]/d[ch2o]
  J[1167] += dqdci; // dwdot[ch4]/d[ch2o]
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  // d()/dT
  J[7839] += dqdT; // dwdot[hco]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT

  // reaction 66: ch4 + hco => ch2o + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[10];
  k_f = 7.584e-12 * exp(5.42 * logT - (8126.94915274622) * invT);
  dlnkfdT = 5.42 * invT + (8126.94915274622) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[7] -= q;  // hco
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[13] += q; // ch2o
  // d()/d[hco]
  dqdci = +k_f * sc[10];
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  J[632] += dqdci; // dwdot[ch3]/d[hco]
  J[633] -= dqdci; // dwdot[ch4]/d[hco]
  J[636] += dqdci; // dwdot[ch2o]/d[hco]
  // d()/d[ch4]
  dqdci = +k_f * sc[7];
  J[897] -= dqdci; // dwdot[hco]/d[ch4]
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[903] += dqdci; // dwdot[ch2o]/d[ch4]
  // d()/dT
  J[7839] -= dqdT; // dwdot[hco]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT

  // reaction 67: ch3 + hco => ch4 + co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[9];
  k_f = 121000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] += q;  // co
  wdot[7] -= q;  // hco
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  // d()/d[hco]
  dqdci = +k_f * sc[9];
  J[629] += dqdci; // dwdot[co]/d[hco]
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  J[632] -= dqdci; // dwdot[ch3]/d[hco]
  J[633] += dqdci; // dwdot[ch4]/d[hco]
  // d()/d[ch3]
  dqdci = +k_f * sc[7];
  J[807] += dqdci; // dwdot[co]/d[ch3]
  J[808] -= dqdci; // dwdot[hco]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  // d()/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7839] -= dqdT; // dwdot[hco]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT

  // reaction 68: ch4 + co => ch3 + hco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[10];
  k_f = 20730000000 * exp(-(45531.043922011) * invT);
  dlnkfdT = (45531.043922011) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // co
  wdot[7] += q;  // hco
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  // d()/d[co]
  dqdci = +k_f * sc[10];
  J[540] -= dqdci; // dwdot[co]/d[co]
  J[541] += dqdci; // dwdot[hco]/d[co]
  J[543] += dqdci; // dwdot[ch3]/d[co]
  J[544] -= dqdci; // dwdot[ch4]/d[co]
  // d()/d[ch4]
  dqdci = +k_f * sc[6];
  J[896] -= dqdci; // dwdot[co]/d[ch4]
  J[897] += dqdci; // dwdot[hco]/d[ch4]
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  // d()/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7839] += dqdT; // dwdot[hco]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT

  // reaction 71: ho2 + o => o2 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[11];
  k_f = 32500000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[3] += q;  // o2
  wdot[4] += q;  // oh
  wdot[11] -= q; // ho2
  // d()/d[o]
  dqdci = +k_f * sc[11];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[181] += dqdci; // dwdot[o2]/d[o]
  J[182] += dqdci; // dwdot[oh]/d[o]
  J[189] -= dqdci; // dwdot[ho2]/d[o]
  // d()/d[ho2]
  dqdci = +k_f * sc[2];
  J[981] -= dqdci; // dwdot[o]/d[ho2]
  J[982] += dqdci; // dwdot[o2]/d[ho2]
  J[983] += dqdci; // dwdot[oh]/d[ho2]
  J[990] -= dqdci; // dwdot[ho2]/d[ho2]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT

  // reaction 72: o2 + oh => ho2 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[4];
  k_f = 785700000 * exp(-0.33 * logT - (27873.1711189234) * invT);
  dlnkfdT = -0.33 * invT + (27873.1711189234) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[3] -= q;  // o2
  wdot[4] -= q;  // oh
  wdot[11] += q; // ho2
  // d()/d[o2]
  dqdci = +k_f * sc[4];
  J[269] += dqdci; // dwdot[o]/d[o2]
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[271] -= dqdci; // dwdot[oh]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  // d()/d[oh]
  dqdci = +k_f * sc[3];
  J[358] += dqdci; // dwdot[o]/d[oh]
  J[359] -= dqdci; // dwdot[o2]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[367] += dqdci; // dwdot[ho2]/d[oh]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT

  // reaction 73: hco + ho2 => ch2o + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[11];
  k_f = 29740 * exp(0.33 * logT - (-1942.91954667202) * invT);
  dlnkfdT = 0.33 * invT + (-1942.91954667202) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[7] -= q;  // hco
  wdot[11] -= q; // ho2
  wdot[13] += q; // ch2o
  // d()/d[hco]
  dqdci = +k_f * sc[11];
  J[626] += dqdci; // dwdot[o2]/d[hco]
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  J[634] -= dqdci; // dwdot[ho2]/d[hco]
  J[636] += dqdci; // dwdot[ch2o]/d[hco]
  // d()/d[ho2]
  dqdci = +k_f * sc[7];
  J[982] += dqdci; // dwdot[o2]/d[ho2]
  J[986] -= dqdci; // dwdot[hco]/d[ho2]
  J[990] -= dqdci; // dwdot[ho2]/d[ho2]
  J[992] += dqdci; // dwdot[ch2o]/d[ho2]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7839] -= dqdT; // dwdot[hco]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT

  // reaction 74: ch2o + o2 => hco + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[13];
  k_f = 20500000 * exp(-(19600.2891330938) * invT);
  dlnkfdT = (19600.2891330938) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[7] += q;  // hco
  wdot[11] += q; // ho2
  wdot[13] -= q; // ch2o
  // d()/d[o2]
  dqdci = +k_f * sc[13];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[274] += dqdci; // dwdot[hco]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[280] -= dqdci; // dwdot[ch2o]/d[o2]
  // d()/d[ch2o]
  dqdci = +k_f * sc[3];
  J[1160] -= dqdci; // dwdot[o2]/d[ch2o]
  J[1164] += dqdci; // dwdot[hco]/d[ch2o]
  J[1168] += dqdci; // dwdot[ho2]/d[ch2o]
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7839] += dqdT; // dwdot[hco]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT

  // reaction 75: ch3o + o2 => ch2o + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[14];
  k_f = 55000 * exp(-(1219.79719791064) * invT);
  dlnkfdT = (1219.79719791064) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[13] += q; // ch2o
  wdot[14] -= q; // ch3o
  // d()/d[o2]
  dqdci = +k_f * sc[14];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[280] += dqdci; // dwdot[ch2o]/d[o2]
  J[281] -= dqdci; // dwdot[ch3o]/d[o2]
  // d()/d[ch3o]
  dqdci = +k_f * sc[3];
  J[1249] -= dqdci; // dwdot[o2]/d[ch3o]
  J[1257] += dqdci; // dwdot[ho2]/d[ch3o]
  J[1259] += dqdci; // dwdot[ch2o]/d[ch3o]
  J[1260] -= dqdci; // dwdot[ch3o]/d[ch3o]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT
  J[7846] -= dqdT; // dwdot[ch3o]/dT

  // reaction 76: ch2o + ho2 => ch3o + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[13];
  k_f = 1318 * exp(0.35 * logT - (15795.9711396102) * invT);
  dlnkfdT = 0.35 * invT + (15795.9711396102) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[13] -= q; // ch2o
  wdot[14] += q; // ch3o
  // d()/d[ho2]
  dqdci = +k_f * sc[13];
  J[982] += dqdci; // dwdot[o2]/d[ho2]
  J[990] -= dqdci; // dwdot[ho2]/d[ho2]
  J[992] -= dqdci; // dwdot[ch2o]/d[ho2]
  J[993] += dqdci; // dwdot[ch3o]/d[ho2]
  // d()/d[ch2o]
  dqdci = +k_f * sc[11];
  J[1160] += dqdci; // dwdot[o2]/d[ch2o]
  J[1168] -= dqdci; // dwdot[ho2]/d[ch2o]
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  J[1171] += dqdci; // dwdot[ch3o]/d[ch2o]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT
  J[7846] += dqdT; // dwdot[ch3o]/dT

  // reaction 77: ch3 + ho2 => ch4 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[11];
  k_f = 3600000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[11] -= q; // ho2
  // d()/d[ch3]
  dqdci = +k_f * sc[11];
  J[804] += dqdci; // dwdot[o2]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[812] -= dqdci; // dwdot[ho2]/d[ch3]
  // d()/d[ho2]
  dqdci = +k_f * sc[9];
  J[982] += dqdci; // dwdot[o2]/d[ho2]
  J[988] -= dqdci; // dwdot[ch3]/d[ho2]
  J[989] += dqdci; // dwdot[ch4]/d[ho2]
  J[990] -= dqdci; // dwdot[ho2]/d[ho2]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT

  // reaction 78: ch4 + o2 => ch3 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[10];
  k_f = 5177000000 * exp(-0.33 * logT - (29166.4379500416) * invT);
  dlnkfdT = -0.33 * invT + (29166.4379500416) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[11] += q; // ho2
  // d()/d[o2]
  dqdci = +k_f * sc[10];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[276] += dqdci; // dwdot[ch3]/d[o2]
  J[277] -= dqdci; // dwdot[ch4]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  // d()/d[ch4]
  dqdci = +k_f * sc[3];
  J[893] -= dqdci; // dwdot[o2]/d[ch4]
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[901] += dqdci; // dwdot[ho2]/d[ch4]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT

  // reaction 79: hco + o2 => co + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[7];
  k_f = 7580000 * exp(-(206.318832979935) * invT);
  dlnkfdT = (206.318832979935) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[6] += q;  // co
  wdot[7] -= q;  // hco
  wdot[11] += q; // ho2
  // d()/d[o2]
  dqdci = +k_f * sc[7];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[273] += dqdci; // dwdot[co]/d[o2]
  J[274] -= dqdci; // dwdot[hco]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  // d()/d[hco]
  dqdci = +k_f * sc[3];
  J[626] -= dqdci; // dwdot[o2]/d[hco]
  J[629] += dqdci; // dwdot[co]/d[hco]
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  J[634] += dqdci; // dwdot[ho2]/d[hco]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7839] -= dqdT; // dwdot[hco]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT

  // reaction 80: co + ho2 => hco + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[11];
  k_f = 902900 * exp(0.33 * logT - (16570.9248049494) * invT);
  dlnkfdT = 0.33 * invT + (16570.9248049494) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[6] -= q;  // co
  wdot[7] += q;  // hco
  wdot[11] -= q; // ho2
  // d()/d[co]
  dqdci = +k_f * sc[11];
  J[537] += dqdci; // dwdot[o2]/d[co]
  J[540] -= dqdci; // dwdot[co]/d[co]
  J[541] += dqdci; // dwdot[hco]/d[co]
  J[545] -= dqdci; // dwdot[ho2]/d[co]
  // d()/d[ho2]
  dqdci = +k_f * sc[6];
  J[982] += dqdci; // dwdot[o2]/d[ho2]
  J[985] -= dqdci; // dwdot[co]/d[ho2]
  J[986] += dqdci; // dwdot[hco]/d[ho2]
  J[990] -= dqdci; // dwdot[ho2]/d[ho2]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7839] += dqdT; // dwdot[hco]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT

  // reaction 81: h + ho2 => 2 oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[11];
  k_f = 70800000 * exp(-(150.964999741416) * invT);
  dlnkfdT = (150.964999741416) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;     // h
  wdot[4] += 2 * q; // oh
  wdot[11] -= q;    // ho2
  // d()/d[h]
  dqdci = +k_f * sc[11];
  J[0] -= dqdci;     // dwdot[h]/d[h]
  J[4] += 2 * dqdci; // dwdot[oh]/d[h]
  J[11] -= dqdci;    // dwdot[ho2]/d[h]
  // d()/d[ho2]
  dqdci = +k_f * sc[0];
  J[979] -= dqdci;     // dwdot[h]/d[ho2]
  J[983] += 2 * dqdci; // dwdot[oh]/d[ho2]
  J[990] -= dqdci;     // dwdot[ho2]/d[ho2]
  // d()/dT
  J[7832] -= dqdT;     // dwdot[h]/dT
  J[7836] += 2 * dqdT; // dwdot[oh]/dT
  J[7843] -= dqdT;     // dwdot[ho2]/dT

  // reaction 82: 2 oh => h + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[4] * sc[4]);
  k_f = 135200000 * exp(-0.33 * logT - (19912.2834658928) * invT);
  dlnkfdT = -0.33 * invT + (19912.2834658928) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;     // h
  wdot[4] -= 2 * q; // oh
  wdot[11] += q;    // ho2
  // d()/d[oh]
  dqdci = +k_f * 2.000000 * sc[4];
  J[356] += dqdci;      // dwdot[h]/d[oh]
  J[360] += -2 * dqdci; // dwdot[oh]/d[oh]
  J[367] += dqdci;      // dwdot[ho2]/d[oh]
  // d()/dT
  J[7832] += dqdT;      // dwdot[h]/dT
  J[7836] += -2 * dqdT; // dwdot[oh]/dT
  J[7843] += dqdT;      // dwdot[ho2]/dT

  // reaction 83: h + ho2 => h2 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[11];
  k_f = 16600000 * exp(-(412.63766595987) * invT);
  dlnkfdT = (412.63766595987) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  // d()/d[h]
  dqdci = +k_f * sc[11];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[3] += dqdci;  // dwdot[o2]/d[h]
  J[11] -= dqdci; // dwdot[ho2]/d[h]
  // d()/d[ho2]
  dqdci = +k_f * sc[0];
  J[979] -= dqdci; // dwdot[h]/d[ho2]
  J[980] += dqdci; // dwdot[h2]/d[ho2]
  J[982] += dqdci; // dwdot[o2]/d[ho2]
  J[990] -= dqdci; // dwdot[ho2]/d[ho2]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT

  // reaction 84: h2 + o2 => h + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[3];
  k_f = 913800000 * exp(-0.33 * logT - (29337.5316164152) * invT);
  dlnkfdT = -0.33 * invT + (29337.5316164152) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  // d()/d[h2]
  dqdci = +k_f * sc[3];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[92] -= dqdci;  // dwdot[o2]/d[h2]
  J[100] += dqdci; // dwdot[ho2]/d[h2]
  // d()/d[o2]
  dqdci = +k_f * sc[1];
  J[267] += dqdci; // dwdot[h]/d[o2]
  J[268] -= dqdci; // dwdot[h2]/d[o2]
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT

  // reaction 85: ho2 + oh => h2o + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[11];
  k_f = 28900000 * exp(-(-251.60833290236) * invT);
  dlnkfdT = (-251.60833290236) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[11] -= q; // ho2
  // d()/d[oh]
  dqdci = +k_f * sc[11];
  J[359] += dqdci; // dwdot[o2]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[367] -= dqdci; // dwdot[ho2]/d[oh]
  // d()/d[ho2]
  dqdci = +k_f * sc[4];
  J[982] += dqdci; // dwdot[o2]/d[ho2]
  J[983] -= dqdci; // dwdot[oh]/d[ho2]
  J[984] += dqdci; // dwdot[h2o]/d[ho2]
  J[990] -= dqdci; // dwdot[ho2]/d[ho2]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT

  // reaction 86: h2o + o2 => ho2 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[5];
  k_f = 6888000000 * exp(-0.33 * logT - (36302.0502711525) * invT);
  dlnkfdT = -0.33 * invT + (36302.0502711525) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[11] += q; // ho2
  // d()/d[o2]
  dqdci = +k_f * sc[5];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[271] += dqdci; // dwdot[oh]/d[o2]
  J[272] -= dqdci; // dwdot[h2o]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  // d()/d[h2o]
  dqdci = +k_f * sc[3];
  J[448] -= dqdci; // dwdot[o2]/d[h2o]
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[456] += dqdci; // dwdot[ho2]/d[h2o]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT

  // reaction 87: h2o2 + o2 => 2 ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[12];
  k_f = 594200000000 * exp(-0.66 * logT - (26745.9657875209) * invT);
  dlnkfdT = -0.66 * invT + (26745.9657875209) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;      // o2
  wdot[11] += 2 * q; // ho2
  wdot[12] -= q;     // h2o2
  // d()/d[o2]
  dqdci = +k_f * sc[12];
  J[270] -= dqdci;     // dwdot[o2]/d[o2]
  J[278] += 2 * dqdci; // dwdot[ho2]/d[o2]
  J[279] -= dqdci;     // dwdot[h2o2]/d[o2]
  // d()/d[h2o2]
  dqdci = +k_f * sc[3];
  J[1071] -= dqdci;     // dwdot[o2]/d[h2o2]
  J[1079] += 2 * dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci;     // dwdot[h2o2]/d[h2o2]
  // d()/dT
  J[7835] -= dqdT;     // dwdot[o2]/dT
  J[7843] += 2 * dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT;     // dwdot[h2o2]/dT

  // reaction 88: 2 ho2 => h2o2 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[11] * sc[11]);
  k_f = 420000000 * exp(-(6028.53565634054) * invT);
  dlnkfdT = (6028.53565634054) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;      // o2
  wdot[11] -= 2 * q; // ho2
  wdot[12] += q;     // h2o2
  // d()/d[ho2]
  dqdci = +k_f * 2.000000 * sc[11];
  J[982] += dqdci;      // dwdot[o2]/d[ho2]
  J[990] += -2 * dqdci; // dwdot[ho2]/d[ho2]
  J[991] += dqdci;      // dwdot[h2o2]/d[ho2]
  // d()/dT
  J[7835] += dqdT;      // dwdot[o2]/dT
  J[7843] += -2 * dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT;      // dwdot[h2o2]/dT

  // reaction 90: h + h2o2 => h2o + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[12];
  k_f = 24100000 * exp(-(1997.77016324474) * invT);
  dlnkfdT = (1997.77016324474) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[4] += q;  // oh
  wdot[5] += q;  // h2o
  wdot[12] -= q; // h2o2
  // d()/d[h]
  dqdci = +k_f * sc[12];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[4] += dqdci;  // dwdot[oh]/d[h]
  J[5] += dqdci;  // dwdot[h2o]/d[h]
  J[12] -= dqdci; // dwdot[h2o2]/d[h]
  // d()/d[h2o2]
  dqdci = +k_f * sc[0];
  J[1068] -= dqdci; // dwdot[h]/d[h2o2]
  J[1072] += dqdci; // dwdot[oh]/d[h2o2]
  J[1073] += dqdci; // dwdot[h2o]/d[h2o2]
  J[1080] -= dqdci; // dwdot[h2o2]/d[h2o2]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7844] -= dqdT; // dwdot[h2o2]/dT

  // reaction 91: h2o + oh => h + h2o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[5];
  k_f = 7750000 * exp(-(37590.2849356126) * invT);
  dlnkfdT = (37590.2849356126) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[4] -= q;  // oh
  wdot[5] -= q;  // h2o
  wdot[12] += q; // h2o2
  // d()/d[oh]
  dqdci = +k_f * sc[5];
  J[356] += dqdci; // dwdot[h]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] -= dqdci; // dwdot[h2o]/d[oh]
  J[368] += dqdci; // dwdot[h2o2]/d[oh]
  // d()/d[h2o]
  dqdci = +k_f * sc[4];
  J[445] += dqdci; // dwdot[h]/d[h2o]
  J[449] -= dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[457] += dqdci; // dwdot[h2o2]/d[h2o]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT

  // reaction 92: ch4 + ho2 => ch3 + h2o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[11];
  k_f = 342000 * exp(-(9707.04948337304) * invT);
  dlnkfdT = (9707.04948337304) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  // d()/d[ch4]
  dqdci = +k_f * sc[11];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[901] -= dqdci; // dwdot[ho2]/d[ch4]
  J[902] += dqdci; // dwdot[h2o2]/d[ch4]
  // d()/d[ho2]
  dqdci = +k_f * sc[10];
  J[988] += dqdci; // dwdot[ch3]/d[ho2]
  J[989] -= dqdci; // dwdot[ch4]/d[ho2]
  J[990] -= dqdci; // dwdot[ho2]/d[ho2]
  J[991] += dqdci; // dwdot[h2o2]/d[ho2]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT

  // reaction 93: ch3 + h2o2 => ch4 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[12];
  k_f = 336500 * exp(-0.33 * logT - (1259.04809784341) * invT);
  dlnkfdT = -0.33 * invT + (1259.04809784341) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[11] += q; // ho2
  wdot[12] -= q; // h2o2
  // d()/d[ch3]
  dqdci = +k_f * sc[12];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[812] += dqdci; // dwdot[ho2]/d[ch3]
  J[813] -= dqdci; // dwdot[h2o2]/d[ch3]
  // d()/d[h2o2]
  dqdci = +k_f * sc[9];
  J[1077] -= dqdci; // dwdot[ch3]/d[h2o2]
  J[1078] += dqdci; // dwdot[ch4]/d[h2o2]
  J[1079] += dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci; // dwdot[h2o2]/d[h2o2]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT; // dwdot[h2o2]/dT

  // reaction 94: ch2o + ho2 => h2o2 + hco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[13];
  k_f = 5.82e-09 * exp(4.53 * logT - (3299.59167768155) * invT);
  dlnkfdT = 4.53 * invT + (3299.59167768155) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[7] += q;  // hco
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  wdot[13] -= q; // ch2o
  // d()/d[ho2]
  dqdci = +k_f * sc[13];
  J[986] += dqdci; // dwdot[hco]/d[ho2]
  J[990] -= dqdci; // dwdot[ho2]/d[ho2]
  J[991] += dqdci; // dwdot[h2o2]/d[ho2]
  J[992] -= dqdci; // dwdot[ch2o]/d[ho2]
  // d()/d[ch2o]
  dqdci = +k_f * sc[11];
  J[1164] += dqdci; // dwdot[hco]/d[ch2o]
  J[1168] -= dqdci; // dwdot[ho2]/d[ch2o]
  J[1169] += dqdci; // dwdot[h2o2]/d[ch2o]
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  // d()/dT
  J[7839] += dqdT; // dwdot[hco]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT

  // reaction 95: h2o2 + hco => ch2o + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[12];
  k_f = 1.194e-08 * exp(4.2 * logT - (2476.32921242503) * invT);
  dlnkfdT = 4.2 * invT + (2476.32921242503) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[7] -= q;  // hco
  wdot[11] += q; // ho2
  wdot[12] -= q; // h2o2
  wdot[13] += q; // ch2o
  // d()/d[hco]
  dqdci = +k_f * sc[12];
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  J[634] += dqdci; // dwdot[ho2]/d[hco]
  J[635] -= dqdci; // dwdot[h2o2]/d[hco]
  J[636] += dqdci; // dwdot[ch2o]/d[hco]
  // d()/d[h2o2]
  dqdci = +k_f * sc[7];
  J[1075] -= dqdci; // dwdot[hco]/d[h2o2]
  J[1079] += dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci; // dwdot[h2o2]/d[h2o2]
  J[1081] += dqdci; // dwdot[ch2o]/d[h2o2]
  // d()/dT
  J[7839] -= dqdT; // dwdot[hco]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT; // dwdot[h2o2]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT

  // reaction 103: c2h3 + c2h5 => 2 c2h4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[19];
  k_f = 576500000 * exp(-0.63 * logT - (1253.00949785375) * invT);
  dlnkfdT = -0.63 * invT + (1253.00949785375) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] += 2 * q; // c2h4
  wdot[17] -= q;     // c2h5
  wdot[19] -= q;     // c2h3
  // d()/d[c2h5]
  dqdci = +k_f * sc[19];
  J[1529] += 2 * dqdci; // dwdot[c2h4]/d[c2h5]
  J[1530] -= dqdci;     // dwdot[c2h5]/d[c2h5]
  J[1532] -= dqdci;     // dwdot[c2h3]/d[c2h5]
  // d()/d[c2h3]
  dqdci = +k_f * sc[17];
  J[1707] += 2 * dqdci; // dwdot[c2h4]/d[c2h3]
  J[1708] -= dqdci;     // dwdot[c2h5]/d[c2h3]
  J[1710] -= dqdci;     // dwdot[c2h3]/d[c2h3]
  // d()/dT
  J[7848] += 2 * dqdT; // dwdot[c2h4]/dT
  J[7849] -= dqdT;     // dwdot[c2h5]/dT
  J[7851] -= dqdT;     // dwdot[c2h3]/dT

  // reaction 104: 2 c2h4 => c2h3 + c2h5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[16] * sc[16]);
  k_f = 482000000 * exp(-(35995.0881050116) * invT);
  dlnkfdT = (35995.0881050116) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] -= 2 * q; // c2h4
  wdot[17] += q;     // c2h5
  wdot[19] += q;     // c2h3
  // d()/d[c2h4]
  dqdci = +k_f * 2.000000 * sc[16];
  J[1440] += -2 * dqdci; // dwdot[c2h4]/d[c2h4]
  J[1441] += dqdci;      // dwdot[c2h5]/d[c2h4]
  J[1443] += dqdci;      // dwdot[c2h3]/d[c2h4]
  // d()/dT
  J[7848] += -2 * dqdT; // dwdot[c2h4]/dT
  J[7849] += dqdT;      // dwdot[c2h5]/dT
  J[7851] += dqdT;      // dwdot[c2h3]/dT

  // reaction 106: c2h4 + h => c2h3 + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[16];
  k_f = 8.42e-09 * exp(4.62 * logT - (1299.80864777359) * invT);
  dlnkfdT = 4.62 * invT + (1299.80864777359) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[16] -= q; // c2h4
  wdot[19] += q; // c2h3
  // d()/d[h]
  dqdci = +k_f * sc[16];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[16] -= dqdci; // dwdot[c2h4]/d[h]
  J[19] += dqdci; // dwdot[c2h3]/d[h]
  // d()/d[c2h4]
  dqdci = +k_f * sc[0];
  J[1424] -= dqdci; // dwdot[h]/d[c2h4]
  J[1425] += dqdci; // dwdot[h2]/d[c2h4]
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1443] += dqdci; // dwdot[c2h3]/d[c2h4]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT

  // reaction 107: c2h3 + h2 => c2h4 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[19];
  k_f = 5.723e-07 * exp(3.79 * logT - (1626.89948054666) * invT);
  dlnkfdT = 3.79 * invT + (1626.89948054666) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[16] += q; // c2h4
  wdot[19] -= q; // c2h3
  // d()/d[h2]
  dqdci = +k_f * sc[19];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[105] += dqdci; // dwdot[c2h4]/d[h2]
  J[108] -= dqdci; // dwdot[c2h3]/d[h2]
  // d()/d[c2h3]
  dqdci = +k_f * sc[1];
  J[1691] += dqdci; // dwdot[h]/d[c2h3]
  J[1692] -= dqdci; // dwdot[h2]/d[c2h3]
  J[1707] += dqdci; // dwdot[c2h4]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT

  // reaction 108: c2h4 + oh => c2h3 + h2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[16];
  k_f = 20500000 * exp(-(2994.13916153808) * invT);
  dlnkfdT = (2994.13916153808) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[16] -= q; // c2h4
  wdot[19] += q; // c2h3
  // d()/d[oh]
  dqdci = +k_f * sc[16];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[372] -= dqdci; // dwdot[c2h4]/d[oh]
  J[375] += dqdci; // dwdot[c2h3]/d[oh]
  // d()/d[c2h4]
  dqdci = +k_f * sc[4];
  J[1428] -= dqdci; // dwdot[oh]/d[c2h4]
  J[1429] += dqdci; // dwdot[h2o]/d[c2h4]
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1443] += dqdci; // dwdot[c2h3]/d[c2h4]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT

  // reaction 109: c2h3 + h2o => c2h4 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[19];
  k_f = 6033000000 * exp(-0.83 * logT - (10949.9946479107) * invT);
  dlnkfdT = -0.83 * invT + (10949.9946479107) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[16] += q; // c2h4
  wdot[19] -= q; // c2h3
  // d()/d[h2o]
  dqdci = +k_f * sc[19];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[461] += dqdci; // dwdot[c2h4]/d[h2o]
  J[464] -= dqdci; // dwdot[c2h3]/d[h2o]
  // d()/d[c2h3]
  dqdci = +k_f * sc[5];
  J[1695] += dqdci; // dwdot[oh]/d[c2h3]
  J[1696] -= dqdci; // dwdot[h2o]/d[c2h3]
  J[1707] += dqdci; // dwdot[c2h4]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT

  // reaction 110: c2h2 + o2 => hcco + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[18];
  k_f = 200 * exp(1.5 * logT - (15146.8216407221) * invT);
  dlnkfdT = 1.5 * invT + (15146.8216407221) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[4] += q;  // oh
  wdot[18] -= q; // c2h2
  wdot[21] += q; // hcco
  // d()/d[o2]
  dqdci = +k_f * sc[18];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[271] += dqdci; // dwdot[oh]/d[o2]
  J[285] -= dqdci; // dwdot[c2h2]/d[o2]
  J[288] += dqdci; // dwdot[hcco]/d[o2]
  // d()/d[c2h2]
  dqdci = +k_f * sc[3];
  J[1605] -= dqdci; // dwdot[o2]/d[c2h2]
  J[1606] += dqdci; // dwdot[oh]/d[c2h2]
  J[1620] -= dqdci; // dwdot[c2h2]/d[c2h2]
  J[1623] += dqdci; // dwdot[hcco]/d[c2h2]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7850] -= dqdT; // dwdot[c2h2]/dT
  J[7853] += dqdT; // dwdot[hcco]/dT

  // reaction 111: hcco + oh => c2h2 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[21];
  k_f = 0.2232 * exp(1.5 * logT - (12781.7033114399) * invT);
  dlnkfdT = 1.5 * invT + (12781.7033114399) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[4] -= q;  // oh
  wdot[18] += q; // c2h2
  wdot[21] -= q; // hcco
  // d()/d[oh]
  dqdci = +k_f * sc[21];
  J[359] += dqdci; // dwdot[o2]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[374] += dqdci; // dwdot[c2h2]/d[oh]
  J[377] -= dqdci; // dwdot[hcco]/d[oh]
  // d()/d[hcco]
  dqdci = +k_f * sc[4];
  J[1872] += dqdci; // dwdot[o2]/d[hcco]
  J[1873] -= dqdci; // dwdot[oh]/d[hcco]
  J[1887] += dqdci; // dwdot[c2h2]/d[hcco]
  J[1890] -= dqdci; // dwdot[hcco]/d[hcco]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7850] += dqdT; // dwdot[c2h2]/dT
  J[7853] -= dqdT; // dwdot[hcco]/dT

  // reaction 112: c2h3 + o2 => c2h2 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[19];
  k_f = 2.12e-12 * exp(6 * logT - (4772.50685849196) * invT);
  dlnkfdT = 6 * invT + (4772.50685849196) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[18] += q; // c2h2
  wdot[19] -= q; // c2h3
  // d()/d[o2]
  dqdci = +k_f * sc[19];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[285] += dqdci; // dwdot[c2h2]/d[o2]
  J[286] -= dqdci; // dwdot[c2h3]/d[o2]
  // d()/d[c2h3]
  dqdci = +k_f * sc[3];
  J[1694] -= dqdci; // dwdot[o2]/d[c2h3]
  J[1702] += dqdci; // dwdot[ho2]/d[c2h3]
  J[1709] += dqdci; // dwdot[c2h2]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7850] += dqdT; // dwdot[c2h2]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT

  // reaction 113: c2h2 + ho2 => c2h3 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[18];
  k_f = 1.114e-13 * exp(6.33 * logT - (8841.51681818893) * invT);
  dlnkfdT = 6.33 * invT + (8841.51681818893) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[18] -= q; // c2h2
  wdot[19] += q; // c2h3
  // d()/d[ho2]
  dqdci = +k_f * sc[18];
  J[982] += dqdci; // dwdot[o2]/d[ho2]
  J[990] -= dqdci; // dwdot[ho2]/d[ho2]
  J[997] -= dqdci; // dwdot[c2h2]/d[ho2]
  J[998] += dqdci; // dwdot[c2h3]/d[ho2]
  // d()/d[c2h2]
  dqdci = +k_f * sc[11];
  J[1605] += dqdci; // dwdot[o2]/d[c2h2]
  J[1613] -= dqdci; // dwdot[ho2]/d[c2h2]
  J[1620] -= dqdci; // dwdot[c2h2]/d[c2h2]
  J[1621] += dqdci; // dwdot[c2h3]/d[c2h2]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7850] -= dqdT; // dwdot[c2h2]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT

  // reaction 114: h2o2 + o => ho2 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[12];
  k_f = 9.55 * exp(2 * logT - (1997.77016324474) * invT);
  dlnkfdT = 2 * invT + (1997.77016324474) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[4] += q;  // oh
  wdot[11] += q; // ho2
  wdot[12] -= q; // h2o2
  // d()/d[o]
  dqdci = +k_f * sc[12];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[182] += dqdci; // dwdot[oh]/d[o]
  J[189] += dqdci; // dwdot[ho2]/d[o]
  J[190] -= dqdci; // dwdot[h2o2]/d[o]
  // d()/d[h2o2]
  dqdci = +k_f * sc[2];
  J[1070] -= dqdci; // dwdot[o]/d[h2o2]
  J[1072] += dqdci; // dwdot[oh]/d[h2o2]
  J[1079] += dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci; // dwdot[h2o2]/d[h2o2]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT; // dwdot[h2o2]/dT

  // reaction 115: ho2 + oh => h2o2 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[11];
  k_f = 0.1632 * exp(2.33 * logT - (9148.4789843298) * invT);
  dlnkfdT = 2.33 * invT + (9148.4789843298) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[4] -= q;  // oh
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  // d()/d[oh]
  dqdci = +k_f * sc[11];
  J[358] += dqdci; // dwdot[o]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[367] -= dqdci; // dwdot[ho2]/d[oh]
  J[368] += dqdci; // dwdot[h2o2]/d[oh]
  // d()/d[ho2]
  dqdci = +k_f * sc[4];
  J[981] += dqdci; // dwdot[o]/d[ho2]
  J[983] -= dqdci; // dwdot[oh]/d[ho2]
  J[990] -= dqdci; // dwdot[ho2]/d[ho2]
  J[991] += dqdci; // dwdot[h2o2]/d[ho2]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT

  // reaction 116: c2h2 + o => h + hcco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[18];
  k_f = 14.3 * exp(2 * logT - (956.111665028967) * invT);
  dlnkfdT = 2 * invT + (956.111665028967) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[2] -= q;  // o
  wdot[18] -= q; // c2h2
  wdot[21] += q; // hcco
  // d()/d[o]
  dqdci = +k_f * sc[18];
  J[178] += dqdci; // dwdot[h]/d[o]
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[196] -= dqdci; // dwdot[c2h2]/d[o]
  J[199] += dqdci; // dwdot[hcco]/d[o]
  // d()/d[c2h2]
  dqdci = +k_f * sc[2];
  J[1602] += dqdci; // dwdot[h]/d[c2h2]
  J[1604] -= dqdci; // dwdot[o]/d[c2h2]
  J[1620] -= dqdci; // dwdot[c2h2]/d[c2h2]
  J[1623] += dqdci; // dwdot[hcco]/d[c2h2]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7850] -= dqdT; // dwdot[c2h2]/dT
  J[7853] += dqdT; // dwdot[hcco]/dT

  // reaction 117: h + hcco => c2h2 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[21];
  k_f = 0.2021 * exp(2 * logT - (6697.81382186082) * invT);
  dlnkfdT = 2 * invT + (6697.81382186082) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[2] += q;  // o
  wdot[18] += q; // c2h2
  wdot[21] -= q; // hcco
  // d()/d[h]
  dqdci = +k_f * sc[21];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[2] += dqdci;  // dwdot[o]/d[h]
  J[18] += dqdci; // dwdot[c2h2]/d[h]
  J[21] -= dqdci; // dwdot[hcco]/d[h]
  // d()/d[hcco]
  dqdci = +k_f * sc[0];
  J[1869] -= dqdci; // dwdot[h]/d[hcco]
  J[1871] += dqdci; // dwdot[o]/d[hcco]
  J[1887] += dqdci; // dwdot[c2h2]/d[hcco]
  J[1890] -= dqdci; // dwdot[hcco]/d[hcco]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7850] += dqdT; // dwdot[c2h2]/dT
  J[7853] -= dqdT; // dwdot[hcco]/dT

  // reaction 118: c2h2 + oh => ch2co + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[18];
  k_f = 2.19e-10 * exp(4.5 * logT - (-503.21666580472) * invT);
  dlnkfdT = 4.5 * invT + (-503.21666580472) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[4] -= q;  // oh
  wdot[18] -= q; // c2h2
  wdot[20] += q; // ch2co
  // d()/d[oh]
  dqdci = +k_f * sc[18];
  J[356] += dqdci; // dwdot[h]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[374] -= dqdci; // dwdot[c2h2]/d[oh]
  J[376] += dqdci; // dwdot[ch2co]/d[oh]
  // d()/d[c2h2]
  dqdci = +k_f * sc[4];
  J[1602] += dqdci; // dwdot[h]/d[c2h2]
  J[1606] -= dqdci; // dwdot[oh]/d[c2h2]
  J[1620] -= dqdci; // dwdot[c2h2]/d[c2h2]
  J[1622] += dqdci; // dwdot[ch2co]/d[c2h2]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7850] -= dqdT; // dwdot[c2h2]/dT
  J[7852] += dqdT; // dwdot[ch2co]/dT

  // reaction 119: ch2co + h => c2h2 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[20];
  k_f = 2.161e-09 * exp(4.5 * logT - (9893.23964972079) * invT);
  dlnkfdT = 4.5 * invT + (9893.23964972079) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[4] += q;  // oh
  wdot[18] += q; // c2h2
  wdot[20] -= q; // ch2co
  // d()/d[h]
  dqdci = +k_f * sc[20];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[4] += dqdci;  // dwdot[oh]/d[h]
  J[18] += dqdci; // dwdot[c2h2]/d[h]
  J[20] -= dqdci; // dwdot[ch2co]/d[h]
  // d()/d[ch2co]
  dqdci = +k_f * sc[0];
  J[1780] -= dqdci; // dwdot[h]/d[ch2co]
  J[1784] += dqdci; // dwdot[oh]/d[ch2co]
  J[1798] += dqdci; // dwdot[c2h2]/d[ch2co]
  J[1800] -= dqdci; // dwdot[ch2co]/d[ch2co]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7850] += dqdT; // dwdot[c2h2]/dT
  J[7852] -= dqdT; // dwdot[ch2co]/dT

  // reaction 120: ch2co + h => ch3 + co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[20];
  k_f = 11000000 * exp(-(1710.93666373605) * invT);
  dlnkfdT = (1710.93666373605) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[6] += q;  // co
  wdot[9] += q;  // ch3
  wdot[20] -= q; // ch2co
  // d()/d[h]
  dqdci = +k_f * sc[20];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[6] += dqdci;  // dwdot[co]/d[h]
  J[9] += dqdci;  // dwdot[ch3]/d[h]
  J[20] -= dqdci; // dwdot[ch2co]/d[h]
  // d()/d[ch2co]
  dqdci = +k_f * sc[0];
  J[1780] -= dqdci; // dwdot[h]/d[ch2co]
  J[1786] += dqdci; // dwdot[co]/d[ch2co]
  J[1789] += dqdci; // dwdot[ch3]/d[ch2co]
  J[1800] -= dqdci; // dwdot[ch2co]/d[ch2co]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7852] -= dqdT; // dwdot[ch2co]/dT

  // reaction 121: ch3 + co => ch2co + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[9];
  k_f = 2400000 * exp(-(20229.3099653497) * invT);
  dlnkfdT = (20229.3099653497) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[6] -= q;  // co
  wdot[9] -= q;  // ch3
  wdot[20] += q; // ch2co
  // d()/d[co]
  dqdci = +k_f * sc[9];
  J[534] += dqdci; // dwdot[h]/d[co]
  J[540] -= dqdci; // dwdot[co]/d[co]
  J[543] -= dqdci; // dwdot[ch3]/d[co]
  J[554] += dqdci; // dwdot[ch2co]/d[co]
  // d()/d[ch3]
  dqdci = +k_f * sc[6];
  J[801] += dqdci; // dwdot[h]/d[ch3]
  J[807] -= dqdci; // dwdot[co]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[821] += dqdci; // dwdot[ch2co]/d[ch3]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7852] += dqdT; // dwdot[ch2co]/dT

  // reaction 122: ch2co + o => hcco + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[20];
  k_f = 10000000 * exp(-(4025.73332643776) * invT);
  dlnkfdT = (4025.73332643776) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[4] += q;  // oh
  wdot[20] -= q; // ch2co
  wdot[21] += q; // hcco
  // d()/d[o]
  dqdci = +k_f * sc[20];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[182] += dqdci; // dwdot[oh]/d[o]
  J[198] -= dqdci; // dwdot[ch2co]/d[o]
  J[199] += dqdci; // dwdot[hcco]/d[o]
  // d()/d[ch2co]
  dqdci = +k_f * sc[2];
  J[1782] -= dqdci; // dwdot[o]/d[ch2co]
  J[1784] += dqdci; // dwdot[oh]/d[ch2co]
  J[1800] -= dqdci; // dwdot[ch2co]/d[ch2co]
  J[1801] += dqdci; // dwdot[hcco]/d[ch2co]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7852] -= dqdT; // dwdot[ch2co]/dT
  J[7853] += dqdT; // dwdot[hcco]/dT

  // reaction 123: hcco + oh => ch2co + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[21];
  k_f = 14320 * exp(-(-631.536915584923) * invT);
  dlnkfdT = (-631.536915584923) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[4] -= q;  // oh
  wdot[20] += q; // ch2co
  wdot[21] -= q; // hcco
  // d()/d[oh]
  dqdci = +k_f * sc[21];
  J[358] += dqdci; // dwdot[o]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[376] += dqdci; // dwdot[ch2co]/d[oh]
  J[377] -= dqdci; // dwdot[hcco]/d[oh]
  // d()/d[hcco]
  dqdci = +k_f * sc[4];
  J[1871] += dqdci; // dwdot[o]/d[hcco]
  J[1873] -= dqdci; // dwdot[oh]/d[hcco]
  J[1889] += dqdci; // dwdot[ch2co]/d[hcco]
  J[1890] -= dqdci; // dwdot[hcco]/d[hcco]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7852] += dqdT; // dwdot[ch2co]/dT
  J[7853] -= dqdT; // dwdot[hcco]/dT

  // reaction 124: ch2co + oh => h2o + hcco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[20];
  k_f = 10000000 * exp(-(1006.43333160944) * invT);
  dlnkfdT = (1006.43333160944) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[20] -= q; // ch2co
  wdot[21] += q; // hcco
  // d()/d[oh]
  dqdci = +k_f * sc[20];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[376] -= dqdci; // dwdot[ch2co]/d[oh]
  J[377] += dqdci; // dwdot[hcco]/d[oh]
  // d()/d[ch2co]
  dqdci = +k_f * sc[4];
  J[1784] -= dqdci; // dwdot[oh]/d[ch2co]
  J[1785] += dqdci; // dwdot[h2o]/d[ch2co]
  J[1800] -= dqdci; // dwdot[ch2co]/d[ch2co]
  J[1801] += dqdci; // dwdot[hcco]/d[ch2co]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7852] -= dqdT; // dwdot[ch2co]/dT
  J[7853] += dqdT; // dwdot[hcco]/dT

  // reaction 125: h2o + hcco => ch2co + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[21];
  k_f = 141200 * exp(-(5029.65057471817) * invT);
  dlnkfdT = (5029.65057471817) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[20] += q; // ch2co
  wdot[21] -= q; // hcco
  // d()/d[h2o]
  dqdci = +k_f * sc[21];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[465] += dqdci; // dwdot[ch2co]/d[h2o]
  J[466] -= dqdci; // dwdot[hcco]/d[h2o]
  // d()/d[hcco]
  dqdci = +k_f * sc[5];
  J[1873] += dqdci; // dwdot[oh]/d[hcco]
  J[1874] -= dqdci; // dwdot[h2o]/d[hcco]
  J[1889] += dqdci; // dwdot[ch2co]/d[hcco]
  J[1890] -= dqdci; // dwdot[hcco]/d[hcco]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7852] += dqdT; // dwdot[ch2co]/dT
  J[7853] -= dqdT; // dwdot[hcco]/dT

  // reaction 126: ch2co + h => h2 + hcco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[20];
  k_f = 200000000 * exp(-(4025.73332643776) * invT);
  dlnkfdT = (4025.73332643776) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[20] -= q; // ch2co
  wdot[21] += q; // hcco
  // d()/d[h]
  dqdci = +k_f * sc[20];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[20] -= dqdci; // dwdot[ch2co]/d[h]
  J[21] += dqdci; // dwdot[hcco]/d[h]
  // d()/d[ch2co]
  dqdci = +k_f * sc[0];
  J[1780] -= dqdci; // dwdot[h]/d[ch2co]
  J[1781] += dqdci; // dwdot[h2]/d[ch2co]
  J[1800] -= dqdci; // dwdot[ch2co]/d[ch2co]
  J[1801] += dqdci; // dwdot[hcco]/d[ch2co]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7852] -= dqdT; // dwdot[ch2co]/dT
  J[7853] += dqdT; // dwdot[hcco]/dT

  // reaction 127: h2 + hcco => ch2co + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[21];
  k_f = 652200 * exp(-(422.701999275965) * invT);
  dlnkfdT = (422.701999275965) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[20] += q; // ch2co
  wdot[21] -= q; // hcco
  // d()/d[h2]
  dqdci = +k_f * sc[21];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[109] += dqdci; // dwdot[ch2co]/d[h2]
  J[110] -= dqdci; // dwdot[hcco]/d[h2]
  // d()/d[hcco]
  dqdci = +k_f * sc[1];
  J[1869] += dqdci; // dwdot[h]/d[hcco]
  J[1870] -= dqdci; // dwdot[h2]/d[hcco]
  J[1889] += dqdci; // dwdot[ch2co]/d[hcco]
  J[1890] -= dqdci; // dwdot[hcco]/d[hcco]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7852] += dqdT; // dwdot[ch2co]/dT
  J[7853] -= dqdT; // dwdot[hcco]/dT

  // reaction 128: hcco + oh => 2 hco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[21];
  k_f = 10000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;     // oh
  wdot[7] += 2 * q; // hco
  wdot[21] -= q;    // hcco
  // d()/d[oh]
  dqdci = +k_f * sc[21];
  J[360] -= dqdci;     // dwdot[oh]/d[oh]
  J[363] += 2 * dqdci; // dwdot[hco]/d[oh]
  J[377] -= dqdci;     // dwdot[hcco]/d[oh]
  // d()/d[hcco]
  dqdci = +k_f * sc[4];
  J[1873] -= dqdci;     // dwdot[oh]/d[hcco]
  J[1876] += 2 * dqdci; // dwdot[hco]/d[hcco]
  J[1890] -= dqdci;     // dwdot[hcco]/d[hcco]
  // d()/dT
  J[7836] -= dqdT;     // dwdot[oh]/dT
  J[7839] += 2 * dqdT; // dwdot[hco]/dT
  J[7853] -= dqdT;     // dwdot[hcco]/dT

  // reaction 129: 2 hco => hcco + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[7] * sc[7]);
  k_f = 241100000 * exp(-(20309.8246318785) * invT);
  dlnkfdT = (20309.8246318785) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;     // oh
  wdot[7] -= 2 * q; // hco
  wdot[21] += q;    // hcco
  // d()/d[hco]
  dqdci = +k_f * 2.000000 * sc[7];
  J[627] += dqdci;      // dwdot[oh]/d[hco]
  J[630] += -2 * dqdci; // dwdot[hco]/d[hco]
  J[644] += dqdci;      // dwdot[hcco]/d[hco]
  // d()/dT
  J[7836] += dqdT;      // dwdot[oh]/dT
  J[7839] += -2 * dqdT; // dwdot[hco]/dT
  J[7853] += dqdT;      // dwdot[hcco]/dT

  // reaction 130: h + hcco => ch2(s) + co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[21];
  k_f = 110000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[6] += q;  // co
  wdot[21] -= q; // hcco
  wdot[50] += q; // ch2(s)
  // d()/d[h]
  dqdci = +k_f * sc[21];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[6] += dqdci;  // dwdot[co]/d[h]
  J[21] -= dqdci; // dwdot[hcco]/d[h]
  J[50] += dqdci; // dwdot[ch2(s)]/d[h]
  // d()/d[hcco]
  dqdci = +k_f * sc[0];
  J[1869] -= dqdci; // dwdot[h]/d[hcco]
  J[1875] += dqdci; // dwdot[co]/d[hcco]
  J[1890] -= dqdci; // dwdot[hcco]/d[hcco]
  J[1919] += dqdci; // dwdot[ch2(s)]/d[hcco]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7853] -= dqdT; // dwdot[hcco]/dT
  J[7882] += dqdT; // dwdot[ch2(s)]/dT

  // reaction 131: ch2(s) + co => h + hcco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[50];
  k_f = 2046000 * exp(0.89 * logT - (14004.5198093453) * invT);
  dlnkfdT = 0.89 * invT + (14004.5198093453) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[6] -= q;  // co
  wdot[21] += q; // hcco
  wdot[50] -= q; // ch2(s)
  // d()/d[co]
  dqdci = +k_f * sc[50];
  J[534] += dqdci; // dwdot[h]/d[co]
  J[540] -= dqdci; // dwdot[co]/d[co]
  J[555] += dqdci; // dwdot[hcco]/d[co]
  J[584] -= dqdci; // dwdot[ch2(s)]/d[co]
  // d()/d[ch2(s)]
  dqdci = +k_f * sc[6];
  J[4450] += dqdci; // dwdot[h]/d[ch2(s)]
  J[4456] -= dqdci; // dwdot[co]/d[ch2(s)]
  J[4471] += dqdci; // dwdot[hcco]/d[ch2(s)]
  J[4500] -= dqdci; // dwdot[ch2(s)]/d[ch2(s)]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7853] += dqdT; // dwdot[hcco]/dT
  J[7882] -= dqdT; // dwdot[ch2(s)]/dT

  // reaction 132: hcco + o => 2 co + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[21];
  k_f = 80000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;     // h
  wdot[2] -= q;     // o
  wdot[6] += 2 * q; // co
  wdot[21] -= q;    // hcco
  // d()/d[o]
  dqdci = +k_f * sc[21];
  J[178] += dqdci;     // dwdot[h]/d[o]
  J[180] -= dqdci;     // dwdot[o]/d[o]
  J[184] += 2 * dqdci; // dwdot[co]/d[o]
  J[199] -= dqdci;     // dwdot[hcco]/d[o]
  // d()/d[hcco]
  dqdci = +k_f * sc[2];
  J[1869] += dqdci;     // dwdot[h]/d[hcco]
  J[1871] -= dqdci;     // dwdot[o]/d[hcco]
  J[1875] += 2 * dqdci; // dwdot[co]/d[hcco]
  J[1890] -= dqdci;     // dwdot[hcco]/d[hcco]
  // d()/dT
  J[7832] += dqdT;     // dwdot[h]/dT
  J[7834] -= dqdT;     // dwdot[o]/dT
  J[7838] += 2 * dqdT; // dwdot[co]/dT
  J[7853] -= dqdT;     // dwdot[hcco]/dT

  // reaction 133: c2h6 + o2 => c2h5 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[15];
  k_f = 60300000 * exp(-(26101.8484552908) * invT);
  dlnkfdT = (26101.8484552908) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[15] -= q; // c2h6
  wdot[17] += q; // c2h5
  // d()/d[o2]
  dqdci = +k_f * sc[15];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[282] -= dqdci; // dwdot[c2h6]/d[o2]
  J[284] += dqdci; // dwdot[c2h5]/d[o2]
  // d()/d[c2h6]
  dqdci = +k_f * sc[3];
  J[1338] -= dqdci; // dwdot[o2]/d[c2h6]
  J[1346] += dqdci; // dwdot[ho2]/d[c2h6]
  J[1350] -= dqdci; // dwdot[c2h6]/d[c2h6]
  J[1352] += dqdci; // dwdot[c2h5]/d[c2h6]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7847] -= dqdT; // dwdot[c2h6]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT

  // reaction 134: c2h5 + ho2 => c2h6 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[17];
  k_f = 267.9 * exp(0.89 * logT - (-967.182431676671) * invT);
  dlnkfdT = 0.89 * invT + (-967.182431676671) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[15] += q; // c2h6
  wdot[17] -= q; // c2h5
  // d()/d[ho2]
  dqdci = +k_f * sc[17];
  J[982] += dqdci; // dwdot[o2]/d[ho2]
  J[990] -= dqdci; // dwdot[ho2]/d[ho2]
  J[994] += dqdci; // dwdot[c2h6]/d[ho2]
  J[996] -= dqdci; // dwdot[c2h5]/d[ho2]
  // d()/d[c2h5]
  dqdci = +k_f * sc[11];
  J[1516] += dqdci; // dwdot[o2]/d[c2h5]
  J[1524] -= dqdci; // dwdot[ho2]/d[c2h5]
  J[1528] += dqdci; // dwdot[c2h6]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7847] += dqdT; // dwdot[c2h6]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT

  // reaction 135: c2h6 + ho2 => c2h5 + h2o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[15];
  k_f = 13200000 * exp(-(10300.8451490226) * invT);
  dlnkfdT = (10300.8451490226) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  wdot[15] -= q; // c2h6
  wdot[17] += q; // c2h5
  // d()/d[ho2]
  dqdci = +k_f * sc[15];
  J[990] -= dqdci; // dwdot[ho2]/d[ho2]
  J[991] += dqdci; // dwdot[h2o2]/d[ho2]
  J[994] -= dqdci; // dwdot[c2h6]/d[ho2]
  J[996] += dqdci; // dwdot[c2h5]/d[ho2]
  // d()/d[c2h6]
  dqdci = +k_f * sc[11];
  J[1346] -= dqdci; // dwdot[ho2]/d[c2h6]
  J[1347] += dqdci; // dwdot[h2o2]/d[c2h6]
  J[1350] -= dqdci; // dwdot[c2h6]/d[c2h6]
  J[1352] += dqdci; // dwdot[c2h5]/d[c2h6]
  // d()/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT
  J[7847] -= dqdT; // dwdot[c2h6]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT

  // reaction 136: c2h5 + h2o2 => c2h6 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[17];
  k_f = 82980 * exp(0.24 * logT - (3951.25725989866) * invT);
  dlnkfdT = 0.24 * invT + (3951.25725989866) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // ho2
  wdot[12] -= q; // h2o2
  wdot[15] += q; // c2h6
  wdot[17] -= q; // c2h5
  // d()/d[h2o2]
  dqdci = +k_f * sc[17];
  J[1079] += dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci; // dwdot[h2o2]/d[h2o2]
  J[1083] += dqdci; // dwdot[c2h6]/d[h2o2]
  J[1085] -= dqdci; // dwdot[c2h5]/d[h2o2]
  // d()/d[c2h5]
  dqdci = +k_f * sc[12];
  J[1524] += dqdci; // dwdot[ho2]/d[c2h5]
  J[1525] -= dqdci; // dwdot[h2o2]/d[c2h5]
  J[1528] += dqdci; // dwdot[c2h6]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  // d()/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT; // dwdot[h2o2]/dT
  J[7847] += dqdT; // dwdot[c2h6]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT

  // reaction 137: c2h3 + ch3 => c2h2 + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[19];
  k_f = 392000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[18] += q; // c2h2
  wdot[19] -= q; // c2h3
  // d()/d[ch3]
  dqdci = +k_f * sc[19];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[819] += dqdci; // dwdot[c2h2]/d[ch3]
  J[820] -= dqdci; // dwdot[c2h3]/d[ch3]
  // d()/d[c2h3]
  dqdci = +k_f * sc[9];
  J[1700] -= dqdci; // dwdot[ch3]/d[c2h3]
  J[1701] += dqdci; // dwdot[ch4]/d[c2h3]
  J[1709] += dqdci; // dwdot[c2h2]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7850] += dqdT; // dwdot[c2h2]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT

  // reaction 138: c2h2 + ch4 => c2h3 + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[18];
  k_f = 29620000 * exp(-(33237.4607764017) * invT);
  dlnkfdT = (33237.4607764017) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[18] -= q; // c2h2
  wdot[19] += q; // c2h3
  // d()/d[ch4]
  dqdci = +k_f * sc[18];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[908] -= dqdci; // dwdot[c2h2]/d[ch4]
  J[909] += dqdci; // dwdot[c2h3]/d[ch4]
  // d()/d[c2h2]
  dqdci = +k_f * sc[10];
  J[1611] += dqdci; // dwdot[ch3]/d[c2h2]
  J[1612] -= dqdci; // dwdot[ch4]/d[c2h2]
  J[1620] -= dqdci; // dwdot[c2h2]/d[c2h2]
  J[1621] += dqdci; // dwdot[c2h3]/d[c2h2]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7850] -= dqdT; // dwdot[c2h2]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT

  // reaction 139: c2h5 + ch3 => c2h4 + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[17];
  k_f = 19500000 * exp(-0.5 * logT);
  dlnkfdT = -0.5 * invT;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[16] += q; // c2h4
  wdot[17] -= q; // c2h5
  // d()/d[ch3]
  dqdci = +k_f * sc[17];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[817] += dqdci; // dwdot[c2h4]/d[ch3]
  J[818] -= dqdci; // dwdot[c2h5]/d[ch3]
  // d()/d[c2h5]
  dqdci = +k_f * sc[9];
  J[1522] -= dqdci; // dwdot[ch3]/d[c2h5]
  J[1523] += dqdci; // dwdot[ch4]/d[c2h5]
  J[1529] += dqdci; // dwdot[c2h4]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT

  // reaction 140: c2h4 + ch4 => c2h5 + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[16];
  k_f = 28950000000 * exp(-0.7 * logT - (35310.7134395172) * invT);
  dlnkfdT = -0.7 * invT + (35310.7134395172) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[16] -= q; // c2h4
  wdot[17] += q; // c2h5
  // d()/d[ch4]
  dqdci = +k_f * sc[16];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[906] -= dqdci; // dwdot[c2h4]/d[ch4]
  J[907] += dqdci; // dwdot[c2h5]/d[ch4]
  // d()/d[c2h4]
  dqdci = +k_f * sc[10];
  J[1433] += dqdci; // dwdot[ch3]/d[c2h4]
  J[1434] -= dqdci; // dwdot[ch4]/d[c2h4]
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1441] += dqdci; // dwdot[c2h5]/d[c2h4]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT

  // reaction 141: c2h3 + h => c2h2 + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[19];
  k_f = 20000000 * exp(-(1258.0416645118) * invT);
  dlnkfdT = (1258.0416645118) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[18] += q; // c2h2
  wdot[19] -= q; // c2h3
  // d()/d[h]
  dqdci = +k_f * sc[19];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[18] += dqdci; // dwdot[c2h2]/d[h]
  J[19] -= dqdci; // dwdot[c2h3]/d[h]
  // d()/d[c2h3]
  dqdci = +k_f * sc[0];
  J[1691] -= dqdci; // dwdot[h]/d[c2h3]
  J[1692] += dqdci; // dwdot[h2]/d[c2h3]
  J[1709] += dqdci; // dwdot[c2h2]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7850] += dqdT; // dwdot[c2h2]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT

  // reaction 142: c2h2 + h2 => c2h3 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[18];
  k_f = 13310000 * exp(-(34258.9906079853) * invT);
  dlnkfdT = (34258.9906079853) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[18] -= q; // c2h2
  wdot[19] += q; // c2h3
  // d()/d[h2]
  dqdci = +k_f * sc[18];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[107] -= dqdci; // dwdot[c2h2]/d[h2]
  J[108] += dqdci; // dwdot[c2h3]/d[h2]
  // d()/d[c2h2]
  dqdci = +k_f * sc[1];
  J[1602] += dqdci; // dwdot[h]/d[c2h2]
  J[1603] -= dqdci; // dwdot[h2]/d[c2h2]
  J[1620] -= dqdci; // dwdot[c2h2]/d[c2h2]
  J[1621] += dqdci; // dwdot[c2h3]/d[c2h2]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7850] -= dqdT; // dwdot[c2h2]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT

  // reaction 143: c2h5 + h => 2 ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[17];
  k_f = 36100000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;     // h
  wdot[9] += 2 * q; // ch3
  wdot[17] -= q;    // c2h5
  // d()/d[h]
  dqdci = +k_f * sc[17];
  J[0] -= dqdci;     // dwdot[h]/d[h]
  J[9] += 2 * dqdci; // dwdot[ch3]/d[h]
  J[17] -= dqdci;    // dwdot[c2h5]/d[h]
  // d()/d[c2h5]
  dqdci = +k_f * sc[0];
  J[1513] -= dqdci;     // dwdot[h]/d[c2h5]
  J[1522] += 2 * dqdci; // dwdot[ch3]/d[c2h5]
  J[1530] -= dqdci;     // dwdot[c2h5]/d[c2h5]
  // d()/dT
  J[7832] -= dqdT;     // dwdot[h]/dT
  J[7841] += 2 * dqdT; // dwdot[ch3]/dT
  J[7849] -= dqdT;     // dwdot[c2h5]/dT

  // reaction 144: 2 ch3 => c2h5 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[9] * sc[9]);
  k_f = 54460000000 * exp(-1.03 * logT - (8544.61898536414) * invT);
  dlnkfdT = -1.03 * invT + (8544.61898536414) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;     // h
  wdot[9] -= 2 * q; // ch3
  wdot[17] += q;    // c2h5
  // d()/d[ch3]
  dqdci = +k_f * 2.000000 * sc[9];
  J[801] += dqdci;      // dwdot[h]/d[ch3]
  J[810] += -2 * dqdci; // dwdot[ch3]/d[ch3]
  J[818] += dqdci;      // dwdot[c2h5]/d[ch3]
  // d()/dT
  J[7832] += dqdT;      // dwdot[h]/dT
  J[7841] += -2 * dqdT; // dwdot[ch3]/dT
  J[7849] += dqdT;      // dwdot[c2h5]/dT

  // reaction 145: c2h3 + o2 => ch2o + hco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[19];
  k_f = 1.7e+23 * exp(-5.31 * logT - (3270.90832773068) * invT);
  dlnkfdT = -5.31 * invT + (3270.90832773068) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[7] += q;  // hco
  wdot[13] += q; // ch2o
  wdot[19] -= q; // c2h3
  // d()/d[o2]
  dqdci = +k_f * sc[19];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[274] += dqdci; // dwdot[hco]/d[o2]
  J[280] += dqdci; // dwdot[ch2o]/d[o2]
  J[286] -= dqdci; // dwdot[c2h3]/d[o2]
  // d()/d[c2h3]
  dqdci = +k_f * sc[3];
  J[1694] -= dqdci; // dwdot[o2]/d[c2h3]
  J[1698] += dqdci; // dwdot[hco]/d[c2h3]
  J[1704] += dqdci; // dwdot[ch2o]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7839] += dqdT; // dwdot[hco]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT

  // reaction 146: ch2o + hco => c2h3 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[13];
  k_f = 1.657e+23 * exp(-5.31 * logT - (46824.3107531292) * invT);
  dlnkfdT = -5.31 * invT + (46824.3107531292) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[7] -= q;  // hco
  wdot[13] -= q; // ch2o
  wdot[19] += q; // c2h3
  // d()/d[hco]
  dqdci = +k_f * sc[13];
  J[626] += dqdci; // dwdot[o2]/d[hco]
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  J[636] -= dqdci; // dwdot[ch2o]/d[hco]
  J[642] += dqdci; // dwdot[c2h3]/d[hco]
  // d()/d[ch2o]
  dqdci = +k_f * sc[7];
  J[1160] += dqdci; // dwdot[o2]/d[ch2o]
  J[1164] -= dqdci; // dwdot[hco]/d[ch2o]
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  J[1176] += dqdci; // dwdot[c2h3]/d[ch2o]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7839] -= dqdT; // dwdot[hco]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT

  // reaction 147: c2h6 => c2h5 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15];
  k_f = 2.783e+21 * exp(-1.56 * logT - (52233.8899105299) * invT);
  dlnkfdT = -1.56 * invT + (52233.8899105299) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[15] -= q; // c2h6
  wdot[17] += q; // c2h5
  // d()/d[c2h6]
  dqdci = +k_f;
  J[1335] += dqdci; // dwdot[h]/d[c2h6]
  J[1350] -= dqdci; // dwdot[c2h6]/d[c2h6]
  J[1352] += dqdci; // dwdot[c2h5]/d[c2h6]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7847] -= dqdT; // dwdot[c2h6]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT

  // reaction 148: c2h5 + h => c2h6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[17];
  k_f = 36100000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[15] += q; // c2h6
  wdot[17] -= q; // c2h5
  // d()/d[h]
  dqdci = +k_f * sc[17];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[15] += dqdci; // dwdot[c2h6]/d[h]
  J[17] -= dqdci; // dwdot[c2h5]/d[h]
  // d()/d[c2h5]
  dqdci = +k_f * sc[0];
  J[1513] -= dqdci; // dwdot[h]/d[c2h5]
  J[1528] += dqdci; // dwdot[c2h6]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7847] += dqdT; // dwdot[c2h6]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT

  // reaction 149: c2h4 + ch3 => c2h3 + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[16];
  k_f = 6.62e-06 * exp(3.7 * logT - (4780.55832514484) * invT);
  dlnkfdT = 3.7 * invT + (4780.55832514484) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[16] -= q; // c2h4
  wdot[19] += q; // c2h3
  // d()/d[ch3]
  dqdci = +k_f * sc[16];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[817] -= dqdci; // dwdot[c2h4]/d[ch3]
  J[820] += dqdci; // dwdot[c2h3]/d[ch3]
  // d()/d[c2h4]
  dqdci = +k_f * sc[9];
  J[1433] -= dqdci; // dwdot[ch3]/d[c2h4]
  J[1434] += dqdci; // dwdot[ch4]/d[c2h4]
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1443] += dqdci; // dwdot[c2h3]/d[c2h4]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT

  // reaction 150: c2h3 + ch4 => c2h4 + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[19];
  k_f = 1.44e-06 * exp(4.02 * logT - (2753.60159528343) * invT);
  dlnkfdT = 4.02 * invT + (2753.60159528343) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[16] += q; // c2h4
  wdot[19] -= q; // c2h3
  // d()/d[ch4]
  dqdci = +k_f * sc[19];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[906] += dqdci; // dwdot[c2h4]/d[ch4]
  J[909] -= dqdci; // dwdot[c2h3]/d[ch4]
  // d()/d[c2h3]
  dqdci = +k_f * sc[10];
  J[1700] += dqdci; // dwdot[ch3]/d[c2h3]
  J[1701] -= dqdci; // dwdot[ch4]/d[c2h3]
  J[1707] += dqdci; // dwdot[c2h4]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT

  // reaction 152: ch3cho => ch3 + hco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[24];
  k_f = 2.614e+15 * exp(0.15 * logT - (40534.1024305702) * invT);
  dlnkfdT = 0.15 * invT + (40534.1024305702) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[7] += q;  // hco
  wdot[9] += q;  // ch3
  wdot[24] -= q; // ch3cho
  // d()/d[ch3cho]
  dqdci = +k_f;
  J[2143] += dqdci; // dwdot[hco]/d[ch3cho]
  J[2145] += dqdci; // dwdot[ch3]/d[ch3cho]
  J[2160] -= dqdci; // dwdot[ch3cho]/d[ch3cho]
  // d()/dT
  J[7839] += dqdT; // dwdot[hco]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7856] -= dqdT; // dwdot[ch3cho]/dT

  // reaction 153: ch3 + hco => ch3cho
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[9];
  k_f = 20000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[7] -= q;  // hco
  wdot[9] -= q;  // ch3
  wdot[24] += q; // ch3cho
  // d()/d[hco]
  dqdci = +k_f * sc[9];
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  J[632] -= dqdci; // dwdot[ch3]/d[hco]
  J[647] += dqdci; // dwdot[ch3cho]/d[hco]
  // d()/d[ch3]
  dqdci = +k_f * sc[7];
  J[808] -= dqdci; // dwdot[hco]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[825] += dqdci; // dwdot[ch3cho]/d[ch3]
  // d()/dT
  J[7839] -= dqdT; // dwdot[hco]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT

  // reaction 154: ch3cho + o2 => ch3co + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[24];
  k_f = 30100000 * exp(-(19700.9324662548) * invT);
  dlnkfdT = (19700.9324662548) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[22] += q; // ch3co
  wdot[24] -= q; // ch3cho
  // d()/d[o2]
  dqdci = +k_f * sc[24];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[289] += dqdci; // dwdot[ch3co]/d[o2]
  J[291] -= dqdci; // dwdot[ch3cho]/d[o2]
  // d()/d[ch3cho]
  dqdci = +k_f * sc[3];
  J[2139] -= dqdci; // dwdot[o2]/d[ch3cho]
  J[2147] += dqdci; // dwdot[ho2]/d[ch3cho]
  J[2158] += dqdci; // dwdot[ch3co]/d[ch3cho]
  J[2160] -= dqdci; // dwdot[ch3cho]/d[ch3cho]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7854] += dqdT; // dwdot[ch3co]/dT
  J[7856] -= dqdT; // dwdot[ch3cho]/dT

  // reaction 155: ch3co + ho2 => ch3cho + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[22];
  k_f = 85520 * exp(0.32 * logT - (-976.240331661156) * invT);
  dlnkfdT = 0.32 * invT + (-976.240331661156) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[22] -= q; // ch3co
  wdot[24] += q; // ch3cho
  // d()/d[ho2]
  dqdci = +k_f * sc[22];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1001] -= dqdci; // dwdot[ch3co]/d[ho2]
  J[1003] += dqdci; // dwdot[ch3cho]/d[ho2]
  // d()/d[ch3co]
  dqdci = +k_f * sc[11];
  J[1961] += dqdci; // dwdot[o2]/d[ch3co]
  J[1969] -= dqdci; // dwdot[ho2]/d[ch3co]
  J[1980] -= dqdci; // dwdot[ch3co]/d[ch3co]
  J[1982] += dqdci; // dwdot[ch3cho]/d[ch3co]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7854] -= dqdT; // dwdot[ch3co]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT

  // reaction 156: ch3cho + oh => ch3co + h2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[24];
  k_f = 2 * exp(1.8 * logT - (654.181665546136) * invT);
  dlnkfdT = 1.8 * invT + (654.181665546136) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[22] += q; // ch3co
  wdot[24] -= q; // ch3cho
  // d()/d[oh]
  dqdci = +k_f * sc[24];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[378] += dqdci; // dwdot[ch3co]/d[oh]
  J[380] -= dqdci; // dwdot[ch3cho]/d[oh]
  // d()/d[ch3cho]
  dqdci = +k_f * sc[4];
  J[2140] -= dqdci; // dwdot[oh]/d[ch3cho]
  J[2141] += dqdci; // dwdot[h2o]/d[ch3cho]
  J[2158] += dqdci; // dwdot[ch3co]/d[ch3cho]
  J[2160] -= dqdci; // dwdot[ch3cho]/d[ch3cho]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7854] += dqdT; // dwdot[ch3co]/dT
  J[7856] -= dqdT; // dwdot[ch3cho]/dT

  // reaction 157: ch3co + h2o => ch3cho + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[22];
  k_f = 1.354 * exp(1.79 * logT - (16530.667471685) * invT);
  dlnkfdT = 1.79 * invT + (16530.667471685) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[22] -= q; // ch3co
  wdot[24] += q; // ch3cho
  // d()/d[h2o]
  dqdci = +k_f * sc[22];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[467] -= dqdci; // dwdot[ch3co]/d[h2o]
  J[469] += dqdci; // dwdot[ch3cho]/d[h2o]
  // d()/d[ch3co]
  dqdci = +k_f * sc[5];
  J[1962] += dqdci; // dwdot[oh]/d[ch3co]
  J[1963] -= dqdci; // dwdot[h2o]/d[ch3co]
  J[1980] -= dqdci; // dwdot[ch3co]/d[ch3co]
  J[1982] += dqdci; // dwdot[ch3cho]/d[ch3co]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7854] -= dqdT; // dwdot[ch3co]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT

  // reaction 158: ch3cho + h => ch3co + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[24];
  k_f = 13400000 * exp(-(1660.61499715557) * invT);
  dlnkfdT = (1660.61499715557) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[22] += q; // ch3co
  wdot[24] -= q; // ch3cho
  // d()/d[h]
  dqdci = +k_f * sc[24];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[22] += dqdci; // dwdot[ch3co]/d[h]
  J[24] -= dqdci; // dwdot[ch3cho]/d[h]
  // d()/d[ch3cho]
  dqdci = +k_f * sc[0];
  J[2136] -= dqdci; // dwdot[h]/d[ch3cho]
  J[2137] += dqdci; // dwdot[h2]/d[ch3cho]
  J[2158] += dqdci; // dwdot[ch3co]/d[ch3cho]
  J[2160] -= dqdci; // dwdot[ch3cho]/d[ch3cho]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7854] += dqdT; // dwdot[ch3co]/dT
  J[7856] -= dqdT; // dwdot[ch3cho]/dT

  // reaction 159: ch3co + h2 => ch3cho + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[22];
  k_f = 2096000 * exp(-0.01 * logT - (9908.33614969493) * invT);
  dlnkfdT = -0.01 * invT + (9908.33614969493) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[22] -= q; // ch3co
  wdot[24] += q; // ch3cho
  // d()/d[h2]
  dqdci = +k_f * sc[22];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[111] -= dqdci; // dwdot[ch3co]/d[h2]
  J[113] += dqdci; // dwdot[ch3cho]/d[h2]
  // d()/d[ch3co]
  dqdci = +k_f * sc[1];
  J[1958] += dqdci; // dwdot[h]/d[ch3co]
  J[1959] -= dqdci; // dwdot[h2]/d[ch3co]
  J[1980] -= dqdci; // dwdot[ch3co]/d[ch3co]
  J[1982] += dqdci; // dwdot[ch3cho]/d[ch3co]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7854] -= dqdT; // dwdot[ch3co]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT

  // reaction 160: ch3cho + o => ch3co + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[24];
  k_f = 5940000 * exp(-(940.008731723216) * invT);
  dlnkfdT = (940.008731723216) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[4] += q;  // oh
  wdot[22] += q; // ch3co
  wdot[24] -= q; // ch3cho
  // d()/d[o]
  dqdci = +k_f * sc[24];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[182] += dqdci; // dwdot[oh]/d[o]
  J[200] += dqdci; // dwdot[ch3co]/d[o]
  J[202] -= dqdci; // dwdot[ch3cho]/d[o]
  // d()/d[ch3cho]
  dqdci = +k_f * sc[2];
  J[2138] -= dqdci; // dwdot[o]/d[ch3cho]
  J[2140] += dqdci; // dwdot[oh]/d[ch3cho]
  J[2158] += dqdci; // dwdot[ch3co]/d[ch3cho]
  J[2160] -= dqdci; // dwdot[ch3cho]/d[ch3cho]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7854] += dqdT; // dwdot[ch3co]/dT
  J[7856] -= dqdT; // dwdot[ch3cho]/dT

  // reaction 161: ch3co + oh => ch3cho + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[22];
  k_f = 408000 * exp(-0.01 * logT - (8137.01348606232) * invT);
  dlnkfdT = -0.01 * invT + (8137.01348606232) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[4] -= q;  // oh
  wdot[22] -= q; // ch3co
  wdot[24] += q; // ch3cho
  // d()/d[oh]
  dqdci = +k_f * sc[22];
  J[358] += dqdci; // dwdot[o]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[378] -= dqdci; // dwdot[ch3co]/d[oh]
  J[380] += dqdci; // dwdot[ch3cho]/d[oh]
  // d()/d[ch3co]
  dqdci = +k_f * sc[4];
  J[1960] += dqdci; // dwdot[o]/d[ch3co]
  J[1962] -= dqdci; // dwdot[oh]/d[ch3co]
  J[1980] -= dqdci; // dwdot[ch3co]/d[ch3co]
  J[1982] += dqdci; // dwdot[ch3cho]/d[ch3co]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7854] -= dqdT; // dwdot[ch3co]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT

  // reaction 162: ch3cho + ho2 => ch3co + h2o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[24];
  k_f = 3010000 * exp(-(5998.34265639226) * invT);
  dlnkfdT = (5998.34265639226) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  wdot[22] += q; // ch3co
  wdot[24] -= q; // ch3cho
  // d()/d[ho2]
  dqdci = +k_f * sc[24];
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[991] += dqdci;  // dwdot[h2o2]/d[ho2]
  J[1001] += dqdci; // dwdot[ch3co]/d[ho2]
  J[1003] -= dqdci; // dwdot[ch3cho]/d[ho2]
  // d()/d[ch3cho]
  dqdci = +k_f * sc[11];
  J[2147] -= dqdci; // dwdot[ho2]/d[ch3cho]
  J[2148] += dqdci; // dwdot[h2o2]/d[ch3cho]
  J[2158] += dqdci; // dwdot[ch3co]/d[ch3cho]
  J[2160] -= dqdci; // dwdot[ch3cho]/d[ch3cho]
  // d()/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT
  J[7854] += dqdT; // dwdot[ch3co]/dT
  J[7856] -= dqdT; // dwdot[ch3cho]/dT

  // reaction 163: ch3co + h2o2 => ch3cho + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[22];
  k_f = 12100000 * exp(-0.34 * logT - (6043.63215631468) * invT);
  dlnkfdT = -0.34 * invT + (6043.63215631468) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // ho2
  wdot[12] -= q; // h2o2
  wdot[22] -= q; // ch3co
  wdot[24] += q; // ch3cho
  // d()/d[h2o2]
  dqdci = +k_f * sc[22];
  J[1079] += dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci; // dwdot[h2o2]/d[h2o2]
  J[1090] -= dqdci; // dwdot[ch3co]/d[h2o2]
  J[1092] += dqdci; // dwdot[ch3cho]/d[h2o2]
  // d()/d[ch3co]
  dqdci = +k_f * sc[12];
  J[1969] += dqdci; // dwdot[ho2]/d[ch3co]
  J[1970] -= dqdci; // dwdot[h2o2]/d[ch3co]
  J[1980] -= dqdci; // dwdot[ch3co]/d[ch3co]
  J[1982] += dqdci; // dwdot[ch3cho]/d[ch3co]
  // d()/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT; // dwdot[h2o2]/dT
  J[7854] -= dqdT; // dwdot[ch3co]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT

  // reaction 164: ch3 + ch3cho => ch3co + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[24];
  k_f = 2.608 * exp(1.78 * logT - (2974.5137115717) * invT);
  dlnkfdT = 1.78 * invT + (2974.5137115717) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[22] += q; // ch3co
  wdot[24] -= q; // ch3cho
  // d()/d[ch3]
  dqdci = +k_f * sc[24];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[823] += dqdci; // dwdot[ch3co]/d[ch3]
  J[825] -= dqdci; // dwdot[ch3cho]/d[ch3]
  // d()/d[ch3cho]
  dqdci = +k_f * sc[9];
  J[2145] -= dqdci; // dwdot[ch3]/d[ch3cho]
  J[2146] += dqdci; // dwdot[ch4]/d[ch3cho]
  J[2158] += dqdci; // dwdot[ch3co]/d[ch3cho]
  J[2160] -= dqdci; // dwdot[ch3cho]/d[ch3cho]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7854] += dqdT; // dwdot[ch3co]/dT
  J[7856] -= dqdT; // dwdot[ch3cho]/dT

  // reaction 165: ch3co + ch4 => ch3 + ch3cho
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[22];
  k_f = 10.66 * exp(1.77 * logT - (11463.2756470315) * invT);
  dlnkfdT = 1.77 * invT + (11463.2756470315) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[22] -= q; // ch3co
  wdot[24] += q; // ch3cho
  // d()/d[ch4]
  dqdci = +k_f * sc[22];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[912] -= dqdci; // dwdot[ch3co]/d[ch4]
  J[914] += dqdci; // dwdot[ch3cho]/d[ch4]
  // d()/d[ch3co]
  dqdci = +k_f * sc[10];
  J[1967] += dqdci; // dwdot[ch3]/d[ch3co]
  J[1968] -= dqdci; // dwdot[ch4]/d[ch3co]
  J[1980] -= dqdci; // dwdot[ch3co]/d[ch3co]
  J[1982] += dqdci; // dwdot[ch3cho]/d[ch3co]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7854] -= dqdT; // dwdot[ch3co]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT

  // reaction 166: c3h5-a => c2h2 + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[47];
  k_f = 2.397e+48 * exp(-9.9 * logT - (41304.0239292514) * invT);
  dlnkfdT = -9.9 * invT + (41304.0239292514) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[18] += q; // c2h2
  wdot[47] -= q; // c3h5-a
  // d()/d[c3h5-a]
  dqdci = +k_f;
  J[4192] += dqdci; // dwdot[ch3]/d[c3h5-a]
  J[4201] += dqdci; // dwdot[c2h2]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7850] += dqdT; // dwdot[c2h2]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 167: c2h2 + ch3 => c3h5-a
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[18];
  k_f = 2.61e+40 * exp(-9.82 * logT - (18593.8558014844) * invT);
  dlnkfdT = -9.82 * invT + (18593.8558014844) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[18] -= q; // c2h2
  wdot[47] += q; // c3h5-a
  // d()/d[ch3]
  dqdci = +k_f * sc[18];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[819] -= dqdci; // dwdot[c2h2]/d[ch3]
  J[848] += dqdci; // dwdot[c3h5-a]/d[ch3]
  // d()/d[c2h2]
  dqdci = +k_f * sc[9];
  J[1611] -= dqdci; // dwdot[ch3]/d[c2h2]
  J[1620] -= dqdci; // dwdot[c2h2]/d[c2h2]
  J[1649] += dqdci; // dwdot[c3h5-a]/d[c2h2]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7850] -= dqdT; // dwdot[c2h2]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 168: c3h6 => c2h3 + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[26];
  k_f = 2.73e+62 * exp(-13.28 * logT - (61996.2932271415) * invT);
  dlnkfdT = -13.28 * invT + (61996.2932271415) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[19] += q; // c2h3
  wdot[26] -= q; // c3h6
  // d()/d[c3h6]
  dqdci = +k_f;
  J[2323] += dqdci; // dwdot[ch3]/d[c3h6]
  J[2333] += dqdci; // dwdot[c2h3]/d[c3h6]
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT

  // reaction 169: c2h3 + ch3 => c3h6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[19];
  k_f = 4.712e+53 * exp(-13.19 * logT - (14865.0203078714) * invT);
  dlnkfdT = -13.19 * invT + (14865.0203078714) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[19] -= q; // c2h3
  wdot[26] += q; // c3h6
  // d()/d[ch3]
  dqdci = +k_f * sc[19];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[820] -= dqdci; // dwdot[c2h3]/d[ch3]
  J[827] += dqdci; // dwdot[c3h6]/d[ch3]
  // d()/d[c2h3]
  dqdci = +k_f * sc[9];
  J[1700] -= dqdci; // dwdot[ch3]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  J[1717] += dqdci; // dwdot[c3h6]/d[c2h3]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT

  // reaction 170: c2h2 + ch3 => c3h4-a + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[18];
  k_f = 67400000000000 * exp(-2.08 * logT - (15896.6144727711) * invT);
  dlnkfdT = -2.08 * invT + (15896.6144727711) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[9] -= q;  // ch3
  wdot[18] -= q; // c2h2
  wdot[25] += q; // c3h4-a
  // d()/d[ch3]
  dqdci = +k_f * sc[18];
  J[801] += dqdci; // dwdot[h]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[819] -= dqdci; // dwdot[c2h2]/d[ch3]
  J[826] += dqdci; // dwdot[c3h4-a]/d[ch3]
  // d()/d[c2h2]
  dqdci = +k_f * sc[9];
  J[1602] += dqdci; // dwdot[h]/d[c2h2]
  J[1611] -= dqdci; // dwdot[ch3]/d[c2h2]
  J[1620] -= dqdci; // dwdot[c2h2]/d[c2h2]
  J[1627] += dqdci; // dwdot[c3h4-a]/d[c2h2]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7850] -= dqdT; // dwdot[c2h2]/dT
  J[7857] += dqdT; // dwdot[c3h4-a]/dT

  // reaction 171: c3h4-a + h => c2h2 + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[25];
  k_f = 11490000000 * exp(-0.7 * logT - (7945.79115305652) * invT);
  dlnkfdT = -0.7 * invT + (7945.79115305652) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[9] += q;  // ch3
  wdot[18] += q; // c2h2
  wdot[25] -= q; // c3h4-a
  // d()/d[h]
  dqdci = +k_f * sc[25];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[9] += dqdci;  // dwdot[ch3]/d[h]
  J[18] += dqdci; // dwdot[c2h2]/d[h]
  J[25] -= dqdci; // dwdot[c3h4-a]/d[h]
  // d()/d[c3h4-a]
  dqdci = +k_f * sc[0];
  J[2225] -= dqdci; // dwdot[h]/d[c3h4-a]
  J[2234] += dqdci; // dwdot[ch3]/d[c3h4-a]
  J[2243] += dqdci; // dwdot[c2h2]/d[c3h4-a]
  J[2250] -= dqdci; // dwdot[c3h4-a]/d[c3h4-a]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7850] += dqdT; // dwdot[c2h2]/dT
  J[7857] -= dqdT; // dwdot[c3h4-a]/dT

  // reaction 172: c3h6 => c3h5-a + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[26];
  k_f = 2.01e+61 * exp(-13.26 * logT - (59631.1748978593) * invT);
  dlnkfdT = -13.26 * invT + (59631.1748978593) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[26] -= q; // c3h6
  wdot[47] += q; // c3h5-a
  // d()/d[c3h6]
  dqdci = +k_f;
  J[2314] += dqdci; // dwdot[h]/d[c3h6]
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  J[2361] += dqdci; // dwdot[c3h5-a]/d[c3h6]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 173: c3h5-a + h => c3h6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[47];
  k_f = 4.887e+50 * exp(-12.25 * logT - (14130.3239757965) * invT);
  dlnkfdT = -12.25 * invT + (14130.3239757965) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[26] += q; // c3h6
  wdot[47] -= q; // c3h5-a
  // d()/d[h]
  dqdci = +k_f * sc[47];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[26] += dqdci; // dwdot[c3h6]/d[h]
  J[47] -= dqdci; // dwdot[c3h5-a]/d[h]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[0];
  J[4183] -= dqdci; // dwdot[h]/d[c3h5-a]
  J[4209] += dqdci; // dwdot[c3h6]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 174: c3h6 + o => ch2co + ch3 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[26];
  k_f = 25 * exp(1.76 * logT - (38.2444666011587) * invT);
  dlnkfdT = 1.76 * invT + (38.2444666011587) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[2] -= q;  // o
  wdot[9] += q;  // ch3
  wdot[20] += q; // ch2co
  wdot[26] -= q; // c3h6
  // d()/d[o]
  dqdci = +k_f * sc[26];
  J[178] += dqdci; // dwdot[h]/d[o]
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[187] += dqdci; // dwdot[ch3]/d[o]
  J[198] += dqdci; // dwdot[ch2co]/d[o]
  J[204] -= dqdci; // dwdot[c3h6]/d[o]
  // d()/d[c3h6]
  dqdci = +k_f * sc[2];
  J[2314] += dqdci; // dwdot[h]/d[c3h6]
  J[2316] -= dqdci; // dwdot[o]/d[c3h6]
  J[2323] += dqdci; // dwdot[ch3]/d[c3h6]
  J[2334] += dqdci; // dwdot[ch2co]/d[c3h6]
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7852] += dqdT; // dwdot[ch2co]/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT

  // reaction 175: ch2co + ch3 + h => c3h6 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[9] * sc[20];
  k_f = 1e-12;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[2] += q;  // o
  wdot[9] -= q;  // ch3
  wdot[20] -= q; // ch2co
  wdot[26] += q; // c3h6
  // d()/d[h]
  dqdci = +k_f * sc[9] * sc[20];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[2] += dqdci;  // dwdot[o]/d[h]
  J[9] -= dqdci;  // dwdot[ch3]/d[h]
  J[20] -= dqdci; // dwdot[ch2co]/d[h]
  J[26] += dqdci; // dwdot[c3h6]/d[h]
  // d()/d[ch3]
  dqdci = +k_f * sc[0] * sc[20];
  J[801] -= dqdci; // dwdot[h]/d[ch3]
  J[803] += dqdci; // dwdot[o]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[821] -= dqdci; // dwdot[ch2co]/d[ch3]
  J[827] += dqdci; // dwdot[c3h6]/d[ch3]
  // d()/d[ch2co]
  dqdci = +k_f * sc[0] * sc[9];
  J[1780] -= dqdci; // dwdot[h]/d[ch2co]
  J[1782] += dqdci; // dwdot[o]/d[ch2co]
  J[1789] -= dqdci; // dwdot[ch3]/d[ch2co]
  J[1800] -= dqdci; // dwdot[ch2co]/d[ch2co]
  J[1806] += dqdci; // dwdot[c3h6]/d[ch2co]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7852] -= dqdT; // dwdot[ch2co]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT

  // reaction 176: c3h6 + o => c2h5 + hco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[26];
  k_f = 15.8 * exp(1.76 * logT - (-611.911465618539) * invT);
  dlnkfdT = 1.76 * invT + (-611.911465618539) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[7] += q;  // hco
  wdot[17] += q; // c2h5
  wdot[26] -= q; // c3h6
  // d()/d[o]
  dqdci = +k_f * sc[26];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[185] += dqdci; // dwdot[hco]/d[o]
  J[195] += dqdci; // dwdot[c2h5]/d[o]
  J[204] -= dqdci; // dwdot[c3h6]/d[o]
  // d()/d[c3h6]
  dqdci = +k_f * sc[2];
  J[2316] -= dqdci; // dwdot[o]/d[c3h6]
  J[2321] += dqdci; // dwdot[hco]/d[c3h6]
  J[2331] += dqdci; // dwdot[c2h5]/d[c3h6]
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7839] += dqdT; // dwdot[hco]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT

  // reaction 177: c2h5 + hco => c3h6 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[17];
  k_f = 0.1402 * exp(1.88 * logT - (13340.2738104831) * invT);
  dlnkfdT = 1.88 * invT + (13340.2738104831) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[7] -= q;  // hco
  wdot[17] -= q; // c2h5
  wdot[26] += q; // c3h6
  // d()/d[hco]
  dqdci = +k_f * sc[17];
  J[625] += dqdci; // dwdot[o]/d[hco]
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  J[640] -= dqdci; // dwdot[c2h5]/d[hco]
  J[649] += dqdci; // dwdot[c3h6]/d[hco]
  // d()/d[c2h5]
  dqdci = +k_f * sc[7];
  J[1515] += dqdci; // dwdot[o]/d[c2h5]
  J[1520] -= dqdci; // dwdot[hco]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1539] += dqdci; // dwdot[c3h6]/d[c2h5]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7839] -= dqdT; // dwdot[hco]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT

  // reaction 178: c3h6 + ho2 => c3h5-a + h2o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[26];
  k_f = 150000 * exp(-(7140.64448776897) * invT);
  dlnkfdT = (7140.64448776897) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  wdot[26] -= q; // c3h6
  wdot[47] += q; // c3h5-a
  // d()/d[ho2]
  dqdci = +k_f * sc[26];
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[991] += dqdci;  // dwdot[h2o2]/d[ho2]
  J[1005] -= dqdci; // dwdot[c3h6]/d[ho2]
  J[1026] += dqdci; // dwdot[c3h5-a]/d[ho2]
  // d()/d[c3h6]
  dqdci = +k_f * sc[11];
  J[2325] -= dqdci; // dwdot[ho2]/d[c3h6]
  J[2326] += dqdci; // dwdot[h2o2]/d[c3h6]
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  J[2361] += dqdci; // dwdot[c3h5-a]/d[c3h6]
  // d()/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 179: c3h5-a + h2o2 => c3h6 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[47];
  k_f = 0.5867 * exp(1.33 * logT - (4910.89144158826) * invT);
  dlnkfdT = 1.33 * invT + (4910.89144158826) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // ho2
  wdot[12] -= q; // h2o2
  wdot[26] += q; // c3h6
  wdot[47] -= q; // c3h5-a
  // d()/d[h2o2]
  dqdci = +k_f * sc[47];
  J[1079] += dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci; // dwdot[h2o2]/d[h2o2]
  J[1094] += dqdci; // dwdot[c3h6]/d[h2o2]
  J[1115] -= dqdci; // dwdot[c3h5-a]/d[h2o2]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[12];
  J[4194] += dqdci; // dwdot[ho2]/d[c3h5-a]
  J[4195] -= dqdci; // dwdot[h2o2]/d[c3h5-a]
  J[4209] += dqdci; // dwdot[c3h6]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT; // dwdot[h2o2]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 180: c3h6 + oh => c3h5-a + h2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[26];
  k_f = 3.12 * exp(2 * logT - (-149.958566409806) * invT);
  dlnkfdT = 2 * invT + (-149.958566409806) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[26] -= q; // c3h6
  wdot[47] += q; // c3h5-a
  // d()/d[oh]
  dqdci = +k_f * sc[26];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[382] -= dqdci; // dwdot[c3h6]/d[oh]
  J[403] += dqdci; // dwdot[c3h5-a]/d[oh]
  // d()/d[c3h6]
  dqdci = +k_f * sc[4];
  J[2318] -= dqdci; // dwdot[oh]/d[c3h6]
  J[2319] += dqdci; // dwdot[h2o]/d[c3h6]
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  J[2361] += dqdci; // dwdot[c3h5-a]/d[c3h6]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 181: c3h5-a + h2o => c3h6 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[47];
  k_f = 6.194 * exp(2.01 * logT - (16042.5473058545) * invT);
  dlnkfdT = 2.01 * invT + (16042.5473058545) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[26] += q; // c3h6
  wdot[47] -= q; // c3h5-a
  // d()/d[h2o]
  dqdci = +k_f * sc[47];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[471] += dqdci; // dwdot[c3h6]/d[h2o]
  J[492] -= dqdci; // dwdot[c3h5-a]/d[h2o]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[5];
  J[4187] += dqdci; // dwdot[oh]/d[c3h5-a]
  J[4188] -= dqdci; // dwdot[h2o]/d[c3h5-a]
  J[4209] += dqdci; // dwdot[c3h6]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 182: c4h6 => 2 c2h3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[27];
  k_f = 4.027e+19 * exp(-1 * logT - (49390.7157487332) * invT);
  dlnkfdT = -1 * invT + (49390.7157487332) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[19] += 2 * q; // c2h3
  wdot[27] -= q;     // c4h6
  // d()/d[c4h6]
  dqdci = +k_f;
  J[2422] += 2 * dqdci; // dwdot[c2h3]/d[c4h6]
  J[2430] -= dqdci;     // dwdot[c4h6]/d[c4h6]
  // d()/dT
  J[7851] += 2 * dqdT; // dwdot[c2h3]/dT
  J[7859] -= dqdT;     // dwdot[c4h6]/dT

  // reaction 183: 2 c2h3 => c4h6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[19] * sc[19]);
  k_f = 12600000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[19] -= 2 * q; // c2h3
  wdot[27] += q;     // c4h6
  // d()/d[c2h3]
  dqdci = +k_f * 2.000000 * sc[19];
  J[1710] += -2 * dqdci; // dwdot[c2h3]/d[c2h3]
  J[1718] += dqdci;      // dwdot[c4h6]/d[c2h3]
  // d()/dT
  J[7851] += -2 * dqdT; // dwdot[c2h3]/dT
  J[7859] += dqdT;      // dwdot[c4h6]/dT

  // reaction 184: c4h6 + oh => c2h5 + ch2co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[27];
  k_f = 1000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[17] += q; // c2h5
  wdot[20] += q; // ch2co
  wdot[27] -= q; // c4h6
  // d()/d[oh]
  dqdci = +k_f * sc[27];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[373] += dqdci; // dwdot[c2h5]/d[oh]
  J[376] += dqdci; // dwdot[ch2co]/d[oh]
  J[383] -= dqdci; // dwdot[c4h6]/d[oh]
  // d()/d[c4h6]
  dqdci = +k_f * sc[4];
  J[2407] -= dqdci; // dwdot[oh]/d[c4h6]
  J[2420] += dqdci; // dwdot[c2h5]/d[c4h6]
  J[2423] += dqdci; // dwdot[ch2co]/d[c4h6]
  J[2430] -= dqdci; // dwdot[c4h6]/d[c4h6]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7852] += dqdT; // dwdot[ch2co]/dT
  J[7859] -= dqdT; // dwdot[c4h6]/dT

  // reaction 185: c2h5 + ch2co => c4h6 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[20];
  k_f = 3730000 * exp(-(15106.5643074577) * invT);
  dlnkfdT = (15106.5643074577) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[17] -= q; // c2h5
  wdot[20] -= q; // ch2co
  wdot[27] += q; // c4h6
  // d()/d[c2h5]
  dqdci = +k_f * sc[20];
  J[1517] += dqdci; // dwdot[oh]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1533] -= dqdci; // dwdot[ch2co]/d[c2h5]
  J[1540] += dqdci; // dwdot[c4h6]/d[c2h5]
  // d()/d[ch2co]
  dqdci = +k_f * sc[17];
  J[1784] += dqdci; // dwdot[oh]/d[ch2co]
  J[1797] -= dqdci; // dwdot[c2h5]/d[ch2co]
  J[1800] -= dqdci; // dwdot[ch2co]/d[ch2co]
  J[1807] += dqdci; // dwdot[c4h6]/d[ch2co]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7852] -= dqdT; // dwdot[ch2co]/dT
  J[7859] += dqdT; // dwdot[c4h6]/dT

  // reaction 186: c4h6 + oh => c3h5-a + ch2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[27];
  k_f = 1000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[13] += q; // ch2o
  wdot[27] -= q; // c4h6
  wdot[47] += q; // c3h5-a
  // d()/d[oh]
  dqdci = +k_f * sc[27];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[369] += dqdci; // dwdot[ch2o]/d[oh]
  J[383] -= dqdci; // dwdot[c4h6]/d[oh]
  J[403] += dqdci; // dwdot[c3h5-a]/d[oh]
  // d()/d[c4h6]
  dqdci = +k_f * sc[4];
  J[2407] -= dqdci; // dwdot[oh]/d[c4h6]
  J[2416] += dqdci; // dwdot[ch2o]/d[c4h6]
  J[2430] -= dqdci; // dwdot[c4h6]/d[c4h6]
  J[2450] += dqdci; // dwdot[c3h5-a]/d[c4h6]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT
  J[7859] -= dqdT; // dwdot[c4h6]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 187: c3h5-a + ch2o => c4h6 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[47];
  k_f = 3.501 * exp(-(35758.5762720834) * invT);
  dlnkfdT = (35758.5762720834) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[13] -= q; // ch2o
  wdot[27] += q; // c4h6
  wdot[47] -= q; // c3h5-a
  // d()/d[ch2o]
  dqdci = +k_f * sc[47];
  J[1161] += dqdci; // dwdot[oh]/d[ch2o]
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  J[1184] += dqdci; // dwdot[c4h6]/d[ch2o]
  J[1204] -= dqdci; // dwdot[c3h5-a]/d[ch2o]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[13];
  J[4187] += dqdci; // dwdot[oh]/d[c3h5-a]
  J[4196] -= dqdci; // dwdot[ch2o]/d[c3h5-a]
  J[4210] += dqdci; // dwdot[c4h6]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT
  J[7859] += dqdT; // dwdot[c4h6]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 188: c4h6 + oh => c2h3 + ch3cho
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[27];
  k_f = 1000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[19] += q; // c2h3
  wdot[24] += q; // ch3cho
  wdot[27] -= q; // c4h6
  // d()/d[oh]
  dqdci = +k_f * sc[27];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[375] += dqdci; // dwdot[c2h3]/d[oh]
  J[380] += dqdci; // dwdot[ch3cho]/d[oh]
  J[383] -= dqdci; // dwdot[c4h6]/d[oh]
  // d()/d[c4h6]
  dqdci = +k_f * sc[4];
  J[2407] -= dqdci; // dwdot[oh]/d[c4h6]
  J[2422] += dqdci; // dwdot[c2h3]/d[c4h6]
  J[2427] += dqdci; // dwdot[ch3cho]/d[c4h6]
  J[2430] -= dqdci; // dwdot[c4h6]/d[c4h6]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT
  J[7859] -= dqdT; // dwdot[c4h6]/dT

  // reaction 189: c2h3 + ch3cho => c4h6 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[24];
  k_f = 543700 * exp(-(9334.66915067755) * invT);
  dlnkfdT = (9334.66915067755) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[19] -= q; // c2h3
  wdot[24] -= q; // ch3cho
  wdot[27] += q; // c4h6
  // d()/d[c2h3]
  dqdci = +k_f * sc[24];
  J[1695] += dqdci; // dwdot[oh]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  J[1715] -= dqdci; // dwdot[ch3cho]/d[c2h3]
  J[1718] += dqdci; // dwdot[c4h6]/d[c2h3]
  // d()/d[ch3cho]
  dqdci = +k_f * sc[19];
  J[2140] += dqdci; // dwdot[oh]/d[ch3cho]
  J[2155] -= dqdci; // dwdot[c2h3]/d[ch3cho]
  J[2160] -= dqdci; // dwdot[ch3cho]/d[ch3cho]
  J[2163] += dqdci; // dwdot[c4h6]/d[ch3cho]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT
  J[7856] -= dqdT; // dwdot[ch3cho]/dT
  J[7859] += dqdT; // dwdot[c4h6]/dT

  // reaction 190: c4h6 + o => c2h4 + ch2co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[27];
  k_f = 1000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[16] += q; // c2h4
  wdot[20] += q; // ch2co
  wdot[27] -= q; // c4h6
  // d()/d[o]
  dqdci = +k_f * sc[27];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[194] += dqdci; // dwdot[c2h4]/d[o]
  J[198] += dqdci; // dwdot[ch2co]/d[o]
  J[205] -= dqdci; // dwdot[c4h6]/d[o]
  // d()/d[c4h6]
  dqdci = +k_f * sc[2];
  J[2405] -= dqdci; // dwdot[o]/d[c4h6]
  J[2419] += dqdci; // dwdot[c2h4]/d[c4h6]
  J[2423] += dqdci; // dwdot[ch2co]/d[c4h6]
  J[2430] -= dqdci; // dwdot[c4h6]/d[c4h6]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7852] += dqdT; // dwdot[ch2co]/dT
  J[7859] -= dqdT; // dwdot[c4h6]/dT

  // reaction 191: c2h4 + ch2co => c4h6 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[20];
  k_f = 637700 * exp(-(47473.4602520173) * invT);
  dlnkfdT = (47473.4602520173) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[16] -= q; // c2h4
  wdot[20] -= q; // ch2co
  wdot[27] += q; // c4h6
  // d()/d[c2h4]
  dqdci = +k_f * sc[20];
  J[1426] += dqdci; // dwdot[o]/d[c2h4]
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1444] -= dqdci; // dwdot[ch2co]/d[c2h4]
  J[1451] += dqdci; // dwdot[c4h6]/d[c2h4]
  // d()/d[ch2co]
  dqdci = +k_f * sc[16];
  J[1782] += dqdci; // dwdot[o]/d[ch2co]
  J[1796] -= dqdci; // dwdot[c2h4]/d[ch2co]
  J[1800] -= dqdci; // dwdot[ch2co]/d[ch2co]
  J[1807] += dqdci; // dwdot[c4h6]/d[ch2co]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7852] -= dqdT; // dwdot[ch2co]/dT
  J[7859] += dqdT; // dwdot[c4h6]/dT

  // reaction 192: c4h6 + o => c3h4-a + ch2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[27];
  k_f = 1000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[13] += q; // ch2o
  wdot[25] += q; // c3h4-a
  wdot[27] -= q; // c4h6
  // d()/d[o]
  dqdci = +k_f * sc[27];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[191] += dqdci; // dwdot[ch2o]/d[o]
  J[203] += dqdci; // dwdot[c3h4-a]/d[o]
  J[205] -= dqdci; // dwdot[c4h6]/d[o]
  // d()/d[c4h6]
  dqdci = +k_f * sc[2];
  J[2405] -= dqdci; // dwdot[o]/d[c4h6]
  J[2416] += dqdci; // dwdot[ch2o]/d[c4h6]
  J[2428] += dqdci; // dwdot[c3h4-a]/d[c4h6]
  J[2430] -= dqdci; // dwdot[c4h6]/d[c4h6]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT
  J[7857] += dqdT; // dwdot[c3h4-a]/dT
  J[7859] -= dqdT; // dwdot[c4h6]/dT

  // reaction 193: c3h4-a + ch2o => c4h6 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[25];
  k_f = 1075000 * exp(-(39779.2774318631) * invT);
  dlnkfdT = (39779.2774318631) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[13] -= q; // ch2o
  wdot[25] -= q; // c3h4-a
  wdot[27] += q; // c4h6
  // d()/d[ch2o]
  dqdci = +k_f * sc[25];
  J[1159] += dqdci; // dwdot[o]/d[ch2o]
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  J[1182] -= dqdci; // dwdot[c3h4-a]/d[ch2o]
  J[1184] += dqdci; // dwdot[c4h6]/d[ch2o]
  // d()/d[c3h4-a]
  dqdci = +k_f * sc[13];
  J[2227] += dqdci; // dwdot[o]/d[c3h4-a]
  J[2238] -= dqdci; // dwdot[ch2o]/d[c3h4-a]
  J[2250] -= dqdci; // dwdot[c3h4-a]/d[c3h4-a]
  J[2252] += dqdci; // dwdot[c4h6]/d[c3h4-a]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT
  J[7857] -= dqdT; // dwdot[c3h4-a]/dT
  J[7859] += dqdT; // dwdot[c4h6]/dT

  // reaction 194: c2h4 + o2 => c2h3 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[16];
  k_f = 40000000 * exp(-(29287.2099498347) * invT);
  dlnkfdT = (29287.2099498347) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[16] -= q; // c2h4
  wdot[19] += q; // c2h3
  // d()/d[o2]
  dqdci = +k_f * sc[16];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[283] -= dqdci; // dwdot[c2h4]/d[o2]
  J[286] += dqdci; // dwdot[c2h3]/d[o2]
  // d()/d[c2h4]
  dqdci = +k_f * sc[3];
  J[1427] -= dqdci; // dwdot[o2]/d[c2h4]
  J[1435] += dqdci; // dwdot[ho2]/d[c2h4]
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1443] += dqdci; // dwdot[c2h3]/d[c2h4]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT

  // reaction 195: c2h3 + ho2 => c2h4 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[19];
  k_f = 49390000 * exp(-0.5 * logT - (688.400398820856) * invT);
  dlnkfdT = -0.5 * invT + (688.400398820856) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[16] += q; // c2h4
  wdot[19] -= q; // c2h3
  // d()/d[ho2]
  dqdci = +k_f * sc[19];
  J[982] += dqdci; // dwdot[o2]/d[ho2]
  J[990] -= dqdci; // dwdot[ho2]/d[ho2]
  J[995] += dqdci; // dwdot[c2h4]/d[ho2]
  J[998] -= dqdci; // dwdot[c2h3]/d[ho2]
  // d()/d[c2h3]
  dqdci = +k_f * sc[11];
  J[1694] += dqdci; // dwdot[o2]/d[c2h3]
  J[1702] -= dqdci; // dwdot[ho2]/d[c2h3]
  J[1707] += dqdci; // dwdot[c2h4]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT

  // reaction 198: nc3h7 => c2h4 + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[28];
  k_f = 228400000000000 * exp(-0.55 * logT - (14291.353308854) * invT);
  dlnkfdT = -0.55 * invT + (14291.353308854) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[16] += q; // c2h4
  wdot[28] -= q; // nc3h7
  // d()/d[nc3h7]
  dqdci = +k_f;
  J[2501] += dqdci; // dwdot[ch3]/d[nc3h7]
  J[2508] += dqdci; // dwdot[c2h4]/d[nc3h7]
  J[2520] -= dqdci; // dwdot[nc3h7]/d[nc3h7]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7860] -= dqdT; // dwdot[nc3h7]/dT

  // reaction 199: c2h4 + ch3 => nc3h7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[16];
  k_f = 410000 * exp(-(3625.1728604572) * invT);
  dlnkfdT = (3625.1728604572) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[16] -= q; // c2h4
  wdot[28] += q; // nc3h7
  // d()/d[ch3]
  dqdci = +k_f * sc[16];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[817] -= dqdci; // dwdot[c2h4]/d[ch3]
  J[829] += dqdci; // dwdot[nc3h7]/d[ch3]
  // d()/d[c2h4]
  dqdci = +k_f * sc[9];
  J[1433] -= dqdci; // dwdot[ch3]/d[c2h4]
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1452] += dqdci; // dwdot[nc3h7]/d[c2h4]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7860] += dqdT; // dwdot[nc3h7]/dT

  // reaction 200: nc3h7 => c3h6 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[28];
  k_f = 2.667e+15 * exp(-0.64 * logT - (18528.4376349298) * invT);
  dlnkfdT = -0.64 * invT + (18528.4376349298) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[26] += q; // c3h6
  wdot[28] -= q; // nc3h7
  // d()/d[nc3h7]
  dqdci = +k_f;
  J[2492] += dqdci; // dwdot[h]/d[nc3h7]
  J[2518] += dqdci; // dwdot[c3h6]/d[nc3h7]
  J[2520] -= dqdci; // dwdot[nc3h7]/d[nc3h7]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7860] -= dqdT; // dwdot[nc3h7]/dT

  // reaction 201: c3h6 + h => nc3h7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[26];
  k_f = 10000000 * exp(-(1258.0416645118) * invT);
  dlnkfdT = (1258.0416645118) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[26] -= q; // c3h6
  wdot[28] += q; // nc3h7
  // d()/d[h]
  dqdci = +k_f * sc[26];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[26] -= dqdci; // dwdot[c3h6]/d[h]
  J[28] += dqdci; // dwdot[nc3h7]/d[h]
  // d()/d[c3h6]
  dqdci = +k_f * sc[0];
  J[2314] -= dqdci; // dwdot[h]/d[c3h6]
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  J[2342] += dqdci; // dwdot[nc3h7]/d[c3h6]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT
  J[7860] += dqdT; // dwdot[nc3h7]/dT

  // reaction 202: nc3h7 + o2 => c3h6 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[28];
  k_f = 300000 * exp(-(1509.64999741416) * invT);
  dlnkfdT = (1509.64999741416) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[26] += q; // c3h6
  wdot[28] -= q; // nc3h7
  // d()/d[o2]
  dqdci = +k_f * sc[28];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[293] += dqdci; // dwdot[c3h6]/d[o2]
  J[295] -= dqdci; // dwdot[nc3h7]/d[o2]
  // d()/d[nc3h7]
  dqdci = +k_f * sc[3];
  J[2495] -= dqdci; // dwdot[o2]/d[nc3h7]
  J[2503] += dqdci; // dwdot[ho2]/d[nc3h7]
  J[2518] += dqdci; // dwdot[c3h6]/d[nc3h7]
  J[2520] -= dqdci; // dwdot[nc3h7]/d[nc3h7]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7860] -= dqdT; // dwdot[nc3h7]/dT

  // reaction 203: c3h6 + ho2 => nc3h7 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[26];
  k_f = 200000 * exp(-(8806.29165158259) * invT);
  dlnkfdT = (8806.29165158259) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[26] -= q; // c3h6
  wdot[28] += q; // nc3h7
  // d()/d[ho2]
  dqdci = +k_f * sc[26];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1005] -= dqdci; // dwdot[c3h6]/d[ho2]
  J[1007] += dqdci; // dwdot[nc3h7]/d[ho2]
  // d()/d[c3h6]
  dqdci = +k_f * sc[11];
  J[2317] += dqdci; // dwdot[o2]/d[c3h6]
  J[2325] -= dqdci; // dwdot[ho2]/d[c3h6]
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  J[2342] += dqdci; // dwdot[nc3h7]/d[c3h6]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT
  J[7860] += dqdT; // dwdot[nc3h7]/dT

  // reaction 204: c3h6 + o => c3h5-a + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[26];
  k_f = 524000 * exp(0.7 * logT - (2960.92686159497) * invT);
  dlnkfdT = 0.7 * invT + (2960.92686159497) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[4] += q;  // oh
  wdot[26] -= q; // c3h6
  wdot[47] += q; // c3h5-a
  // d()/d[o]
  dqdci = +k_f * sc[26];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[182] += dqdci; // dwdot[oh]/d[o]
  J[204] -= dqdci; // dwdot[c3h6]/d[o]
  J[225] += dqdci; // dwdot[c3h5-a]/d[o]
  // d()/d[c3h6]
  dqdci = +k_f * sc[2];
  J[2316] -= dqdci; // dwdot[o]/d[c3h6]
  J[2318] += dqdci; // dwdot[oh]/d[c3h6]
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  J[2361] += dqdci; // dwdot[c3h5-a]/d[c3h6]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 205: c3h5-a + oh => c3h6 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[47];
  k_f = 105500 * exp(0.71 * logT - (10476.9709820543) * invT);
  dlnkfdT = 0.71 * invT + (10476.9709820543) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[4] -= q;  // oh
  wdot[26] += q; // c3h6
  wdot[47] -= q; // c3h5-a
  // d()/d[oh]
  dqdci = +k_f * sc[47];
  J[358] += dqdci; // dwdot[o]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[382] += dqdci; // dwdot[c3h6]/d[oh]
  J[403] -= dqdci; // dwdot[c3h5-a]/d[oh]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[4];
  J[4185] += dqdci; // dwdot[o]/d[c3h5-a]
  J[4187] -= dqdci; // dwdot[oh]/d[c3h5-a]
  J[4209] += dqdci; // dwdot[c3h6]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 206: c3h6 + h => c3h5-a + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[26];
  k_f = 0.173 * exp(2.5 * logT - (1254.01593118536) * invT);
  dlnkfdT = 2.5 * invT + (1254.01593118536) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[26] -= q; // c3h6
  wdot[47] += q; // c3h5-a
  // d()/d[h]
  dqdci = +k_f * sc[26];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[26] -= dqdci; // dwdot[c3h6]/d[h]
  J[47] += dqdci; // dwdot[c3h5-a]/d[h]
  // d()/d[c3h6]
  dqdci = +k_f * sc[0];
  J[2314] -= dqdci; // dwdot[h]/d[c3h6]
  J[2315] += dqdci; // dwdot[h2]/d[c3h6]
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  J[2361] += dqdci; // dwdot[c3h5-a]/d[c3h6]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 207: c3h5-a + h2 => c3h6 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[47];
  k_f = 0.07933 * exp(2.51 * logT - (9822.78931650813) * invT);
  dlnkfdT = 2.51 * invT + (9822.78931650813) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[26] += q; // c3h6
  wdot[47] -= q; // c3h5-a
  // d()/d[h2]
  dqdci = +k_f * sc[47];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[115] += dqdci; // dwdot[c3h6]/d[h2]
  J[136] -= dqdci; // dwdot[c3h5-a]/d[h2]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[1];
  J[4183] += dqdci; // dwdot[h]/d[c3h5-a]
  J[4184] -= dqdci; // dwdot[h2]/d[c3h5-a]
  J[4209] += dqdci; // dwdot[c3h6]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 208: c3h6 + h => c2h4 + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[26];
  k_f = 4.83e+27 * exp(-5.81 * logT - (9309.50831738731) * invT);
  dlnkfdT = -5.81 * invT + (9309.50831738731) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[9] += q;  // ch3
  wdot[16] += q; // c2h4
  wdot[26] -= q; // c3h6
  // d()/d[h]
  dqdci = +k_f * sc[26];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[9] += dqdci;  // dwdot[ch3]/d[h]
  J[16] += dqdci; // dwdot[c2h4]/d[h]
  J[26] -= dqdci; // dwdot[c3h6]/d[h]
  // d()/d[c3h6]
  dqdci = +k_f * sc[0];
  J[2314] -= dqdci; // dwdot[h]/d[c3h6]
  J[2323] += dqdci; // dwdot[ch3]/d[c3h6]
  J[2330] += dqdci; // dwdot[c2h4]/d[c3h6]
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT

  // reaction 209: c2h4 + ch3 => c3h6 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[16];
  k_f = 2.313e+27 * exp(-5.9 * logT - (15911.7109727452) * invT);
  dlnkfdT = -5.9 * invT + (15911.7109727452) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[9] -= q;  // ch3
  wdot[16] -= q; // c2h4
  wdot[26] += q; // c3h6
  // d()/d[ch3]
  dqdci = +k_f * sc[16];
  J[801] += dqdci; // dwdot[h]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[817] -= dqdci; // dwdot[c2h4]/d[ch3]
  J[827] += dqdci; // dwdot[c3h6]/d[ch3]
  // d()/d[c2h4]
  dqdci = +k_f * sc[9];
  J[1424] += dqdci; // dwdot[h]/d[c2h4]
  J[1433] -= dqdci; // dwdot[ch3]/d[c2h4]
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1450] += dqdci; // dwdot[c3h6]/d[c2h4]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT

  // reaction 210: c5h9 => c2h4 + c3h5-a
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[35];
  k_f = 25000000000000 * exp(-(22644.7499612124) * invT);
  dlnkfdT = (22644.7499612124) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] += q; // c2h4
  wdot[35] -= q; // c5h9
  wdot[47] += q; // c3h5-a
  // d()/d[c5h9]
  dqdci = +k_f;
  J[3131] += dqdci; // dwdot[c2h4]/d[c5h9]
  J[3150] -= dqdci; // dwdot[c5h9]/d[c5h9]
  J[3162] += dqdci; // dwdot[c3h5-a]/d[c5h9]
  // d()/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7867] -= dqdT; // dwdot[c5h9]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 211: c5h9 => c4h6 + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[35];
  k_f = 1.339e+15 * exp(-0.52 * logT - (19283.2626336369) * invT);
  dlnkfdT = -0.52 * invT + (19283.2626336369) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[27] += q; // c4h6
  wdot[35] -= q; // c5h9
  // d()/d[c5h9]
  dqdci = +k_f;
  J[3124] += dqdci; // dwdot[ch3]/d[c5h9]
  J[3142] += dqdci; // dwdot[c4h6]/d[c5h9]
  J[3150] -= dqdci; // dwdot[c5h9]/d[c5h9]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7859] += dqdT; // dwdot[c4h6]/dT
  J[7867] -= dqdT; // dwdot[c5h9]/dT

  // reaction 212: c4h6 + ch3 => c5h9
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[27];
  k_f = 175000 * exp(-(3824.44666011587) * invT);
  dlnkfdT = (3824.44666011587) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[27] -= q; // c4h6
  wdot[35] += q; // c5h9
  // d()/d[ch3]
  dqdci = +k_f * sc[27];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[828] -= dqdci; // dwdot[c4h6]/d[ch3]
  J[836] += dqdci; // dwdot[c5h9]/d[ch3]
  // d()/d[c4h6]
  dqdci = +k_f * sc[9];
  J[2412] -= dqdci; // dwdot[ch3]/d[c4h6]
  J[2430] -= dqdci; // dwdot[c4h6]/d[c4h6]
  J[2438] += dqdci; // dwdot[c5h9]/d[c4h6]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7859] -= dqdT; // dwdot[c4h6]/dT
  J[7867] += dqdT; // dwdot[c5h9]/dT

  // reaction 213: c4h7 => c4h6 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[29];
  k_f = 120000000000000 * exp(-(24808.5816241727) * invT);
  dlnkfdT = (24808.5816241727) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[27] += q; // c4h6
  wdot[29] -= q; // c4h7
  // d()/d[c4h7]
  dqdci = +k_f;
  J[2581] += dqdci; // dwdot[h]/d[c4h7]
  J[2608] += dqdci; // dwdot[c4h6]/d[c4h7]
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7859] += dqdT; // dwdot[c4h6]/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT

  // reaction 214: c4h6 + h => c4h7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[27];
  k_f = 40000000 * exp(-(654.181665546136) * invT);
  dlnkfdT = (654.181665546136) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[27] -= q; // c4h6
  wdot[29] += q; // c4h7
  // d()/d[h]
  dqdci = +k_f * sc[27];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[27] -= dqdci; // dwdot[c4h6]/d[h]
  J[29] += dqdci; // dwdot[c4h7]/d[h]
  // d()/d[c4h6]
  dqdci = +k_f * sc[0];
  J[2403] -= dqdci; // dwdot[h]/d[c4h6]
  J[2430] -= dqdci; // dwdot[c4h6]/d[c4h6]
  J[2432] += dqdci; // dwdot[c4h7]/d[c4h6]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7859] -= dqdT; // dwdot[c4h6]/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT

  // reaction 215: c4h7 => c2h3 + c2h4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[29];
  k_f = 100000000000 * exp(-(18619.0166347746) * invT);
  dlnkfdT = (18619.0166347746) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] += q; // c2h4
  wdot[19] += q; // c2h3
  wdot[29] -= q; // c4h7
  // d()/d[c4h7]
  dqdci = +k_f;
  J[2597] += dqdci; // dwdot[c2h4]/d[c4h7]
  J[2600] += dqdci; // dwdot[c2h3]/d[c4h7]
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  // d()/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT

  // reaction 216: c2h3 + c2h4 => c4h7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[19];
  k_f = 50000 * exp(-(3522.51666063304) * invT);
  dlnkfdT = (3522.51666063304) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] -= q; // c2h4
  wdot[19] -= q; // c2h3
  wdot[29] += q; // c4h7
  // d()/d[c2h4]
  dqdci = +k_f * sc[19];
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1443] -= dqdci; // dwdot[c2h3]/d[c2h4]
  J[1453] += dqdci; // dwdot[c4h7]/d[c2h4]
  // d()/d[c2h3]
  dqdci = +k_f * sc[16];
  J[1707] -= dqdci; // dwdot[c2h4]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  J[1720] += dqdci; // dwdot[c4h7]/d[c2h3]
  // d()/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT

  // reaction 217: c4h6 + c4h8-1 => 2 c4h7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[27] * sc[30];
  k_f = 2350000 * exp(-(23510.2826263965) * invT);
  dlnkfdT = (23510.2826263965) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[27] -= q;     // c4h6
  wdot[29] += 2 * q; // c4h7
  wdot[30] -= q;     // c4h8-1
  // d()/d[c4h6]
  dqdci = +k_f * sc[30];
  J[2430] -= dqdci;     // dwdot[c4h6]/d[c4h6]
  J[2432] += 2 * dqdci; // dwdot[c4h7]/d[c4h6]
  J[2433] -= dqdci;     // dwdot[c4h8-1]/d[c4h6]
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[27];
  J[2697] -= dqdci;     // dwdot[c4h6]/d[c4h8-1]
  J[2699] += 2 * dqdci; // dwdot[c4h7]/d[c4h8-1]
  J[2700] -= dqdci;     // dwdot[c4h8-1]/d[c4h8-1]
  // d()/dT
  J[7859] -= dqdT;     // dwdot[c4h6]/dT
  J[7861] += 2 * dqdT; // dwdot[c4h7]/dT
  J[7862] -= dqdT;     // dwdot[c4h8-1]/dT

  // reaction 218: 2 c4h7 => c4h6 + c4h8-1
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[29] * sc[29]);
  k_f = 1600000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[27] += q;     // c4h6
  wdot[29] -= 2 * q; // c4h7
  wdot[30] += q;     // c4h8-1
  // d()/d[c4h7]
  dqdci = +k_f * 2.000000 * sc[29];
  J[2608] += dqdci;      // dwdot[c4h6]/d[c4h7]
  J[2610] += -2 * dqdci; // dwdot[c4h7]/d[c4h7]
  J[2611] += dqdci;      // dwdot[c4h8-1]/d[c4h7]
  // d()/dT
  J[7859] += dqdT;      // dwdot[c4h6]/dT
  J[7861] += -2 * dqdT; // dwdot[c4h7]/dT
  J[7862] += dqdT;      // dwdot[c4h8-1]/dT

  // reaction 219: c4h7 + ch3 => c4h6 + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[29];
  k_f = 8000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[27] += q; // c4h6
  wdot[29] -= q; // c4h7
  // d()/d[ch3]
  dqdci = +k_f * sc[29];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[828] += dqdci; // dwdot[c4h6]/d[ch3]
  J[830] -= dqdci; // dwdot[c4h7]/d[ch3]
  // d()/d[c4h7]
  dqdci = +k_f * sc[9];
  J[2590] -= dqdci; // dwdot[ch3]/d[c4h7]
  J[2591] += dqdci; // dwdot[ch4]/d[c4h7]
  J[2608] += dqdci; // dwdot[c4h6]/d[c4h7]
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7859] += dqdT; // dwdot[c4h6]/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT

  // reaction 220: c4h6 + ch4 => c4h7 + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[27];
  k_f = 70500000 * exp(-(28824.2506172943) * invT);
  dlnkfdT = (28824.2506172943) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[27] -= q; // c4h6
  wdot[29] += q; // c4h7
  // d()/d[ch4]
  dqdci = +k_f * sc[27];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[917] -= dqdci; // dwdot[c4h6]/d[ch4]
  J[919] += dqdci; // dwdot[c4h7]/d[ch4]
  // d()/d[c4h6]
  dqdci = +k_f * sc[10];
  J[2412] += dqdci; // dwdot[ch3]/d[c4h6]
  J[2413] -= dqdci; // dwdot[ch4]/d[c4h6]
  J[2430] -= dqdci; // dwdot[c4h6]/d[c4h6]
  J[2432] += dqdci; // dwdot[c4h7]/d[c4h6]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7859] -= dqdT; // dwdot[c4h6]/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT

  // reaction 221: c3h5-a + c4h7 => c3h6 + c4h6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[29] * sc[47];
  k_f = 6310000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[26] += q; // c3h6
  wdot[27] += q; // c4h6
  wdot[29] -= q; // c4h7
  wdot[47] -= q; // c3h5-a
  // d()/d[c4h7]
  dqdci = +k_f * sc[47];
  J[2607] += dqdci; // dwdot[c3h6]/d[c4h7]
  J[2608] += dqdci; // dwdot[c4h6]/d[c4h7]
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  J[2628] -= dqdci; // dwdot[c3h5-a]/d[c4h7]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[29];
  J[4209] += dqdci; // dwdot[c3h6]/d[c3h5-a]
  J[4210] += dqdci; // dwdot[c4h6]/d[c3h5-a]
  J[4212] -= dqdci; // dwdot[c4h7]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7859] += dqdT; // dwdot[c4h6]/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 222: c3h6 + c4h6 => c3h5-a + c4h7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[26] * sc[27];
  k_f = 10000 * exp(-(25160.833290236) * invT);
  dlnkfdT = (25160.833290236) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[26] -= q; // c3h6
  wdot[27] -= q; // c4h6
  wdot[29] += q; // c4h7
  wdot[47] += q; // c3h5-a
  // d()/d[c3h6]
  dqdci = +k_f * sc[27];
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  J[2341] -= dqdci; // dwdot[c4h6]/d[c3h6]
  J[2343] += dqdci; // dwdot[c4h7]/d[c3h6]
  J[2361] += dqdci; // dwdot[c3h5-a]/d[c3h6]
  // d()/d[c4h6]
  dqdci = +k_f * sc[26];
  J[2429] -= dqdci; // dwdot[c3h6]/d[c4h6]
  J[2430] -= dqdci; // dwdot[c4h6]/d[c4h6]
  J[2432] += dqdci; // dwdot[c4h7]/d[c4h6]
  J[2450] += dqdci; // dwdot[c3h5-a]/d[c4h6]
  // d()/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT
  J[7859] -= dqdT; // dwdot[c4h6]/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 223: c4h7 + o2 => c4h6 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[29];
  k_f = 1000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[27] += q; // c4h6
  wdot[29] -= q; // c4h7
  // d()/d[o2]
  dqdci = +k_f * sc[29];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[294] += dqdci; // dwdot[c4h6]/d[o2]
  J[296] -= dqdci; // dwdot[c4h7]/d[o2]
  // d()/d[c4h7]
  dqdci = +k_f * sc[3];
  J[2584] -= dqdci; // dwdot[o2]/d[c4h7]
  J[2592] += dqdci; // dwdot[ho2]/d[c4h7]
  J[2608] += dqdci; // dwdot[c4h6]/d[c4h7]
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7859] += dqdT; // dwdot[c4h6]/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT

  // reaction 224: c4h6 + ho2 => c4h7 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[27];
  k_f = 100000 * exp(-(8554.68331868023) * invT);
  dlnkfdT = (8554.68331868023) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[27] -= q; // c4h6
  wdot[29] += q; // c4h7
  // d()/d[ho2]
  dqdci = +k_f * sc[27];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1006] -= dqdci; // dwdot[c4h6]/d[ho2]
  J[1008] += dqdci; // dwdot[c4h7]/d[ho2]
  // d()/d[c4h6]
  dqdci = +k_f * sc[11];
  J[2406] += dqdci; // dwdot[o2]/d[c4h6]
  J[2414] -= dqdci; // dwdot[ho2]/d[c4h6]
  J[2430] -= dqdci; // dwdot[c4h6]/d[c4h6]
  J[2432] += dqdci; // dwdot[c4h7]/d[c4h6]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7859] -= dqdT; // dwdot[c4h6]/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT

  // reaction 225: c4h7 + h => c4h6 + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[29];
  k_f = 31600000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[27] += q; // c4h6
  wdot[29] -= q; // c4h7
  // d()/d[h]
  dqdci = +k_f * sc[29];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[27] += dqdci; // dwdot[c4h6]/d[h]
  J[29] -= dqdci; // dwdot[c4h7]/d[h]
  // d()/d[c4h7]
  dqdci = +k_f * sc[0];
  J[2581] -= dqdci; // dwdot[h]/d[c4h7]
  J[2582] += dqdci; // dwdot[h2]/d[c4h7]
  J[2608] += dqdci; // dwdot[c4h6]/d[c4h7]
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7859] += dqdT; // dwdot[c4h6]/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT

  // reaction 226: c4h6 + h2 => c4h7 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[27];
  k_f = 10660000 * exp(-(28587.7387843661) * invT);
  dlnkfdT = (28587.7387843661) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[27] -= q; // c4h6
  wdot[29] += q; // c4h7
  // d()/d[h2]
  dqdci = +k_f * sc[27];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[116] -= dqdci; // dwdot[c4h6]/d[h2]
  J[118] += dqdci; // dwdot[c4h7]/d[h2]
  // d()/d[c4h6]
  dqdci = +k_f * sc[1];
  J[2403] += dqdci; // dwdot[h]/d[c4h6]
  J[2404] -= dqdci; // dwdot[h2]/d[c4h6]
  J[2430] -= dqdci; // dwdot[c4h6]/d[c4h6]
  J[2432] += dqdci; // dwdot[c4h7]/d[c4h6]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7859] -= dqdT; // dwdot[c4h6]/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT

  // reaction 227: c2h5 + c4h7 => c2h6 + c4h6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[29];
  k_f = 3980000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[15] += q; // c2h6
  wdot[17] -= q; // c2h5
  wdot[27] += q; // c4h6
  wdot[29] -= q; // c4h7
  // d()/d[c2h5]
  dqdci = +k_f * sc[29];
  J[1528] += dqdci; // dwdot[c2h6]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1540] += dqdci; // dwdot[c4h6]/d[c2h5]
  J[1542] -= dqdci; // dwdot[c4h7]/d[c2h5]
  // d()/d[c4h7]
  dqdci = +k_f * sc[17];
  J[2596] += dqdci; // dwdot[c2h6]/d[c4h7]
  J[2598] -= dqdci; // dwdot[c2h5]/d[c4h7]
  J[2608] += dqdci; // dwdot[c4h6]/d[c4h7]
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  // d()/dT
  J[7847] += dqdT; // dwdot[c2h6]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7859] += dqdT; // dwdot[c4h6]/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT

  // reaction 228: c2h6 + c4h6 => c2h5 + c4h7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[27];
  k_f = 3211000 * exp(-(25080.3186237072) * invT);
  dlnkfdT = (25080.3186237072) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[15] -= q; // c2h6
  wdot[17] += q; // c2h5
  wdot[27] -= q; // c4h6
  wdot[29] += q; // c4h7
  // d()/d[c2h6]
  dqdci = +k_f * sc[27];
  J[1350] -= dqdci; // dwdot[c2h6]/d[c2h6]
  J[1352] += dqdci; // dwdot[c2h5]/d[c2h6]
  J[1362] -= dqdci; // dwdot[c4h6]/d[c2h6]
  J[1364] += dqdci; // dwdot[c4h7]/d[c2h6]
  // d()/d[c4h6]
  dqdci = +k_f * sc[15];
  J[2418] -= dqdci; // dwdot[c2h6]/d[c4h6]
  J[2420] += dqdci; // dwdot[c2h5]/d[c4h6]
  J[2430] -= dqdci; // dwdot[c4h6]/d[c4h6]
  J[2432] += dqdci; // dwdot[c4h7]/d[c4h6]
  // d()/dT
  J[7847] -= dqdT; // dwdot[c2h6]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7859] -= dqdT; // dwdot[c4h6]/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT

  // reaction 229: c2h5 + c4h7 => c2h4 + c4h8-1
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[29];
  k_f = 9.24 * exp(1.5 * logT - (-484.09443250414) * invT);
  dlnkfdT = 1.5 * invT + (-484.09443250414) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] += q; // c2h4
  wdot[17] -= q; // c2h5
  wdot[29] -= q; // c4h7
  wdot[30] += q; // c4h8-1
  // d()/d[c2h5]
  dqdci = +k_f * sc[29];
  J[1529] += dqdci; // dwdot[c2h4]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1542] -= dqdci; // dwdot[c4h7]/d[c2h5]
  J[1543] += dqdci; // dwdot[c4h8-1]/d[c2h5]
  // d()/d[c4h7]
  dqdci = +k_f * sc[17];
  J[2597] += dqdci; // dwdot[c2h4]/d[c4h7]
  J[2598] -= dqdci; // dwdot[c2h5]/d[c4h7]
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  J[2611] += dqdci; // dwdot[c4h8-1]/d[c4h7]
  // d()/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT

  // reaction 230: c2h4 + c4h8-1 => c2h5 + c4h7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[30];
  k_f = 0.0007807 * exp(2.91 * logT - (25643.9212894085) * invT);
  dlnkfdT = 2.91 * invT + (25643.9212894085) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] -= q; // c2h4
  wdot[17] += q; // c2h5
  wdot[29] += q; // c4h7
  wdot[30] -= q; // c4h8-1
  // d()/d[c2h4]
  dqdci = +k_f * sc[30];
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1441] += dqdci; // dwdot[c2h5]/d[c2h4]
  J[1453] += dqdci; // dwdot[c4h7]/d[c2h4]
  J[1454] -= dqdci; // dwdot[c4h8-1]/d[c2h4]
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[16];
  J[2686] -= dqdci; // dwdot[c2h4]/d[c4h8-1]
  J[2687] += dqdci; // dwdot[c2h5]/d[c4h8-1]
  J[2699] += dqdci; // dwdot[c4h7]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  // d()/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT

  // reaction 231: c2h3 + c4h7 => c2h4 + c4h6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[29];
  k_f = 3980000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] += q; // c2h4
  wdot[19] -= q; // c2h3
  wdot[27] += q; // c4h6
  wdot[29] -= q; // c4h7
  // d()/d[c2h3]
  dqdci = +k_f * sc[29];
  J[1707] += dqdci; // dwdot[c2h4]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  J[1718] += dqdci; // dwdot[c4h6]/d[c2h3]
  J[1720] -= dqdci; // dwdot[c4h7]/d[c2h3]
  // d()/d[c4h7]
  dqdci = +k_f * sc[19];
  J[2597] += dqdci; // dwdot[c2h4]/d[c4h7]
  J[2600] -= dqdci; // dwdot[c2h3]/d[c4h7]
  J[2608] += dqdci; // dwdot[c4h6]/d[c4h7]
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  // d()/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT
  J[7859] += dqdT; // dwdot[c4h6]/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT

  // reaction 232: c2h4 + c4h6 => c2h3 + c4h7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[27];
  k_f = 11570000 * exp(-(29040.6337835904) * invT);
  dlnkfdT = (29040.6337835904) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] -= q; // c2h4
  wdot[19] += q; // c2h3
  wdot[27] -= q; // c4h6
  wdot[29] += q; // c4h7
  // d()/d[c2h4]
  dqdci = +k_f * sc[27];
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1443] += dqdci; // dwdot[c2h3]/d[c2h4]
  J[1451] -= dqdci; // dwdot[c4h6]/d[c2h4]
  J[1453] += dqdci; // dwdot[c4h7]/d[c2h4]
  // d()/d[c4h6]
  dqdci = +k_f * sc[16];
  J[2419] -= dqdci; // dwdot[c2h4]/d[c4h6]
  J[2422] += dqdci; // dwdot[c2h3]/d[c4h6]
  J[2430] -= dqdci; // dwdot[c4h6]/d[c4h6]
  J[2432] += dqdci; // dwdot[c4h7]/d[c4h6]
  // d()/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT
  J[7859] -= dqdT; // dwdot[c4h6]/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT

  // reaction 233: c4h8-1 => c3h5-a + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[30];
  k_f = 5e+15 * exp(-(35728.3832721351) * invT);
  dlnkfdT = (35728.3832721351) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[30] -= q; // c4h8-1
  wdot[47] += q; // c3h5-a
  // d()/d[c4h8-1]
  dqdci = +k_f;
  J[2679] += dqdci; // dwdot[ch3]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  J[2717] += dqdci; // dwdot[c3h5-a]/d[c4h8-1]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 234: c3h5-a + ch3 => c4h8-1
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[47];
  k_f = 5000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[30] += q; // c4h8-1
  wdot[47] -= q; // c3h5-a
  // d()/d[ch3]
  dqdci = +k_f * sc[47];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[831] += dqdci; // dwdot[c4h8-1]/d[ch3]
  J[848] -= dqdci; // dwdot[c3h5-a]/d[ch3]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[9];
  J[4192] -= dqdci; // dwdot[ch3]/d[c3h5-a]
  J[4213] += dqdci; // dwdot[c4h8-1]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 235: c4h8-1 => c2h3 + c2h5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[30];
  k_f = 1e+19 * exp(-1 * logT - (48696.2767499227) * invT);
  dlnkfdT = -1 * invT + (48696.2767499227) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[17] += q; // c2h5
  wdot[19] += q; // c2h3
  wdot[30] -= q; // c4h8-1
  // d()/d[c4h8-1]
  dqdci = +k_f;
  J[2687] += dqdci; // dwdot[c2h5]/d[c4h8-1]
  J[2689] += dqdci; // dwdot[c2h3]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  // d()/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT

  // reaction 236: c2h3 + c2h5 => c4h8-1
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[19];
  k_f = 9000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[17] -= q; // c2h5
  wdot[19] -= q; // c2h3
  wdot[30] += q; // c4h8-1
  // d()/d[c2h5]
  dqdci = +k_f * sc[19];
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1532] -= dqdci; // dwdot[c2h3]/d[c2h5]
  J[1543] += dqdci; // dwdot[c4h8-1]/d[c2h5]
  // d()/d[c2h3]
  dqdci = +k_f * sc[17];
  J[1708] -= dqdci; // dwdot[c2h5]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  J[1721] += dqdci; // dwdot[c4h8-1]/d[c2h3]
  // d()/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT

  // reaction 237: c4h8-1 => c4h7 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[30];
  k_f = 4.107e+18 * exp(-1 * logT - (48988.1424160895) * invT);
  dlnkfdT = -1 * invT + (48988.1424160895) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[29] += q; // c4h7
  wdot[30] -= q; // c4h8-1
  // d()/d[c4h8-1]
  dqdci = +k_f;
  J[2670] += dqdci; // dwdot[h]/d[c4h8-1]
  J[2699] += dqdci; // dwdot[c4h7]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT

  // reaction 238: c4h7 + h => c4h8-1
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[29];
  k_f = 50000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[29] -= q; // c4h7
  wdot[30] += q; // c4h8-1
  // d()/d[h]
  dqdci = +k_f * sc[29];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[29] -= dqdci; // dwdot[c4h7]/d[h]
  J[30] += dqdci; // dwdot[c4h8-1]/d[h]
  // d()/d[c4h7]
  dqdci = +k_f * sc[0];
  J[2581] -= dqdci; // dwdot[h]/d[c4h7]
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  J[2611] += dqdci; // dwdot[c4h8-1]/d[c4h7]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT

  // reaction 239: c4h8-1 + ch3 => c4h7 + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[30];
  k_f = 100000 * exp(-(3673.48166037445) * invT);
  dlnkfdT = (3673.48166037445) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[29] += q; // c4h7
  wdot[30] -= q; // c4h8-1
  // d()/d[ch3]
  dqdci = +k_f * sc[30];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[830] += dqdci; // dwdot[c4h7]/d[ch3]
  J[831] -= dqdci; // dwdot[c4h8-1]/d[ch3]
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[9];
  J[2679] -= dqdci; // dwdot[ch3]/d[c4h8-1]
  J[2680] += dqdci; // dwdot[ch4]/d[c4h8-1]
  J[2699] += dqdci; // dwdot[c4h7]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT

  // reaction 240: c4h7 + ch4 => c4h8-1 + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[29];
  k_f = 600000 * exp(-(8987.44965127229) * invT);
  dlnkfdT = (8987.44965127229) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[29] -= q; // c4h7
  wdot[30] += q; // c4h8-1
  // d()/d[ch4]
  dqdci = +k_f * sc[29];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[919] -= dqdci; // dwdot[c4h7]/d[ch4]
  J[920] += dqdci; // dwdot[c4h8-1]/d[ch4]
  // d()/d[c4h7]
  dqdci = +k_f * sc[10];
  J[2590] += dqdci; // dwdot[ch3]/d[c4h7]
  J[2591] -= dqdci; // dwdot[ch4]/d[c4h7]
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  J[2611] += dqdci; // dwdot[c4h8-1]/d[c4h7]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT

  // reaction 241: c4h8-1 + h => c4h7 + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[30];
  k_f = 50000000 * exp(-(1962.54499663841) * invT);
  dlnkfdT = (1962.54499663841) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[29] += q; // c4h7
  wdot[30] -= q; // c4h8-1
  // d()/d[h]
  dqdci = +k_f * sc[30];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[29] += dqdci; // dwdot[c4h7]/d[h]
  J[30] -= dqdci; // dwdot[c4h8-1]/d[h]
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[0];
  J[2670] -= dqdci; // dwdot[h]/d[c4h8-1]
  J[2671] += dqdci; // dwdot[h2]/d[c4h8-1]
  J[2699] += dqdci; // dwdot[c4h7]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT

  // reaction 242: c4h7 + h2 => c4h8-1 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[29];
  k_f = 40000000 * exp(-(12681.0599782789) * invT);
  dlnkfdT = (12681.0599782789) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[29] -= q; // c4h7
  wdot[30] += q; // c4h8-1
  // d()/d[h2]
  dqdci = +k_f * sc[29];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[118] -= dqdci; // dwdot[c4h7]/d[h2]
  J[119] += dqdci; // dwdot[c4h8-1]/d[h2]
  // d()/d[c4h7]
  dqdci = +k_f * sc[1];
  J[2581] += dqdci; // dwdot[h]/d[c4h7]
  J[2582] -= dqdci; // dwdot[h2]/d[c4h7]
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  J[2611] += dqdci; // dwdot[c4h8-1]/d[c4h7]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT

  // reaction 243: c4h8-1 + oh => c4h7 + h2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[30];
  k_f = 22500000 * exp(-(1115.63134808906) * invT);
  dlnkfdT = (1115.63134808906) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[29] += q; // c4h7
  wdot[30] -= q; // c4h8-1
  // d()/d[oh]
  dqdci = +k_f * sc[30];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[385] += dqdci; // dwdot[c4h7]/d[oh]
  J[386] -= dqdci; // dwdot[c4h8-1]/d[oh]
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[4];
  J[2674] -= dqdci; // dwdot[oh]/d[c4h8-1]
  J[2675] += dqdci; // dwdot[h2o]/d[c4h8-1]
  J[2699] += dqdci; // dwdot[c4h7]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT

  // reaction 244: c4h7 + h2o => c4h8-1 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[29];
  k_f = 4772000 * exp(-(13320.1451438509) * invT);
  dlnkfdT = (13320.1451438509) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[29] -= q; // c4h7
  wdot[30] += q; // c4h8-1
  // d()/d[h2o]
  dqdci = +k_f * sc[29];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[474] -= dqdci; // dwdot[c4h7]/d[h2o]
  J[475] += dqdci; // dwdot[c4h8-1]/d[h2o]
  // d()/d[c4h7]
  dqdci = +k_f * sc[5];
  J[2585] += dqdci; // dwdot[oh]/d[c4h7]
  J[2586] -= dqdci; // dwdot[h2o]/d[c4h7]
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  J[2611] += dqdci; // dwdot[c4h8-1]/d[c4h7]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT

  // reaction 245: c3h5-a + c4h8-1 => c3h6 + c4h7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[30] * sc[47];
  k_f = 79000 * exp(-(6239.88665597852) * invT);
  dlnkfdT = (6239.88665597852) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[26] += q; // c3h6
  wdot[29] += q; // c4h7
  wdot[30] -= q; // c4h8-1
  wdot[47] -= q; // c3h5-a
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[47];
  J[2696] += dqdci; // dwdot[c3h6]/d[c4h8-1]
  J[2699] += dqdci; // dwdot[c4h7]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  J[2717] -= dqdci; // dwdot[c3h5-a]/d[c4h8-1]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[30];
  J[4209] += dqdci; // dwdot[c3h6]/d[c3h5-a]
  J[4212] += dqdci; // dwdot[c4h7]/d[c3h5-a]
  J[4213] -= dqdci; // dwdot[c4h8-1]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 246: c3h6 + c4h7 => c3h5-a + c4h8-1
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[26] * sc[29];
  k_f = 100000 * exp(-(8806.29165158259) * invT);
  dlnkfdT = (8806.29165158259) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[26] -= q; // c3h6
  wdot[29] -= q; // c4h7
  wdot[30] += q; // c4h8-1
  wdot[47] += q; // c3h5-a
  // d()/d[c3h6]
  dqdci = +k_f * sc[29];
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  J[2343] -= dqdci; // dwdot[c4h7]/d[c3h6]
  J[2344] += dqdci; // dwdot[c4h8-1]/d[c3h6]
  J[2361] += dqdci; // dwdot[c3h5-a]/d[c3h6]
  // d()/d[c4h7]
  dqdci = +k_f * sc[26];
  J[2607] -= dqdci; // dwdot[c3h6]/d[c4h7]
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  J[2611] += dqdci; // dwdot[c4h8-1]/d[c4h7]
  J[2628] += dqdci; // dwdot[c3h5-a]/d[c4h7]
  // d()/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 247: c4h8-1 + ho2 => c4h7 + h2o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[30];
  k_f = 1400000 * exp(-(7497.92832049032) * invT);
  dlnkfdT = (7497.92832049032) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  wdot[29] += q; // c4h7
  wdot[30] -= q; // c4h8-1
  // d()/d[ho2]
  dqdci = +k_f * sc[30];
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[991] += dqdci;  // dwdot[h2o2]/d[ho2]
  J[1008] += dqdci; // dwdot[c4h7]/d[ho2]
  J[1009] -= dqdci; // dwdot[c4h8-1]/d[ho2]
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[11];
  J[2681] -= dqdci; // dwdot[ho2]/d[c4h8-1]
  J[2682] += dqdci; // dwdot[h2o2]/d[c4h8-1]
  J[2699] += dqdci; // dwdot[c4h7]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  // d()/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT

  // reaction 248: c4h7 + h2o2 => c4h8-1 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[29];
  k_f = 316000 * exp(-(6541.81665546136) * invT);
  dlnkfdT = (6541.81665546136) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // ho2
  wdot[12] -= q; // h2o2
  wdot[29] -= q; // c4h7
  wdot[30] += q; // c4h8-1
  // d()/d[h2o2]
  dqdci = +k_f * sc[29];
  J[1079] += dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci; // dwdot[h2o2]/d[h2o2]
  J[1097] -= dqdci; // dwdot[c4h7]/d[h2o2]
  J[1098] += dqdci; // dwdot[c4h8-1]/d[h2o2]
  // d()/d[c4h7]
  dqdci = +k_f * sc[12];
  J[2592] += dqdci; // dwdot[ho2]/d[c4h7]
  J[2593] -= dqdci; // dwdot[h2o2]/d[c4h7]
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  J[2611] += dqdci; // dwdot[c4h8-1]/d[c4h7]
  // d()/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT; // dwdot[h2o2]/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT

  // reaction 249: c4h8-1 + o2 => c4h7 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[30];
  k_f = 27000000 * exp(-(16706.7933047167) * invT);
  dlnkfdT = (16706.7933047167) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[29] += q; // c4h7
  wdot[30] -= q; // c4h8-1
  // d()/d[o2]
  dqdci = +k_f * sc[30];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[296] += dqdci; // dwdot[c4h7]/d[o2]
  J[297] -= dqdci; // dwdot[c4h8-1]/d[o2]
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[3];
  J[2673] -= dqdci; // dwdot[o2]/d[c4h8-1]
  J[2681] += dqdci; // dwdot[ho2]/d[c4h8-1]
  J[2699] += dqdci; // dwdot[c4h7]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT

  // reaction 250: c4h7 + ho2 => c4h8-1 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[29];
  k_f = 300000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[29] -= q; // c4h7
  wdot[30] += q; // c4h8-1
  // d()/d[ho2]
  dqdci = +k_f * sc[29];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1008] -= dqdci; // dwdot[c4h7]/d[ho2]
  J[1009] += dqdci; // dwdot[c4h8-1]/d[ho2]
  // d()/d[c4h7]
  dqdci = +k_f * sc[11];
  J[2584] += dqdci; // dwdot[o2]/d[c4h7]
  J[2592] -= dqdci; // dwdot[ho2]/d[c4h7]
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  J[2611] += dqdci; // dwdot[c4h8-1]/d[c4h7]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT

  // reaction 251: pc4h9 => c2h4 + c2h5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[31];
  k_f = 7.497e+17 * exp(-1.41 * logT - (14885.1489745036) * invT);
  dlnkfdT = -1.41 * invT + (14885.1489745036) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] += q; // c2h4
  wdot[17] += q; // c2h5
  wdot[31] -= q; // pc4h9
  // d()/d[pc4h9]
  dqdci = +k_f;
  J[2775] += dqdci; // dwdot[c2h4]/d[pc4h9]
  J[2776] += dqdci; // dwdot[c2h5]/d[pc4h9]
  J[2790] -= dqdci; // dwdot[pc4h9]/d[pc4h9]
  // d()/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7863] -= dqdT; // dwdot[pc4h9]/dT

  // reaction 252: c2h4 + c2h5 => pc4h9
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[17];
  k_f = 330000 * exp(-(3623.15999379398) * invT);
  dlnkfdT = (3623.15999379398) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] -= q; // c2h4
  wdot[17] -= q; // c2h5
  wdot[31] += q; // pc4h9
  // d()/d[c2h4]
  dqdci = +k_f * sc[17];
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1441] -= dqdci; // dwdot[c2h5]/d[c2h4]
  J[1455] += dqdci; // dwdot[pc4h9]/d[c2h4]
  // d()/d[c2h5]
  dqdci = +k_f * sc[16];
  J[1529] -= dqdci; // dwdot[c2h4]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1544] += dqdci; // dwdot[pc4h9]/d[c2h5]
  // d()/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7863] += dqdT; // dwdot[pc4h9]/dT

  // reaction 253: pc4h9 => c4h8-1 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[31];
  k_f = 1.159e+17 * exp(-1.17 * logT - (19202.7479671081) * invT);
  dlnkfdT = -1.17 * invT + (19202.7479671081) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[30] += q; // c4h8-1
  wdot[31] -= q; // pc4h9
  // d()/d[pc4h9]
  dqdci = +k_f;
  J[2759] += dqdci; // dwdot[h]/d[pc4h9]
  J[2789] += dqdci; // dwdot[c4h8-1]/d[pc4h9]
  J[2790] -= dqdci; // dwdot[pc4h9]/d[pc4h9]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT
  J[7863] -= dqdT; // dwdot[pc4h9]/dT

  // reaction 254: c4h8-1 + h => pc4h9
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[30];
  k_f = 10000000 * exp(-(1459.32833083369) * invT);
  dlnkfdT = (1459.32833083369) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[30] -= q; // c4h8-1
  wdot[31] += q; // pc4h9
  // d()/d[h]
  dqdci = +k_f * sc[30];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[30] -= dqdci; // dwdot[c4h8-1]/d[h]
  J[31] += dqdci; // dwdot[pc4h9]/d[h]
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[0];
  J[2670] -= dqdci; // dwdot[h]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  J[2701] += dqdci; // dwdot[pc4h9]/d[c4h8-1]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT
  J[7863] += dqdT; // dwdot[pc4h9]/dT

  // reaction 255: o2 + pc4h9 => c4h8-1 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[31];
  k_f = 3e-25 * exp(-(1509.64999741416) * invT);
  dlnkfdT = (1509.64999741416) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[30] += q; // c4h8-1
  wdot[31] -= q; // pc4h9
  // d()/d[o2]
  dqdci = +k_f * sc[31];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[297] += dqdci; // dwdot[c4h8-1]/d[o2]
  J[298] -= dqdci; // dwdot[pc4h9]/d[o2]
  // d()/d[pc4h9]
  dqdci = +k_f * sc[3];
  J[2762] -= dqdci; // dwdot[o2]/d[pc4h9]
  J[2770] += dqdci; // dwdot[ho2]/d[pc4h9]
  J[2789] += dqdci; // dwdot[c4h8-1]/d[pc4h9]
  J[2790] -= dqdci; // dwdot[pc4h9]/d[pc4h9]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT
  J[7863] -= dqdT; // dwdot[pc4h9]/dT

  // reaction 256: c4h8-1 + ho2 => o2 + pc4h9
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[30];
  k_f = 2e-25 * exp(-(8806.29165158259) * invT);
  dlnkfdT = (8806.29165158259) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[30] -= q; // c4h8-1
  wdot[31] += q; // pc4h9
  // d()/d[ho2]
  dqdci = +k_f * sc[30];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1009] -= dqdci; // dwdot[c4h8-1]/d[ho2]
  J[1010] += dqdci; // dwdot[pc4h9]/d[ho2]
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[11];
  J[2673] += dqdci; // dwdot[o2]/d[c4h8-1]
  J[2681] -= dqdci; // dwdot[ho2]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  J[2701] += dqdci; // dwdot[pc4h9]/d[c4h8-1]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT
  J[7863] += dqdT; // dwdot[pc4h9]/dT

  // reaction 257: ch3coch2 => ch2co + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[32];
  k_f = 100000000000000 * exp(-(15599.7166399463) * invT);
  dlnkfdT = (15599.7166399463) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[20] += q; // ch2co
  wdot[32] -= q; // ch3coch2
  // d()/d[ch3coch2]
  dqdci = +k_f;
  J[2857] += dqdci; // dwdot[ch3]/d[ch3coch2]
  J[2868] += dqdci; // dwdot[ch2co]/d[ch3coch2]
  J[2880] -= dqdci; // dwdot[ch3coch2]/d[ch3coch2]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7852] += dqdT; // dwdot[ch2co]/dT
  J[7864] -= dqdT; // dwdot[ch3coch2]/dT

  // reaction 258: ch2co + ch3 => ch3coch2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[20];
  k_f = 100000 * exp(-(3019.29999482832) * invT);
  dlnkfdT = (3019.29999482832) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[20] -= q; // ch2co
  wdot[32] += q; // ch3coch2
  // d()/d[ch3]
  dqdci = +k_f * sc[20];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[821] -= dqdci; // dwdot[ch2co]/d[ch3]
  J[833] += dqdci; // dwdot[ch3coch2]/d[ch3]
  // d()/d[ch2co]
  dqdci = +k_f * sc[9];
  J[1789] -= dqdci; // dwdot[ch3]/d[ch2co]
  J[1800] -= dqdci; // dwdot[ch2co]/d[ch2co]
  J[1812] += dqdci; // dwdot[ch3coch2]/d[ch2co]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7852] -= dqdT; // dwdot[ch2co]/dT
  J[7864] += dqdT; // dwdot[ch3coch2]/dT

  // reaction 259: c2h5co => c2h5 + co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[34];
  k_f = 1.834e+15 * exp(-0.73 * logT - (6496.52715553893) * invT);
  dlnkfdT = -0.73 * invT + (6496.52715553893) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] += q;  // co
  wdot[17] += q; // c2h5
  wdot[34] -= q; // c2h5co
  // d()/d[c2h5co]
  dqdci = +k_f;
  J[3032] += dqdci; // dwdot[co]/d[c2h5co]
  J[3043] += dqdci; // dwdot[c2h5]/d[c2h5co]
  J[3060] -= dqdci; // dwdot[c2h5co]/d[c2h5co]
  // d()/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7866] -= dqdT; // dwdot[c2h5co]/dT

  // reaction 260: c2h5 + co => c2h5co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[17];
  k_f = 151000 * exp(-(2420.4721625207) * invT);
  dlnkfdT = (2420.4721625207) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // co
  wdot[17] -= q; // c2h5
  wdot[34] += q; // c2h5co
  // d()/d[co]
  dqdci = +k_f * sc[17];
  J[540] -= dqdci; // dwdot[co]/d[co]
  J[551] -= dqdci; // dwdot[c2h5]/d[co]
  J[568] += dqdci; // dwdot[c2h5co]/d[co]
  // d()/d[c2h5]
  dqdci = +k_f * sc[6];
  J[1519] -= dqdci; // dwdot[co]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1547] += dqdci; // dwdot[c2h5co]/d[c2h5]
  // d()/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7866] += dqdT; // dwdot[c2h5co]/dT

  // reaction 261: c2h5cho + h => c2h5co + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[33];
  k_f = 40000000 * exp(-(2113.50999637982) * invT);
  dlnkfdT = (2113.50999637982) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[33] -= q; // c2h5cho
  wdot[34] += q; // c2h5co
  // d()/d[h]
  dqdci = +k_f * sc[33];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[33] -= dqdci; // dwdot[c2h5cho]/d[h]
  J[34] += dqdci; // dwdot[c2h5co]/d[h]
  // d()/d[c2h5cho]
  dqdci = +k_f * sc[0];
  J[2937] -= dqdci; // dwdot[h]/d[c2h5cho]
  J[2938] += dqdci; // dwdot[h2]/d[c2h5cho]
  J[2970] -= dqdci; // dwdot[c2h5cho]/d[c2h5cho]
  J[2971] += dqdci; // dwdot[c2h5co]/d[c2h5cho]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7865] -= dqdT; // dwdot[c2h5cho]/dT
  J[7866] += dqdT; // dwdot[c2h5co]/dT

  // reaction 262: c2h5co + h2 => c2h5cho + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[34];
  k_f = 5854000 * exp(-(10361.2311489192) * invT);
  dlnkfdT = (10361.2311489192) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[33] += q; // c2h5cho
  wdot[34] -= q; // c2h5co
  // d()/d[h2]
  dqdci = +k_f * sc[34];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[122] += dqdci; // dwdot[c2h5cho]/d[h2]
  J[123] -= dqdci; // dwdot[c2h5co]/d[h2]
  // d()/d[c2h5co]
  dqdci = +k_f * sc[1];
  J[3026] += dqdci; // dwdot[h]/d[c2h5co]
  J[3027] -= dqdci; // dwdot[h2]/d[c2h5co]
  J[3059] += dqdci; // dwdot[c2h5cho]/d[c2h5co]
  J[3060] -= dqdci; // dwdot[c2h5co]/d[c2h5co]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7865] += dqdT; // dwdot[c2h5cho]/dT
  J[7866] -= dqdT; // dwdot[c2h5co]/dT

  // reaction 263: c2h5cho + o => c2h5co + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[33];
  k_f = 5000000 * exp(-(900.757831790448) * invT);
  dlnkfdT = (900.757831790448) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[4] += q;  // oh
  wdot[33] -= q; // c2h5cho
  wdot[34] += q; // c2h5co
  // d()/d[o]
  dqdci = +k_f * sc[33];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[182] += dqdci; // dwdot[oh]/d[o]
  J[211] -= dqdci; // dwdot[c2h5cho]/d[o]
  J[212] += dqdci; // dwdot[c2h5co]/d[o]
  // d()/d[c2h5cho]
  dqdci = +k_f * sc[2];
  J[2939] -= dqdci; // dwdot[o]/d[c2h5cho]
  J[2941] += dqdci; // dwdot[oh]/d[c2h5cho]
  J[2970] -= dqdci; // dwdot[c2h5cho]/d[c2h5cho]
  J[2971] += dqdci; // dwdot[c2h5co]/d[c2h5cho]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7865] -= dqdT; // dwdot[c2h5cho]/dT
  J[7866] += dqdT; // dwdot[c2h5co]/dT

  // reaction 264: c2h5co + oh => c2h5cho + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[34];
  k_f = 321400 * exp(-(8091.72398613989) * invT);
  dlnkfdT = (8091.72398613989) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[4] -= q;  // oh
  wdot[33] += q; // c2h5cho
  wdot[34] -= q; // c2h5co
  // d()/d[oh]
  dqdci = +k_f * sc[34];
  J[358] += dqdci; // dwdot[o]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[389] += dqdci; // dwdot[c2h5cho]/d[oh]
  J[390] -= dqdci; // dwdot[c2h5co]/d[oh]
  // d()/d[c2h5co]
  dqdci = +k_f * sc[4];
  J[3028] += dqdci; // dwdot[o]/d[c2h5co]
  J[3030] -= dqdci; // dwdot[oh]/d[c2h5co]
  J[3059] += dqdci; // dwdot[c2h5cho]/d[c2h5co]
  J[3060] -= dqdci; // dwdot[c2h5co]/d[c2h5co]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7865] += dqdT; // dwdot[c2h5cho]/dT
  J[7866] -= dqdT; // dwdot[c2h5co]/dT

  // reaction 265: c2h5cho + oh => c2h5co + h2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[33];
  k_f = 26900 * exp(0.76 * logT - (-171.093666373605) * invT);
  dlnkfdT = 0.76 * invT + (-171.093666373605) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[33] -= q; // c2h5cho
  wdot[34] += q; // c2h5co
  // d()/d[oh]
  dqdci = +k_f * sc[33];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[389] -= dqdci; // dwdot[c2h5cho]/d[oh]
  J[390] += dqdci; // dwdot[c2h5co]/d[oh]
  // d()/d[c2h5cho]
  dqdci = +k_f * sc[4];
  J[2941] -= dqdci; // dwdot[oh]/d[c2h5cho]
  J[2942] += dqdci; // dwdot[h2o]/d[c2h5cho]
  J[2970] -= dqdci; // dwdot[c2h5cho]/d[c2h5cho]
  J[2971] += dqdci; // dwdot[c2h5co]/d[c2h5cho]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7865] -= dqdT; // dwdot[c2h5cho]/dT
  J[7866] += dqdT; // dwdot[c2h5co]/dT

  // reaction 266: c2h5co + h2o => c2h5cho + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[34];
  k_f = 17050 * exp(0.76 * logT - (15700.3599731073) * invT);
  dlnkfdT = 0.76 * invT + (15700.3599731073) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[33] += q; // c2h5cho
  wdot[34] -= q; // c2h5co
  // d()/d[h2o]
  dqdci = +k_f * sc[34];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[478] += dqdci; // dwdot[c2h5cho]/d[h2o]
  J[479] -= dqdci; // dwdot[c2h5co]/d[h2o]
  // d()/d[c2h5co]
  dqdci = +k_f * sc[5];
  J[3030] += dqdci; // dwdot[oh]/d[c2h5co]
  J[3031] -= dqdci; // dwdot[h2o]/d[c2h5co]
  J[3059] += dqdci; // dwdot[c2h5cho]/d[c2h5co]
  J[3060] -= dqdci; // dwdot[c2h5co]/d[c2h5co]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7865] += dqdT; // dwdot[c2h5cho]/dT
  J[7866] -= dqdT; // dwdot[c2h5co]/dT

  // reaction 267: c2h5cho + ch3 => c2h5co + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[33];
  k_f = 2.608 * exp(1.78 * logT - (2974.5137115717) * invT);
  dlnkfdT = 1.78 * invT + (2974.5137115717) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[33] -= q; // c2h5cho
  wdot[34] += q; // c2h5co
  // d()/d[ch3]
  dqdci = +k_f * sc[33];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[834] -= dqdci; // dwdot[c2h5cho]/d[ch3]
  J[835] += dqdci; // dwdot[c2h5co]/d[ch3]
  // d()/d[c2h5cho]
  dqdci = +k_f * sc[9];
  J[2946] -= dqdci; // dwdot[ch3]/d[c2h5cho]
  J[2947] += dqdci; // dwdot[ch4]/d[c2h5cho]
  J[2970] -= dqdci; // dwdot[c2h5cho]/d[c2h5cho]
  J[2971] += dqdci; // dwdot[c2h5co]/d[c2h5cho]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7865] -= dqdT; // dwdot[c2h5cho]/dT
  J[7866] += dqdT; // dwdot[c2h5co]/dT

  // reaction 268: c2h5co + ch4 => c2h5cho + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[34];
  k_f = 9.972 * exp(1.78 * logT - (11463.2756470315) * invT);
  dlnkfdT = 1.78 * invT + (11463.2756470315) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[33] += q; // c2h5cho
  wdot[34] -= q; // c2h5co
  // d()/d[ch4]
  dqdci = +k_f * sc[34];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[923] += dqdci; // dwdot[c2h5cho]/d[ch4]
  J[924] -= dqdci; // dwdot[c2h5co]/d[ch4]
  // d()/d[c2h5co]
  dqdci = +k_f * sc[10];
  J[3035] += dqdci; // dwdot[ch3]/d[c2h5co]
  J[3036] -= dqdci; // dwdot[ch4]/d[c2h5co]
  J[3059] += dqdci; // dwdot[c2h5cho]/d[c2h5co]
  J[3060] -= dqdci; // dwdot[c2h5co]/d[c2h5co]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7865] += dqdT; // dwdot[c2h5cho]/dT
  J[7866] -= dqdT; // dwdot[c2h5co]/dT

  // reaction 269: c2h5cho + ho2 => c2h5co + h2o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[33];
  k_f = 2800000 * exp(-(6843.74665494419) * invT);
  dlnkfdT = (6843.74665494419) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  wdot[33] -= q; // c2h5cho
  wdot[34] += q; // c2h5co
  // d()/d[ho2]
  dqdci = +k_f * sc[33];
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[991] += dqdci;  // dwdot[h2o2]/d[ho2]
  J[1012] -= dqdci; // dwdot[c2h5cho]/d[ho2]
  J[1013] += dqdci; // dwdot[c2h5co]/d[ho2]
  // d()/d[c2h5cho]
  dqdci = +k_f * sc[11];
  J[2948] -= dqdci; // dwdot[ho2]/d[c2h5cho]
  J[2949] += dqdci; // dwdot[h2o2]/d[c2h5cho]
  J[2970] -= dqdci; // dwdot[c2h5cho]/d[c2h5cho]
  J[2971] += dqdci; // dwdot[c2h5co]/d[c2h5cho]
  // d()/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT
  J[7865] -= dqdT; // dwdot[c2h5cho]/dT
  J[7866] += dqdT; // dwdot[c2h5co]/dT

  // reaction 270: c2h5co + h2o2 => c2h5cho + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[34];
  k_f = 10530000 * exp(-0.33 * logT - (6884.00398820857) * invT);
  dlnkfdT = -0.33 * invT + (6884.00398820857) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // ho2
  wdot[12] -= q; // h2o2
  wdot[33] += q; // c2h5cho
  wdot[34] -= q; // c2h5co
  // d()/d[h2o2]
  dqdci = +k_f * sc[34];
  J[1079] += dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci; // dwdot[h2o2]/d[h2o2]
  J[1101] += dqdci; // dwdot[c2h5cho]/d[h2o2]
  J[1102] -= dqdci; // dwdot[c2h5co]/d[h2o2]
  // d()/d[c2h5co]
  dqdci = +k_f * sc[12];
  J[3037] += dqdci; // dwdot[ho2]/d[c2h5co]
  J[3038] -= dqdci; // dwdot[h2o2]/d[c2h5co]
  J[3059] += dqdci; // dwdot[c2h5cho]/d[c2h5co]
  J[3060] -= dqdci; // dwdot[c2h5co]/d[c2h5co]
  // d()/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT; // dwdot[h2o2]/dT
  J[7865] += dqdT; // dwdot[c2h5cho]/dT
  J[7866] -= dqdT; // dwdot[c2h5co]/dT

  // reaction 271: c2h5 + c2h5cho => c2h5co + c2h6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[33];
  k_f = 1000000 * exp(-(4025.73332643776) * invT);
  dlnkfdT = (4025.73332643776) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[15] += q; // c2h6
  wdot[17] -= q; // c2h5
  wdot[33] -= q; // c2h5cho
  wdot[34] += q; // c2h5co
  // d()/d[c2h5]
  dqdci = +k_f * sc[33];
  J[1528] += dqdci; // dwdot[c2h6]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1546] -= dqdci; // dwdot[c2h5cho]/d[c2h5]
  J[1547] += dqdci; // dwdot[c2h5co]/d[c2h5]
  // d()/d[c2h5cho]
  dqdci = +k_f * sc[17];
  J[2952] += dqdci; // dwdot[c2h6]/d[c2h5cho]
  J[2954] -= dqdci; // dwdot[c2h5]/d[c2h5cho]
  J[2970] -= dqdci; // dwdot[c2h5cho]/d[c2h5cho]
  J[2971] += dqdci; // dwdot[c2h5co]/d[c2h5cho]
  // d()/dT
  J[7847] += dqdT; // dwdot[c2h6]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7865] -= dqdT; // dwdot[c2h5cho]/dT
  J[7866] += dqdT; // dwdot[c2h5co]/dT

  // reaction 272: c2h5co + c2h6 => c2h5 + c2h5cho
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[34];
  k_f = 598400000 * exp(-0.57 * logT - (10416.5849821577) * invT);
  dlnkfdT = -0.57 * invT + (10416.5849821577) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[15] -= q; // c2h6
  wdot[17] += q; // c2h5
  wdot[33] += q; // c2h5cho
  wdot[34] -= q; // c2h5co
  // d()/d[c2h6]
  dqdci = +k_f * sc[34];
  J[1350] -= dqdci; // dwdot[c2h6]/d[c2h6]
  J[1352] += dqdci; // dwdot[c2h5]/d[c2h6]
  J[1368] += dqdci; // dwdot[c2h5cho]/d[c2h6]
  J[1369] -= dqdci; // dwdot[c2h5co]/d[c2h6]
  // d()/d[c2h5co]
  dqdci = +k_f * sc[15];
  J[3041] -= dqdci; // dwdot[c2h6]/d[c2h5co]
  J[3043] += dqdci; // dwdot[c2h5]/d[c2h5co]
  J[3059] += dqdci; // dwdot[c2h5cho]/d[c2h5co]
  J[3060] -= dqdci; // dwdot[c2h5co]/d[c2h5co]
  // d()/dT
  J[7847] -= dqdT; // dwdot[c2h6]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7865] += dqdT; // dwdot[c2h5cho]/dT
  J[7866] -= dqdT; // dwdot[c2h5co]/dT

  // reaction 273: c2h5cho => c2h5 + hco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[33];
  k_f = 9.85e+18 * exp(-0.73 * logT - (41117.8337629036) * invT);
  dlnkfdT = -0.73 * invT + (41117.8337629036) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[7] += q;  // hco
  wdot[17] += q; // c2h5
  wdot[33] -= q; // c2h5cho
  // d()/d[c2h5cho]
  dqdci = +k_f;
  J[2944] += dqdci; // dwdot[hco]/d[c2h5cho]
  J[2954] += dqdci; // dwdot[c2h5]/d[c2h5cho]
  J[2970] -= dqdci; // dwdot[c2h5cho]/d[c2h5cho]
  // d()/dT
  J[7839] += dqdT; // dwdot[hco]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7865] -= dqdT; // dwdot[c2h5cho]/dT

  // reaction 274: c2h5 + hco => c2h5cho
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[17];
  k_f = 18100000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[7] -= q;  // hco
  wdot[17] -= q; // c2h5
  wdot[33] += q; // c2h5cho
  // d()/d[hco]
  dqdci = +k_f * sc[17];
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  J[640] -= dqdci; // dwdot[c2h5]/d[hco]
  J[656] += dqdci; // dwdot[c2h5cho]/d[hco]
  // d()/d[c2h5]
  dqdci = +k_f * sc[7];
  J[1520] -= dqdci; // dwdot[hco]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1546] += dqdci; // dwdot[c2h5cho]/d[c2h5]
  // d()/dT
  J[7839] -= dqdT; // dwdot[hco]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7865] += dqdT; // dwdot[c2h5cho]/dT

  // reaction 275: c2h5cho + o2 => c2h5co + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[33];
  k_f = 10050000 * exp(-(20480.9182982521) * invT);
  dlnkfdT = (20480.9182982521) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[33] -= q; // c2h5cho
  wdot[34] += q; // c2h5co
  // d()/d[o2]
  dqdci = +k_f * sc[33];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[300] -= dqdci; // dwdot[c2h5cho]/d[o2]
  J[301] += dqdci; // dwdot[c2h5co]/d[o2]
  // d()/d[c2h5cho]
  dqdci = +k_f * sc[3];
  J[2940] -= dqdci; // dwdot[o2]/d[c2h5cho]
  J[2948] += dqdci; // dwdot[ho2]/d[c2h5cho]
  J[2970] -= dqdci; // dwdot[c2h5cho]/d[c2h5cho]
  J[2971] += dqdci; // dwdot[c2h5co]/d[c2h5cho]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7865] -= dqdT; // dwdot[c2h5cho]/dT
  J[7866] += dqdT; // dwdot[c2h5co]/dT

  // reaction 276: c2h5co + ho2 => c2h5cho + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[34];
  k_f = 26720 * exp(0.33 * logT - (-199.273799658669) * invT);
  dlnkfdT = 0.33 * invT + (-199.273799658669) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[33] += q; // c2h5cho
  wdot[34] -= q; // c2h5co
  // d()/d[ho2]
  dqdci = +k_f * sc[34];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1012] += dqdci; // dwdot[c2h5cho]/d[ho2]
  J[1013] -= dqdci; // dwdot[c2h5co]/d[ho2]
  // d()/d[c2h5co]
  dqdci = +k_f * sc[11];
  J[3029] += dqdci; // dwdot[o2]/d[c2h5co]
  J[3037] -= dqdci; // dwdot[ho2]/d[c2h5co]
  J[3059] += dqdci; // dwdot[c2h5cho]/d[c2h5co]
  J[3060] -= dqdci; // dwdot[c2h5co]/d[c2h5co]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7865] += dqdT; // dwdot[c2h5cho]/dT
  J[7866] -= dqdT; // dwdot[c2h5co]/dT

  // reaction 277: c2h3 + c2h5cho => c2h4 + c2h5co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[33];
  k_f = 1700000 * exp(-(4247.14865939183) * invT);
  dlnkfdT = (4247.14865939183) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] += q; // c2h4
  wdot[19] -= q; // c2h3
  wdot[33] -= q; // c2h5cho
  wdot[34] += q; // c2h5co
  // d()/d[c2h3]
  dqdci = +k_f * sc[33];
  J[1707] += dqdci; // dwdot[c2h4]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  J[1724] -= dqdci; // dwdot[c2h5cho]/d[c2h3]
  J[1725] += dqdci; // dwdot[c2h5co]/d[c2h3]
  // d()/d[c2h5cho]
  dqdci = +k_f * sc[19];
  J[2953] += dqdci; // dwdot[c2h4]/d[c2h5cho]
  J[2956] -= dqdci; // dwdot[c2h3]/d[c2h5cho]
  J[2970] -= dqdci; // dwdot[c2h5cho]/d[c2h5cho]
  J[2971] += dqdci; // dwdot[c2h5co]/d[c2h5cho]
  // d()/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT
  J[7865] -= dqdT; // dwdot[c2h5cho]/dT
  J[7866] += dqdT; // dwdot[c2h5co]/dT

  // reaction 278: c2h4 + c2h5co => c2h3 + c2h5cho
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[34];
  k_f = 3661 * exp(0.83 * logT - (12167.7789791581) * invT);
  dlnkfdT = 0.83 * invT + (12167.7789791581) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] -= q; // c2h4
  wdot[19] += q; // c2h3
  wdot[33] += q; // c2h5cho
  wdot[34] -= q; // c2h5co
  // d()/d[c2h4]
  dqdci = +k_f * sc[34];
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1443] += dqdci; // dwdot[c2h3]/d[c2h4]
  J[1457] += dqdci; // dwdot[c2h5cho]/d[c2h4]
  J[1458] -= dqdci; // dwdot[c2h5co]/d[c2h4]
  // d()/d[c2h5co]
  dqdci = +k_f * sc[16];
  J[3042] -= dqdci; // dwdot[c2h4]/d[c2h5co]
  J[3045] += dqdci; // dwdot[c2h3]/d[c2h5co]
  J[3059] += dqdci; // dwdot[c2h5cho]/d[c2h5co]
  J[3060] -= dqdci; // dwdot[c2h5co]/d[c2h5co]
  // d()/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT
  J[7865] += dqdT; // dwdot[c2h5cho]/dT
  J[7866] -= dqdT; // dwdot[c2h5co]/dT

  // reaction 279: c2h5cho + c3h5-a => c2h5co + c3h6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[33] * sc[47];
  k_f = 1700000 * exp(-(4247.14865939183) * invT);
  dlnkfdT = (4247.14865939183) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[26] += q; // c3h6
  wdot[33] -= q; // c2h5cho
  wdot[34] += q; // c2h5co
  wdot[47] -= q; // c3h5-a
  // d()/d[c2h5cho]
  dqdci = +k_f * sc[47];
  J[2963] += dqdci; // dwdot[c3h6]/d[c2h5cho]
  J[2970] -= dqdci; // dwdot[c2h5cho]/d[c2h5cho]
  J[2971] += dqdci; // dwdot[c2h5co]/d[c2h5cho]
  J[2984] -= dqdci; // dwdot[c3h5-a]/d[c2h5cho]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[33];
  J[4209] += dqdci; // dwdot[c3h6]/d[c3h5-a]
  J[4216] -= dqdci; // dwdot[c2h5cho]/d[c3h5-a]
  J[4217] += dqdci; // dwdot[c2h5co]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7865] -= dqdT; // dwdot[c2h5cho]/dT
  J[7866] += dqdT; // dwdot[c2h5co]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 280: c2h5co + c3h6 => c2h5cho + c3h5-a
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[26] * sc[34];
  k_f = 10000000 * exp(-(14090.0666425322) * invT);
  dlnkfdT = (14090.0666425322) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[26] -= q; // c3h6
  wdot[33] += q; // c2h5cho
  wdot[34] -= q; // c2h5co
  wdot[47] += q; // c3h5-a
  // d()/d[c3h6]
  dqdci = +k_f * sc[34];
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  J[2347] += dqdci; // dwdot[c2h5cho]/d[c3h6]
  J[2348] -= dqdci; // dwdot[c2h5co]/d[c3h6]
  J[2361] += dqdci; // dwdot[c3h5-a]/d[c3h6]
  // d()/d[c2h5co]
  dqdci = +k_f * sc[26];
  J[3052] -= dqdci; // dwdot[c3h6]/d[c2h5co]
  J[3059] += dqdci; // dwdot[c2h5cho]/d[c2h5co]
  J[3060] -= dqdci; // dwdot[c2h5co]/d[c2h5co]
  J[3073] += dqdci; // dwdot[c3h5-a]/d[c2h5co]
  // d()/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT
  J[7865] += dqdT; // dwdot[c2h5cho]/dT
  J[7866] -= dqdT; // dwdot[c2h5co]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 281: c5h10-1 => c2h5 + c3h5-a
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[36];
  k_f = 9.173e+20 * exp(-1.63 * logT - (37233.0011028912) * invT);
  dlnkfdT = -1.63 * invT + (37233.0011028912) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[17] += q; // c2h5
  wdot[36] -= q; // c5h10-1
  wdot[47] += q; // c3h5-a
  // d()/d[c5h10-1]
  dqdci = +k_f;
  J[3221] += dqdci; // dwdot[c2h5]/d[c5h10-1]
  J[3240] -= dqdci; // dwdot[c5h10-1]/d[c5h10-1]
  J[3251] += dqdci; // dwdot[c3h5-a]/d[c5h10-1]
  // d()/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7868] -= dqdT; // dwdot[c5h10-1]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 282: c2h5 + c3h5-a => c5h10-1
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[47];
  k_f = 4000000 * exp(-(-299.917132819613) * invT);
  dlnkfdT = (-299.917132819613) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[17] -= q; // c2h5
  wdot[36] += q; // c5h10-1
  wdot[47] -= q; // c3h5-a
  // d()/d[c2h5]
  dqdci = +k_f * sc[47];
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1549] += dqdci; // dwdot[c5h10-1]/d[c2h5]
  J[1560] -= dqdci; // dwdot[c3h5-a]/d[c2h5]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[17];
  J[4200] -= dqdci; // dwdot[c2h5]/d[c3h5-a]
  J[4219] += dqdci; // dwdot[c5h10-1]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7868] += dqdT; // dwdot[c5h10-1]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 283: c5h10-1 + h => c5h9 + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[36];
  k_f = 28000000 * exp(-(2012.86666321888) * invT);
  dlnkfdT = (2012.86666321888) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[35] += q; // c5h9
  wdot[36] -= q; // c5h10-1
  // d()/d[h]
  dqdci = +k_f * sc[36];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[35] += dqdci; // dwdot[c5h9]/d[h]
  J[36] -= dqdci; // dwdot[c5h10-1]/d[h]
  // d()/d[c5h10-1]
  dqdci = +k_f * sc[0];
  J[3204] -= dqdci; // dwdot[h]/d[c5h10-1]
  J[3205] += dqdci; // dwdot[h2]/d[c5h10-1]
  J[3239] += dqdci; // dwdot[c5h9]/d[c5h10-1]
  J[3240] -= dqdci; // dwdot[c5h10-1]/d[c5h10-1]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7867] += dqdT; // dwdot[c5h9]/dT
  J[7868] -= dqdT; // dwdot[c5h10-1]/dT

  // reaction 284: c5h9 + h2 => c5h10-1 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[35];
  k_f = 1000000 * exp(-(7045.03332126608) * invT);
  dlnkfdT = (7045.03332126608) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[35] -= q; // c5h9
  wdot[36] += q; // c5h10-1
  // d()/d[h2]
  dqdci = +k_f * sc[35];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[124] -= dqdci; // dwdot[c5h9]/d[h2]
  J[125] += dqdci; // dwdot[c5h10-1]/d[h2]
  // d()/d[c5h9]
  dqdci = +k_f * sc[1];
  J[3115] += dqdci; // dwdot[h]/d[c5h9]
  J[3116] -= dqdci; // dwdot[h2]/d[c5h9]
  J[3150] -= dqdci; // dwdot[c5h9]/d[c5h9]
  J[3151] += dqdci; // dwdot[c5h10-1]/d[c5h9]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7867] -= dqdT; // dwdot[c5h9]/dT
  J[7868] += dqdT; // dwdot[c5h10-1]/dT

  // reaction 285: c5h10-1 + o => c5h9 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[36];
  k_f = 0.254 * exp(2.56 * logT - (-568.634832359333) * invT);
  dlnkfdT = 2.56 * invT + (-568.634832359333) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[4] += q;  // oh
  wdot[35] += q; // c5h9
  wdot[36] -= q; // c5h10-1
  // d()/d[o]
  dqdci = +k_f * sc[36];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[182] += dqdci; // dwdot[oh]/d[o]
  J[213] += dqdci; // dwdot[c5h9]/d[o]
  J[214] -= dqdci; // dwdot[c5h10-1]/d[o]
  // d()/d[c5h10-1]
  dqdci = +k_f * sc[2];
  J[3206] -= dqdci; // dwdot[o]/d[c5h10-1]
  J[3208] += dqdci; // dwdot[oh]/d[c5h10-1]
  J[3239] += dqdci; // dwdot[c5h9]/d[c5h10-1]
  J[3240] -= dqdci; // dwdot[c5h10-1]/d[c5h10-1]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7867] += dqdT; // dwdot[c5h9]/dT
  J[7868] -= dqdT; // dwdot[c5h10-1]/dT

  // reaction 286: c5h9 + oh => c5h10-1 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[35];
  k_f = 700000 * exp(-(15046.1783075611) * invT);
  dlnkfdT = (15046.1783075611) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[4] -= q;  // oh
  wdot[35] -= q; // c5h9
  wdot[36] += q; // c5h10-1
  // d()/d[oh]
  dqdci = +k_f * sc[35];
  J[358] += dqdci; // dwdot[o]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[391] -= dqdci; // dwdot[c5h9]/d[oh]
  J[392] += dqdci; // dwdot[c5h10-1]/d[oh]
  // d()/d[c5h9]
  dqdci = +k_f * sc[4];
  J[3117] += dqdci; // dwdot[o]/d[c5h9]
  J[3119] -= dqdci; // dwdot[oh]/d[c5h9]
  J[3150] -= dqdci; // dwdot[c5h9]/d[c5h9]
  J[3151] += dqdci; // dwdot[c5h10-1]/d[c5h9]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7867] -= dqdT; // dwdot[c5h9]/dT
  J[7868] += dqdT; // dwdot[c5h10-1]/dT

  // reaction 287: c5h10-1 + o => hco + pc4h9
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[36];
  k_f = 100000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[7] += q;  // hco
  wdot[31] += q; // pc4h9
  wdot[36] -= q; // c5h10-1
  // d()/d[o]
  dqdci = +k_f * sc[36];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[185] += dqdci; // dwdot[hco]/d[o]
  J[209] += dqdci; // dwdot[pc4h9]/d[o]
  J[214] -= dqdci; // dwdot[c5h10-1]/d[o]
  // d()/d[c5h10-1]
  dqdci = +k_f * sc[2];
  J[3206] -= dqdci; // dwdot[o]/d[c5h10-1]
  J[3211] += dqdci; // dwdot[hco]/d[c5h10-1]
  J[3235] += dqdci; // dwdot[pc4h9]/d[c5h10-1]
  J[3240] -= dqdci; // dwdot[c5h10-1]/d[c5h10-1]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7839] += dqdT; // dwdot[hco]/dT
  J[7863] += dqdT; // dwdot[pc4h9]/dT
  J[7868] -= dqdT; // dwdot[c5h10-1]/dT

  // reaction 288: c5h10-1 + o => ch3co + nc3h7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[36];
  k_f = 100000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[22] += q; // ch3co
  wdot[28] += q; // nc3h7
  wdot[36] -= q; // c5h10-1
  // d()/d[o]
  dqdci = +k_f * sc[36];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[200] += dqdci; // dwdot[ch3co]/d[o]
  J[206] += dqdci; // dwdot[nc3h7]/d[o]
  J[214] -= dqdci; // dwdot[c5h10-1]/d[o]
  // d()/d[c5h10-1]
  dqdci = +k_f * sc[2];
  J[3206] -= dqdci; // dwdot[o]/d[c5h10-1]
  J[3226] += dqdci; // dwdot[ch3co]/d[c5h10-1]
  J[3232] += dqdci; // dwdot[nc3h7]/d[c5h10-1]
  J[3240] -= dqdci; // dwdot[c5h10-1]/d[c5h10-1]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7854] += dqdT; // dwdot[ch3co]/dT
  J[7860] += dqdT; // dwdot[nc3h7]/dT
  J[7868] -= dqdT; // dwdot[c5h10-1]/dT

  // reaction 289: c5h10-1 + oh => c5h9 + h2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[36];
  k_f = 5.12 * exp(2 * logT - (-149.958566409806) * invT);
  dlnkfdT = 2 * invT + (-149.958566409806) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[35] += q; // c5h9
  wdot[36] -= q; // c5h10-1
  // d()/d[oh]
  dqdci = +k_f * sc[36];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[391] += dqdci; // dwdot[c5h9]/d[oh]
  J[392] -= dqdci; // dwdot[c5h10-1]/d[oh]
  // d()/d[c5h10-1]
  dqdci = +k_f * sc[4];
  J[3208] -= dqdci; // dwdot[oh]/d[c5h10-1]
  J[3209] += dqdci; // dwdot[h2o]/d[c5h10-1]
  J[3239] += dqdci; // dwdot[c5h9]/d[c5h10-1]
  J[3240] -= dqdci; // dwdot[c5h10-1]/d[c5h10-1]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7867] += dqdT; // dwdot[c5h9]/dT
  J[7868] -= dqdT; // dwdot[c5h10-1]/dT

  // reaction 290: c5h9 + h2o => c5h10-1 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[35];
  k_f = 20.6 * exp(2.16 * logT - (17597.486803191) * invT);
  dlnkfdT = 2.16 * invT + (17597.486803191) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[35] -= q; // c5h9
  wdot[36] += q; // c5h10-1
  // d()/d[h2o]
  dqdci = +k_f * sc[35];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[480] -= dqdci; // dwdot[c5h9]/d[h2o]
  J[481] += dqdci; // dwdot[c5h10-1]/d[h2o]
  // d()/d[c5h9]
  dqdci = +k_f * sc[5];
  J[3119] += dqdci; // dwdot[oh]/d[c5h9]
  J[3120] -= dqdci; // dwdot[h2o]/d[c5h9]
  J[3150] -= dqdci; // dwdot[c5h9]/d[c5h9]
  J[3151] += dqdci; // dwdot[c5h10-1]/d[c5h9]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7867] -= dqdT; // dwdot[c5h9]/dT
  J[7868] += dqdT; // dwdot[c5h10-1]/dT

  // reaction 291: c5h10-1 + oh => ch2o + pc4h9
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[36];
  k_f = 100000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[13] += q; // ch2o
  wdot[31] += q; // pc4h9
  wdot[36] -= q; // c5h10-1
  // d()/d[oh]
  dqdci = +k_f * sc[36];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[369] += dqdci; // dwdot[ch2o]/d[oh]
  J[387] += dqdci; // dwdot[pc4h9]/d[oh]
  J[392] -= dqdci; // dwdot[c5h10-1]/d[oh]
  // d()/d[c5h10-1]
  dqdci = +k_f * sc[4];
  J[3208] -= dqdci; // dwdot[oh]/d[c5h10-1]
  J[3217] += dqdci; // dwdot[ch2o]/d[c5h10-1]
  J[3235] += dqdci; // dwdot[pc4h9]/d[c5h10-1]
  J[3240] -= dqdci; // dwdot[c5h10-1]/d[c5h10-1]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT
  J[7863] += dqdT; // dwdot[pc4h9]/dT
  J[7868] -= dqdT; // dwdot[c5h10-1]/dT

  // reaction 292: c5h10-1 + oh => ch3cho + nc3h7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[36];
  k_f = 100000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[24] += q; // ch3cho
  wdot[28] += q; // nc3h7
  wdot[36] -= q; // c5h10-1
  // d()/d[oh]
  dqdci = +k_f * sc[36];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[380] += dqdci; // dwdot[ch3cho]/d[oh]
  J[384] += dqdci; // dwdot[nc3h7]/d[oh]
  J[392] -= dqdci; // dwdot[c5h10-1]/d[oh]
  // d()/d[c5h10-1]
  dqdci = +k_f * sc[4];
  J[3208] -= dqdci; // dwdot[oh]/d[c5h10-1]
  J[3228] += dqdci; // dwdot[ch3cho]/d[c5h10-1]
  J[3232] += dqdci; // dwdot[nc3h7]/d[c5h10-1]
  J[3240] -= dqdci; // dwdot[c5h10-1]/d[c5h10-1]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT
  J[7860] += dqdT; // dwdot[nc3h7]/dT
  J[7868] -= dqdT; // dwdot[c5h10-1]/dT

  // reaction 293: c5h10-1 + ch3 => c5h9 + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[36];
  k_f = 100000 * exp(-(3673.48166037445) * invT);
  dlnkfdT = (3673.48166037445) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[35] += q; // c5h9
  wdot[36] -= q; // c5h10-1
  // d()/d[ch3]
  dqdci = +k_f * sc[36];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[836] += dqdci; // dwdot[c5h9]/d[ch3]
  J[837] -= dqdci; // dwdot[c5h10-1]/d[ch3]
  // d()/d[c5h10-1]
  dqdci = +k_f * sc[9];
  J[3213] -= dqdci; // dwdot[ch3]/d[c5h10-1]
  J[3214] += dqdci; // dwdot[ch4]/d[c5h10-1]
  J[3239] += dqdci; // dwdot[c5h9]/d[c5h10-1]
  J[3240] -= dqdci; // dwdot[c5h10-1]/d[c5h10-1]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7867] += dqdT; // dwdot[c5h9]/dT
  J[7868] -= dqdT; // dwdot[c5h10-1]/dT

  // reaction 294: c5h9 + ch4 => c5h10-1 + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[35];
  k_f = 600000 * exp(-(9007.57831790448) * invT);
  dlnkfdT = (9007.57831790448) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[35] -= q; // c5h9
  wdot[36] += q; // c5h10-1
  // d()/d[ch4]
  dqdci = +k_f * sc[35];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[925] -= dqdci; // dwdot[c5h9]/d[ch4]
  J[926] += dqdci; // dwdot[c5h10-1]/d[ch4]
  // d()/d[c5h9]
  dqdci = +k_f * sc[10];
  J[3124] += dqdci; // dwdot[ch3]/d[c5h9]
  J[3125] -= dqdci; // dwdot[ch4]/d[c5h9]
  J[3150] -= dqdci; // dwdot[c5h9]/d[c5h9]
  J[3151] += dqdci; // dwdot[c5h10-1]/d[c5h9]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7867] -= dqdT; // dwdot[c5h9]/dT
  J[7868] += dqdT; // dwdot[c5h10-1]/dT

  // reaction 295: h + h2o2 => h2 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[12];
  k_f = 48200000 * exp(-(4000.57249314752) * invT);
  dlnkfdT = (4000.57249314752) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[11] += q; // ho2
  wdot[12] -= q; // h2o2
  // d()/d[h]
  dqdci = +k_f * sc[12];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[11] += dqdci; // dwdot[ho2]/d[h]
  J[12] -= dqdci; // dwdot[h2o2]/d[h]
  // d()/d[h2o2]
  dqdci = +k_f * sc[0];
  J[1068] -= dqdci; // dwdot[h]/d[h2o2]
  J[1069] += dqdci; // dwdot[h2]/d[h2o2]
  J[1079] += dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci; // dwdot[h2o2]/d[h2o2]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT; // dwdot[h2o2]/dT

  // reaction 296: h2 + ho2 => h + h2o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[11];
  k_f = 1875000 * exp(0.33 * logT - (12208.0363124225) * invT);
  dlnkfdT = 0.33 * invT + (12208.0363124225) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  // d()/d[h2]
  dqdci = +k_f * sc[11];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[100] -= dqdci; // dwdot[ho2]/d[h2]
  J[101] += dqdci; // dwdot[h2o2]/d[h2]
  // d()/d[ho2]
  dqdci = +k_f * sc[1];
  J[979] += dqdci; // dwdot[h]/d[ho2]
  J[980] -= dqdci; // dwdot[h2]/d[ho2]
  J[990] -= dqdci; // dwdot[ho2]/d[ho2]
  J[991] += dqdci; // dwdot[h2o2]/d[ho2]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT

  // reaction 297: hco + o => co2 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[7];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q; // h
  wdot[2] -= q; // o
  wdot[7] -= q; // hco
  wdot[8] += q; // co2
  // d()/d[o]
  dqdci = +k_f * sc[7];
  J[178] += dqdci; // dwdot[h]/d[o]
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[185] -= dqdci; // dwdot[hco]/d[o]
  J[186] += dqdci; // dwdot[co2]/d[o]
  // d()/d[hco]
  dqdci = +k_f * sc[2];
  J[623] += dqdci; // dwdot[h]/d[hco]
  J[625] -= dqdci; // dwdot[o]/d[hco]
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  J[631] += dqdci; // dwdot[co2]/d[hco]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7839] -= dqdT; // dwdot[hco]/dT
  J[7840] += dqdT; // dwdot[co2]/dT

  // reaction 298: co2 + h => hco + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[8];
  k_f = 9677000000 * exp(-(55454.4765716801) * invT);
  dlnkfdT = (55454.4765716801) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q; // h
  wdot[2] += q; // o
  wdot[7] += q; // hco
  wdot[8] -= q; // co2
  // d()/d[h]
  dqdci = +k_f * sc[8];
  J[0] -= dqdci; // dwdot[h]/d[h]
  J[2] += dqdci; // dwdot[o]/d[h]
  J[7] += dqdci; // dwdot[hco]/d[h]
  J[8] -= dqdci; // dwdot[co2]/d[h]
  // d()/d[co2]
  dqdci = +k_f * sc[0];
  J[712] -= dqdci; // dwdot[h]/d[co2]
  J[714] += dqdci; // dwdot[o]/d[co2]
  J[719] += dqdci; // dwdot[hco]/d[co2]
  J[720] -= dqdci; // dwdot[co2]/d[co2]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7839] += dqdT; // dwdot[hco]/dT
  J[7840] -= dqdT; // dwdot[co2]/dT

  // reaction 299: ch3co + h => ch2co + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[22];
  k_f = 20000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[20] += q; // ch2co
  wdot[22] -= q; // ch3co
  // d()/d[h]
  dqdci = +k_f * sc[22];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[20] += dqdci; // dwdot[ch2co]/d[h]
  J[22] -= dqdci; // dwdot[ch3co]/d[h]
  // d()/d[ch3co]
  dqdci = +k_f * sc[0];
  J[1958] -= dqdci; // dwdot[h]/d[ch3co]
  J[1959] += dqdci; // dwdot[h2]/d[ch3co]
  J[1978] += dqdci; // dwdot[ch2co]/d[ch3co]
  J[1980] -= dqdci; // dwdot[ch3co]/d[ch3co]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7852] += dqdT; // dwdot[ch2co]/dT
  J[7854] -= dqdT; // dwdot[ch3co]/dT

  // reaction 300: ch2co + h2 => ch3co + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[20];
  k_f = 562600000000 * exp(-1.13 * logT - (32054.9016117606) * invT);
  dlnkfdT = -1.13 * invT + (32054.9016117606) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[20] -= q; // ch2co
  wdot[22] += q; // ch3co
  // d()/d[h2]
  dqdci = +k_f * sc[20];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[109] -= dqdci; // dwdot[ch2co]/d[h2]
  J[111] += dqdci; // dwdot[ch3co]/d[h2]
  // d()/d[ch2co]
  dqdci = +k_f * sc[1];
  J[1780] += dqdci; // dwdot[h]/d[ch2co]
  J[1781] -= dqdci; // dwdot[h2]/d[ch2co]
  J[1800] -= dqdci; // dwdot[ch2co]/d[ch2co]
  J[1802] += dqdci; // dwdot[ch3co]/d[ch2co]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7852] -= dqdT; // dwdot[ch2co]/dT
  J[7854] += dqdT; // dwdot[ch3co]/dT

  // reaction 301: ch3co + o => ch2co + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[22];
  k_f = 20000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[4] += q;  // oh
  wdot[20] += q; // ch2co
  wdot[22] -= q; // ch3co
  // d()/d[o]
  dqdci = +k_f * sc[22];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[182] += dqdci; // dwdot[oh]/d[o]
  J[198] += dqdci; // dwdot[ch2co]/d[o]
  J[200] -= dqdci; // dwdot[ch3co]/d[o]
  // d()/d[ch3co]
  dqdci = +k_f * sc[2];
  J[1960] -= dqdci; // dwdot[o]/d[ch3co]
  J[1962] += dqdci; // dwdot[oh]/d[ch3co]
  J[1978] += dqdci; // dwdot[ch2co]/d[ch3co]
  J[1980] -= dqdci; // dwdot[ch3co]/d[ch3co]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7852] += dqdT; // dwdot[ch2co]/dT
  J[7854] -= dqdT; // dwdot[ch3co]/dT

  // reaction 302: ch2co + oh => ch3co + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[20];
  k_f = 5951000000000 * exp(-1.13 * logT - (60738.2515626297) * invT);
  dlnkfdT = -1.13 * invT + (60738.2515626297) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[4] -= q;  // oh
  wdot[20] -= q; // ch2co
  wdot[22] += q; // ch3co
  // d()/d[oh]
  dqdci = +k_f * sc[20];
  J[358] += dqdci; // dwdot[o]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[376] -= dqdci; // dwdot[ch2co]/d[oh]
  J[378] += dqdci; // dwdot[ch3co]/d[oh]
  // d()/d[ch2co]
  dqdci = +k_f * sc[4];
  J[1782] += dqdci; // dwdot[o]/d[ch2co]
  J[1784] -= dqdci; // dwdot[oh]/d[ch2co]
  J[1800] -= dqdci; // dwdot[ch2co]/d[ch2co]
  J[1802] += dqdci; // dwdot[ch3co]/d[ch2co]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7852] -= dqdT; // dwdot[ch2co]/dT
  J[7854] += dqdT; // dwdot[ch3co]/dT

  // reaction 303: ch3 + ch3co => ch2co + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[22];
  k_f = 50000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[20] += q; // ch2co
  wdot[22] -= q; // ch3co
  // d()/d[ch3]
  dqdci = +k_f * sc[22];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[821] += dqdci; // dwdot[ch2co]/d[ch3]
  J[823] -= dqdci; // dwdot[ch3co]/d[ch3]
  // d()/d[ch3co]
  dqdci = +k_f * sc[9];
  J[1967] -= dqdci; // dwdot[ch3]/d[ch3co]
  J[1968] += dqdci; // dwdot[ch4]/d[ch3co]
  J[1978] += dqdci; // dwdot[ch2co]/d[ch3co]
  J[1980] -= dqdci; // dwdot[ch3co]/d[ch3co]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7852] += dqdT; // dwdot[ch2co]/dT
  J[7854] -= dqdT; // dwdot[ch3co]/dT

  // reaction 304: ch2co + ch4 => ch3 + ch3co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[20];
  k_f = 819700000000 * exp(-0.67 * logT - (40171.7864311908) * invT);
  dlnkfdT = -0.67 * invT + (40171.7864311908) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[20] -= q; // ch2co
  wdot[22] += q; // ch3co
  // d()/d[ch4]
  dqdci = +k_f * sc[20];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[910] -= dqdci; // dwdot[ch2co]/d[ch4]
  J[912] += dqdci; // dwdot[ch3co]/d[ch4]
  // d()/d[ch2co]
  dqdci = +k_f * sc[10];
  J[1789] += dqdci; // dwdot[ch3]/d[ch2co]
  J[1790] -= dqdci; // dwdot[ch4]/d[ch2co]
  J[1800] -= dqdci; // dwdot[ch2co]/d[ch2co]
  J[1802] += dqdci; // dwdot[ch3co]/d[ch2co]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7852] -= dqdT; // dwdot[ch2co]/dT
  J[7854] += dqdT; // dwdot[ch3co]/dT

  // reaction 305: c2h4 + o => ch2cho + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[16];
  k_f = 3.39 * exp(1.88 * logT - (90.0757831790448) * invT);
  dlnkfdT = 1.88 * invT + (90.0757831790448) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[2] -= q;  // o
  wdot[16] -= q; // c2h4
  wdot[23] += q; // ch2cho
  // d()/d[o]
  dqdci = +k_f * sc[16];
  J[178] += dqdci; // dwdot[h]/d[o]
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[194] -= dqdci; // dwdot[c2h4]/d[o]
  J[201] += dqdci; // dwdot[ch2cho]/d[o]
  // d()/d[c2h4]
  dqdci = +k_f * sc[2];
  J[1424] += dqdci; // dwdot[h]/d[c2h4]
  J[1426] -= dqdci; // dwdot[o]/d[c2h4]
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1447] += dqdci; // dwdot[ch2cho]/d[c2h4]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7855] += dqdT; // dwdot[ch2cho]/dT

  // reaction 306: ch2cho + h => c2h4 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[23];
  k_f = 9.481 * exp(1.79 * logT - (8076.62748616575) * invT);
  dlnkfdT = 1.79 * invT + (8076.62748616575) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[2] += q;  // o
  wdot[16] += q; // c2h4
  wdot[23] -= q; // ch2cho
  // d()/d[h]
  dqdci = +k_f * sc[23];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[2] += dqdci;  // dwdot[o]/d[h]
  J[16] += dqdci; // dwdot[c2h4]/d[h]
  J[23] -= dqdci; // dwdot[ch2cho]/d[h]
  // d()/d[ch2cho]
  dqdci = +k_f * sc[0];
  J[2047] -= dqdci; // dwdot[h]/d[ch2cho]
  J[2049] += dqdci; // dwdot[o]/d[ch2cho]
  J[2063] += dqdci; // dwdot[c2h4]/d[ch2cho]
  J[2070] -= dqdci; // dwdot[ch2cho]/d[ch2cho]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7855] -= dqdT; // dwdot[ch2cho]/dT

  // reaction 307: c2h5 + o => ch3cho + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[17];
  k_f = 50000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[2] -= q;  // o
  wdot[17] -= q; // c2h5
  wdot[24] += q; // ch3cho
  // d()/d[o]
  dqdci = +k_f * sc[17];
  J[178] += dqdci; // dwdot[h]/d[o]
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[195] -= dqdci; // dwdot[c2h5]/d[o]
  J[202] += dqdci; // dwdot[ch3cho]/d[o]
  // d()/d[c2h5]
  dqdci = +k_f * sc[2];
  J[1513] += dqdci; // dwdot[h]/d[c2h5]
  J[1515] -= dqdci; // dwdot[o]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1537] += dqdci; // dwdot[ch3cho]/d[c2h5]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT

  // reaction 308: ch3cho + h => c2h5 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[24];
  k_f = 550500000 * exp(0.11 * logT - (37434.2877692131) * invT);
  dlnkfdT = 0.11 * invT + (37434.2877692131) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[2] += q;  // o
  wdot[17] += q; // c2h5
  wdot[24] -= q; // ch3cho
  // d()/d[h]
  dqdci = +k_f * sc[24];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[2] += dqdci;  // dwdot[o]/d[h]
  J[17] += dqdci; // dwdot[c2h5]/d[h]
  J[24] -= dqdci; // dwdot[ch3cho]/d[h]
  // d()/d[ch3cho]
  dqdci = +k_f * sc[0];
  J[2136] -= dqdci; // dwdot[h]/d[ch3cho]
  J[2138] += dqdci; // dwdot[o]/d[ch3cho]
  J[2153] += dqdci; // dwdot[c2h5]/d[ch3cho]
  J[2160] -= dqdci; // dwdot[ch3cho]/d[ch3cho]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7856] -= dqdT; // dwdot[ch3cho]/dT

  // reaction 309: c2h3 + c2h4 => c4h6 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[19];
  k_f = 500000 * exp(-(3673.48166037445) * invT);
  dlnkfdT = (3673.48166037445) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[16] -= q; // c2h4
  wdot[19] -= q; // c2h3
  wdot[27] += q; // c4h6
  // d()/d[c2h4]
  dqdci = +k_f * sc[19];
  J[1424] += dqdci; // dwdot[h]/d[c2h4]
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1443] -= dqdci; // dwdot[c2h3]/d[c2h4]
  J[1451] += dqdci; // dwdot[c4h6]/d[c2h4]
  // d()/d[c2h3]
  dqdci = +k_f * sc[16];
  J[1691] += dqdci; // dwdot[h]/d[c2h3]
  J[1707] -= dqdci; // dwdot[c2h4]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  J[1718] += dqdci; // dwdot[c4h6]/d[c2h3]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT
  J[7859] += dqdT; // dwdot[c4h6]/dT

  // reaction 310: c4h6 + h => c2h3 + c2h4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[27];
  k_f = 10000000 * exp(-(2365.11832928218) * invT);
  dlnkfdT = (2365.11832928218) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[16] += q; // c2h4
  wdot[19] += q; // c2h3
  wdot[27] -= q; // c4h6
  // d()/d[h]
  dqdci = +k_f * sc[27];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[16] += dqdci; // dwdot[c2h4]/d[h]
  J[19] += dqdci; // dwdot[c2h3]/d[h]
  J[27] -= dqdci; // dwdot[c4h6]/d[h]
  // d()/d[c4h6]
  dqdci = +k_f * sc[0];
  J[2403] -= dqdci; // dwdot[h]/d[c4h6]
  J[2419] += dqdci; // dwdot[c2h4]/d[c4h6]
  J[2422] += dqdci; // dwdot[c2h3]/d[c4h6]
  J[2430] -= dqdci; // dwdot[c4h6]/d[c4h6]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT
  J[7859] -= dqdT; // dwdot[c4h6]/dT

  // reaction 313: c2h5o + o2 => ch3cho + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[37];
  k_f = 42800 * exp(-(552.028682387778) * invT);
  dlnkfdT = (552.028682387778) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[24] += q; // ch3cho
  wdot[37] -= q; // c2h5o
  // d()/d[o2]
  dqdci = +k_f * sc[37];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[291] += dqdci; // dwdot[ch3cho]/d[o2]
  J[304] -= dqdci; // dwdot[c2h5o]/d[o2]
  // d()/d[c2h5o]
  dqdci = +k_f * sc[3];
  J[3296] -= dqdci; // dwdot[o2]/d[c2h5o]
  J[3304] += dqdci; // dwdot[ho2]/d[c2h5o]
  J[3317] += dqdci; // dwdot[ch3cho]/d[c2h5o]
  J[3330] -= dqdci; // dwdot[c2h5o]/d[c2h5o]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT
  J[7869] -= dqdT; // dwdot[c2h5o]/dT

  // reaction 314: ch3cho + ho2 => c2h5o + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[24];
  k_f = 387.2 * exp(0.44 * logT - (16042.5473058545) * invT);
  dlnkfdT = 0.44 * invT + (16042.5473058545) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[24] -= q; // ch3cho
  wdot[37] += q; // c2h5o
  // d()/d[ho2]
  dqdci = +k_f * sc[24];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1003] -= dqdci; // dwdot[ch3cho]/d[ho2]
  J[1016] += dqdci; // dwdot[c2h5o]/d[ho2]
  // d()/d[ch3cho]
  dqdci = +k_f * sc[11];
  J[2139] += dqdci; // dwdot[o2]/d[ch3cho]
  J[2147] -= dqdci; // dwdot[ho2]/d[ch3cho]
  J[2160] -= dqdci; // dwdot[ch3cho]/d[ch3cho]
  J[2173] += dqdci; // dwdot[c2h5o]/d[ch3cho]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7856] -= dqdT; // dwdot[ch3cho]/dT
  J[7869] += dqdT; // dwdot[c2h5o]/dT

  // reaction 315: h2o2 + o2 => 2 ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[12];
  k_f = 183900000 * exp(-0.66 * logT - (19897.1869659186) * invT);
  dlnkfdT = -0.66 * invT + (19897.1869659186) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;      // o2
  wdot[11] += 2 * q; // ho2
  wdot[12] -= q;     // h2o2
  // d()/d[o2]
  dqdci = +k_f * sc[12];
  J[270] -= dqdci;     // dwdot[o2]/d[o2]
  J[278] += 2 * dqdci; // dwdot[ho2]/d[o2]
  J[279] -= dqdci;     // dwdot[h2o2]/d[o2]
  // d()/d[h2o2]
  dqdci = +k_f * sc[3];
  J[1071] -= dqdci;     // dwdot[o2]/d[h2o2]
  J[1079] += 2 * dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci;     // dwdot[h2o2]/d[h2o2]
  // d()/dT
  J[7835] -= dqdT;     // dwdot[o2]/dT
  J[7843] += 2 * dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT;     // dwdot[h2o2]/dT

  // reaction 316: 2 ho2 => h2o2 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[11] * sc[11]);
  k_f = 130000 * exp(-(-819.739948595888) * invT);
  dlnkfdT = (-819.739948595888) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;      // o2
  wdot[11] -= 2 * q; // ho2
  wdot[12] += q;     // h2o2
  // d()/d[ho2]
  dqdci = +k_f * 2.000000 * sc[11];
  J[982] += dqdci;      // dwdot[o2]/d[ho2]
  J[990] += -2 * dqdci; // dwdot[ho2]/d[ho2]
  J[991] += dqdci;      // dwdot[h2o2]/d[ho2]
  // d()/dT
  J[7835] += dqdT;      // dwdot[o2]/dT
  J[7843] += -2 * dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT;      // dwdot[h2o2]/dT

  // reaction 317: c2h3 + o2 => ch2cho + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[19];
  k_f = 350000000 * exp(-0.61 * logT - (2646.91966213283) * invT);
  dlnkfdT = -0.61 * invT + (2646.91966213283) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[3] -= q;  // o2
  wdot[19] -= q; // c2h3
  wdot[23] += q; // ch2cho
  // d()/d[o2]
  dqdci = +k_f * sc[19];
  J[269] += dqdci; // dwdot[o]/d[o2]
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[286] -= dqdci; // dwdot[c2h3]/d[o2]
  J[290] += dqdci; // dwdot[ch2cho]/d[o2]
  // d()/d[c2h3]
  dqdci = +k_f * sc[3];
  J[1693] += dqdci; // dwdot[o]/d[c2h3]
  J[1694] -= dqdci; // dwdot[o2]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  J[1714] += dqdci; // dwdot[ch2cho]/d[c2h3]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT
  J[7855] += dqdT; // dwdot[ch2cho]/dT

  // reaction 318: ch2cho + o => c2h3 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[23];
  k_f = 2589000 * exp(0.12 * logT - (3250.27644443268) * invT);
  dlnkfdT = 0.12 * invT + (3250.27644443268) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[3] += q;  // o2
  wdot[19] += q; // c2h3
  wdot[23] -= q; // ch2cho
  // d()/d[o]
  dqdci = +k_f * sc[23];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[181] += dqdci; // dwdot[o2]/d[o]
  J[197] += dqdci; // dwdot[c2h3]/d[o]
  J[201] -= dqdci; // dwdot[ch2cho]/d[o]
  // d()/d[ch2cho]
  dqdci = +k_f * sc[2];
  J[2049] -= dqdci; // dwdot[o]/d[ch2cho]
  J[2050] += dqdci; // dwdot[o2]/d[ch2cho]
  J[2066] += dqdci; // dwdot[c2h3]/d[ch2cho]
  J[2070] -= dqdci; // dwdot[ch2cho]/d[ch2cho]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT
  J[7855] -= dqdT; // dwdot[ch2cho]/dT

  // reaction 321: ch3o2h => ch3o + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[39];
  k_f = 631000000000000 * exp(-(21286.0649635396) * invT);
  dlnkfdT = (21286.0649635396) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[14] += q; // ch3o
  wdot[39] -= q; // ch3o2h
  // d()/d[ch3o2h]
  dqdci = +k_f;
  J[3475] += dqdci; // dwdot[oh]/d[ch3o2h]
  J[3485] += dqdci; // dwdot[ch3o]/d[ch3o2h]
  J[3510] -= dqdci; // dwdot[ch3o2h]/d[ch3o2h]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7846] += dqdT; // dwdot[ch3o]/dT
  J[7871] -= dqdT; // dwdot[ch3o2h]/dT

  // reaction 322: ch3o + oh => ch3o2h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[14];
  k_f = 116600 * exp(0.6 * logT - (-891.196715140159) * invT);
  dlnkfdT = 0.6 * invT + (-891.196715140159) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[14] -= q; // ch3o
  wdot[39] += q; // ch3o2h
  // d()/d[oh]
  dqdci = +k_f * sc[14];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[370] -= dqdci; // dwdot[ch3o]/d[oh]
  J[395] += dqdci; // dwdot[ch3o2h]/d[oh]
  // d()/d[ch3o]
  dqdci = +k_f * sc[4];
  J[1250] -= dqdci; // dwdot[oh]/d[ch3o]
  J[1260] -= dqdci; // dwdot[ch3o]/d[ch3o]
  J[1285] += dqdci; // dwdot[ch3o2h]/d[ch3o]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7846] -= dqdT; // dwdot[ch3o]/dT
  J[7871] += dqdT; // dwdot[ch3o2h]/dT

  // reaction 323: c3h2 + o2 => co + h + hcco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[49];
  k_f = 50000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[3] -= q;  // o2
  wdot[6] += q;  // co
  wdot[21] += q; // hcco
  wdot[49] -= q; // c3h2
  // d()/d[o2]
  dqdci = +k_f * sc[49];
  J[267] += dqdci; // dwdot[h]/d[o2]
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[273] += dqdci; // dwdot[co]/d[o2]
  J[288] += dqdci; // dwdot[hcco]/d[o2]
  J[316] -= dqdci; // dwdot[c3h2]/d[o2]
  // d()/d[c3h2]
  dqdci = +k_f * sc[3];
  J[4361] += dqdci; // dwdot[h]/d[c3h2]
  J[4364] -= dqdci; // dwdot[o2]/d[c3h2]
  J[4367] += dqdci; // dwdot[co]/d[c3h2]
  J[4382] += dqdci; // dwdot[hcco]/d[c3h2]
  J[4410] -= dqdci; // dwdot[c3h2]/d[c3h2]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7853] += dqdT; // dwdot[hcco]/dT
  J[7881] -= dqdT; // dwdot[c3h2]/dT

  // reaction 324: ch2o + ch3o2 => ch3o2h + hco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[38];
  k_f = 1990000 * exp(-(5867.50632328303) * invT);
  dlnkfdT = (5867.50632328303) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[7] += q;  // hco
  wdot[13] -= q; // ch2o
  wdot[38] -= q; // ch3o2
  wdot[39] += q; // ch3o2h
  // d()/d[ch2o]
  dqdci = +k_f * sc[38];
  J[1164] += dqdci; // dwdot[hco]/d[ch2o]
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  J[1195] -= dqdci; // dwdot[ch3o2]/d[ch2o]
  J[1196] += dqdci; // dwdot[ch3o2h]/d[ch2o]
  // d()/d[ch3o2]
  dqdci = +k_f * sc[13];
  J[3389] += dqdci; // dwdot[hco]/d[ch3o2]
  J[3395] -= dqdci; // dwdot[ch2o]/d[ch3o2]
  J[3420] -= dqdci; // dwdot[ch3o2]/d[ch3o2]
  J[3421] += dqdci; // dwdot[ch3o2h]/d[ch3o2]
  // d()/dT
  J[7839] += dqdT; // dwdot[hco]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT
  J[7870] -= dqdT; // dwdot[ch3o2]/dT
  J[7871] += dqdT; // dwdot[ch3o2h]/dT

  // reaction 325: ch3o2h + hco => ch2o + ch3o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[39];
  k_f = 8504000 * exp(-0.5 * logT - (3527.04561062528) * invT);
  dlnkfdT = -0.5 * invT + (3527.04561062528) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[7] -= q;  // hco
  wdot[13] += q; // ch2o
  wdot[38] += q; // ch3o2
  wdot[39] -= q; // ch3o2h
  // d()/d[hco]
  dqdci = +k_f * sc[39];
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  J[636] += dqdci; // dwdot[ch2o]/d[hco]
  J[661] += dqdci; // dwdot[ch3o2]/d[hco]
  J[662] -= dqdci; // dwdot[ch3o2h]/d[hco]
  // d()/d[ch3o2h]
  dqdci = +k_f * sc[7];
  J[3478] -= dqdci; // dwdot[hco]/d[ch3o2h]
  J[3484] += dqdci; // dwdot[ch2o]/d[ch3o2h]
  J[3509] += dqdci; // dwdot[ch3o2]/d[ch3o2h]
  J[3510] -= dqdci; // dwdot[ch3o2h]/d[ch3o2h]
  // d()/dT
  J[7839] -= dqdT; // dwdot[hco]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT
  J[7870] += dqdT; // dwdot[ch3o2]/dT
  J[7871] -= dqdT; // dwdot[ch3o2h]/dT

  // reaction 326: c2h4 + ch3o2 => c2h3 + ch3o2h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[38];
  k_f = 2230000 * exp(-(8650.29448518313) * invT);
  dlnkfdT = (8650.29448518313) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] -= q; // c2h4
  wdot[19] += q; // c2h3
  wdot[38] -= q; // ch3o2
  wdot[39] += q; // ch3o2h
  // d()/d[c2h4]
  dqdci = +k_f * sc[38];
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1443] += dqdci; // dwdot[c2h3]/d[c2h4]
  J[1462] -= dqdci; // dwdot[ch3o2]/d[c2h4]
  J[1463] += dqdci; // dwdot[ch3o2h]/d[c2h4]
  // d()/d[ch3o2]
  dqdci = +k_f * sc[16];
  J[3398] -= dqdci; // dwdot[c2h4]/d[ch3o2]
  J[3401] += dqdci; // dwdot[c2h3]/d[ch3o2]
  J[3420] -= dqdci; // dwdot[ch3o2]/d[ch3o2]
  J[3421] += dqdci; // dwdot[ch3o2h]/d[ch3o2]
  // d()/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT
  J[7870] -= dqdT; // dwdot[ch3o2]/dT
  J[7871] += dqdT; // dwdot[ch3o2h]/dT

  // reaction 327: c2h3 + ch3o2h => c2h4 + ch3o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[39];
  k_f = 8112000000 * exp(-1.33 * logT - (-749.289615383228) * invT);
  dlnkfdT = -1.33 * invT + (-749.289615383228) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] += q; // c2h4
  wdot[19] -= q; // c2h3
  wdot[38] += q; // ch3o2
  wdot[39] -= q; // ch3o2h
  // d()/d[c2h3]
  dqdci = +k_f * sc[39];
  J[1707] += dqdci; // dwdot[c2h4]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  J[1729] += dqdci; // dwdot[ch3o2]/d[c2h3]
  J[1730] -= dqdci; // dwdot[ch3o2h]/d[c2h3]
  // d()/d[ch3o2h]
  dqdci = +k_f * sc[19];
  J[3487] += dqdci; // dwdot[c2h4]/d[ch3o2h]
  J[3490] -= dqdci; // dwdot[c2h3]/d[ch3o2h]
  J[3509] += dqdci; // dwdot[ch3o2]/d[ch3o2h]
  J[3510] -= dqdci; // dwdot[ch3o2h]/d[ch3o2h]
  // d()/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT
  J[7870] += dqdT; // dwdot[ch3o2]/dT
  J[7871] -= dqdT; // dwdot[ch3o2h]/dT

  // reaction 328: ch3o2 + ch4 => ch3 + ch3o2h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[38];
  k_f = 181000 * exp(-(9299.44398407122) * invT);
  dlnkfdT = (9299.44398407122) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[38] -= q; // ch3o2
  wdot[39] += q; // ch3o2h
  // d()/d[ch4]
  dqdci = +k_f * sc[38];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[928] -= dqdci; // dwdot[ch3o2]/d[ch4]
  J[929] += dqdci; // dwdot[ch3o2h]/d[ch4]
  // d()/d[ch3o2]
  dqdci = +k_f * sc[10];
  J[3391] += dqdci; // dwdot[ch3]/d[ch3o2]
  J[3392] -= dqdci; // dwdot[ch4]/d[ch3o2]
  J[3420] -= dqdci; // dwdot[ch3o2]/d[ch3o2]
  J[3421] += dqdci; // dwdot[ch3o2h]/d[ch3o2]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7870] -= dqdT; // dwdot[ch3o2]/dT
  J[7871] += dqdT; // dwdot[ch3o2h]/dT

  // reaction 329: ch3 + ch3o2h => ch3o2 + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[39];
  k_f = 370800 * exp(-0.5 * logT - (-667.768515522863) * invT);
  dlnkfdT = -0.5 * invT + (-667.768515522863) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[38] += q; // ch3o2
  wdot[39] -= q; // ch3o2h
  // d()/d[ch3]
  dqdci = +k_f * sc[39];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[839] += dqdci; // dwdot[ch3o2]/d[ch3]
  J[840] -= dqdci; // dwdot[ch3o2h]/d[ch3]
  // d()/d[ch3o2h]
  dqdci = +k_f * sc[9];
  J[3480] -= dqdci; // dwdot[ch3]/d[ch3o2h]
  J[3481] += dqdci; // dwdot[ch4]/d[ch3o2h]
  J[3509] += dqdci; // dwdot[ch3o2]/d[ch3o2h]
  J[3510] -= dqdci; // dwdot[ch3o2h]/d[ch3o2h]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7870] += dqdT; // dwdot[ch3o2]/dT
  J[7871] -= dqdT; // dwdot[ch3o2h]/dT

  // reaction 330: c2h5 + ho2 => c2h5o + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[17];
  k_f = 32000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[11] -= q; // ho2
  wdot[17] -= q; // c2h5
  wdot[37] += q; // c2h5o
  // d()/d[ho2]
  dqdci = +k_f * sc[17];
  J[983] += dqdci;  // dwdot[oh]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[996] -= dqdci;  // dwdot[c2h5]/d[ho2]
  J[1016] += dqdci; // dwdot[c2h5o]/d[ho2]
  // d()/d[c2h5]
  dqdci = +k_f * sc[11];
  J[1517] += dqdci; // dwdot[oh]/d[c2h5]
  J[1524] -= dqdci; // dwdot[ho2]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1550] += dqdci; // dwdot[c2h5o]/d[c2h5]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7869] += dqdT; // dwdot[c2h5o]/dT

  // reaction 331: c2h5o + oh => c2h5 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[37];
  k_f = 3075000000 * exp(-0.32 * logT - (13833.4261429717) * invT);
  dlnkfdT = -0.32 * invT + (13833.4261429717) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[11] += q; // ho2
  wdot[17] += q; // c2h5
  wdot[37] -= q; // c2h5o
  // d()/d[oh]
  dqdci = +k_f * sc[37];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[367] += dqdci; // dwdot[ho2]/d[oh]
  J[373] += dqdci; // dwdot[c2h5]/d[oh]
  J[393] -= dqdci; // dwdot[c2h5o]/d[oh]
  // d()/d[c2h5o]
  dqdci = +k_f * sc[4];
  J[3297] -= dqdci; // dwdot[oh]/d[c2h5o]
  J[3304] += dqdci; // dwdot[ho2]/d[c2h5o]
  J[3310] += dqdci; // dwdot[c2h5]/d[c2h5o]
  J[3330] -= dqdci; // dwdot[c2h5o]/d[c2h5o]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7869] -= dqdT; // dwdot[c2h5o]/dT

  // reaction 332: ch3 + ch3o2 => 2 ch3o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[38];
  k_f = 7000000 * exp(-(-503.21666580472) * invT);
  dlnkfdT = (-503.21666580472) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;      // ch3
  wdot[14] += 2 * q; // ch3o
  wdot[38] -= q;     // ch3o2
  // d()/d[ch3]
  dqdci = +k_f * sc[38];
  J[810] -= dqdci;     // dwdot[ch3]/d[ch3]
  J[815] += 2 * dqdci; // dwdot[ch3o]/d[ch3]
  J[839] -= dqdci;     // dwdot[ch3o2]/d[ch3]
  // d()/d[ch3o2]
  dqdci = +k_f * sc[9];
  J[3391] -= dqdci;     // dwdot[ch3]/d[ch3o2]
  J[3396] += 2 * dqdci; // dwdot[ch3o]/d[ch3o2]
  J[3420] -= dqdci;     // dwdot[ch3o2]/d[ch3o2]
  // d()/dT
  J[7841] -= dqdT;     // dwdot[ch3]/dT
  J[7846] += 2 * dqdT; // dwdot[ch3o]/dT
  J[7870] -= dqdT;     // dwdot[ch3o2]/dT

  // reaction 333: 2 ch3o => ch3 + ch3o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[14] * sc[14]);
  k_f = 29710000000 * exp(-0.93 * logT - (14246.0638089316) * invT);
  dlnkfdT = -0.93 * invT + (14246.0638089316) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;      // ch3
  wdot[14] -= 2 * q; // ch3o
  wdot[38] += q;     // ch3o2
  // d()/d[ch3o]
  dqdci = +k_f * 2.000000 * sc[14];
  J[1255] += dqdci;      // dwdot[ch3]/d[ch3o]
  J[1260] += -2 * dqdci; // dwdot[ch3o]/d[ch3o]
  J[1284] += dqdci;      // dwdot[ch3o2]/d[ch3o]
  // d()/dT
  J[7841] += dqdT;      // dwdot[ch3]/dT
  J[7846] += -2 * dqdT; // dwdot[ch3o]/dT
  J[7870] += dqdT;      // dwdot[ch3o2]/dT

  // reaction 334: c2h5 + ch3o2 => c2h5o + ch3o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[38];
  k_f = 7000000 * exp(-(-503.21666580472) * invT);
  dlnkfdT = (-503.21666580472) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[14] += q; // ch3o
  wdot[17] -= q; // c2h5
  wdot[37] += q; // c2h5o
  wdot[38] -= q; // ch3o2
  // d()/d[c2h5]
  dqdci = +k_f * sc[38];
  J[1527] += dqdci; // dwdot[ch3o]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1550] += dqdci; // dwdot[c2h5o]/d[c2h5]
  J[1551] -= dqdci; // dwdot[ch3o2]/d[c2h5]
  // d()/d[ch3o2]
  dqdci = +k_f * sc[17];
  J[3396] += dqdci; // dwdot[ch3o]/d[ch3o2]
  J[3399] -= dqdci; // dwdot[c2h5]/d[ch3o2]
  J[3419] += dqdci; // dwdot[c2h5o]/d[ch3o2]
  J[3420] -= dqdci; // dwdot[ch3o2]/d[ch3o2]
  // d()/dT
  J[7846] += dqdT; // dwdot[ch3o]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7869] += dqdT; // dwdot[c2h5o]/dT
  J[7870] -= dqdT; // dwdot[ch3o2]/dT

  // reaction 335: c2h5o + ch3o => c2h5 + ch3o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[37];
  k_f = 65690000000 * exp(-0.9 * logT - (15730.5529730555) * invT);
  dlnkfdT = -0.9 * invT + (15730.5529730555) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[14] -= q; // ch3o
  wdot[17] += q; // c2h5
  wdot[37] -= q; // c2h5o
  wdot[38] += q; // ch3o2
  // d()/d[ch3o]
  dqdci = +k_f * sc[37];
  J[1260] -= dqdci; // dwdot[ch3o]/d[ch3o]
  J[1263] += dqdci; // dwdot[c2h5]/d[ch3o]
  J[1283] -= dqdci; // dwdot[c2h5o]/d[ch3o]
  J[1284] += dqdci; // dwdot[ch3o2]/d[ch3o]
  // d()/d[c2h5o]
  dqdci = +k_f * sc[14];
  J[3307] -= dqdci; // dwdot[ch3o]/d[c2h5o]
  J[3310] += dqdci; // dwdot[c2h5]/d[c2h5o]
  J[3330] -= dqdci; // dwdot[c2h5o]/d[c2h5o]
  J[3331] += dqdci; // dwdot[ch3o2]/d[c2h5o]
  // d()/dT
  J[7846] -= dqdT; // dwdot[ch3o]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7869] -= dqdT; // dwdot[c2h5o]/dT
  J[7870] += dqdT; // dwdot[ch3o2]/dT

  // reaction 336: ch3o2 + ho2 => ch3o2h + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[38];
  k_f = 17500 * exp(-(-1648.03458051046) * invT);
  dlnkfdT = (-1648.03458051046) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[38] -= q; // ch3o2
  wdot[39] += q; // ch3o2h
  // d()/d[ho2]
  dqdci = +k_f * sc[38];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1017] -= dqdci; // dwdot[ch3o2]/d[ho2]
  J[1018] += dqdci; // dwdot[ch3o2h]/d[ho2]
  // d()/d[ch3o2]
  dqdci = +k_f * sc[11];
  J[3385] += dqdci; // dwdot[o2]/d[ch3o2]
  J[3393] -= dqdci; // dwdot[ho2]/d[ch3o2]
  J[3420] -= dqdci; // dwdot[ch3o2]/d[ch3o2]
  J[3421] += dqdci; // dwdot[ch3o2h]/d[ch3o2]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7870] -= dqdT; // dwdot[ch3o2]/dT
  J[7871] += dqdT; // dwdot[ch3o2h]/dT

  // reaction 337: ch3o2h + o2 => ch3o2 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[39];
  k_f = 51560000 * exp(-0.83 * logT - (17552.1973032686) * invT);
  dlnkfdT = -0.83 * invT + (17552.1973032686) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[38] += q; // ch3o2
  wdot[39] -= q; // ch3o2h
  // d()/d[o2]
  dqdci = +k_f * sc[39];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[305] += dqdci; // dwdot[ch3o2]/d[o2]
  J[306] -= dqdci; // dwdot[ch3o2h]/d[o2]
  // d()/d[ch3o2h]
  dqdci = +k_f * sc[3];
  J[3474] -= dqdci; // dwdot[o2]/d[ch3o2h]
  J[3482] += dqdci; // dwdot[ho2]/d[ch3o2h]
  J[3509] += dqdci; // dwdot[ch3o2]/d[ch3o2h]
  J[3510] -= dqdci; // dwdot[ch3o2h]/d[ch3o2h]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7870] += dqdT; // dwdot[ch3o2]/dT
  J[7871] -= dqdT; // dwdot[ch3o2h]/dT

  // reaction 338: h2o2 + oh => h2o + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[12];
  k_f = 580000000 * exp(-(4810.75132509312) * invT);
  dlnkfdT = (4810.75132509312) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[11] += q; // ho2
  wdot[12] -= q; // h2o2
  // d()/d[oh]
  dqdci = +k_f * sc[12];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[367] += dqdci; // dwdot[ho2]/d[oh]
  J[368] -= dqdci; // dwdot[h2o2]/d[oh]
  // d()/d[h2o2]
  dqdci = +k_f * sc[4];
  J[1072] -= dqdci; // dwdot[oh]/d[h2o2]
  J[1073] += dqdci; // dwdot[h2o]/d[h2o2]
  J[1079] += dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci; // dwdot[h2o2]/d[h2o2]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT; // dwdot[h2o2]/dT

  // reaction 339: h2o + ho2 => h2o2 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[11];
  k_f = 97710000 * exp(0.33 * logT - (20641.9476313096) * invT);
  dlnkfdT = 0.33 * invT + (20641.9476313096) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  // d()/d[h2o]
  dqdci = +k_f * sc[11];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[456] -= dqdci; // dwdot[ho2]/d[h2o]
  J[457] += dqdci; // dwdot[h2o2]/d[h2o]
  // d()/d[ho2]
  dqdci = +k_f * sc[5];
  J[983] += dqdci; // dwdot[oh]/d[ho2]
  J[984] -= dqdci; // dwdot[h2o]/d[ho2]
  J[990] -= dqdci; // dwdot[ho2]/d[ho2]
  J[991] += dqdci; // dwdot[h2o2]/d[ho2]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT

  // reaction 340: 2 ch3o2 => 2 ch3o + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[38] * sc[38]);
  k_f = 14000000000 * exp(-1.61 * logT - (935.982998396779) * invT);
  dlnkfdT = -1.61 * invT + (935.982998396779) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;      // o2
  wdot[14] += 2 * q; // ch3o
  wdot[38] -= 2 * q; // ch3o2
  // d()/d[ch3o2]
  dqdci = +k_f * 2.000000 * sc[38];
  J[3385] += dqdci;      // dwdot[o2]/d[ch3o2]
  J[3396] += 2 * dqdci;  // dwdot[ch3o]/d[ch3o2]
  J[3420] += -2 * dqdci; // dwdot[ch3o2]/d[ch3o2]
  // d()/dT
  J[7835] += dqdT;      // dwdot[o2]/dT
  J[7846] += 2 * dqdT;  // dwdot[ch3o]/dT
  J[7870] += -2 * dqdT; // dwdot[ch3o2]/dT

  // reaction 341: c2h6 + ch3o2 => c2h5 + ch3o2h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[38];
  k_f = 13200000 * exp(-(10300.8451490226) * invT);
  dlnkfdT = (10300.8451490226) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[15] -= q; // c2h6
  wdot[17] += q; // c2h5
  wdot[38] -= q; // ch3o2
  wdot[39] += q; // ch3o2h
  // d()/d[c2h6]
  dqdci = +k_f * sc[38];
  J[1350] -= dqdci; // dwdot[c2h6]/d[c2h6]
  J[1352] += dqdci; // dwdot[c2h5]/d[c2h6]
  J[1373] -= dqdci; // dwdot[ch3o2]/d[c2h6]
  J[1374] += dqdci; // dwdot[ch3o2h]/d[c2h6]
  // d()/d[ch3o2]
  dqdci = +k_f * sc[15];
  J[3397] -= dqdci; // dwdot[c2h6]/d[ch3o2]
  J[3399] += dqdci; // dwdot[c2h5]/d[ch3o2]
  J[3420] -= dqdci; // dwdot[ch3o2]/d[ch3o2]
  J[3421] += dqdci; // dwdot[ch3o2h]/d[ch3o2]
  // d()/dT
  J[7847] -= dqdT; // dwdot[c2h6]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7870] -= dqdT; // dwdot[ch3o2]/dT
  J[7871] += dqdT; // dwdot[ch3o2h]/dT

  // reaction 342: c2h5 + ch3o2h => c2h6 + ch3o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[39];
  k_f = 172800 * exp(0.06 * logT - (2431.54292916841) * invT);
  dlnkfdT = 0.06 * invT + (2431.54292916841) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[15] += q; // c2h6
  wdot[17] -= q; // c2h5
  wdot[38] += q; // ch3o2
  wdot[39] -= q; // ch3o2h
  // d()/d[c2h5]
  dqdci = +k_f * sc[39];
  J[1528] += dqdci; // dwdot[c2h6]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1551] += dqdci; // dwdot[ch3o2]/d[c2h5]
  J[1552] -= dqdci; // dwdot[ch3o2h]/d[c2h5]
  // d()/d[ch3o2h]
  dqdci = +k_f * sc[17];
  J[3486] += dqdci; // dwdot[c2h6]/d[ch3o2h]
  J[3488] -= dqdci; // dwdot[c2h5]/d[ch3o2h]
  J[3509] += dqdci; // dwdot[ch3o2]/d[ch3o2h]
  J[3510] -= dqdci; // dwdot[ch3o2h]/d[ch3o2h]
  // d()/dT
  J[7847] += dqdT; // dwdot[c2h6]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7870] += dqdT; // dwdot[ch3o2]/dT
  J[7871] -= dqdT; // dwdot[ch3o2h]/dT

  // reaction 345: ch3cho + ch3o2 => ch3co + ch3o2h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[24] * sc[38];
  k_f = 3010000 * exp(-(5998.34265639226) * invT);
  dlnkfdT = (5998.34265639226) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[22] += q; // ch3co
  wdot[24] -= q; // ch3cho
  wdot[38] -= q; // ch3o2
  wdot[39] += q; // ch3o2h
  // d()/d[ch3cho]
  dqdci = +k_f * sc[38];
  J[2158] += dqdci; // dwdot[ch3co]/d[ch3cho]
  J[2160] -= dqdci; // dwdot[ch3cho]/d[ch3cho]
  J[2174] -= dqdci; // dwdot[ch3o2]/d[ch3cho]
  J[2175] += dqdci; // dwdot[ch3o2h]/d[ch3cho]
  // d()/d[ch3o2]
  dqdci = +k_f * sc[24];
  J[3404] += dqdci; // dwdot[ch3co]/d[ch3o2]
  J[3406] -= dqdci; // dwdot[ch3cho]/d[ch3o2]
  J[3420] -= dqdci; // dwdot[ch3o2]/d[ch3o2]
  J[3421] += dqdci; // dwdot[ch3o2h]/d[ch3o2]
  // d()/dT
  J[7854] += dqdT; // dwdot[ch3co]/dT
  J[7856] -= dqdT; // dwdot[ch3cho]/dT
  J[7870] -= dqdT; // dwdot[ch3o2]/dT
  J[7871] += dqdT; // dwdot[ch3o2h]/dT

  // reaction 346: ch3co + ch3o2h => ch3cho + ch3o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[22] * sc[39];
  k_f = 25190000 * exp(-0.51 * logT - (4524.42104225023) * invT);
  dlnkfdT = -0.51 * invT + (4524.42104225023) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[22] -= q; // ch3co
  wdot[24] += q; // ch3cho
  wdot[38] += q; // ch3o2
  wdot[39] -= q; // ch3o2h
  // d()/d[ch3co]
  dqdci = +k_f * sc[39];
  J[1980] -= dqdci; // dwdot[ch3co]/d[ch3co]
  J[1982] += dqdci; // dwdot[ch3cho]/d[ch3co]
  J[1996] += dqdci; // dwdot[ch3o2]/d[ch3co]
  J[1997] -= dqdci; // dwdot[ch3o2h]/d[ch3co]
  // d()/d[ch3o2h]
  dqdci = +k_f * sc[22];
  J[3493] -= dqdci; // dwdot[ch3co]/d[ch3o2h]
  J[3495] += dqdci; // dwdot[ch3cho]/d[ch3o2h]
  J[3509] += dqdci; // dwdot[ch3o2]/d[ch3o2h]
  J[3510] -= dqdci; // dwdot[ch3o2h]/d[ch3o2h]
  // d()/dT
  J[7854] -= dqdT; // dwdot[ch3co]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT
  J[7870] += dqdT; // dwdot[ch3o2]/dT
  J[7871] -= dqdT; // dwdot[ch3o2h]/dT

  // reaction 347: c2h3co => c2h3 + co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[40];
  k_f = 304300000000000 * exp(-0.46 * logT - (15353.140473702) * invT);
  dlnkfdT = -0.46 * invT + (15353.140473702) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] += q;  // co
  wdot[19] += q; // c2h3
  wdot[40] -= q; // c2h3co
  // d()/d[c2h3co]
  dqdci = +k_f;
  J[3566] += dqdci; // dwdot[co]/d[c2h3co]
  J[3579] += dqdci; // dwdot[c2h3]/d[c2h3co]
  J[3600] -= dqdci; // dwdot[c2h3co]/d[c2h3co]
  // d()/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT
  J[7872] -= dqdT; // dwdot[c2h3co]/dT

  // reaction 348: c2h3 + co => c2h3co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[19];
  k_f = 151000 * exp(-(2420.4721625207) * invT);
  dlnkfdT = (2420.4721625207) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // co
  wdot[19] -= q; // c2h3
  wdot[40] += q; // c2h3co
  // d()/d[co]
  dqdci = +k_f * sc[19];
  J[540] -= dqdci; // dwdot[co]/d[co]
  J[553] -= dqdci; // dwdot[c2h3]/d[co]
  J[574] += dqdci; // dwdot[c2h3co]/d[co]
  // d()/d[c2h3]
  dqdci = +k_f * sc[6];
  J[1697] -= dqdci; // dwdot[co]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  J[1731] += dqdci; // dwdot[c2h3co]/d[c2h3]
  // d()/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT
  J[7872] += dqdT; // dwdot[c2h3co]/dT

  // reaction 349: c2h3cho + oh => c2h3co + h2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[41];
  k_f = 9.24 * exp(1.5 * logT - (-484.09443250414) * invT);
  dlnkfdT = 1.5 * invT + (-484.09443250414) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[40] += q; // c2h3co
  wdot[41] -= q; // c2h3cho
  // d()/d[oh]
  dqdci = +k_f * sc[41];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[396] += dqdci; // dwdot[c2h3co]/d[oh]
  J[397] -= dqdci; // dwdot[c2h3cho]/d[oh]
  // d()/d[c2h3cho]
  dqdci = +k_f * sc[4];
  J[3653] -= dqdci; // dwdot[oh]/d[c2h3cho]
  J[3654] += dqdci; // dwdot[h2o]/d[c2h3cho]
  J[3689] += dqdci; // dwdot[c2h3co]/d[c2h3cho]
  J[3690] -= dqdci; // dwdot[c2h3cho]/d[c2h3cho]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7872] += dqdT; // dwdot[c2h3co]/dT
  J[7873] -= dqdT; // dwdot[c2h3cho]/dT

  // reaction 350: c2h3co + h2o => c2h3cho + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[40];
  k_f = 21.47 * exp(1.48 * logT - (17869.2238027256) * invT);
  dlnkfdT = 1.48 * invT + (17869.2238027256) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[40] -= q; // c2h3co
  wdot[41] += q; // c2h3cho
  // d()/d[h2o]
  dqdci = +k_f * sc[40];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[485] -= dqdci; // dwdot[c2h3co]/d[h2o]
  J[486] += dqdci; // dwdot[c2h3cho]/d[h2o]
  // d()/d[c2h3co]
  dqdci = +k_f * sc[5];
  J[3564] += dqdci; // dwdot[oh]/d[c2h3co]
  J[3565] -= dqdci; // dwdot[h2o]/d[c2h3co]
  J[3600] -= dqdci; // dwdot[c2h3co]/d[c2h3co]
  J[3601] += dqdci; // dwdot[c2h3cho]/d[c2h3co]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7872] -= dqdT; // dwdot[c2h3co]/dT
  J[7873] += dqdT; // dwdot[c2h3cho]/dT

  // reaction 351: c2h3cho + h => c2h3co + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[41];
  k_f = 13400000 * exp(-(1660.61499715557) * invT);
  dlnkfdT = (1660.61499715557) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[40] += q; // c2h3co
  wdot[41] -= q; // c2h3cho
  // d()/d[h]
  dqdci = +k_f * sc[41];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[40] += dqdci; // dwdot[c2h3co]/d[h]
  J[41] -= dqdci; // dwdot[c2h3cho]/d[h]
  // d()/d[c2h3cho]
  dqdci = +k_f * sc[0];
  J[3649] -= dqdci; // dwdot[h]/d[c2h3cho]
  J[3650] += dqdci; // dwdot[h2]/d[c2h3cho]
  J[3689] += dqdci; // dwdot[c2h3co]/d[c2h3cho]
  J[3690] -= dqdci; // dwdot[c2h3cho]/d[c2h3cho]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7872] += dqdT; // dwdot[c2h3co]/dT
  J[7873] -= dqdT; // dwdot[c2h3cho]/dT

  // reaction 352: c2h3co + h2 => c2h3cho + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[40];
  k_f = 7191000 * exp(-0.02 * logT - (12389.1943121122) * invT);
  dlnkfdT = -0.02 * invT + (12389.1943121122) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[40] -= q; // c2h3co
  wdot[41] += q; // c2h3cho
  // d()/d[h2]
  dqdci = +k_f * sc[40];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[129] -= dqdci; // dwdot[c2h3co]/d[h2]
  J[130] += dqdci; // dwdot[c2h3cho]/d[h2]
  // d()/d[c2h3co]
  dqdci = +k_f * sc[1];
  J[3560] += dqdci; // dwdot[h]/d[c2h3co]
  J[3561] -= dqdci; // dwdot[h2]/d[c2h3co]
  J[3600] -= dqdci; // dwdot[c2h3co]/d[c2h3co]
  J[3601] += dqdci; // dwdot[c2h3cho]/d[c2h3co]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7872] -= dqdT; // dwdot[c2h3co]/dT
  J[7873] += dqdT; // dwdot[c2h3cho]/dT

  // reaction 353: c2h3cho + o => c2h3co + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[41];
  k_f = 5940000 * exp(-(940.008731723216) * invT);
  dlnkfdT = (940.008731723216) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[4] += q;  // oh
  wdot[40] += q; // c2h3co
  wdot[41] -= q; // c2h3cho
  // d()/d[o]
  dqdci = +k_f * sc[41];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[182] += dqdci; // dwdot[oh]/d[o]
  J[218] += dqdci; // dwdot[c2h3co]/d[o]
  J[219] -= dqdci; // dwdot[c2h3cho]/d[o]
  // d()/d[c2h3cho]
  dqdci = +k_f * sc[2];
  J[3651] -= dqdci; // dwdot[o]/d[c2h3cho]
  J[3653] += dqdci; // dwdot[oh]/d[c2h3cho]
  J[3689] += dqdci; // dwdot[c2h3co]/d[c2h3cho]
  J[3690] -= dqdci; // dwdot[c2h3cho]/d[c2h3cho]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7872] += dqdT; // dwdot[c2h3co]/dT
  J[7873] -= dqdT; // dwdot[c2h3cho]/dT

  // reaction 354: c2h3co + oh => c2h3cho + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[40];
  k_f = 1400000 * exp(-0.02 * logT - (10612.8394818215) * invT);
  dlnkfdT = -0.02 * invT + (10612.8394818215) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[4] -= q;  // oh
  wdot[40] -= q; // c2h3co
  wdot[41] += q; // c2h3cho
  // d()/d[oh]
  dqdci = +k_f * sc[40];
  J[358] += dqdci; // dwdot[o]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[396] -= dqdci; // dwdot[c2h3co]/d[oh]
  J[397] += dqdci; // dwdot[c2h3cho]/d[oh]
  // d()/d[c2h3co]
  dqdci = +k_f * sc[4];
  J[3562] += dqdci; // dwdot[o]/d[c2h3co]
  J[3564] -= dqdci; // dwdot[oh]/d[c2h3co]
  J[3600] -= dqdci; // dwdot[c2h3co]/d[c2h3co]
  J[3601] += dqdci; // dwdot[c2h3cho]/d[c2h3co]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7872] -= dqdT; // dwdot[c2h3co]/dT
  J[7873] += dqdT; // dwdot[c2h3cho]/dT

  // reaction 355: c2h3cho + ho2 => c2h3co + h2o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[41];
  k_f = 3010000 * exp(-(5998.34265639226) * invT);
  dlnkfdT = (5998.34265639226) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  wdot[40] += q; // c2h3co
  wdot[41] -= q; // c2h3cho
  // d()/d[ho2]
  dqdci = +k_f * sc[41];
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[991] += dqdci;  // dwdot[h2o2]/d[ho2]
  J[1019] += dqdci; // dwdot[c2h3co]/d[ho2]
  J[1020] -= dqdci; // dwdot[c2h3cho]/d[ho2]
  // d()/d[c2h3cho]
  dqdci = +k_f * sc[11];
  J[3660] -= dqdci; // dwdot[ho2]/d[c2h3cho]
  J[3661] += dqdci; // dwdot[h2o2]/d[c2h3cho]
  J[3689] += dqdci; // dwdot[c2h3co]/d[c2h3cho]
  J[3690] -= dqdci; // dwdot[c2h3cho]/d[c2h3cho]
  // d()/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT
  J[7872] += dqdT; // dwdot[c2h3co]/dT
  J[7873] -= dqdT; // dwdot[c2h3cho]/dT

  // reaction 356: c2h3co + h2o2 => c2h3cho + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[40];
  k_f = 41520000 * exp(-0.35 * logT - (8524.49031873195) * invT);
  dlnkfdT = -0.35 * invT + (8524.49031873195) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // ho2
  wdot[12] -= q; // h2o2
  wdot[40] -= q; // c2h3co
  wdot[41] += q; // c2h3cho
  // d()/d[h2o2]
  dqdci = +k_f * sc[40];
  J[1079] += dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci; // dwdot[h2o2]/d[h2o2]
  J[1108] -= dqdci; // dwdot[c2h3co]/d[h2o2]
  J[1109] += dqdci; // dwdot[c2h3cho]/d[h2o2]
  // d()/d[c2h3co]
  dqdci = +k_f * sc[12];
  J[3571] += dqdci; // dwdot[ho2]/d[c2h3co]
  J[3572] -= dqdci; // dwdot[h2o2]/d[c2h3co]
  J[3600] -= dqdci; // dwdot[c2h3co]/d[c2h3co]
  J[3601] += dqdci; // dwdot[c2h3cho]/d[c2h3co]
  // d()/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT; // dwdot[h2o2]/dT
  J[7872] -= dqdT; // dwdot[c2h3co]/dT
  J[7873] += dqdT; // dwdot[c2h3cho]/dT

  // reaction 357: c2h3cho + ch3 => c2h3co + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[41];
  k_f = 2.608 * exp(1.78 * logT - (2974.5137115717) * invT);
  dlnkfdT = 1.78 * invT + (2974.5137115717) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[40] += q; // c2h3co
  wdot[41] -= q; // c2h3cho
  // d()/d[ch3]
  dqdci = +k_f * sc[41];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[841] += dqdci; // dwdot[c2h3co]/d[ch3]
  J[842] -= dqdci; // dwdot[c2h3cho]/d[ch3]
  // d()/d[c2h3cho]
  dqdci = +k_f * sc[9];
  J[3658] -= dqdci; // dwdot[ch3]/d[c2h3cho]
  J[3659] += dqdci; // dwdot[ch4]/d[c2h3cho]
  J[3689] += dqdci; // dwdot[c2h3co]/d[c2h3cho]
  J[3690] -= dqdci; // dwdot[c2h3cho]/d[c2h3cho]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7872] += dqdT; // dwdot[c2h3co]/dT
  J[7873] -= dqdT; // dwdot[c2h3cho]/dT

  // reaction 358: c2h3co + ch4 => c2h3cho + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[40];
  k_f = 36.56 * exp(1.76 * logT - (13944.1338094488) * invT);
  dlnkfdT = 1.76 * invT + (13944.1338094488) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[40] -= q; // c2h3co
  wdot[41] += q; // c2h3cho
  // d()/d[ch4]
  dqdci = +k_f * sc[40];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[930] -= dqdci; // dwdot[c2h3co]/d[ch4]
  J[931] += dqdci; // dwdot[c2h3cho]/d[ch4]
  // d()/d[c2h3co]
  dqdci = +k_f * sc[10];
  J[3569] += dqdci; // dwdot[ch3]/d[c2h3co]
  J[3570] -= dqdci; // dwdot[ch4]/d[c2h3co]
  J[3600] -= dqdci; // dwdot[c2h3co]/d[c2h3co]
  J[3601] += dqdci; // dwdot[c2h3cho]/d[c2h3co]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7872] -= dqdT; // dwdot[c2h3co]/dT
  J[7873] += dqdT; // dwdot[c2h3cho]/dT

  // reaction 359: c2h3cho + ch3o2 => c2h3co + ch3o2h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[38] * sc[41];
  k_f = 3010000 * exp(-(5998.34265639226) * invT);
  dlnkfdT = (5998.34265639226) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[38] -= q; // ch3o2
  wdot[39] += q; // ch3o2h
  wdot[40] += q; // c2h3co
  wdot[41] -= q; // c2h3cho
  // d()/d[ch3o2]
  dqdci = +k_f * sc[41];
  J[3420] -= dqdci; // dwdot[ch3o2]/d[ch3o2]
  J[3421] += dqdci; // dwdot[ch3o2h]/d[ch3o2]
  J[3422] += dqdci; // dwdot[c2h3co]/d[ch3o2]
  J[3423] -= dqdci; // dwdot[c2h3cho]/d[ch3o2]
  // d()/d[c2h3cho]
  dqdci = +k_f * sc[38];
  J[3687] -= dqdci; // dwdot[ch3o2]/d[c2h3cho]
  J[3688] += dqdci; // dwdot[ch3o2h]/d[c2h3cho]
  J[3689] += dqdci; // dwdot[c2h3co]/d[c2h3cho]
  J[3690] -= dqdci; // dwdot[c2h3cho]/d[c2h3cho]
  // d()/dT
  J[7870] -= dqdT; // dwdot[ch3o2]/dT
  J[7871] += dqdT; // dwdot[ch3o2h]/dT
  J[7872] += dqdT; // dwdot[c2h3co]/dT
  J[7873] -= dqdT; // dwdot[c2h3cho]/dT

  // reaction 360: c2h3co + ch3o2h => c2h3cho + ch3o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[39] * sc[40];
  k_f = 86450000 * exp(-0.53 * logT - (7004.7759880017) * invT);
  dlnkfdT = -0.53 * invT + (7004.7759880017) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[38] += q; // ch3o2
  wdot[39] -= q; // ch3o2h
  wdot[40] -= q; // c2h3co
  wdot[41] += q; // c2h3cho
  // d()/d[ch3o2h]
  dqdci = +k_f * sc[40];
  J[3509] += dqdci; // dwdot[ch3o2]/d[ch3o2h]
  J[3510] -= dqdci; // dwdot[ch3o2h]/d[ch3o2h]
  J[3511] -= dqdci; // dwdot[c2h3co]/d[ch3o2h]
  J[3512] += dqdci; // dwdot[c2h3cho]/d[ch3o2h]
  // d()/d[c2h3co]
  dqdci = +k_f * sc[39];
  J[3598] += dqdci; // dwdot[ch3o2]/d[c2h3co]
  J[3599] -= dqdci; // dwdot[ch3o2h]/d[c2h3co]
  J[3600] -= dqdci; // dwdot[c2h3co]/d[c2h3co]
  J[3601] += dqdci; // dwdot[c2h3cho]/d[c2h3co]
  // d()/dT
  J[7870] += dqdT; // dwdot[ch3o2]/dT
  J[7871] -= dqdT; // dwdot[ch3o2h]/dT
  J[7872] -= dqdT; // dwdot[c2h3co]/dT
  J[7873] += dqdT; // dwdot[c2h3cho]/dT

  // reaction 361: c3h5o => c2h3cho + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[42];
  k_f = 100000000000000 * exp(-(14643.6049749173) * invT);
  dlnkfdT = (14643.6049749173) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[41] += q; // c2h3cho
  wdot[42] -= q; // c3h5o
  // d()/d[c3h5o]
  dqdci = +k_f;
  J[3738] += dqdci; // dwdot[h]/d[c3h5o]
  J[3779] += dqdci; // dwdot[c2h3cho]/d[c3h5o]
  J[3780] -= dqdci; // dwdot[c3h5o]/d[c3h5o]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7873] += dqdT; // dwdot[c2h3cho]/dT
  J[7874] -= dqdT; // dwdot[c3h5o]/dT

  // reaction 362: c2h3cho + h => c3h5o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[41];
  k_f = 771400 * exp(0.48 * logT - (8932.09581803377) * invT);
  dlnkfdT = 0.48 * invT + (8932.09581803377) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[41] -= q; // c2h3cho
  wdot[42] += q; // c3h5o
  // d()/d[h]
  dqdci = +k_f * sc[41];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[41] -= dqdci; // dwdot[c2h3cho]/d[h]
  J[42] += dqdci; // dwdot[c3h5o]/d[h]
  // d()/d[c2h3cho]
  dqdci = +k_f * sc[0];
  J[3649] -= dqdci; // dwdot[h]/d[c2h3cho]
  J[3690] -= dqdci; // dwdot[c2h3cho]/d[c2h3cho]
  J[3691] += dqdci; // dwdot[c3h5o]/d[c2h3cho]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7873] -= dqdT; // dwdot[c2h3cho]/dT
  J[7874] += dqdT; // dwdot[c3h5o]/dT

  // reaction 363: c3h5o => c2h3 + ch2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[42];
  k_f = 2028000000000 * exp(0.09 * logT - (11855.7846463592) * invT);
  dlnkfdT = 0.09 * invT + (11855.7846463592) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[13] += q; // ch2o
  wdot[19] += q; // c2h3
  wdot[42] -= q; // c3h5o
  // d()/d[c3h5o]
  dqdci = +k_f;
  J[3751] += dqdci; // dwdot[ch2o]/d[c3h5o]
  J[3757] += dqdci; // dwdot[c2h3]/d[c3h5o]
  J[3780] -= dqdci; // dwdot[c3h5o]/d[c3h5o]
  // d()/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT
  J[7874] -= dqdT; // dwdot[c3h5o]/dT

  // reaction 364: c2h3 + ch2o => c3h5o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[19];
  k_f = 150000 * exp(-(5334.09665753003) * invT);
  dlnkfdT = (5334.09665753003) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[13] -= q; // ch2o
  wdot[19] -= q; // c2h3
  wdot[42] += q; // c3h5o
  // d()/d[ch2o]
  dqdci = +k_f * sc[19];
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  J[1176] -= dqdci; // dwdot[c2h3]/d[ch2o]
  J[1199] += dqdci; // dwdot[c3h5o]/d[ch2o]
  // d()/d[c2h3]
  dqdci = +k_f * sc[13];
  J[1704] -= dqdci; // dwdot[ch2o]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  J[1733] += dqdci; // dwdot[c3h5o]/d[c2h3]
  // d()/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT
  J[7874] += dqdT; // dwdot[c3h5o]/dT

  // reaction 365: c3h5o + o2 => c2h3cho + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[42];
  k_f = 1000000 * exp(-(3019.29999482832) * invT);
  dlnkfdT = (3019.29999482832) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[41] += q; // c2h3cho
  wdot[42] -= q; // c3h5o
  // d()/d[o2]
  dqdci = +k_f * sc[42];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[308] += dqdci; // dwdot[c2h3cho]/d[o2]
  J[309] -= dqdci; // dwdot[c3h5o]/d[o2]
  // d()/d[c3h5o]
  dqdci = +k_f * sc[3];
  J[3741] -= dqdci; // dwdot[o2]/d[c3h5o]
  J[3749] += dqdci; // dwdot[ho2]/d[c3h5o]
  J[3779] += dqdci; // dwdot[c2h3cho]/d[c3h5o]
  J[3780] -= dqdci; // dwdot[c3h5o]/d[c3h5o]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7873] += dqdT; // dwdot[c2h3cho]/dT
  J[7874] -= dqdT; // dwdot[c3h5o]/dT

  // reaction 366: c2h3cho + ho2 => c3h5o + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[41];
  k_f = 128800 * exp(-(16102.933305751) * invT);
  dlnkfdT = (16102.933305751) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[41] -= q; // c2h3cho
  wdot[42] += q; // c3h5o
  // d()/d[ho2]
  dqdci = +k_f * sc[41];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1020] -= dqdci; // dwdot[c2h3cho]/d[ho2]
  J[1021] += dqdci; // dwdot[c3h5o]/d[ho2]
  // d()/d[c2h3cho]
  dqdci = +k_f * sc[11];
  J[3652] += dqdci; // dwdot[o2]/d[c2h3cho]
  J[3660] -= dqdci; // dwdot[ho2]/d[c2h3cho]
  J[3690] -= dqdci; // dwdot[c2h3cho]/d[c2h3cho]
  J[3691] += dqdci; // dwdot[c3h5o]/d[c2h3cho]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7873] -= dqdT; // dwdot[c2h3cho]/dT
  J[7874] += dqdT; // dwdot[c3h5o]/dT

  // reaction 367: c3h5-a + ho2 => c3h5o + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[47];
  k_f = 7000000 * exp(-(-503.21666580472) * invT);
  dlnkfdT = (-503.21666580472) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[11] -= q; // ho2
  wdot[42] += q; // c3h5o
  wdot[47] -= q; // c3h5-a
  // d()/d[ho2]
  dqdci = +k_f * sc[47];
  J[983] += dqdci;  // dwdot[oh]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1021] += dqdci; // dwdot[c3h5o]/d[ho2]
  J[1026] -= dqdci; // dwdot[c3h5-a]/d[ho2]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[11];
  J[4187] += dqdci; // dwdot[oh]/d[c3h5-a]
  J[4194] -= dqdci; // dwdot[ho2]/d[c3h5-a]
  J[4225] += dqdci; // dwdot[c3h5o]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7874] += dqdT; // dwdot[c3h5o]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 368: c3h5o + oh => c3h5-a + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[42];
  k_f = 20410000 * exp(-0.16 * logT - (6169.43632276586) * invT);
  dlnkfdT = -0.16 * invT + (6169.43632276586) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[11] += q; // ho2
  wdot[42] -= q; // c3h5o
  wdot[47] += q; // c3h5-a
  // d()/d[oh]
  dqdci = +k_f * sc[42];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[367] += dqdci; // dwdot[ho2]/d[oh]
  J[398] -= dqdci; // dwdot[c3h5o]/d[oh]
  J[403] += dqdci; // dwdot[c3h5-a]/d[oh]
  // d()/d[c3h5o]
  dqdci = +k_f * sc[4];
  J[3742] -= dqdci; // dwdot[oh]/d[c3h5o]
  J[3749] += dqdci; // dwdot[ho2]/d[c3h5o]
  J[3780] -= dqdci; // dwdot[c3h5o]/d[c3h5o]
  J[3785] += dqdci; // dwdot[c3h5-a]/d[c3h5o]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7874] -= dqdT; // dwdot[c3h5o]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 369: c3h5-a + ch3o2 => c3h5o + ch3o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[38] * sc[47];
  k_f = 7000000 * exp(-(-503.21666580472) * invT);
  dlnkfdT = (-503.21666580472) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[14] += q; // ch3o
  wdot[38] -= q; // ch3o2
  wdot[42] += q; // c3h5o
  wdot[47] -= q; // c3h5-a
  // d()/d[ch3o2]
  dqdci = +k_f * sc[47];
  J[3396] += dqdci; // dwdot[ch3o]/d[ch3o2]
  J[3420] -= dqdci; // dwdot[ch3o2]/d[ch3o2]
  J[3424] += dqdci; // dwdot[c3h5o]/d[ch3o2]
  J[3429] -= dqdci; // dwdot[c3h5-a]/d[ch3o2]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[38];
  J[4197] += dqdci; // dwdot[ch3o]/d[c3h5-a]
  J[4221] -= dqdci; // dwdot[ch3o2]/d[c3h5-a]
  J[4225] += dqdci; // dwdot[c3h5o]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7846] += dqdT; // dwdot[ch3o]/dT
  J[7870] -= dqdT; // dwdot[ch3o2]/dT
  J[7874] += dqdT; // dwdot[c3h5o]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 370: c3h5o + ch3o => c3h5-a + ch3o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[42];
  k_f = 1994000000 * exp(-0.74 * logT - (8564.74765199633) * invT);
  dlnkfdT = -0.74 * invT + (8564.74765199633) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[14] -= q; // ch3o
  wdot[38] += q; // ch3o2
  wdot[42] -= q; // c3h5o
  wdot[47] += q; // c3h5-a
  // d()/d[ch3o]
  dqdci = +k_f * sc[42];
  J[1260] -= dqdci; // dwdot[ch3o]/d[ch3o]
  J[1284] += dqdci; // dwdot[ch3o2]/d[ch3o]
  J[1288] -= dqdci; // dwdot[c3h5o]/d[ch3o]
  J[1293] += dqdci; // dwdot[c3h5-a]/d[ch3o]
  // d()/d[c3h5o]
  dqdci = +k_f * sc[14];
  J[3752] -= dqdci; // dwdot[ch3o]/d[c3h5o]
  J[3776] += dqdci; // dwdot[ch3o2]/d[c3h5o]
  J[3780] -= dqdci; // dwdot[c3h5o]/d[c3h5o]
  J[3785] += dqdci; // dwdot[c3h5-a]/d[c3h5o]
  // d()/dT
  J[7846] -= dqdT; // dwdot[ch3o]/dT
  J[7870] += dqdT; // dwdot[ch3o2]/dT
  J[7874] -= dqdT; // dwdot[c3h5o]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 371: c3h6 + ch3o2 => c3h5-a + ch3o2h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[26] * sc[38];
  k_f = 324000 * exp(-(7497.92832049032) * invT);
  dlnkfdT = (7497.92832049032) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[26] -= q; // c3h6
  wdot[38] -= q; // ch3o2
  wdot[39] += q; // ch3o2h
  wdot[47] += q; // c3h5-a
  // d()/d[c3h6]
  dqdci = +k_f * sc[38];
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  J[2352] -= dqdci; // dwdot[ch3o2]/d[c3h6]
  J[2353] += dqdci; // dwdot[ch3o2h]/d[c3h6]
  J[2361] += dqdci; // dwdot[c3h5-a]/d[c3h6]
  // d()/d[ch3o2]
  dqdci = +k_f * sc[26];
  J[3408] -= dqdci; // dwdot[c3h6]/d[ch3o2]
  J[3420] -= dqdci; // dwdot[ch3o2]/d[ch3o2]
  J[3421] += dqdci; // dwdot[ch3o2h]/d[ch3o2]
  J[3429] += dqdci; // dwdot[c3h5-a]/d[ch3o2]
  // d()/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT
  J[7870] -= dqdT; // dwdot[ch3o2]/dT
  J[7871] += dqdT; // dwdot[ch3o2h]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 372: c3h5-a + ch3o2h => c3h6 + ch3o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[39] * sc[47];
  k_f = 20000 * exp(-(7548.2499870708) * invT);
  dlnkfdT = (7548.2499870708) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[26] += q; // c3h6
  wdot[38] += q; // ch3o2
  wdot[39] -= q; // ch3o2h
  wdot[47] -= q; // c3h5-a
  // d()/d[ch3o2h]
  dqdci = +k_f * sc[47];
  J[3497] += dqdci; // dwdot[c3h6]/d[ch3o2h]
  J[3509] += dqdci; // dwdot[ch3o2]/d[ch3o2h]
  J[3510] -= dqdci; // dwdot[ch3o2h]/d[ch3o2h]
  J[3518] -= dqdci; // dwdot[c3h5-a]/d[ch3o2h]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[39];
  J[4209] += dqdci; // dwdot[c3h6]/d[c3h5-a]
  J[4221] += dqdci; // dwdot[ch3o2]/d[c3h5-a]
  J[4222] -= dqdci; // dwdot[ch3o2h]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7870] += dqdT; // dwdot[ch3o2]/dT
  J[7871] -= dqdT; // dwdot[ch3o2h]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 373: ch3 + oh => ch2(s) + h2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[9];
  k_f = 26500000 * exp(-(1100.03163144912) * invT);
  dlnkfdT = (1100.03163144912) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[9] -= q;  // ch3
  wdot[50] += q; // ch2(s)
  // d()/d[oh]
  dqdci = +k_f * sc[9];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[365] -= dqdci; // dwdot[ch3]/d[oh]
  J[406] += dqdci; // dwdot[ch2(s)]/d[oh]
  // d()/d[ch3]
  dqdci = +k_f * sc[4];
  J[805] -= dqdci; // dwdot[oh]/d[ch3]
  J[806] += dqdci; // dwdot[h2o]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[851] += dqdci; // dwdot[ch2(s)]/d[ch3]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7882] += dqdT; // dwdot[ch2(s)]/dT

  // reaction 374: ch2(s) + h2o => ch3 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[50];
  k_f = 32360 * exp(0.89 * logT - (609.395382289516) * invT);
  dlnkfdT = 0.89 * invT + (609.395382289516) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[9] += q;  // ch3
  wdot[50] -= q; // ch2(s)
  // d()/d[h2o]
  dqdci = +k_f * sc[50];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[454] += dqdci; // dwdot[ch3]/d[h2o]
  J[495] -= dqdci; // dwdot[ch2(s)]/d[h2o]
  // d()/d[ch2(s)]
  dqdci = +k_f * sc[5];
  J[4454] += dqdci; // dwdot[oh]/d[ch2(s)]
  J[4455] -= dqdci; // dwdot[h2o]/d[ch2(s)]
  J[4459] += dqdci; // dwdot[ch3]/d[ch2(s)]
  J[4500] -= dqdci; // dwdot[ch2(s)]/d[ch2(s)]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7882] -= dqdT; // dwdot[ch2(s)]/dT

  // reaction 375: c4h7o => c2h3 + ch3cho
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[43];
  k_f = 794000000000000 * exp(-(9561.11665028967) * invT);
  dlnkfdT = (9561.11665028967) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[19] += q; // c2h3
  wdot[24] += q; // ch3cho
  wdot[43] -= q; // c4h7o
  // d()/d[c4h7o]
  dqdci = +k_f;
  J[3846] += dqdci; // dwdot[c2h3]/d[c4h7o]
  J[3851] += dqdci; // dwdot[ch3cho]/d[c4h7o]
  J[3870] -= dqdci; // dwdot[c4h7o]/d[c4h7o]
  // d()/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT
  J[7875] -= dqdT; // dwdot[c4h7o]/dT

  // reaction 376: c2h3 + ch3cho => c4h7o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[24];
  k_f = 10000 * exp(-(10064.3333160944) * invT);
  dlnkfdT = (10064.3333160944) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[19] -= q; // c2h3
  wdot[24] -= q; // ch3cho
  wdot[43] += q; // c4h7o
  // d()/d[c2h3]
  dqdci = +k_f * sc[24];
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  J[1715] -= dqdci; // dwdot[ch3cho]/d[c2h3]
  J[1734] += dqdci; // dwdot[c4h7o]/d[c2h3]
  // d()/d[ch3cho]
  dqdci = +k_f * sc[19];
  J[2155] -= dqdci; // dwdot[c2h3]/d[ch3cho]
  J[2160] -= dqdci; // dwdot[ch3cho]/d[ch3cho]
  J[2179] += dqdci; // dwdot[c4h7o]/d[ch3cho]
  // d()/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT
  J[7856] -= dqdT; // dwdot[ch3cho]/dT
  J[7875] += dqdT; // dwdot[c4h7o]/dT

  // reaction 377: c4h7o => c2h3cho + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[43];
  k_f = 794000000000000 * exp(-(9561.11665028967) * invT);
  dlnkfdT = (9561.11665028967) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[41] += q; // c2h3cho
  wdot[43] -= q; // c4h7o
  // d()/d[c4h7o]
  dqdci = +k_f;
  J[3836] += dqdci; // dwdot[ch3]/d[c4h7o]
  J[3868] += dqdci; // dwdot[c2h3cho]/d[c4h7o]
  J[3870] -= dqdci; // dwdot[c4h7o]/d[c4h7o]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7873] += dqdT; // dwdot[c2h3cho]/dT
  J[7875] -= dqdT; // dwdot[c4h7o]/dT

  // reaction 378: c2h3cho + ch3 => c4h7o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[41];
  k_f = 10000 * exp(-(10064.3333160944) * invT);
  dlnkfdT = (10064.3333160944) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[41] -= q; // c2h3cho
  wdot[43] += q; // c4h7o
  // d()/d[ch3]
  dqdci = +k_f * sc[41];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[842] -= dqdci; // dwdot[c2h3cho]/d[ch3]
  J[844] += dqdci; // dwdot[c4h7o]/d[ch3]
  // d()/d[c2h3cho]
  dqdci = +k_f * sc[9];
  J[3658] -= dqdci; // dwdot[ch3]/d[c2h3cho]
  J[3690] -= dqdci; // dwdot[c2h3cho]/d[c2h3cho]
  J[3692] += dqdci; // dwdot[c4h7o]/d[c2h3cho]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7873] -= dqdT; // dwdot[c2h3cho]/dT
  J[7875] += dqdT; // dwdot[c4h7o]/dT

  // reaction 379: c4h7 + ho2 => c4h7o + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[29];
  k_f = 7000000 * exp(-(-503.21666580472) * invT);
  dlnkfdT = (-503.21666580472) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[11] -= q; // ho2
  wdot[29] -= q; // c4h7
  wdot[43] += q; // c4h7o
  // d()/d[ho2]
  dqdci = +k_f * sc[29];
  J[983] += dqdci;  // dwdot[oh]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1008] -= dqdci; // dwdot[c4h7]/d[ho2]
  J[1022] += dqdci; // dwdot[c4h7o]/d[ho2]
  // d()/d[c4h7]
  dqdci = +k_f * sc[11];
  J[2585] += dqdci; // dwdot[oh]/d[c4h7]
  J[2592] -= dqdci; // dwdot[ho2]/d[c4h7]
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  J[2624] += dqdci; // dwdot[c4h7o]/d[c4h7]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT
  J[7875] += dqdT; // dwdot[c4h7o]/dT

  // reaction 380: c4h7o + oh => c4h7 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[43];
  k_f = 100800 * exp(0.26 * logT - (8499.32948544172) * invT);
  dlnkfdT = 0.26 * invT + (8499.32948544172) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[11] += q; // ho2
  wdot[29] += q; // c4h7
  wdot[43] -= q; // c4h7o
  // d()/d[oh]
  dqdci = +k_f * sc[43];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[367] += dqdci; // dwdot[ho2]/d[oh]
  J[385] += dqdci; // dwdot[c4h7]/d[oh]
  J[399] -= dqdci; // dwdot[c4h7o]/d[oh]
  // d()/d[c4h7o]
  dqdci = +k_f * sc[4];
  J[3831] -= dqdci; // dwdot[oh]/d[c4h7o]
  J[3838] += dqdci; // dwdot[ho2]/d[c4h7o]
  J[3856] += dqdci; // dwdot[c4h7]/d[c4h7o]
  J[3870] -= dqdci; // dwdot[c4h7o]/d[c4h7o]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT
  J[7875] -= dqdT; // dwdot[c4h7o]/dT

  // reaction 381: c4h7 + ch3o2 => c4h7o + ch3o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[29] * sc[38];
  k_f = 7000000 * exp(-(-503.21666580472) * invT);
  dlnkfdT = (-503.21666580472) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[14] += q; // ch3o
  wdot[29] -= q; // c4h7
  wdot[38] -= q; // ch3o2
  wdot[43] += q; // c4h7o
  // d()/d[c4h7]
  dqdci = +k_f * sc[38];
  J[2595] += dqdci; // dwdot[ch3o]/d[c4h7]
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  J[2619] -= dqdci; // dwdot[ch3o2]/d[c4h7]
  J[2624] += dqdci; // dwdot[c4h7o]/d[c4h7]
  // d()/d[ch3o2]
  dqdci = +k_f * sc[29];
  J[3396] += dqdci; // dwdot[ch3o]/d[ch3o2]
  J[3411] -= dqdci; // dwdot[c4h7]/d[ch3o2]
  J[3420] -= dqdci; // dwdot[ch3o2]/d[ch3o2]
  J[3425] += dqdci; // dwdot[c4h7o]/d[ch3o2]
  // d()/dT
  J[7846] += dqdT; // dwdot[ch3o]/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT
  J[7870] -= dqdT; // dwdot[ch3o2]/dT
  J[7875] += dqdT; // dwdot[c4h7o]/dT

  // reaction 382: c4h7o + ch3o => c4h7 + ch3o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[43];
  k_f = 9844000 * exp(-0.32 * logT - (10894.6408146722) * invT);
  dlnkfdT = -0.32 * invT + (10894.6408146722) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[14] -= q; // ch3o
  wdot[29] += q; // c4h7
  wdot[38] += q; // ch3o2
  wdot[43] -= q; // c4h7o
  // d()/d[ch3o]
  dqdci = +k_f * sc[43];
  J[1260] -= dqdci; // dwdot[ch3o]/d[ch3o]
  J[1275] += dqdci; // dwdot[c4h7]/d[ch3o]
  J[1284] += dqdci; // dwdot[ch3o2]/d[ch3o]
  J[1289] -= dqdci; // dwdot[c4h7o]/d[ch3o]
  // d()/d[c4h7o]
  dqdci = +k_f * sc[14];
  J[3841] -= dqdci; // dwdot[ch3o]/d[c4h7o]
  J[3856] += dqdci; // dwdot[c4h7]/d[c4h7o]
  J[3865] += dqdci; // dwdot[ch3o2]/d[c4h7o]
  J[3870] -= dqdci; // dwdot[c4h7o]/d[c4h7o]
  // d()/dT
  J[7846] -= dqdT; // dwdot[ch3o]/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT
  J[7870] += dqdT; // dwdot[ch3o2]/dT
  J[7875] -= dqdT; // dwdot[c4h7o]/dT

  // reaction 383: c4h8-1 + oh => ch2o + nc3h7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[30];
  k_f = 1000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[13] += q; // ch2o
  wdot[28] += q; // nc3h7
  wdot[30] -= q; // c4h8-1
  // d()/d[oh]
  dqdci = +k_f * sc[30];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[369] += dqdci; // dwdot[ch2o]/d[oh]
  J[384] += dqdci; // dwdot[nc3h7]/d[oh]
  J[386] -= dqdci; // dwdot[c4h8-1]/d[oh]
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[4];
  J[2674] -= dqdci; // dwdot[oh]/d[c4h8-1]
  J[2683] += dqdci; // dwdot[ch2o]/d[c4h8-1]
  J[2698] += dqdci; // dwdot[nc3h7]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT
  J[7860] += dqdT; // dwdot[nc3h7]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT

  // reaction 384: ch2o + nc3h7 => c4h8-1 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[28];
  k_f = 1620000 * exp(-(6657.55648859644) * invT);
  dlnkfdT = (6657.55648859644) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[13] -= q; // ch2o
  wdot[28] -= q; // nc3h7
  wdot[30] += q; // c4h8-1
  // d()/d[ch2o]
  dqdci = +k_f * sc[28];
  J[1161] += dqdci; // dwdot[oh]/d[ch2o]
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  J[1185] -= dqdci; // dwdot[nc3h7]/d[ch2o]
  J[1187] += dqdci; // dwdot[c4h8-1]/d[ch2o]
  // d()/d[nc3h7]
  dqdci = +k_f * sc[13];
  J[2496] += dqdci; // dwdot[oh]/d[nc3h7]
  J[2505] -= dqdci; // dwdot[ch2o]/d[nc3h7]
  J[2520] -= dqdci; // dwdot[nc3h7]/d[nc3h7]
  J[2522] += dqdci; // dwdot[c4h8-1]/d[nc3h7]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT
  J[7860] -= dqdT; // dwdot[nc3h7]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT

  // reaction 385: c4h8-1 + o => c3h6 + ch2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[30];
  k_f = 0.723 * exp(2.34 * logT - (-528.377499094956) * invT);
  dlnkfdT = 2.34 * invT + (-528.377499094956) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[13] += q; // ch2o
  wdot[26] += q; // c3h6
  wdot[30] -= q; // c4h8-1
  // d()/d[o]
  dqdci = +k_f * sc[30];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[191] += dqdci; // dwdot[ch2o]/d[o]
  J[204] += dqdci; // dwdot[c3h6]/d[o]
  J[208] -= dqdci; // dwdot[c4h8-1]/d[o]
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[2];
  J[2672] -= dqdci; // dwdot[o]/d[c4h8-1]
  J[2683] += dqdci; // dwdot[ch2o]/d[c4h8-1]
  J[2696] += dqdci; // dwdot[c3h6]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT

  // reaction 386: c3h6 + ch2o => c4h8-1 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[26];
  k_f = 0.2 * exp(2.34 * logT - (40398.2339308029) * invT);
  dlnkfdT = 2.34 * invT + (40398.2339308029) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[13] -= q; // ch2o
  wdot[26] -= q; // c3h6
  wdot[30] += q; // c4h8-1
  // d()/d[ch2o]
  dqdci = +k_f * sc[26];
  J[1159] += dqdci; // dwdot[o]/d[ch2o]
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  J[1183] -= dqdci; // dwdot[c3h6]/d[ch2o]
  J[1187] += dqdci; // dwdot[c4h8-1]/d[ch2o]
  // d()/d[c3h6]
  dqdci = +k_f * sc[13];
  J[2316] += dqdci; // dwdot[o]/d[c3h6]
  J[2327] -= dqdci; // dwdot[ch2o]/d[c3h6]
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  J[2344] += dqdci; // dwdot[c4h8-1]/d[c3h6]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT

  // reaction 387: c4h8-1 + o => c2h4 + ch3cho
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[30];
  k_f = 13000000 * exp(-(427.734165934012) * invT);
  dlnkfdT = (427.734165934012) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[16] += q; // c2h4
  wdot[24] += q; // ch3cho
  wdot[30] -= q; // c4h8-1
  // d()/d[o]
  dqdci = +k_f * sc[30];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[194] += dqdci; // dwdot[c2h4]/d[o]
  J[202] += dqdci; // dwdot[ch3cho]/d[o]
  J[208] -= dqdci; // dwdot[c4h8-1]/d[o]
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[2];
  J[2672] -= dqdci; // dwdot[o]/d[c4h8-1]
  J[2686] += dqdci; // dwdot[c2h4]/d[c4h8-1]
  J[2694] += dqdci; // dwdot[ch3cho]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT

  // reaction 388: c2h4 + ch3cho => c4h8-1 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[24];
  k_f = 2070000 * exp(-(42823.7382599816) * invT);
  dlnkfdT = (42823.7382599816) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[16] -= q; // c2h4
  wdot[24] -= q; // ch3cho
  wdot[30] += q; // c4h8-1
  // d()/d[c2h4]
  dqdci = +k_f * sc[24];
  J[1426] += dqdci; // dwdot[o]/d[c2h4]
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1448] -= dqdci; // dwdot[ch3cho]/d[c2h4]
  J[1454] += dqdci; // dwdot[c4h8-1]/d[c2h4]
  // d()/d[ch3cho]
  dqdci = +k_f * sc[16];
  J[2138] += dqdci; // dwdot[o]/d[ch3cho]
  J[2152] -= dqdci; // dwdot[c2h4]/d[ch3cho]
  J[2160] -= dqdci; // dwdot[ch3cho]/d[ch3cho]
  J[2166] += dqdci; // dwdot[c4h8-1]/d[ch3cho]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7856] -= dqdT; // dwdot[ch3cho]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT

  // reaction 389: c4h8-1 + o => c2h5 + ch3co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[30];
  k_f = 13000000 * exp(-(427.734165934012) * invT);
  dlnkfdT = (427.734165934012) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[17] += q; // c2h5
  wdot[22] += q; // ch3co
  wdot[30] -= q; // c4h8-1
  // d()/d[o]
  dqdci = +k_f * sc[30];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[195] += dqdci; // dwdot[c2h5]/d[o]
  J[200] += dqdci; // dwdot[ch3co]/d[o]
  J[208] -= dqdci; // dwdot[c4h8-1]/d[o]
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[2];
  J[2672] -= dqdci; // dwdot[o]/d[c4h8-1]
  J[2687] += dqdci; // dwdot[c2h5]/d[c4h8-1]
  J[2692] += dqdci; // dwdot[ch3co]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7854] += dqdT; // dwdot[ch3co]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT

  // reaction 390: c2h5 + ch3co => c4h8-1 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[22];
  k_f = 2350000 * exp(-(19197.7158004501) * invT);
  dlnkfdT = (19197.7158004501) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[17] -= q; // c2h5
  wdot[22] -= q; // ch3co
  wdot[30] += q; // c4h8-1
  // d()/d[c2h5]
  dqdci = +k_f * sc[22];
  J[1515] += dqdci; // dwdot[o]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1535] -= dqdci; // dwdot[ch3co]/d[c2h5]
  J[1543] += dqdci; // dwdot[c4h8-1]/d[c2h5]
  // d()/d[ch3co]
  dqdci = +k_f * sc[17];
  J[1960] += dqdci; // dwdot[o]/d[ch3co]
  J[1975] -= dqdci; // dwdot[c2h5]/d[ch3co]
  J[1980] -= dqdci; // dwdot[ch3co]/d[ch3co]
  J[1988] += dqdci; // dwdot[c4h8-1]/d[ch3co]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7854] -= dqdT; // dwdot[ch3co]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT

  // reaction 391: c4h8-1 + oh => c2h5 + ch3cho
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[30];
  k_f = 1000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[17] += q; // c2h5
  wdot[24] += q; // ch3cho
  wdot[30] -= q; // c4h8-1
  // d()/d[oh]
  dqdci = +k_f * sc[30];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[373] += dqdci; // dwdot[c2h5]/d[oh]
  J[380] += dqdci; // dwdot[ch3cho]/d[oh]
  J[386] -= dqdci; // dwdot[c4h8-1]/d[oh]
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[4];
  J[2674] -= dqdci; // dwdot[oh]/d[c4h8-1]
  J[2687] += dqdci; // dwdot[c2h5]/d[c4h8-1]
  J[2694] += dqdci; // dwdot[ch3cho]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT

  // reaction 392: c2h5 + ch3cho => c4h8-1 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[24];
  k_f = 9330000 * exp(-(10029.1081494881) * invT);
  dlnkfdT = (10029.1081494881) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[17] -= q; // c2h5
  wdot[24] -= q; // ch3cho
  wdot[30] += q; // c4h8-1
  // d()/d[c2h5]
  dqdci = +k_f * sc[24];
  J[1517] += dqdci; // dwdot[oh]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1537] -= dqdci; // dwdot[ch3cho]/d[c2h5]
  J[1543] += dqdci; // dwdot[c4h8-1]/d[c2h5]
  // d()/d[ch3cho]
  dqdci = +k_f * sc[17];
  J[2140] += dqdci; // dwdot[oh]/d[ch3cho]
  J[2153] -= dqdci; // dwdot[c2h5]/d[ch3cho]
  J[2160] -= dqdci; // dwdot[ch3cho]/d[ch3cho]
  J[2166] += dqdci; // dwdot[c4h8-1]/d[ch3cho]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7856] -= dqdT; // dwdot[ch3cho]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT

  // reaction 393: c4h8-1 + oh => c2h6 + ch3co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[30];
  k_f = 500000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[15] += q; // c2h6
  wdot[22] += q; // ch3co
  wdot[30] -= q; // c4h8-1
  // d()/d[oh]
  dqdci = +k_f * sc[30];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[371] += dqdci; // dwdot[c2h6]/d[oh]
  J[378] += dqdci; // dwdot[ch3co]/d[oh]
  J[386] -= dqdci; // dwdot[c4h8-1]/d[oh]
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[4];
  J[2674] -= dqdci; // dwdot[oh]/d[c4h8-1]
  J[2685] += dqdci; // dwdot[c2h6]/d[c4h8-1]
  J[2692] += dqdci; // dwdot[ch3co]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7847] += dqdT; // dwdot[c2h6]/dT
  J[7854] += dqdT; // dwdot[ch3co]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT

  // reaction 394: c2h6 + ch3co => c4h8-1 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[22];
  k_f = 9830000 * exp(-(16319.3164720471) * invT);
  dlnkfdT = (16319.3164720471) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[15] -= q; // c2h6
  wdot[22] -= q; // ch3co
  wdot[30] += q; // c4h8-1
  // d()/d[c2h6]
  dqdci = +k_f * sc[22];
  J[1339] += dqdci; // dwdot[oh]/d[c2h6]
  J[1350] -= dqdci; // dwdot[c2h6]/d[c2h6]
  J[1357] -= dqdci; // dwdot[ch3co]/d[c2h6]
  J[1365] += dqdci; // dwdot[c4h8-1]/d[c2h6]
  // d()/d[ch3co]
  dqdci = +k_f * sc[15];
  J[1962] += dqdci; // dwdot[oh]/d[ch3co]
  J[1973] -= dqdci; // dwdot[c2h6]/d[ch3co]
  J[1980] -= dqdci; // dwdot[ch3co]/d[ch3co]
  J[1988] += dqdci; // dwdot[c4h8-1]/d[ch3co]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7847] -= dqdT; // dwdot[c2h6]/dT
  J[7854] -= dqdT; // dwdot[ch3co]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT

  // reaction 395: c4h8-1 + o => c2h5co + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[30];
  k_f = 13000000 * exp(-(427.734165934012) * invT);
  dlnkfdT = (427.734165934012) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[9] += q;  // ch3
  wdot[30] -= q; // c4h8-1
  wdot[34] += q; // c2h5co
  // d()/d[o]
  dqdci = +k_f * sc[30];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[187] += dqdci; // dwdot[ch3]/d[o]
  J[208] -= dqdci; // dwdot[c4h8-1]/d[o]
  J[212] += dqdci; // dwdot[c2h5co]/d[o]
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[2];
  J[2672] -= dqdci; // dwdot[o]/d[c4h8-1]
  J[2679] += dqdci; // dwdot[ch3]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  J[2704] += dqdci; // dwdot[c2h5co]/d[c4h8-1]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT
  J[7866] += dqdT; // dwdot[c2h5co]/dT

  // reaction 396: c2h5co + ch3 => c4h8-1 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[34];
  k_f = 480000 * exp(-(16379.7024719436) * invT);
  dlnkfdT = (16379.7024719436) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[9] -= q;  // ch3
  wdot[30] += q; // c4h8-1
  wdot[34] -= q; // c2h5co
  // d()/d[ch3]
  dqdci = +k_f * sc[34];
  J[803] += dqdci; // dwdot[o]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[831] += dqdci; // dwdot[c4h8-1]/d[ch3]
  J[835] -= dqdci; // dwdot[c2h5co]/d[ch3]
  // d()/d[c2h5co]
  dqdci = +k_f * sc[9];
  J[3028] += dqdci; // dwdot[o]/d[c2h5co]
  J[3035] -= dqdci; // dwdot[ch3]/d[c2h5co]
  J[3056] += dqdci; // dwdot[c4h8-1]/d[c2h5co]
  J[3060] -= dqdci; // dwdot[c2h5co]/d[c2h5co]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT
  J[7866] -= dqdT; // dwdot[c2h5co]/dT

  // reaction 397: c4h8-1 + oh => c2h5cho + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[30];
  k_f = 1000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[9] += q;  // ch3
  wdot[30] -= q; // c4h8-1
  wdot[33] += q; // c2h5cho
  // d()/d[oh]
  dqdci = +k_f * sc[30];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[365] += dqdci; // dwdot[ch3]/d[oh]
  J[386] -= dqdci; // dwdot[c4h8-1]/d[oh]
  J[389] += dqdci; // dwdot[c2h5cho]/d[oh]
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[4];
  J[2674] -= dqdci; // dwdot[oh]/d[c4h8-1]
  J[2679] += dqdci; // dwdot[ch3]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  J[2703] += dqdci; // dwdot[c2h5cho]/d[c4h8-1]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT
  J[7865] += dqdT; // dwdot[c2h5cho]/dT

  // reaction 398: c2h5cho + ch3 => c4h8-1 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[33];
  k_f = 49500 * exp(-(8524.49031873195) * invT);
  dlnkfdT = (8524.49031873195) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[9] -= q;  // ch3
  wdot[30] += q; // c4h8-1
  wdot[33] -= q; // c2h5cho
  // d()/d[ch3]
  dqdci = +k_f * sc[33];
  J[805] += dqdci; // dwdot[oh]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[831] += dqdci; // dwdot[c4h8-1]/d[ch3]
  J[834] -= dqdci; // dwdot[c2h5cho]/d[ch3]
  // d()/d[c2h5cho]
  dqdci = +k_f * sc[9];
  J[2941] += dqdci; // dwdot[oh]/d[c2h5cho]
  J[2946] -= dqdci; // dwdot[ch3]/d[c2h5cho]
  J[2967] += dqdci; // dwdot[c4h8-1]/d[c2h5cho]
  J[2970] -= dqdci; // dwdot[c2h5cho]/d[c2h5cho]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT
  J[7865] -= dqdT; // dwdot[c2h5cho]/dT

  // reaction 399: c4h8-1 + oh => c2h5co + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[30];
  k_f = 500000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[10] += q; // ch4
  wdot[30] -= q; // c4h8-1
  wdot[34] += q; // c2h5co
  // d()/d[oh]
  dqdci = +k_f * sc[30];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[366] += dqdci; // dwdot[ch4]/d[oh]
  J[386] -= dqdci; // dwdot[c4h8-1]/d[oh]
  J[390] += dqdci; // dwdot[c2h5co]/d[oh]
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[4];
  J[2674] -= dqdci; // dwdot[oh]/d[c4h8-1]
  J[2680] += dqdci; // dwdot[ch4]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  J[2704] += dqdci; // dwdot[c2h5co]/d[c4h8-1]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT
  J[7866] += dqdT; // dwdot[c2h5co]/dT

  // reaction 400: c2h5co + ch4 => c4h8-1 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[34];
  k_f = 22000000 * exp(-(17245.2351371277) * invT);
  dlnkfdT = (17245.2351371277) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[10] -= q; // ch4
  wdot[30] += q; // c4h8-1
  wdot[34] -= q; // c2h5co
  // d()/d[ch4]
  dqdci = +k_f * sc[34];
  J[894] += dqdci; // dwdot[oh]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[920] += dqdci; // dwdot[c4h8-1]/d[ch4]
  J[924] -= dqdci; // dwdot[c2h5co]/d[ch4]
  // d()/d[c2h5co]
  dqdci = +k_f * sc[10];
  J[3030] += dqdci; // dwdot[oh]/d[c2h5co]
  J[3036] -= dqdci; // dwdot[ch4]/d[c2h5co]
  J[3056] += dqdci; // dwdot[c4h8-1]/d[c2h5co]
  J[3060] -= dqdci; // dwdot[c2h5co]/d[c2h5co]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT
  J[7866] -= dqdT; // dwdot[c2h5co]/dT

  // reaction 401: c4h8-1 + ch3o2 => c4h7 + ch3o2h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[30] * sc[38];
  k_f = 1400000 * exp(-(7497.92832049032) * invT);
  dlnkfdT = (7497.92832049032) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[29] += q; // c4h7
  wdot[30] -= q; // c4h8-1
  wdot[38] -= q; // ch3o2
  wdot[39] += q; // ch3o2h
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[38];
  J[2699] += dqdci; // dwdot[c4h7]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  J[2708] -= dqdci; // dwdot[ch3o2]/d[c4h8-1]
  J[2709] += dqdci; // dwdot[ch3o2h]/d[c4h8-1]
  // d()/d[ch3o2]
  dqdci = +k_f * sc[30];
  J[3411] += dqdci; // dwdot[c4h7]/d[ch3o2]
  J[3412] -= dqdci; // dwdot[c4h8-1]/d[ch3o2]
  J[3420] -= dqdci; // dwdot[ch3o2]/d[ch3o2]
  J[3421] += dqdci; // dwdot[ch3o2h]/d[ch3o2]
  // d()/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT
  J[7870] -= dqdT; // dwdot[ch3o2]/dT
  J[7871] += dqdT; // dwdot[ch3o2h]/dT

  // reaction 402: c4h7 + ch3o2h => c4h8-1 + ch3o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[29] * sc[39];
  k_f = 316000 * exp(-(6541.81665546136) * invT);
  dlnkfdT = (6541.81665546136) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[29] -= q; // c4h7
  wdot[30] += q; // c4h8-1
  wdot[38] += q; // ch3o2
  wdot[39] -= q; // ch3o2h
  // d()/d[c4h7]
  dqdci = +k_f * sc[39];
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  J[2611] += dqdci; // dwdot[c4h8-1]/d[c4h7]
  J[2619] += dqdci; // dwdot[ch3o2]/d[c4h7]
  J[2620] -= dqdci; // dwdot[ch3o2h]/d[c4h7]
  // d()/d[ch3o2h]
  dqdci = +k_f * sc[29];
  J[3500] -= dqdci; // dwdot[c4h7]/d[ch3o2h]
  J[3501] += dqdci; // dwdot[c4h8-1]/d[ch3o2h]
  J[3509] += dqdci; // dwdot[ch3o2]/d[ch3o2h]
  J[3510] -= dqdci; // dwdot[ch3o2h]/d[ch3o2h]
  // d()/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT
  J[7870] += dqdT; // dwdot[ch3o2]/dT
  J[7871] -= dqdT; // dwdot[ch3o2h]/dT

  // reaction 403: c4h8ooh1-3o2 => c4h8ooh1-3 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[44];
  k_f = 5.601e+22 * exp(-2.23 * logT - (19102.1046339472) * invT);
  dlnkfdT = -2.23 * invT + (19102.1046339472) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[44] -= q; // c4h8ooh1-3o2
  wdot[45] += q; // c4h8ooh1-3
  // d()/d[c4h8ooh1-3o2]
  dqdci = +k_f;
  J[3919] += dqdci; // dwdot[o2]/d[c4h8ooh1-3o2]
  J[3960] -= dqdci; // dwdot[c4h8ooh1-3o2]/d[c4h8ooh1-3o2]
  J[3961] += dqdci; // dwdot[c4h8ooh1-3]/d[c4h8ooh1-3o2]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7876] -= dqdT; // dwdot[c4h8ooh1-3o2]/dT
  J[7877] += dqdT; // dwdot[c4h8ooh1-3]/dT

  // reaction 404: c4h8ooh1-3 + o2 => c4h8ooh1-3o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[45];
  k_f = 7540000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[44] += q; // c4h8ooh1-3o2
  wdot[45] -= q; // c4h8ooh1-3
  // d()/d[o2]
  dqdci = +k_f * sc[45];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[311] += dqdci; // dwdot[c4h8ooh1-3o2]/d[o2]
  J[312] -= dqdci; // dwdot[c4h8ooh1-3]/d[o2]
  // d()/d[c4h8ooh1-3]
  dqdci = +k_f * sc[3];
  J[4008] -= dqdci; // dwdot[o2]/d[c4h8ooh1-3]
  J[4049] += dqdci; // dwdot[c4h8ooh1-3o2]/d[c4h8ooh1-3]
  J[4050] -= dqdci; // dwdot[c4h8ooh1-3]/d[c4h8ooh1-3]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7876] += dqdT; // dwdot[c4h8ooh1-3o2]/dT
  J[7877] -= dqdT; // dwdot[c4h8ooh1-3]/dT

  // reaction 405: c4h8ooh1-3o2 => nc4ket13 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[44];
  k_f = 25000000000 * exp(-(10768.836648221) * invT);
  dlnkfdT = (10768.836648221) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[44] -= q; // c4h8ooh1-3o2
  wdot[51] += q; // nc4ket13
  // d()/d[c4h8ooh1-3o2]
  dqdci = +k_f;
  J[3920] += dqdci; // dwdot[oh]/d[c4h8ooh1-3o2]
  J[3960] -= dqdci; // dwdot[c4h8ooh1-3o2]/d[c4h8ooh1-3o2]
  J[3967] += dqdci; // dwdot[nc4ket13]/d[c4h8ooh1-3o2]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7876] -= dqdT; // dwdot[c4h8ooh1-3o2]/dT
  J[7883] += dqdT; // dwdot[nc4ket13]/dT

  // reaction 406: nc4ket13 + oh => c4h8ooh1-3o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[51];
  k_f = 0.006893 * exp(1.3 * logT - (22493.784961471) * invT);
  dlnkfdT = 1.3 * invT + (22493.784961471) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[44] += q; // c4h8ooh1-3o2
  wdot[51] -= q; // nc4ket13
  // d()/d[oh]
  dqdci = +k_f * sc[51];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[400] += dqdci; // dwdot[c4h8ooh1-3o2]/d[oh]
  J[407] -= dqdci; // dwdot[nc4ket13]/d[oh]
  // d()/d[nc4ket13]
  dqdci = +k_f * sc[4];
  J[4543] -= dqdci; // dwdot[oh]/d[nc4ket13]
  J[4583] += dqdci; // dwdot[c4h8ooh1-3o2]/d[nc4ket13]
  J[4590] -= dqdci; // dwdot[nc4ket13]/d[nc4ket13]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7876] += dqdT; // dwdot[c4h8ooh1-3o2]/dT
  J[7883] -= dqdT; // dwdot[nc4ket13]/dT

  // reaction 407: c4h8ooh1-3 => c3h6 + ch2o + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[45];
  k_f = 66370000000000 * exp(-0.16 * logT - (15046.1783075611) * invT);
  dlnkfdT = -0.16 * invT + (15046.1783075611) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[13] += q; // ch2o
  wdot[26] += q; // c3h6
  wdot[45] -= q; // c4h8ooh1-3
  // d()/d[c4h8ooh1-3]
  dqdci = +k_f;
  J[4009] += dqdci; // dwdot[oh]/d[c4h8ooh1-3]
  J[4018] += dqdci; // dwdot[ch2o]/d[c4h8ooh1-3]
  J[4031] += dqdci; // dwdot[c3h6]/d[c4h8ooh1-3]
  J[4050] -= dqdci; // dwdot[c4h8ooh1-3]/d[c4h8ooh1-3]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7877] -= dqdT; // dwdot[c4h8ooh1-3]/dT

  // reaction 408: pc4h9o2 => c4h8ooh1-3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[46];
  k_f = 25000000000 * exp(-(10492.0674820284) * invT);
  dlnkfdT = (10492.0674820284) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[45] += q; // c4h8ooh1-3
  wdot[46] -= q; // pc4h9o2
  // d()/d[pc4h9o2]
  dqdci = +k_f;
  J[4139] += dqdci; // dwdot[c4h8ooh1-3]/d[pc4h9o2]
  J[4140] -= dqdci; // dwdot[pc4h9o2]/d[pc4h9o2]
  // d()/dT
  J[7877] += dqdT; // dwdot[c4h8ooh1-3]/dT
  J[7878] -= dqdT; // dwdot[pc4h9o2]/dT

  // reaction 409: c4h8ooh1-3 => pc4h9o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[45];
  k_f = 3231000000 * exp(-0.14 * logT - (3960.81837654895) * invT);
  dlnkfdT = -0.14 * invT + (3960.81837654895) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[45] -= q; // c4h8ooh1-3
  wdot[46] += q; // pc4h9o2
  // d()/d[c4h8ooh1-3]
  dqdci = +k_f;
  J[4050] -= dqdci; // dwdot[c4h8ooh1-3]/d[c4h8ooh1-3]
  J[4051] += dqdci; // dwdot[pc4h9o2]/d[c4h8ooh1-3]
  // d()/dT
  J[7877] -= dqdT; // dwdot[c4h8ooh1-3]/dT
  J[7878] += dqdT; // dwdot[pc4h9o2]/dT

  // reaction 410: c2h5cho + ch3o2 => c2h5co + ch3o2h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[33] * sc[38];
  k_f = 3010000 * exp(-(5998.34265639226) * invT);
  dlnkfdT = (5998.34265639226) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[33] -= q; // c2h5cho
  wdot[34] += q; // c2h5co
  wdot[38] -= q; // ch3o2
  wdot[39] += q; // ch3o2h
  // d()/d[c2h5cho]
  dqdci = +k_f * sc[38];
  J[2970] -= dqdci; // dwdot[c2h5cho]/d[c2h5cho]
  J[2971] += dqdci; // dwdot[c2h5co]/d[c2h5cho]
  J[2975] -= dqdci; // dwdot[ch3o2]/d[c2h5cho]
  J[2976] += dqdci; // dwdot[ch3o2h]/d[c2h5cho]
  // d()/d[ch3o2]
  dqdci = +k_f * sc[33];
  J[3415] -= dqdci; // dwdot[c2h5cho]/d[ch3o2]
  J[3416] += dqdci; // dwdot[c2h5co]/d[ch3o2]
  J[3420] -= dqdci; // dwdot[ch3o2]/d[ch3o2]
  J[3421] += dqdci; // dwdot[ch3o2h]/d[ch3o2]
  // d()/dT
  J[7865] -= dqdT; // dwdot[c2h5cho]/dT
  J[7866] += dqdT; // dwdot[c2h5co]/dT
  J[7870] -= dqdT; // dwdot[ch3o2]/dT
  J[7871] += dqdT; // dwdot[ch3o2h]/dT

  // reaction 411: c2h5co + ch3o2h => c2h5cho + ch3o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[34] * sc[39];
  k_f = 23580000 * exp(-0.51 * logT - (4520.3953089238) * invT);
  dlnkfdT = -0.51 * invT + (4520.3953089238) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[33] += q; // c2h5cho
  wdot[34] -= q; // c2h5co
  wdot[38] += q; // ch3o2
  wdot[39] -= q; // ch3o2h
  // d()/d[c2h5co]
  dqdci = +k_f * sc[39];
  J[3059] += dqdci; // dwdot[c2h5cho]/d[c2h5co]
  J[3060] -= dqdci; // dwdot[c2h5co]/d[c2h5co]
  J[3064] += dqdci; // dwdot[ch3o2]/d[c2h5co]
  J[3065] -= dqdci; // dwdot[ch3o2h]/d[c2h5co]
  // d()/d[ch3o2h]
  dqdci = +k_f * sc[34];
  J[3504] += dqdci; // dwdot[c2h5cho]/d[ch3o2h]
  J[3505] -= dqdci; // dwdot[c2h5co]/d[ch3o2h]
  J[3509] += dqdci; // dwdot[ch3o2]/d[ch3o2h]
  J[3510] -= dqdci; // dwdot[ch3o2h]/d[ch3o2h]
  // d()/dT
  J[7865] += dqdT; // dwdot[c2h5cho]/dT
  J[7866] -= dqdT; // dwdot[c2h5co]/dT
  J[7870] += dqdT; // dwdot[ch3o2]/dT
  J[7871] -= dqdT; // dwdot[ch3o2h]/dT

  // reaction 412: c2h5cho + c4h7 => c2h5co + c4h8-1
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[29] * sc[33];
  k_f = 1700000 * exp(-(4247.14865939183) * invT);
  dlnkfdT = (4247.14865939183) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[29] -= q; // c4h7
  wdot[30] += q; // c4h8-1
  wdot[33] -= q; // c2h5cho
  wdot[34] += q; // c2h5co
  // d()/d[c4h7]
  dqdci = +k_f * sc[33];
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  J[2611] += dqdci; // dwdot[c4h8-1]/d[c4h7]
  J[2614] -= dqdci; // dwdot[c2h5cho]/d[c4h7]
  J[2615] += dqdci; // dwdot[c2h5co]/d[c4h7]
  // d()/d[c2h5cho]
  dqdci = +k_f * sc[29];
  J[2966] -= dqdci; // dwdot[c4h7]/d[c2h5cho]
  J[2967] += dqdci; // dwdot[c4h8-1]/d[c2h5cho]
  J[2970] -= dqdci; // dwdot[c2h5cho]/d[c2h5cho]
  J[2971] += dqdci; // dwdot[c2h5co]/d[c2h5cho]
  // d()/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT
  J[7865] -= dqdT; // dwdot[c2h5cho]/dT
  J[7866] += dqdT; // dwdot[c2h5co]/dT

  // reaction 413: c2h5co + c4h8-1 => c2h5cho + c4h7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[30] * sc[34];
  k_f = 10000000 * exp(-(14090.0666425322) * invT);
  dlnkfdT = (14090.0666425322) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[29] += q; // c4h7
  wdot[30] -= q; // c4h8-1
  wdot[33] += q; // c2h5cho
  wdot[34] -= q; // c2h5co
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[34];
  J[2699] += dqdci; // dwdot[c4h7]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  J[2703] += dqdci; // dwdot[c2h5cho]/d[c4h8-1]
  J[2704] -= dqdci; // dwdot[c2h5co]/d[c4h8-1]
  // d()/d[c2h5co]
  dqdci = +k_f * sc[30];
  J[3055] += dqdci; // dwdot[c4h7]/d[c2h5co]
  J[3056] -= dqdci; // dwdot[c4h8-1]/d[c2h5co]
  J[3059] += dqdci; // dwdot[c2h5cho]/d[c2h5co]
  J[3060] -= dqdci; // dwdot[c2h5co]/d[c2h5co]
  // d()/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT
  J[7865] += dqdT; // dwdot[c2h5cho]/dT
  J[7866] -= dqdT; // dwdot[c2h5co]/dT

  // reaction 414: c3h4-a + ho2 => c2h4 + co + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[25];
  k_f = 1000000 * exp(-(7045.03332126608) * invT);
  dlnkfdT = (7045.03332126608) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[6] += q;  // co
  wdot[11] -= q; // ho2
  wdot[16] += q; // c2h4
  wdot[25] -= q; // c3h4-a
  // d()/d[ho2]
  dqdci = +k_f * sc[25];
  J[983] += dqdci;  // dwdot[oh]/d[ho2]
  J[985] += dqdci;  // dwdot[co]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[995] += dqdci;  // dwdot[c2h4]/d[ho2]
  J[1004] -= dqdci; // dwdot[c3h4-a]/d[ho2]
  // d()/d[c3h4-a]
  dqdci = +k_f * sc[11];
  J[2229] += dqdci; // dwdot[oh]/d[c3h4-a]
  J[2231] += dqdci; // dwdot[co]/d[c3h4-a]
  J[2236] -= dqdci; // dwdot[ho2]/d[c3h4-a]
  J[2241] += dqdci; // dwdot[c2h4]/d[c3h4-a]
  J[2250] -= dqdci; // dwdot[c3h4-a]/d[c3h4-a]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7857] -= dqdT; // dwdot[c3h4-a]/dT

  // reaction 415: c2h4 + co + oh => c3h4-a + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[6] * sc[16];
  k_f = 1e-12;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[6] -= q;  // co
  wdot[11] += q; // ho2
  wdot[16] -= q; // c2h4
  wdot[25] += q; // c3h4-a
  // d()/d[oh]
  dqdci = +k_f * sc[6] * sc[16];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[362] -= dqdci; // dwdot[co]/d[oh]
  J[367] += dqdci; // dwdot[ho2]/d[oh]
  J[372] -= dqdci; // dwdot[c2h4]/d[oh]
  J[381] += dqdci; // dwdot[c3h4-a]/d[oh]
  // d()/d[co]
  dqdci = +k_f * sc[4] * sc[16];
  J[538] -= dqdci; // dwdot[oh]/d[co]
  J[540] -= dqdci; // dwdot[co]/d[co]
  J[545] += dqdci; // dwdot[ho2]/d[co]
  J[550] -= dqdci; // dwdot[c2h4]/d[co]
  J[559] += dqdci; // dwdot[c3h4-a]/d[co]
  // d()/d[c2h4]
  dqdci = +k_f * sc[4] * sc[6];
  J[1428] -= dqdci; // dwdot[oh]/d[c2h4]
  J[1430] -= dqdci; // dwdot[co]/d[c2h4]
  J[1435] += dqdci; // dwdot[ho2]/d[c2h4]
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1449] += dqdci; // dwdot[c3h4-a]/d[c2h4]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7857] += dqdT; // dwdot[c3h4-a]/dT

  // reaction 416: c3h4-a + ho2 => c3h3 + h2o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[25];
  k_f = 30000000 * exp(-(7045.03332126608) * invT);
  dlnkfdT = (7045.03332126608) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  wdot[25] -= q; // c3h4-a
  wdot[48] += q; // c3h3
  // d()/d[ho2]
  dqdci = +k_f * sc[25];
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[991] += dqdci;  // dwdot[h2o2]/d[ho2]
  J[1004] -= dqdci; // dwdot[c3h4-a]/d[ho2]
  J[1027] += dqdci; // dwdot[c3h3]/d[ho2]
  // d()/d[c3h4-a]
  dqdci = +k_f * sc[11];
  J[2236] -= dqdci; // dwdot[ho2]/d[c3h4-a]
  J[2237] += dqdci; // dwdot[h2o2]/d[c3h4-a]
  J[2250] -= dqdci; // dwdot[c3h4-a]/d[c3h4-a]
  J[2273] += dqdci; // dwdot[c3h3]/d[c3h4-a]
  // d()/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT
  J[7857] -= dqdT; // dwdot[c3h4-a]/dT
  J[7880] += dqdT; // dwdot[c3h3]/dT

  // reaction 417: c3h3 + h2o2 => c3h4-a + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[48];
  k_f = 15510000000 * exp(-1.38 * logT - (22141.5332954077) * invT);
  dlnkfdT = -1.38 * invT + (22141.5332954077) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // ho2
  wdot[12] -= q; // h2o2
  wdot[25] += q; // c3h4-a
  wdot[48] -= q; // c3h3
  // d()/d[h2o2]
  dqdci = +k_f * sc[48];
  J[1079] += dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci; // dwdot[h2o2]/d[h2o2]
  J[1093] += dqdci; // dwdot[c3h4-a]/d[h2o2]
  J[1116] -= dqdci; // dwdot[c3h3]/d[h2o2]
  // d()/d[c3h3]
  dqdci = +k_f * sc[12];
  J[4283] += dqdci; // dwdot[ho2]/d[c3h3]
  J[4284] -= dqdci; // dwdot[h2o2]/d[c3h3]
  J[4297] += dqdci; // dwdot[c3h4-a]/d[c3h3]
  J[4320] -= dqdci; // dwdot[c3h3]/d[c3h3]
  // d()/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT; // dwdot[h2o2]/dT
  J[7857] += dqdT; // dwdot[c3h4-a]/dT
  J[7880] -= dqdT; // dwdot[c3h3]/dT

  // reaction 418: c3h6 + o2 => c3h5-a + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[26];
  k_f = 4000000 * exp(-(20078.3449656083) * invT);
  dlnkfdT = (20078.3449656083) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[26] -= q; // c3h6
  wdot[47] += q; // c3h5-a
  // d()/d[o2]
  dqdci = +k_f * sc[26];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[293] -= dqdci; // dwdot[c3h6]/d[o2]
  J[314] += dqdci; // dwdot[c3h5-a]/d[o2]
  // d()/d[c3h6]
  dqdci = +k_f * sc[3];
  J[2317] -= dqdci; // dwdot[o2]/d[c3h6]
  J[2325] += dqdci; // dwdot[ho2]/d[c3h6]
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  J[2361] += dqdci; // dwdot[c3h5-a]/d[c3h6]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 419: c3h5-a + ho2 => c3h6 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[47];
  k_f = 33320 * exp(0.34 * logT - (-279.788466187424) * invT);
  dlnkfdT = 0.34 * invT + (-279.788466187424) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[26] += q; // c3h6
  wdot[47] -= q; // c3h5-a
  // d()/d[ho2]
  dqdci = +k_f * sc[47];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1005] += dqdci; // dwdot[c3h6]/d[ho2]
  J[1026] -= dqdci; // dwdot[c3h5-a]/d[ho2]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[11];
  J[4186] += dqdci; // dwdot[o2]/d[c3h5-a]
  J[4194] -= dqdci; // dwdot[ho2]/d[c3h5-a]
  J[4209] += dqdci; // dwdot[c3h6]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 420: c3h6 + ch3 => c3h5-a + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[26];
  k_f = 2.21e-06 * exp(3.5 * logT - (2855.75457844178) * invT);
  dlnkfdT = 3.5 * invT + (2855.75457844178) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[26] -= q; // c3h6
  wdot[47] += q; // c3h5-a
  // d()/d[ch3]
  dqdci = +k_f * sc[26];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[827] -= dqdci; // dwdot[c3h6]/d[ch3]
  J[848] += dqdci; // dwdot[c3h5-a]/d[ch3]
  // d()/d[c3h6]
  dqdci = +k_f * sc[9];
  J[2323] -= dqdci; // dwdot[ch3]/d[c3h6]
  J[2324] += dqdci; // dwdot[ch4]/d[c3h6]
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  J[2361] += dqdci; // dwdot[c3h5-a]/d[c3h6]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 421: c3h5-a + ch4 => c3h6 + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[47];
  k_f = 2.647e-05 * exp(3.51 * logT - (11664.5623133534) * invT);
  dlnkfdT = 3.51 * invT + (11664.5623133534) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[26] += q; // c3h6
  wdot[47] -= q; // c3h5-a
  // d()/d[ch4]
  dqdci = +k_f * sc[47];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[916] += dqdci; // dwdot[c3h6]/d[ch4]
  J[937] -= dqdci; // dwdot[c3h5-a]/d[ch4]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[10];
  J[4192] += dqdci; // dwdot[ch3]/d[c3h5-a]
  J[4193] -= dqdci; // dwdot[ch4]/d[c3h5-a]
  J[4209] += dqdci; // dwdot[c3h6]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 422: c2h5 + c3h6 => c2h6 + c3h5-a
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[26];
  k_f = 100000 * exp(-(4931.52332488625) * invT);
  dlnkfdT = (4931.52332488625) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[15] += q; // c2h6
  wdot[17] -= q; // c2h5
  wdot[26] -= q; // c3h6
  wdot[47] += q; // c3h5-a
  // d()/d[c2h5]
  dqdci = +k_f * sc[26];
  J[1528] += dqdci; // dwdot[c2h6]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1539] -= dqdci; // dwdot[c3h6]/d[c2h5]
  J[1560] += dqdci; // dwdot[c3h5-a]/d[c2h5]
  // d()/d[c3h6]
  dqdci = +k_f * sc[17];
  J[2329] += dqdci; // dwdot[c2h6]/d[c3h6]
  J[2331] -= dqdci; // dwdot[c2h5]/d[c3h6]
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  J[2361] += dqdci; // dwdot[c3h5-a]/d[c3h6]
  // d()/dT
  J[7847] += dqdT; // dwdot[c2h6]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 423: c2h6 + c3h5-a => c2h5 + c3h6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[47];
  k_f = 0.5369 * exp(1.33 * logT - (8272.88198582959) * invT);
  dlnkfdT = 1.33 * invT + (8272.88198582959) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[15] -= q; // c2h6
  wdot[17] += q; // c2h5
  wdot[26] += q; // c3h6
  wdot[47] -= q; // c3h5-a
  // d()/d[c2h6]
  dqdci = +k_f * sc[47];
  J[1350] -= dqdci; // dwdot[c2h6]/d[c2h6]
  J[1352] += dqdci; // dwdot[c2h5]/d[c2h6]
  J[1361] += dqdci; // dwdot[c3h6]/d[c2h6]
  J[1382] -= dqdci; // dwdot[c3h5-a]/d[c2h6]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[15];
  J[4198] -= dqdci; // dwdot[c2h6]/d[c3h5-a]
  J[4200] += dqdci; // dwdot[c2h5]/d[c3h5-a]
  J[4209] += dqdci; // dwdot[c3h6]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7847] -= dqdT; // dwdot[c2h6]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 424: c3h5-a + ho2 => c2h3 + ch2o + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[47];
  k_f = 1e-24;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[11] -= q; // ho2
  wdot[13] += q; // ch2o
  wdot[19] += q; // c2h3
  wdot[47] -= q; // c3h5-a
  // d()/d[ho2]
  dqdci = +k_f * sc[47];
  J[983] += dqdci;  // dwdot[oh]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[992] += dqdci;  // dwdot[ch2o]/d[ho2]
  J[998] += dqdci;  // dwdot[c2h3]/d[ho2]
  J[1026] -= dqdci; // dwdot[c3h5-a]/d[ho2]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[11];
  J[4187] += dqdci; // dwdot[oh]/d[c3h5-a]
  J[4194] -= dqdci; // dwdot[ho2]/d[c3h5-a]
  J[4196] += dqdci; // dwdot[ch2o]/d[c3h5-a]
  J[4202] += dqdci; // dwdot[c2h3]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 425: c2h3 + ch2o + oh => c3h5-a + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[13] * sc[19];
  k_f = 1e-42;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[11] += q; // ho2
  wdot[13] -= q; // ch2o
  wdot[19] -= q; // c2h3
  wdot[47] += q; // c3h5-a
  // d()/d[oh]
  dqdci = +k_f * sc[13] * sc[19];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[367] += dqdci; // dwdot[ho2]/d[oh]
  J[369] -= dqdci; // dwdot[ch2o]/d[oh]
  J[375] -= dqdci; // dwdot[c2h3]/d[oh]
  J[403] += dqdci; // dwdot[c3h5-a]/d[oh]
  // d()/d[ch2o]
  dqdci = +k_f * sc[4] * sc[19];
  J[1161] -= dqdci; // dwdot[oh]/d[ch2o]
  J[1168] += dqdci; // dwdot[ho2]/d[ch2o]
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  J[1176] -= dqdci; // dwdot[c2h3]/d[ch2o]
  J[1204] += dqdci; // dwdot[c3h5-a]/d[ch2o]
  // d()/d[c2h3]
  dqdci = +k_f * sc[4] * sc[13];
  J[1695] -= dqdci; // dwdot[oh]/d[c2h3]
  J[1702] += dqdci; // dwdot[ho2]/d[c2h3]
  J[1704] -= dqdci; // dwdot[ch2o]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  J[1738] += dqdci; // dwdot[c3h5-a]/d[c2h3]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 426: c3h5-a + h => c3h4-a + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[47];
  k_f = 18100000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[25] += q; // c3h4-a
  wdot[47] -= q; // c3h5-a
  // d()/d[h]
  dqdci = +k_f * sc[47];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[25] += dqdci; // dwdot[c3h4-a]/d[h]
  J[47] -= dqdci; // dwdot[c3h5-a]/d[h]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[0];
  J[4183] -= dqdci; // dwdot[h]/d[c3h5-a]
  J[4184] += dqdci; // dwdot[h2]/d[c3h5-a]
  J[4208] += dqdci; // dwdot[c3h4-a]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7857] += dqdT; // dwdot[c3h4-a]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 427: c3h4-a + h2 => c3h5-a + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[25];
  k_f = 12300000 * exp(0.12 * logT - (23766.9231259569) * invT);
  dlnkfdT = 0.12 * invT + (23766.9231259569) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[25] -= q; // c3h4-a
  wdot[47] += q; // c3h5-a
  // d()/d[h2]
  dqdci = +k_f * sc[25];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[114] -= dqdci; // dwdot[c3h4-a]/d[h2]
  J[136] += dqdci; // dwdot[c3h5-a]/d[h2]
  // d()/d[c3h4-a]
  dqdci = +k_f * sc[1];
  J[2225] += dqdci; // dwdot[h]/d[c3h4-a]
  J[2226] -= dqdci; // dwdot[h2]/d[c3h4-a]
  J[2250] -= dqdci; // dwdot[c3h4-a]/d[c3h4-a]
  J[2272] += dqdci; // dwdot[c3h5-a]/d[c3h4-a]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7857] -= dqdT; // dwdot[c3h4-a]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 428: c3h5-a + ch3 => c3h4-a + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[47];
  k_f = 100000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[25] += q; // c3h4-a
  wdot[47] -= q; // c3h5-a
  // d()/d[ch3]
  dqdci = +k_f * sc[47];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[826] += dqdci; // dwdot[c3h4-a]/d[ch3]
  J[848] -= dqdci; // dwdot[c3h5-a]/d[ch3]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[9];
  J[4192] -= dqdci; // dwdot[ch3]/d[c3h5-a]
  J[4193] += dqdci; // dwdot[ch4]/d[c3h5-a]
  J[4208] += dqdci; // dwdot[c3h4-a]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7857] += dqdT; // dwdot[c3h4-a]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 429: c3h4-a + ch4 => c3h5-a + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[25];
  k_f = 4921000 * exp(0.05 * logT - (24043.6922921495) * invT);
  dlnkfdT = 0.05 * invT + (24043.6922921495) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[25] -= q; // c3h4-a
  wdot[47] += q; // c3h5-a
  // d()/d[ch4]
  dqdci = +k_f * sc[25];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[915] -= dqdci; // dwdot[c3h4-a]/d[ch4]
  J[937] += dqdci; // dwdot[c3h5-a]/d[ch4]
  // d()/d[c3h4-a]
  dqdci = +k_f * sc[10];
  J[2234] += dqdci; // dwdot[ch3]/d[c3h4-a]
  J[2235] -= dqdci; // dwdot[ch4]/d[c3h4-a]
  J[2250] -= dqdci; // dwdot[c3h4-a]/d[c3h4-a]
  J[2272] += dqdci; // dwdot[c3h5-a]/d[c3h4-a]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7857] -= dqdT; // dwdot[c3h4-a]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 430: c2h5 + c3h5-a => c2h6 + c3h4-a
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[47];
  k_f = 400000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[15] += q; // c2h6
  wdot[17] -= q; // c2h5
  wdot[25] += q; // c3h4-a
  wdot[47] -= q; // c3h5-a
  // d()/d[c2h5]
  dqdci = +k_f * sc[47];
  J[1528] += dqdci; // dwdot[c2h6]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1538] += dqdci; // dwdot[c3h4-a]/d[c2h5]
  J[1560] -= dqdci; // dwdot[c3h5-a]/d[c2h5]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[17];
  J[4198] += dqdci; // dwdot[c2h6]/d[c3h5-a]
  J[4200] -= dqdci; // dwdot[c2h5]/d[c3h5-a]
  J[4208] += dqdci; // dwdot[c3h4-a]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7847] += dqdT; // dwdot[c2h6]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7857] += dqdT; // dwdot[c3h4-a]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 431: c2h6 + c3h4-a => c2h5 + c3h5-a
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[25];
  k_f = 1802000 * exp(0.05 * logT - (20294.7281319043) * invT);
  dlnkfdT = 0.05 * invT + (20294.7281319043) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[15] -= q; // c2h6
  wdot[17] += q; // c2h5
  wdot[25] -= q; // c3h4-a
  wdot[47] += q; // c3h5-a
  // d()/d[c2h6]
  dqdci = +k_f * sc[25];
  J[1350] -= dqdci; // dwdot[c2h6]/d[c2h6]
  J[1352] += dqdci; // dwdot[c2h5]/d[c2h6]
  J[1360] -= dqdci; // dwdot[c3h4-a]/d[c2h6]
  J[1382] += dqdci; // dwdot[c3h5-a]/d[c2h6]
  // d()/d[c3h4-a]
  dqdci = +k_f * sc[15];
  J[2240] -= dqdci; // dwdot[c2h6]/d[c3h4-a]
  J[2242] += dqdci; // dwdot[c2h5]/d[c3h4-a]
  J[2250] -= dqdci; // dwdot[c3h4-a]/d[c3h4-a]
  J[2272] += dqdci; // dwdot[c3h5-a]/d[c3h4-a]
  // d()/dT
  J[7847] -= dqdT; // dwdot[c2h6]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7857] -= dqdT; // dwdot[c3h4-a]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 432: c2h5 + c3h5-a => c2h4 + c3h6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[47];
  k_f = 400000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] += q; // c2h4
  wdot[17] -= q; // c2h5
  wdot[26] += q; // c3h6
  wdot[47] -= q; // c3h5-a
  // d()/d[c2h5]
  dqdci = +k_f * sc[47];
  J[1529] += dqdci; // dwdot[c2h4]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1539] += dqdci; // dwdot[c3h6]/d[c2h5]
  J[1560] -= dqdci; // dwdot[c3h5-a]/d[c2h5]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[17];
  J[4199] += dqdci; // dwdot[c2h4]/d[c3h5-a]
  J[4200] -= dqdci; // dwdot[c2h5]/d[c3h5-a]
  J[4209] += dqdci; // dwdot[c3h6]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 433: c2h4 + c3h6 => c2h5 + c3h5-a
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[26];
  k_f = 69370000000 * exp(-1.33 * logT - (26569.8399544892) * invT);
  dlnkfdT = -1.33 * invT + (26569.8399544892) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] -= q; // c2h4
  wdot[17] += q; // c2h5
  wdot[26] -= q; // c3h6
  wdot[47] += q; // c3h5-a
  // d()/d[c2h4]
  dqdci = +k_f * sc[26];
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1441] += dqdci; // dwdot[c2h5]/d[c2h4]
  J[1450] -= dqdci; // dwdot[c3h6]/d[c2h4]
  J[1471] += dqdci; // dwdot[c3h5-a]/d[c2h4]
  // d()/d[c3h6]
  dqdci = +k_f * sc[16];
  J[2330] -= dqdci; // dwdot[c2h4]/d[c3h6]
  J[2331] += dqdci; // dwdot[c2h5]/d[c3h6]
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  J[2361] += dqdci; // dwdot[c3h5-a]/d[c3h6]
  // d()/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 434: c2h3 + c3h5-a => c2h4 + c3h4-a
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[47];
  k_f = 1000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] += q; // c2h4
  wdot[19] -= q; // c2h3
  wdot[25] += q; // c3h4-a
  wdot[47] -= q; // c3h5-a
  // d()/d[c2h3]
  dqdci = +k_f * sc[47];
  J[1707] += dqdci; // dwdot[c2h4]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  J[1716] += dqdci; // dwdot[c3h4-a]/d[c2h3]
  J[1738] -= dqdci; // dwdot[c3h5-a]/d[c2h3]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[19];
  J[4199] += dqdci; // dwdot[c2h4]/d[c3h5-a]
  J[4202] -= dqdci; // dwdot[c2h3]/d[c3h5-a]
  J[4208] += dqdci; // dwdot[c3h4-a]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT
  J[7857] += dqdT; // dwdot[c3h4-a]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 435: c2h4 + c3h4-a => c2h3 + c3h5-a
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[25];
  k_f = 16240000 * exp(0.05 * logT - (24250.0111251294) * invT);
  dlnkfdT = 0.05 * invT + (24250.0111251294) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] -= q; // c2h4
  wdot[19] += q; // c2h3
  wdot[25] -= q; // c3h4-a
  wdot[47] += q; // c3h5-a
  // d()/d[c2h4]
  dqdci = +k_f * sc[25];
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1443] += dqdci; // dwdot[c2h3]/d[c2h4]
  J[1449] -= dqdci; // dwdot[c3h4-a]/d[c2h4]
  J[1471] += dqdci; // dwdot[c3h5-a]/d[c2h4]
  // d()/d[c3h4-a]
  dqdci = +k_f * sc[16];
  J[2241] -= dqdci; // dwdot[c2h4]/d[c3h4-a]
  J[2244] += dqdci; // dwdot[c2h3]/d[c3h4-a]
  J[2250] -= dqdci; // dwdot[c3h4-a]/d[c3h4-a]
  J[2272] += dqdci; // dwdot[c3h5-a]/d[c3h4-a]
  // d()/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT
  J[7857] -= dqdT; // dwdot[c3h4-a]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 436: c3h4-a + c3h6 => 2 c3h5-a
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[25] * sc[26];
  k_f = 839100000000 * exp(-1.29 * logT - (16953.369470961) * invT);
  dlnkfdT = -1.29 * invT + (16953.369470961) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[25] -= q;     // c3h4-a
  wdot[26] -= q;     // c3h6
  wdot[47] += 2 * q; // c3h5-a
  // d()/d[c3h4-a]
  dqdci = +k_f * sc[26];
  J[2250] -= dqdci;     // dwdot[c3h4-a]/d[c3h4-a]
  J[2251] -= dqdci;     // dwdot[c3h6]/d[c3h4-a]
  J[2272] += 2 * dqdci; // dwdot[c3h5-a]/d[c3h4-a]
  // d()/d[c3h6]
  dqdci = +k_f * sc[25];
  J[2339] -= dqdci;     // dwdot[c3h4-a]/d[c3h6]
  J[2340] -= dqdci;     // dwdot[c3h6]/d[c3h6]
  J[2361] += 2 * dqdci; // dwdot[c3h5-a]/d[c3h6]
  // d()/dT
  J[7857] -= dqdT;     // dwdot[c3h4-a]/dT
  J[7858] -= dqdT;     // dwdot[c3h6]/dT
  J[7879] += 2 * dqdT; // dwdot[c3h5-a]/dT

  // reaction 437: 2 c3h5-a => c3h4-a + c3h6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[47] * sc[47]);
  k_f = 1000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[25] += q;     // c3h4-a
  wdot[26] += q;     // c3h6
  wdot[47] -= 2 * q; // c3h5-a
  // d()/d[c3h5-a]
  dqdci = +k_f * 2.000000 * sc[47];
  J[4208] += dqdci;      // dwdot[c3h4-a]/d[c3h5-a]
  J[4209] += dqdci;      // dwdot[c3h6]/d[c3h5-a]
  J[4230] += -2 * dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7857] += dqdT;      // dwdot[c3h4-a]/dT
  J[7858] += dqdT;      // dwdot[c3h6]/dT
  J[7879] += -2 * dqdT; // dwdot[c3h5-a]/dT

  // reaction 438: c3h5-a + o2 => c2h3cho + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[47];
  k_f = 24700000 * exp(-0.44 * logT - (11584.0476468246) * invT);
  dlnkfdT = -0.44 * invT + (11584.0476468246) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[4] += q;  // oh
  wdot[41] += q; // c2h3cho
  wdot[47] -= q; // c3h5-a
  // d()/d[o2]
  dqdci = +k_f * sc[47];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[271] += dqdci; // dwdot[oh]/d[o2]
  J[308] += dqdci; // dwdot[c2h3cho]/d[o2]
  J[314] -= dqdci; // dwdot[c3h5-a]/d[o2]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[3];
  J[4186] -= dqdci; // dwdot[o2]/d[c3h5-a]
  J[4187] += dqdci; // dwdot[oh]/d[c3h5-a]
  J[4224] += dqdci; // dwdot[c2h3cho]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7873] += dqdT; // dwdot[c2h3cho]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 439: c2h3cho + oh => c3h5-a + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[41];
  k_f = 190300000 * exp(-0.8 * logT - (37680.8639354574) * invT);
  dlnkfdT = -0.8 * invT + (37680.8639354574) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[4] -= q;  // oh
  wdot[41] -= q; // c2h3cho
  wdot[47] += q; // c3h5-a
  // d()/d[oh]
  dqdci = +k_f * sc[41];
  J[359] += dqdci; // dwdot[o2]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[397] -= dqdci; // dwdot[c2h3cho]/d[oh]
  J[403] += dqdci; // dwdot[c3h5-a]/d[oh]
  // d()/d[c2h3cho]
  dqdci = +k_f * sc[4];
  J[3652] += dqdci; // dwdot[o2]/d[c2h3cho]
  J[3653] -= dqdci; // dwdot[oh]/d[c2h3cho]
  J[3690] -= dqdci; // dwdot[c2h3cho]/d[c2h3cho]
  J[3696] += dqdci; // dwdot[c3h5-a]/d[c2h3cho]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7873] -= dqdT; // dwdot[c2h3cho]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 442: c3h4-a + o2 => c3h3 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[25];
  k_f = 40000000 * exp(-(19705.9646329128) * invT);
  dlnkfdT = (19705.9646329128) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[25] -= q; // c3h4-a
  wdot[48] += q; // c3h3
  // d()/d[o2]
  dqdci = +k_f * sc[25];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[292] -= dqdci; // dwdot[c3h4-a]/d[o2]
  J[315] += dqdci; // dwdot[c3h3]/d[o2]
  // d()/d[c3h4-a]
  dqdci = +k_f * sc[3];
  J[2228] -= dqdci; // dwdot[o2]/d[c3h4-a]
  J[2236] += dqdci; // dwdot[ho2]/d[c3h4-a]
  J[2250] -= dqdci; // dwdot[c3h4-a]/d[c3h4-a]
  J[2273] += dqdci; // dwdot[c3h3]/d[c3h4-a]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7857] -= dqdT; // dwdot[c3h4-a]/dT
  J[7880] += dqdT; // dwdot[c3h3]/dT

  // reaction 443: c3h3 + ho2 => c3h4-a + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[48];
  k_f = 117500 * exp(0.3 * logT - (19.1222333005793) * invT);
  dlnkfdT = 0.3 * invT + (19.1222333005793) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[25] += q; // c3h4-a
  wdot[48] -= q; // c3h3
  // d()/d[ho2]
  dqdci = +k_f * sc[48];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1004] += dqdci; // dwdot[c3h4-a]/d[ho2]
  J[1027] -= dqdci; // dwdot[c3h3]/d[ho2]
  // d()/d[c3h3]
  dqdci = +k_f * sc[11];
  J[4275] += dqdci; // dwdot[o2]/d[c3h3]
  J[4283] -= dqdci; // dwdot[ho2]/d[c3h3]
  J[4297] += dqdci; // dwdot[c3h4-a]/d[c3h3]
  J[4320] -= dqdci; // dwdot[c3h3]/d[c3h3]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7857] += dqdT; // dwdot[c3h4-a]/dT
  J[7880] -= dqdT; // dwdot[c3h3]/dT

  // reaction 444: c3h3 + h => c3h2 + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[48];
  k_f = 50000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[48] -= q; // c3h3
  wdot[49] += q; // c3h2
  // d()/d[h]
  dqdci = +k_f * sc[48];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[48] -= dqdci; // dwdot[c3h3]/d[h]
  J[49] += dqdci; // dwdot[c3h2]/d[h]
  // d()/d[c3h3]
  dqdci = +k_f * sc[0];
  J[4272] -= dqdci; // dwdot[h]/d[c3h3]
  J[4273] += dqdci; // dwdot[h2]/d[c3h3]
  J[4320] -= dqdci; // dwdot[c3h3]/d[c3h3]
  J[4321] += dqdci; // dwdot[c3h2]/d[c3h3]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7880] -= dqdT; // dwdot[c3h3]/dT
  J[7881] += dqdT; // dwdot[c3h2]/dT

  // reaction 445: c3h2 + h2 => c3h3 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[49];
  k_f = 38530 * exp(0.38 * logT - (2314.79666270171) * invT);
  dlnkfdT = 0.38 * invT + (2314.79666270171) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[48] += q; // c3h3
  wdot[49] -= q; // c3h2
  // d()/d[h2]
  dqdci = +k_f * sc[49];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[137] += dqdci; // dwdot[c3h3]/d[h2]
  J[138] -= dqdci; // dwdot[c3h2]/d[h2]
  // d()/d[c3h2]
  dqdci = +k_f * sc[1];
  J[4361] += dqdci; // dwdot[h]/d[c3h2]
  J[4362] -= dqdci; // dwdot[h2]/d[c3h2]
  J[4409] += dqdci; // dwdot[c3h3]/d[c3h2]
  J[4410] -= dqdci; // dwdot[c3h2]/d[c3h2]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7880] += dqdT; // dwdot[c3h3]/dT
  J[7881] -= dqdT; // dwdot[c3h2]/dT

  // reaction 446: c3h4-a + oh => c3h3 + h2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[25];
  k_f = 10 * exp(2 * logT - (503.21666580472) * invT);
  dlnkfdT = 2 * invT + (503.21666580472) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[25] -= q; // c3h4-a
  wdot[48] += q; // c3h3
  // d()/d[oh]
  dqdci = +k_f * sc[25];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[381] -= dqdci; // dwdot[c3h4-a]/d[oh]
  J[404] += dqdci; // dwdot[c3h3]/d[oh]
  // d()/d[c3h4-a]
  dqdci = +k_f * sc[4];
  J[2229] -= dqdci; // dwdot[oh]/d[c3h4-a]
  J[2230] += dqdci; // dwdot[h2o]/d[c3h4-a]
  J[2250] -= dqdci; // dwdot[c3h4-a]/d[c3h4-a]
  J[2273] += dqdci; // dwdot[c3h3]/d[c3h4-a]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7857] -= dqdT; // dwdot[c3h4-a]/dT
  J[7880] += dqdT; // dwdot[c3h3]/dT

  // reaction 447: c3h3 + h2o => c3h4-a + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[48];
  k_f = 7.003 * exp(1.97 * logT - (17371.0393035789) * invT);
  dlnkfdT = 1.97 * invT + (17371.0393035789) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[25] += q; // c3h4-a
  wdot[48] -= q; // c3h3
  // d()/d[h2o]
  dqdci = +k_f * sc[48];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[470] += dqdci; // dwdot[c3h4-a]/d[h2o]
  J[493] -= dqdci; // dwdot[c3h3]/d[h2o]
  // d()/d[c3h3]
  dqdci = +k_f * sc[5];
  J[4276] += dqdci; // dwdot[oh]/d[c3h3]
  J[4277] -= dqdci; // dwdot[h2o]/d[c3h3]
  J[4297] += dqdci; // dwdot[c3h4-a]/d[c3h3]
  J[4320] -= dqdci; // dwdot[c3h3]/d[c3h3]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7857] += dqdT; // dwdot[c3h4-a]/dT
  J[7880] -= dqdT; // dwdot[c3h3]/dT

  // reaction 448: c3h4-a + o => c2h4 + co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[25];
  k_f = 7800000 * exp(-(805.146665287552) * invT);
  dlnkfdT = (805.146665287552) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[6] += q;  // co
  wdot[16] += q; // c2h4
  wdot[25] -= q; // c3h4-a
  // d()/d[o]
  dqdci = +k_f * sc[25];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[184] += dqdci; // dwdot[co]/d[o]
  J[194] += dqdci; // dwdot[c2h4]/d[o]
  J[203] -= dqdci; // dwdot[c3h4-a]/d[o]
  // d()/d[c3h4-a]
  dqdci = +k_f * sc[2];
  J[2227] -= dqdci; // dwdot[o]/d[c3h4-a]
  J[2231] += dqdci; // dwdot[co]/d[c3h4-a]
  J[2241] += dqdci; // dwdot[c2h4]/d[c3h4-a]
  J[2250] -= dqdci; // dwdot[c3h4-a]/d[c3h4-a]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7857] -= dqdT; // dwdot[c3h4-a]/dT

  // reaction 449: c2h4 + co => c3h4-a + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[16];
  k_f = 82800000 * exp(-0.21 * logT - (62801.439892429) * invT);
  dlnkfdT = -0.21 * invT + (62801.439892429) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[6] -= q;  // co
  wdot[16] -= q; // c2h4
  wdot[25] += q; // c3h4-a
  // d()/d[co]
  dqdci = +k_f * sc[16];
  J[536] += dqdci; // dwdot[o]/d[co]
  J[540] -= dqdci; // dwdot[co]/d[co]
  J[550] -= dqdci; // dwdot[c2h4]/d[co]
  J[559] += dqdci; // dwdot[c3h4-a]/d[co]
  // d()/d[c2h4]
  dqdci = +k_f * sc[6];
  J[1426] += dqdci; // dwdot[o]/d[c2h4]
  J[1430] -= dqdci; // dwdot[co]/d[c2h4]
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1449] += dqdci; // dwdot[c3h4-a]/d[c2h4]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7857] += dqdT; // dwdot[c3h4-a]/dT

  // reaction 450: c3h2 + oh => c2h2 + hco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[49];
  k_f = 50000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[7] += q;  // hco
  wdot[18] += q; // c2h2
  wdot[49] -= q; // c3h2
  // d()/d[oh]
  dqdci = +k_f * sc[49];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[363] += dqdci; // dwdot[hco]/d[oh]
  J[374] += dqdci; // dwdot[c2h2]/d[oh]
  J[405] -= dqdci; // dwdot[c3h2]/d[oh]
  // d()/d[c3h2]
  dqdci = +k_f * sc[4];
  J[4365] -= dqdci; // dwdot[oh]/d[c3h2]
  J[4368] += dqdci; // dwdot[hco]/d[c3h2]
  J[4379] += dqdci; // dwdot[c2h2]/d[c3h2]
  J[4410] -= dqdci; // dwdot[c3h2]/d[c3h2]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7839] += dqdT; // dwdot[hco]/dT
  J[7850] += dqdT; // dwdot[c2h2]/dT
  J[7881] -= dqdT; // dwdot[c3h2]/dT

  // reaction 451: c2h2 + hco => c3h2 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[18];
  k_f = 290700000000000 * exp(-1.39 * logT - (39512.5725989866) * invT);
  dlnkfdT = -1.39 * invT + (39512.5725989866) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[7] -= q;  // hco
  wdot[18] -= q; // c2h2
  wdot[49] += q; // c3h2
  // d()/d[hco]
  dqdci = +k_f * sc[18];
  J[627] += dqdci; // dwdot[oh]/d[hco]
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  J[641] -= dqdci; // dwdot[c2h2]/d[hco]
  J[672] += dqdci; // dwdot[c3h2]/d[hco]
  // d()/d[c2h2]
  dqdci = +k_f * sc[7];
  J[1606] += dqdci; // dwdot[oh]/d[c2h2]
  J[1609] -= dqdci; // dwdot[hco]/d[c2h2]
  J[1620] -= dqdci; // dwdot[c2h2]/d[c2h2]
  J[1651] += dqdci; // dwdot[c3h2]/d[c2h2]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7839] -= dqdT; // dwdot[hco]/dT
  J[7850] -= dqdT; // dwdot[c2h2]/dT
  J[7881] += dqdT; // dwdot[c3h2]/dT

  // reaction 452: c3h5-a => c3h4-a + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[47];
  k_f = 6.663e+15 * exp(-0.43 * logT - (31813.3576121744) * invT);
  dlnkfdT = -0.43 * invT + (31813.3576121744) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[25] += q; // c3h4-a
  wdot[47] -= q; // c3h5-a
  // d()/d[c3h5-a]
  dqdci = +k_f;
  J[4183] += dqdci; // dwdot[h]/d[c3h5-a]
  J[4208] += dqdci; // dwdot[c3h4-a]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7857] += dqdT; // dwdot[c3h4-a]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 453: c3h4-a + h => c3h5-a
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[25];
  k_f = 240000 * exp(0.69 * logT - (1513.17251407479) * invT);
  dlnkfdT = 0.69 * invT + (1513.17251407479) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[25] -= q; // c3h4-a
  wdot[47] += q; // c3h5-a
  // d()/d[h]
  dqdci = +k_f * sc[25];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[25] -= dqdci; // dwdot[c3h4-a]/d[h]
  J[47] += dqdci; // dwdot[c3h5-a]/d[h]
  // d()/d[c3h4-a]
  dqdci = +k_f * sc[0];
  J[2225] -= dqdci; // dwdot[h]/d[c3h4-a]
  J[2250] -= dqdci; // dwdot[c3h4-a]/d[c3h4-a]
  J[2272] += dqdci; // dwdot[c3h5-a]/d[c3h4-a]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7857] -= dqdT; // dwdot[c3h4-a]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 454: c3h4-a + h => c3h3 + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[25];
  k_f = 20 * exp(2 * logT - (2516.0833290236) * invT);
  dlnkfdT = 2 * invT + (2516.0833290236) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[25] -= q; // c3h4-a
  wdot[48] += q; // c3h3
  // d()/d[h]
  dqdci = +k_f * sc[25];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[25] -= dqdci; // dwdot[c3h4-a]/d[h]
  J[48] += dqdci; // dwdot[c3h3]/d[h]
  // d()/d[c3h4-a]
  dqdci = +k_f * sc[0];
  J[2225] -= dqdci; // dwdot[h]/d[c3h4-a]
  J[2226] += dqdci; // dwdot[h2]/d[c3h4-a]
  J[2250] -= dqdci; // dwdot[c3h4-a]/d[c3h4-a]
  J[2273] += dqdci; // dwdot[c3h3]/d[c3h4-a]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7857] -= dqdT; // dwdot[c3h4-a]/dT
  J[7880] += dqdT; // dwdot[c3h3]/dT

  // reaction 455: c3h3 + h2 => c3h4-a + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[48];
  k_f = 3.235 * exp(1.97 * logT - (11755.1413131983) * invT);
  dlnkfdT = 1.97 * invT + (11755.1413131983) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[25] += q; // c3h4-a
  wdot[48] -= q; // c3h3
  // d()/d[h2]
  dqdci = +k_f * sc[48];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[114] += dqdci; // dwdot[c3h4-a]/d[h2]
  J[137] -= dqdci; // dwdot[c3h3]/d[h2]
  // d()/d[c3h3]
  dqdci = +k_f * sc[1];
  J[4272] += dqdci; // dwdot[h]/d[c3h3]
  J[4273] -= dqdci; // dwdot[h2]/d[c3h3]
  J[4297] += dqdci; // dwdot[c3h4-a]/d[c3h3]
  J[4320] -= dqdci; // dwdot[c3h3]/d[c3h3]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7857] += dqdT; // dwdot[c3h4-a]/dT
  J[7880] -= dqdT; // dwdot[c3h3]/dT

  // reaction 456: c3h4-a + ch3 => c3h3 + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[25];
  k_f = 3.67e-08 * exp(4.01 * logT - (3436.96982744624) * invT);
  dlnkfdT = 4.01 * invT + (3436.96982744624) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[25] -= q; // c3h4-a
  wdot[48] += q; // c3h3
  // d()/d[ch3]
  dqdci = +k_f * sc[25];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[826] -= dqdci; // dwdot[c3h4-a]/d[ch3]
  J[849] += dqdci; // dwdot[c3h3]/d[ch3]
  // d()/d[c3h4-a]
  dqdci = +k_f * sc[9];
  J[2234] -= dqdci; // dwdot[ch3]/d[c3h4-a]
  J[2235] += dqdci; // dwdot[ch4]/d[c3h4-a]
  J[2250] -= dqdci; // dwdot[c3h4-a]/d[c3h4-a]
  J[2273] += dqdci; // dwdot[c3h3]/d[c3h4-a]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7857] -= dqdT; // dwdot[c3h4-a]/dT
  J[7880] += dqdT; // dwdot[c3h3]/dT

  // reaction 457: c3h3 + ch4 => c3h4-a + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[48];
  k_f = 1.551e-07 * exp(3.98 * logT - (12917.5718112072) * invT);
  dlnkfdT = 3.98 * invT + (12917.5718112072) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[25] += q; // c3h4-a
  wdot[48] -= q; // c3h3
  // d()/d[ch4]
  dqdci = +k_f * sc[48];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[915] += dqdci; // dwdot[c3h4-a]/d[ch4]
  J[938] -= dqdci; // dwdot[c3h3]/d[ch4]
  // d()/d[c3h3]
  dqdci = +k_f * sc[10];
  J[4281] += dqdci; // dwdot[ch3]/d[c3h3]
  J[4282] -= dqdci; // dwdot[ch4]/d[c3h3]
  J[4297] += dqdci; // dwdot[c3h4-a]/d[c3h3]
  J[4320] -= dqdci; // dwdot[c3h3]/d[c3h3]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7857] += dqdT; // dwdot[c3h4-a]/dT
  J[7880] -= dqdT; // dwdot[c3h3]/dT

  // reaction 458: c3h4-a + c3h5-a => c3h3 + c3h6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[25] * sc[47];
  k_f = 200000 * exp(-(3874.76832669634) * invT);
  dlnkfdT = (3874.76832669634) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[25] -= q; // c3h4-a
  wdot[26] += q; // c3h6
  wdot[47] -= q; // c3h5-a
  wdot[48] += q; // c3h3
  // d()/d[c3h4-a]
  dqdci = +k_f * sc[47];
  J[2250] -= dqdci; // dwdot[c3h4-a]/d[c3h4-a]
  J[2251] += dqdci; // dwdot[c3h6]/d[c3h4-a]
  J[2272] -= dqdci; // dwdot[c3h5-a]/d[c3h4-a]
  J[2273] += dqdci; // dwdot[c3h3]/d[c3h4-a]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[25];
  J[4208] -= dqdci; // dwdot[c3h4-a]/d[c3h5-a]
  J[4209] += dqdci; // dwdot[c3h6]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  J[4231] += dqdci; // dwdot[c3h3]/d[c3h5-a]
  // d()/dT
  J[7857] -= dqdT; // dwdot[c3h4-a]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT
  J[7880] += dqdT; // dwdot[c3h3]/dT

  // reaction 459: c3h3 + c3h6 => c3h4-a + c3h5-a
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[26] * sc[48];
  k_f = 26440000000000 * exp(-2.71 * logT - (21205.5502970109) * invT);
  dlnkfdT = -2.71 * invT + (21205.5502970109) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[25] += q; // c3h4-a
  wdot[26] -= q; // c3h6
  wdot[47] += q; // c3h5-a
  wdot[48] -= q; // c3h3
  // d()/d[c3h6]
  dqdci = +k_f * sc[48];
  J[2339] += dqdci; // dwdot[c3h4-a]/d[c3h6]
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  J[2361] += dqdci; // dwdot[c3h5-a]/d[c3h6]
  J[2362] -= dqdci; // dwdot[c3h3]/d[c3h6]
  // d()/d[c3h3]
  dqdci = +k_f * sc[26];
  J[4297] += dqdci; // dwdot[c3h4-a]/d[c3h3]
  J[4298] -= dqdci; // dwdot[c3h6]/d[c3h3]
  J[4319] += dqdci; // dwdot[c3h5-a]/d[c3h3]
  J[4320] -= dqdci; // dwdot[c3h3]/d[c3h3]
  // d()/dT
  J[7857] += dqdT; // dwdot[c3h4-a]/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT
  J[7880] -= dqdT; // dwdot[c3h3]/dT

  // reaction 460: c3h3 + oh => c3h2 + h2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[48];
  k_f = 10000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[48] -= q; // c3h3
  wdot[49] += q; // c3h2
  // d()/d[oh]
  dqdci = +k_f * sc[48];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[404] -= dqdci; // dwdot[c3h3]/d[oh]
  J[405] += dqdci; // dwdot[c3h2]/d[oh]
  // d()/d[c3h3]
  dqdci = +k_f * sc[4];
  J[4276] -= dqdci; // dwdot[oh]/d[c3h3]
  J[4277] += dqdci; // dwdot[h2o]/d[c3h3]
  J[4320] -= dqdci; // dwdot[c3h3]/d[c3h3]
  J[4321] += dqdci; // dwdot[c3h2]/d[c3h3]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7880] -= dqdT; // dwdot[c3h3]/dT
  J[7881] += dqdT; // dwdot[c3h2]/dT

  // reaction 461: c3h2 + h2o => c3h3 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[49];
  k_f = 1343000000 * exp(-(7890.437319818) * invT);
  dlnkfdT = (7890.437319818) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[48] += q; // c3h3
  wdot[49] -= q; // c3h2
  // d()/d[h2o]
  dqdci = +k_f * sc[49];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[493] += dqdci; // dwdot[c3h3]/d[h2o]
  J[494] -= dqdci; // dwdot[c3h2]/d[h2o]
  // d()/d[c3h2]
  dqdci = +k_f * sc[5];
  J[4365] += dqdci; // dwdot[oh]/d[c3h2]
  J[4366] -= dqdci; // dwdot[h2o]/d[c3h2]
  J[4409] += dqdci; // dwdot[c3h3]/d[c3h2]
  J[4410] -= dqdci; // dwdot[c3h2]/d[c3h2]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7880] += dqdT; // dwdot[c3h3]/dT
  J[7881] -= dqdT; // dwdot[c3h2]/dT

  // reaction 462: c3h3 + o2 => ch2co + hco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[48];
  k_f = 30100 * exp(-(1444.23183085955) * invT);
  dlnkfdT = (1444.23183085955) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[7] += q;  // hco
  wdot[20] += q; // ch2co
  wdot[48] -= q; // c3h3
  // d()/d[o2]
  dqdci = +k_f * sc[48];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[274] += dqdci; // dwdot[hco]/d[o2]
  J[287] += dqdci; // dwdot[ch2co]/d[o2]
  J[315] -= dqdci; // dwdot[c3h3]/d[o2]
  // d()/d[c3h3]
  dqdci = +k_f * sc[3];
  J[4275] -= dqdci; // dwdot[o2]/d[c3h3]
  J[4279] += dqdci; // dwdot[hco]/d[c3h3]
  J[4292] += dqdci; // dwdot[ch2co]/d[c3h3]
  J[4320] -= dqdci; // dwdot[c3h3]/d[c3h3]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7839] += dqdT; // dwdot[hco]/dT
  J[7852] += dqdT; // dwdot[ch2co]/dT
  J[7880] -= dqdT; // dwdot[c3h3]/dT

  // reaction 463: ch2co + hco => c3h3 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[20];
  k_f = 488100 * exp(-(29926.2951154067) * invT);
  dlnkfdT = (29926.2951154067) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[7] -= q;  // hco
  wdot[20] -= q; // ch2co
  wdot[48] += q; // c3h3
  // d()/d[hco]
  dqdci = +k_f * sc[20];
  J[626] += dqdci; // dwdot[o2]/d[hco]
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  J[643] -= dqdci; // dwdot[ch2co]/d[hco]
  J[671] += dqdci; // dwdot[c3h3]/d[hco]
  // d()/d[ch2co]
  dqdci = +k_f * sc[7];
  J[1783] += dqdci; // dwdot[o2]/d[ch2co]
  J[1787] -= dqdci; // dwdot[hco]/d[ch2co]
  J[1800] -= dqdci; // dwdot[ch2co]/d[ch2co]
  J[1828] += dqdci; // dwdot[c3h3]/d[ch2co]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7839] -= dqdT; // dwdot[hco]/dT
  J[7852] -= dqdT; // dwdot[ch2co]/dT
  J[7880] += dqdT; // dwdot[c3h3]/dT

  // reaction 464: pc4h9o2 => o2 + pc4h9
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[46];
  k_f = 6.155e+19 * exp(-1.38 * logT - (17869.2238027256) * invT);
  dlnkfdT = -1.38 * invT + (17869.2238027256) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[31] += q; // pc4h9
  wdot[46] -= q; // pc4h9o2
  // d()/d[pc4h9o2]
  dqdci = +k_f;
  J[4097] += dqdci; // dwdot[o2]/d[pc4h9o2]
  J[4125] += dqdci; // dwdot[pc4h9]/d[pc4h9o2]
  J[4140] -= dqdci; // dwdot[pc4h9o2]/d[pc4h9o2]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7863] += dqdT; // dwdot[pc4h9]/dT
  J[7878] -= dqdT; // dwdot[pc4h9o2]/dT

  // reaction 465: o2 + pc4h9 => pc4h9o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[31];
  k_f = 4520000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[31] -= q; // pc4h9
  wdot[46] += q; // pc4h9o2
  // d()/d[o2]
  dqdci = +k_f * sc[31];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[298] -= dqdci; // dwdot[pc4h9]/d[o2]
  J[313] += dqdci; // dwdot[pc4h9o2]/d[o2]
  // d()/d[pc4h9]
  dqdci = +k_f * sc[3];
  J[2762] -= dqdci; // dwdot[o2]/d[pc4h9]
  J[2790] -= dqdci; // dwdot[pc4h9]/d[pc4h9]
  J[2805] += dqdci; // dwdot[pc4h9o2]/d[pc4h9]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7863] -= dqdT; // dwdot[pc4h9]/dT
  J[7878] += dqdT; // dwdot[pc4h9o2]/dT

  // reaction 466: ch2cho => ch2co + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[23];
  k_f = 3.094e+15 * exp(-0.26 * logT - (25573.4709561959) * invT);
  dlnkfdT = -0.26 * invT + (25573.4709561959) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[20] += q; // ch2co
  wdot[23] -= q; // ch2cho
  // d()/d[ch2cho]
  dqdci = +k_f;
  J[2047] += dqdci; // dwdot[h]/d[ch2cho]
  J[2067] += dqdci; // dwdot[ch2co]/d[ch2cho]
  J[2070] -= dqdci; // dwdot[ch2cho]/d[ch2cho]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7852] += dqdT; // dwdot[ch2co]/dT
  J[7855] -= dqdT; // dwdot[ch2cho]/dT

  // reaction 467: ch2co + h => ch2cho
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[20];
  k_f = 50000000 * exp(-(6189.56498939805) * invT);
  dlnkfdT = (6189.56498939805) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[20] -= q; // ch2co
  wdot[23] += q; // ch2cho
  // d()/d[h]
  dqdci = +k_f * sc[20];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[20] -= dqdci; // dwdot[ch2co]/d[h]
  J[23] += dqdci; // dwdot[ch2cho]/d[h]
  // d()/d[ch2co]
  dqdci = +k_f * sc[0];
  J[1780] -= dqdci; // dwdot[h]/d[ch2co]
  J[1800] -= dqdci; // dwdot[ch2co]/d[ch2co]
  J[1803] += dqdci; // dwdot[ch2cho]/d[ch2co]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7852] -= dqdT; // dwdot[ch2co]/dT
  J[7855] += dqdT; // dwdot[ch2cho]/dT

  // reaction 468: ch2cho + o2 => ch2o + co + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[23];
  k_f = 20000000 * exp(-(2113.50999637982) * invT);
  dlnkfdT = (2113.50999637982) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[4] += q;  // oh
  wdot[6] += q;  // co
  wdot[13] += q; // ch2o
  wdot[23] -= q; // ch2cho
  // d()/d[o2]
  dqdci = +k_f * sc[23];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[271] += dqdci; // dwdot[oh]/d[o2]
  J[273] += dqdci; // dwdot[co]/d[o2]
  J[280] += dqdci; // dwdot[ch2o]/d[o2]
  J[290] -= dqdci; // dwdot[ch2cho]/d[o2]
  // d()/d[ch2cho]
  dqdci = +k_f * sc[3];
  J[2050] -= dqdci; // dwdot[o2]/d[ch2cho]
  J[2051] += dqdci; // dwdot[oh]/d[ch2cho]
  J[2053] += dqdci; // dwdot[co]/d[ch2cho]
  J[2060] += dqdci; // dwdot[ch2o]/d[ch2cho]
  J[2070] -= dqdci; // dwdot[ch2cho]/d[ch2cho]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT
  J[7855] -= dqdT; // dwdot[ch2cho]/dT

  // reaction 469: nc4ket13 => ch2cho + ch3cho + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[51];
  k_f = 1.05e+16 * exp(-(20933.8132974763) * invT);
  dlnkfdT = (20933.8132974763) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[23] += q; // ch2cho
  wdot[24] += q; // ch3cho
  wdot[51] -= q; // nc4ket13
  // d()/d[nc4ket13]
  dqdci = +k_f;
  J[4543] += dqdci; // dwdot[oh]/d[nc4ket13]
  J[4562] += dqdci; // dwdot[ch2cho]/d[nc4ket13]
  J[4563] += dqdci; // dwdot[ch3cho]/d[nc4ket13]
  J[4590] -= dqdci; // dwdot[nc4ket13]/d[nc4ket13]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7855] += dqdT; // dwdot[ch2cho]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT
  J[7883] -= dqdT; // dwdot[nc4ket13]/dT

  // reaction 470: c3h5-a + o2 => c3h4-a + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[47];
  k_f = 2.18e+15 * exp(-2.85 * logT - (15478.9446401532) * invT);
  dlnkfdT = -2.85 * invT + (15478.9446401532) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[25] += q; // c3h4-a
  wdot[47] -= q; // c3h5-a
  // d()/d[o2]
  dqdci = +k_f * sc[47];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[292] += dqdci; // dwdot[c3h4-a]/d[o2]
  J[314] -= dqdci; // dwdot[c3h5-a]/d[o2]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[3];
  J[4186] -= dqdci; // dwdot[o2]/d[c3h5-a]
  J[4194] += dqdci; // dwdot[ho2]/d[c3h5-a]
  J[4208] += dqdci; // dwdot[c3h4-a]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7857] += dqdT; // dwdot[c3h4-a]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 471: c3h4-a + ho2 => c3h5-a + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[25];
  k_f = 26900000000000 * exp(-2.4 * logT - (10315.9416489968) * invT);
  dlnkfdT = -2.4 * invT + (10315.9416489968) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[25] -= q; // c3h4-a
  wdot[47] += q; // c3h5-a
  // d()/d[ho2]
  dqdci = +k_f * sc[25];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1004] -= dqdci; // dwdot[c3h4-a]/d[ho2]
  J[1026] += dqdci; // dwdot[c3h5-a]/d[ho2]
  // d()/d[c3h4-a]
  dqdci = +k_f * sc[11];
  J[2228] += dqdci; // dwdot[o2]/d[c3h4-a]
  J[2236] -= dqdci; // dwdot[ho2]/d[c3h4-a]
  J[2250] -= dqdci; // dwdot[c3h4-a]/d[c3h4-a]
  J[2272] += dqdci; // dwdot[c3h5-a]/d[c3h4-a]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7857] -= dqdT; // dwdot[c3h4-a]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 472: c3h5-a + o2 => ch2cho + ch2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[47];
  k_f = 7140000000 * exp(-1.21 * logT - (10592.7108151893) * invT);
  dlnkfdT = -1.21 * invT + (10592.7108151893) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[13] += q; // ch2o
  wdot[23] += q; // ch2cho
  wdot[47] -= q; // c3h5-a
  // d()/d[o2]
  dqdci = +k_f * sc[47];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[280] += dqdci; // dwdot[ch2o]/d[o2]
  J[290] += dqdci; // dwdot[ch2cho]/d[o2]
  J[314] -= dqdci; // dwdot[c3h5-a]/d[o2]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[3];
  J[4186] -= dqdci; // dwdot[o2]/d[c3h5-a]
  J[4196] += dqdci; // dwdot[ch2o]/d[c3h5-a]
  J[4206] += dqdci; // dwdot[ch2cho]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT
  J[7855] += dqdT; // dwdot[ch2cho]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 473: ch2cho + ch2o => c3h5-a + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[23];
  k_f = 49440000000 * exp(-1.4 * logT - (44595.0609236143) * invT);
  dlnkfdT = -1.4 * invT + (44595.0609236143) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[13] -= q; // ch2o
  wdot[23] -= q; // ch2cho
  wdot[47] += q; // c3h5-a
  // d()/d[ch2o]
  dqdci = +k_f * sc[23];
  J[1160] += dqdci; // dwdot[o2]/d[ch2o]
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  J[1180] -= dqdci; // dwdot[ch2cho]/d[ch2o]
  J[1204] += dqdci; // dwdot[c3h5-a]/d[ch2o]
  // d()/d[ch2cho]
  dqdci = +k_f * sc[13];
  J[2050] += dqdci; // dwdot[o2]/d[ch2cho]
  J[2060] -= dqdci; // dwdot[ch2o]/d[ch2cho]
  J[2070] -= dqdci; // dwdot[ch2cho]/d[ch2cho]
  J[2094] += dqdci; // dwdot[c3h5-a]/d[ch2cho]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT
  J[7855] -= dqdT; // dwdot[ch2cho]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 474: c3h5-a + o2 => c2h2 + ch2o + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[47];
  k_f = 9.72e+23 * exp(-5.71 * logT - (10793.9974815112) * invT);
  dlnkfdT = -5.71 * invT + (10793.9974815112) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[4] += q;  // oh
  wdot[13] += q; // ch2o
  wdot[18] += q; // c2h2
  wdot[47] -= q; // c3h5-a
  // d()/d[o2]
  dqdci = +k_f * sc[47];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[271] += dqdci; // dwdot[oh]/d[o2]
  J[280] += dqdci; // dwdot[ch2o]/d[o2]
  J[285] += dqdci; // dwdot[c2h2]/d[o2]
  J[314] -= dqdci; // dwdot[c3h5-a]/d[o2]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[3];
  J[4186] -= dqdci; // dwdot[o2]/d[c3h5-a]
  J[4187] += dqdci; // dwdot[oh]/d[c3h5-a]
  J[4196] += dqdci; // dwdot[ch2o]/d[c3h5-a]
  J[4201] += dqdci; // dwdot[c2h2]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT
  J[7850] += dqdT; // dwdot[c2h2]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 475: hcco + o2 => co2 + hco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[21];
  k_f = 240000 * exp(-(-429.747032597231) * invT);
  dlnkfdT = (-429.747032597231) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[7] += q;  // hco
  wdot[8] += q;  // co2
  wdot[21] -= q; // hcco
  // d()/d[o2]
  dqdci = +k_f * sc[21];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[274] += dqdci; // dwdot[hco]/d[o2]
  J[275] += dqdci; // dwdot[co2]/d[o2]
  J[288] -= dqdci; // dwdot[hcco]/d[o2]
  // d()/d[hcco]
  dqdci = +k_f * sc[3];
  J[1872] -= dqdci; // dwdot[o2]/d[hcco]
  J[1876] += dqdci; // dwdot[hco]/d[hcco]
  J[1877] += dqdci; // dwdot[co2]/d[hcco]
  J[1890] -= dqdci; // dwdot[hcco]/d[hcco]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7839] += dqdT; // dwdot[hco]/dT
  J[7840] += dqdT; // dwdot[co2]/dT
  J[7853] -= dqdT; // dwdot[hcco]/dT

  // reaction 476: co2 + hco => hcco + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[8];
  k_f = 147400000 * exp(-(67229.7465515105) * invT);
  dlnkfdT = (67229.7465515105) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[7] -= q;  // hco
  wdot[8] -= q;  // co2
  wdot[21] += q; // hcco
  // d()/d[hco]
  dqdci = +k_f * sc[8];
  J[626] += dqdci; // dwdot[o2]/d[hco]
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  J[631] -= dqdci; // dwdot[co2]/d[hco]
  J[644] += dqdci; // dwdot[hcco]/d[hco]
  // d()/d[co2]
  dqdci = +k_f * sc[7];
  J[715] += dqdci; // dwdot[o2]/d[co2]
  J[719] -= dqdci; // dwdot[hco]/d[co2]
  J[720] -= dqdci; // dwdot[co2]/d[co2]
  J[733] += dqdci; // dwdot[hcco]/d[co2]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7839] -= dqdT; // dwdot[hco]/dT
  J[7840] -= dqdT; // dwdot[co2]/dT
  J[7853] += dqdT; // dwdot[hcco]/dT

  // reaction 477: ch3 + o2 => ch2o + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[9];
  k_f = 747000 * exp(-(7170.83748771726) * invT);
  dlnkfdT = (7170.83748771726) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[4] += q;  // oh
  wdot[9] -= q;  // ch3
  wdot[13] += q; // ch2o
  // d()/d[o2]
  dqdci = +k_f * sc[9];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[271] += dqdci; // dwdot[oh]/d[o2]
  J[276] -= dqdci; // dwdot[ch3]/d[o2]
  J[280] += dqdci; // dwdot[ch2o]/d[o2]
  // d()/d[ch3]
  dqdci = +k_f * sc[3];
  J[804] -= dqdci; // dwdot[o2]/d[ch3]
  J[805] += dqdci; // dwdot[oh]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[814] += dqdci; // dwdot[ch2o]/d[ch3]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT

  // reaction 478: ch2o + oh => ch3 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[13];
  k_f = 777800 * exp(-(34102.9934415859) * invT);
  dlnkfdT = (34102.9934415859) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[4] -= q;  // oh
  wdot[9] += q;  // ch3
  wdot[13] -= q; // ch2o
  // d()/d[oh]
  dqdci = +k_f * sc[13];
  J[359] += dqdci; // dwdot[o2]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[365] += dqdci; // dwdot[ch3]/d[oh]
  J[369] -= dqdci; // dwdot[ch2o]/d[oh]
  // d()/d[ch2o]
  dqdci = +k_f * sc[4];
  J[1160] += dqdci; // dwdot[o2]/d[ch2o]
  J[1161] -= dqdci; // dwdot[oh]/d[ch2o]
  J[1166] += dqdci; // dwdot[ch3]/d[ch2o]
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT

  // reaction 479: c2h4 + h2 => 2 ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[16];
  k_f = 3767000 * exp(0.83 * logT - (42627.4837603178) * invT);
  dlnkfdT = 0.83 * invT + (42627.4837603178) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;     // h2
  wdot[9] += 2 * q; // ch3
  wdot[16] -= q;    // c2h4
  // d()/d[h2]
  dqdci = +k_f * sc[16];
  J[90] -= dqdci;     // dwdot[h2]/d[h2]
  J[98] += 2 * dqdci; // dwdot[ch3]/d[h2]
  J[105] -= dqdci;    // dwdot[c2h4]/d[h2]
  // d()/d[c2h4]
  dqdci = +k_f * sc[1];
  J[1425] -= dqdci;     // dwdot[h2]/d[c2h4]
  J[1433] += 2 * dqdci; // dwdot[ch3]/d[c2h4]
  J[1440] -= dqdci;     // dwdot[c2h4]/d[c2h4]
  // d()/dT
  J[7833] -= dqdT;     // dwdot[h2]/dT
  J[7841] += 2 * dqdT; // dwdot[ch3]/dT
  J[7848] -= dqdT;     // dwdot[c2h4]/dT

  // reaction 480: 2 ch3 => c2h4 + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[9] * sc[9]);
  k_f = 100000000 * exp(-(16102.933305751) * invT);
  dlnkfdT = (16102.933305751) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] += q;     // h2
  wdot[9] -= 2 * q; // ch3
  wdot[16] += q;    // c2h4
  // d()/d[ch3]
  dqdci = +k_f * 2.000000 * sc[9];
  J[802] += dqdci;      // dwdot[h2]/d[ch3]
  J[810] += -2 * dqdci; // dwdot[ch3]/d[ch3]
  J[817] += dqdci;      // dwdot[c2h4]/d[ch3]
  // d()/dT
  J[7833] += dqdT;      // dwdot[h2]/dT
  J[7841] += -2 * dqdT; // dwdot[ch3]/dT
  J[7848] += dqdT;      // dwdot[c2h4]/dT

  // reaction 481: nc3h7cho + o2 => ho2 + nc3h7co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[52];
  k_f = 20000000 * exp(0.5 * logT - (21235.7432969592) * invT);
  dlnkfdT = 0.5 * invT + (21235.7432969592) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[52] -= q; // nc3h7cho
  wdot[53] += q; // nc3h7co
  // d()/d[o2]
  dqdci = +k_f * sc[52];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[319] -= dqdci; // dwdot[nc3h7cho]/d[o2]
  J[320] += dqdci; // dwdot[nc3h7co]/d[o2]
  // d()/d[nc3h7cho]
  dqdci = +k_f * sc[3];
  J[4631] -= dqdci; // dwdot[o2]/d[nc3h7cho]
  J[4639] += dqdci; // dwdot[ho2]/d[nc3h7cho]
  J[4680] -= dqdci; // dwdot[nc3h7cho]/d[nc3h7cho]
  J[4681] += dqdci; // dwdot[nc3h7co]/d[nc3h7cho]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7884] -= dqdT; // dwdot[nc3h7cho]/dT
  J[7885] += dqdT; // dwdot[nc3h7co]/dT

  // reaction 482: ho2 + nc3h7co => nc3h7cho + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[53];
  k_f = 10 * exp(0.5 * logT - (2012.86666321888) * invT);
  dlnkfdT = 0.5 * invT + (2012.86666321888) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[52] += q; // nc3h7cho
  wdot[53] -= q; // nc3h7co
  // d()/d[ho2]
  dqdci = +k_f * sc[53];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1031] += dqdci; // dwdot[nc3h7cho]/d[ho2]
  J[1032] -= dqdci; // dwdot[nc3h7co]/d[ho2]
  // d()/d[nc3h7co]
  dqdci = +k_f * sc[11];
  J[4720] += dqdci; // dwdot[o2]/d[nc3h7co]
  J[4728] -= dqdci; // dwdot[ho2]/d[nc3h7co]
  J[4769] += dqdci; // dwdot[nc3h7cho]/d[nc3h7co]
  J[4770] -= dqdci; // dwdot[nc3h7co]/d[nc3h7co]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7884] += dqdT; // dwdot[nc3h7cho]/dT
  J[7885] -= dqdT; // dwdot[nc3h7co]/dT

  // reaction 483: nc3h7cho + oh => h2o + nc3h7co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[52];
  k_f = 26900 * exp(0.76 * logT - (-171.093666373605) * invT);
  dlnkfdT = 0.76 * invT + (-171.093666373605) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[52] -= q; // nc3h7cho
  wdot[53] += q; // nc3h7co
  // d()/d[oh]
  dqdci = +k_f * sc[52];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[408] -= dqdci; // dwdot[nc3h7cho]/d[oh]
  J[409] += dqdci; // dwdot[nc3h7co]/d[oh]
  // d()/d[nc3h7cho]
  dqdci = +k_f * sc[4];
  J[4632] -= dqdci; // dwdot[oh]/d[nc3h7cho]
  J[4633] += dqdci; // dwdot[h2o]/d[nc3h7cho]
  J[4680] -= dqdci; // dwdot[nc3h7cho]/d[nc3h7cho]
  J[4681] += dqdci; // dwdot[nc3h7co]/d[nc3h7cho]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7884] -= dqdT; // dwdot[nc3h7cho]/dT
  J[7885] += dqdT; // dwdot[nc3h7co]/dT

  // reaction 484: h2o + nc3h7co => nc3h7cho + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[53];
  k_f = 18520 * exp(0.75 * logT - (15710.4243064233) * invT);
  dlnkfdT = 0.75 * invT + (15710.4243064233) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[52] += q; // nc3h7cho
  wdot[53] -= q; // nc3h7co
  // d()/d[h2o]
  dqdci = +k_f * sc[53];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[497] += dqdci; // dwdot[nc3h7cho]/d[h2o]
  J[498] -= dqdci; // dwdot[nc3h7co]/d[h2o]
  // d()/d[nc3h7co]
  dqdci = +k_f * sc[5];
  J[4721] += dqdci; // dwdot[oh]/d[nc3h7co]
  J[4722] -= dqdci; // dwdot[h2o]/d[nc3h7co]
  J[4769] += dqdci; // dwdot[nc3h7cho]/d[nc3h7co]
  J[4770] -= dqdci; // dwdot[nc3h7co]/d[nc3h7co]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7884] += dqdT; // dwdot[nc3h7cho]/dT
  J[7885] -= dqdT; // dwdot[nc3h7co]/dT

  // reaction 485: h + nc3h7cho => h2 + nc3h7co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[52];
  k_f = 40000000 * exp(-(2113.50999637982) * invT);
  dlnkfdT = (2113.50999637982) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[52] -= q; // nc3h7cho
  wdot[53] += q; // nc3h7co
  // d()/d[h]
  dqdci = +k_f * sc[52];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[52] -= dqdci; // dwdot[nc3h7cho]/d[h]
  J[53] += dqdci; // dwdot[nc3h7co]/d[h]
  // d()/d[nc3h7cho]
  dqdci = +k_f * sc[0];
  J[4628] -= dqdci; // dwdot[h]/d[nc3h7cho]
  J[4629] += dqdci; // dwdot[h2]/d[nc3h7cho]
  J[4680] -= dqdci; // dwdot[nc3h7cho]/d[nc3h7cho]
  J[4681] += dqdci; // dwdot[nc3h7co]/d[nc3h7cho]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7884] -= dqdT; // dwdot[nc3h7cho]/dT
  J[7885] += dqdT; // dwdot[nc3h7co]/dT

  // reaction 486: h2 + nc3h7co => h + nc3h7cho
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[53];
  k_f = 18000000 * exp(-(12077.1999793133) * invT);
  dlnkfdT = (12077.1999793133) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[52] += q; // nc3h7cho
  wdot[53] -= q; // nc3h7co
  // d()/d[h2]
  dqdci = +k_f * sc[53];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[141] += dqdci; // dwdot[nc3h7cho]/d[h2]
  J[142] -= dqdci; // dwdot[nc3h7co]/d[h2]
  // d()/d[nc3h7co]
  dqdci = +k_f * sc[1];
  J[4717] += dqdci; // dwdot[h]/d[nc3h7co]
  J[4718] -= dqdci; // dwdot[h2]/d[nc3h7co]
  J[4769] += dqdci; // dwdot[nc3h7cho]/d[nc3h7co]
  J[4770] -= dqdci; // dwdot[nc3h7co]/d[nc3h7co]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7884] += dqdT; // dwdot[nc3h7cho]/dT
  J[7885] -= dqdT; // dwdot[nc3h7co]/dT

  // reaction 487: nc3h7cho + o => nc3h7co + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[52];
  k_f = 5000000 * exp(-(900.757831790448) * invT);
  dlnkfdT = (900.757831790448) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[4] += q;  // oh
  wdot[52] -= q; // nc3h7cho
  wdot[53] += q; // nc3h7co
  // d()/d[o]
  dqdci = +k_f * sc[52];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[182] += dqdci; // dwdot[oh]/d[o]
  J[230] -= dqdci; // dwdot[nc3h7cho]/d[o]
  J[231] += dqdci; // dwdot[nc3h7co]/d[o]
  // d()/d[nc3h7cho]
  dqdci = +k_f * sc[2];
  J[4630] -= dqdci; // dwdot[o]/d[nc3h7cho]
  J[4632] += dqdci; // dwdot[oh]/d[nc3h7cho]
  J[4680] -= dqdci; // dwdot[nc3h7cho]/d[nc3h7cho]
  J[4681] += dqdci; // dwdot[nc3h7co]/d[nc3h7cho]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7884] -= dqdT; // dwdot[nc3h7cho]/dT
  J[7885] += dqdT; // dwdot[nc3h7co]/dT

  // reaction 488: nc3h7co + oh => nc3h7cho + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[53];
  k_f = 1000000 * exp(-(9561.11665028967) * invT);
  dlnkfdT = (9561.11665028967) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[4] -= q;  // oh
  wdot[52] += q; // nc3h7cho
  wdot[53] -= q; // nc3h7co
  // d()/d[oh]
  dqdci = +k_f * sc[53];
  J[358] += dqdci; // dwdot[o]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[408] += dqdci; // dwdot[nc3h7cho]/d[oh]
  J[409] -= dqdci; // dwdot[nc3h7co]/d[oh]
  // d()/d[nc3h7co]
  dqdci = +k_f * sc[4];
  J[4719] += dqdci; // dwdot[o]/d[nc3h7co]
  J[4721] -= dqdci; // dwdot[oh]/d[nc3h7co]
  J[4769] += dqdci; // dwdot[nc3h7cho]/d[nc3h7co]
  J[4770] -= dqdci; // dwdot[nc3h7co]/d[nc3h7co]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7884] += dqdT; // dwdot[nc3h7cho]/dT
  J[7885] -= dqdT; // dwdot[nc3h7co]/dT

  // reaction 489: ho2 + nc3h7cho => h2o2 + nc3h7co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[52];
  k_f = 2800000 * exp(-(6843.74665494419) * invT);
  dlnkfdT = (6843.74665494419) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  wdot[52] -= q; // nc3h7cho
  wdot[53] += q; // nc3h7co
  // d()/d[ho2]
  dqdci = +k_f * sc[52];
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[991] += dqdci;  // dwdot[h2o2]/d[ho2]
  J[1031] -= dqdci; // dwdot[nc3h7cho]/d[ho2]
  J[1032] += dqdci; // dwdot[nc3h7co]/d[ho2]
  // d()/d[nc3h7cho]
  dqdci = +k_f * sc[11];
  J[4639] -= dqdci; // dwdot[ho2]/d[nc3h7cho]
  J[4640] += dqdci; // dwdot[h2o2]/d[nc3h7cho]
  J[4680] -= dqdci; // dwdot[nc3h7cho]/d[nc3h7cho]
  J[4681] += dqdci; // dwdot[nc3h7co]/d[nc3h7cho]
  // d()/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT
  J[7884] -= dqdT; // dwdot[nc3h7cho]/dT
  J[7885] += dqdT; // dwdot[nc3h7co]/dT

  // reaction 490: h2o2 + nc3h7co => ho2 + nc3h7cho
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[53];
  k_f = 1000000 * exp(-(5032.1666580472) * invT);
  dlnkfdT = (5032.1666580472) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // ho2
  wdot[12] -= q; // h2o2
  wdot[52] += q; // nc3h7cho
  wdot[53] -= q; // nc3h7co
  // d()/d[h2o2]
  dqdci = +k_f * sc[53];
  J[1079] += dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci; // dwdot[h2o2]/d[h2o2]
  J[1120] += dqdci; // dwdot[nc3h7cho]/d[h2o2]
  J[1121] -= dqdci; // dwdot[nc3h7co]/d[h2o2]
  // d()/d[nc3h7co]
  dqdci = +k_f * sc[12];
  J[4728] += dqdci; // dwdot[ho2]/d[nc3h7co]
  J[4729] -= dqdci; // dwdot[h2o2]/d[nc3h7co]
  J[4769] += dqdci; // dwdot[nc3h7cho]/d[nc3h7co]
  J[4770] -= dqdci; // dwdot[nc3h7co]/d[nc3h7co]
  // d()/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT; // dwdot[h2o2]/dT
  J[7884] += dqdT; // dwdot[nc3h7cho]/dT
  J[7885] -= dqdT; // dwdot[nc3h7co]/dT

  // reaction 491: ch3 + nc3h7cho => ch4 + nc3h7co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[52];
  k_f = 1700000 * exp(-(4247.14865939183) * invT);
  dlnkfdT = (4247.14865939183) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[52] -= q; // nc3h7cho
  wdot[53] += q; // nc3h7co
  // d()/d[ch3]
  dqdci = +k_f * sc[52];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[853] -= dqdci; // dwdot[nc3h7cho]/d[ch3]
  J[854] += dqdci; // dwdot[nc3h7co]/d[ch3]
  // d()/d[nc3h7cho]
  dqdci = +k_f * sc[9];
  J[4637] -= dqdci; // dwdot[ch3]/d[nc3h7cho]
  J[4638] += dqdci; // dwdot[ch4]/d[nc3h7cho]
  J[4680] -= dqdci; // dwdot[nc3h7cho]/d[nc3h7cho]
  J[4681] += dqdci; // dwdot[nc3h7co]/d[nc3h7cho]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7884] -= dqdT; // dwdot[nc3h7cho]/dT
  J[7885] += dqdT; // dwdot[nc3h7co]/dT

  // reaction 492: ch4 + nc3h7co => ch3 + nc3h7cho
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[53];
  k_f = 15000000 * exp(-(14090.0666425322) * invT);
  dlnkfdT = (14090.0666425322) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[52] += q; // nc3h7cho
  wdot[53] -= q; // nc3h7co
  // d()/d[ch4]
  dqdci = +k_f * sc[53];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[942] += dqdci; // dwdot[nc3h7cho]/d[ch4]
  J[943] -= dqdci; // dwdot[nc3h7co]/d[ch4]
  // d()/d[nc3h7co]
  dqdci = +k_f * sc[10];
  J[4726] += dqdci; // dwdot[ch3]/d[nc3h7co]
  J[4727] -= dqdci; // dwdot[ch4]/d[nc3h7co]
  J[4769] += dqdci; // dwdot[nc3h7cho]/d[nc3h7co]
  J[4770] -= dqdci; // dwdot[nc3h7co]/d[nc3h7co]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7884] += dqdT; // dwdot[nc3h7cho]/dT
  J[7885] -= dqdT; // dwdot[nc3h7co]/dT

  // reaction 493: ch3o2 + nc3h7cho => ch3o2h + nc3h7co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[38] * sc[52];
  k_f = 1000000 * exp(-(4780.55832514484) * invT);
  dlnkfdT = (4780.55832514484) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[38] -= q; // ch3o2
  wdot[39] += q; // ch3o2h
  wdot[52] -= q; // nc3h7cho
  wdot[53] += q; // nc3h7co
  // d()/d[ch3o2]
  dqdci = +k_f * sc[52];
  J[3420] -= dqdci; // dwdot[ch3o2]/d[ch3o2]
  J[3421] += dqdci; // dwdot[ch3o2h]/d[ch3o2]
  J[3434] -= dqdci; // dwdot[nc3h7cho]/d[ch3o2]
  J[3435] += dqdci; // dwdot[nc3h7co]/d[ch3o2]
  // d()/d[nc3h7cho]
  dqdci = +k_f * sc[38];
  J[4666] -= dqdci; // dwdot[ch3o2]/d[nc3h7cho]
  J[4667] += dqdci; // dwdot[ch3o2h]/d[nc3h7cho]
  J[4680] -= dqdci; // dwdot[nc3h7cho]/d[nc3h7cho]
  J[4681] += dqdci; // dwdot[nc3h7co]/d[nc3h7cho]
  // d()/dT
  J[7870] -= dqdT; // dwdot[ch3o2]/dT
  J[7871] += dqdT; // dwdot[ch3o2h]/dT
  J[7884] -= dqdT; // dwdot[nc3h7cho]/dT
  J[7885] += dqdT; // dwdot[nc3h7co]/dT

  // reaction 494: ch3o2h + nc3h7co => ch3o2 + nc3h7cho
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[39] * sc[53];
  k_f = 25000 * exp(-(5032.1666580472) * invT);
  dlnkfdT = (5032.1666580472) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[38] += q; // ch3o2
  wdot[39] -= q; // ch3o2h
  wdot[52] += q; // nc3h7cho
  wdot[53] -= q; // nc3h7co
  // d()/d[ch3o2h]
  dqdci = +k_f * sc[53];
  J[3509] += dqdci; // dwdot[ch3o2]/d[ch3o2h]
  J[3510] -= dqdci; // dwdot[ch3o2h]/d[ch3o2h]
  J[3523] += dqdci; // dwdot[nc3h7cho]/d[ch3o2h]
  J[3524] -= dqdci; // dwdot[nc3h7co]/d[ch3o2h]
  // d()/d[nc3h7co]
  dqdci = +k_f * sc[39];
  J[4755] += dqdci; // dwdot[ch3o2]/d[nc3h7co]
  J[4756] -= dqdci; // dwdot[ch3o2h]/d[nc3h7co]
  J[4769] += dqdci; // dwdot[nc3h7cho]/d[nc3h7co]
  J[4770] -= dqdci; // dwdot[nc3h7co]/d[nc3h7co]
  // d()/dT
  J[7870] += dqdT; // dwdot[ch3o2]/dT
  J[7871] -= dqdT; // dwdot[ch3o2h]/dT
  J[7884] += dqdT; // dwdot[nc3h7cho]/dT
  J[7885] -= dqdT; // dwdot[nc3h7co]/dT

  // reaction 495: nc3h7co => co + nc3h7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[53];
  k_f = 5.325e+15 * exp(-0.86 * logT - (6743.10332178324) * invT);
  dlnkfdT = -0.86 * invT + (6743.10332178324) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] += q;  // co
  wdot[28] += q; // nc3h7
  wdot[53] -= q; // nc3h7co
  // d()/d[nc3h7co]
  dqdci = +k_f;
  J[4723] += dqdci; // dwdot[co]/d[nc3h7co]
  J[4745] += dqdci; // dwdot[nc3h7]/d[nc3h7co]
  J[4770] -= dqdci; // dwdot[nc3h7co]/d[nc3h7co]
  // d()/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7860] += dqdT; // dwdot[nc3h7]/dT
  J[7885] -= dqdT; // dwdot[nc3h7co]/dT

  // reaction 496: co + nc3h7 => nc3h7co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[28];
  k_f = 150000 * exp(-(2415.43999586265) * invT);
  dlnkfdT = (2415.43999586265) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // co
  wdot[28] -= q; // nc3h7
  wdot[53] += q; // nc3h7co
  // d()/d[co]
  dqdci = +k_f * sc[28];
  J[540] -= dqdci; // dwdot[co]/d[co]
  J[562] -= dqdci; // dwdot[nc3h7]/d[co]
  J[587] += dqdci; // dwdot[nc3h7co]/d[co]
  // d()/d[nc3h7]
  dqdci = +k_f * sc[6];
  J[2498] -= dqdci; // dwdot[co]/d[nc3h7]
  J[2520] -= dqdci; // dwdot[nc3h7]/d[nc3h7]
  J[2545] += dqdci; // dwdot[nc3h7co]/d[nc3h7]
  // d()/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7860] -= dqdT; // dwdot[nc3h7]/dT
  J[7885] += dqdT; // dwdot[nc3h7co]/dT

  // reaction 497: c2h5coch2 => c2h5 + ch2co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[54];
  k_f = 15700000000000 * exp(-(15096.4999741416) * invT);
  dlnkfdT = (15096.4999741416) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[17] += q; // c2h5
  wdot[20] += q; // ch2co
  wdot[54] -= q; // c2h5coch2
  // d()/d[c2h5coch2]
  dqdci = +k_f;
  J[4823] += dqdci; // dwdot[c2h5]/d[c2h5coch2]
  J[4826] += dqdci; // dwdot[ch2co]/d[c2h5coch2]
  J[4860] -= dqdci; // dwdot[c2h5coch2]/d[c2h5coch2]
  // d()/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7852] += dqdT; // dwdot[ch2co]/dT
  J[7886] -= dqdT; // dwdot[c2h5coch2]/dT

  // reaction 498: c2h5 + ch2co => c2h5coch2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[20];
  k_f = 211000 * exp(-(3698.64249366469) * invT);
  dlnkfdT = (3698.64249366469) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[17] -= q; // c2h5
  wdot[20] -= q; // ch2co
  wdot[54] += q; // c2h5coch2
  // d()/d[c2h5]
  dqdci = +k_f * sc[20];
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1533] -= dqdci; // dwdot[ch2co]/d[c2h5]
  J[1567] += dqdci; // dwdot[c2h5coch2]/d[c2h5]
  // d()/d[ch2co]
  dqdci = +k_f * sc[17];
  J[1797] -= dqdci; // dwdot[c2h5]/d[ch2co]
  J[1800] -= dqdci; // dwdot[ch2co]/d[ch2co]
  J[1834] += dqdci; // dwdot[c2h5coch2]/d[ch2co]
  // d()/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7852] -= dqdT; // dwdot[ch2co]/dT
  J[7886] += dqdT; // dwdot[c2h5coch2]/dT

  // reaction 499: nc3h7coch2 => ch2co + nc3h7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[55];
  k_f = 1.226e+18 * exp(-1.4 * logT - (21864.7641292151) * invT);
  dlnkfdT = -1.4 * invT + (21864.7641292151) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[20] += q; // ch2co
  wdot[28] += q; // nc3h7
  wdot[55] -= q; // nc3h7coch2
  // d()/d[nc3h7coch2]
  dqdci = +k_f;
  J[4915] += dqdci; // dwdot[ch2co]/d[nc3h7coch2]
  J[4923] += dqdci; // dwdot[nc3h7]/d[nc3h7coch2]
  J[4950] -= dqdci; // dwdot[nc3h7coch2]/d[nc3h7coch2]
  // d()/dT
  J[7852] += dqdT; // dwdot[ch2co]/dT
  J[7860] += dqdT; // dwdot[nc3h7]/dT
  J[7887] -= dqdT; // dwdot[nc3h7coch2]/dT

  // reaction 500: ch2co + nc3h7 => nc3h7coch2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[20] * sc[28];
  k_f = 100000 * exp(-(5837.31332333475) * invT);
  dlnkfdT = (5837.31332333475) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[20] -= q; // ch2co
  wdot[28] -= q; // nc3h7
  wdot[55] += q; // nc3h7coch2
  // d()/d[ch2co]
  dqdci = +k_f * sc[28];
  J[1800] -= dqdci; // dwdot[ch2co]/d[ch2co]
  J[1808] -= dqdci; // dwdot[nc3h7]/d[ch2co]
  J[1835] += dqdci; // dwdot[nc3h7coch2]/d[ch2co]
  // d()/d[nc3h7]
  dqdci = +k_f * sc[20];
  J[2512] -= dqdci; // dwdot[ch2co]/d[nc3h7]
  J[2520] -= dqdci; // dwdot[nc3h7]/d[nc3h7]
  J[2547] += dqdci; // dwdot[nc3h7coch2]/d[nc3h7]
  // d()/dT
  J[7852] -= dqdT; // dwdot[ch2co]/dT
  J[7860] -= dqdT; // dwdot[nc3h7]/dT
  J[7887] += dqdT; // dwdot[nc3h7coch2]/dT

  // reaction 501: nc4h9cho + o2 => ho2 + nc4h9co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[56];
  k_f = 20000000 * exp(0.5 * logT - (21235.7432969592) * invT);
  dlnkfdT = 0.5 * invT + (21235.7432969592) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[56] -= q; // nc4h9cho
  wdot[57] += q; // nc4h9co
  // d()/d[o2]
  dqdci = +k_f * sc[56];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[323] -= dqdci; // dwdot[nc4h9cho]/d[o2]
  J[324] += dqdci; // dwdot[nc4h9co]/d[o2]
  // d()/d[nc4h9cho]
  dqdci = +k_f * sc[3];
  J[4987] -= dqdci; // dwdot[o2]/d[nc4h9cho]
  J[4995] += dqdci; // dwdot[ho2]/d[nc4h9cho]
  J[5040] -= dqdci; // dwdot[nc4h9cho]/d[nc4h9cho]
  J[5041] += dqdci; // dwdot[nc4h9co]/d[nc4h9cho]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7888] -= dqdT; // dwdot[nc4h9cho]/dT
  J[7889] += dqdT; // dwdot[nc4h9co]/dT

  // reaction 502: ho2 + nc4h9co => nc4h9cho + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[57];
  k_f = 10 * exp(-(20128.6666321888) * invT);
  dlnkfdT = (20128.6666321888) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[56] += q; // nc4h9cho
  wdot[57] -= q; // nc4h9co
  // d()/d[ho2]
  dqdci = +k_f * sc[57];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1035] += dqdci; // dwdot[nc4h9cho]/d[ho2]
  J[1036] -= dqdci; // dwdot[nc4h9co]/d[ho2]
  // d()/d[nc4h9co]
  dqdci = +k_f * sc[11];
  J[5076] += dqdci; // dwdot[o2]/d[nc4h9co]
  J[5084] -= dqdci; // dwdot[ho2]/d[nc4h9co]
  J[5129] += dqdci; // dwdot[nc4h9cho]/d[nc4h9co]
  J[5130] -= dqdci; // dwdot[nc4h9co]/d[nc4h9co]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7888] += dqdT; // dwdot[nc4h9cho]/dT
  J[7889] -= dqdT; // dwdot[nc4h9co]/dT

  // reaction 503: nc4h9cho + oh => h2o + nc4h9co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[56];
  k_f = 26900 * exp(0.76 * logT - (-171.093666373605) * invT);
  dlnkfdT = 0.76 * invT + (-171.093666373605) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[56] -= q; // nc4h9cho
  wdot[57] += q; // nc4h9co
  // d()/d[oh]
  dqdci = +k_f * sc[56];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[412] -= dqdci; // dwdot[nc4h9cho]/d[oh]
  J[413] += dqdci; // dwdot[nc4h9co]/d[oh]
  // d()/d[nc4h9cho]
  dqdci = +k_f * sc[4];
  J[4988] -= dqdci; // dwdot[oh]/d[nc4h9cho]
  J[4989] += dqdci; // dwdot[h2o]/d[nc4h9cho]
  J[5040] -= dqdci; // dwdot[nc4h9cho]/d[nc4h9cho]
  J[5041] += dqdci; // dwdot[nc4h9co]/d[nc4h9cho]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7888] -= dqdT; // dwdot[nc4h9cho]/dT
  J[7889] += dqdT; // dwdot[nc4h9co]/dT

  // reaction 504: h2o + nc4h9co => nc4h9cho + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[57];
  k_f = 21430 * exp(0.73 * logT - (15720.4886397394) * invT);
  dlnkfdT = 0.73 * invT + (15720.4886397394) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[56] += q; // nc4h9cho
  wdot[57] -= q; // nc4h9co
  // d()/d[h2o]
  dqdci = +k_f * sc[57];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[501] += dqdci; // dwdot[nc4h9cho]/d[h2o]
  J[502] -= dqdci; // dwdot[nc4h9co]/d[h2o]
  // d()/d[nc4h9co]
  dqdci = +k_f * sc[5];
  J[5077] += dqdci; // dwdot[oh]/d[nc4h9co]
  J[5078] -= dqdci; // dwdot[h2o]/d[nc4h9co]
  J[5129] += dqdci; // dwdot[nc4h9cho]/d[nc4h9co]
  J[5130] -= dqdci; // dwdot[nc4h9co]/d[nc4h9co]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7888] += dqdT; // dwdot[nc4h9cho]/dT
  J[7889] -= dqdT; // dwdot[nc4h9co]/dT

  // reaction 505: h + nc4h9cho => h2 + nc4h9co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[56];
  k_f = 40000000 * exp(-(2113.50999637982) * invT);
  dlnkfdT = (2113.50999637982) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[56] -= q; // nc4h9cho
  wdot[57] += q; // nc4h9co
  // d()/d[h]
  dqdci = +k_f * sc[56];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[56] -= dqdci; // dwdot[nc4h9cho]/d[h]
  J[57] += dqdci; // dwdot[nc4h9co]/d[h]
  // d()/d[nc4h9cho]
  dqdci = +k_f * sc[0];
  J[4984] -= dqdci; // dwdot[h]/d[nc4h9cho]
  J[4985] += dqdci; // dwdot[h2]/d[nc4h9cho]
  J[5040] -= dqdci; // dwdot[nc4h9cho]/d[nc4h9cho]
  J[5041] += dqdci; // dwdot[nc4h9co]/d[nc4h9cho]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7888] -= dqdT; // dwdot[nc4h9cho]/dT
  J[7889] += dqdT; // dwdot[nc4h9co]/dT

  // reaction 506: h2 + nc4h9co => h + nc4h9cho
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[57];
  k_f = 18000000 * exp(-(12077.1999793133) * invT);
  dlnkfdT = (12077.1999793133) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[56] += q; // nc4h9cho
  wdot[57] -= q; // nc4h9co
  // d()/d[h2]
  dqdci = +k_f * sc[57];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[145] += dqdci; // dwdot[nc4h9cho]/d[h2]
  J[146] -= dqdci; // dwdot[nc4h9co]/d[h2]
  // d()/d[nc4h9co]
  dqdci = +k_f * sc[1];
  J[5073] += dqdci; // dwdot[h]/d[nc4h9co]
  J[5074] -= dqdci; // dwdot[h2]/d[nc4h9co]
  J[5129] += dqdci; // dwdot[nc4h9cho]/d[nc4h9co]
  J[5130] -= dqdci; // dwdot[nc4h9co]/d[nc4h9co]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7888] += dqdT; // dwdot[nc4h9cho]/dT
  J[7889] -= dqdT; // dwdot[nc4h9co]/dT

  // reaction 507: nc4h9cho + o => nc4h9co + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[56];
  k_f = 5000000 * exp(-(900.757831790448) * invT);
  dlnkfdT = (900.757831790448) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[4] += q;  // oh
  wdot[56] -= q; // nc4h9cho
  wdot[57] += q; // nc4h9co
  // d()/d[o]
  dqdci = +k_f * sc[56];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[182] += dqdci; // dwdot[oh]/d[o]
  J[234] -= dqdci; // dwdot[nc4h9cho]/d[o]
  J[235] += dqdci; // dwdot[nc4h9co]/d[o]
  // d()/d[nc4h9cho]
  dqdci = +k_f * sc[2];
  J[4986] -= dqdci; // dwdot[o]/d[nc4h9cho]
  J[4988] += dqdci; // dwdot[oh]/d[nc4h9cho]
  J[5040] -= dqdci; // dwdot[nc4h9cho]/d[nc4h9cho]
  J[5041] += dqdci; // dwdot[nc4h9co]/d[nc4h9cho]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7888] -= dqdT; // dwdot[nc4h9cho]/dT
  J[7889] += dqdT; // dwdot[nc4h9co]/dT

  // reaction 508: nc4h9co + oh => nc4h9cho + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[57];
  k_f = 1000000 * exp(-(9561.11665028967) * invT);
  dlnkfdT = (9561.11665028967) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[4] -= q;  // oh
  wdot[56] += q; // nc4h9cho
  wdot[57] -= q; // nc4h9co
  // d()/d[oh]
  dqdci = +k_f * sc[57];
  J[358] += dqdci; // dwdot[o]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[412] += dqdci; // dwdot[nc4h9cho]/d[oh]
  J[413] -= dqdci; // dwdot[nc4h9co]/d[oh]
  // d()/d[nc4h9co]
  dqdci = +k_f * sc[4];
  J[5075] += dqdci; // dwdot[o]/d[nc4h9co]
  J[5077] -= dqdci; // dwdot[oh]/d[nc4h9co]
  J[5129] += dqdci; // dwdot[nc4h9cho]/d[nc4h9co]
  J[5130] -= dqdci; // dwdot[nc4h9co]/d[nc4h9co]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7888] += dqdT; // dwdot[nc4h9cho]/dT
  J[7889] -= dqdT; // dwdot[nc4h9co]/dT

  // reaction 509: ho2 + nc4h9cho => h2o2 + nc4h9co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[56];
  k_f = 2800000 * exp(-(6843.74665494419) * invT);
  dlnkfdT = (6843.74665494419) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  wdot[56] -= q; // nc4h9cho
  wdot[57] += q; // nc4h9co
  // d()/d[ho2]
  dqdci = +k_f * sc[56];
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[991] += dqdci;  // dwdot[h2o2]/d[ho2]
  J[1035] -= dqdci; // dwdot[nc4h9cho]/d[ho2]
  J[1036] += dqdci; // dwdot[nc4h9co]/d[ho2]
  // d()/d[nc4h9cho]
  dqdci = +k_f * sc[11];
  J[4995] -= dqdci; // dwdot[ho2]/d[nc4h9cho]
  J[4996] += dqdci; // dwdot[h2o2]/d[nc4h9cho]
  J[5040] -= dqdci; // dwdot[nc4h9cho]/d[nc4h9cho]
  J[5041] += dqdci; // dwdot[nc4h9co]/d[nc4h9cho]
  // d()/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT
  J[7888] -= dqdT; // dwdot[nc4h9cho]/dT
  J[7889] += dqdT; // dwdot[nc4h9co]/dT

  // reaction 510: h2o2 + nc4h9co => ho2 + nc4h9cho
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[57];
  k_f = 1000000 * exp(-(5032.1666580472) * invT);
  dlnkfdT = (5032.1666580472) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // ho2
  wdot[12] -= q; // h2o2
  wdot[56] += q; // nc4h9cho
  wdot[57] -= q; // nc4h9co
  // d()/d[h2o2]
  dqdci = +k_f * sc[57];
  J[1079] += dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci; // dwdot[h2o2]/d[h2o2]
  J[1124] += dqdci; // dwdot[nc4h9cho]/d[h2o2]
  J[1125] -= dqdci; // dwdot[nc4h9co]/d[h2o2]
  // d()/d[nc4h9co]
  dqdci = +k_f * sc[12];
  J[5084] += dqdci; // dwdot[ho2]/d[nc4h9co]
  J[5085] -= dqdci; // dwdot[h2o2]/d[nc4h9co]
  J[5129] += dqdci; // dwdot[nc4h9cho]/d[nc4h9co]
  J[5130] -= dqdci; // dwdot[nc4h9co]/d[nc4h9co]
  // d()/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT; // dwdot[h2o2]/dT
  J[7888] += dqdT; // dwdot[nc4h9cho]/dT
  J[7889] -= dqdT; // dwdot[nc4h9co]/dT

  // reaction 511: ch3 + nc4h9cho => ch4 + nc4h9co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[56];
  k_f = 1700000 * exp(-(4247.14865939183) * invT);
  dlnkfdT = (4247.14865939183) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[56] -= q; // nc4h9cho
  wdot[57] += q; // nc4h9co
  // d()/d[ch3]
  dqdci = +k_f * sc[56];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[857] -= dqdci; // dwdot[nc4h9cho]/d[ch3]
  J[858] += dqdci; // dwdot[nc4h9co]/d[ch3]
  // d()/d[nc4h9cho]
  dqdci = +k_f * sc[9];
  J[4993] -= dqdci; // dwdot[ch3]/d[nc4h9cho]
  J[4994] += dqdci; // dwdot[ch4]/d[nc4h9cho]
  J[5040] -= dqdci; // dwdot[nc4h9cho]/d[nc4h9cho]
  J[5041] += dqdci; // dwdot[nc4h9co]/d[nc4h9cho]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7888] -= dqdT; // dwdot[nc4h9cho]/dT
  J[7889] += dqdT; // dwdot[nc4h9co]/dT

  // reaction 512: ch4 + nc4h9co => ch3 + nc4h9cho
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[57];
  k_f = 15000000 * exp(-(14090.0666425322) * invT);
  dlnkfdT = (14090.0666425322) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[56] += q; // nc4h9cho
  wdot[57] -= q; // nc4h9co
  // d()/d[ch4]
  dqdci = +k_f * sc[57];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[946] += dqdci; // dwdot[nc4h9cho]/d[ch4]
  J[947] -= dqdci; // dwdot[nc4h9co]/d[ch4]
  // d()/d[nc4h9co]
  dqdci = +k_f * sc[10];
  J[5082] += dqdci; // dwdot[ch3]/d[nc4h9co]
  J[5083] -= dqdci; // dwdot[ch4]/d[nc4h9co]
  J[5129] += dqdci; // dwdot[nc4h9cho]/d[nc4h9co]
  J[5130] -= dqdci; // dwdot[nc4h9co]/d[nc4h9co]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7888] += dqdT; // dwdot[nc4h9cho]/dT
  J[7889] -= dqdT; // dwdot[nc4h9co]/dT

  // reaction 513: ch3o2 + nc4h9cho => ch3o2h + nc4h9co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[38] * sc[56];
  k_f = 1000000 * exp(-(4780.55832514484) * invT);
  dlnkfdT = (4780.55832514484) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[38] -= q; // ch3o2
  wdot[39] += q; // ch3o2h
  wdot[56] -= q; // nc4h9cho
  wdot[57] += q; // nc4h9co
  // d()/d[ch3o2]
  dqdci = +k_f * sc[56];
  J[3420] -= dqdci; // dwdot[ch3o2]/d[ch3o2]
  J[3421] += dqdci; // dwdot[ch3o2h]/d[ch3o2]
  J[3438] -= dqdci; // dwdot[nc4h9cho]/d[ch3o2]
  J[3439] += dqdci; // dwdot[nc4h9co]/d[ch3o2]
  // d()/d[nc4h9cho]
  dqdci = +k_f * sc[38];
  J[5022] -= dqdci; // dwdot[ch3o2]/d[nc4h9cho]
  J[5023] += dqdci; // dwdot[ch3o2h]/d[nc4h9cho]
  J[5040] -= dqdci; // dwdot[nc4h9cho]/d[nc4h9cho]
  J[5041] += dqdci; // dwdot[nc4h9co]/d[nc4h9cho]
  // d()/dT
  J[7870] -= dqdT; // dwdot[ch3o2]/dT
  J[7871] += dqdT; // dwdot[ch3o2h]/dT
  J[7888] -= dqdT; // dwdot[nc4h9cho]/dT
  J[7889] += dqdT; // dwdot[nc4h9co]/dT

  // reaction 514: ch3o2h + nc4h9co => ch3o2 + nc4h9cho
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[39] * sc[57];
  k_f = 25000 * exp(-(5032.1666580472) * invT);
  dlnkfdT = (5032.1666580472) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[38] += q; // ch3o2
  wdot[39] -= q; // ch3o2h
  wdot[56] += q; // nc4h9cho
  wdot[57] -= q; // nc4h9co
  // d()/d[ch3o2h]
  dqdci = +k_f * sc[57];
  J[3509] += dqdci; // dwdot[ch3o2]/d[ch3o2h]
  J[3510] -= dqdci; // dwdot[ch3o2h]/d[ch3o2h]
  J[3527] += dqdci; // dwdot[nc4h9cho]/d[ch3o2h]
  J[3528] -= dqdci; // dwdot[nc4h9co]/d[ch3o2h]
  // d()/d[nc4h9co]
  dqdci = +k_f * sc[39];
  J[5111] += dqdci; // dwdot[ch3o2]/d[nc4h9co]
  J[5112] -= dqdci; // dwdot[ch3o2h]/d[nc4h9co]
  J[5129] += dqdci; // dwdot[nc4h9cho]/d[nc4h9co]
  J[5130] -= dqdci; // dwdot[nc4h9co]/d[nc4h9co]
  // d()/dT
  J[7870] += dqdT; // dwdot[ch3o2]/dT
  J[7871] -= dqdT; // dwdot[ch3o2h]/dT
  J[7888] += dqdT; // dwdot[nc4h9cho]/dT
  J[7889] -= dqdT; // dwdot[nc4h9co]/dT

  // reaction 515: nc4h9co => co + pc4h9
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[57];
  k_f = 100000000000 * exp(-(4830.87999172531) * invT);
  dlnkfdT = (4830.87999172531) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] += q;  // co
  wdot[31] += q; // pc4h9
  wdot[57] -= q; // nc4h9co
  // d()/d[nc4h9co]
  dqdci = +k_f;
  J[5079] += dqdci; // dwdot[co]/d[nc4h9co]
  J[5104] += dqdci; // dwdot[pc4h9]/d[nc4h9co]
  J[5130] -= dqdci; // dwdot[nc4h9co]/d[nc4h9co]
  // d()/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7863] += dqdT; // dwdot[pc4h9]/dT
  J[7889] -= dqdT; // dwdot[nc4h9co]/dT

  // reaction 516: co + pc4h9 => nc4h9co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[31];
  k_f = 100000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // co
  wdot[31] -= q; // pc4h9
  wdot[57] += q; // nc4h9co
  // d()/d[co]
  dqdci = +k_f * sc[31];
  J[540] -= dqdci; // dwdot[co]/d[co]
  J[565] -= dqdci; // dwdot[pc4h9]/d[co]
  J[591] += dqdci; // dwdot[nc4h9co]/d[co]
  // d()/d[pc4h9]
  dqdci = +k_f * sc[6];
  J[2765] -= dqdci; // dwdot[co]/d[pc4h9]
  J[2790] -= dqdci; // dwdot[pc4h9]/d[pc4h9]
  J[2816] += dqdci; // dwdot[nc4h9co]/d[pc4h9]
  // d()/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7863] -= dqdT; // dwdot[pc4h9]/dT
  J[7889] += dqdT; // dwdot[nc4h9co]/dT

  // reaction 517: ch2(s) + ch4 => 2 ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[50];
  k_f = 40000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += 2 * q; // ch3
  wdot[10] -= q;    // ch4
  wdot[50] -= q;    // ch2(s)
  // d()/d[ch4]
  dqdci = +k_f * sc[50];
  J[899] += 2 * dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci;     // dwdot[ch4]/d[ch4]
  J[940] -= dqdci;     // dwdot[ch2(s)]/d[ch4]
  // d()/d[ch2(s)]
  dqdci = +k_f * sc[10];
  J[4459] += 2 * dqdci; // dwdot[ch3]/d[ch2(s)]
  J[4460] -= dqdci;     // dwdot[ch4]/d[ch2(s)]
  J[4500] -= dqdci;     // dwdot[ch2(s)]/d[ch2(s)]
  // d()/dT
  J[7841] += 2 * dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT;     // dwdot[ch4]/dT
  J[7882] -= dqdT;     // dwdot[ch2(s)]/dT

  // reaction 518: 2 ch3 => ch2(s) + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[9] * sc[9]);
  k_f = 5429000000 * exp(-0.89 * logT - (7875.34081984386) * invT);
  dlnkfdT = -0.89 * invT + (7875.34081984386) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= 2 * q; // ch3
  wdot[10] += q;    // ch4
  wdot[50] += q;    // ch2(s)
  // d()/d[ch3]
  dqdci = +k_f * 2.000000 * sc[9];
  J[810] += -2 * dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci;      // dwdot[ch4]/d[ch3]
  J[851] += dqdci;      // dwdot[ch2(s)]/d[ch3]
  // d()/dT
  J[7841] += -2 * dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT;      // dwdot[ch4]/dT
  J[7882] += dqdT;      // dwdot[ch2(s)]/dT

  // reaction 519: c2h6 + ch2(s) => c2h5 + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[50];
  k_f = 120000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[15] -= q; // c2h6
  wdot[17] += q; // c2h5
  wdot[50] -= q; // ch2(s)
  // d()/d[c2h6]
  dqdci = +k_f * sc[50];
  J[1344] += dqdci; // dwdot[ch3]/d[c2h6]
  J[1350] -= dqdci; // dwdot[c2h6]/d[c2h6]
  J[1352] += dqdci; // dwdot[c2h5]/d[c2h6]
  J[1385] -= dqdci; // dwdot[ch2(s)]/d[c2h6]
  // d()/d[ch2(s)]
  dqdci = +k_f * sc[15];
  J[4459] += dqdci; // dwdot[ch3]/d[ch2(s)]
  J[4465] -= dqdci; // dwdot[c2h6]/d[ch2(s)]
  J[4467] += dqdci; // dwdot[c2h5]/d[ch2(s)]
  J[4500] -= dqdci; // dwdot[ch2(s)]/d[ch2(s)]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7847] -= dqdT; // dwdot[c2h6]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7882] -= dqdT; // dwdot[ch2(s)]/dT

  // reaction 520: c2h5 + ch3 => c2h6 + ch2(s)
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[17];
  k_f = 104100000 * exp(-0.33 * logT - (9973.75431624954) * invT);
  dlnkfdT = -0.33 * invT + (9973.75431624954) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[15] += q; // c2h6
  wdot[17] -= q; // c2h5
  wdot[50] += q; // ch2(s)
  // d()/d[ch3]
  dqdci = +k_f * sc[17];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[816] += dqdci; // dwdot[c2h6]/d[ch3]
  J[818] -= dqdci; // dwdot[c2h5]/d[ch3]
  J[851] += dqdci; // dwdot[ch2(s)]/d[ch3]
  // d()/d[c2h5]
  dqdci = +k_f * sc[9];
  J[1522] -= dqdci; // dwdot[ch3]/d[c2h5]
  J[1528] += dqdci; // dwdot[c2h6]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1563] += dqdci; // dwdot[ch2(s)]/d[c2h5]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7847] += dqdT; // dwdot[c2h6]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7882] += dqdT; // dwdot[ch2(s)]/dT

  // reaction 521: ch2(s) + o2 => co + h + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[50];
  k_f = 70000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[3] -= q;  // o2
  wdot[4] += q;  // oh
  wdot[6] += q;  // co
  wdot[50] -= q; // ch2(s)
  // d()/d[o2]
  dqdci = +k_f * sc[50];
  J[267] += dqdci; // dwdot[h]/d[o2]
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[271] += dqdci; // dwdot[oh]/d[o2]
  J[273] += dqdci; // dwdot[co]/d[o2]
  J[317] -= dqdci; // dwdot[ch2(s)]/d[o2]
  // d()/d[ch2(s)]
  dqdci = +k_f * sc[3];
  J[4450] += dqdci; // dwdot[h]/d[ch2(s)]
  J[4453] -= dqdci; // dwdot[o2]/d[ch2(s)]
  J[4454] += dqdci; // dwdot[oh]/d[ch2(s)]
  J[4456] += dqdci; // dwdot[co]/d[ch2(s)]
  J[4500] -= dqdci; // dwdot[ch2(s)]/d[ch2(s)]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7882] -= dqdT; // dwdot[ch2(s)]/dT

  // reaction 522: ch2(s) + h2 => ch3 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[50];
  k_f = 70000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[9] += q;  // ch3
  wdot[50] -= q; // ch2(s)
  // d()/d[h2]
  dqdci = +k_f * sc[50];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[98] += dqdci;  // dwdot[ch3]/d[h2]
  J[139] -= dqdci; // dwdot[ch2(s)]/d[h2]
  // d()/d[ch2(s)]
  dqdci = +k_f * sc[1];
  J[4450] += dqdci; // dwdot[h]/d[ch2(s)]
  J[4451] -= dqdci; // dwdot[h2]/d[ch2(s)]
  J[4459] += dqdci; // dwdot[ch3]/d[ch2(s)]
  J[4500] -= dqdci; // dwdot[ch2(s)]/d[ch2(s)]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7882] -= dqdT; // dwdot[ch2(s)]/dT

  // reaction 523: ch3 + h => ch2(s) + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[9];
  k_f = 248200000000 * exp(-0.89 * logT - (8116.88481943013) * invT);
  dlnkfdT = -0.89 * invT + (8116.88481943013) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[9] -= q;  // ch3
  wdot[50] += q; // ch2(s)
  // d()/d[h]
  dqdci = +k_f * sc[9];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[9] -= dqdci;  // dwdot[ch3]/d[h]
  J[50] += dqdci; // dwdot[ch2(s)]/d[h]
  // d()/d[ch3]
  dqdci = +k_f * sc[0];
  J[801] -= dqdci; // dwdot[h]/d[ch3]
  J[802] += dqdci; // dwdot[h2]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[851] += dqdci; // dwdot[ch2(s)]/d[ch3]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7882] += dqdT; // dwdot[ch2(s)]/dT

  // reaction 524: ch2(s) + o => co + 2 h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[50];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += 2 * q; // h
  wdot[2] -= q;     // o
  wdot[6] += q;     // co
  wdot[50] -= q;    // ch2(s)
  // d()/d[o]
  dqdci = +k_f * sc[50];
  J[178] += 2 * dqdci; // dwdot[h]/d[o]
  J[180] -= dqdci;     // dwdot[o]/d[o]
  J[184] += dqdci;     // dwdot[co]/d[o]
  J[228] -= dqdci;     // dwdot[ch2(s)]/d[o]
  // d()/d[ch2(s)]
  dqdci = +k_f * sc[2];
  J[4450] += 2 * dqdci; // dwdot[h]/d[ch2(s)]
  J[4452] -= dqdci;     // dwdot[o]/d[ch2(s)]
  J[4456] += dqdci;     // dwdot[co]/d[ch2(s)]
  J[4500] -= dqdci;     // dwdot[ch2(s)]/d[ch2(s)]
  // d()/dT
  J[7832] += 2 * dqdT; // dwdot[h]/dT
  J[7834] -= dqdT;     // dwdot[o]/dT
  J[7838] += dqdT;     // dwdot[co]/dT
  J[7882] -= dqdT;     // dwdot[ch2(s)]/dT

  // reaction 525: ch2(s) + oh => ch2o + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[50];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[4] -= q;  // oh
  wdot[13] += q; // ch2o
  wdot[50] -= q; // ch2(s)
  // d()/d[oh]
  dqdci = +k_f * sc[50];
  J[356] += dqdci; // dwdot[h]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[369] += dqdci; // dwdot[ch2o]/d[oh]
  J[406] -= dqdci; // dwdot[ch2(s)]/d[oh]
  // d()/d[ch2(s)]
  dqdci = +k_f * sc[4];
  J[4450] += dqdci; // dwdot[h]/d[ch2(s)]
  J[4454] -= dqdci; // dwdot[oh]/d[ch2(s)]
  J[4463] += dqdci; // dwdot[ch2o]/d[ch2(s)]
  J[4500] -= dqdci; // dwdot[ch2(s)]/d[ch2(s)]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT
  J[7882] -= dqdT; // dwdot[ch2(s)]/dT

  // reaction 526: ch2o + h => ch2(s) + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[13];
  k_f = 3194000000000 * exp(-0.89 * logT - (44212.6162576027) * invT);
  dlnkfdT = -0.89 * invT + (44212.6162576027) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[4] += q;  // oh
  wdot[13] -= q; // ch2o
  wdot[50] += q; // ch2(s)
  // d()/d[h]
  dqdci = +k_f * sc[13];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[4] += dqdci;  // dwdot[oh]/d[h]
  J[13] -= dqdci; // dwdot[ch2o]/d[h]
  J[50] += dqdci; // dwdot[ch2(s)]/d[h]
  // d()/d[ch2o]
  dqdci = +k_f * sc[0];
  J[1157] -= dqdci; // dwdot[h]/d[ch2o]
  J[1161] += dqdci; // dwdot[oh]/d[ch2o]
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  J[1207] += dqdci; // dwdot[ch2(s)]/d[ch2o]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT
  J[7882] += dqdT; // dwdot[ch2(s)]/dT

  // reaction 527: ch2(s) + co2 => ch2o + co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[50];
  k_f = 3000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] += q;  // co
  wdot[8] -= q;  // co2
  wdot[13] += q; // ch2o
  wdot[50] -= q; // ch2(s)
  // d()/d[co2]
  dqdci = +k_f * sc[50];
  J[718] += dqdci; // dwdot[co]/d[co2]
  J[720] -= dqdci; // dwdot[co2]/d[co2]
  J[725] += dqdci; // dwdot[ch2o]/d[co2]
  J[762] -= dqdci; // dwdot[ch2(s)]/d[co2]
  // d()/d[ch2(s)]
  dqdci = +k_f * sc[8];
  J[4456] += dqdci; // dwdot[co]/d[ch2(s)]
  J[4458] -= dqdci; // dwdot[co2]/d[ch2(s)]
  J[4463] += dqdci; // dwdot[ch2o]/d[ch2(s)]
  J[4500] -= dqdci; // dwdot[ch2(s)]/d[ch2(s)]
  // d()/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7840] -= dqdT; // dwdot[co2]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT
  J[7882] -= dqdT; // dwdot[ch2(s)]/dT

  // reaction 528: ch2o + co => ch2(s) + co2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[13];
  k_f = 2852000000 * exp(-0.89 * logT - (32970.7559435252) * invT);
  dlnkfdT = -0.89 * invT + (32970.7559435252) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // co
  wdot[8] += q;  // co2
  wdot[13] -= q; // ch2o
  wdot[50] += q; // ch2(s)
  // d()/d[co]
  dqdci = +k_f * sc[13];
  J[540] -= dqdci; // dwdot[co]/d[co]
  J[542] += dqdci; // dwdot[co2]/d[co]
  J[547] -= dqdci; // dwdot[ch2o]/d[co]
  J[584] += dqdci; // dwdot[ch2(s)]/d[co]
  // d()/d[ch2o]
  dqdci = +k_f * sc[6];
  J[1163] -= dqdci; // dwdot[co]/d[ch2o]
  J[1165] += dqdci; // dwdot[co2]/d[ch2o]
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  J[1207] += dqdci; // dwdot[ch2(s)]/d[ch2o]
  // d()/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7840] += dqdT; // dwdot[co2]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT
  J[7882] += dqdT; // dwdot[ch2(s)]/dT

  // reaction 529: ch2(s) + ch3 => c2h4 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[50];
  k_f = 20000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[9] -= q;  // ch3
  wdot[16] += q; // c2h4
  wdot[50] -= q; // ch2(s)
  // d()/d[ch3]
  dqdci = +k_f * sc[50];
  J[801] += dqdci; // dwdot[h]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[817] += dqdci; // dwdot[c2h4]/d[ch3]
  J[851] -= dqdci; // dwdot[ch2(s)]/d[ch3]
  // d()/d[ch2(s)]
  dqdci = +k_f * sc[9];
  J[4450] += dqdci; // dwdot[h]/d[ch2(s)]
  J[4459] -= dqdci; // dwdot[ch3]/d[ch2(s)]
  J[4466] += dqdci; // dwdot[c2h4]/d[ch2(s)]
  J[4500] -= dqdci; // dwdot[ch2(s)]/d[ch2(s)]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7882] -= dqdT; // dwdot[ch2(s)]/dT

  // reaction 530: c2h4 + h => ch2(s) + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[16];
  k_f = 2671000000 * exp(-0.06 * logT - (34641.4352739969) * invT);
  dlnkfdT = -0.06 * invT + (34641.4352739969) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[9] += q;  // ch3
  wdot[16] -= q; // c2h4
  wdot[50] += q; // ch2(s)
  // d()/d[h]
  dqdci = +k_f * sc[16];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[9] += dqdci;  // dwdot[ch3]/d[h]
  J[16] -= dqdci; // dwdot[c2h4]/d[h]
  J[50] += dqdci; // dwdot[ch2(s)]/d[h]
  // d()/d[c2h4]
  dqdci = +k_f * sc[0];
  J[1424] -= dqdci; // dwdot[h]/d[c2h4]
  J[1433] += dqdci; // dwdot[ch3]/d[c2h4]
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1474] += dqdci; // dwdot[ch2(s)]/d[c2h4]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7882] += dqdT; // dwdot[ch2(s)]/dT

  // reaction 531: ch2(s) + ch2co => c2h4 + co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[20] * sc[50];
  k_f = 160000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] += q;  // co
  wdot[16] += q; // c2h4
  wdot[20] -= q; // ch2co
  wdot[50] -= q; // ch2(s)
  // d()/d[ch2co]
  dqdci = +k_f * sc[50];
  J[1786] += dqdci; // dwdot[co]/d[ch2co]
  J[1796] += dqdci; // dwdot[c2h4]/d[ch2co]
  J[1800] -= dqdci; // dwdot[ch2co]/d[ch2co]
  J[1830] -= dqdci; // dwdot[ch2(s)]/d[ch2co]
  // d()/d[ch2(s)]
  dqdci = +k_f * sc[20];
  J[4456] += dqdci; // dwdot[co]/d[ch2(s)]
  J[4466] += dqdci; // dwdot[c2h4]/d[ch2(s)]
  J[4470] -= dqdci; // dwdot[ch2co]/d[ch2(s)]
  J[4500] -= dqdci; // dwdot[ch2(s)]/d[ch2(s)]
  // d()/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7852] -= dqdT; // dwdot[ch2co]/dT
  J[7882] -= dqdT; // dwdot[ch2(s)]/dT

  // reaction 532: c2h4 + co => ch2(s) + ch2co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[16];
  k_f = 4596000000 * exp(-0.06 * logT - (53139.6799089784) * invT);
  dlnkfdT = -0.06 * invT + (53139.6799089784) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // co
  wdot[16] -= q; // c2h4
  wdot[20] += q; // ch2co
  wdot[50] += q; // ch2(s)
  // d()/d[co]
  dqdci = +k_f * sc[16];
  J[540] -= dqdci; // dwdot[co]/d[co]
  J[550] -= dqdci; // dwdot[c2h4]/d[co]
  J[554] += dqdci; // dwdot[ch2co]/d[co]
  J[584] += dqdci; // dwdot[ch2(s)]/d[co]
  // d()/d[c2h4]
  dqdci = +k_f * sc[6];
  J[1430] -= dqdci; // dwdot[co]/d[c2h4]
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1444] += dqdci; // dwdot[ch2co]/d[c2h4]
  J[1474] += dqdci; // dwdot[ch2(s)]/d[c2h4]
  // d()/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7852] += dqdT; // dwdot[ch2co]/dT
  J[7882] += dqdT; // dwdot[ch2(s)]/dT

  // reaction 533: nc7h16 => c7h15-1 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[58];
  k_f = 1.34e+88 * exp(-21.17 * logT - (71859.339876914) * invT);
  dlnkfdT = -21.17 * invT + (71859.339876914) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[58] -= q; // nc7h16
  wdot[59] += q; // c7h15-1
  // d()/d[nc7h16]
  dqdci = +k_f;
  J[5162] += dqdci; // dwdot[h]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5221] += dqdci; // dwdot[c7h15-1]/d[nc7h16]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7891] += dqdT; // dwdot[c7h15-1]/dT

  // reaction 534: c7h15-1 + h => nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[59];
  k_f = 3.374e+76 * exp(-20.22 * logT - (19932.4121325249) * invT);
  dlnkfdT = -20.22 * invT + (19932.4121325249) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[58] += q; // nc7h16
  wdot[59] -= q; // c7h15-1
  // d()/d[h]
  dqdci = +k_f * sc[59];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[58] += dqdci; // dwdot[nc7h16]/d[h]
  J[59] -= dqdci; // dwdot[c7h15-1]/d[h]
  // d()/d[c7h15-1]
  dqdci = +k_f * sc[0];
  J[5251] -= dqdci; // dwdot[h]/d[c7h15-1]
  J[5309] += dqdci; // dwdot[nc7h16]/d[c7h15-1]
  J[5310] -= dqdci; // dwdot[c7h15-1]/d[c7h15-1]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7891] -= dqdT; // dwdot[c7h15-1]/dT

  // reaction 535: nc7h16 => c7h15-2 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[58];
  k_f = 6.5e+87 * exp(-21.01 * logT - (70198.7248797584) * invT);
  dlnkfdT = -21.01 * invT + (70198.7248797584) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[58] -= q; // nc7h16
  wdot[60] += q; // c7h15-2
  // d()/d[nc7h16]
  dqdci = +k_f;
  J[5162] += dqdci; // dwdot[h]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5222] += dqdci; // dwdot[c7h15-2]/d[nc7h16]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7892] += dqdT; // dwdot[c7h15-2]/dT

  // reaction 536: c7h15-2 + h => nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[60];
  k_f = 5.207e+74 * exp(-19.67 * logT - (19570.0961331455) * invT);
  dlnkfdT = -19.67 * invT + (19570.0961331455) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[58] += q; // nc7h16
  wdot[60] -= q; // c7h15-2
  // d()/d[h]
  dqdci = +k_f * sc[60];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[58] += dqdci; // dwdot[nc7h16]/d[h]
  J[60] -= dqdci; // dwdot[c7h15-2]/d[h]
  // d()/d[c7h15-2]
  dqdci = +k_f * sc[0];
  J[5340] -= dqdci; // dwdot[h]/d[c7h15-2]
  J[5398] += dqdci; // dwdot[nc7h16]/d[c7h15-2]
  J[5400] -= dqdci; // dwdot[c7h15-2]/d[c7h15-2]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7892] -= dqdT; // dwdot[c7h15-2]/dT

  // reaction 537: nc7h16 => c7h15-3 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[58];
  k_f = 6.5e+87 * exp(-21.01 * logT - (70198.7248797584) * invT);
  dlnkfdT = -21.01 * invT + (70198.7248797584) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[58] -= q; // nc7h16
  wdot[61] += q; // c7h15-3
  // d()/d[nc7h16]
  dqdci = +k_f;
  J[5162] += dqdci; // dwdot[h]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5223] += dqdci; // dwdot[c7h15-3]/d[nc7h16]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT

  // reaction 538: c7h15-3 + h => nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[61];
  k_f = 5.207e+74 * exp(-19.67 * logT - (19570.0961331455) * invT);
  dlnkfdT = -19.67 * invT + (19570.0961331455) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[58] += q; // nc7h16
  wdot[61] -= q; // c7h15-3
  // d()/d[h]
  dqdci = +k_f * sc[61];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[58] += dqdci; // dwdot[nc7h16]/d[h]
  J[61] -= dqdci; // dwdot[c7h15-3]/d[h]
  // d()/d[c7h15-3]
  dqdci = +k_f * sc[0];
  J[5429] -= dqdci; // dwdot[h]/d[c7h15-3]
  J[5487] += dqdci; // dwdot[nc7h16]/d[c7h15-3]
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT

  // reaction 539: nc7h16 => c7h15-4 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[58];
  k_f = 3.25e+87 * exp(-21.01 * logT - (70198.7248797584) * invT);
  dlnkfdT = -21.01 * invT + (70198.7248797584) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[58] -= q; // nc7h16
  wdot[62] += q; // c7h15-4
  // d()/d[nc7h16]
  dqdci = +k_f;
  J[5162] += dqdci; // dwdot[h]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5224] += dqdci; // dwdot[c7h15-4]/d[nc7h16]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7894] += dqdT; // dwdot[c7h15-4]/dT

  // reaction 540: c7h15-4 + h => nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[62];
  k_f = 5.187e+74 * exp(-19.67 * logT - (19570.0961331455) * invT);
  dlnkfdT = -19.67 * invT + (19570.0961331455) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[58] += q; // nc7h16
  wdot[62] -= q; // c7h15-4
  // d()/d[h]
  dqdci = +k_f * sc[62];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[58] += dqdci; // dwdot[nc7h16]/d[h]
  J[62] -= dqdci; // dwdot[c7h15-4]/d[h]
  // d()/d[c7h15-4]
  dqdci = +k_f * sc[0];
  J[5518] -= dqdci; // dwdot[h]/d[c7h15-4]
  J[5576] += dqdci; // dwdot[nc7h16]/d[c7h15-4]
  J[5580] -= dqdci; // dwdot[c7h15-4]/d[c7h15-4]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7894] -= dqdT; // dwdot[c7h15-4]/dT

  // reaction 541: nc7h16 => nc3h7 + pc4h9
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[58];
  k_f = 1.415e+78 * exp(-17.71 * logT - (60738.2515626297) * invT);
  dlnkfdT = -17.71 * invT + (60738.2515626297) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[28] += q; // nc3h7
  wdot[31] += q; // pc4h9
  wdot[58] -= q; // nc7h16
  // d()/d[nc7h16]
  dqdci = +k_f;
  J[5190] += dqdci; // dwdot[nc3h7]/d[nc7h16]
  J[5193] += dqdci; // dwdot[pc4h9]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  // d()/dT
  J[7860] += dqdT; // dwdot[nc3h7]/dT
  J[7863] += dqdT; // dwdot[pc4h9]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT

  // reaction 542: nc3h7 + pc4h9 => nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[28] * sc[31];
  k_f = 1.363e+62 * exp(-16.11 * logT - (16334.4129720212) * invT);
  dlnkfdT = -16.11 * invT + (16334.4129720212) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[28] -= q; // nc3h7
  wdot[31] -= q; // pc4h9
  wdot[58] += q; // nc7h16
  // d()/d[nc3h7]
  dqdci = +k_f * sc[31];
  J[2520] -= dqdci; // dwdot[nc3h7]/d[nc3h7]
  J[2523] -= dqdci; // dwdot[pc4h9]/d[nc3h7]
  J[2550] += dqdci; // dwdot[nc7h16]/d[nc3h7]
  // d()/d[pc4h9]
  dqdci = +k_f * sc[28];
  J[2787] -= dqdci; // dwdot[nc3h7]/d[pc4h9]
  J[2790] -= dqdci; // dwdot[pc4h9]/d[pc4h9]
  J[2817] += dqdci; // dwdot[nc7h16]/d[pc4h9]
  // d()/dT
  J[7860] -= dqdT; // dwdot[nc3h7]/dT
  J[7863] -= dqdT; // dwdot[pc4h9]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT

  // reaction 543: h + nc7h16 => c7h15-1 + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[58];
  k_f = 0.188 * exp(2.75 * logT - (3160.20066125364) * invT);
  dlnkfdT = 2.75 * invT + (3160.20066125364) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[58] -= q; // nc7h16
  wdot[59] += q; // c7h15-1
  // d()/d[h]
  dqdci = +k_f * sc[58];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[58] -= dqdci; // dwdot[nc7h16]/d[h]
  J[59] += dqdci; // dwdot[c7h15-1]/d[h]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[0];
  J[5162] -= dqdci; // dwdot[h]/d[nc7h16]
  J[5163] += dqdci; // dwdot[h2]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5221] += dqdci; // dwdot[c7h15-1]/d[nc7h16]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7891] += dqdT; // dwdot[c7h15-1]/dT

  // reaction 544: c7h15-1 + h2 => h + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[59];
  k_f = 0.008926 * exp(2.7 * logT - (5308.93582423979) * invT);
  dlnkfdT = 2.7 * invT + (5308.93582423979) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[58] += q; // nc7h16
  wdot[59] -= q; // c7h15-1
  // d()/d[h2]
  dqdci = +k_f * sc[59];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[147] += dqdci; // dwdot[nc7h16]/d[h2]
  J[148] -= dqdci; // dwdot[c7h15-1]/d[h2]
  // d()/d[c7h15-1]
  dqdci = +k_f * sc[1];
  J[5251] += dqdci; // dwdot[h]/d[c7h15-1]
  J[5252] -= dqdci; // dwdot[h2]/d[c7h15-1]
  J[5309] += dqdci; // dwdot[nc7h16]/d[c7h15-1]
  J[5310] -= dqdci; // dwdot[c7h15-1]/d[c7h15-1]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7891] -= dqdT; // dwdot[c7h15-1]/dT

  // reaction 545: h + nc7h16 => c7h15-2 + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[58];
  k_f = 2.6 * exp(2.4 * logT - (2249.8817128129) * invT);
  dlnkfdT = 2.4 * invT + (2249.8817128129) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[58] -= q; // nc7h16
  wdot[60] += q; // c7h15-2
  // d()/d[h]
  dqdci = +k_f * sc[58];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[58] -= dqdci; // dwdot[nc7h16]/d[h]
  J[60] += dqdci; // dwdot[c7h15-2]/d[h]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[0];
  J[5162] -= dqdci; // dwdot[h]/d[nc7h16]
  J[5163] += dqdci; // dwdot[h2]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5222] += dqdci; // dwdot[c7h15-2]/d[nc7h16]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7892] += dqdT; // dwdot[c7h15-2]/dT

  // reaction 546: c7h15-2 + h2 => h + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[60];
  k_f = 0.003928 * exp(2.74 * logT - (5666.21965696114) * invT);
  dlnkfdT = 2.74 * invT + (5666.21965696114) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[58] += q; // nc7h16
  wdot[60] -= q; // c7h15-2
  // d()/d[h2]
  dqdci = +k_f * sc[60];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[147] += dqdci; // dwdot[nc7h16]/d[h2]
  J[149] -= dqdci; // dwdot[c7h15-2]/d[h2]
  // d()/d[c7h15-2]
  dqdci = +k_f * sc[1];
  J[5340] += dqdci; // dwdot[h]/d[c7h15-2]
  J[5341] -= dqdci; // dwdot[h2]/d[c7h15-2]
  J[5398] += dqdci; // dwdot[nc7h16]/d[c7h15-2]
  J[5400] -= dqdci; // dwdot[c7h15-2]/d[c7h15-2]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7892] -= dqdT; // dwdot[c7h15-2]/dT

  // reaction 547: h + nc7h16 => c7h15-3 + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[58];
  k_f = 2.6 * exp(2.4 * logT - (2249.8817128129) * invT);
  dlnkfdT = 2.4 * invT + (2249.8817128129) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[58] -= q; // nc7h16
  wdot[61] += q; // c7h15-3
  // d()/d[h]
  dqdci = +k_f * sc[58];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[58] -= dqdci; // dwdot[nc7h16]/d[h]
  J[61] += dqdci; // dwdot[c7h15-3]/d[h]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[0];
  J[5162] -= dqdci; // dwdot[h]/d[nc7h16]
  J[5163] += dqdci; // dwdot[h2]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5223] += dqdci; // dwdot[c7h15-3]/d[nc7h16]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT

  // reaction 548: c7h15-3 + h2 => h + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[61];
  k_f = 0.003928 * exp(2.74 * logT - (5666.21965696114) * invT);
  dlnkfdT = 2.74 * invT + (5666.21965696114) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[58] += q; // nc7h16
  wdot[61] -= q; // c7h15-3
  // d()/d[h2]
  dqdci = +k_f * sc[61];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[147] += dqdci; // dwdot[nc7h16]/d[h2]
  J[150] -= dqdci; // dwdot[c7h15-3]/d[h2]
  // d()/d[c7h15-3]
  dqdci = +k_f * sc[1];
  J[5429] += dqdci; // dwdot[h]/d[c7h15-3]
  J[5430] -= dqdci; // dwdot[h2]/d[c7h15-3]
  J[5487] += dqdci; // dwdot[nc7h16]/d[c7h15-3]
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT

  // reaction 549: h + nc7h16 => c7h15-4 + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[58];
  k_f = 1.3 * exp(2.4 * logT - (2249.8817128129) * invT);
  dlnkfdT = 2.4 * invT + (2249.8817128129) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[58] -= q; // nc7h16
  wdot[62] += q; // c7h15-4
  // d()/d[h]
  dqdci = +k_f * sc[58];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[58] -= dqdci; // dwdot[nc7h16]/d[h]
  J[62] += dqdci; // dwdot[c7h15-4]/d[h]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[0];
  J[5162] -= dqdci; // dwdot[h]/d[nc7h16]
  J[5163] += dqdci; // dwdot[h2]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5224] += dqdci; // dwdot[c7h15-4]/d[nc7h16]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7894] += dqdT; // dwdot[c7h15-4]/dT

  // reaction 550: c7h15-4 + h2 => h + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[62];
  k_f = 0.003913 * exp(2.74 * logT - (5666.21965696114) * invT);
  dlnkfdT = 2.74 * invT + (5666.21965696114) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[58] += q; // nc7h16
  wdot[62] -= q; // c7h15-4
  // d()/d[h2]
  dqdci = +k_f * sc[62];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[147] += dqdci; // dwdot[nc7h16]/d[h2]
  J[151] -= dqdci; // dwdot[c7h15-4]/d[h2]
  // d()/d[c7h15-4]
  dqdci = +k_f * sc[1];
  J[5518] += dqdci; // dwdot[h]/d[c7h15-4]
  J[5519] -= dqdci; // dwdot[h2]/d[c7h15-4]
  J[5576] += dqdci; // dwdot[nc7h16]/d[c7h15-4]
  J[5580] -= dqdci; // dwdot[c7h15-4]/d[c7h15-4]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7894] -= dqdT; // dwdot[c7h15-4]/dT

  // reaction 551: nc7h16 + o => c7h15-1 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[58];
  k_f = 0.193 * exp(2.68 * logT - (1869.95313013034) * invT);
  dlnkfdT = 2.68 * invT + (1869.95313013034) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[4] += q;  // oh
  wdot[58] -= q; // nc7h16
  wdot[59] += q; // c7h15-1
  // d()/d[o]
  dqdci = +k_f * sc[58];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[182] += dqdci; // dwdot[oh]/d[o]
  J[236] -= dqdci; // dwdot[nc7h16]/d[o]
  J[237] += dqdci; // dwdot[c7h15-1]/d[o]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[2];
  J[5164] -= dqdci; // dwdot[o]/d[nc7h16]
  J[5166] += dqdci; // dwdot[oh]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5221] += dqdci; // dwdot[c7h15-1]/d[nc7h16]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7891] += dqdT; // dwdot[c7h15-1]/dT

  // reaction 552: c7h15-1 + oh => nc7h16 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[59];
  k_f = 0.004025 * exp(2.63 * logT - (2965.45581158721) * invT);
  dlnkfdT = 2.63 * invT + (2965.45581158721) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[4] -= q;  // oh
  wdot[58] += q; // nc7h16
  wdot[59] -= q; // c7h15-1
  // d()/d[oh]
  dqdci = +k_f * sc[59];
  J[358] += dqdci; // dwdot[o]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[414] += dqdci; // dwdot[nc7h16]/d[oh]
  J[415] -= dqdci; // dwdot[c7h15-1]/d[oh]
  // d()/d[c7h15-1]
  dqdci = +k_f * sc[4];
  J[5253] += dqdci; // dwdot[o]/d[c7h15-1]
  J[5255] -= dqdci; // dwdot[oh]/d[c7h15-1]
  J[5309] += dqdci; // dwdot[nc7h16]/d[c7h15-1]
  J[5310] -= dqdci; // dwdot[c7h15-1]/d[c7h15-1]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7891] -= dqdT; // dwdot[c7h15-1]/dT

  // reaction 553: nc7h16 + o => c7h15-2 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[58];
  k_f = 0.0954 * exp(2.71 * logT - (1059.77429818474) * invT);
  dlnkfdT = 2.71 * invT + (1059.77429818474) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[4] += q;  // oh
  wdot[58] -= q; // nc7h16
  wdot[60] += q; // c7h15-2
  // d()/d[o]
  dqdci = +k_f * sc[58];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[182] += dqdci; // dwdot[oh]/d[o]
  J[236] -= dqdci; // dwdot[nc7h16]/d[o]
  J[238] += dqdci; // dwdot[c7h15-2]/d[o]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[2];
  J[5164] -= dqdci; // dwdot[o]/d[nc7h16]
  J[5166] += dqdci; // dwdot[oh]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5222] += dqdci; // dwdot[c7h15-2]/d[nc7h16]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7892] += dqdT; // dwdot[c7h15-2]/dT

  // reaction 554: c7h15-2 + oh => nc7h16 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[60];
  k_f = 6.33e-05 * exp(3.05 * logT - (3420.86689414048) * invT);
  dlnkfdT = 3.05 * invT + (3420.86689414048) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[4] -= q;  // oh
  wdot[58] += q; // nc7h16
  wdot[60] -= q; // c7h15-2
  // d()/d[oh]
  dqdci = +k_f * sc[60];
  J[358] += dqdci; // dwdot[o]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[414] += dqdci; // dwdot[nc7h16]/d[oh]
  J[416] -= dqdci; // dwdot[c7h15-2]/d[oh]
  // d()/d[c7h15-2]
  dqdci = +k_f * sc[4];
  J[5342] += dqdci; // dwdot[o]/d[c7h15-2]
  J[5344] -= dqdci; // dwdot[oh]/d[c7h15-2]
  J[5398] += dqdci; // dwdot[nc7h16]/d[c7h15-2]
  J[5400] -= dqdci; // dwdot[c7h15-2]/d[c7h15-2]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7892] -= dqdT; // dwdot[c7h15-2]/dT

  // reaction 555: nc7h16 + o => c7h15-3 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[58];
  k_f = 0.0954 * exp(2.71 * logT - (1059.77429818474) * invT);
  dlnkfdT = 2.71 * invT + (1059.77429818474) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[4] += q;  // oh
  wdot[58] -= q; // nc7h16
  wdot[61] += q; // c7h15-3
  // d()/d[o]
  dqdci = +k_f * sc[58];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[182] += dqdci; // dwdot[oh]/d[o]
  J[236] -= dqdci; // dwdot[nc7h16]/d[o]
  J[239] += dqdci; // dwdot[c7h15-3]/d[o]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[2];
  J[5164] -= dqdci; // dwdot[o]/d[nc7h16]
  J[5166] += dqdci; // dwdot[oh]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5223] += dqdci; // dwdot[c7h15-3]/d[nc7h16]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT

  // reaction 556: c7h15-3 + oh => nc7h16 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[61];
  k_f = 6.33e-05 * exp(3.05 * logT - (3420.86689414048) * invT);
  dlnkfdT = 3.05 * invT + (3420.86689414048) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[4] -= q;  // oh
  wdot[58] += q; // nc7h16
  wdot[61] -= q; // c7h15-3
  // d()/d[oh]
  dqdci = +k_f * sc[61];
  J[358] += dqdci; // dwdot[o]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[414] += dqdci; // dwdot[nc7h16]/d[oh]
  J[417] -= dqdci; // dwdot[c7h15-3]/d[oh]
  // d()/d[c7h15-3]
  dqdci = +k_f * sc[4];
  J[5431] += dqdci; // dwdot[o]/d[c7h15-3]
  J[5433] -= dqdci; // dwdot[oh]/d[c7h15-3]
  J[5487] += dqdci; // dwdot[nc7h16]/d[c7h15-3]
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT

  // reaction 557: nc7h16 + o => c7h15-4 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[58];
  k_f = 0.0477 * exp(2.71 * logT - (1059.77429818474) * invT);
  dlnkfdT = 2.71 * invT + (1059.77429818474) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[4] += q;  // oh
  wdot[58] -= q; // nc7h16
  wdot[62] += q; // c7h15-4
  // d()/d[o]
  dqdci = +k_f * sc[58];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[182] += dqdci; // dwdot[oh]/d[o]
  J[236] -= dqdci; // dwdot[nc7h16]/d[o]
  J[240] += dqdci; // dwdot[c7h15-4]/d[o]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[2];
  J[5164] -= dqdci; // dwdot[o]/d[nc7h16]
  J[5166] += dqdci; // dwdot[oh]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5224] += dqdci; // dwdot[c7h15-4]/d[nc7h16]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7894] += dqdT; // dwdot[c7h15-4]/dT

  // reaction 558: c7h15-4 + oh => nc7h16 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[62];
  k_f = 6.306e-05 * exp(3.05 * logT - (3420.86689414048) * invT);
  dlnkfdT = 3.05 * invT + (3420.86689414048) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[4] -= q;  // oh
  wdot[58] += q; // nc7h16
  wdot[62] -= q; // c7h15-4
  // d()/d[oh]
  dqdci = +k_f * sc[62];
  J[358] += dqdci; // dwdot[o]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[414] += dqdci; // dwdot[nc7h16]/d[oh]
  J[418] -= dqdci; // dwdot[c7h15-4]/d[oh]
  // d()/d[c7h15-4]
  dqdci = +k_f * sc[4];
  J[5520] += dqdci; // dwdot[o]/d[c7h15-4]
  J[5522] -= dqdci; // dwdot[oh]/d[c7h15-4]
  J[5576] += dqdci; // dwdot[nc7h16]/d[c7h15-4]
  J[5580] -= dqdci; // dwdot[c7h15-4]/d[c7h15-4]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7894] -= dqdT; // dwdot[c7h15-4]/dT

  // reaction 559: nc7h16 + oh => c7h15-1 + h2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[58];
  k_f = 10500 * exp(0.97 * logT - (800.114498629504) * invT);
  dlnkfdT = 0.97 * invT + (800.114498629504) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[58] -= q; // nc7h16
  wdot[59] += q; // c7h15-1
  // d()/d[oh]
  dqdci = +k_f * sc[58];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[414] -= dqdci; // dwdot[nc7h16]/d[oh]
  J[415] += dqdci; // dwdot[c7h15-1]/d[oh]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[4];
  J[5166] -= dqdci; // dwdot[oh]/d[nc7h16]
  J[5167] += dqdci; // dwdot[h2o]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5221] += dqdci; // dwdot[c7h15-1]/d[nc7h16]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7891] += dqdT; // dwdot[c7h15-1]/dT

  // reaction 560: c7h15-1 + h2o => nc7h16 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[59];
  k_f = 15000 * exp(1.05 * logT - (11740.0448132241) * invT);
  dlnkfdT = 1.05 * invT + (11740.0448132241) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[58] += q; // nc7h16
  wdot[59] -= q; // c7h15-1
  // d()/d[h2o]
  dqdci = +k_f * sc[59];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[503] += dqdci; // dwdot[nc7h16]/d[h2o]
  J[504] -= dqdci; // dwdot[c7h15-1]/d[h2o]
  // d()/d[c7h15-1]
  dqdci = +k_f * sc[5];
  J[5255] += dqdci; // dwdot[oh]/d[c7h15-1]
  J[5256] -= dqdci; // dwdot[h2o]/d[c7h15-1]
  J[5309] += dqdci; // dwdot[nc7h16]/d[c7h15-1]
  J[5310] -= dqdci; // dwdot[c7h15-1]/d[c7h15-1]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7891] -= dqdT; // dwdot[c7h15-1]/dT

  // reaction 561: nc7h16 + oh => c7h15-2 + h2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[58];
  k_f = 94 * exp(1.61 * logT - (-17.6125833031652) * invT);
  dlnkfdT = 1.61 * invT + (-17.6125833031652) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[58] -= q; // nc7h16
  wdot[60] += q; // c7h15-2
  // d()/d[oh]
  dqdci = +k_f * sc[58];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[414] -= dqdci; // dwdot[nc7h16]/d[oh]
  J[416] += dqdci; // dwdot[c7h15-2]/d[oh]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[4];
  J[5166] -= dqdci; // dwdot[oh]/d[nc7h16]
  J[5167] += dqdci; // dwdot[h2o]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5222] += dqdci; // dwdot[c7h15-2]/d[nc7h16]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7892] += dqdT; // dwdot[c7h15-2]/dT

  // reaction 562: c7h15-2 + h2o => nc7h16 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[60];
  k_f = 0.6148 * exp(1.95 * logT - (11025.4771477814) * invT);
  dlnkfdT = 1.95 * invT + (11025.4771477814) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[58] += q; // nc7h16
  wdot[60] -= q; // c7h15-2
  // d()/d[h2o]
  dqdci = +k_f * sc[60];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[503] += dqdci; // dwdot[nc7h16]/d[h2o]
  J[505] -= dqdci; // dwdot[c7h15-2]/d[h2o]
  // d()/d[c7h15-2]
  dqdci = +k_f * sc[5];
  J[5344] += dqdci; // dwdot[oh]/d[c7h15-2]
  J[5345] -= dqdci; // dwdot[h2o]/d[c7h15-2]
  J[5398] += dqdci; // dwdot[nc7h16]/d[c7h15-2]
  J[5400] -= dqdci; // dwdot[c7h15-2]/d[c7h15-2]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7892] -= dqdT; // dwdot[c7h15-2]/dT

  // reaction 563: nc7h16 + oh => c7h15-3 + h2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[58];
  k_f = 94 * exp(1.61 * logT - (-17.6125833031652) * invT);
  dlnkfdT = 1.61 * invT + (-17.6125833031652) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[58] -= q; // nc7h16
  wdot[61] += q; // c7h15-3
  // d()/d[oh]
  dqdci = +k_f * sc[58];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[414] -= dqdci; // dwdot[nc7h16]/d[oh]
  J[417] += dqdci; // dwdot[c7h15-3]/d[oh]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[4];
  J[5166] -= dqdci; // dwdot[oh]/d[nc7h16]
  J[5167] += dqdci; // dwdot[h2o]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5223] += dqdci; // dwdot[c7h15-3]/d[nc7h16]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT

  // reaction 564: c7h15-3 + h2o => nc7h16 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[61];
  k_f = 0.6148 * exp(1.95 * logT - (11025.4771477814) * invT);
  dlnkfdT = 1.95 * invT + (11025.4771477814) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[58] += q; // nc7h16
  wdot[61] -= q; // c7h15-3
  // d()/d[h2o]
  dqdci = +k_f * sc[61];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[503] += dqdci; // dwdot[nc7h16]/d[h2o]
  J[506] -= dqdci; // dwdot[c7h15-3]/d[h2o]
  // d()/d[c7h15-3]
  dqdci = +k_f * sc[5];
  J[5433] += dqdci; // dwdot[oh]/d[c7h15-3]
  J[5434] -= dqdci; // dwdot[h2o]/d[c7h15-3]
  J[5487] += dqdci; // dwdot[nc7h16]/d[c7h15-3]
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT

  // reaction 565: nc7h16 + oh => c7h15-4 + h2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[58];
  k_f = 47 * exp(1.61 * logT - (-17.6125833031652) * invT);
  dlnkfdT = 1.61 * invT + (-17.6125833031652) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[58] -= q; // nc7h16
  wdot[62] += q; // c7h15-4
  // d()/d[oh]
  dqdci = +k_f * sc[58];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[414] -= dqdci; // dwdot[nc7h16]/d[oh]
  J[418] += dqdci; // dwdot[c7h15-4]/d[oh]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[4];
  J[5166] -= dqdci; // dwdot[oh]/d[nc7h16]
  J[5167] += dqdci; // dwdot[h2o]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5224] += dqdci; // dwdot[c7h15-4]/d[nc7h16]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7894] += dqdT; // dwdot[c7h15-4]/dT

  // reaction 566: c7h15-4 + h2o => nc7h16 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[62];
  k_f = 0.6125 * exp(1.95 * logT - (11025.4771477814) * invT);
  dlnkfdT = 1.95 * invT + (11025.4771477814) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[58] += q; // nc7h16
  wdot[62] -= q; // c7h15-4
  // d()/d[h2o]
  dqdci = +k_f * sc[62];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[503] += dqdci; // dwdot[nc7h16]/d[h2o]
  J[507] -= dqdci; // dwdot[c7h15-4]/d[h2o]
  // d()/d[c7h15-4]
  dqdci = +k_f * sc[5];
  J[5522] += dqdci; // dwdot[oh]/d[c7h15-4]
  J[5523] -= dqdci; // dwdot[h2o]/d[c7h15-4]
  J[5576] += dqdci; // dwdot[nc7h16]/d[c7h15-4]
  J[5580] -= dqdci; // dwdot[c7h15-4]/d[c7h15-4]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7894] -= dqdT; // dwdot[c7h15-4]/dT

  // reaction 567: ho2 + nc7h16 => c7h15-1 + h2o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[58];
  k_f = 16800000 * exp(-(10285.7486490485) * invT);
  dlnkfdT = (10285.7486490485) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  wdot[58] -= q; // nc7h16
  wdot[59] += q; // c7h15-1
  // d()/d[ho2]
  dqdci = +k_f * sc[58];
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[991] += dqdci;  // dwdot[h2o2]/d[ho2]
  J[1037] -= dqdci; // dwdot[nc7h16]/d[ho2]
  J[1038] += dqdci; // dwdot[c7h15-1]/d[ho2]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[11];
  J[5173] -= dqdci; // dwdot[ho2]/d[nc7h16]
  J[5174] += dqdci; // dwdot[h2o2]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5221] += dqdci; // dwdot[c7h15-1]/d[nc7h16]
  // d()/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7891] += dqdT; // dwdot[c7h15-1]/dT

  // reaction 568: c7h15-1 + h2o2 => ho2 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[59];
  k_f = 20500000 * exp(-0.38 * logT - (4226.51677609384) * invT);
  dlnkfdT = -0.38 * invT + (4226.51677609384) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // ho2
  wdot[12] -= q; // h2o2
  wdot[58] += q; // nc7h16
  wdot[59] -= q; // c7h15-1
  // d()/d[h2o2]
  dqdci = +k_f * sc[59];
  J[1079] += dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci; // dwdot[h2o2]/d[h2o2]
  J[1126] += dqdci; // dwdot[nc7h16]/d[h2o2]
  J[1127] -= dqdci; // dwdot[c7h15-1]/d[h2o2]
  // d()/d[c7h15-1]
  dqdci = +k_f * sc[12];
  J[5262] += dqdci; // dwdot[ho2]/d[c7h15-1]
  J[5263] -= dqdci; // dwdot[h2o2]/d[c7h15-1]
  J[5309] += dqdci; // dwdot[nc7h16]/d[c7h15-1]
  J[5310] -= dqdci; // dwdot[c7h15-1]/d[c7h15-1]
  // d()/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT; // dwdot[h2o2]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7891] -= dqdT; // dwdot[c7h15-1]/dT

  // reaction 569: ho2 + nc7h16 => c7h15-2 + h2o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[58];
  k_f = 11200000 * exp(-(8901.90281808549) * invT);
  dlnkfdT = (8901.90281808549) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  wdot[58] -= q; // nc7h16
  wdot[60] += q; // c7h15-2
  // d()/d[ho2]
  dqdci = +k_f * sc[58];
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[991] += dqdci;  // dwdot[h2o2]/d[ho2]
  J[1037] -= dqdci; // dwdot[nc7h16]/d[ho2]
  J[1039] += dqdci; // dwdot[c7h15-2]/d[ho2]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[11];
  J[5173] -= dqdci; // dwdot[ho2]/d[nc7h16]
  J[5174] += dqdci; // dwdot[h2o2]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5222] += dqdci; // dwdot[c7h15-2]/d[nc7h16]
  // d()/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7892] += dqdT; // dwdot[c7h15-2]/dT

  // reaction 570: c7h15-2 + h2o2 => ho2 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[60];
  k_f = 434800 * exp(0.01 * logT - (4108.76407629554) * invT);
  dlnkfdT = 0.01 * invT + (4108.76407629554) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // ho2
  wdot[12] -= q; // h2o2
  wdot[58] += q; // nc7h16
  wdot[60] -= q; // c7h15-2
  // d()/d[h2o2]
  dqdci = +k_f * sc[60];
  J[1079] += dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci; // dwdot[h2o2]/d[h2o2]
  J[1126] += dqdci; // dwdot[nc7h16]/d[h2o2]
  J[1128] -= dqdci; // dwdot[c7h15-2]/d[h2o2]
  // d()/d[c7h15-2]
  dqdci = +k_f * sc[12];
  J[5351] += dqdci; // dwdot[ho2]/d[c7h15-2]
  J[5352] -= dqdci; // dwdot[h2o2]/d[c7h15-2]
  J[5398] += dqdci; // dwdot[nc7h16]/d[c7h15-2]
  J[5400] -= dqdci; // dwdot[c7h15-2]/d[c7h15-2]
  // d()/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT; // dwdot[h2o2]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7892] -= dqdT; // dwdot[c7h15-2]/dT

  // reaction 571: ho2 + nc7h16 => c7h15-3 + h2o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[58];
  k_f = 11200000 * exp(-(8901.90281808549) * invT);
  dlnkfdT = (8901.90281808549) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  wdot[58] -= q; // nc7h16
  wdot[61] += q; // c7h15-3
  // d()/d[ho2]
  dqdci = +k_f * sc[58];
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[991] += dqdci;  // dwdot[h2o2]/d[ho2]
  J[1037] -= dqdci; // dwdot[nc7h16]/d[ho2]
  J[1040] += dqdci; // dwdot[c7h15-3]/d[ho2]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[11];
  J[5173] -= dqdci; // dwdot[ho2]/d[nc7h16]
  J[5174] += dqdci; // dwdot[h2o2]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5223] += dqdci; // dwdot[c7h15-3]/d[nc7h16]
  // d()/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT

  // reaction 572: c7h15-3 + h2o2 => ho2 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[61];
  k_f = 434800 * exp(0.01 * logT - (4108.76407629554) * invT);
  dlnkfdT = 0.01 * invT + (4108.76407629554) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // ho2
  wdot[12] -= q; // h2o2
  wdot[58] += q; // nc7h16
  wdot[61] -= q; // c7h15-3
  // d()/d[h2o2]
  dqdci = +k_f * sc[61];
  J[1079] += dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci; // dwdot[h2o2]/d[h2o2]
  J[1126] += dqdci; // dwdot[nc7h16]/d[h2o2]
  J[1129] -= dqdci; // dwdot[c7h15-3]/d[h2o2]
  // d()/d[c7h15-3]
  dqdci = +k_f * sc[12];
  J[5440] += dqdci; // dwdot[ho2]/d[c7h15-3]
  J[5441] -= dqdci; // dwdot[h2o2]/d[c7h15-3]
  J[5487] += dqdci; // dwdot[nc7h16]/d[c7h15-3]
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  // d()/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT; // dwdot[h2o2]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT

  // reaction 573: ho2 + nc7h16 => c7h15-4 + h2o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[58];
  k_f = 5600000 * exp(-(8901.90281808549) * invT);
  dlnkfdT = (8901.90281808549) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  wdot[58] -= q; // nc7h16
  wdot[62] += q; // c7h15-4
  // d()/d[ho2]
  dqdci = +k_f * sc[58];
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[991] += dqdci;  // dwdot[h2o2]/d[ho2]
  J[1037] -= dqdci; // dwdot[nc7h16]/d[ho2]
  J[1041] += dqdci; // dwdot[c7h15-4]/d[ho2]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[11];
  J[5173] -= dqdci; // dwdot[ho2]/d[nc7h16]
  J[5174] += dqdci; // dwdot[h2o2]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5224] += dqdci; // dwdot[c7h15-4]/d[nc7h16]
  // d()/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7894] += dqdT; // dwdot[c7h15-4]/dT

  // reaction 574: c7h15-4 + h2o2 => ho2 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[62];
  k_f = 433200 * exp(0.01 * logT - (4108.76407629554) * invT);
  dlnkfdT = 0.01 * invT + (4108.76407629554) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // ho2
  wdot[12] -= q; // h2o2
  wdot[58] += q; // nc7h16
  wdot[62] -= q; // c7h15-4
  // d()/d[h2o2]
  dqdci = +k_f * sc[62];
  J[1079] += dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci; // dwdot[h2o2]/d[h2o2]
  J[1126] += dqdci; // dwdot[nc7h16]/d[h2o2]
  J[1130] -= dqdci; // dwdot[c7h15-4]/d[h2o2]
  // d()/d[c7h15-4]
  dqdci = +k_f * sc[12];
  J[5529] += dqdci; // dwdot[ho2]/d[c7h15-4]
  J[5530] -= dqdci; // dwdot[h2o2]/d[c7h15-4]
  J[5576] += dqdci; // dwdot[nc7h16]/d[c7h15-4]
  J[5580] -= dqdci; // dwdot[c7h15-4]/d[c7h15-4]
  // d()/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT; // dwdot[h2o2]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7894] -= dqdT; // dwdot[c7h15-4]/dT

  // reaction 575: ch3 + nc7h16 => c7h15-1 + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[58];
  k_f = 9.04e-07 * exp(3.65 * logT - (3600.01202716696) * invT);
  dlnkfdT = 3.65 * invT + (3600.01202716696) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[58] -= q; // nc7h16
  wdot[59] += q; // c7h15-1
  // d()/d[ch3]
  dqdci = +k_f * sc[58];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[859] -= dqdci; // dwdot[nc7h16]/d[ch3]
  J[860] += dqdci; // dwdot[c7h15-1]/d[ch3]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[9];
  J[5171] -= dqdci; // dwdot[ch3]/d[nc7h16]
  J[5172] += dqdci; // dwdot[ch4]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5221] += dqdci; // dwdot[c7h15-1]/d[nc7h16]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7891] += dqdT; // dwdot[c7h15-1]/dT

  // reaction 576: c7h15-1 + ch4 => ch3 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[59];
  k_f = 1.121e-06 * exp(3.6 * logT - (5993.31048973421) * invT);
  dlnkfdT = 3.6 * invT + (5993.31048973421) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[58] += q; // nc7h16
  wdot[59] -= q; // c7h15-1
  // d()/d[ch4]
  dqdci = +k_f * sc[59];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[948] += dqdci; // dwdot[nc7h16]/d[ch4]
  J[949] -= dqdci; // dwdot[c7h15-1]/d[ch4]
  // d()/d[c7h15-1]
  dqdci = +k_f * sc[10];
  J[5260] += dqdci; // dwdot[ch3]/d[c7h15-1]
  J[5261] -= dqdci; // dwdot[ch4]/d[c7h15-1]
  J[5309] += dqdci; // dwdot[nc7h16]/d[c7h15-1]
  J[5310] -= dqdci; // dwdot[c7h15-1]/d[c7h15-1]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7891] -= dqdT; // dwdot[c7h15-1]/dT

  // reaction 577: ch3 + nc7h16 => c7h15-2 + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[58];
  k_f = 0.0541 * exp(2.26 * logT - (3666.93984371899) * invT);
  dlnkfdT = 2.26 * invT + (3666.93984371899) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[58] -= q; // nc7h16
  wdot[60] += q; // c7h15-2
  // d()/d[ch3]
  dqdci = +k_f * sc[58];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[859] -= dqdci; // dwdot[nc7h16]/d[ch3]
  J[861] += dqdci; // dwdot[c7h15-2]/d[ch3]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[9];
  J[5171] -= dqdci; // dwdot[ch3]/d[nc7h16]
  J[5172] += dqdci; // dwdot[ch4]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5222] += dqdci; // dwdot[c7h15-2]/d[nc7h16]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7892] += dqdT; // dwdot[c7h15-2]/dT

  // reaction 578: c7h15-2 + ch4 => ch3 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[60];
  k_f = 0.002135 * exp(2.6 * logT - (7321.80248745867) * invT);
  dlnkfdT = 2.6 * invT + (7321.80248745867) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[58] += q; // nc7h16
  wdot[60] -= q; // c7h15-2
  // d()/d[ch4]
  dqdci = +k_f * sc[60];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[948] += dqdci; // dwdot[nc7h16]/d[ch4]
  J[950] -= dqdci; // dwdot[c7h15-2]/d[ch4]
  // d()/d[c7h15-2]
  dqdci = +k_f * sc[10];
  J[5349] += dqdci; // dwdot[ch3]/d[c7h15-2]
  J[5350] -= dqdci; // dwdot[ch4]/d[c7h15-2]
  J[5398] += dqdci; // dwdot[nc7h16]/d[c7h15-2]
  J[5400] -= dqdci; // dwdot[c7h15-2]/d[c7h15-2]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7892] -= dqdT; // dwdot[c7h15-2]/dT

  // reaction 579: ch3 + nc7h16 => c7h15-3 + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[58];
  k_f = 0.0541 * exp(2.26 * logT - (3666.93984371899) * invT);
  dlnkfdT = 2.26 * invT + (3666.93984371899) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[58] -= q; // nc7h16
  wdot[61] += q; // c7h15-3
  // d()/d[ch3]
  dqdci = +k_f * sc[58];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[859] -= dqdci; // dwdot[nc7h16]/d[ch3]
  J[862] += dqdci; // dwdot[c7h15-3]/d[ch3]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[9];
  J[5171] -= dqdci; // dwdot[ch3]/d[nc7h16]
  J[5172] += dqdci; // dwdot[ch4]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5223] += dqdci; // dwdot[c7h15-3]/d[nc7h16]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT

  // reaction 580: c7h15-3 + ch4 => ch3 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[61];
  k_f = 0.002135 * exp(2.6 * logT - (7321.80248745867) * invT);
  dlnkfdT = 2.6 * invT + (7321.80248745867) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[58] += q; // nc7h16
  wdot[61] -= q; // c7h15-3
  // d()/d[ch4]
  dqdci = +k_f * sc[61];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[948] += dqdci; // dwdot[nc7h16]/d[ch4]
  J[951] -= dqdci; // dwdot[c7h15-3]/d[ch4]
  // d()/d[c7h15-3]
  dqdci = +k_f * sc[10];
  J[5438] += dqdci; // dwdot[ch3]/d[c7h15-3]
  J[5439] -= dqdci; // dwdot[ch4]/d[c7h15-3]
  J[5487] += dqdci; // dwdot[nc7h16]/d[c7h15-3]
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT

  // reaction 581: ch3 + nc7h16 => c7h15-4 + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[58];
  k_f = 0.02705 * exp(2.26 * logT - (3666.93984371899) * invT);
  dlnkfdT = 2.26 * invT + (3666.93984371899) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[58] -= q; // nc7h16
  wdot[62] += q; // c7h15-4
  // d()/d[ch3]
  dqdci = +k_f * sc[58];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[859] -= dqdci; // dwdot[nc7h16]/d[ch3]
  J[863] += dqdci; // dwdot[c7h15-4]/d[ch3]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[9];
  J[5171] -= dqdci; // dwdot[ch3]/d[nc7h16]
  J[5172] += dqdci; // dwdot[ch4]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5224] += dqdci; // dwdot[c7h15-4]/d[nc7h16]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7894] += dqdT; // dwdot[c7h15-4]/dT

  // reaction 582: c7h15-4 + ch4 => ch3 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[62];
  k_f = 0.002127 * exp(2.6 * logT - (7321.80248745867) * invT);
  dlnkfdT = 2.6 * invT + (7321.80248745867) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[58] += q; // nc7h16
  wdot[62] -= q; // c7h15-4
  // d()/d[ch4]
  dqdci = +k_f * sc[62];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[948] += dqdci; // dwdot[nc7h16]/d[ch4]
  J[952] -= dqdci; // dwdot[c7h15-4]/d[ch4]
  // d()/d[c7h15-4]
  dqdci = +k_f * sc[10];
  J[5527] += dqdci; // dwdot[ch3]/d[c7h15-4]
  J[5528] -= dqdci; // dwdot[ch4]/d[c7h15-4]
  J[5576] += dqdci; // dwdot[nc7h16]/d[c7h15-4]
  J[5580] -= dqdci; // dwdot[c7h15-4]/d[c7h15-4]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7894] -= dqdT; // dwdot[c7h15-4]/dT

  // reaction 583: nc7h16 + o2 => c7h15-1 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[58];
  k_f = 60000000 * exp(-(26569.8399544892) * invT);
  dlnkfdT = (26569.8399544892) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[58] -= q; // nc7h16
  wdot[59] += q; // c7h15-1
  // d()/d[o2]
  dqdci = +k_f * sc[58];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[325] -= dqdci; // dwdot[nc7h16]/d[o2]
  J[326] += dqdci; // dwdot[c7h15-1]/d[o2]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[3];
  J[5165] -= dqdci; // dwdot[o2]/d[nc7h16]
  J[5173] += dqdci; // dwdot[ho2]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5221] += dqdci; // dwdot[c7h15-1]/d[nc7h16]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7891] += dqdT; // dwdot[c7h15-1]/dT

  // reaction 584: c7h15-1 + ho2 => nc7h16 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[59];
  k_f = 51750 * exp(0.28 * logT - (-204.305966316716) * invT);
  dlnkfdT = 0.28 * invT + (-204.305966316716) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[58] += q; // nc7h16
  wdot[59] -= q; // c7h15-1
  // d()/d[ho2]
  dqdci = +k_f * sc[59];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1037] += dqdci; // dwdot[nc7h16]/d[ho2]
  J[1038] -= dqdci; // dwdot[c7h15-1]/d[ho2]
  // d()/d[c7h15-1]
  dqdci = +k_f * sc[11];
  J[5254] += dqdci; // dwdot[o2]/d[c7h15-1]
  J[5262] -= dqdci; // dwdot[ho2]/d[c7h15-1]
  J[5309] += dqdci; // dwdot[nc7h16]/d[c7h15-1]
  J[5310] -= dqdci; // dwdot[c7h15-1]/d[c7h15-1]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7891] -= dqdT; // dwdot[c7h15-1]/dT

  // reaction 585: nc7h16 + o2 => c7h15-2 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[58];
  k_f = 40000000 * exp(-(25236.3157901067) * invT);
  dlnkfdT = (25236.3157901067) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[58] -= q; // nc7h16
  wdot[60] += q; // c7h15-2
  // d()/d[o2]
  dqdci = +k_f * sc[58];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[325] -= dqdci; // dwdot[nc7h16]/d[o2]
  J[327] += dqdci; // dwdot[c7h15-2]/d[o2]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[3];
  J[5165] -= dqdci; // dwdot[o2]/d[nc7h16]
  J[5173] += dqdci; // dwdot[ho2]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5222] += dqdci; // dwdot[c7h15-2]/d[nc7h16]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7892] += dqdT; // dwdot[c7h15-2]/dT

  // reaction 586: c7h15-2 + ho2 => nc7h16 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[60];
  k_f = 1098 * exp(0.67 * logT - (-272.240216200353) * invT);
  dlnkfdT = 0.67 * invT + (-272.240216200353) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[58] += q; // nc7h16
  wdot[60] -= q; // c7h15-2
  // d()/d[ho2]
  dqdci = +k_f * sc[60];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1037] += dqdci; // dwdot[nc7h16]/d[ho2]
  J[1039] -= dqdci; // dwdot[c7h15-2]/d[ho2]
  // d()/d[c7h15-2]
  dqdci = +k_f * sc[11];
  J[5343] += dqdci; // dwdot[o2]/d[c7h15-2]
  J[5351] -= dqdci; // dwdot[ho2]/d[c7h15-2]
  J[5398] += dqdci; // dwdot[nc7h16]/d[c7h15-2]
  J[5400] -= dqdci; // dwdot[c7h15-2]/d[c7h15-2]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7892] -= dqdT; // dwdot[c7h15-2]/dT

  // reaction 587: nc7h16 + o2 => c7h15-3 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[58];
  k_f = 40000000 * exp(-(25236.3157901067) * invT);
  dlnkfdT = (25236.3157901067) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[58] -= q; // nc7h16
  wdot[61] += q; // c7h15-3
  // d()/d[o2]
  dqdci = +k_f * sc[58];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[325] -= dqdci; // dwdot[nc7h16]/d[o2]
  J[328] += dqdci; // dwdot[c7h15-3]/d[o2]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[3];
  J[5165] -= dqdci; // dwdot[o2]/d[nc7h16]
  J[5173] += dqdci; // dwdot[ho2]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5223] += dqdci; // dwdot[c7h15-3]/d[nc7h16]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT

  // reaction 588: c7h15-3 + ho2 => nc7h16 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[61];
  k_f = 1098 * exp(0.67 * logT - (-272.240216200353) * invT);
  dlnkfdT = 0.67 * invT + (-272.240216200353) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[58] += q; // nc7h16
  wdot[61] -= q; // c7h15-3
  // d()/d[ho2]
  dqdci = +k_f * sc[61];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1037] += dqdci; // dwdot[nc7h16]/d[ho2]
  J[1040] -= dqdci; // dwdot[c7h15-3]/d[ho2]
  // d()/d[c7h15-3]
  dqdci = +k_f * sc[11];
  J[5432] += dqdci; // dwdot[o2]/d[c7h15-3]
  J[5440] -= dqdci; // dwdot[ho2]/d[c7h15-3]
  J[5487] += dqdci; // dwdot[nc7h16]/d[c7h15-3]
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT

  // reaction 589: nc7h16 + o2 => c7h15-4 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[58];
  k_f = 20000000 * exp(-(25236.3157901067) * invT);
  dlnkfdT = (25236.3157901067) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[58] -= q; // nc7h16
  wdot[62] += q; // c7h15-4
  // d()/d[o2]
  dqdci = +k_f * sc[58];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[325] -= dqdci; // dwdot[nc7h16]/d[o2]
  J[329] += dqdci; // dwdot[c7h15-4]/d[o2]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[3];
  J[5165] -= dqdci; // dwdot[o2]/d[nc7h16]
  J[5173] += dqdci; // dwdot[ho2]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5224] += dqdci; // dwdot[c7h15-4]/d[nc7h16]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7894] += dqdT; // dwdot[c7h15-4]/dT

  // reaction 590: c7h15-4 + ho2 => nc7h16 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[62];
  k_f = 1094 * exp(0.67 * logT - (-272.240216200353) * invT);
  dlnkfdT = 0.67 * invT + (-272.240216200353) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[58] += q; // nc7h16
  wdot[62] -= q; // c7h15-4
  // d()/d[ho2]
  dqdci = +k_f * sc[62];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1037] += dqdci; // dwdot[nc7h16]/d[ho2]
  J[1041] -= dqdci; // dwdot[c7h15-4]/d[ho2]
  // d()/d[c7h15-4]
  dqdci = +k_f * sc[11];
  J[5521] += dqdci; // dwdot[o2]/d[c7h15-4]
  J[5529] -= dqdci; // dwdot[ho2]/d[c7h15-4]
  J[5576] += dqdci; // dwdot[nc7h16]/d[c7h15-4]
  J[5580] -= dqdci; // dwdot[c7h15-4]/d[c7h15-4]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7894] -= dqdT; // dwdot[c7h15-4]/dT

  // reaction 591: c2h5 + nc7h16 => c2h6 + c7h15-1
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[58];
  k_f = 100000 * exp(-(6743.10332178324) * invT);
  dlnkfdT = (6743.10332178324) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[15] += q; // c2h6
  wdot[17] -= q; // c2h5
  wdot[58] -= q; // nc7h16
  wdot[59] += q; // c7h15-1
  // d()/d[c2h5]
  dqdci = +k_f * sc[58];
  J[1528] += dqdci; // dwdot[c2h6]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1571] -= dqdci; // dwdot[nc7h16]/d[c2h5]
  J[1572] += dqdci; // dwdot[c7h15-1]/d[c2h5]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[17];
  J[5177] += dqdci; // dwdot[c2h6]/d[nc7h16]
  J[5179] -= dqdci; // dwdot[c2h5]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5221] += dqdci; // dwdot[c7h15-1]/d[nc7h16]
  // d()/dT
  J[7847] += dqdT; // dwdot[c2h6]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7891] += dqdT; // dwdot[c7h15-1]/dT

  // reaction 592: c2h6 + c7h15-1 => c2h5 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[59];
  k_f = 320000 * exp(-(6189.56498939805) * invT);
  dlnkfdT = (6189.56498939805) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[15] -= q; // c2h6
  wdot[17] += q; // c2h5
  wdot[58] += q; // nc7h16
  wdot[59] -= q; // c7h15-1
  // d()/d[c2h6]
  dqdci = +k_f * sc[59];
  J[1350] -= dqdci; // dwdot[c2h6]/d[c2h6]
  J[1352] += dqdci; // dwdot[c2h5]/d[c2h6]
  J[1393] += dqdci; // dwdot[nc7h16]/d[c2h6]
  J[1394] -= dqdci; // dwdot[c7h15-1]/d[c2h6]
  // d()/d[c7h15-1]
  dqdci = +k_f * sc[15];
  J[5266] -= dqdci; // dwdot[c2h6]/d[c7h15-1]
  J[5268] += dqdci; // dwdot[c2h5]/d[c7h15-1]
  J[5309] += dqdci; // dwdot[nc7h16]/d[c7h15-1]
  J[5310] -= dqdci; // dwdot[c7h15-1]/d[c7h15-1]
  // d()/dT
  J[7847] -= dqdT; // dwdot[c2h6]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7891] -= dqdT; // dwdot[c7h15-1]/dT

  // reaction 593: c2h5 + nc7h16 => c2h6 + c7h15-2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[58];
  k_f = 100000 * exp(-(5233.45332436908) * invT);
  dlnkfdT = (5233.45332436908) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[15] += q; // c2h6
  wdot[17] -= q; // c2h5
  wdot[58] -= q; // nc7h16
  wdot[60] += q; // c7h15-2
  // d()/d[c2h5]
  dqdci = +k_f * sc[58];
  J[1528] += dqdci; // dwdot[c2h6]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1571] -= dqdci; // dwdot[nc7h16]/d[c2h5]
  J[1573] += dqdci; // dwdot[c7h15-2]/d[c2h5]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[17];
  J[5177] += dqdci; // dwdot[c2h6]/d[nc7h16]
  J[5179] -= dqdci; // dwdot[c2h5]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5222] += dqdci; // dwdot[c7h15-2]/d[nc7h16]
  // d()/dT
  J[7847] += dqdT; // dwdot[c2h6]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7892] += dqdT; // dwdot[c7h15-2]/dT

  // reaction 594: c2h6 + c7h15-2 => c2h5 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[60];
  k_f = 100000 * exp(-(6491.49498888088) * invT);
  dlnkfdT = (6491.49498888088) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[15] -= q; // c2h6
  wdot[17] += q; // c2h5
  wdot[58] += q; // nc7h16
  wdot[60] -= q; // c7h15-2
  // d()/d[c2h6]
  dqdci = +k_f * sc[60];
  J[1350] -= dqdci; // dwdot[c2h6]/d[c2h6]
  J[1352] += dqdci; // dwdot[c2h5]/d[c2h6]
  J[1393] += dqdci; // dwdot[nc7h16]/d[c2h6]
  J[1395] -= dqdci; // dwdot[c7h15-2]/d[c2h6]
  // d()/d[c7h15-2]
  dqdci = +k_f * sc[15];
  J[5355] -= dqdci; // dwdot[c2h6]/d[c7h15-2]
  J[5357] += dqdci; // dwdot[c2h5]/d[c7h15-2]
  J[5398] += dqdci; // dwdot[nc7h16]/d[c7h15-2]
  J[5400] -= dqdci; // dwdot[c7h15-2]/d[c7h15-2]
  // d()/dT
  J[7847] -= dqdT; // dwdot[c2h6]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7892] -= dqdT; // dwdot[c7h15-2]/dT

  // reaction 595: c2h5 + nc7h16 => c2h6 + c7h15-3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[58];
  k_f = 100000 * exp(-(5233.45332436908) * invT);
  dlnkfdT = (5233.45332436908) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[15] += q; // c2h6
  wdot[17] -= q; // c2h5
  wdot[58] -= q; // nc7h16
  wdot[61] += q; // c7h15-3
  // d()/d[c2h5]
  dqdci = +k_f * sc[58];
  J[1528] += dqdci; // dwdot[c2h6]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1571] -= dqdci; // dwdot[nc7h16]/d[c2h5]
  J[1574] += dqdci; // dwdot[c7h15-3]/d[c2h5]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[17];
  J[5177] += dqdci; // dwdot[c2h6]/d[nc7h16]
  J[5179] -= dqdci; // dwdot[c2h5]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5223] += dqdci; // dwdot[c7h15-3]/d[nc7h16]
  // d()/dT
  J[7847] += dqdT; // dwdot[c2h6]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT

  // reaction 596: c2h6 + c7h15-3 => c2h5 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[61];
  k_f = 100000 * exp(-(6491.49498888088) * invT);
  dlnkfdT = (6491.49498888088) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[15] -= q; // c2h6
  wdot[17] += q; // c2h5
  wdot[58] += q; // nc7h16
  wdot[61] -= q; // c7h15-3
  // d()/d[c2h6]
  dqdci = +k_f * sc[61];
  J[1350] -= dqdci; // dwdot[c2h6]/d[c2h6]
  J[1352] += dqdci; // dwdot[c2h5]/d[c2h6]
  J[1393] += dqdci; // dwdot[nc7h16]/d[c2h6]
  J[1396] -= dqdci; // dwdot[c7h15-3]/d[c2h6]
  // d()/d[c7h15-3]
  dqdci = +k_f * sc[15];
  J[5444] -= dqdci; // dwdot[c2h6]/d[c7h15-3]
  J[5446] += dqdci; // dwdot[c2h5]/d[c7h15-3]
  J[5487] += dqdci; // dwdot[nc7h16]/d[c7h15-3]
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  // d()/dT
  J[7847] -= dqdT; // dwdot[c2h6]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT

  // reaction 597: c2h5 + nc7h16 => c2h6 + c7h15-4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[58];
  k_f = 50000 * exp(-(5233.45332436908) * invT);
  dlnkfdT = (5233.45332436908) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[15] += q; // c2h6
  wdot[17] -= q; // c2h5
  wdot[58] -= q; // nc7h16
  wdot[62] += q; // c7h15-4
  // d()/d[c2h5]
  dqdci = +k_f * sc[58];
  J[1528] += dqdci; // dwdot[c2h6]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1571] -= dqdci; // dwdot[nc7h16]/d[c2h5]
  J[1575] += dqdci; // dwdot[c7h15-4]/d[c2h5]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[17];
  J[5177] += dqdci; // dwdot[c2h6]/d[nc7h16]
  J[5179] -= dqdci; // dwdot[c2h5]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5224] += dqdci; // dwdot[c7h15-4]/d[nc7h16]
  // d()/dT
  J[7847] += dqdT; // dwdot[c2h6]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7894] += dqdT; // dwdot[c7h15-4]/dT

  // reaction 598: c2h6 + c7h15-4 => c2h5 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[62];
  k_f = 100000 * exp(-(6491.49498888088) * invT);
  dlnkfdT = (6491.49498888088) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[15] -= q; // c2h6
  wdot[17] += q; // c2h5
  wdot[58] += q; // nc7h16
  wdot[62] -= q; // c7h15-4
  // d()/d[c2h6]
  dqdci = +k_f * sc[62];
  J[1350] -= dqdci; // dwdot[c2h6]/d[c2h6]
  J[1352] += dqdci; // dwdot[c2h5]/d[c2h6]
  J[1393] += dqdci; // dwdot[nc7h16]/d[c2h6]
  J[1397] -= dqdci; // dwdot[c7h15-4]/d[c2h6]
  // d()/d[c7h15-4]
  dqdci = +k_f * sc[15];
  J[5533] -= dqdci; // dwdot[c2h6]/d[c7h15-4]
  J[5535] += dqdci; // dwdot[c2h5]/d[c7h15-4]
  J[5576] += dqdci; // dwdot[nc7h16]/d[c7h15-4]
  J[5580] -= dqdci; // dwdot[c7h15-4]/d[c7h15-4]
  // d()/dT
  J[7847] -= dqdT; // dwdot[c2h6]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7894] -= dqdT; // dwdot[c7h15-4]/dT

  // reaction 599: c2h3 + nc7h16 => c2h4 + c7h15-1
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[58];
  k_f = 1000000 * exp(-(9057.89998448495) * invT);
  dlnkfdT = (9057.89998448495) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] += q; // c2h4
  wdot[19] -= q; // c2h3
  wdot[58] -= q; // nc7h16
  wdot[59] += q; // c7h15-1
  // d()/d[c2h3]
  dqdci = +k_f * sc[58];
  J[1707] += dqdci; // dwdot[c2h4]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  J[1749] -= dqdci; // dwdot[nc7h16]/d[c2h3]
  J[1750] += dqdci; // dwdot[c7h15-1]/d[c2h3]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[19];
  J[5178] += dqdci; // dwdot[c2h4]/d[nc7h16]
  J[5181] -= dqdci; // dwdot[c2h3]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5221] += dqdci; // dwdot[c7h15-1]/d[nc7h16]
  // d()/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7891] += dqdT; // dwdot[c7h15-1]/dT

  // reaction 600: c2h4 + c7h15-1 => c2h3 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[59];
  k_f = 2570000 * exp(-(12781.7033114399) * invT);
  dlnkfdT = (12781.7033114399) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] -= q; // c2h4
  wdot[19] += q; // c2h3
  wdot[58] += q; // nc7h16
  wdot[59] -= q; // c7h15-1
  // d()/d[c2h4]
  dqdci = +k_f * sc[59];
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1443] += dqdci; // dwdot[c2h3]/d[c2h4]
  J[1482] += dqdci; // dwdot[nc7h16]/d[c2h4]
  J[1483] -= dqdci; // dwdot[c7h15-1]/d[c2h4]
  // d()/d[c7h15-1]
  dqdci = +k_f * sc[16];
  J[5267] -= dqdci; // dwdot[c2h4]/d[c7h15-1]
  J[5270] += dqdci; // dwdot[c2h3]/d[c7h15-1]
  J[5309] += dqdci; // dwdot[nc7h16]/d[c7h15-1]
  J[5310] -= dqdci; // dwdot[c7h15-1]/d[c7h15-1]
  // d()/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7891] -= dqdT; // dwdot[c7h15-1]/dT

  // reaction 601: c2h3 + nc7h16 => c2h4 + c7h15-2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[58];
  k_f = 800000 * exp(-(8454.03998551929) * invT);
  dlnkfdT = (8454.03998551929) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] += q; // c2h4
  wdot[19] -= q; // c2h3
  wdot[58] -= q; // nc7h16
  wdot[60] += q; // c7h15-2
  // d()/d[c2h3]
  dqdci = +k_f * sc[58];
  J[1707] += dqdci; // dwdot[c2h4]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  J[1749] -= dqdci; // dwdot[nc7h16]/d[c2h3]
  J[1751] += dqdci; // dwdot[c7h15-2]/d[c2h3]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[19];
  J[5178] += dqdci; // dwdot[c2h4]/d[nc7h16]
  J[5181] -= dqdci; // dwdot[c2h3]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5222] += dqdci; // dwdot[c7h15-2]/d[nc7h16]
  // d()/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7892] += dqdT; // dwdot[c7h15-2]/dT

  // reaction 602: c2h4 + c7h15-2 => c2h3 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[60];
  k_f = 2000000 * exp(-(12177.8433124742) * invT);
  dlnkfdT = (12177.8433124742) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] -= q; // c2h4
  wdot[19] += q; // c2h3
  wdot[58] += q; // nc7h16
  wdot[60] -= q; // c7h15-2
  // d()/d[c2h4]
  dqdci = +k_f * sc[60];
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1443] += dqdci; // dwdot[c2h3]/d[c2h4]
  J[1482] += dqdci; // dwdot[nc7h16]/d[c2h4]
  J[1484] -= dqdci; // dwdot[c7h15-2]/d[c2h4]
  // d()/d[c7h15-2]
  dqdci = +k_f * sc[16];
  J[5356] -= dqdci; // dwdot[c2h4]/d[c7h15-2]
  J[5359] += dqdci; // dwdot[c2h3]/d[c7h15-2]
  J[5398] += dqdci; // dwdot[nc7h16]/d[c7h15-2]
  J[5400] -= dqdci; // dwdot[c7h15-2]/d[c7h15-2]
  // d()/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7892] -= dqdT; // dwdot[c7h15-2]/dT

  // reaction 603: c2h3 + nc7h16 => c2h4 + c7h15-3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[58];
  k_f = 800000 * exp(-(8454.03998551929) * invT);
  dlnkfdT = (8454.03998551929) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] += q; // c2h4
  wdot[19] -= q; // c2h3
  wdot[58] -= q; // nc7h16
  wdot[61] += q; // c7h15-3
  // d()/d[c2h3]
  dqdci = +k_f * sc[58];
  J[1707] += dqdci; // dwdot[c2h4]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  J[1749] -= dqdci; // dwdot[nc7h16]/d[c2h3]
  J[1752] += dqdci; // dwdot[c7h15-3]/d[c2h3]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[19];
  J[5178] += dqdci; // dwdot[c2h4]/d[nc7h16]
  J[5181] -= dqdci; // dwdot[c2h3]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5223] += dqdci; // dwdot[c7h15-3]/d[nc7h16]
  // d()/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT

  // reaction 604: c2h4 + c7h15-3 => c2h3 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[61];
  k_f = 2000000 * exp(-(12177.8433124742) * invT);
  dlnkfdT = (12177.8433124742) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] -= q; // c2h4
  wdot[19] += q; // c2h3
  wdot[58] += q; // nc7h16
  wdot[61] -= q; // c7h15-3
  // d()/d[c2h4]
  dqdci = +k_f * sc[61];
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1443] += dqdci; // dwdot[c2h3]/d[c2h4]
  J[1482] += dqdci; // dwdot[nc7h16]/d[c2h4]
  J[1485] -= dqdci; // dwdot[c7h15-3]/d[c2h4]
  // d()/d[c7h15-3]
  dqdci = +k_f * sc[16];
  J[5445] -= dqdci; // dwdot[c2h4]/d[c7h15-3]
  J[5448] += dqdci; // dwdot[c2h3]/d[c7h15-3]
  J[5487] += dqdci; // dwdot[nc7h16]/d[c7h15-3]
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  // d()/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT

  // reaction 605: c2h3 + nc7h16 => c2h4 + c7h15-4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[58];
  k_f = 400000 * exp(-(8454.03998551929) * invT);
  dlnkfdT = (8454.03998551929) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] += q; // c2h4
  wdot[19] -= q; // c2h3
  wdot[58] -= q; // nc7h16
  wdot[62] += q; // c7h15-4
  // d()/d[c2h3]
  dqdci = +k_f * sc[58];
  J[1707] += dqdci; // dwdot[c2h4]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  J[1749] -= dqdci; // dwdot[nc7h16]/d[c2h3]
  J[1753] += dqdci; // dwdot[c7h15-4]/d[c2h3]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[19];
  J[5178] += dqdci; // dwdot[c2h4]/d[nc7h16]
  J[5181] -= dqdci; // dwdot[c2h3]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5224] += dqdci; // dwdot[c7h15-4]/d[nc7h16]
  // d()/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7894] += dqdT; // dwdot[c7h15-4]/dT

  // reaction 606: c2h4 + c7h15-4 => c2h3 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[62];
  k_f = 2000000 * exp(-(12177.8433124742) * invT);
  dlnkfdT = (12177.8433124742) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] -= q; // c2h4
  wdot[19] += q; // c2h3
  wdot[58] += q; // nc7h16
  wdot[62] -= q; // c7h15-4
  // d()/d[c2h4]
  dqdci = +k_f * sc[62];
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1443] += dqdci; // dwdot[c2h3]/d[c2h4]
  J[1482] += dqdci; // dwdot[nc7h16]/d[c2h4]
  J[1486] -= dqdci; // dwdot[c7h15-4]/d[c2h4]
  // d()/d[c7h15-4]
  dqdci = +k_f * sc[16];
  J[5534] -= dqdci; // dwdot[c2h4]/d[c7h15-4]
  J[5537] += dqdci; // dwdot[c2h3]/d[c7h15-4]
  J[5576] += dqdci; // dwdot[nc7h16]/d[c7h15-4]
  J[5580] -= dqdci; // dwdot[c7h15-4]/d[c7h15-4]
  // d()/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7894] -= dqdT; // dwdot[c7h15-4]/dT

  // reaction 607: ch3o2 + nc7h16 => c7h15-1 + ch3o2h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[38] * sc[58];
  k_f = 12100000 * exp(-(10280.7164823904) * invT);
  dlnkfdT = (10280.7164823904) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[38] -= q; // ch3o2
  wdot[39] += q; // ch3o2h
  wdot[58] -= q; // nc7h16
  wdot[59] += q; // c7h15-1
  // d()/d[ch3o2]
  dqdci = +k_f * sc[58];
  J[3420] -= dqdci; // dwdot[ch3o2]/d[ch3o2]
  J[3421] += dqdci; // dwdot[ch3o2h]/d[ch3o2]
  J[3440] -= dqdci; // dwdot[nc7h16]/d[ch3o2]
  J[3441] += dqdci; // dwdot[c7h15-1]/d[ch3o2]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[38];
  J[5200] -= dqdci; // dwdot[ch3o2]/d[nc7h16]
  J[5201] += dqdci; // dwdot[ch3o2h]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5221] += dqdci; // dwdot[c7h15-1]/d[nc7h16]
  // d()/dT
  J[7870] -= dqdT; // dwdot[ch3o2]/dT
  J[7871] += dqdT; // dwdot[ch3o2h]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7891] += dqdT; // dwdot[c7h15-1]/dT

  // reaction 608: c7h15-1 + ch3o2h => ch3o2 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[39] * sc[59];
  k_f = 3600000 * exp(-(4931.52332488625) * invT);
  dlnkfdT = (4931.52332488625) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[38] += q; // ch3o2
  wdot[39] -= q; // ch3o2h
  wdot[58] += q; // nc7h16
  wdot[59] -= q; // c7h15-1
  // d()/d[ch3o2h]
  dqdci = +k_f * sc[59];
  J[3509] += dqdci; // dwdot[ch3o2]/d[ch3o2h]
  J[3510] -= dqdci; // dwdot[ch3o2h]/d[ch3o2h]
  J[3529] += dqdci; // dwdot[nc7h16]/d[ch3o2h]
  J[3530] -= dqdci; // dwdot[c7h15-1]/d[ch3o2h]
  // d()/d[c7h15-1]
  dqdci = +k_f * sc[39];
  J[5289] += dqdci; // dwdot[ch3o2]/d[c7h15-1]
  J[5290] -= dqdci; // dwdot[ch3o2h]/d[c7h15-1]
  J[5309] += dqdci; // dwdot[nc7h16]/d[c7h15-1]
  J[5310] -= dqdci; // dwdot[c7h15-1]/d[c7h15-1]
  // d()/dT
  J[7870] += dqdT; // dwdot[ch3o2]/dT
  J[7871] -= dqdT; // dwdot[ch3o2h]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7891] -= dqdT; // dwdot[c7h15-1]/dT

  // reaction 609: ch3o2 + nc7h16 => c7h15-2 + ch3o2h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[38] * sc[58];
  k_f = 8064000 * exp(-(8906.93498474354) * invT);
  dlnkfdT = (8906.93498474354) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[38] -= q; // ch3o2
  wdot[39] += q; // ch3o2h
  wdot[58] -= q; // nc7h16
  wdot[60] += q; // c7h15-2
  // d()/d[ch3o2]
  dqdci = +k_f * sc[58];
  J[3420] -= dqdci; // dwdot[ch3o2]/d[ch3o2]
  J[3421] += dqdci; // dwdot[ch3o2h]/d[ch3o2]
  J[3440] -= dqdci; // dwdot[nc7h16]/d[ch3o2]
  J[3442] += dqdci; // dwdot[c7h15-2]/d[ch3o2]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[38];
  J[5200] -= dqdci; // dwdot[ch3o2]/d[nc7h16]
  J[5201] += dqdci; // dwdot[ch3o2h]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5222] += dqdci; // dwdot[c7h15-2]/d[nc7h16]
  // d()/dT
  J[7870] -= dqdT; // dwdot[ch3o2]/dT
  J[7871] += dqdT; // dwdot[ch3o2h]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7892] += dqdT; // dwdot[c7h15-2]/dT

  // reaction 610: c7h15-2 + ch3o2h => ch3o2 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[39] * sc[60];
  k_f = 237600 * exp(-(1861.90166347746) * invT);
  dlnkfdT = (1861.90166347746) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[38] += q; // ch3o2
  wdot[39] -= q; // ch3o2h
  wdot[58] += q; // nc7h16
  wdot[60] -= q; // c7h15-2
  // d()/d[ch3o2h]
  dqdci = +k_f * sc[60];
  J[3509] += dqdci; // dwdot[ch3o2]/d[ch3o2h]
  J[3510] -= dqdci; // dwdot[ch3o2h]/d[ch3o2h]
  J[3529] += dqdci; // dwdot[nc7h16]/d[ch3o2h]
  J[3531] -= dqdci; // dwdot[c7h15-2]/d[ch3o2h]
  // d()/d[c7h15-2]
  dqdci = +k_f * sc[39];
  J[5378] += dqdci; // dwdot[ch3o2]/d[c7h15-2]
  J[5379] -= dqdci; // dwdot[ch3o2h]/d[c7h15-2]
  J[5398] += dqdci; // dwdot[nc7h16]/d[c7h15-2]
  J[5400] -= dqdci; // dwdot[c7h15-2]/d[c7h15-2]
  // d()/dT
  J[7870] += dqdT; // dwdot[ch3o2]/dT
  J[7871] -= dqdT; // dwdot[ch3o2h]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7892] -= dqdT; // dwdot[c7h15-2]/dT

  // reaction 611: ch3o2 + nc7h16 => c7h15-3 + ch3o2h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[38] * sc[58];
  k_f = 8064000 * exp(-(8906.93498474354) * invT);
  dlnkfdT = (8906.93498474354) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[38] -= q; // ch3o2
  wdot[39] += q; // ch3o2h
  wdot[58] -= q; // nc7h16
  wdot[61] += q; // c7h15-3
  // d()/d[ch3o2]
  dqdci = +k_f * sc[58];
  J[3420] -= dqdci; // dwdot[ch3o2]/d[ch3o2]
  J[3421] += dqdci; // dwdot[ch3o2h]/d[ch3o2]
  J[3440] -= dqdci; // dwdot[nc7h16]/d[ch3o2]
  J[3443] += dqdci; // dwdot[c7h15-3]/d[ch3o2]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[38];
  J[5200] -= dqdci; // dwdot[ch3o2]/d[nc7h16]
  J[5201] += dqdci; // dwdot[ch3o2h]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5223] += dqdci; // dwdot[c7h15-3]/d[nc7h16]
  // d()/dT
  J[7870] -= dqdT; // dwdot[ch3o2]/dT
  J[7871] += dqdT; // dwdot[ch3o2h]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT

  // reaction 612: c7h15-3 + ch3o2h => ch3o2 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[39] * sc[61];
  k_f = 237600 * exp(-(1861.90166347746) * invT);
  dlnkfdT = (1861.90166347746) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[38] += q; // ch3o2
  wdot[39] -= q; // ch3o2h
  wdot[58] += q; // nc7h16
  wdot[61] -= q; // c7h15-3
  // d()/d[ch3o2h]
  dqdci = +k_f * sc[61];
  J[3509] += dqdci; // dwdot[ch3o2]/d[ch3o2h]
  J[3510] -= dqdci; // dwdot[ch3o2h]/d[ch3o2h]
  J[3529] += dqdci; // dwdot[nc7h16]/d[ch3o2h]
  J[3532] -= dqdci; // dwdot[c7h15-3]/d[ch3o2h]
  // d()/d[c7h15-3]
  dqdci = +k_f * sc[39];
  J[5467] += dqdci; // dwdot[ch3o2]/d[c7h15-3]
  J[5468] -= dqdci; // dwdot[ch3o2h]/d[c7h15-3]
  J[5487] += dqdci; // dwdot[nc7h16]/d[c7h15-3]
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  // d()/dT
  J[7870] += dqdT; // dwdot[ch3o2]/dT
  J[7871] -= dqdT; // dwdot[ch3o2h]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT

  // reaction 613: ch3o2 + nc7h16 => c7h15-4 + ch3o2h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[38] * sc[58];
  k_f = 4032000 * exp(-(8906.93498474354) * invT);
  dlnkfdT = (8906.93498474354) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[38] -= q; // ch3o2
  wdot[39] += q; // ch3o2h
  wdot[58] -= q; // nc7h16
  wdot[62] += q; // c7h15-4
  // d()/d[ch3o2]
  dqdci = +k_f * sc[58];
  J[3420] -= dqdci; // dwdot[ch3o2]/d[ch3o2]
  J[3421] += dqdci; // dwdot[ch3o2h]/d[ch3o2]
  J[3440] -= dqdci; // dwdot[nc7h16]/d[ch3o2]
  J[3444] += dqdci; // dwdot[c7h15-4]/d[ch3o2]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[38];
  J[5200] -= dqdci; // dwdot[ch3o2]/d[nc7h16]
  J[5201] += dqdci; // dwdot[ch3o2h]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5224] += dqdci; // dwdot[c7h15-4]/d[nc7h16]
  // d()/dT
  J[7870] -= dqdT; // dwdot[ch3o2]/dT
  J[7871] += dqdT; // dwdot[ch3o2h]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7894] += dqdT; // dwdot[c7h15-4]/dT

  // reaction 614: c7h15-4 + ch3o2h => ch3o2 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[39] * sc[62];
  k_f = 237600 * exp(-(1861.90166347746) * invT);
  dlnkfdT = (1861.90166347746) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[38] += q; // ch3o2
  wdot[39] -= q; // ch3o2h
  wdot[58] += q; // nc7h16
  wdot[62] -= q; // c7h15-4
  // d()/d[ch3o2h]
  dqdci = +k_f * sc[62];
  J[3509] += dqdci; // dwdot[ch3o2]/d[ch3o2h]
  J[3510] -= dqdci; // dwdot[ch3o2h]/d[ch3o2h]
  J[3529] += dqdci; // dwdot[nc7h16]/d[ch3o2h]
  J[3533] -= dqdci; // dwdot[c7h15-4]/d[ch3o2h]
  // d()/d[c7h15-4]
  dqdci = +k_f * sc[39];
  J[5556] += dqdci; // dwdot[ch3o2]/d[c7h15-4]
  J[5557] -= dqdci; // dwdot[ch3o2h]/d[c7h15-4]
  J[5576] += dqdci; // dwdot[nc7h16]/d[c7h15-4]
  J[5580] -= dqdci; // dwdot[c7h15-4]/d[c7h15-4]
  // d()/dT
  J[7870] += dqdT; // dwdot[ch3o2]/dT
  J[7871] -= dqdT; // dwdot[ch3o2h]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7894] -= dqdT; // dwdot[c7h15-4]/dT

  // reaction 615: c7h15-1 + nc7h16 => c7h15-2 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[58] * sc[59];
  k_f = 100000 * exp(-(5233.45332436908) * invT);
  dlnkfdT = (5233.45332436908) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[59] -= q; // c7h15-1
  wdot[60] += q; // c7h15-2
  // d()/d[nc7h16]
  dqdci = +k_f * sc[59];
  J[5221] -= dqdci; // dwdot[c7h15-1]/d[nc7h16]
  J[5222] += dqdci; // dwdot[c7h15-2]/d[nc7h16]
  // d()/d[c7h15-1]
  dqdci = +k_f * sc[58];
  J[5310] -= dqdci; // dwdot[c7h15-1]/d[c7h15-1]
  J[5311] += dqdci; // dwdot[c7h15-2]/d[c7h15-1]
  // d()/dT
  J[7891] -= dqdT; // dwdot[c7h15-1]/dT
  J[7892] += dqdT; // dwdot[c7h15-2]/dT

  // reaction 616: c7h15-2 + nc7h16 => c7h15-1 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[58] * sc[60];
  k_f = 150000 * exp(-(6189.56498939805) * invT);
  dlnkfdT = (6189.56498939805) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[59] += q; // c7h15-1
  wdot[60] -= q; // c7h15-2
  // d()/d[nc7h16]
  dqdci = +k_f * sc[60];
  J[5221] += dqdci; // dwdot[c7h15-1]/d[nc7h16]
  J[5222] -= dqdci; // dwdot[c7h15-2]/d[nc7h16]
  // d()/d[c7h15-2]
  dqdci = +k_f * sc[58];
  J[5399] += dqdci; // dwdot[c7h15-1]/d[c7h15-2]
  J[5400] -= dqdci; // dwdot[c7h15-2]/d[c7h15-2]
  // d()/dT
  J[7891] += dqdT; // dwdot[c7h15-1]/dT
  J[7892] -= dqdT; // dwdot[c7h15-2]/dT

  // reaction 617: c7h15-1 + nc7h16 => c7h15-3 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[58] * sc[59];
  k_f = 100000 * exp(-(5233.45332436908) * invT);
  dlnkfdT = (5233.45332436908) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[59] -= q; // c7h15-1
  wdot[61] += q; // c7h15-3
  // d()/d[nc7h16]
  dqdci = +k_f * sc[59];
  J[5221] -= dqdci; // dwdot[c7h15-1]/d[nc7h16]
  J[5223] += dqdci; // dwdot[c7h15-3]/d[nc7h16]
  // d()/d[c7h15-1]
  dqdci = +k_f * sc[58];
  J[5310] -= dqdci; // dwdot[c7h15-1]/d[c7h15-1]
  J[5312] += dqdci; // dwdot[c7h15-3]/d[c7h15-1]
  // d()/dT
  J[7891] -= dqdT; // dwdot[c7h15-1]/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT

  // reaction 618: c7h15-3 + nc7h16 => c7h15-1 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[58] * sc[61];
  k_f = 150000 * exp(-(6189.56498939805) * invT);
  dlnkfdT = (6189.56498939805) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[59] += q; // c7h15-1
  wdot[61] -= q; // c7h15-3
  // d()/d[nc7h16]
  dqdci = +k_f * sc[61];
  J[5221] += dqdci; // dwdot[c7h15-1]/d[nc7h16]
  J[5223] -= dqdci; // dwdot[c7h15-3]/d[nc7h16]
  // d()/d[c7h15-3]
  dqdci = +k_f * sc[58];
  J[5488] += dqdci; // dwdot[c7h15-1]/d[c7h15-3]
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  // d()/dT
  J[7891] += dqdT; // dwdot[c7h15-1]/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT

  // reaction 619: c7h15-1 + nc7h16 => c7h15-4 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[58] * sc[59];
  k_f = 50000 * exp(-(5233.45332436908) * invT);
  dlnkfdT = (5233.45332436908) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[59] -= q; // c7h15-1
  wdot[62] += q; // c7h15-4
  // d()/d[nc7h16]
  dqdci = +k_f * sc[59];
  J[5221] -= dqdci; // dwdot[c7h15-1]/d[nc7h16]
  J[5224] += dqdci; // dwdot[c7h15-4]/d[nc7h16]
  // d()/d[c7h15-1]
  dqdci = +k_f * sc[58];
  J[5310] -= dqdci; // dwdot[c7h15-1]/d[c7h15-1]
  J[5313] += dqdci; // dwdot[c7h15-4]/d[c7h15-1]
  // d()/dT
  J[7891] -= dqdT; // dwdot[c7h15-1]/dT
  J[7894] += dqdT; // dwdot[c7h15-4]/dT

  // reaction 620: c7h15-4 + nc7h16 => c7h15-1 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[58] * sc[62];
  k_f = 150000 * exp(-(6189.56498939805) * invT);
  dlnkfdT = (6189.56498939805) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[59] += q; // c7h15-1
  wdot[62] -= q; // c7h15-4
  // d()/d[nc7h16]
  dqdci = +k_f * sc[62];
  J[5221] += dqdci; // dwdot[c7h15-1]/d[nc7h16]
  J[5224] -= dqdci; // dwdot[c7h15-4]/d[nc7h16]
  // d()/d[c7h15-4]
  dqdci = +k_f * sc[58];
  J[5577] += dqdci; // dwdot[c7h15-1]/d[c7h15-4]
  J[5580] -= dqdci; // dwdot[c7h15-4]/d[c7h15-4]
  // d()/dT
  J[7891] += dqdT; // dwdot[c7h15-1]/dT
  J[7894] -= dqdT; // dwdot[c7h15-4]/dT

  // reaction 621: c7h15-2 + nc7h16 => c7h15-3 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[58] * sc[60];
  k_f = 100000 * exp(-(5233.45332436908) * invT);
  dlnkfdT = (5233.45332436908) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[60] -= q; // c7h15-2
  wdot[61] += q; // c7h15-3
  // d()/d[nc7h16]
  dqdci = +k_f * sc[60];
  J[5222] -= dqdci; // dwdot[c7h15-2]/d[nc7h16]
  J[5223] += dqdci; // dwdot[c7h15-3]/d[nc7h16]
  // d()/d[c7h15-2]
  dqdci = +k_f * sc[58];
  J[5400] -= dqdci; // dwdot[c7h15-2]/d[c7h15-2]
  J[5401] += dqdci; // dwdot[c7h15-3]/d[c7h15-2]
  // d()/dT
  J[7892] -= dqdT; // dwdot[c7h15-2]/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT

  // reaction 622: c7h15-3 + nc7h16 => c7h15-2 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[58] * sc[61];
  k_f = 100000 * exp(-(5233.45332436908) * invT);
  dlnkfdT = (5233.45332436908) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[60] += q; // c7h15-2
  wdot[61] -= q; // c7h15-3
  // d()/d[nc7h16]
  dqdci = +k_f * sc[61];
  J[5222] += dqdci; // dwdot[c7h15-2]/d[nc7h16]
  J[5223] -= dqdci; // dwdot[c7h15-3]/d[nc7h16]
  // d()/d[c7h15-3]
  dqdci = +k_f * sc[58];
  J[5489] += dqdci; // dwdot[c7h15-2]/d[c7h15-3]
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  // d()/dT
  J[7892] += dqdT; // dwdot[c7h15-2]/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT

  // reaction 623: c7h15-2 + nc7h16 => c7h15-4 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[58] * sc[60];
  k_f = 50000 * exp(-(5233.45332436908) * invT);
  dlnkfdT = (5233.45332436908) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[60] -= q; // c7h15-2
  wdot[62] += q; // c7h15-4
  // d()/d[nc7h16]
  dqdci = +k_f * sc[60];
  J[5222] -= dqdci; // dwdot[c7h15-2]/d[nc7h16]
  J[5224] += dqdci; // dwdot[c7h15-4]/d[nc7h16]
  // d()/d[c7h15-2]
  dqdci = +k_f * sc[58];
  J[5400] -= dqdci; // dwdot[c7h15-2]/d[c7h15-2]
  J[5402] += dqdci; // dwdot[c7h15-4]/d[c7h15-2]
  // d()/dT
  J[7892] -= dqdT; // dwdot[c7h15-2]/dT
  J[7894] += dqdT; // dwdot[c7h15-4]/dT

  // reaction 624: c7h15-4 + nc7h16 => c7h15-2 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[58] * sc[62];
  k_f = 100000 * exp(-(5233.45332436908) * invT);
  dlnkfdT = (5233.45332436908) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[60] += q; // c7h15-2
  wdot[62] -= q; // c7h15-4
  // d()/d[nc7h16]
  dqdci = +k_f * sc[62];
  J[5222] += dqdci; // dwdot[c7h15-2]/d[nc7h16]
  J[5224] -= dqdci; // dwdot[c7h15-4]/d[nc7h16]
  // d()/d[c7h15-4]
  dqdci = +k_f * sc[58];
  J[5578] += dqdci; // dwdot[c7h15-2]/d[c7h15-4]
  J[5580] -= dqdci; // dwdot[c7h15-4]/d[c7h15-4]
  // d()/dT
  J[7892] += dqdT; // dwdot[c7h15-2]/dT
  J[7894] -= dqdT; // dwdot[c7h15-4]/dT

  // reaction 625: c7h15-3 + nc7h16 => c7h15-4 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[58] * sc[61];
  k_f = 50000 * exp(-(5233.45332436908) * invT);
  dlnkfdT = (5233.45332436908) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[61] -= q; // c7h15-3
  wdot[62] += q; // c7h15-4
  // d()/d[nc7h16]
  dqdci = +k_f * sc[61];
  J[5223] -= dqdci; // dwdot[c7h15-3]/d[nc7h16]
  J[5224] += dqdci; // dwdot[c7h15-4]/d[nc7h16]
  // d()/d[c7h15-3]
  dqdci = +k_f * sc[58];
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  J[5491] += dqdci; // dwdot[c7h15-4]/d[c7h15-3]
  // d()/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT
  J[7894] += dqdT; // dwdot[c7h15-4]/dT

  // reaction 626: c7h15-4 + nc7h16 => c7h15-3 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[58] * sc[62];
  k_f = 100000 * exp(-(5233.45332436908) * invT);
  dlnkfdT = (5233.45332436908) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[61] += q; // c7h15-3
  wdot[62] -= q; // c7h15-4
  // d()/d[nc7h16]
  dqdci = +k_f * sc[62];
  J[5223] += dqdci; // dwdot[c7h15-3]/d[nc7h16]
  J[5224] -= dqdci; // dwdot[c7h15-4]/d[nc7h16]
  // d()/d[c7h15-4]
  dqdci = +k_f * sc[58];
  J[5579] += dqdci; // dwdot[c7h15-3]/d[c7h15-4]
  J[5580] -= dqdci; // dwdot[c7h15-4]/d[c7h15-4]
  // d()/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT
  J[7894] -= dqdT; // dwdot[c7h15-4]/dT

  // reaction 627: c7h15-2 => c3h6 + pc4h9
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[60];
  k_f = 2.218e+16 * exp(-0.89 * logT - (15161.9181406962) * invT);
  dlnkfdT = -0.89 * invT + (15161.9181406962) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[26] += q; // c3h6
  wdot[31] += q; // pc4h9
  wdot[60] -= q; // c7h15-2
  // d()/d[c7h15-2]
  dqdci = +k_f;
  J[5366] += dqdci; // dwdot[c3h6]/d[c7h15-2]
  J[5371] += dqdci; // dwdot[pc4h9]/d[c7h15-2]
  J[5400] -= dqdci; // dwdot[c7h15-2]/d[c7h15-2]
  // d()/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7863] += dqdT; // dwdot[pc4h9]/dT
  J[7892] -= dqdT; // dwdot[c7h15-2]/dT

  // reaction 628: c3h6 + pc4h9 => c7h15-2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[26] * sc[31];
  k_f = 100000 * exp(-(4126.3766595987) * invT);
  dlnkfdT = (4126.3766595987) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[26] -= q; // c3h6
  wdot[31] -= q; // pc4h9
  wdot[60] += q; // c7h15-2
  // d()/d[c3h6]
  dqdci = +k_f * sc[31];
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  J[2345] -= dqdci; // dwdot[pc4h9]/d[c3h6]
  J[2374] += dqdci; // dwdot[c7h15-2]/d[c3h6]
  // d()/d[pc4h9]
  dqdci = +k_f * sc[26];
  J[2785] -= dqdci; // dwdot[c3h6]/d[pc4h9]
  J[2790] -= dqdci; // dwdot[pc4h9]/d[pc4h9]
  J[2819] += dqdci; // dwdot[c7h15-2]/d[pc4h9]
  // d()/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT
  J[7863] -= dqdT; // dwdot[pc4h9]/dT
  J[7892] += dqdT; // dwdot[c7h15-2]/dT

  // reaction 629: c7h15-2 => c7h14-2 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[60];
  k_f = 2.71e+15 * exp(-0.72 * logT - (18915.9144675994) * invT);
  dlnkfdT = -0.72 * invT + (18915.9144675994) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[60] -= q; // c7h15-2
  wdot[63] += q; // c7h14-2
  // d()/d[c7h15-2]
  dqdci = +k_f;
  J[5340] += dqdci; // dwdot[h]/d[c7h15-2]
  J[5400] -= dqdci; // dwdot[c7h15-2]/d[c7h15-2]
  J[5403] += dqdci; // dwdot[c7h14-2]/d[c7h15-2]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7892] -= dqdT; // dwdot[c7h15-2]/dT
  J[7895] += dqdT; // dwdot[c7h14-2]/dT

  // reaction 630: c7h14-2 + h => c7h15-2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[63];
  k_f = 10000000 * exp(-(1459.32833083369) * invT);
  dlnkfdT = (1459.32833083369) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[60] += q; // c7h15-2
  wdot[63] -= q; // c7h14-2
  // d()/d[h]
  dqdci = +k_f * sc[63];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[60] += dqdci; // dwdot[c7h15-2]/d[h]
  J[63] -= dqdci; // dwdot[c7h14-2]/d[h]
  // d()/d[c7h14-2]
  dqdci = +k_f * sc[0];
  J[5607] -= dqdci; // dwdot[h]/d[c7h14-2]
  J[5667] += dqdci; // dwdot[c7h15-2]/d[c7h14-2]
  J[5670] -= dqdci; // dwdot[c7h14-2]/d[c7h14-2]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7892] += dqdT; // dwdot[c7h15-2]/dT
  J[7895] -= dqdT; // dwdot[c7h14-2]/dT

  // reaction 631: c7h15-3 => c4h8-1 + nc3h7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[61];
  k_f = 9.633e+17 * exp(-1.42 * logT - (15388.3656403083) * invT);
  dlnkfdT = -1.42 * invT + (15388.3656403083) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[28] += q; // nc3h7
  wdot[30] += q; // c4h8-1
  wdot[61] -= q; // c7h15-3
  // d()/d[c7h15-3]
  dqdci = +k_f;
  J[5457] += dqdci; // dwdot[nc3h7]/d[c7h15-3]
  J[5459] += dqdci; // dwdot[c4h8-1]/d[c7h15-3]
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  // d()/dT
  J[7860] += dqdT; // dwdot[nc3h7]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT

  // reaction 632: c4h8-1 + nc3h7 => c7h15-3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[28] * sc[30];
  k_f = 100000 * exp(-(3874.76832669634) * invT);
  dlnkfdT = (3874.76832669634) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[28] -= q; // nc3h7
  wdot[30] -= q; // c4h8-1
  wdot[61] += q; // c7h15-3
  // d()/d[nc3h7]
  dqdci = +k_f * sc[30];
  J[2520] -= dqdci; // dwdot[nc3h7]/d[nc3h7]
  J[2522] -= dqdci; // dwdot[c4h8-1]/d[nc3h7]
  J[2553] += dqdci; // dwdot[c7h15-3]/d[nc3h7]
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[28];
  J[2698] -= dqdci; // dwdot[nc3h7]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  J[2731] += dqdci; // dwdot[c7h15-3]/d[c4h8-1]
  // d()/dT
  J[7860] -= dqdT; // dwdot[nc3h7]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT

  // reaction 633: c7h15-3 => c7h14-2 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[61];
  k_f = 2.71e+15 * exp(-0.72 * logT - (18915.9144675994) * invT);
  dlnkfdT = -0.72 * invT + (18915.9144675994) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[61] -= q; // c7h15-3
  wdot[63] += q; // c7h14-2
  // d()/d[c7h15-3]
  dqdci = +k_f;
  J[5429] += dqdci; // dwdot[h]/d[c7h15-3]
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  J[5492] += dqdci; // dwdot[c7h14-2]/d[c7h15-3]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT
  J[7895] += dqdT; // dwdot[c7h14-2]/dT

  // reaction 634: c7h14-2 + h => c7h15-3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[63];
  k_f = 10000000 * exp(-(1459.32833083369) * invT);
  dlnkfdT = (1459.32833083369) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[61] += q; // c7h15-3
  wdot[63] -= q; // c7h14-2
  // d()/d[h]
  dqdci = +k_f * sc[63];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[61] += dqdci; // dwdot[c7h15-3]/d[h]
  J[63] -= dqdci; // dwdot[c7h14-2]/d[h]
  // d()/d[c7h14-2]
  dqdci = +k_f * sc[0];
  J[5607] -= dqdci; // dwdot[h]/d[c7h14-2]
  J[5668] += dqdci; // dwdot[c7h15-3]/d[c7h14-2]
  J[5670] -= dqdci; // dwdot[c7h14-2]/d[c7h14-2]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT
  J[7895] -= dqdT; // dwdot[c7h14-2]/dT

  // reaction 635: c7h15-3 => c7h14-3 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[61];
  k_f = 2.018e+15 * exp(-0.66 * logT - (18961.2039675218) * invT);
  dlnkfdT = -0.66 * invT + (18961.2039675218) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[61] -= q; // c7h15-3
  wdot[64] += q; // c7h14-3
  // d()/d[c7h15-3]
  dqdci = +k_f;
  J[5429] += dqdci; // dwdot[h]/d[c7h15-3]
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  J[5493] += dqdci; // dwdot[c7h14-3]/d[c7h15-3]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT
  J[7896] += dqdT; // dwdot[c7h14-3]/dT

  // reaction 636: c7h14-3 + h => c7h15-3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[64];
  k_f = 10000000 * exp(-(1459.32833083369) * invT);
  dlnkfdT = (1459.32833083369) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[61] += q; // c7h15-3
  wdot[64] -= q; // c7h14-3
  // d()/d[h]
  dqdci = +k_f * sc[64];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[61] += dqdci; // dwdot[c7h15-3]/d[h]
  J[64] -= dqdci; // dwdot[c7h14-3]/d[h]
  // d()/d[c7h14-3]
  dqdci = +k_f * sc[0];
  J[5696] -= dqdci; // dwdot[h]/d[c7h14-3]
  J[5757] += dqdci; // dwdot[c7h15-3]/d[c7h14-3]
  J[5760] -= dqdci; // dwdot[c7h14-3]/d[c7h14-3]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT
  J[7896] -= dqdT; // dwdot[c7h14-3]/dT

  // reaction 637: c7h15-4 => c2h5 + c5h10-1
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[62];
  k_f = 5.426e+16 * exp(-0.89 * logT - (15393.3978069664) * invT);
  dlnkfdT = -0.89 * invT + (15393.3978069664) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[17] += q; // c2h5
  wdot[36] += q; // c5h10-1
  wdot[62] -= q; // c7h15-4
  // d()/d[c7h15-4]
  dqdci = +k_f;
  J[5535] += dqdci; // dwdot[c2h5]/d[c7h15-4]
  J[5554] += dqdci; // dwdot[c5h10-1]/d[c7h15-4]
  J[5580] -= dqdci; // dwdot[c7h15-4]/d[c7h15-4]
  // d()/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7868] += dqdT; // dwdot[c5h10-1]/dT
  J[7894] -= dqdT; // dwdot[c7h15-4]/dT

  // reaction 638: c2h5 + c5h10-1 => c7h15-4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[36];
  k_f = 100000 * exp(-(4126.3766595987) * invT);
  dlnkfdT = (4126.3766595987) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[17] -= q; // c2h5
  wdot[36] -= q; // c5h10-1
  wdot[62] += q; // c7h15-4
  // d()/d[c2h5]
  dqdci = +k_f * sc[36];
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1549] -= dqdci; // dwdot[c5h10-1]/d[c2h5]
  J[1575] += dqdci; // dwdot[c7h15-4]/d[c2h5]
  // d()/d[c5h10-1]
  dqdci = +k_f * sc[17];
  J[3221] -= dqdci; // dwdot[c2h5]/d[c5h10-1]
  J[3240] -= dqdci; // dwdot[c5h10-1]/d[c5h10-1]
  J[3266] += dqdci; // dwdot[c7h15-4]/d[c5h10-1]
  // d()/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7868] -= dqdT; // dwdot[c5h10-1]/dT
  J[7894] += dqdT; // dwdot[c7h15-4]/dT

  // reaction 639: c7h15-4 => c7h14-3 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[62];
  k_f = 4.02e+15 * exp(-0.66 * logT - (18961.2039675218) * invT);
  dlnkfdT = -0.66 * invT + (18961.2039675218) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[62] -= q; // c7h15-4
  wdot[64] += q; // c7h14-3
  // d()/d[c7h15-4]
  dqdci = +k_f;
  J[5518] += dqdci; // dwdot[h]/d[c7h15-4]
  J[5580] -= dqdci; // dwdot[c7h15-4]/d[c7h15-4]
  J[5582] += dqdci; // dwdot[c7h14-3]/d[c7h15-4]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7894] -= dqdT; // dwdot[c7h15-4]/dT
  J[7896] += dqdT; // dwdot[c7h14-3]/dT

  // reaction 640: c7h14-3 + h => c7h15-4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[64];
  k_f = 10000000 * exp(-(1459.32833083369) * invT);
  dlnkfdT = (1459.32833083369) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[62] += q; // c7h15-4
  wdot[64] -= q; // c7h14-3
  // d()/d[h]
  dqdci = +k_f * sc[64];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[62] += dqdci; // dwdot[c7h15-4]/d[h]
  J[64] -= dqdci; // dwdot[c7h14-3]/d[h]
  // d()/d[c7h14-3]
  dqdci = +k_f * sc[0];
  J[5696] -= dqdci; // dwdot[h]/d[c7h14-3]
  J[5758] += dqdci; // dwdot[c7h15-4]/d[c7h14-3]
  J[5760] -= dqdci; // dwdot[c7h14-3]/d[c7h14-3]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7894] += dqdT; // dwdot[c7h15-4]/dT
  J[7896] -= dqdT; // dwdot[c7h14-3]/dT

  // reaction 641: c7h15-2 + o2 => c7h14-2 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[60];
  k_f = 3e-15 * exp(-(1509.64999741416) * invT);
  dlnkfdT = (1509.64999741416) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[60] -= q; // c7h15-2
  wdot[63] += q; // c7h14-2
  // d()/d[o2]
  dqdci = +k_f * sc[60];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[327] -= dqdci; // dwdot[c7h15-2]/d[o2]
  J[330] += dqdci; // dwdot[c7h14-2]/d[o2]
  // d()/d[c7h15-2]
  dqdci = +k_f * sc[3];
  J[5343] -= dqdci; // dwdot[o2]/d[c7h15-2]
  J[5351] += dqdci; // dwdot[ho2]/d[c7h15-2]
  J[5400] -= dqdci; // dwdot[c7h15-2]/d[c7h15-2]
  J[5403] += dqdci; // dwdot[c7h14-2]/d[c7h15-2]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7892] -= dqdT; // dwdot[c7h15-2]/dT
  J[7895] += dqdT; // dwdot[c7h14-2]/dT

  // reaction 642: c7h14-2 + ho2 => c7h15-2 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[63];
  k_f = 3.793e-15 * exp(0.05 * logT - (9193.76848425223) * invT);
  dlnkfdT = 0.05 * invT + (9193.76848425223) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[60] += q; // c7h15-2
  wdot[63] -= q; // c7h14-2
  // d()/d[ho2]
  dqdci = +k_f * sc[63];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1039] += dqdci; // dwdot[c7h15-2]/d[ho2]
  J[1042] -= dqdci; // dwdot[c7h14-2]/d[ho2]
  // d()/d[c7h14-2]
  dqdci = +k_f * sc[11];
  J[5610] += dqdci; // dwdot[o2]/d[c7h14-2]
  J[5618] -= dqdci; // dwdot[ho2]/d[c7h14-2]
  J[5667] += dqdci; // dwdot[c7h15-2]/d[c7h14-2]
  J[5670] -= dqdci; // dwdot[c7h14-2]/d[c7h14-2]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7892] += dqdT; // dwdot[c7h15-2]/dT
  J[7895] -= dqdT; // dwdot[c7h14-2]/dT

  // reaction 643: c7h15-3 + o2 => c7h14-2 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[61];
  k_f = 3e-15 * exp(-(1509.64999741416) * invT);
  dlnkfdT = (1509.64999741416) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[61] -= q; // c7h15-3
  wdot[63] += q; // c7h14-2
  // d()/d[o2]
  dqdci = +k_f * sc[61];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[328] -= dqdci; // dwdot[c7h15-3]/d[o2]
  J[330] += dqdci; // dwdot[c7h14-2]/d[o2]
  // d()/d[c7h15-3]
  dqdci = +k_f * sc[3];
  J[5432] -= dqdci; // dwdot[o2]/d[c7h15-3]
  J[5440] += dqdci; // dwdot[ho2]/d[c7h15-3]
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  J[5492] += dqdci; // dwdot[c7h14-2]/d[c7h15-3]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT
  J[7895] += dqdT; // dwdot[c7h14-2]/dT

  // reaction 644: c7h14-2 + ho2 => c7h15-3 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[63];
  k_f = 3.793e-15 * exp(0.05 * logT - (9193.76848425223) * invT);
  dlnkfdT = 0.05 * invT + (9193.76848425223) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[61] += q; // c7h15-3
  wdot[63] -= q; // c7h14-2
  // d()/d[ho2]
  dqdci = +k_f * sc[63];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1040] += dqdci; // dwdot[c7h15-3]/d[ho2]
  J[1042] -= dqdci; // dwdot[c7h14-2]/d[ho2]
  // d()/d[c7h14-2]
  dqdci = +k_f * sc[11];
  J[5610] += dqdci; // dwdot[o2]/d[c7h14-2]
  J[5618] -= dqdci; // dwdot[ho2]/d[c7h14-2]
  J[5668] += dqdci; // dwdot[c7h15-3]/d[c7h14-2]
  J[5670] -= dqdci; // dwdot[c7h14-2]/d[c7h14-2]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT
  J[7895] -= dqdT; // dwdot[c7h14-2]/dT

  // reaction 645: c7h15-3 + o2 => c7h14-3 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[61];
  k_f = 3e-15 * exp(-(1509.64999741416) * invT);
  dlnkfdT = (1509.64999741416) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[61] -= q; // c7h15-3
  wdot[64] += q; // c7h14-3
  // d()/d[o2]
  dqdci = +k_f * sc[61];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[328] -= dqdci; // dwdot[c7h15-3]/d[o2]
  J[331] += dqdci; // dwdot[c7h14-3]/d[o2]
  // d()/d[c7h15-3]
  dqdci = +k_f * sc[3];
  J[5432] -= dqdci; // dwdot[o2]/d[c7h15-3]
  J[5440] += dqdci; // dwdot[ho2]/d[c7h15-3]
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  J[5493] += dqdci; // dwdot[c7h14-3]/d[c7h15-3]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT
  J[7896] += dqdT; // dwdot[c7h14-3]/dT

  // reaction 646: c7h14-3 + ho2 => c7h15-3 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[64];
  k_f = 5.094e-15 * exp(-0.01 * logT - (9148.4789843298) * invT);
  dlnkfdT = -0.01 * invT + (9148.4789843298) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[61] += q; // c7h15-3
  wdot[64] -= q; // c7h14-3
  // d()/d[ho2]
  dqdci = +k_f * sc[64];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1040] += dqdci; // dwdot[c7h15-3]/d[ho2]
  J[1043] -= dqdci; // dwdot[c7h14-3]/d[ho2]
  // d()/d[c7h14-3]
  dqdci = +k_f * sc[11];
  J[5699] += dqdci; // dwdot[o2]/d[c7h14-3]
  J[5707] -= dqdci; // dwdot[ho2]/d[c7h14-3]
  J[5757] += dqdci; // dwdot[c7h15-3]/d[c7h14-3]
  J[5760] -= dqdci; // dwdot[c7h14-3]/d[c7h14-3]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT
  J[7896] -= dqdT; // dwdot[c7h14-3]/dT

  // reaction 647: c7h15-4 + o2 => c7h14-3 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[62];
  k_f = 6e-15 * exp(-(1509.64999741416) * invT);
  dlnkfdT = (1509.64999741416) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[62] -= q; // c7h15-4
  wdot[64] += q; // c7h14-3
  // d()/d[o2]
  dqdci = +k_f * sc[62];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[329] -= dqdci; // dwdot[c7h15-4]/d[o2]
  J[331] += dqdci; // dwdot[c7h14-3]/d[o2]
  // d()/d[c7h15-4]
  dqdci = +k_f * sc[3];
  J[5521] -= dqdci; // dwdot[o2]/d[c7h15-4]
  J[5529] += dqdci; // dwdot[ho2]/d[c7h15-4]
  J[5580] -= dqdci; // dwdot[c7h15-4]/d[c7h15-4]
  J[5582] += dqdci; // dwdot[c7h14-3]/d[c7h15-4]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7894] -= dqdT; // dwdot[c7h15-4]/dT
  J[7896] += dqdT; // dwdot[c7h14-3]/dT

  // reaction 648: c7h14-3 + ho2 => c7h15-4 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[64];
  k_f = 5.113e-15 * exp(-0.01 * logT - (9148.4789843298) * invT);
  dlnkfdT = -0.01 * invT + (9148.4789843298) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[62] += q; // c7h15-4
  wdot[64] -= q; // c7h14-3
  // d()/d[ho2]
  dqdci = +k_f * sc[64];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1041] += dqdci; // dwdot[c7h15-4]/d[ho2]
  J[1043] -= dqdci; // dwdot[c7h14-3]/d[ho2]
  // d()/d[c7h14-3]
  dqdci = +k_f * sc[11];
  J[5699] += dqdci; // dwdot[o2]/d[c7h14-3]
  J[5707] -= dqdci; // dwdot[ho2]/d[c7h14-3]
  J[5758] += dqdci; // dwdot[c7h15-4]/d[c7h14-3]
  J[5760] -= dqdci; // dwdot[c7h14-3]/d[c7h14-3]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7894] += dqdT; // dwdot[c7h15-4]/dT
  J[7896] -= dqdT; // dwdot[c7h14-3]/dT

  // reaction 649: c7h15-1 => c7h15-3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[59];
  k_f = 1386000000 * exp(0.98 * logT - (16988.5946375673) * invT);
  dlnkfdT = 0.98 * invT + (16988.5946375673) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[59] -= q; // c7h15-1
  wdot[61] += q; // c7h15-3
  // d()/d[c7h15-1]
  dqdci = +k_f;
  J[5310] -= dqdci; // dwdot[c7h15-1]/d[c7h15-1]
  J[5312] += dqdci; // dwdot[c7h15-3]/d[c7h15-1]
  // d()/dT
  J[7891] -= dqdT; // dwdot[c7h15-1]/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT

  // reaction 650: c7h15-3 => c7h15-1
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[61];
  k_f = 44100000 * exp(1.38 * logT - (18256.7006353952) * invT);
  dlnkfdT = 1.38 * invT + (18256.7006353952) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[59] += q; // c7h15-1
  wdot[61] -= q; // c7h15-3
  // d()/d[c7h15-3]
  dqdci = +k_f;
  J[5488] += dqdci; // dwdot[c7h15-1]/d[c7h15-3]
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  // d()/dT
  J[7891] += dqdT; // dwdot[c7h15-1]/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT

  // reaction 651: c7h15-1 => c7h15-4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[59];
  k_f = 2541000000 * exp(0.35 * logT - (9943.56131630126) * invT);
  dlnkfdT = 0.35 * invT + (9943.56131630126) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[59] -= q; // c7h15-1
  wdot[62] += q; // c7h15-4
  // d()/d[c7h15-1]
  dqdci = +k_f;
  J[5310] -= dqdci; // dwdot[c7h15-1]/d[c7h15-1]
  J[5313] += dqdci; // dwdot[c7h15-4]/d[c7h15-1]
  // d()/dT
  J[7891] -= dqdT; // dwdot[c7h15-1]/dT
  J[7894] += dqdT; // dwdot[c7h15-4]/dT

  // reaction 652: c7h15-4 => c7h15-1
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[62];
  k_f = 161100000 * exp(0.74 * logT - (11211.6673141292) * invT);
  dlnkfdT = 0.74 * invT + (11211.6673141292) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[59] += q; // c7h15-1
  wdot[62] -= q; // c7h15-4
  // d()/d[c7h15-4]
  dqdci = +k_f;
  J[5577] += dqdci; // dwdot[c7h15-1]/d[c7h15-4]
  J[5580] -= dqdci; // dwdot[c7h15-4]/d[c7h15-4]
  // d()/dT
  J[7891] += dqdT; // dwdot[c7h15-1]/dT
  J[7894] -= dqdT; // dwdot[c7h15-4]/dT

  // reaction 653: c7h15-2 => c7h15-3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[60];
  k_f = 958700000 * exp(1.39 * logT - (19977.7016324474) * invT);
  dlnkfdT = 1.39 * invT + (19977.7016324474) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[60] -= q; // c7h15-2
  wdot[61] += q; // c7h15-3
  // d()/d[c7h15-2]
  dqdci = +k_f;
  J[5400] -= dqdci; // dwdot[c7h15-2]/d[c7h15-2]
  J[5401] += dqdci; // dwdot[c7h15-3]/d[c7h15-2]
  // d()/dT
  J[7892] -= dqdT; // dwdot[c7h15-2]/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT

  // reaction 654: c7h15-3 => c7h15-2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[61];
  k_f = 958700000 * exp(1.39 * logT - (19977.7016324474) * invT);
  dlnkfdT = 1.39 * invT + (19977.7016324474) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[60] += q; // c7h15-2
  wdot[61] -= q; // c7h15-3
  // d()/d[c7h15-3]
  dqdci = +k_f;
  J[5489] += dqdci; // dwdot[c7h15-2]/d[c7h15-3]
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  // d()/dT
  J[7892] += dqdT; // dwdot[c7h15-2]/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT

  // reaction 655: c7h15-1 => c7h15-2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[59];
  k_f = 547800000 * exp(1.62 * logT - (19504.6779665909) * invT);
  dlnkfdT = 1.62 * invT + (19504.6779665909) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[59] -= q; // c7h15-1
  wdot[60] += q; // c7h15-2
  // d()/d[c7h15-1]
  dqdci = +k_f;
  J[5310] -= dqdci; // dwdot[c7h15-1]/d[c7h15-1]
  J[5311] += dqdci; // dwdot[c7h15-2]/d[c7h15-1]
  // d()/dT
  J[7891] -= dqdT; // dwdot[c7h15-1]/dT
  J[7892] += dqdT; // dwdot[c7h15-2]/dT

  // reaction 656: c7h15-2 => c7h15-1
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[60];
  k_f = 17430000 * exp(2.01 * logT - (20772.7839644188) * invT);
  dlnkfdT = 2.01 * invT + (20772.7839644188) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[59] += q; // c7h15-1
  wdot[60] -= q; // c7h15-2
  // d()/d[c7h15-2]
  dqdci = +k_f;
  J[5399] += dqdci; // dwdot[c7h15-1]/d[c7h15-2]
  J[5400] -= dqdci; // dwdot[c7h15-2]/d[c7h15-2]
  // d()/dT
  J[7891] += dqdT; // dwdot[c7h15-1]/dT
  J[7892] -= dqdT; // dwdot[c7h15-2]/dT

  // reaction 657: c7h14-2 + oh => c2h5cho + pc4h9
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[63];
  k_f = 100000 * exp(-(-2012.86666321888) * invT);
  dlnkfdT = (-2012.86666321888) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[31] += q; // pc4h9
  wdot[33] += q; // c2h5cho
  wdot[63] -= q; // c7h14-2
  // d()/d[oh]
  dqdci = +k_f * sc[63];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[387] += dqdci; // dwdot[pc4h9]/d[oh]
  J[389] += dqdci; // dwdot[c2h5cho]/d[oh]
  J[419] -= dqdci; // dwdot[c7h14-2]/d[oh]
  // d()/d[c7h14-2]
  dqdci = +k_f * sc[4];
  J[5611] -= dqdci; // dwdot[oh]/d[c7h14-2]
  J[5638] += dqdci; // dwdot[pc4h9]/d[c7h14-2]
  J[5640] += dqdci; // dwdot[c2h5cho]/d[c7h14-2]
  J[5670] -= dqdci; // dwdot[c7h14-2]/d[c7h14-2]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7863] += dqdT; // dwdot[pc4h9]/dT
  J[7865] += dqdT; // dwdot[c2h5cho]/dT
  J[7895] -= dqdT; // dwdot[c7h14-2]/dT

  // reaction 658: c7h14-3 + oh => c2h5cho + pc4h9
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[64];
  k_f = 100000 * exp(-(-2012.86666321888) * invT);
  dlnkfdT = (-2012.86666321888) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[31] += q; // pc4h9
  wdot[33] += q; // c2h5cho
  wdot[64] -= q; // c7h14-3
  // d()/d[oh]
  dqdci = +k_f * sc[64];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[387] += dqdci; // dwdot[pc4h9]/d[oh]
  J[389] += dqdci; // dwdot[c2h5cho]/d[oh]
  J[420] -= dqdci; // dwdot[c7h14-3]/d[oh]
  // d()/d[c7h14-3]
  dqdci = +k_f * sc[4];
  J[5700] -= dqdci; // dwdot[oh]/d[c7h14-3]
  J[5727] += dqdci; // dwdot[pc4h9]/d[c7h14-3]
  J[5729] += dqdci; // dwdot[c2h5cho]/d[c7h14-3]
  J[5760] -= dqdci; // dwdot[c7h14-3]/d[c7h14-3]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7863] += dqdT; // dwdot[pc4h9]/dT
  J[7865] += dqdT; // dwdot[c2h5cho]/dT
  J[7896] -= dqdT; // dwdot[c7h14-3]/dT

  // reaction 659: c7h14-2 + o => c5h10-1 + ch3cho
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[63];
  k_f = 100000 * exp(-(-528.377499094956) * invT);
  dlnkfdT = (-528.377499094956) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[24] += q; // ch3cho
  wdot[36] += q; // c5h10-1
  wdot[63] -= q; // c7h14-2
  // d()/d[o]
  dqdci = +k_f * sc[63];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[202] += dqdci; // dwdot[ch3cho]/d[o]
  J[214] += dqdci; // dwdot[c5h10-1]/d[o]
  J[241] -= dqdci; // dwdot[c7h14-2]/d[o]
  // d()/d[c7h14-2]
  dqdci = +k_f * sc[2];
  J[5609] -= dqdci; // dwdot[o]/d[c7h14-2]
  J[5631] += dqdci; // dwdot[ch3cho]/d[c7h14-2]
  J[5643] += dqdci; // dwdot[c5h10-1]/d[c7h14-2]
  J[5670] -= dqdci; // dwdot[c7h14-2]/d[c7h14-2]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT
  J[7868] += dqdT; // dwdot[c5h10-1]/dT
  J[7895] -= dqdT; // dwdot[c7h14-2]/dT

  // reaction 660: c7h14-3 + o => c5h10-1 + ch3cho
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[64];
  k_f = 100000 * exp(-(-528.377499094956) * invT);
  dlnkfdT = (-528.377499094956) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[24] += q; // ch3cho
  wdot[36] += q; // c5h10-1
  wdot[64] -= q; // c7h14-3
  // d()/d[o]
  dqdci = +k_f * sc[64];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[202] += dqdci; // dwdot[ch3cho]/d[o]
  J[214] += dqdci; // dwdot[c5h10-1]/d[o]
  J[242] -= dqdci; // dwdot[c7h14-3]/d[o]
  // d()/d[c7h14-3]
  dqdci = +k_f * sc[2];
  J[5698] -= dqdci; // dwdot[o]/d[c7h14-3]
  J[5720] += dqdci; // dwdot[ch3cho]/d[c7h14-3]
  J[5732] += dqdci; // dwdot[c5h10-1]/d[c7h14-3]
  J[5760] -= dqdci; // dwdot[c7h14-3]/d[c7h14-3]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT
  J[7868] += dqdT; // dwdot[c5h10-1]/dT
  J[7896] -= dqdT; // dwdot[c7h14-3]/dT

  // reaction 661: c7h14-2 => c4h7 + nc3h7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[63];
  k_f = 1e+16 * exp(-(35728.3832721351) * invT);
  dlnkfdT = (35728.3832721351) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[28] += q; // nc3h7
  wdot[29] += q; // c4h7
  wdot[63] -= q; // c7h14-2
  // d()/d[c7h14-2]
  dqdci = +k_f;
  J[5635] += dqdci; // dwdot[nc3h7]/d[c7h14-2]
  J[5636] += dqdci; // dwdot[c4h7]/d[c7h14-2]
  J[5670] -= dqdci; // dwdot[c7h14-2]/d[c7h14-2]
  // d()/dT
  J[7860] += dqdT; // dwdot[nc3h7]/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT
  J[7895] -= dqdT; // dwdot[c7h14-2]/dT

  // reaction 662: c4h7 + nc3h7 => c7h14-2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[28] * sc[29];
  k_f = 10000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[28] -= q; // nc3h7
  wdot[29] -= q; // c4h7
  wdot[63] += q; // c7h14-2
  // d()/d[nc3h7]
  dqdci = +k_f * sc[29];
  J[2520] -= dqdci; // dwdot[nc3h7]/d[nc3h7]
  J[2521] -= dqdci; // dwdot[c4h7]/d[nc3h7]
  J[2555] += dqdci; // dwdot[c7h14-2]/d[nc3h7]
  // d()/d[c4h7]
  dqdci = +k_f * sc[28];
  J[2609] -= dqdci; // dwdot[nc3h7]/d[c4h7]
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  J[2644] += dqdci; // dwdot[c7h14-2]/d[c4h7]
  // d()/dT
  J[7860] -= dqdT; // dwdot[nc3h7]/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT
  J[7895] += dqdT; // dwdot[c7h14-2]/dT

  // reaction 663: c7h14-3 => c4h7 + nc3h7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[64];
  k_f = 1e+16 * exp(-(35728.3832721351) * invT);
  dlnkfdT = (35728.3832721351) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[28] += q; // nc3h7
  wdot[29] += q; // c4h7
  wdot[64] -= q; // c7h14-3
  // d()/d[c7h14-3]
  dqdci = +k_f;
  J[5724] += dqdci; // dwdot[nc3h7]/d[c7h14-3]
  J[5725] += dqdci; // dwdot[c4h7]/d[c7h14-3]
  J[5760] -= dqdci; // dwdot[c7h14-3]/d[c7h14-3]
  // d()/dT
  J[7860] += dqdT; // dwdot[nc3h7]/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT
  J[7896] -= dqdT; // dwdot[c7h14-3]/dT

  // reaction 664: c4h7 + nc3h7 => c7h14-3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[28] * sc[29];
  k_f = 10000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[28] -= q; // nc3h7
  wdot[29] -= q; // c4h7
  wdot[64] += q; // c7h14-3
  // d()/d[nc3h7]
  dqdci = +k_f * sc[29];
  J[2520] -= dqdci; // dwdot[nc3h7]/d[nc3h7]
  J[2521] -= dqdci; // dwdot[c4h7]/d[nc3h7]
  J[2556] += dqdci; // dwdot[c7h14-3]/d[nc3h7]
  // d()/d[c4h7]
  dqdci = +k_f * sc[28];
  J[2609] -= dqdci; // dwdot[nc3h7]/d[c4h7]
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  J[2645] += dqdci; // dwdot[c7h14-3]/d[c4h7]
  // d()/dT
  J[7860] -= dqdT; // dwdot[nc3h7]/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT
  J[7896] += dqdT; // dwdot[c7h14-3]/dT

  // reaction 665: c7h15o2-1 => c7h15-1 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[65];
  k_f = 2.657e+20 * exp(-1.67 * logT - (17813.8699694871) * invT);
  dlnkfdT = -1.67 * invT + (17813.8699694871) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[59] += q; // c7h15-1
  wdot[65] -= q; // c7h15o2-1
  // d()/d[c7h15o2-1]
  dqdci = +k_f;
  J[5788] += dqdci; // dwdot[o2]/d[c7h15o2-1]
  J[5844] += dqdci; // dwdot[c7h15-1]/d[c7h15o2-1]
  J[5850] -= dqdci; // dwdot[c7h15o2-1]/d[c7h15o2-1]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7891] += dqdT; // dwdot[c7h15-1]/dT
  J[7897] -= dqdT; // dwdot[c7h15o2-1]/dT

  // reaction 666: c7h15-1 + o2 => c7h15o2-1
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[59];
  k_f = 4520000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[59] -= q; // c7h15-1
  wdot[65] += q; // c7h15o2-1
  // d()/d[o2]
  dqdci = +k_f * sc[59];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[326] -= dqdci; // dwdot[c7h15-1]/d[o2]
  J[332] += dqdci; // dwdot[c7h15o2-1]/d[o2]
  // d()/d[c7h15-1]
  dqdci = +k_f * sc[3];
  J[5254] -= dqdci; // dwdot[o2]/d[c7h15-1]
  J[5310] -= dqdci; // dwdot[c7h15-1]/d[c7h15-1]
  J[5316] += dqdci; // dwdot[c7h15o2-1]/d[c7h15-1]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7891] -= dqdT; // dwdot[c7h15-1]/dT
  J[7897] += dqdT; // dwdot[c7h15o2-1]/dT

  // reaction 667: c7h15o2-2 => c7h15-2 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[66];
  k_f = 1.357e+23 * exp(-2.36 * logT - (18956.1718008638) * invT);
  dlnkfdT = -2.36 * invT + (18956.1718008638) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[60] += q; // c7h15-2
  wdot[66] -= q; // c7h15o2-2
  // d()/d[c7h15o2-2]
  dqdci = +k_f;
  J[5877] += dqdci; // dwdot[o2]/d[c7h15o2-2]
  J[5934] += dqdci; // dwdot[c7h15-2]/d[c7h15o2-2]
  J[5940] -= dqdci; // dwdot[c7h15o2-2]/d[c7h15o2-2]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7892] += dqdT; // dwdot[c7h15-2]/dT
  J[7898] -= dqdT; // dwdot[c7h15o2-2]/dT

  // reaction 668: c7h15-2 + o2 => c7h15o2-2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[60];
  k_f = 7540000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[60] -= q; // c7h15-2
  wdot[66] += q; // c7h15o2-2
  // d()/d[o2]
  dqdci = +k_f * sc[60];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[327] -= dqdci; // dwdot[c7h15-2]/d[o2]
  J[333] += dqdci; // dwdot[c7h15o2-2]/d[o2]
  // d()/d[c7h15-2]
  dqdci = +k_f * sc[3];
  J[5343] -= dqdci; // dwdot[o2]/d[c7h15-2]
  J[5400] -= dqdci; // dwdot[c7h15-2]/d[c7h15-2]
  J[5406] += dqdci; // dwdot[c7h15o2-2]/d[c7h15-2]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7892] -= dqdT; // dwdot[c7h15-2]/dT
  J[7898] += dqdT; // dwdot[c7h15o2-2]/dT

  // reaction 669: c7h15o2-3 => c7h15-3 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[67];
  k_f = 9.879e+21 * exp(-1.97 * logT - (19051.7829673667) * invT);
  dlnkfdT = -1.97 * invT + (19051.7829673667) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[61] += q; // c7h15-3
  wdot[67] -= q; // c7h15o2-3
  // d()/d[c7h15o2-3]
  dqdci = +k_f;
  J[5966] += dqdci; // dwdot[o2]/d[c7h15o2-3]
  J[6024] += dqdci; // dwdot[c7h15-3]/d[c7h15o2-3]
  J[6030] -= dqdci; // dwdot[c7h15o2-3]/d[c7h15o2-3]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT
  J[7899] -= dqdT; // dwdot[c7h15o2-3]/dT

  // reaction 670: c7h15-3 + o2 => c7h15o2-3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[61];
  k_f = 7540000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[61] -= q; // c7h15-3
  wdot[67] += q; // c7h15o2-3
  // d()/d[o2]
  dqdci = +k_f * sc[61];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[328] -= dqdci; // dwdot[c7h15-3]/d[o2]
  J[334] += dqdci; // dwdot[c7h15o2-3]/d[o2]
  // d()/d[c7h15-3]
  dqdci = +k_f * sc[3];
  J[5432] -= dqdci; // dwdot[o2]/d[c7h15-3]
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  J[5496] += dqdci; // dwdot[c7h15o2-3]/d[c7h15-3]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT
  J[7899] += dqdT; // dwdot[c7h15o2-3]/dT

  // reaction 671: c7h15o2-4 => c7h15-4 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[68];
  k_f = 1.357e+23 * exp(-2.36 * logT - (18956.1718008638) * invT);
  dlnkfdT = -2.36 * invT + (18956.1718008638) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[62] += q; // c7h15-4
  wdot[68] -= q; // c7h15o2-4
  // d()/d[c7h15o2-4]
  dqdci = +k_f;
  J[6055] += dqdci; // dwdot[o2]/d[c7h15o2-4]
  J[6114] += dqdci; // dwdot[c7h15-4]/d[c7h15o2-4]
  J[6120] -= dqdci; // dwdot[c7h15o2-4]/d[c7h15o2-4]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7894] += dqdT; // dwdot[c7h15-4]/dT
  J[7900] -= dqdT; // dwdot[c7h15o2-4]/dT

  // reaction 672: c7h15-4 + o2 => c7h15o2-4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[62];
  k_f = 7540000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[62] -= q; // c7h15-4
  wdot[68] += q; // c7h15o2-4
  // d()/d[o2]
  dqdci = +k_f * sc[62];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[329] -= dqdci; // dwdot[c7h15-4]/d[o2]
  J[335] += dqdci; // dwdot[c7h15o2-4]/d[o2]
  // d()/d[c7h15-4]
  dqdci = +k_f * sc[3];
  J[5521] -= dqdci; // dwdot[o2]/d[c7h15-4]
  J[5580] -= dqdci; // dwdot[c7h15-4]/d[c7h15-4]
  J[5586] += dqdci; // dwdot[c7h15o2-4]/d[c7h15-4]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7894] -= dqdT; // dwdot[c7h15-4]/dT
  J[7900] += dqdT; // dwdot[c7h15o2-4]/dT

  // reaction 673: c7h15o2-1 => c7h14ooh1-3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[65];
  k_f = 25000000000 * exp(-(10492.0674820284) * invT);
  dlnkfdT = (10492.0674820284) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[65] -= q; // c7h15o2-1
  wdot[69] += q; // c7h14ooh1-3
  // d()/d[c7h15o2-1]
  dqdci = +k_f;
  J[5850] -= dqdci; // dwdot[c7h15o2-1]/d[c7h15o2-1]
  J[5854] += dqdci; // dwdot[c7h14ooh1-3]/d[c7h15o2-1]
  // d()/dT
  J[7897] -= dqdT; // dwdot[c7h15o2-1]/dT
  J[7901] += dqdT; // dwdot[c7h14ooh1-3]/dT

  // reaction 674: c7h14ooh1-3 => c7h15o2-1
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[69];
  k_f = 2653000000 * exp(-0.11 * logT - (4146.50532623089) * invT);
  dlnkfdT = -0.11 * invT + (4146.50532623089) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[65] += q; // c7h15o2-1
  wdot[69] -= q; // c7h14ooh1-3
  // d()/d[c7h14ooh1-3]
  dqdci = +k_f;
  J[6206] += dqdci; // dwdot[c7h15o2-1]/d[c7h14ooh1-3]
  J[6210] -= dqdci; // dwdot[c7h14ooh1-3]/d[c7h14ooh1-3]
  // d()/dT
  J[7897] += dqdT; // dwdot[c7h15o2-1]/dT
  J[7901] -= dqdT; // dwdot[c7h14ooh1-3]/dT

  // reaction 675: c7h15o2-2 => c7h14ooh2-3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[66];
  k_f = 200000000000 * exp(-(13511.3674768567) * invT);
  dlnkfdT = (13511.3674768567) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[66] -= q; // c7h15o2-2
  wdot[70] += q; // c7h14ooh2-3
  // d()/d[c7h15o2-2]
  dqdci = +k_f;
  J[5940] -= dqdci; // dwdot[c7h15o2-2]/d[c7h15o2-2]
  J[5944] += dqdci; // dwdot[c7h14ooh2-3]/d[c7h15o2-2]
  // d()/dT
  J[7898] -= dqdT; // dwdot[c7h15o2-2]/dT
  J[7902] += dqdT; // dwdot[c7h14ooh2-3]/dT

  // reaction 676: c7h14ooh2-3 => c7h15o2-2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[70];
  k_f = 22620000000 * exp(-0.11 * logT - (7180.90182103335) * invT);
  dlnkfdT = -0.11 * invT + (7180.90182103335) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[66] += q; // c7h15o2-2
  wdot[70] -= q; // c7h14ooh2-3
  // d()/d[c7h14ooh2-3]
  dqdci = +k_f;
  J[6296] += dqdci; // dwdot[c7h15o2-2]/d[c7h14ooh2-3]
  J[6300] -= dqdci; // dwdot[c7h14ooh2-3]/d[c7h14ooh2-3]
  // d()/dT
  J[7898] += dqdT; // dwdot[c7h15o2-2]/dT
  J[7902] -= dqdT; // dwdot[c7h14ooh2-3]/dT

  // reaction 677: c7h15o2-2 => c7h14ooh2-4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[66];
  k_f = 25000000000 * exp(-(10492.0674820284) * invT);
  dlnkfdT = (10492.0674820284) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[66] -= q; // c7h15o2-2
  wdot[71] += q; // c7h14ooh2-4
  // d()/d[c7h15o2-2]
  dqdci = +k_f;
  J[5940] -= dqdci; // dwdot[c7h15o2-2]/d[c7h15o2-2]
  J[5945] += dqdci; // dwdot[c7h14ooh2-4]/d[c7h15o2-2]
  // d()/dT
  J[7898] -= dqdT; // dwdot[c7h15o2-2]/dT
  J[7903] += dqdT; // dwdot[c7h14ooh2-4]/dT

  // reaction 678: c7h14ooh2-4 => c7h15o2-2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[71];
  k_f = 2827000000 * exp(-0.11 * logT - (4161.60182620503) * invT);
  dlnkfdT = -0.11 * invT + (4161.60182620503) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[66] += q; // c7h15o2-2
  wdot[71] -= q; // c7h14ooh2-4
  // d()/d[c7h14ooh2-4]
  dqdci = +k_f;
  J[6385] += dqdci; // dwdot[c7h15o2-2]/d[c7h14ooh2-4]
  J[6390] -= dqdci; // dwdot[c7h14ooh2-4]/d[c7h14ooh2-4]
  // d()/dT
  J[7898] += dqdT; // dwdot[c7h15o2-2]/dT
  J[7903] -= dqdT; // dwdot[c7h14ooh2-4]/dT

  // reaction 679: c7h15o2-3 => c7h14ooh3-2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[67];
  k_f = 200000000000 * exp(-(13511.3674768567) * invT);
  dlnkfdT = (13511.3674768567) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[67] -= q; // c7h15o2-3
  wdot[72] += q; // c7h14ooh3-2
  // d()/d[c7h15o2-3]
  dqdci = +k_f;
  J[6030] -= dqdci; // dwdot[c7h15o2-3]/d[c7h15o2-3]
  J[6035] += dqdci; // dwdot[c7h14ooh3-2]/d[c7h15o2-3]
  // d()/dT
  J[7899] -= dqdT; // dwdot[c7h15o2-3]/dT
  J[7904] += dqdT; // dwdot[c7h14ooh3-2]/dT

  // reaction 680: c7h14ooh3-2 => c7h15o2-3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[72];
  k_f = 310700000000 * exp(-0.51 * logT - (7085.29065453045) * invT);
  dlnkfdT = -0.51 * invT + (7085.29065453045) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[67] += q; // c7h15o2-3
  wdot[72] -= q; // c7h14ooh3-2
  // d()/d[c7h14ooh3-2]
  dqdci = +k_f;
  J[6475] += dqdci; // dwdot[c7h15o2-3]/d[c7h14ooh3-2]
  J[6480] -= dqdci; // dwdot[c7h14ooh3-2]/d[c7h14ooh3-2]
  // d()/dT
  J[7899] += dqdT; // dwdot[c7h15o2-3]/dT
  J[7904] -= dqdT; // dwdot[c7h14ooh3-2]/dT

  // reaction 681: c7h15o2-3 => c7h14ooh3-4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[67];
  k_f = 200000000000 * exp(-(13511.3674768567) * invT);
  dlnkfdT = (13511.3674768567) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[67] -= q; // c7h15o2-3
  wdot[73] += q; // c7h14ooh3-4
  // d()/d[c7h15o2-3]
  dqdci = +k_f;
  J[6030] -= dqdci; // dwdot[c7h15o2-3]/d[c7h15o2-3]
  J[6036] += dqdci; // dwdot[c7h14ooh3-4]/d[c7h15o2-3]
  // d()/dT
  J[7899] -= dqdT; // dwdot[c7h15o2-3]/dT
  J[7905] += dqdT; // dwdot[c7h14ooh3-4]/dT

  // reaction 682: c7h14ooh3-4 => c7h15o2-3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[73];
  k_f = 310700000000 * exp(-0.51 * logT - (7085.29065453045) * invT);
  dlnkfdT = -0.51 * invT + (7085.29065453045) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[67] += q; // c7h15o2-3
  wdot[73] -= q; // c7h14ooh3-4
  // d()/d[c7h14ooh3-4]
  dqdci = +k_f;
  J[6564] += dqdci; // dwdot[c7h15o2-3]/d[c7h14ooh3-4]
  J[6570] -= dqdci; // dwdot[c7h14ooh3-4]/d[c7h14ooh3-4]
  // d()/dT
  J[7899] += dqdT; // dwdot[c7h15o2-3]/dT
  J[7905] -= dqdT; // dwdot[c7h14ooh3-4]/dT

  // reaction 683: c7h15o2-3 => c7h14ooh3-5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[67];
  k_f = 25000000000 * exp(-(10492.0674820284) * invT);
  dlnkfdT = (10492.0674820284) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[67] -= q; // c7h15o2-3
  wdot[74] += q; // c7h14ooh3-5
  // d()/d[c7h15o2-3]
  dqdci = +k_f;
  J[6030] -= dqdci; // dwdot[c7h15o2-3]/d[c7h15o2-3]
  J[6037] += dqdci; // dwdot[c7h14ooh3-5]/d[c7h15o2-3]
  // d()/dT
  J[7899] -= dqdT; // dwdot[c7h15o2-3]/dT
  J[7906] += dqdT; // dwdot[c7h14ooh3-5]/dT

  // reaction 684: c7h14ooh3-5 => c7h15o2-3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[74];
  k_f = 38840000000 * exp(-0.51 * logT - (4065.99065970213) * invT);
  dlnkfdT = -0.51 * invT + (4065.99065970213) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[67] += q; // c7h15o2-3
  wdot[74] -= q; // c7h14ooh3-5
  // d()/d[c7h14ooh3-5]
  dqdci = +k_f;
  J[6653] += dqdci; // dwdot[c7h15o2-3]/d[c7h14ooh3-5]
  J[6660] -= dqdci; // dwdot[c7h14ooh3-5]/d[c7h14ooh3-5]
  // d()/dT
  J[7899] += dqdT; // dwdot[c7h15o2-3]/dT
  J[7906] -= dqdT; // dwdot[c7h14ooh3-5]/dT

  // reaction 685: c7h15o2-4 => c7h14ooh4-2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[68];
  k_f = 50000000000 * exp(-(10492.0674820284) * invT);
  dlnkfdT = (10492.0674820284) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[68] -= q; // c7h15o2-4
  wdot[75] += q; // c7h14ooh4-2
  // d()/d[c7h15o2-4]
  dqdci = +k_f;
  J[6120] -= dqdci; // dwdot[c7h15o2-4]/d[c7h15o2-4]
  J[6127] += dqdci; // dwdot[c7h14ooh4-2]/d[c7h15o2-4]
  // d()/dT
  J[7900] -= dqdT; // dwdot[c7h15o2-4]/dT
  J[7907] += dqdT; // dwdot[c7h14ooh4-2]/dT

  // reaction 686: c7h14ooh4-2 => c7h15o2-4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[75];
  k_f = 5655000000 * exp(-0.11 * logT - (4161.60182620503) * invT);
  dlnkfdT = -0.11 * invT + (4161.60182620503) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[68] += q; // c7h15o2-4
  wdot[75] -= q; // c7h14ooh4-2
  // d()/d[c7h14ooh4-2]
  dqdci = +k_f;
  J[6743] += dqdci; // dwdot[c7h15o2-4]/d[c7h14ooh4-2]
  J[6750] -= dqdci; // dwdot[c7h14ooh4-2]/d[c7h14ooh4-2]
  // d()/dT
  J[7900] += dqdT; // dwdot[c7h15o2-4]/dT
  J[7907] -= dqdT; // dwdot[c7h14ooh4-2]/dT

  // reaction 687: c7h15o2-4 => c7h14ooh4-3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[68];
  k_f = 400000000000 * exp(-(13511.3674768567) * invT);
  dlnkfdT = (13511.3674768567) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[68] -= q; // c7h15o2-4
  wdot[76] += q; // c7h14ooh4-3
  // d()/d[c7h15o2-4]
  dqdci = +k_f;
  J[6120] -= dqdci; // dwdot[c7h15o2-4]/d[c7h15o2-4]
  J[6128] += dqdci; // dwdot[c7h14ooh4-3]/d[c7h15o2-4]
  // d()/dT
  J[7900] -= dqdT; // dwdot[c7h15o2-4]/dT
  J[7908] += dqdT; // dwdot[c7h14ooh4-3]/dT

  // reaction 688: c7h14ooh4-3 => c7h15o2-4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[76];
  k_f = 45240000000 * exp(-0.11 * logT - (7180.90182103335) * invT);
  dlnkfdT = -0.11 * invT + (7180.90182103335) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[68] += q; // c7h15o2-4
  wdot[76] -= q; // c7h14ooh4-3
  // d()/d[c7h14ooh4-3]
  dqdci = +k_f;
  J[6832] += dqdci; // dwdot[c7h15o2-4]/d[c7h14ooh4-3]
  J[6840] -= dqdci; // dwdot[c7h14ooh4-3]/d[c7h14ooh4-3]
  // d()/dT
  J[7900] += dqdT; // dwdot[c7h15o2-4]/dT
  J[7908] -= dqdT; // dwdot[c7h14ooh4-3]/dT

  // reaction 689: c7h14ooh2-3 => c7h14-2 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[70];
  k_f = 1.61e+20 * exp(-2.52 * logT - (10743.6758149308) * invT);
  dlnkfdT = -2.52 * invT + (10743.6758149308) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // ho2
  wdot[63] += q; // c7h14-2
  wdot[70] -= q; // c7h14ooh2-3
  // d()/d[c7h14ooh2-3]
  dqdci = +k_f;
  J[6241] += dqdci; // dwdot[ho2]/d[c7h14ooh2-3]
  J[6293] += dqdci; // dwdot[c7h14-2]/d[c7h14ooh2-3]
  J[6300] -= dqdci; // dwdot[c7h14ooh2-3]/d[c7h14ooh2-3]
  // d()/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7895] += dqdT; // dwdot[c7h14-2]/dT
  J[7902] -= dqdT; // dwdot[c7h14ooh2-3]/dT

  // reaction 690: c7h14-2 + ho2 => c7h14ooh2-3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[63];
  k_f = 100000 * exp(-(5802.08815672842) * invT);
  dlnkfdT = (5802.08815672842) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // ho2
  wdot[63] -= q; // c7h14-2
  wdot[70] += q; // c7h14ooh2-3
  // d()/d[ho2]
  dqdci = +k_f * sc[63];
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1042] -= dqdci; // dwdot[c7h14-2]/d[ho2]
  J[1049] += dqdci; // dwdot[c7h14ooh2-3]/d[ho2]
  // d()/d[c7h14-2]
  dqdci = +k_f * sc[11];
  J[5618] -= dqdci; // dwdot[ho2]/d[c7h14-2]
  J[5670] -= dqdci; // dwdot[c7h14-2]/d[c7h14-2]
  J[5677] += dqdci; // dwdot[c7h14ooh2-3]/d[c7h14-2]
  // d()/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7895] -= dqdT; // dwdot[c7h14-2]/dT
  J[7902] += dqdT; // dwdot[c7h14ooh2-3]/dT

  // reaction 691: c7h14ooh3-2 => c7h14-2 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[72];
  k_f = 1.61e+20 * exp(-2.52 * logT - (10743.6758149308) * invT);
  dlnkfdT = -2.52 * invT + (10743.6758149308) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // ho2
  wdot[63] += q; // c7h14-2
  wdot[72] -= q; // c7h14ooh3-2
  // d()/d[c7h14ooh3-2]
  dqdci = +k_f;
  J[6419] += dqdci; // dwdot[ho2]/d[c7h14ooh3-2]
  J[6471] += dqdci; // dwdot[c7h14-2]/d[c7h14ooh3-2]
  J[6480] -= dqdci; // dwdot[c7h14ooh3-2]/d[c7h14ooh3-2]
  // d()/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7895] += dqdT; // dwdot[c7h14-2]/dT
  J[7904] -= dqdT; // dwdot[c7h14ooh3-2]/dT

  // reaction 692: c7h14-2 + ho2 => c7h14ooh3-2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[63];
  k_f = 100000 * exp(-(5802.08815672842) * invT);
  dlnkfdT = (5802.08815672842) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // ho2
  wdot[63] -= q; // c7h14-2
  wdot[72] += q; // c7h14ooh3-2
  // d()/d[ho2]
  dqdci = +k_f * sc[63];
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1042] -= dqdci; // dwdot[c7h14-2]/d[ho2]
  J[1051] += dqdci; // dwdot[c7h14ooh3-2]/d[ho2]
  // d()/d[c7h14-2]
  dqdci = +k_f * sc[11];
  J[5618] -= dqdci; // dwdot[ho2]/d[c7h14-2]
  J[5670] -= dqdci; // dwdot[c7h14-2]/d[c7h14-2]
  J[5679] += dqdci; // dwdot[c7h14ooh3-2]/d[c7h14-2]
  // d()/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7895] -= dqdT; // dwdot[c7h14-2]/dT
  J[7904] += dqdT; // dwdot[c7h14ooh3-2]/dT

  // reaction 693: c7h14ooh3-4 => c7h14-3 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[73];
  k_f = 1.199e+20 * exp(-2.46 * logT - (10285.7486490485) * invT);
  dlnkfdT = -2.46 * invT + (10285.7486490485) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // ho2
  wdot[64] += q; // c7h14-3
  wdot[73] -= q; // c7h14ooh3-4
  // d()/d[c7h14ooh3-4]
  dqdci = +k_f;
  J[6508] += dqdci; // dwdot[ho2]/d[c7h14ooh3-4]
  J[6561] += dqdci; // dwdot[c7h14-3]/d[c7h14ooh3-4]
  J[6570] -= dqdci; // dwdot[c7h14ooh3-4]/d[c7h14ooh3-4]
  // d()/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7896] += dqdT; // dwdot[c7h14-3]/dT
  J[7905] -= dqdT; // dwdot[c7h14ooh3-4]/dT

  // reaction 694: c7h14-3 + ho2 => c7h14ooh3-4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[64];
  k_f = 100000 * exp(-(5298.8714909237) * invT);
  dlnkfdT = (5298.8714909237) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // ho2
  wdot[64] -= q; // c7h14-3
  wdot[73] += q; // c7h14ooh3-4
  // d()/d[ho2]
  dqdci = +k_f * sc[64];
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1043] -= dqdci; // dwdot[c7h14-3]/d[ho2]
  J[1052] += dqdci; // dwdot[c7h14ooh3-4]/d[ho2]
  // d()/d[c7h14-3]
  dqdci = +k_f * sc[11];
  J[5707] -= dqdci; // dwdot[ho2]/d[c7h14-3]
  J[5760] -= dqdci; // dwdot[c7h14-3]/d[c7h14-3]
  J[5769] += dqdci; // dwdot[c7h14ooh3-4]/d[c7h14-3]
  // d()/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7896] -= dqdT; // dwdot[c7h14-3]/dT
  J[7905] += dqdT; // dwdot[c7h14ooh3-4]/dT

  // reaction 695: c7h14ooh4-3 => c7h14-3 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[76];
  k_f = 2.389e+20 * exp(-2.46 * logT - (10285.7486490485) * invT);
  dlnkfdT = -2.46 * invT + (10285.7486490485) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // ho2
  wdot[64] += q; // c7h14-3
  wdot[76] -= q; // c7h14ooh4-3
  // d()/d[c7h14ooh4-3]
  dqdci = +k_f;
  J[6775] += dqdci; // dwdot[ho2]/d[c7h14ooh4-3]
  J[6828] += dqdci; // dwdot[c7h14-3]/d[c7h14ooh4-3]
  J[6840] -= dqdci; // dwdot[c7h14ooh4-3]/d[c7h14ooh4-3]
  // d()/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7896] += dqdT; // dwdot[c7h14-3]/dT
  J[7908] -= dqdT; // dwdot[c7h14ooh4-3]/dT

  // reaction 696: c7h14-3 + ho2 => c7h14ooh4-3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[64];
  k_f = 100000 * exp(-(5298.8714909237) * invT);
  dlnkfdT = (5298.8714909237) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // ho2
  wdot[64] -= q; // c7h14-3
  wdot[76] += q; // c7h14ooh4-3
  // d()/d[ho2]
  dqdci = +k_f * sc[64];
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1043] -= dqdci; // dwdot[c7h14-3]/d[ho2]
  J[1055] += dqdci; // dwdot[c7h14ooh4-3]/d[ho2]
  // d()/d[c7h14-3]
  dqdci = +k_f * sc[11];
  J[5707] -= dqdci; // dwdot[ho2]/d[c7h14-3]
  J[5760] -= dqdci; // dwdot[c7h14-3]/d[c7h14-3]
  J[5772] += dqdci; // dwdot[c7h14ooh4-3]/d[c7h14-3]
  // d()/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7896] -= dqdT; // dwdot[c7h14-3]/dT
  J[7908] += dqdT; // dwdot[c7h14ooh4-3]/dT

  // reaction 697: c7h14ooh1-3 => c7h14o1-3 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[69];
  k_f = 75000000000 * exp(-(7674.05415352198) * invT);
  dlnkfdT = (7674.05415352198) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[69] -= q; // c7h14ooh1-3
  wdot[81] += q; // c7h14o1-3
  // d()/d[c7h14ooh1-3]
  dqdci = +k_f;
  J[6145] += dqdci; // dwdot[oh]/d[c7h14ooh1-3]
  J[6210] -= dqdci; // dwdot[c7h14ooh1-3]/d[c7h14ooh1-3]
  J[6222] += dqdci; // dwdot[c7h14o1-3]/d[c7h14ooh1-3]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7901] -= dqdT; // dwdot[c7h14ooh1-3]/dT
  J[7913] += dqdT; // dwdot[c7h14o1-3]/dT

  // reaction 698: c7h14ooh2-4 => c7h14o2-4 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[71];
  k_f = 75000000000 * exp(-(7674.05415352198) * invT);
  dlnkfdT = (7674.05415352198) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[71] -= q; // c7h14ooh2-4
  wdot[82] += q; // c7h14o2-4
  // d()/d[c7h14ooh2-4]
  dqdci = +k_f;
  J[6323] += dqdci; // dwdot[oh]/d[c7h14ooh2-4]
  J[6390] -= dqdci; // dwdot[c7h14ooh2-4]/d[c7h14ooh2-4]
  J[6401] += dqdci; // dwdot[c7h14o2-4]/d[c7h14ooh2-4]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7903] -= dqdT; // dwdot[c7h14ooh2-4]/dT
  J[7914] += dqdT; // dwdot[c7h14o2-4]/dT

  // reaction 699: c7h14ooh4-2 => c7h14o2-4 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[75];
  k_f = 75000000000 * exp(-(7674.05415352198) * invT);
  dlnkfdT = (7674.05415352198) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[75] -= q; // c7h14ooh4-2
  wdot[82] += q; // c7h14o2-4
  // d()/d[c7h14ooh4-2]
  dqdci = +k_f;
  J[6679] += dqdci; // dwdot[oh]/d[c7h14ooh4-2]
  J[6750] -= dqdci; // dwdot[c7h14ooh4-2]/d[c7h14ooh4-2]
  J[6757] += dqdci; // dwdot[c7h14o2-4]/d[c7h14ooh4-2]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7907] -= dqdT; // dwdot[c7h14ooh4-2]/dT
  J[7914] += dqdT; // dwdot[c7h14o2-4]/dT

  // reaction 700: c7h14ooh2-4 => c5h10-1 + ch3cho + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[71];
  k_f = 5.364e+17 * exp(-1.4 * logT - (13461.0458102763) * invT);
  dlnkfdT = -1.4 * invT + (13461.0458102763) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[24] += q; // ch3cho
  wdot[36] += q; // c5h10-1
  wdot[71] -= q; // c7h14ooh2-4
  // d()/d[c7h14ooh2-4]
  dqdci = +k_f;
  J[6323] += dqdci; // dwdot[oh]/d[c7h14ooh2-4]
  J[6343] += dqdci; // dwdot[ch3cho]/d[c7h14ooh2-4]
  J[6355] += dqdci; // dwdot[c5h10-1]/d[c7h14ooh2-4]
  J[6390] -= dqdci; // dwdot[c7h14ooh2-4]/d[c7h14ooh2-4]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT
  J[7868] += dqdT; // dwdot[c5h10-1]/dT
  J[7903] -= dqdT; // dwdot[c7h14ooh2-4]/dT

  // reaction 701: c7h14ooh3-5 => c2h5cho + c4h8-1 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[74];
  k_f = 2.47e+18 * exp(-1.55 * logT - (13596.9143100435) * invT);
  dlnkfdT = -1.55 * invT + (13596.9143100435) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[30] += q; // c4h8-1
  wdot[33] += q; // c2h5cho
  wdot[74] -= q; // c7h14ooh3-5
  // d()/d[c7h14ooh3-5]
  dqdci = +k_f;
  J[6590] += dqdci; // dwdot[oh]/d[c7h14ooh3-5]
  J[6616] += dqdci; // dwdot[c4h8-1]/d[c7h14ooh3-5]
  J[6619] += dqdci; // dwdot[c2h5cho]/d[c7h14ooh3-5]
  J[6660] -= dqdci; // dwdot[c7h14ooh3-5]/d[c7h14ooh3-5]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT
  J[7865] += dqdT; // dwdot[c2h5cho]/dT
  J[7906] -= dqdT; // dwdot[c7h14ooh3-5]/dT

  // reaction 702: c7h14ooh4-2 => c3h6 + nc3h7cho + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[75];
  k_f = 1.3e+18 * exp(-1.49 * logT - (13486.2066435665) * invT);
  dlnkfdT = -1.49 * invT + (13486.2066435665) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[26] += q; // c3h6
  wdot[52] += q; // nc3h7cho
  wdot[75] -= q; // c7h14ooh4-2
  // d()/d[c7h14ooh4-2]
  dqdci = +k_f;
  J[6679] += dqdci; // dwdot[oh]/d[c7h14ooh4-2]
  J[6701] += dqdci; // dwdot[c3h6]/d[c7h14ooh4-2]
  J[6727] += dqdci; // dwdot[nc3h7cho]/d[c7h14ooh4-2]
  J[6750] -= dqdci; // dwdot[c7h14ooh4-2]/d[c7h14ooh4-2]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7884] += dqdT; // dwdot[nc3h7cho]/dT
  J[7907] -= dqdT; // dwdot[c7h14ooh4-2]/dT

  // reaction 703: c7h14ooh1-3o2 => c7h14ooh1-3 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[77];
  k_f = 1.367e+23 * exp(-2.37 * logT - (18941.0753008896) * invT);
  dlnkfdT = -2.37 * invT + (18941.0753008896) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[69] += q; // c7h14ooh1-3
  wdot[77] -= q; // c7h14ooh1-3o2
  // d()/d[c7h14ooh1-3o2]
  dqdci = +k_f;
  J[6856] += dqdci; // dwdot[o2]/d[c7h14ooh1-3o2]
  J[6922] += dqdci; // dwdot[c7h14ooh1-3]/d[c7h14ooh1-3o2]
  J[6930] -= dqdci; // dwdot[c7h14ooh1-3o2]/d[c7h14ooh1-3o2]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7901] += dqdT; // dwdot[c7h14ooh1-3]/dT
  J[7909] -= dqdT; // dwdot[c7h14ooh1-3o2]/dT

  // reaction 704: c7h14ooh1-3 + o2 => c7h14ooh1-3o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[69];
  k_f = 7540000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[69] -= q; // c7h14ooh1-3
  wdot[77] += q; // c7h14ooh1-3o2
  // d()/d[o2]
  dqdci = +k_f * sc[69];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[336] -= dqdci; // dwdot[c7h14ooh1-3]/d[o2]
  J[344] += dqdci; // dwdot[c7h14ooh1-3o2]/d[o2]
  // d()/d[c7h14ooh1-3]
  dqdci = +k_f * sc[3];
  J[6144] -= dqdci; // dwdot[o2]/d[c7h14ooh1-3]
  J[6210] -= dqdci; // dwdot[c7h14ooh1-3]/d[c7h14ooh1-3]
  J[6218] += dqdci; // dwdot[c7h14ooh1-3o2]/d[c7h14ooh1-3]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7901] -= dqdT; // dwdot[c7h14ooh1-3]/dT
  J[7909] += dqdT; // dwdot[c7h14ooh1-3o2]/dT

  // reaction 705: c7h14ooh2-4o2 => c7h14ooh2-4 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[78];
  k_f = 1.389e+23 * exp(-2.38 * logT - (18920.9466342575) * invT);
  dlnkfdT = -2.38 * invT + (18920.9466342575) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[71] += q; // c7h14ooh2-4
  wdot[78] -= q; // c7h14ooh2-4o2
  // d()/d[c7h14ooh2-4o2]
  dqdci = +k_f;
  J[6945] += dqdci; // dwdot[o2]/d[c7h14ooh2-4o2]
  J[7013] += dqdci; // dwdot[c7h14ooh2-4]/d[c7h14ooh2-4o2]
  J[7020] -= dqdci; // dwdot[c7h14ooh2-4o2]/d[c7h14ooh2-4o2]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7903] += dqdT; // dwdot[c7h14ooh2-4]/dT
  J[7910] -= dqdT; // dwdot[c7h14ooh2-4o2]/dT

  // reaction 706: c7h14ooh2-4 + o2 => c7h14ooh2-4o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[71];
  k_f = 7540000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[71] -= q; // c7h14ooh2-4
  wdot[78] += q; // c7h14ooh2-4o2
  // d()/d[o2]
  dqdci = +k_f * sc[71];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[338] -= dqdci; // dwdot[c7h14ooh2-4]/d[o2]
  J[345] += dqdci; // dwdot[c7h14ooh2-4o2]/d[o2]
  // d()/d[c7h14ooh2-4]
  dqdci = +k_f * sc[3];
  J[6322] -= dqdci; // dwdot[o2]/d[c7h14ooh2-4]
  J[6390] -= dqdci; // dwdot[c7h14ooh2-4]/d[c7h14ooh2-4]
  J[6397] += dqdci; // dwdot[c7h14ooh2-4o2]/d[c7h14ooh2-4]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7903] -= dqdT; // dwdot[c7h14ooh2-4]/dT
  J[7910] += dqdT; // dwdot[c7h14ooh2-4o2]/dT

  // reaction 707: c7h14ooh3-5o2 => c7h14ooh3-5 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[79];
  k_f = 1.389e+23 * exp(-2.38 * logT - (18920.9466342575) * invT);
  dlnkfdT = -2.38 * invT + (18920.9466342575) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[74] += q; // c7h14ooh3-5
  wdot[79] -= q; // c7h14ooh3-5o2
  // d()/d[c7h14ooh3-5o2]
  dqdci = +k_f;
  J[7034] += dqdci; // dwdot[o2]/d[c7h14ooh3-5o2]
  J[7105] += dqdci; // dwdot[c7h14ooh3-5]/d[c7h14ooh3-5o2]
  J[7110] -= dqdci; // dwdot[c7h14ooh3-5o2]/d[c7h14ooh3-5o2]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7906] += dqdT; // dwdot[c7h14ooh3-5]/dT
  J[7911] -= dqdT; // dwdot[c7h14ooh3-5o2]/dT

  // reaction 708: c7h14ooh3-5 + o2 => c7h14ooh3-5o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[74];
  k_f = 7540000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[74] -= q; // c7h14ooh3-5
  wdot[79] += q; // c7h14ooh3-5o2
  // d()/d[o2]
  dqdci = +k_f * sc[74];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[341] -= dqdci; // dwdot[c7h14ooh3-5]/d[o2]
  J[346] += dqdci; // dwdot[c7h14ooh3-5o2]/d[o2]
  // d()/d[c7h14ooh3-5]
  dqdci = +k_f * sc[3];
  J[6589] -= dqdci; // dwdot[o2]/d[c7h14ooh3-5]
  J[6660] -= dqdci; // dwdot[c7h14ooh3-5]/d[c7h14ooh3-5]
  J[6665] += dqdci; // dwdot[c7h14ooh3-5o2]/d[c7h14ooh3-5]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7906] -= dqdT; // dwdot[c7h14ooh3-5]/dT
  J[7911] += dqdT; // dwdot[c7h14ooh3-5o2]/dT

  // reaction 709: c7h14ooh4-2o2 => c7h14ooh4-2 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[80];
  k_f = 6.969e+22 * exp(-2.38 * logT - (18920.9466342575) * invT);
  dlnkfdT = -2.38 * invT + (18920.9466342575) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[75] += q; // c7h14ooh4-2
  wdot[80] -= q; // c7h14ooh4-2o2
  // d()/d[c7h14ooh4-2o2]
  dqdci = +k_f;
  J[7123] += dqdci; // dwdot[o2]/d[c7h14ooh4-2o2]
  J[7195] += dqdci; // dwdot[c7h14ooh4-2]/d[c7h14ooh4-2o2]
  J[7200] -= dqdci; // dwdot[c7h14ooh4-2o2]/d[c7h14ooh4-2o2]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7907] += dqdT; // dwdot[c7h14ooh4-2]/dT
  J[7912] -= dqdT; // dwdot[c7h14ooh4-2o2]/dT

  // reaction 710: c7h14ooh4-2 + o2 => c7h14ooh4-2o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[75];
  k_f = 7540000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[75] -= q; // c7h14ooh4-2
  wdot[80] += q; // c7h14ooh4-2o2
  // d()/d[o2]
  dqdci = +k_f * sc[75];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[342] -= dqdci; // dwdot[c7h14ooh4-2]/d[o2]
  J[347] += dqdci; // dwdot[c7h14ooh4-2o2]/d[o2]
  // d()/d[c7h14ooh4-2]
  dqdci = +k_f * sc[3];
  J[6678] -= dqdci; // dwdot[o2]/d[c7h14ooh4-2]
  J[6750] -= dqdci; // dwdot[c7h14ooh4-2]/d[c7h14ooh4-2]
  J[6755] += dqdci; // dwdot[c7h14ooh4-2o2]/d[c7h14ooh4-2]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7907] -= dqdT; // dwdot[c7h14ooh4-2]/dT
  J[7912] += dqdT; // dwdot[c7h14ooh4-2o2]/dT

  // reaction 711: c7h14ooh1-3o2 => nc7ket13 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[77];
  k_f = 25000000000 * exp(-(10768.836648221) * invT);
  dlnkfdT = (10768.836648221) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[77] -= q; // c7h14ooh1-3o2
  wdot[83] += q; // nc7ket13
  // d()/d[c7h14ooh1-3o2]
  dqdci = +k_f;
  J[6857] += dqdci; // dwdot[oh]/d[c7h14ooh1-3o2]
  J[6930] -= dqdci; // dwdot[c7h14ooh1-3o2]/d[c7h14ooh1-3o2]
  J[6936] += dqdci; // dwdot[nc7ket13]/d[c7h14ooh1-3o2]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7909] -= dqdT; // dwdot[c7h14ooh1-3o2]/dT
  J[7915] += dqdT; // dwdot[nc7ket13]/dT

  // reaction 712: nc7ket13 + oh => c7h14ooh1-3o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[83];
  k_f = 0.003303 * exp(1.41 * logT - (22664.8786278446) * invT);
  dlnkfdT = 1.41 * invT + (22664.8786278446) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[77] += q; // c7h14ooh1-3o2
  wdot[83] -= q; // nc7ket13
  // d()/d[oh]
  dqdci = +k_f * sc[83];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[433] += dqdci; // dwdot[c7h14ooh1-3o2]/d[oh]
  J[439] -= dqdci; // dwdot[nc7ket13]/d[oh]
  // d()/d[nc7ket13]
  dqdci = +k_f * sc[4];
  J[7391] -= dqdci; // dwdot[oh]/d[nc7ket13]
  J[7464] += dqdci; // dwdot[c7h14ooh1-3o2]/d[nc7ket13]
  J[7470] -= dqdci; // dwdot[nc7ket13]/d[nc7ket13]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7909] += dqdT; // dwdot[c7h14ooh1-3o2]/dT
  J[7915] -= dqdT; // dwdot[nc7ket13]/dT

  // reaction 713: c7h14ooh2-4o2 => nc7ket24 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[78];
  k_f = 12500000000 * exp(-(8982.41748461425) * invT);
  dlnkfdT = (8982.41748461425) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[78] -= q; // c7h14ooh2-4o2
  wdot[84] += q; // nc7ket24
  // d()/d[c7h14ooh2-4o2]
  dqdci = +k_f;
  J[6946] += dqdci; // dwdot[oh]/d[c7h14ooh2-4o2]
  J[7020] -= dqdci; // dwdot[c7h14ooh2-4o2]/d[c7h14ooh2-4o2]
  J[7026] += dqdci; // dwdot[nc7ket24]/d[c7h14ooh2-4o2]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7910] -= dqdT; // dwdot[c7h14ooh2-4o2]/dT
  J[7916] += dqdT; // dwdot[nc7ket24]/dT

  // reaction 714: nc7ket24 + oh => c7h14ooh2-4o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[84];
  k_f = 0.0001615 * exp(1.83 * logT - (22242.1766285686) * invT);
  dlnkfdT = 1.83 * invT + (22242.1766285686) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[78] += q; // c7h14ooh2-4o2
  wdot[84] -= q; // nc7ket24
  // d()/d[oh]
  dqdci = +k_f * sc[84];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[434] += dqdci; // dwdot[c7h14ooh2-4o2]/d[oh]
  J[440] -= dqdci; // dwdot[nc7ket24]/d[oh]
  // d()/d[nc7ket24]
  dqdci = +k_f * sc[4];
  J[7480] -= dqdci; // dwdot[oh]/d[nc7ket24]
  J[7554] += dqdci; // dwdot[c7h14ooh2-4o2]/d[nc7ket24]
  J[7560] -= dqdci; // dwdot[nc7ket24]/d[nc7ket24]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7910] += dqdT; // dwdot[c7h14ooh2-4o2]/dT
  J[7916] -= dqdT; // dwdot[nc7ket24]/dT

  // reaction 715: c7h14ooh3-5o2 => nc7ket35 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[79];
  k_f = 12500000000 * exp(-(8982.41748461425) * invT);
  dlnkfdT = (8982.41748461425) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[79] -= q; // c7h14ooh3-5o2
  wdot[85] += q; // nc7ket35
  // d()/d[c7h14ooh3-5o2]
  dqdci = +k_f;
  J[7035] += dqdci; // dwdot[oh]/d[c7h14ooh3-5o2]
  J[7110] -= dqdci; // dwdot[c7h14ooh3-5o2]/d[c7h14ooh3-5o2]
  J[7116] += dqdci; // dwdot[nc7ket35]/d[c7h14ooh3-5o2]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7911] -= dqdT; // dwdot[c7h14ooh3-5o2]/dT
  J[7917] += dqdT; // dwdot[nc7ket35]/dT

  // reaction 716: nc7ket35 + oh => c7h14ooh3-5o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[85];
  k_f = 0.0001615 * exp(1.83 * logT - (22242.1766285686) * invT);
  dlnkfdT = 1.83 * invT + (22242.1766285686) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[79] += q; // c7h14ooh3-5o2
  wdot[85] -= q; // nc7ket35
  // d()/d[oh]
  dqdci = +k_f * sc[85];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[435] += dqdci; // dwdot[c7h14ooh3-5o2]/d[oh]
  J[441] -= dqdci; // dwdot[nc7ket35]/d[oh]
  // d()/d[nc7ket35]
  dqdci = +k_f * sc[4];
  J[7569] -= dqdci; // dwdot[oh]/d[nc7ket35]
  J[7644] += dqdci; // dwdot[c7h14ooh3-5o2]/d[nc7ket35]
  J[7650] -= dqdci; // dwdot[nc7ket35]/d[nc7ket35]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7911] += dqdT; // dwdot[c7h14ooh3-5o2]/dT
  J[7917] -= dqdT; // dwdot[nc7ket35]/dT

  // reaction 717: c7h14ooh4-2o2 => nc7ket42 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[80];
  k_f = 12500000000 * exp(-(8982.41748461425) * invT);
  dlnkfdT = (8982.41748461425) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[80] -= q; // c7h14ooh4-2o2
  wdot[86] += q; // nc7ket42
  // d()/d[c7h14ooh4-2o2]
  dqdci = +k_f;
  J[7124] += dqdci; // dwdot[oh]/d[c7h14ooh4-2o2]
  J[7200] -= dqdci; // dwdot[c7h14ooh4-2o2]/d[c7h14ooh4-2o2]
  J[7206] += dqdci; // dwdot[nc7ket42]/d[c7h14ooh4-2o2]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7912] -= dqdT; // dwdot[c7h14ooh4-2o2]/dT
  J[7918] += dqdT; // dwdot[nc7ket42]/dT

  // reaction 718: nc7ket42 + oh => c7h14ooh4-2o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[86];
  k_f = 0.0001615 * exp(1.83 * logT - (22242.1766285686) * invT);
  dlnkfdT = 1.83 * invT + (22242.1766285686) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[80] += q; // c7h14ooh4-2o2
  wdot[86] -= q; // nc7ket42
  // d()/d[oh]
  dqdci = +k_f * sc[86];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[436] += dqdci; // dwdot[c7h14ooh4-2o2]/d[oh]
  J[442] -= dqdci; // dwdot[nc7ket42]/d[oh]
  // d()/d[nc7ket42]
  dqdci = +k_f * sc[4];
  J[7658] -= dqdci; // dwdot[oh]/d[nc7ket42]
  J[7734] += dqdci; // dwdot[c7h14ooh4-2o2]/d[nc7ket42]
  J[7740] -= dqdci; // dwdot[nc7ket42]/d[nc7ket42]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7912] += dqdT; // dwdot[c7h14ooh4-2o2]/dT
  J[7918] -= dqdT; // dwdot[nc7ket42]/dT

  // reaction 719: nc7ket13 => ch2cho + nc4h9cho + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[83];
  k_f = 1.05e+16 * exp(-(20933.8132974763) * invT);
  dlnkfdT = (20933.8132974763) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[23] += q; // ch2cho
  wdot[56] += q; // nc4h9cho
  wdot[83] -= q; // nc7ket13
  // d()/d[nc7ket13]
  dqdci = +k_f;
  J[7391] += dqdci; // dwdot[oh]/d[nc7ket13]
  J[7410] += dqdci; // dwdot[ch2cho]/d[nc7ket13]
  J[7443] += dqdci; // dwdot[nc4h9cho]/d[nc7ket13]
  J[7470] -= dqdci; // dwdot[nc7ket13]/d[nc7ket13]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7855] += dqdT; // dwdot[ch2cho]/dT
  J[7888] += dqdT; // dwdot[nc4h9cho]/dT
  J[7915] -= dqdT; // dwdot[nc7ket13]/dT

  // reaction 720: nc7ket24 => ch3coch2 + nc3h7cho + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[84];
  k_f = 1.05e+16 * exp(-(20933.8132974763) * invT);
  dlnkfdT = (20933.8132974763) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[32] += q; // ch3coch2
  wdot[52] += q; // nc3h7cho
  wdot[84] -= q; // nc7ket24
  // d()/d[nc7ket24]
  dqdci = +k_f;
  J[7480] += dqdci; // dwdot[oh]/d[nc7ket24]
  J[7508] += dqdci; // dwdot[ch3coch2]/d[nc7ket24]
  J[7528] += dqdci; // dwdot[nc3h7cho]/d[nc7ket24]
  J[7560] -= dqdci; // dwdot[nc7ket24]/d[nc7ket24]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7864] += dqdT; // dwdot[ch3coch2]/dT
  J[7884] += dqdT; // dwdot[nc3h7cho]/dT
  J[7916] -= dqdT; // dwdot[nc7ket24]/dT

  // reaction 721: nc7ket35 => c2h5cho + c2h5coch2 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[85];
  k_f = 1.05e+16 * exp(-(20933.8132974763) * invT);
  dlnkfdT = (20933.8132974763) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[33] += q; // c2h5cho
  wdot[54] += q; // c2h5coch2
  wdot[85] -= q; // nc7ket35
  // d()/d[nc7ket35]
  dqdci = +k_f;
  J[7569] += dqdci; // dwdot[oh]/d[nc7ket35]
  J[7598] += dqdci; // dwdot[c2h5cho]/d[nc7ket35]
  J[7619] += dqdci; // dwdot[c2h5coch2]/d[nc7ket35]
  J[7650] -= dqdci; // dwdot[nc7ket35]/d[nc7ket35]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7865] += dqdT; // dwdot[c2h5cho]/dT
  J[7886] += dqdT; // dwdot[c2h5coch2]/dT
  J[7917] -= dqdT; // dwdot[nc7ket35]/dT

  // reaction 722: nc7ket42 => ch3cho + nc3h7coch2 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[86];
  k_f = 1.05e+16 * exp(-(20933.8132974763) * invT);
  dlnkfdT = (20933.8132974763) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[24] += q; // ch3cho
  wdot[55] += q; // nc3h7coch2
  wdot[86] -= q; // nc7ket42
  // d()/d[nc7ket42]
  dqdci = +k_f;
  J[7658] += dqdci; // dwdot[oh]/d[nc7ket42]
  J[7678] += dqdci; // dwdot[ch3cho]/d[nc7ket42]
  J[7709] += dqdci; // dwdot[nc3h7coch2]/d[nc7ket42]
  J[7740] -= dqdci; // dwdot[nc7ket42]/d[nc7ket42]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT
  J[7887] += dqdT; // dwdot[nc3h7coch2]/dT
  J[7918] -= dqdT; // dwdot[nc7ket42]/dT

  // reaction 723: c7h14o2-4 + oh => c5h10-1 + ch3co + h2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[82];
  k_f = 2500000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[22] += q; // ch3co
  wdot[36] += q; // c5h10-1
  wdot[82] -= q; // c7h14o2-4
  // d()/d[oh]
  dqdci = +k_f * sc[82];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[378] += dqdci; // dwdot[ch3co]/d[oh]
  J[392] += dqdci; // dwdot[c5h10-1]/d[oh]
  J[438] -= dqdci; // dwdot[c7h14o2-4]/d[oh]
  // d()/d[c7h14o2-4]
  dqdci = +k_f * sc[4];
  J[7302] -= dqdci; // dwdot[oh]/d[c7h14o2-4]
  J[7303] += dqdci; // dwdot[h2o]/d[c7h14o2-4]
  J[7320] += dqdci; // dwdot[ch3co]/d[c7h14o2-4]
  J[7334] += dqdci; // dwdot[c5h10-1]/d[c7h14o2-4]
  J[7380] -= dqdci; // dwdot[c7h14o2-4]/d[c7h14o2-4]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7854] += dqdT; // dwdot[ch3co]/dT
  J[7868] += dqdT; // dwdot[c5h10-1]/dT
  J[7914] -= dqdT; // dwdot[c7h14o2-4]/dT

  // reaction 724: c7h14o1-3 + oh => c2h4 + h2o + nc4h9co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[81];
  k_f = 2500000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[16] += q; // c2h4
  wdot[57] += q; // nc4h9co
  wdot[81] -= q; // c7h14o1-3
  // d()/d[oh]
  dqdci = +k_f * sc[81];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[372] += dqdci; // dwdot[c2h4]/d[oh]
  J[413] += dqdci; // dwdot[nc4h9co]/d[oh]
  J[437] -= dqdci; // dwdot[c7h14o1-3]/d[oh]
  // d()/d[c7h14o1-3]
  dqdci = +k_f * sc[4];
  J[7213] -= dqdci; // dwdot[oh]/d[c7h14o1-3]
  J[7214] += dqdci; // dwdot[h2o]/d[c7h14o1-3]
  J[7225] += dqdci; // dwdot[c2h4]/d[c7h14o1-3]
  J[7266] += dqdci; // dwdot[nc4h9co]/d[c7h14o1-3]
  J[7290] -= dqdci; // dwdot[c7h14o1-3]/d[c7h14o1-3]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7889] += dqdT; // dwdot[nc4h9co]/dT
  J[7913] -= dqdT; // dwdot[c7h14o1-3]/dT

  // reaction 725: c7h14o2-4 + oh => c3h6 + h2o + nc3h7co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[82];
  k_f = 2500000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[26] += q; // c3h6
  wdot[53] += q; // nc3h7co
  wdot[82] -= q; // c7h14o2-4
  // d()/d[oh]
  dqdci = +k_f * sc[82];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[382] += dqdci; // dwdot[c3h6]/d[oh]
  J[409] += dqdci; // dwdot[nc3h7co]/d[oh]
  J[438] -= dqdci; // dwdot[c7h14o2-4]/d[oh]
  // d()/d[c7h14o2-4]
  dqdci = +k_f * sc[4];
  J[7302] -= dqdci; // dwdot[oh]/d[c7h14o2-4]
  J[7303] += dqdci; // dwdot[h2o]/d[c7h14o2-4]
  J[7324] += dqdci; // dwdot[c3h6]/d[c7h14o2-4]
  J[7351] += dqdci; // dwdot[nc3h7co]/d[c7h14o2-4]
  J[7380] -= dqdci; // dwdot[c7h14o2-4]/d[c7h14o2-4]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7885] += dqdT; // dwdot[nc3h7co]/dT
  J[7914] -= dqdT; // dwdot[c7h14o2-4]/dT

  // reaction 726: c7h14o2-4 + ho2 => c5h10-1 + ch3co + h2o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[82];
  k_f = 5000000 * exp(-(8906.93498474354) * invT);
  dlnkfdT = (8906.93498474354) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  wdot[22] += q; // ch3co
  wdot[36] += q; // c5h10-1
  wdot[82] -= q; // c7h14o2-4
  // d()/d[ho2]
  dqdci = +k_f * sc[82];
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[991] += dqdci;  // dwdot[h2o2]/d[ho2]
  J[1001] += dqdci; // dwdot[ch3co]/d[ho2]
  J[1015] += dqdci; // dwdot[c5h10-1]/d[ho2]
  J[1061] -= dqdci; // dwdot[c7h14o2-4]/d[ho2]
  // d()/d[c7h14o2-4]
  dqdci = +k_f * sc[11];
  J[7309] -= dqdci; // dwdot[ho2]/d[c7h14o2-4]
  J[7310] += dqdci; // dwdot[h2o2]/d[c7h14o2-4]
  J[7320] += dqdci; // dwdot[ch3co]/d[c7h14o2-4]
  J[7334] += dqdci; // dwdot[c5h10-1]/d[c7h14o2-4]
  J[7380] -= dqdci; // dwdot[c7h14o2-4]/d[c7h14o2-4]
  // d()/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT
  J[7854] += dqdT; // dwdot[ch3co]/dT
  J[7868] += dqdT; // dwdot[c5h10-1]/dT
  J[7914] -= dqdT; // dwdot[c7h14o2-4]/dT

  // reaction 727: c7h14o1-3 + ho2 => c2h4 + h2o2 + nc4h9co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[81];
  k_f = 5000000 * exp(-(8906.93498474354) * invT);
  dlnkfdT = (8906.93498474354) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  wdot[16] += q; // c2h4
  wdot[57] += q; // nc4h9co
  wdot[81] -= q; // c7h14o1-3
  // d()/d[ho2]
  dqdci = +k_f * sc[81];
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[991] += dqdci;  // dwdot[h2o2]/d[ho2]
  J[995] += dqdci;  // dwdot[c2h4]/d[ho2]
  J[1036] += dqdci; // dwdot[nc4h9co]/d[ho2]
  J[1060] -= dqdci; // dwdot[c7h14o1-3]/d[ho2]
  // d()/d[c7h14o1-3]
  dqdci = +k_f * sc[11];
  J[7220] -= dqdci; // dwdot[ho2]/d[c7h14o1-3]
  J[7221] += dqdci; // dwdot[h2o2]/d[c7h14o1-3]
  J[7225] += dqdci; // dwdot[c2h4]/d[c7h14o1-3]
  J[7266] += dqdci; // dwdot[nc4h9co]/d[c7h14o1-3]
  J[7290] -= dqdci; // dwdot[c7h14o1-3]/d[c7h14o1-3]
  // d()/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7889] += dqdT; // dwdot[nc4h9co]/dT
  J[7913] -= dqdT; // dwdot[c7h14o1-3]/dT

  // reaction 728: c7h14o2-4 + ho2 => c3h6 + h2o2 + nc3h7co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[82];
  k_f = 5000000 * exp(-(8906.93498474354) * invT);
  dlnkfdT = (8906.93498474354) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  wdot[26] += q; // c3h6
  wdot[53] += q; // nc3h7co
  wdot[82] -= q; // c7h14o2-4
  // d()/d[ho2]
  dqdci = +k_f * sc[82];
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[991] += dqdci;  // dwdot[h2o2]/d[ho2]
  J[1005] += dqdci; // dwdot[c3h6]/d[ho2]
  J[1032] += dqdci; // dwdot[nc3h7co]/d[ho2]
  J[1061] -= dqdci; // dwdot[c7h14o2-4]/d[ho2]
  // d()/d[c7h14o2-4]
  dqdci = +k_f * sc[11];
  J[7309] -= dqdci; // dwdot[ho2]/d[c7h14o2-4]
  J[7310] += dqdci; // dwdot[h2o2]/d[c7h14o2-4]
  J[7324] += dqdci; // dwdot[c3h6]/d[c7h14o2-4]
  J[7351] += dqdci; // dwdot[nc3h7co]/d[c7h14o2-4]
  J[7380] -= dqdci; // dwdot[c7h14o2-4]/d[c7h14o2-4]
  // d()/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7885] += dqdT; // dwdot[nc3h7co]/dT
  J[7914] -= dqdT; // dwdot[c7h14o2-4]/dT

  amrex::Real c_R[88], dcRdT[88], e_RT[88];
  amrex::Real* eh_RT;
  if (HP == 1) {
    cp_R(c_R, T);
    dcvpRdT(dcRdT, T);
    eh_RT = &h_RT[0];
  } else {
    cv_R(c_R, T);
    dcvpRdT(dcRdT, T);
    speciesInternalEnergy(e_RT, T);
    eh_RT = &e_RT[0];
  }

  amrex::Real cmix = 0.0, ehmix = 0.0, dcmixdT = 0.0, dehmixdT = 0.0;
  for (int k = 0; k < 88; ++k) {
    cmix += c_R[k] * sc[k];
    dcmixdT += dcRdT[k] * sc[k];
    ehmix += eh_RT[k] * wdot[k];
    dehmixdT += invT * (c_R[k] - eh_RT[k]) * wdot[k] + eh_RT[k] * J[7832 + k];
  }

  amrex::Real cmixinv = 1.0 / cmix;
  amrex::Real tmp1 = ehmix * cmixinv;
  amrex::Real tmp3 = cmixinv * T;
  amrex::Real tmp2 = tmp1 * tmp3;
  amrex::Real dehmixdc;
  // dTdot/d[X]
  for (int k = 0; k < 88; ++k) {
    dehmixdc = 0.0;
    for (int m = 0; m < 88; ++m) {
      dehmixdc += eh_RT[m] * J[k * 89 + m];
    }
    J[k * 89 + 88] = tmp2 * c_R[k] - tmp3 * dehmixdc;
  }
  // dTdot/dT
  J[7920] = -tmp1 + tmp2 * dcmixdT - tmp3 * dehmixdT;
#else
  amrex::Abort();
#endif
}

// compute an approx to the reaction Jacobian (for preconditioning)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
DWDOT_SIMPLIFIED(
  amrex::Real* J, const amrex::Real* sc, const amrex::Real* Tp, const int* HP)
{
  amrex::Real c[88];

  for (int k = 0; k < 88; k++) {
    c[k] = 1.e6 * sc[k];
  }

  aJacobian_precond(J, c, *Tp, *HP);

  // dwdot[k]/dT
  // dTdot/d[X]
  for (int k = 0; k < 88; k++) {
    J[7832 + k] *= 1.e-6;
    J[k * 89 + 88] *= 1.e6;
  }
}

// compute the reaction Jacobian
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
aJacobian(
  amrex::Real* J, const amrex::Real* sc, const amrex::Real T, const int consP)
{

#if defined(PELE_COMPILE_AJACOBIAN) || !defined(AMREX_USE_HIP)
  for (int i = 0; i < 7921; i++) {
    J[i] = 0.0;
  }

  amrex::Real wdot[88];
  for (auto& val : wdot) {
    val = 0.0;
  }

  const amrex::Real invT = 1.0 / T;
  const amrex::Real invT2 = invT * invT;
  const amrex::Real logT = log(T);

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  amrex::Real refC = 101325 / 8.31446 / T;
  amrex::Real refCinv = 1.0 / refC;

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int k = 0; k < 88; ++k) {
    mixture += sc[k];
  }

  // compute the Gibbs free energy
  amrex::Real g_RT[88];
  gibbs(g_RT, T);

  // compute the species enthalpy
  amrex::Real h_RT[88];
  speciesEnthalpy(h_RT, T);

  amrex::Real phi_f, k_f, k_r, phi_r, Kc, q, q_nocor, Corr, alpha;
  amrex::Real dlnkfdT, dlnk0dT, dlnKcdT, dkrdT, dqdT;
  amrex::Real dqdci, dcdc_fac, dqdc[88];
  amrex::Real Pr, fPr, F, k_0, logPr;
  amrex::Real logFcent, troe_c, troe_n, troePr_den, troePr, troe;
  amrex::Real Fcent1, Fcent2, Fcent3, Fcent;
  amrex::Real dlogFdc, dlogFdn, dlogFdcn_fac;
  amrex::Real dlogPrdT, dlogfPrdT, dlogFdT, dlogFcentdT, dlogFdlogPr, dlnCorrdT;
  const amrex::Real ln10 = log(10.0);
  const amrex::Real log10e = 1.0 / log(10.0);
  // reaction 0: ch3 + h (+M) <=> ch4 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[1] + (5 - 1) * sc[5] + sc[6] + (3 - 1) * sc[8];
  // forward
  phi_f = sc[0] * sc[9];
  k_f = 2138000000 * exp(-0.4 * logT);
  dlnkfdT = -0.4 * invT;
  // pressure-fall-off
  k_0 = 3.31e+30 * exp(-4 * logT - (1060.78073151635) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -4 * invT + (1060.78073151635) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0) * exp(-T / 1e-15);
  Fcent2 = 0 * exp(-T / 1e-15);
  Fcent3 = exp(-40 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 1e-15 - Fcent2 / 1e-15 + Fcent3 * 40 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[10];
  Kc = refCinv * exp(g_RT[0] + g_RT[9] - g_RT[10]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[9]) + (h_RT[10]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[0] -= q;  // h
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[h]
    dqdci = +k_f * sc[9];
    J[0] -= dqdci;  // dwdot[h]/d[h]
    J[9] -= dqdci;  // dwdot[ch3]/d[h]
    J[10] += dqdci; // dwdot[ch4]/d[h]
    // d()/d[h2]
    dqdci = (2 - 1) * dcdc_fac;
    J[89] -= dqdci; // dwdot[h]/d[h2]
    J[98] -= dqdci; // dwdot[ch3]/d[h2]
    J[99] += dqdci; // dwdot[ch4]/d[h2]
    // d()/d[h2o]
    dqdci = (5 - 1) * dcdc_fac;
    J[445] -= dqdci; // dwdot[h]/d[h2o]
    J[454] -= dqdci; // dwdot[ch3]/d[h2o]
    J[455] += dqdci; // dwdot[ch4]/d[h2o]
    // d()/d[co]
    dqdci = (2 - 1) * dcdc_fac;
    J[534] -= dqdci; // dwdot[h]/d[co]
    J[543] -= dqdci; // dwdot[ch3]/d[co]
    J[544] += dqdci; // dwdot[ch4]/d[co]
    // d()/d[co2]
    dqdci = (3 - 1) * dcdc_fac;
    J[712] -= dqdci; // dwdot[h]/d[co2]
    J[721] -= dqdci; // dwdot[ch3]/d[co2]
    J[722] += dqdci; // dwdot[ch4]/d[co2]
    // d()/d[ch3]
    dqdci = +k_f * sc[0];
    J[801] -= dqdci; // dwdot[h]/d[ch3]
    J[810] -= dqdci; // dwdot[ch3]/d[ch3]
    J[811] += dqdci; // dwdot[ch4]/d[ch3]
    // d()/d[ch4]
    dqdci = -k_r;
    J[890] -= dqdci; // dwdot[h]/d[ch4]
    J[899] -= dqdci; // dwdot[ch3]/d[ch4]
    J[900] += dqdci; // dwdot[ch4]/d[ch4]
  } else {
    dqdc[0] = dcdc_fac + k_f * sc[9];
    dqdc[1] = 2 * dcdc_fac;
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = 5 * dcdc_fac;
    dqdc[6] = 2 * dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = 3 * dcdc_fac;
    dqdc[9] = dcdc_fac + k_f * sc[0];
    dqdc[10] = dcdc_fac - k_r;
    dqdc[11] = dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = dcdc_fac;
    dqdc[17] = dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    dqdc[47] = dcdc_fac;
    dqdc[48] = dcdc_fac;
    dqdc[49] = dcdc_fac;
    dqdc[50] = dcdc_fac;
    dqdc[51] = dcdc_fac;
    dqdc[52] = dcdc_fac;
    dqdc[53] = dcdc_fac;
    dqdc[54] = dcdc_fac;
    dqdc[55] = dcdc_fac;
    dqdc[56] = dcdc_fac;
    dqdc[57] = dcdc_fac;
    dqdc[58] = dcdc_fac;
    dqdc[59] = dcdc_fac;
    dqdc[60] = dcdc_fac;
    dqdc[61] = dcdc_fac;
    dqdc[62] = dcdc_fac;
    dqdc[63] = dcdc_fac;
    dqdc[64] = dcdc_fac;
    dqdc[65] = dcdc_fac;
    dqdc[66] = dcdc_fac;
    dqdc[67] = dcdc_fac;
    dqdc[68] = dcdc_fac;
    dqdc[69] = dcdc_fac;
    dqdc[70] = dcdc_fac;
    dqdc[71] = dcdc_fac;
    dqdc[72] = dcdc_fac;
    dqdc[73] = dcdc_fac;
    dqdc[74] = dcdc_fac;
    dqdc[75] = dcdc_fac;
    dqdc[76] = dcdc_fac;
    dqdc[77] = dcdc_fac;
    dqdc[78] = dcdc_fac;
    dqdc[79] = dcdc_fac;
    dqdc[80] = dcdc_fac;
    dqdc[81] = dcdc_fac;
    dqdc[82] = dcdc_fac;
    dqdc[83] = dcdc_fac;
    dqdc[84] = dcdc_fac;
    dqdc[85] = dcdc_fac;
    dqdc[86] = dcdc_fac;
    dqdc[87] = dcdc_fac;
    for (int k = 0; k < 88; k++) {
      J[89 * k + 0] -= dqdc[k];
      J[89 * k + 9] -= dqdc[k];
      J[89 * k + 10] += dqdc[k];
    }
  }
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT

  // reaction 27: c2h4 + h (+M) <=> c2h5 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[1] + (5 - 1) * sc[5] + sc[6] + (3 - 1) * sc[8];
  // forward
  phi_f = sc[0] * sc[16];
  k_f = 1081000 * exp(0.45 * logT - (916.860765096199) * invT);
  dlnkfdT = 0.45 * invT + (916.860765096199) * invT2;
  // pressure-fall-off
  k_0 = 1.112e+34 * exp(-5 * logT - (2238.30772949939) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -5 * invT + (2238.30772949939) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 1) * exp(-T / 1e-15);
  Fcent2 = 1 * exp(-T / 95);
  Fcent3 = exp(-200 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 1e-15 - Fcent2 / 95 + Fcent3 * 200 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[17];
  Kc = refCinv * exp(g_RT[0] + g_RT[16] - g_RT[17]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[16]) + (h_RT[17]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[0] -= q;  // h
  wdot[16] -= q; // c2h4
  wdot[17] += q; // c2h5
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[h]
    dqdci = +k_f * sc[16];
    J[0] -= dqdci;  // dwdot[h]/d[h]
    J[16] -= dqdci; // dwdot[c2h4]/d[h]
    J[17] += dqdci; // dwdot[c2h5]/d[h]
    // d()/d[h2]
    dqdci = (2 - 1) * dcdc_fac;
    J[89] -= dqdci;  // dwdot[h]/d[h2]
    J[105] -= dqdci; // dwdot[c2h4]/d[h2]
    J[106] += dqdci; // dwdot[c2h5]/d[h2]
    // d()/d[h2o]
    dqdci = (5 - 1) * dcdc_fac;
    J[445] -= dqdci; // dwdot[h]/d[h2o]
    J[461] -= dqdci; // dwdot[c2h4]/d[h2o]
    J[462] += dqdci; // dwdot[c2h5]/d[h2o]
    // d()/d[co]
    dqdci = (2 - 1) * dcdc_fac;
    J[534] -= dqdci; // dwdot[h]/d[co]
    J[550] -= dqdci; // dwdot[c2h4]/d[co]
    J[551] += dqdci; // dwdot[c2h5]/d[co]
    // d()/d[co2]
    dqdci = (3 - 1) * dcdc_fac;
    J[712] -= dqdci; // dwdot[h]/d[co2]
    J[728] -= dqdci; // dwdot[c2h4]/d[co2]
    J[729] += dqdci; // dwdot[c2h5]/d[co2]
    // d()/d[c2h4]
    dqdci = +k_f * sc[0];
    J[1424] -= dqdci; // dwdot[h]/d[c2h4]
    J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
    J[1441] += dqdci; // dwdot[c2h5]/d[c2h4]
    // d()/d[c2h5]
    dqdci = -k_r;
    J[1513] -= dqdci; // dwdot[h]/d[c2h5]
    J[1529] -= dqdci; // dwdot[c2h4]/d[c2h5]
    J[1530] += dqdci; // dwdot[c2h5]/d[c2h5]
  } else {
    dqdc[0] = dcdc_fac + k_f * sc[16];
    dqdc[1] = 2 * dcdc_fac;
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = 5 * dcdc_fac;
    dqdc[6] = 2 * dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = 3 * dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = dcdc_fac + k_f * sc[0];
    dqdc[17] = dcdc_fac - k_r;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    dqdc[47] = dcdc_fac;
    dqdc[48] = dcdc_fac;
    dqdc[49] = dcdc_fac;
    dqdc[50] = dcdc_fac;
    dqdc[51] = dcdc_fac;
    dqdc[52] = dcdc_fac;
    dqdc[53] = dcdc_fac;
    dqdc[54] = dcdc_fac;
    dqdc[55] = dcdc_fac;
    dqdc[56] = dcdc_fac;
    dqdc[57] = dcdc_fac;
    dqdc[58] = dcdc_fac;
    dqdc[59] = dcdc_fac;
    dqdc[60] = dcdc_fac;
    dqdc[61] = dcdc_fac;
    dqdc[62] = dcdc_fac;
    dqdc[63] = dcdc_fac;
    dqdc[64] = dcdc_fac;
    dqdc[65] = dcdc_fac;
    dqdc[66] = dcdc_fac;
    dqdc[67] = dcdc_fac;
    dqdc[68] = dcdc_fac;
    dqdc[69] = dcdc_fac;
    dqdc[70] = dcdc_fac;
    dqdc[71] = dcdc_fac;
    dqdc[72] = dcdc_fac;
    dqdc[73] = dcdc_fac;
    dqdc[74] = dcdc_fac;
    dqdc[75] = dcdc_fac;
    dqdc[76] = dcdc_fac;
    dqdc[77] = dcdc_fac;
    dqdc[78] = dcdc_fac;
    dqdc[79] = dcdc_fac;
    dqdc[80] = dcdc_fac;
    dqdc[81] = dcdc_fac;
    dqdc[82] = dcdc_fac;
    dqdc[83] = dcdc_fac;
    dqdc[84] = dcdc_fac;
    dqdc[85] = dcdc_fac;
    dqdc[86] = dcdc_fac;
    dqdc[87] = dcdc_fac;
    for (int k = 0; k < 88; k++) {
      J[89 * k + 0] -= dqdc[k];
      J[89 * k + 16] -= dqdc[k];
      J[89 * k + 17] += dqdc[k];
    }
  }
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT

  // reaction 40: 2 ch3 (+M) <=> c2h6 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[1] + (5 - 1) * sc[5] + sc[6] + (3 - 1) * sc[8];
  // forward
  phi_f = (sc[9] * sc[9]);
  k_f = 92140000000 * exp(-1.17 * logT - (319.945156118641) * invT);
  dlnkfdT = -1.17 * invT + (319.945156118641) * invT2;
  // pressure-fall-off
  k_0 = 1.135e+36 * exp(-5.246 * logT - (857.984415197047) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -5.246 * invT + (857.984415197047) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.405) * exp(-T / 1120);
  Fcent2 = 0.405 * exp(-T / 69.6);
  Fcent3 = exp(-1e+15 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 1120 - Fcent2 / 69.6 + Fcent3 * 1e+15 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[15];
  Kc = refCinv * exp(2.000000 * g_RT[9] - g_RT[15]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[9]) + (h_RT[15]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[9] -= 2 * q; // ch3
  wdot[15] += q;    // c2h6
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[h2]
    dqdci = (2 - 1) * dcdc_fac;
    J[98] += -2 * dqdci; // dwdot[ch3]/d[h2]
    J[104] += dqdci;     // dwdot[c2h6]/d[h2]
    // d()/d[h2o]
    dqdci = (5 - 1) * dcdc_fac;
    J[454] += -2 * dqdci; // dwdot[ch3]/d[h2o]
    J[460] += dqdci;      // dwdot[c2h6]/d[h2o]
    // d()/d[co]
    dqdci = (2 - 1) * dcdc_fac;
    J[543] += -2 * dqdci; // dwdot[ch3]/d[co]
    J[549] += dqdci;      // dwdot[c2h6]/d[co]
    // d()/d[co2]
    dqdci = (3 - 1) * dcdc_fac;
    J[721] += -2 * dqdci; // dwdot[ch3]/d[co2]
    J[727] += dqdci;      // dwdot[c2h6]/d[co2]
    // d()/d[ch3]
    dqdci = +k_f * 2.000000 * sc[9];
    J[810] += -2 * dqdci; // dwdot[ch3]/d[ch3]
    J[816] += dqdci;      // dwdot[c2h6]/d[ch3]
    // d()/d[c2h6]
    dqdci = -k_r;
    J[1344] += -2 * dqdci; // dwdot[ch3]/d[c2h6]
    J[1350] += dqdci;      // dwdot[c2h6]/d[c2h6]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = 2 * dcdc_fac;
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = 5 * dcdc_fac;
    dqdc[6] = 2 * dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = 3 * dcdc_fac;
    dqdc[9] = dcdc_fac + k_f * 2.000000 * sc[9];
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac - k_r;
    dqdc[16] = dcdc_fac;
    dqdc[17] = dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    dqdc[47] = dcdc_fac;
    dqdc[48] = dcdc_fac;
    dqdc[49] = dcdc_fac;
    dqdc[50] = dcdc_fac;
    dqdc[51] = dcdc_fac;
    dqdc[52] = dcdc_fac;
    dqdc[53] = dcdc_fac;
    dqdc[54] = dcdc_fac;
    dqdc[55] = dcdc_fac;
    dqdc[56] = dcdc_fac;
    dqdc[57] = dcdc_fac;
    dqdc[58] = dcdc_fac;
    dqdc[59] = dcdc_fac;
    dqdc[60] = dcdc_fac;
    dqdc[61] = dcdc_fac;
    dqdc[62] = dcdc_fac;
    dqdc[63] = dcdc_fac;
    dqdc[64] = dcdc_fac;
    dqdc[65] = dcdc_fac;
    dqdc[66] = dcdc_fac;
    dqdc[67] = dcdc_fac;
    dqdc[68] = dcdc_fac;
    dqdc[69] = dcdc_fac;
    dqdc[70] = dcdc_fac;
    dqdc[71] = dcdc_fac;
    dqdc[72] = dcdc_fac;
    dqdc[73] = dcdc_fac;
    dqdc[74] = dcdc_fac;
    dqdc[75] = dcdc_fac;
    dqdc[76] = dcdc_fac;
    dqdc[77] = dcdc_fac;
    dqdc[78] = dcdc_fac;
    dqdc[79] = dcdc_fac;
    dqdc[80] = dcdc_fac;
    dqdc[81] = dcdc_fac;
    dqdc[82] = dcdc_fac;
    dqdc[83] = dcdc_fac;
    dqdc[84] = dcdc_fac;
    dqdc[85] = dcdc_fac;
    dqdc[86] = dcdc_fac;
    dqdc[87] = dcdc_fac;
    for (int k = 0; k < 88; k++) {
      J[89 * k + 9] += -2 * dqdc[k];
      J[89 * k + 15] += dqdc[k];
    }
  }
  J[7841] += -2 * dqdT; // dwdot[ch3]/dT
  J[7847] += dqdT;      // dwdot[c2h6]/dT

  // reaction 43: h + o2 (+M) <=> ho2 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[1] + (12 - 1) * sc[5] + (1.9 - 1) * sc[6] +
          (3.8 - 1) * sc[8];
  // forward
  phi_f = sc[0] * sc[3];
  k_f = 1475000 * exp(0.6 * logT);
  dlnkfdT = 0.6 * invT;
  // pressure-fall-off
  k_0 = 3.5e+16 * exp(-0.41 * logT - (-561.589799038067) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -0.41 * invT + (-561.589799038067) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.5) * exp(-T / 1e-30);
  Fcent2 = 0.5 * exp(-T / 1e+30);
  Fcent3 = exp(-1e+100 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent *
                (-Fcent1 / 1e-30 - Fcent2 / 1e+30 + Fcent3 * 1e+100 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[11];
  Kc = refCinv * exp(g_RT[0] + g_RT[3] - g_RT[11]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[3]) + (h_RT[11]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[0] -= q;  // h
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[h]
    dqdci = +k_f * sc[3];
    J[0] -= dqdci;  // dwdot[h]/d[h]
    J[3] -= dqdci;  // dwdot[o2]/d[h]
    J[11] += dqdci; // dwdot[ho2]/d[h]
    // d()/d[h2]
    dqdci = (2.5 - 1) * dcdc_fac;
    J[89] -= dqdci;  // dwdot[h]/d[h2]
    J[92] -= dqdci;  // dwdot[o2]/d[h2]
    J[100] += dqdci; // dwdot[ho2]/d[h2]
    // d()/d[o2]
    dqdci = +k_f * sc[0];
    J[267] -= dqdci; // dwdot[h]/d[o2]
    J[270] -= dqdci; // dwdot[o2]/d[o2]
    J[278] += dqdci; // dwdot[ho2]/d[o2]
    // d()/d[h2o]
    dqdci = (12 - 1) * dcdc_fac;
    J[445] -= dqdci; // dwdot[h]/d[h2o]
    J[448] -= dqdci; // dwdot[o2]/d[h2o]
    J[456] += dqdci; // dwdot[ho2]/d[h2o]
    // d()/d[co]
    dqdci = (1.9 - 1) * dcdc_fac;
    J[534] -= dqdci; // dwdot[h]/d[co]
    J[537] -= dqdci; // dwdot[o2]/d[co]
    J[545] += dqdci; // dwdot[ho2]/d[co]
    // d()/d[co2]
    dqdci = (3.8 - 1) * dcdc_fac;
    J[712] -= dqdci; // dwdot[h]/d[co2]
    J[715] -= dqdci; // dwdot[o2]/d[co2]
    J[723] += dqdci; // dwdot[ho2]/d[co2]
    // d()/d[ho2]
    dqdci = -k_r;
    J[979] -= dqdci; // dwdot[h]/d[ho2]
    J[982] -= dqdci; // dwdot[o2]/d[ho2]
    J[990] += dqdci; // dwdot[ho2]/d[ho2]
  } else {
    dqdc[0] = dcdc_fac + k_f * sc[3];
    dqdc[1] = 2.5 * dcdc_fac;
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac + k_f * sc[0];
    dqdc[4] = dcdc_fac;
    dqdc[5] = 12 * dcdc_fac;
    dqdc[6] = 1.9 * dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = 3.8 * dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac - k_r;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = dcdc_fac;
    dqdc[17] = dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    dqdc[47] = dcdc_fac;
    dqdc[48] = dcdc_fac;
    dqdc[49] = dcdc_fac;
    dqdc[50] = dcdc_fac;
    dqdc[51] = dcdc_fac;
    dqdc[52] = dcdc_fac;
    dqdc[53] = dcdc_fac;
    dqdc[54] = dcdc_fac;
    dqdc[55] = dcdc_fac;
    dqdc[56] = dcdc_fac;
    dqdc[57] = dcdc_fac;
    dqdc[58] = dcdc_fac;
    dqdc[59] = dcdc_fac;
    dqdc[60] = dcdc_fac;
    dqdc[61] = dcdc_fac;
    dqdc[62] = dcdc_fac;
    dqdc[63] = dcdc_fac;
    dqdc[64] = dcdc_fac;
    dqdc[65] = dcdc_fac;
    dqdc[66] = dcdc_fac;
    dqdc[67] = dcdc_fac;
    dqdc[68] = dcdc_fac;
    dqdc[69] = dcdc_fac;
    dqdc[70] = dcdc_fac;
    dqdc[71] = dcdc_fac;
    dqdc[72] = dcdc_fac;
    dqdc[73] = dcdc_fac;
    dqdc[74] = dcdc_fac;
    dqdc[75] = dcdc_fac;
    dqdc[76] = dcdc_fac;
    dqdc[77] = dcdc_fac;
    dqdc[78] = dcdc_fac;
    dqdc[79] = dcdc_fac;
    dqdc[80] = dcdc_fac;
    dqdc[81] = dcdc_fac;
    dqdc[82] = dcdc_fac;
    dqdc[83] = dcdc_fac;
    dqdc[84] = dcdc_fac;
    dqdc[85] = dcdc_fac;
    dqdc[86] = dcdc_fac;
    dqdc[87] = dcdc_fac;
    for (int k = 0; k < 88; k++) {
      J[89 * k + 0] -= dqdc[k];
      J[89 * k + 3] -= dqdc[k];
      J[89 * k + 11] += dqdc[k];
    }
  }
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT

  // reaction 89: 2 oh (+M) <=> h2o2 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[1] + (12 - 1) * sc[5] + (1.9 - 1) * sc[6] +
          (3.8 - 1) * sc[8];
  // forward
  phi_f = (sc[4] * sc[4]);
  k_f = 123600000 * exp(-0.37 * logT);
  dlnkfdT = -0.37 * invT;
  // pressure-fall-off
  k_0 = 3.041e+30 * exp(-4.63 * logT - (1031.09094823387) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -4.63 * invT + (1031.09094823387) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.47) * exp(-T / 100);
  Fcent2 = 0.47 * exp(-T / 2000);
  Fcent3 = exp(-1e+15 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 100 - Fcent2 / 2000 + Fcent3 * 1e+15 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[12];
  Kc = refCinv * exp(2.000000 * g_RT[4] - g_RT[12]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[4]) + (h_RT[12]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[4] -= 2 * q; // oh
  wdot[12] += q;    // h2o2
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[h2]
    dqdci = (2.5 - 1) * dcdc_fac;
    J[93] += -2 * dqdci; // dwdot[oh]/d[h2]
    J[101] += dqdci;     // dwdot[h2o2]/d[h2]
    // d()/d[oh]
    dqdci = +k_f * 2.000000 * sc[4];
    J[360] += -2 * dqdci; // dwdot[oh]/d[oh]
    J[368] += dqdci;      // dwdot[h2o2]/d[oh]
    // d()/d[h2o]
    dqdci = (12 - 1) * dcdc_fac;
    J[449] += -2 * dqdci; // dwdot[oh]/d[h2o]
    J[457] += dqdci;      // dwdot[h2o2]/d[h2o]
    // d()/d[co]
    dqdci = (1.9 - 1) * dcdc_fac;
    J[538] += -2 * dqdci; // dwdot[oh]/d[co]
    J[546] += dqdci;      // dwdot[h2o2]/d[co]
    // d()/d[co2]
    dqdci = (3.8 - 1) * dcdc_fac;
    J[716] += -2 * dqdci; // dwdot[oh]/d[co2]
    J[724] += dqdci;      // dwdot[h2o2]/d[co2]
    // d()/d[h2o2]
    dqdci = -k_r;
    J[1072] += -2 * dqdci; // dwdot[oh]/d[h2o2]
    J[1080] += dqdci;      // dwdot[h2o2]/d[h2o2]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = 2.5 * dcdc_fac;
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac + k_f * 2.000000 * sc[4];
    dqdc[5] = 12 * dcdc_fac;
    dqdc[6] = 1.9 * dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = 3.8 * dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = dcdc_fac - k_r;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = dcdc_fac;
    dqdc[17] = dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    dqdc[47] = dcdc_fac;
    dqdc[48] = dcdc_fac;
    dqdc[49] = dcdc_fac;
    dqdc[50] = dcdc_fac;
    dqdc[51] = dcdc_fac;
    dqdc[52] = dcdc_fac;
    dqdc[53] = dcdc_fac;
    dqdc[54] = dcdc_fac;
    dqdc[55] = dcdc_fac;
    dqdc[56] = dcdc_fac;
    dqdc[57] = dcdc_fac;
    dqdc[58] = dcdc_fac;
    dqdc[59] = dcdc_fac;
    dqdc[60] = dcdc_fac;
    dqdc[61] = dcdc_fac;
    dqdc[62] = dcdc_fac;
    dqdc[63] = dcdc_fac;
    dqdc[64] = dcdc_fac;
    dqdc[65] = dcdc_fac;
    dqdc[66] = dcdc_fac;
    dqdc[67] = dcdc_fac;
    dqdc[68] = dcdc_fac;
    dqdc[69] = dcdc_fac;
    dqdc[70] = dcdc_fac;
    dqdc[71] = dcdc_fac;
    dqdc[72] = dcdc_fac;
    dqdc[73] = dcdc_fac;
    dqdc[74] = dcdc_fac;
    dqdc[75] = dcdc_fac;
    dqdc[76] = dcdc_fac;
    dqdc[77] = dcdc_fac;
    dqdc[78] = dcdc_fac;
    dqdc[79] = dcdc_fac;
    dqdc[80] = dcdc_fac;
    dqdc[81] = dcdc_fac;
    dqdc[82] = dcdc_fac;
    dqdc[83] = dcdc_fac;
    dqdc[84] = dcdc_fac;
    dqdc[85] = dcdc_fac;
    dqdc[86] = dcdc_fac;
    dqdc[87] = dcdc_fac;
    for (int k = 0; k < 88; k++) {
      J[89 * k + 4] += -2 * dqdc[k];
      J[89 * k + 12] += dqdc[k];
    }
  }
  J[7836] += -2 * dqdT; // dwdot[oh]/dT
  J[7844] += dqdT;      // dwdot[h2o2]/dT

  // reaction 102: c2h3 + h (+M) <=> c2h4 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[0] * sc[19];
  k_f = 6100000 * exp(0.27 * logT - (140.900666425322) * invT);
  dlnkfdT = 0.27 * invT + (140.900666425322) * invT2;
  // pressure-fall-off
  k_0 = 9.8e+29 * exp(-3.86 * logT - (1670.67933047167) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -3.86 * invT + (1670.67933047167) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.782) * exp(-T / 208);
  Fcent2 = 0.782 * exp(-T / 2663);
  Fcent3 = exp(-6095 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 208 - Fcent2 / 2663 + Fcent3 * 6095 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[16];
  Kc = refCinv * exp(g_RT[0] - g_RT[16] + g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[19]) + (h_RT[16]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[0] -= q;  // h
  wdot[16] += q; // c2h4
  wdot[19] -= q; // c2h3
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[h]
    dqdci = +k_f * sc[19];
    J[0] -= dqdci;  // dwdot[h]/d[h]
    J[16] += dqdci; // dwdot[c2h4]/d[h]
    J[19] -= dqdci; // dwdot[c2h3]/d[h]
    // d()/d[c2h4]
    dqdci = -k_r;
    J[1424] -= dqdci; // dwdot[h]/d[c2h4]
    J[1440] += dqdci; // dwdot[c2h4]/d[c2h4]
    J[1443] -= dqdci; // dwdot[c2h3]/d[c2h4]
    // d()/d[c2h3]
    dqdci = +k_f * sc[0];
    J[1691] -= dqdci; // dwdot[h]/d[c2h3]
    J[1707] += dqdci; // dwdot[c2h4]/d[c2h3]
    J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  } else {
    dqdc[0] = dcdc_fac + k_f * sc[19];
    dqdc[1] = dcdc_fac;
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = dcdc_fac;
    dqdc[6] = dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = dcdc_fac - k_r;
    dqdc[17] = dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac + k_f * sc[0];
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    dqdc[47] = dcdc_fac;
    dqdc[48] = dcdc_fac;
    dqdc[49] = dcdc_fac;
    dqdc[50] = dcdc_fac;
    dqdc[51] = dcdc_fac;
    dqdc[52] = dcdc_fac;
    dqdc[53] = dcdc_fac;
    dqdc[54] = dcdc_fac;
    dqdc[55] = dcdc_fac;
    dqdc[56] = dcdc_fac;
    dqdc[57] = dcdc_fac;
    dqdc[58] = dcdc_fac;
    dqdc[59] = dcdc_fac;
    dqdc[60] = dcdc_fac;
    dqdc[61] = dcdc_fac;
    dqdc[62] = dcdc_fac;
    dqdc[63] = dcdc_fac;
    dqdc[64] = dcdc_fac;
    dqdc[65] = dcdc_fac;
    dqdc[66] = dcdc_fac;
    dqdc[67] = dcdc_fac;
    dqdc[68] = dcdc_fac;
    dqdc[69] = dcdc_fac;
    dqdc[70] = dcdc_fac;
    dqdc[71] = dcdc_fac;
    dqdc[72] = dcdc_fac;
    dqdc[73] = dcdc_fac;
    dqdc[74] = dcdc_fac;
    dqdc[75] = dcdc_fac;
    dqdc[76] = dcdc_fac;
    dqdc[77] = dcdc_fac;
    dqdc[78] = dcdc_fac;
    dqdc[79] = dcdc_fac;
    dqdc[80] = dcdc_fac;
    dqdc[81] = dcdc_fac;
    dqdc[82] = dcdc_fac;
    dqdc[83] = dcdc_fac;
    dqdc[84] = dcdc_fac;
    dqdc[85] = dcdc_fac;
    dqdc[86] = dcdc_fac;
    dqdc[87] = dcdc_fac;
    for (int k = 0; k < 88; k++) {
      J[89 * k + 0] -= dqdc[k];
      J[89 * k + 16] += dqdc[k];
      J[89 * k + 19] -= dqdc[k];
    }
  }
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT

  // reaction 105: c2h2 + h (+M) <=> c2h3 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[1] + (5 - 1) * sc[5] + sc[6] + (3 - 1) * sc[8];
  // forward
  phi_f = sc[0] * sc[18];
  k_f = 311000 * exp(0.58 * logT - (1302.82794776842) * invT);
  dlnkfdT = 0.58 * invT + (1302.82794776842) * invT2;
  // pressure-fall-off
  k_0 = 2.254e+40 * exp(-7.269 * logT - (3309.65601099764) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -7.269 * invT + (3309.65601099764) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 1) * exp(-T / 1e-15);
  Fcent2 = 1 * exp(-T / 675);
  Fcent3 = exp(-1e+15 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 1e-15 - Fcent2 / 675 + Fcent3 * 1e+15 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[19];
  Kc = refCinv * exp(g_RT[0] + g_RT[18] - g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[18]) + (h_RT[19]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[0] -= q;  // h
  wdot[18] -= q; // c2h2
  wdot[19] += q; // c2h3
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[h]
    dqdci = +k_f * sc[18];
    J[0] -= dqdci;  // dwdot[h]/d[h]
    J[18] -= dqdci; // dwdot[c2h2]/d[h]
    J[19] += dqdci; // dwdot[c2h3]/d[h]
    // d()/d[h2]
    dqdci = (2 - 1) * dcdc_fac;
    J[89] -= dqdci;  // dwdot[h]/d[h2]
    J[107] -= dqdci; // dwdot[c2h2]/d[h2]
    J[108] += dqdci; // dwdot[c2h3]/d[h2]
    // d()/d[h2o]
    dqdci = (5 - 1) * dcdc_fac;
    J[445] -= dqdci; // dwdot[h]/d[h2o]
    J[463] -= dqdci; // dwdot[c2h2]/d[h2o]
    J[464] += dqdci; // dwdot[c2h3]/d[h2o]
    // d()/d[co]
    dqdci = (2 - 1) * dcdc_fac;
    J[534] -= dqdci; // dwdot[h]/d[co]
    J[552] -= dqdci; // dwdot[c2h2]/d[co]
    J[553] += dqdci; // dwdot[c2h3]/d[co]
    // d()/d[co2]
    dqdci = (3 - 1) * dcdc_fac;
    J[712] -= dqdci; // dwdot[h]/d[co2]
    J[730] -= dqdci; // dwdot[c2h2]/d[co2]
    J[731] += dqdci; // dwdot[c2h3]/d[co2]
    // d()/d[c2h2]
    dqdci = +k_f * sc[0];
    J[1602] -= dqdci; // dwdot[h]/d[c2h2]
    J[1620] -= dqdci; // dwdot[c2h2]/d[c2h2]
    J[1621] += dqdci; // dwdot[c2h3]/d[c2h2]
    // d()/d[c2h3]
    dqdci = -k_r;
    J[1691] -= dqdci; // dwdot[h]/d[c2h3]
    J[1709] -= dqdci; // dwdot[c2h2]/d[c2h3]
    J[1710] += dqdci; // dwdot[c2h3]/d[c2h3]
  } else {
    dqdc[0] = dcdc_fac + k_f * sc[18];
    dqdc[1] = 2 * dcdc_fac;
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = 5 * dcdc_fac;
    dqdc[6] = 2 * dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = 3 * dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = dcdc_fac;
    dqdc[17] = dcdc_fac;
    dqdc[18] = dcdc_fac + k_f * sc[0];
    dqdc[19] = dcdc_fac - k_r;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    dqdc[47] = dcdc_fac;
    dqdc[48] = dcdc_fac;
    dqdc[49] = dcdc_fac;
    dqdc[50] = dcdc_fac;
    dqdc[51] = dcdc_fac;
    dqdc[52] = dcdc_fac;
    dqdc[53] = dcdc_fac;
    dqdc[54] = dcdc_fac;
    dqdc[55] = dcdc_fac;
    dqdc[56] = dcdc_fac;
    dqdc[57] = dcdc_fac;
    dqdc[58] = dcdc_fac;
    dqdc[59] = dcdc_fac;
    dqdc[60] = dcdc_fac;
    dqdc[61] = dcdc_fac;
    dqdc[62] = dcdc_fac;
    dqdc[63] = dcdc_fac;
    dqdc[64] = dcdc_fac;
    dqdc[65] = dcdc_fac;
    dqdc[66] = dcdc_fac;
    dqdc[67] = dcdc_fac;
    dqdc[68] = dcdc_fac;
    dqdc[69] = dcdc_fac;
    dqdc[70] = dcdc_fac;
    dqdc[71] = dcdc_fac;
    dqdc[72] = dcdc_fac;
    dqdc[73] = dcdc_fac;
    dqdc[74] = dcdc_fac;
    dqdc[75] = dcdc_fac;
    dqdc[76] = dcdc_fac;
    dqdc[77] = dcdc_fac;
    dqdc[78] = dcdc_fac;
    dqdc[79] = dcdc_fac;
    dqdc[80] = dcdc_fac;
    dqdc[81] = dcdc_fac;
    dqdc[82] = dcdc_fac;
    dqdc[83] = dcdc_fac;
    dqdc[84] = dcdc_fac;
    dqdc[85] = dcdc_fac;
    dqdc[86] = dcdc_fac;
    dqdc[87] = dcdc_fac;
    for (int k = 0; k < 88; k++) {
      J[89 * k + 0] -= dqdc[k];
      J[89 * k + 18] -= dqdc[k];
      J[89 * k + 19] += dqdc[k];
    }
  }
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7850] -= dqdT; // dwdot[c2h2]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT

  // reaction 44: co + o (+M) <=> co2 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[1] + (12 - 1) * sc[5] + (1.9 - 1) * sc[6] +
          (3.8 - 1) * sc[8];
  // forward
  phi_f = sc[2] * sc[6];
  k_f = 18000 * exp(-(1199.66853127845) * invT);
  dlnkfdT = (1199.66853127845) * invT2;
  // pressure-fall-off
  k_0 = 1.35e+24 * exp(-2.788 * logT - (2108.98104638758) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -2.788 * invT + (2108.98104638758) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Lindemann form
  F = 1.0;
  dlogFdlogPr = 0.0;
  dlogFdT = 0.0;
  // reverse
  phi_r = sc[8];
  Kc = refCinv * exp(g_RT[2] + g_RT[6] - g_RT[8]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[6]) + (h_RT[8]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[2] -= q; // o
  wdot[6] -= q; // co
  wdot[8] += q; // co2
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[h2]
    dqdci = (2.5 - 1) * dcdc_fac;
    J[91] -= dqdci; // dwdot[o]/d[h2]
    J[95] -= dqdci; // dwdot[co]/d[h2]
    J[97] += dqdci; // dwdot[co2]/d[h2]
    // d()/d[o]
    dqdci = +k_f * sc[6];
    J[180] -= dqdci; // dwdot[o]/d[o]
    J[184] -= dqdci; // dwdot[co]/d[o]
    J[186] += dqdci; // dwdot[co2]/d[o]
    // d()/d[h2o]
    dqdci = (12 - 1) * dcdc_fac;
    J[447] -= dqdci; // dwdot[o]/d[h2o]
    J[451] -= dqdci; // dwdot[co]/d[h2o]
    J[453] += dqdci; // dwdot[co2]/d[h2o]
    // d()/d[co]
    dqdci = (1.9 - 1) * dcdc_fac + k_f * sc[2];
    J[536] -= dqdci; // dwdot[o]/d[co]
    J[540] -= dqdci; // dwdot[co]/d[co]
    J[542] += dqdci; // dwdot[co2]/d[co]
    // d()/d[co2]
    dqdci = (3.8 - 1) * dcdc_fac - k_r;
    J[714] -= dqdci; // dwdot[o]/d[co2]
    J[718] -= dqdci; // dwdot[co]/d[co2]
    J[720] += dqdci; // dwdot[co2]/d[co2]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = 2.5 * dcdc_fac;
    dqdc[2] = dcdc_fac + k_f * sc[6];
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = 12 * dcdc_fac;
    dqdc[6] = 1.9 * dcdc_fac + k_f * sc[2];
    dqdc[7] = dcdc_fac;
    dqdc[8] = 3.8 * dcdc_fac - k_r;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = dcdc_fac;
    dqdc[17] = dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    dqdc[47] = dcdc_fac;
    dqdc[48] = dcdc_fac;
    dqdc[49] = dcdc_fac;
    dqdc[50] = dcdc_fac;
    dqdc[51] = dcdc_fac;
    dqdc[52] = dcdc_fac;
    dqdc[53] = dcdc_fac;
    dqdc[54] = dcdc_fac;
    dqdc[55] = dcdc_fac;
    dqdc[56] = dcdc_fac;
    dqdc[57] = dcdc_fac;
    dqdc[58] = dcdc_fac;
    dqdc[59] = dcdc_fac;
    dqdc[60] = dcdc_fac;
    dqdc[61] = dcdc_fac;
    dqdc[62] = dcdc_fac;
    dqdc[63] = dcdc_fac;
    dqdc[64] = dcdc_fac;
    dqdc[65] = dcdc_fac;
    dqdc[66] = dcdc_fac;
    dqdc[67] = dcdc_fac;
    dqdc[68] = dcdc_fac;
    dqdc[69] = dcdc_fac;
    dqdc[70] = dcdc_fac;
    dqdc[71] = dcdc_fac;
    dqdc[72] = dcdc_fac;
    dqdc[73] = dcdc_fac;
    dqdc[74] = dcdc_fac;
    dqdc[75] = dcdc_fac;
    dqdc[76] = dcdc_fac;
    dqdc[77] = dcdc_fac;
    dqdc[78] = dcdc_fac;
    dqdc[79] = dcdc_fac;
    dqdc[80] = dcdc_fac;
    dqdc[81] = dcdc_fac;
    dqdc[82] = dcdc_fac;
    dqdc[83] = dcdc_fac;
    dqdc[84] = dcdc_fac;
    dqdc[85] = dcdc_fac;
    dqdc[86] = dcdc_fac;
    dqdc[87] = dcdc_fac;
    for (int k = 0; k < 88; k++) {
      J[89 * k + 2] -= dqdc[k];
      J[89 * k + 6] -= dqdc[k];
      J[89 * k + 8] += dqdc[k];
    }
  }
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7840] += dqdT; // dwdot[co2]/dT

  // reaction 69: ch3o (+M) <=> ch2o + h (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[14];
  k_f = 54500000000000 * exp(-(6793.42498836372) * invT);
  dlnkfdT = (6793.42498836372) * invT2;
  // pressure-fall-off
  k_0 = 2.344e+25 * exp(-2.7 * logT - (15398.4299736244) * invT);
  Pr = 1e-6 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -2.7 * invT + (15398.4299736244) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Lindemann form
  F = 1.0;
  dlogFdlogPr = 0.0;
  dlogFdT = 0.0;
  // reverse
  phi_r = sc[0] * sc[13];
  Kc = refC * exp(-g_RT[0] - g_RT[13] + g_RT[14]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14]) + (h_RT[0] + h_RT[13]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[0] += q;  // h
  wdot[13] += q; // ch2o
  wdot[14] -= q; // ch3o
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[h]
    dqdci = -k_r * sc[13];
    J[0] += dqdci;  // dwdot[h]/d[h]
    J[13] += dqdci; // dwdot[ch2o]/d[h]
    J[14] -= dqdci; // dwdot[ch3o]/d[h]
    // d()/d[ch2o]
    dqdci = -k_r * sc[0];
    J[1157] += dqdci; // dwdot[h]/d[ch2o]
    J[1170] += dqdci; // dwdot[ch2o]/d[ch2o]
    J[1171] -= dqdci; // dwdot[ch3o]/d[ch2o]
    // d()/d[ch3o]
    dqdci = +k_f;
    J[1246] += dqdci; // dwdot[h]/d[ch3o]
    J[1259] += dqdci; // dwdot[ch2o]/d[ch3o]
    J[1260] -= dqdci; // dwdot[ch3o]/d[ch3o]
  } else {
    dqdc[0] = dcdc_fac - k_r * sc[13];
    dqdc[1] = dcdc_fac;
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = dcdc_fac;
    dqdc[6] = dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac - k_r * sc[0];
    dqdc[14] = dcdc_fac + k_f;
    dqdc[15] = dcdc_fac;
    dqdc[16] = dcdc_fac;
    dqdc[17] = dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    dqdc[47] = dcdc_fac;
    dqdc[48] = dcdc_fac;
    dqdc[49] = dcdc_fac;
    dqdc[50] = dcdc_fac;
    dqdc[51] = dcdc_fac;
    dqdc[52] = dcdc_fac;
    dqdc[53] = dcdc_fac;
    dqdc[54] = dcdc_fac;
    dqdc[55] = dcdc_fac;
    dqdc[56] = dcdc_fac;
    dqdc[57] = dcdc_fac;
    dqdc[58] = dcdc_fac;
    dqdc[59] = dcdc_fac;
    dqdc[60] = dcdc_fac;
    dqdc[61] = dcdc_fac;
    dqdc[62] = dcdc_fac;
    dqdc[63] = dcdc_fac;
    dqdc[64] = dcdc_fac;
    dqdc[65] = dcdc_fac;
    dqdc[66] = dcdc_fac;
    dqdc[67] = dcdc_fac;
    dqdc[68] = dcdc_fac;
    dqdc[69] = dcdc_fac;
    dqdc[70] = dcdc_fac;
    dqdc[71] = dcdc_fac;
    dqdc[72] = dcdc_fac;
    dqdc[73] = dcdc_fac;
    dqdc[74] = dcdc_fac;
    dqdc[75] = dcdc_fac;
    dqdc[76] = dcdc_fac;
    dqdc[77] = dcdc_fac;
    dqdc[78] = dcdc_fac;
    dqdc[79] = dcdc_fac;
    dqdc[80] = dcdc_fac;
    dqdc[81] = dcdc_fac;
    dqdc[82] = dcdc_fac;
    dqdc[83] = dcdc_fac;
    dqdc[84] = dcdc_fac;
    dqdc[85] = dcdc_fac;
    dqdc[86] = dcdc_fac;
    dqdc[87] = dcdc_fac;
    for (int k = 0; k < 88; k++) {
      J[89 * k + 0] += dqdc[k];
      J[89 * k + 13] += dqdc[k];
      J[89 * k + 14] -= dqdc[k];
    }
  }
  J[7832] += dqdT; // dwdot[h]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT
  J[7846] -= dqdT; // dwdot[ch3o]/dT

  // reaction 70: c2h4 (+M) <=> c2h2 + h2 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[16];
  k_f = 18000000000000 * exp(-(38244.4666011587) * invT);
  dlnkfdT = (38244.4666011587) * invT2;
  // pressure-fall-off
  k_0 = 1.5e+15 * exp(-(27899.8416022111) * invT);
  Pr = 1e-6 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = (27899.8416022111) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Lindemann form
  F = 1.0;
  dlogFdlogPr = 0.0;
  dlogFdT = 0.0;
  // reverse
  phi_r = sc[1] * sc[18];
  Kc = refC * exp(-g_RT[1] + g_RT[16] - g_RT[18]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[16]) + (h_RT[1] + h_RT[18]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[1] += q;  // h2
  wdot[16] -= q; // c2h4
  wdot[18] += q; // c2h2
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[h2]
    dqdci = -k_r * sc[18];
    J[90] += dqdci;  // dwdot[h2]/d[h2]
    J[105] -= dqdci; // dwdot[c2h4]/d[h2]
    J[107] += dqdci; // dwdot[c2h2]/d[h2]
    // d()/d[c2h4]
    dqdci = +k_f;
    J[1425] += dqdci; // dwdot[h2]/d[c2h4]
    J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
    J[1442] += dqdci; // dwdot[c2h2]/d[c2h4]
    // d()/d[c2h2]
    dqdci = -k_r * sc[1];
    J[1603] += dqdci; // dwdot[h2]/d[c2h2]
    J[1618] -= dqdci; // dwdot[c2h4]/d[c2h2]
    J[1620] += dqdci; // dwdot[c2h2]/d[c2h2]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac - k_r * sc[18];
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = dcdc_fac;
    dqdc[6] = dcdc_fac;
    dqdc[7] = dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = dcdc_fac + k_f;
    dqdc[17] = dcdc_fac;
    dqdc[18] = dcdc_fac - k_r * sc[1];
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    dqdc[47] = dcdc_fac;
    dqdc[48] = dcdc_fac;
    dqdc[49] = dcdc_fac;
    dqdc[50] = dcdc_fac;
    dqdc[51] = dcdc_fac;
    dqdc[52] = dcdc_fac;
    dqdc[53] = dcdc_fac;
    dqdc[54] = dcdc_fac;
    dqdc[55] = dcdc_fac;
    dqdc[56] = dcdc_fac;
    dqdc[57] = dcdc_fac;
    dqdc[58] = dcdc_fac;
    dqdc[59] = dcdc_fac;
    dqdc[60] = dcdc_fac;
    dqdc[61] = dcdc_fac;
    dqdc[62] = dcdc_fac;
    dqdc[63] = dcdc_fac;
    dqdc[64] = dcdc_fac;
    dqdc[65] = dcdc_fac;
    dqdc[66] = dcdc_fac;
    dqdc[67] = dcdc_fac;
    dqdc[68] = dcdc_fac;
    dqdc[69] = dcdc_fac;
    dqdc[70] = dcdc_fac;
    dqdc[71] = dcdc_fac;
    dqdc[72] = dcdc_fac;
    dqdc[73] = dcdc_fac;
    dqdc[74] = dcdc_fac;
    dqdc[75] = dcdc_fac;
    dqdc[76] = dcdc_fac;
    dqdc[77] = dcdc_fac;
    dqdc[78] = dcdc_fac;
    dqdc[79] = dcdc_fac;
    dqdc[80] = dcdc_fac;
    dqdc[81] = dcdc_fac;
    dqdc[82] = dcdc_fac;
    dqdc[83] = dcdc_fac;
    dqdc[84] = dcdc_fac;
    dqdc[85] = dcdc_fac;
    dqdc[86] = dcdc_fac;
    dqdc[87] = dcdc_fac;
    for (int k = 0; k < 88; k++) {
      J[89 * k + 1] += dqdc[k];
      J[89 * k + 16] -= dqdc[k];
      J[89 * k + 18] += dqdc[k];
    }
  }
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7850] += dqdT; // dwdot[c2h2]/dT

  // reaction 151: ch3co (+M) <=> ch3 + co (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[22];
  k_f = 3000000000000 * exp(-(8413.78265225491) * invT);
  dlnkfdT = (8413.78265225491) * invT2;
  // pressure-fall-off
  k_0 = 1.2e+15 * exp(-(6299.26622254348) * invT);
  Pr = 1e-6 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = (6299.26622254348) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Lindemann form
  F = 1.0;
  dlogFdlogPr = 0.0;
  dlogFdT = 0.0;
  // reverse
  phi_r = sc[6] * sc[9];
  Kc = refC * exp(-g_RT[6] - g_RT[9] + g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[22]) + (h_RT[6] + h_RT[9]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[6] += q;  // co
  wdot[9] += q;  // ch3
  wdot[22] -= q; // ch3co
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[co]
    dqdci = -k_r * sc[9];
    J[540] += dqdci; // dwdot[co]/d[co]
    J[543] += dqdci; // dwdot[ch3]/d[co]
    J[556] -= dqdci; // dwdot[ch3co]/d[co]
    // d()/d[ch3]
    dqdci = -k_r * sc[6];
    J[807] += dqdci; // dwdot[co]/d[ch3]
    J[810] += dqdci; // dwdot[ch3]/d[ch3]
    J[823] -= dqdci; // dwdot[ch3co]/d[ch3]
    // d()/d[ch3co]
    dqdci = +k_f;
    J[1964] += dqdci; // dwdot[co]/d[ch3co]
    J[1967] += dqdci; // dwdot[ch3]/d[ch3co]
    J[1980] -= dqdci; // dwdot[ch3co]/d[ch3co]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = dcdc_fac;
    dqdc[5] = dcdc_fac;
    dqdc[6] = dcdc_fac - k_r * sc[9];
    dqdc[7] = dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac - k_r * sc[6];
    dqdc[10] = dcdc_fac;
    dqdc[11] = dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = dcdc_fac;
    dqdc[16] = dcdc_fac;
    dqdc[17] = dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac + k_f;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    dqdc[47] = dcdc_fac;
    dqdc[48] = dcdc_fac;
    dqdc[49] = dcdc_fac;
    dqdc[50] = dcdc_fac;
    dqdc[51] = dcdc_fac;
    dqdc[52] = dcdc_fac;
    dqdc[53] = dcdc_fac;
    dqdc[54] = dcdc_fac;
    dqdc[55] = dcdc_fac;
    dqdc[56] = dcdc_fac;
    dqdc[57] = dcdc_fac;
    dqdc[58] = dcdc_fac;
    dqdc[59] = dcdc_fac;
    dqdc[60] = dcdc_fac;
    dqdc[61] = dcdc_fac;
    dqdc[62] = dcdc_fac;
    dqdc[63] = dcdc_fac;
    dqdc[64] = dcdc_fac;
    dqdc[65] = dcdc_fac;
    dqdc[66] = dcdc_fac;
    dqdc[67] = dcdc_fac;
    dqdc[68] = dcdc_fac;
    dqdc[69] = dcdc_fac;
    dqdc[70] = dcdc_fac;
    dqdc[71] = dcdc_fac;
    dqdc[72] = dcdc_fac;
    dqdc[73] = dcdc_fac;
    dqdc[74] = dcdc_fac;
    dqdc[75] = dcdc_fac;
    dqdc[76] = dcdc_fac;
    dqdc[77] = dcdc_fac;
    dqdc[78] = dcdc_fac;
    dqdc[79] = dcdc_fac;
    dqdc[80] = dcdc_fac;
    dqdc[81] = dcdc_fac;
    dqdc[82] = dcdc_fac;
    dqdc[83] = dcdc_fac;
    dqdc[84] = dcdc_fac;
    dqdc[85] = dcdc_fac;
    dqdc[86] = dcdc_fac;
    dqdc[87] = dcdc_fac;
    for (int k = 0; k < 88; k++) {
      J[89 * k + 6] += dqdc[k];
      J[89 * k + 9] += dqdc[k];
      J[89 * k + 22] -= dqdc[k];
    }
  }
  J[7838] += dqdT; // dwdot[co]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7854] -= dqdT; // dwdot[ch3co]/dT

  // reaction 21: hco + M => co + h + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[1] + (12 - 1) * sc[5] + (1.9 - 1) * sc[6] +
          (3.8 - 1) * sc[8];
  // forward
  phi_f = sc[7];
  k_f = 186000000000 * exp(-1 * logT - (8554.68331868023) * invT);
  dlnkfdT = -1 * invT + (8554.68331868023) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q; // h
  wdot[6] += q; // co
  wdot[7] -= q; // hco
  // for convenience
  k_f *= alpha;
  if (consP == 1) {
    // d()/d[h2]
    dqdci = (2.5 - 1) * q_nocor;
    J[89] += dqdci; // dwdot[h]/d[h2]
    J[95] += dqdci; // dwdot[co]/d[h2]
    J[96] -= dqdci; // dwdot[hco]/d[h2]
    // d()/d[h2o]
    dqdci = (12 - 1) * q_nocor;
    J[445] += dqdci; // dwdot[h]/d[h2o]
    J[451] += dqdci; // dwdot[co]/d[h2o]
    J[452] -= dqdci; // dwdot[hco]/d[h2o]
    // d()/d[co]
    dqdci = (1.9 - 1) * q_nocor;
    J[534] += dqdci; // dwdot[h]/d[co]
    J[540] += dqdci; // dwdot[co]/d[co]
    J[541] -= dqdci; // dwdot[hco]/d[co]
    // d()/d[hco]
    dqdci = +k_f;
    J[623] += dqdci; // dwdot[h]/d[hco]
    J[629] += dqdci; // dwdot[co]/d[hco]
    J[630] -= dqdci; // dwdot[hco]/d[hco]
    // d()/d[co2]
    dqdci = (3.8 - 1) * q_nocor;
    J[712] += dqdci; // dwdot[h]/d[co2]
    J[718] += dqdci; // dwdot[co]/d[co2]
    J[719] -= dqdci; // dwdot[hco]/d[co2]
  } else {
    dqdc[0] = q_nocor;
    dqdc[1] = 2.5 * q_nocor;
    dqdc[2] = q_nocor;
    dqdc[3] = q_nocor;
    dqdc[4] = q_nocor;
    dqdc[5] = 12 * q_nocor;
    dqdc[6] = 1.9 * q_nocor;
    dqdc[7] = q_nocor + k_f;
    dqdc[8] = 3.8 * q_nocor;
    dqdc[9] = q_nocor;
    dqdc[10] = q_nocor;
    dqdc[11] = q_nocor;
    dqdc[12] = q_nocor;
    dqdc[13] = q_nocor;
    dqdc[14] = q_nocor;
    dqdc[15] = q_nocor;
    dqdc[16] = q_nocor;
    dqdc[17] = q_nocor;
    dqdc[18] = q_nocor;
    dqdc[19] = q_nocor;
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[25] = q_nocor;
    dqdc[26] = q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    dqdc[34] = q_nocor;
    dqdc[35] = q_nocor;
    dqdc[36] = q_nocor;
    dqdc[37] = q_nocor;
    dqdc[38] = q_nocor;
    dqdc[39] = q_nocor;
    dqdc[40] = q_nocor;
    dqdc[41] = q_nocor;
    dqdc[42] = q_nocor;
    dqdc[43] = q_nocor;
    dqdc[44] = q_nocor;
    dqdc[45] = q_nocor;
    dqdc[46] = q_nocor;
    dqdc[47] = q_nocor;
    dqdc[48] = q_nocor;
    dqdc[49] = q_nocor;
    dqdc[50] = q_nocor;
    dqdc[51] = q_nocor;
    dqdc[52] = q_nocor;
    dqdc[53] = q_nocor;
    dqdc[54] = q_nocor;
    dqdc[55] = q_nocor;
    dqdc[56] = q_nocor;
    dqdc[57] = q_nocor;
    dqdc[58] = q_nocor;
    dqdc[59] = q_nocor;
    dqdc[60] = q_nocor;
    dqdc[61] = q_nocor;
    dqdc[62] = q_nocor;
    dqdc[63] = q_nocor;
    dqdc[64] = q_nocor;
    dqdc[65] = q_nocor;
    dqdc[66] = q_nocor;
    dqdc[67] = q_nocor;
    dqdc[68] = q_nocor;
    dqdc[69] = q_nocor;
    dqdc[70] = q_nocor;
    dqdc[71] = q_nocor;
    dqdc[72] = q_nocor;
    dqdc[73] = q_nocor;
    dqdc[74] = q_nocor;
    dqdc[75] = q_nocor;
    dqdc[76] = q_nocor;
    dqdc[77] = q_nocor;
    dqdc[78] = q_nocor;
    dqdc[79] = q_nocor;
    dqdc[80] = q_nocor;
    dqdc[81] = q_nocor;
    dqdc[82] = q_nocor;
    dqdc[83] = q_nocor;
    dqdc[84] = q_nocor;
    dqdc[85] = q_nocor;
    dqdc[86] = q_nocor;
    dqdc[87] = q_nocor;
    for (int k = 0; k < 88; k++) {
      J[89 * k + 0] += dqdc[k];
      J[89 * k + 6] += dqdc[k];
      J[89 * k + 7] -= dqdc[k];
    }
  }
  J[7832] += dqdT; // dwdot[h]/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7839] -= dqdT; // dwdot[hco]/dT

  // reaction 22: co + h + M => hco + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[1] + (12 - 1) * sc[5] + (1.9 - 1) * sc[6] +
          (3.8 - 1) * sc[8];
  // forward
  phi_f = sc[0] * sc[6];
  k_f = 64.67 * exp(-(-222.421766285686) * invT);
  dlnkfdT = (-222.421766285686) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q; // h
  wdot[6] -= q; // co
  wdot[7] += q; // hco
  // for convenience
  k_f *= alpha;
  if (consP == 1) {
    // d()/d[h]
    dqdci = +k_f * sc[6];
    J[0] -= dqdci; // dwdot[h]/d[h]
    J[6] -= dqdci; // dwdot[co]/d[h]
    J[7] += dqdci; // dwdot[hco]/d[h]
    // d()/d[h2]
    dqdci = (2.5 - 1) * q_nocor;
    J[89] -= dqdci; // dwdot[h]/d[h2]
    J[95] -= dqdci; // dwdot[co]/d[h2]
    J[96] += dqdci; // dwdot[hco]/d[h2]
    // d()/d[h2o]
    dqdci = (12 - 1) * q_nocor;
    J[445] -= dqdci; // dwdot[h]/d[h2o]
    J[451] -= dqdci; // dwdot[co]/d[h2o]
    J[452] += dqdci; // dwdot[hco]/d[h2o]
    // d()/d[co]
    dqdci = (1.9 - 1) * q_nocor + k_f * sc[0];
    J[534] -= dqdci; // dwdot[h]/d[co]
    J[540] -= dqdci; // dwdot[co]/d[co]
    J[541] += dqdci; // dwdot[hco]/d[co]
    // d()/d[co2]
    dqdci = (3.8 - 1) * q_nocor;
    J[712] -= dqdci; // dwdot[h]/d[co2]
    J[718] -= dqdci; // dwdot[co]/d[co2]
    J[719] += dqdci; // dwdot[hco]/d[co2]
  } else {
    dqdc[0] = q_nocor + k_f * sc[6];
    dqdc[1] = 2.5 * q_nocor;
    dqdc[2] = q_nocor;
    dqdc[3] = q_nocor;
    dqdc[4] = q_nocor;
    dqdc[5] = 12 * q_nocor;
    dqdc[6] = 1.9 * q_nocor + k_f * sc[0];
    dqdc[7] = q_nocor;
    dqdc[8] = 3.8 * q_nocor;
    dqdc[9] = q_nocor;
    dqdc[10] = q_nocor;
    dqdc[11] = q_nocor;
    dqdc[12] = q_nocor;
    dqdc[13] = q_nocor;
    dqdc[14] = q_nocor;
    dqdc[15] = q_nocor;
    dqdc[16] = q_nocor;
    dqdc[17] = q_nocor;
    dqdc[18] = q_nocor;
    dqdc[19] = q_nocor;
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[25] = q_nocor;
    dqdc[26] = q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    dqdc[34] = q_nocor;
    dqdc[35] = q_nocor;
    dqdc[36] = q_nocor;
    dqdc[37] = q_nocor;
    dqdc[38] = q_nocor;
    dqdc[39] = q_nocor;
    dqdc[40] = q_nocor;
    dqdc[41] = q_nocor;
    dqdc[42] = q_nocor;
    dqdc[43] = q_nocor;
    dqdc[44] = q_nocor;
    dqdc[45] = q_nocor;
    dqdc[46] = q_nocor;
    dqdc[47] = q_nocor;
    dqdc[48] = q_nocor;
    dqdc[49] = q_nocor;
    dqdc[50] = q_nocor;
    dqdc[51] = q_nocor;
    dqdc[52] = q_nocor;
    dqdc[53] = q_nocor;
    dqdc[54] = q_nocor;
    dqdc[55] = q_nocor;
    dqdc[56] = q_nocor;
    dqdc[57] = q_nocor;
    dqdc[58] = q_nocor;
    dqdc[59] = q_nocor;
    dqdc[60] = q_nocor;
    dqdc[61] = q_nocor;
    dqdc[62] = q_nocor;
    dqdc[63] = q_nocor;
    dqdc[64] = q_nocor;
    dqdc[65] = q_nocor;
    dqdc[66] = q_nocor;
    dqdc[67] = q_nocor;
    dqdc[68] = q_nocor;
    dqdc[69] = q_nocor;
    dqdc[70] = q_nocor;
    dqdc[71] = q_nocor;
    dqdc[72] = q_nocor;
    dqdc[73] = q_nocor;
    dqdc[74] = q_nocor;
    dqdc[75] = q_nocor;
    dqdc[76] = q_nocor;
    dqdc[77] = q_nocor;
    dqdc[78] = q_nocor;
    dqdc[79] = q_nocor;
    dqdc[80] = q_nocor;
    dqdc[81] = q_nocor;
    dqdc[82] = q_nocor;
    dqdc[83] = q_nocor;
    dqdc[84] = q_nocor;
    dqdc[85] = q_nocor;
    dqdc[86] = q_nocor;
    dqdc[87] = q_nocor;
    for (int k = 0; k < 88; k++) {
      J[89 * k + 0] -= dqdc[k];
      J[89 * k + 6] -= dqdc[k];
      J[89 * k + 7] += dqdc[k];
    }
  }
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7839] += dqdT; // dwdot[hco]/dT

  // reaction 41: h2o + M => h + oh + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[1] + (12 - 1) * sc[5] + (1.9 - 1) * sc[6] +
          (3.8 - 1) * sc[8];
  // forward
  phi_f = sc[5];
  k_f = 1.837e+21 * exp(-3 * logT - (61694.3632276586) * invT);
  dlnkfdT = -3 * invT + (61694.3632276586) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q; // h
  wdot[4] += q; // oh
  wdot[5] -= q; // h2o
  // for convenience
  k_f *= alpha;
  if (consP == 1) {
    // d()/d[h2]
    dqdci = (2.5 - 1) * q_nocor;
    J[89] += dqdci; // dwdot[h]/d[h2]
    J[93] += dqdci; // dwdot[oh]/d[h2]
    J[94] -= dqdci; // dwdot[h2o]/d[h2]
    // d()/d[h2o]
    dqdci = (12 - 1) * q_nocor + k_f;
    J[445] += dqdci; // dwdot[h]/d[h2o]
    J[449] += dqdci; // dwdot[oh]/d[h2o]
    J[450] -= dqdci; // dwdot[h2o]/d[h2o]
    // d()/d[co]
    dqdci = (1.9 - 1) * q_nocor;
    J[534] += dqdci; // dwdot[h]/d[co]
    J[538] += dqdci; // dwdot[oh]/d[co]
    J[539] -= dqdci; // dwdot[h2o]/d[co]
    // d()/d[co2]
    dqdci = (3.8 - 1) * q_nocor;
    J[712] += dqdci; // dwdot[h]/d[co2]
    J[716] += dqdci; // dwdot[oh]/d[co2]
    J[717] -= dqdci; // dwdot[h2o]/d[co2]
  } else {
    dqdc[0] = q_nocor;
    dqdc[1] = 2.5 * q_nocor;
    dqdc[2] = q_nocor;
    dqdc[3] = q_nocor;
    dqdc[4] = q_nocor;
    dqdc[5] = 12 * q_nocor + k_f;
    dqdc[6] = 1.9 * q_nocor;
    dqdc[7] = q_nocor;
    dqdc[8] = 3.8 * q_nocor;
    dqdc[9] = q_nocor;
    dqdc[10] = q_nocor;
    dqdc[11] = q_nocor;
    dqdc[12] = q_nocor;
    dqdc[13] = q_nocor;
    dqdc[14] = q_nocor;
    dqdc[15] = q_nocor;
    dqdc[16] = q_nocor;
    dqdc[17] = q_nocor;
    dqdc[18] = q_nocor;
    dqdc[19] = q_nocor;
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[25] = q_nocor;
    dqdc[26] = q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    dqdc[34] = q_nocor;
    dqdc[35] = q_nocor;
    dqdc[36] = q_nocor;
    dqdc[37] = q_nocor;
    dqdc[38] = q_nocor;
    dqdc[39] = q_nocor;
    dqdc[40] = q_nocor;
    dqdc[41] = q_nocor;
    dqdc[42] = q_nocor;
    dqdc[43] = q_nocor;
    dqdc[44] = q_nocor;
    dqdc[45] = q_nocor;
    dqdc[46] = q_nocor;
    dqdc[47] = q_nocor;
    dqdc[48] = q_nocor;
    dqdc[49] = q_nocor;
    dqdc[50] = q_nocor;
    dqdc[51] = q_nocor;
    dqdc[52] = q_nocor;
    dqdc[53] = q_nocor;
    dqdc[54] = q_nocor;
    dqdc[55] = q_nocor;
    dqdc[56] = q_nocor;
    dqdc[57] = q_nocor;
    dqdc[58] = q_nocor;
    dqdc[59] = q_nocor;
    dqdc[60] = q_nocor;
    dqdc[61] = q_nocor;
    dqdc[62] = q_nocor;
    dqdc[63] = q_nocor;
    dqdc[64] = q_nocor;
    dqdc[65] = q_nocor;
    dqdc[66] = q_nocor;
    dqdc[67] = q_nocor;
    dqdc[68] = q_nocor;
    dqdc[69] = q_nocor;
    dqdc[70] = q_nocor;
    dqdc[71] = q_nocor;
    dqdc[72] = q_nocor;
    dqdc[73] = q_nocor;
    dqdc[74] = q_nocor;
    dqdc[75] = q_nocor;
    dqdc[76] = q_nocor;
    dqdc[77] = q_nocor;
    dqdc[78] = q_nocor;
    dqdc[79] = q_nocor;
    dqdc[80] = q_nocor;
    dqdc[81] = q_nocor;
    dqdc[82] = q_nocor;
    dqdc[83] = q_nocor;
    dqdc[84] = q_nocor;
    dqdc[85] = q_nocor;
    dqdc[86] = q_nocor;
    dqdc[87] = q_nocor;
    for (int k = 0; k < 88; k++) {
      J[89 * k + 0] += dqdc[k];
      J[89 * k + 4] += dqdc[k];
      J[89 * k + 5] -= dqdc[k];
    }
  }
  J[7832] += dqdT; // dwdot[h]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT

  // reaction 42: h + oh + M => h2o + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[1] + (12 - 1) * sc[5] + (1.9 - 1) * sc[6] +
          (3.8 - 1) * sc[8];
  // forward
  phi_f = sc[0] * sc[4];
  k_f = 22500000000 * exp(-2 * logT);
  dlnkfdT = -2 * invT;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q; // h
  wdot[4] -= q; // oh
  wdot[5] += q; // h2o
  // for convenience
  k_f *= alpha;
  if (consP == 1) {
    // d()/d[h]
    dqdci = +k_f * sc[4];
    J[0] -= dqdci; // dwdot[h]/d[h]
    J[4] -= dqdci; // dwdot[oh]/d[h]
    J[5] += dqdci; // dwdot[h2o]/d[h]
    // d()/d[h2]
    dqdci = (2.5 - 1) * q_nocor;
    J[89] -= dqdci; // dwdot[h]/d[h2]
    J[93] -= dqdci; // dwdot[oh]/d[h2]
    J[94] += dqdci; // dwdot[h2o]/d[h2]
    // d()/d[oh]
    dqdci = +k_f * sc[0];
    J[356] -= dqdci; // dwdot[h]/d[oh]
    J[360] -= dqdci; // dwdot[oh]/d[oh]
    J[361] += dqdci; // dwdot[h2o]/d[oh]
    // d()/d[h2o]
    dqdci = (12 - 1) * q_nocor;
    J[445] -= dqdci; // dwdot[h]/d[h2o]
    J[449] -= dqdci; // dwdot[oh]/d[h2o]
    J[450] += dqdci; // dwdot[h2o]/d[h2o]
    // d()/d[co]
    dqdci = (1.9 - 1) * q_nocor;
    J[534] -= dqdci; // dwdot[h]/d[co]
    J[538] -= dqdci; // dwdot[oh]/d[co]
    J[539] += dqdci; // dwdot[h2o]/d[co]
    // d()/d[co2]
    dqdci = (3.8 - 1) * q_nocor;
    J[712] -= dqdci; // dwdot[h]/d[co2]
    J[716] -= dqdci; // dwdot[oh]/d[co2]
    J[717] += dqdci; // dwdot[h2o]/d[co2]
  } else {
    dqdc[0] = q_nocor + k_f * sc[4];
    dqdc[1] = 2.5 * q_nocor;
    dqdc[2] = q_nocor;
    dqdc[3] = q_nocor;
    dqdc[4] = q_nocor + k_f * sc[0];
    dqdc[5] = 12 * q_nocor;
    dqdc[6] = 1.9 * q_nocor;
    dqdc[7] = q_nocor;
    dqdc[8] = 3.8 * q_nocor;
    dqdc[9] = q_nocor;
    dqdc[10] = q_nocor;
    dqdc[11] = q_nocor;
    dqdc[12] = q_nocor;
    dqdc[13] = q_nocor;
    dqdc[14] = q_nocor;
    dqdc[15] = q_nocor;
    dqdc[16] = q_nocor;
    dqdc[17] = q_nocor;
    dqdc[18] = q_nocor;
    dqdc[19] = q_nocor;
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[25] = q_nocor;
    dqdc[26] = q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    dqdc[34] = q_nocor;
    dqdc[35] = q_nocor;
    dqdc[36] = q_nocor;
    dqdc[37] = q_nocor;
    dqdc[38] = q_nocor;
    dqdc[39] = q_nocor;
    dqdc[40] = q_nocor;
    dqdc[41] = q_nocor;
    dqdc[42] = q_nocor;
    dqdc[43] = q_nocor;
    dqdc[44] = q_nocor;
    dqdc[45] = q_nocor;
    dqdc[46] = q_nocor;
    dqdc[47] = q_nocor;
    dqdc[48] = q_nocor;
    dqdc[49] = q_nocor;
    dqdc[50] = q_nocor;
    dqdc[51] = q_nocor;
    dqdc[52] = q_nocor;
    dqdc[53] = q_nocor;
    dqdc[54] = q_nocor;
    dqdc[55] = q_nocor;
    dqdc[56] = q_nocor;
    dqdc[57] = q_nocor;
    dqdc[58] = q_nocor;
    dqdc[59] = q_nocor;
    dqdc[60] = q_nocor;
    dqdc[61] = q_nocor;
    dqdc[62] = q_nocor;
    dqdc[63] = q_nocor;
    dqdc[64] = q_nocor;
    dqdc[65] = q_nocor;
    dqdc[66] = q_nocor;
    dqdc[67] = q_nocor;
    dqdc[68] = q_nocor;
    dqdc[69] = q_nocor;
    dqdc[70] = q_nocor;
    dqdc[71] = q_nocor;
    dqdc[72] = q_nocor;
    dqdc[73] = q_nocor;
    dqdc[74] = q_nocor;
    dqdc[75] = q_nocor;
    dqdc[76] = q_nocor;
    dqdc[77] = q_nocor;
    dqdc[78] = q_nocor;
    dqdc[79] = q_nocor;
    dqdc[80] = q_nocor;
    dqdc[81] = q_nocor;
    dqdc[82] = q_nocor;
    dqdc[83] = q_nocor;
    dqdc[84] = q_nocor;
    dqdc[85] = q_nocor;
    dqdc[86] = q_nocor;
    dqdc[87] = q_nocor;
    for (int k = 0; k < 88; k++) {
      J[89 * k + 0] -= dqdc[k];
      J[89 * k + 4] -= dqdc[k];
      J[89 * k + 5] += dqdc[k];
    }
  }
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT

  // reaction 51: ch2o + M => h + hco + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[13];
  k_f = 6.283e+23 * exp(-3.57 * logT - (46899.7932529999) * invT);
  dlnkfdT = -3.57 * invT + (46899.7932529999) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[7] += q;  // hco
  wdot[13] -= q; // ch2o
  // for convenience
  k_f *= alpha;
  if (consP == 1) {
    // d()/d[ch2o]
    dqdci = +k_f;
    J[1157] += dqdci; // dwdot[h]/d[ch2o]
    J[1164] += dqdci; // dwdot[hco]/d[ch2o]
    J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  } else {
    dqdc[0] = q_nocor;
    dqdc[1] = q_nocor;
    dqdc[2] = q_nocor;
    dqdc[3] = q_nocor;
    dqdc[4] = q_nocor;
    dqdc[5] = q_nocor;
    dqdc[6] = q_nocor;
    dqdc[7] = q_nocor;
    dqdc[8] = q_nocor;
    dqdc[9] = q_nocor;
    dqdc[10] = q_nocor;
    dqdc[11] = q_nocor;
    dqdc[12] = q_nocor;
    dqdc[13] = q_nocor + k_f;
    dqdc[14] = q_nocor;
    dqdc[15] = q_nocor;
    dqdc[16] = q_nocor;
    dqdc[17] = q_nocor;
    dqdc[18] = q_nocor;
    dqdc[19] = q_nocor;
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[25] = q_nocor;
    dqdc[26] = q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    dqdc[34] = q_nocor;
    dqdc[35] = q_nocor;
    dqdc[36] = q_nocor;
    dqdc[37] = q_nocor;
    dqdc[38] = q_nocor;
    dqdc[39] = q_nocor;
    dqdc[40] = q_nocor;
    dqdc[41] = q_nocor;
    dqdc[42] = q_nocor;
    dqdc[43] = q_nocor;
    dqdc[44] = q_nocor;
    dqdc[45] = q_nocor;
    dqdc[46] = q_nocor;
    dqdc[47] = q_nocor;
    dqdc[48] = q_nocor;
    dqdc[49] = q_nocor;
    dqdc[50] = q_nocor;
    dqdc[51] = q_nocor;
    dqdc[52] = q_nocor;
    dqdc[53] = q_nocor;
    dqdc[54] = q_nocor;
    dqdc[55] = q_nocor;
    dqdc[56] = q_nocor;
    dqdc[57] = q_nocor;
    dqdc[58] = q_nocor;
    dqdc[59] = q_nocor;
    dqdc[60] = q_nocor;
    dqdc[61] = q_nocor;
    dqdc[62] = q_nocor;
    dqdc[63] = q_nocor;
    dqdc[64] = q_nocor;
    dqdc[65] = q_nocor;
    dqdc[66] = q_nocor;
    dqdc[67] = q_nocor;
    dqdc[68] = q_nocor;
    dqdc[69] = q_nocor;
    dqdc[70] = q_nocor;
    dqdc[71] = q_nocor;
    dqdc[72] = q_nocor;
    dqdc[73] = q_nocor;
    dqdc[74] = q_nocor;
    dqdc[75] = q_nocor;
    dqdc[76] = q_nocor;
    dqdc[77] = q_nocor;
    dqdc[78] = q_nocor;
    dqdc[79] = q_nocor;
    dqdc[80] = q_nocor;
    dqdc[81] = q_nocor;
    dqdc[82] = q_nocor;
    dqdc[83] = q_nocor;
    dqdc[84] = q_nocor;
    dqdc[85] = q_nocor;
    dqdc[86] = q_nocor;
    dqdc[87] = q_nocor;
    for (int k = 0; k < 88; k++) {
      J[89 * k + 0] += dqdc[k];
      J[89 * k + 7] += dqdc[k];
      J[89 * k + 13] -= dqdc[k];
    }
  }
  J[7832] += dqdT; // dwdot[h]/dT
  J[7839] += dqdT; // dwdot[hco]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT

  // reaction 52: h + hco + M => ch2o + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[0] * sc[7];
  k_f = 2660000000000 * exp(-2.57 * logT - (214.873516298615) * invT);
  dlnkfdT = -2.57 * invT + (214.873516298615) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[7] -= q;  // hco
  wdot[13] += q; // ch2o
  // for convenience
  k_f *= alpha;
  if (consP == 1) {
    // d()/d[h]
    dqdci = +k_f * sc[7];
    J[0] -= dqdci;  // dwdot[h]/d[h]
    J[7] -= dqdci;  // dwdot[hco]/d[h]
    J[13] += dqdci; // dwdot[ch2o]/d[h]
    // d()/d[hco]
    dqdci = +k_f * sc[0];
    J[623] -= dqdci; // dwdot[h]/d[hco]
    J[630] -= dqdci; // dwdot[hco]/d[hco]
    J[636] += dqdci; // dwdot[ch2o]/d[hco]
  } else {
    dqdc[0] = q_nocor + k_f * sc[7];
    dqdc[1] = q_nocor;
    dqdc[2] = q_nocor;
    dqdc[3] = q_nocor;
    dqdc[4] = q_nocor;
    dqdc[5] = q_nocor;
    dqdc[6] = q_nocor;
    dqdc[7] = q_nocor + k_f * sc[0];
    dqdc[8] = q_nocor;
    dqdc[9] = q_nocor;
    dqdc[10] = q_nocor;
    dqdc[11] = q_nocor;
    dqdc[12] = q_nocor;
    dqdc[13] = q_nocor;
    dqdc[14] = q_nocor;
    dqdc[15] = q_nocor;
    dqdc[16] = q_nocor;
    dqdc[17] = q_nocor;
    dqdc[18] = q_nocor;
    dqdc[19] = q_nocor;
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[25] = q_nocor;
    dqdc[26] = q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    dqdc[34] = q_nocor;
    dqdc[35] = q_nocor;
    dqdc[36] = q_nocor;
    dqdc[37] = q_nocor;
    dqdc[38] = q_nocor;
    dqdc[39] = q_nocor;
    dqdc[40] = q_nocor;
    dqdc[41] = q_nocor;
    dqdc[42] = q_nocor;
    dqdc[43] = q_nocor;
    dqdc[44] = q_nocor;
    dqdc[45] = q_nocor;
    dqdc[46] = q_nocor;
    dqdc[47] = q_nocor;
    dqdc[48] = q_nocor;
    dqdc[49] = q_nocor;
    dqdc[50] = q_nocor;
    dqdc[51] = q_nocor;
    dqdc[52] = q_nocor;
    dqdc[53] = q_nocor;
    dqdc[54] = q_nocor;
    dqdc[55] = q_nocor;
    dqdc[56] = q_nocor;
    dqdc[57] = q_nocor;
    dqdc[58] = q_nocor;
    dqdc[59] = q_nocor;
    dqdc[60] = q_nocor;
    dqdc[61] = q_nocor;
    dqdc[62] = q_nocor;
    dqdc[63] = q_nocor;
    dqdc[64] = q_nocor;
    dqdc[65] = q_nocor;
    dqdc[66] = q_nocor;
    dqdc[67] = q_nocor;
    dqdc[68] = q_nocor;
    dqdc[69] = q_nocor;
    dqdc[70] = q_nocor;
    dqdc[71] = q_nocor;
    dqdc[72] = q_nocor;
    dqdc[73] = q_nocor;
    dqdc[74] = q_nocor;
    dqdc[75] = q_nocor;
    dqdc[76] = q_nocor;
    dqdc[77] = q_nocor;
    dqdc[78] = q_nocor;
    dqdc[79] = q_nocor;
    dqdc[80] = q_nocor;
    dqdc[81] = q_nocor;
    dqdc[82] = q_nocor;
    dqdc[83] = q_nocor;
    dqdc[84] = q_nocor;
    dqdc[85] = q_nocor;
    dqdc[86] = q_nocor;
    dqdc[87] = q_nocor;
    for (int k = 0; k < 88; k++) {
      J[89 * k + 0] -= dqdc[k];
      J[89 * k + 7] -= dqdc[k];
      J[89 * k + 13] += dqdc[k];
    }
  }
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7839] -= dqdT; // dwdot[hco]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT

  // reaction 96: oh + M => h + o + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[1] + (12 - 1) * sc[5] + (1.9 - 1) * sc[6] +
          (3.8 - 1) * sc[8];
  // forward
  phi_f = sc[4];
  k_f = 3.909e+16 * exp(-2 * logT - (52988.714909237) * invT);
  dlnkfdT = -2 * invT + (52988.714909237) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q; // h
  wdot[2] += q; // o
  wdot[4] -= q; // oh
  // for convenience
  k_f *= alpha;
  if (consP == 1) {
    // d()/d[h2]
    dqdci = (2.5 - 1) * q_nocor;
    J[89] += dqdci; // dwdot[h]/d[h2]
    J[91] += dqdci; // dwdot[o]/d[h2]
    J[93] -= dqdci; // dwdot[oh]/d[h2]
    // d()/d[oh]
    dqdci = +k_f;
    J[356] += dqdci; // dwdot[h]/d[oh]
    J[358] += dqdci; // dwdot[o]/d[oh]
    J[360] -= dqdci; // dwdot[oh]/d[oh]
    // d()/d[h2o]
    dqdci = (12 - 1) * q_nocor;
    J[445] += dqdci; // dwdot[h]/d[h2o]
    J[447] += dqdci; // dwdot[o]/d[h2o]
    J[449] -= dqdci; // dwdot[oh]/d[h2o]
    // d()/d[co]
    dqdci = (1.9 - 1) * q_nocor;
    J[534] += dqdci; // dwdot[h]/d[co]
    J[536] += dqdci; // dwdot[o]/d[co]
    J[538] -= dqdci; // dwdot[oh]/d[co]
    // d()/d[co2]
    dqdci = (3.8 - 1) * q_nocor;
    J[712] += dqdci; // dwdot[h]/d[co2]
    J[714] += dqdci; // dwdot[o]/d[co2]
    J[716] -= dqdci; // dwdot[oh]/d[co2]
  } else {
    dqdc[0] = q_nocor;
    dqdc[1] = 2.5 * q_nocor;
    dqdc[2] = q_nocor;
    dqdc[3] = q_nocor;
    dqdc[4] = q_nocor + k_f;
    dqdc[5] = 12 * q_nocor;
    dqdc[6] = 1.9 * q_nocor;
    dqdc[7] = q_nocor;
    dqdc[8] = 3.8 * q_nocor;
    dqdc[9] = q_nocor;
    dqdc[10] = q_nocor;
    dqdc[11] = q_nocor;
    dqdc[12] = q_nocor;
    dqdc[13] = q_nocor;
    dqdc[14] = q_nocor;
    dqdc[15] = q_nocor;
    dqdc[16] = q_nocor;
    dqdc[17] = q_nocor;
    dqdc[18] = q_nocor;
    dqdc[19] = q_nocor;
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[25] = q_nocor;
    dqdc[26] = q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    dqdc[34] = q_nocor;
    dqdc[35] = q_nocor;
    dqdc[36] = q_nocor;
    dqdc[37] = q_nocor;
    dqdc[38] = q_nocor;
    dqdc[39] = q_nocor;
    dqdc[40] = q_nocor;
    dqdc[41] = q_nocor;
    dqdc[42] = q_nocor;
    dqdc[43] = q_nocor;
    dqdc[44] = q_nocor;
    dqdc[45] = q_nocor;
    dqdc[46] = q_nocor;
    dqdc[47] = q_nocor;
    dqdc[48] = q_nocor;
    dqdc[49] = q_nocor;
    dqdc[50] = q_nocor;
    dqdc[51] = q_nocor;
    dqdc[52] = q_nocor;
    dqdc[53] = q_nocor;
    dqdc[54] = q_nocor;
    dqdc[55] = q_nocor;
    dqdc[56] = q_nocor;
    dqdc[57] = q_nocor;
    dqdc[58] = q_nocor;
    dqdc[59] = q_nocor;
    dqdc[60] = q_nocor;
    dqdc[61] = q_nocor;
    dqdc[62] = q_nocor;
    dqdc[63] = q_nocor;
    dqdc[64] = q_nocor;
    dqdc[65] = q_nocor;
    dqdc[66] = q_nocor;
    dqdc[67] = q_nocor;
    dqdc[68] = q_nocor;
    dqdc[69] = q_nocor;
    dqdc[70] = q_nocor;
    dqdc[71] = q_nocor;
    dqdc[72] = q_nocor;
    dqdc[73] = q_nocor;
    dqdc[74] = q_nocor;
    dqdc[75] = q_nocor;
    dqdc[76] = q_nocor;
    dqdc[77] = q_nocor;
    dqdc[78] = q_nocor;
    dqdc[79] = q_nocor;
    dqdc[80] = q_nocor;
    dqdc[81] = q_nocor;
    dqdc[82] = q_nocor;
    dqdc[83] = q_nocor;
    dqdc[84] = q_nocor;
    dqdc[85] = q_nocor;
    dqdc[86] = q_nocor;
    dqdc[87] = q_nocor;
    for (int k = 0; k < 88; k++) {
      J[89 * k + 0] += dqdc[k];
      J[89 * k + 2] += dqdc[k];
      J[89 * k + 4] -= dqdc[k];
    }
  }
  J[7832] += dqdT; // dwdot[h]/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT

  // reaction 97: h + o + M => oh + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[1] + (12 - 1) * sc[5] + (1.9 - 1) * sc[6] +
          (3.8 - 1) * sc[8];
  // forward
  phi_f = sc[0] * sc[2];
  k_f = 4720000 * exp(-1 * logT);
  dlnkfdT = -1 * invT;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q; // h
  wdot[2] -= q; // o
  wdot[4] += q; // oh
  // for convenience
  k_f *= alpha;
  if (consP == 1) {
    // d()/d[h]
    dqdci = +k_f * sc[2];
    J[0] -= dqdci; // dwdot[h]/d[h]
    J[2] -= dqdci; // dwdot[o]/d[h]
    J[4] += dqdci; // dwdot[oh]/d[h]
    // d()/d[h2]
    dqdci = (2.5 - 1) * q_nocor;
    J[89] -= dqdci; // dwdot[h]/d[h2]
    J[91] -= dqdci; // dwdot[o]/d[h2]
    J[93] += dqdci; // dwdot[oh]/d[h2]
    // d()/d[o]
    dqdci = +k_f * sc[0];
    J[178] -= dqdci; // dwdot[h]/d[o]
    J[180] -= dqdci; // dwdot[o]/d[o]
    J[182] += dqdci; // dwdot[oh]/d[o]
    // d()/d[h2o]
    dqdci = (12 - 1) * q_nocor;
    J[445] -= dqdci; // dwdot[h]/d[h2o]
    J[447] -= dqdci; // dwdot[o]/d[h2o]
    J[449] += dqdci; // dwdot[oh]/d[h2o]
    // d()/d[co]
    dqdci = (1.9 - 1) * q_nocor;
    J[534] -= dqdci; // dwdot[h]/d[co]
    J[536] -= dqdci; // dwdot[o]/d[co]
    J[538] += dqdci; // dwdot[oh]/d[co]
    // d()/d[co2]
    dqdci = (3.8 - 1) * q_nocor;
    J[712] -= dqdci; // dwdot[h]/d[co2]
    J[714] -= dqdci; // dwdot[o]/d[co2]
    J[716] += dqdci; // dwdot[oh]/d[co2]
  } else {
    dqdc[0] = q_nocor + k_f * sc[2];
    dqdc[1] = 2.5 * q_nocor;
    dqdc[2] = q_nocor + k_f * sc[0];
    dqdc[3] = q_nocor;
    dqdc[4] = q_nocor;
    dqdc[5] = 12 * q_nocor;
    dqdc[6] = 1.9 * q_nocor;
    dqdc[7] = q_nocor;
    dqdc[8] = 3.8 * q_nocor;
    dqdc[9] = q_nocor;
    dqdc[10] = q_nocor;
    dqdc[11] = q_nocor;
    dqdc[12] = q_nocor;
    dqdc[13] = q_nocor;
    dqdc[14] = q_nocor;
    dqdc[15] = q_nocor;
    dqdc[16] = q_nocor;
    dqdc[17] = q_nocor;
    dqdc[18] = q_nocor;
    dqdc[19] = q_nocor;
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[25] = q_nocor;
    dqdc[26] = q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    dqdc[34] = q_nocor;
    dqdc[35] = q_nocor;
    dqdc[36] = q_nocor;
    dqdc[37] = q_nocor;
    dqdc[38] = q_nocor;
    dqdc[39] = q_nocor;
    dqdc[40] = q_nocor;
    dqdc[41] = q_nocor;
    dqdc[42] = q_nocor;
    dqdc[43] = q_nocor;
    dqdc[44] = q_nocor;
    dqdc[45] = q_nocor;
    dqdc[46] = q_nocor;
    dqdc[47] = q_nocor;
    dqdc[48] = q_nocor;
    dqdc[49] = q_nocor;
    dqdc[50] = q_nocor;
    dqdc[51] = q_nocor;
    dqdc[52] = q_nocor;
    dqdc[53] = q_nocor;
    dqdc[54] = q_nocor;
    dqdc[55] = q_nocor;
    dqdc[56] = q_nocor;
    dqdc[57] = q_nocor;
    dqdc[58] = q_nocor;
    dqdc[59] = q_nocor;
    dqdc[60] = q_nocor;
    dqdc[61] = q_nocor;
    dqdc[62] = q_nocor;
    dqdc[63] = q_nocor;
    dqdc[64] = q_nocor;
    dqdc[65] = q_nocor;
    dqdc[66] = q_nocor;
    dqdc[67] = q_nocor;
    dqdc[68] = q_nocor;
    dqdc[69] = q_nocor;
    dqdc[70] = q_nocor;
    dqdc[71] = q_nocor;
    dqdc[72] = q_nocor;
    dqdc[73] = q_nocor;
    dqdc[74] = q_nocor;
    dqdc[75] = q_nocor;
    dqdc[76] = q_nocor;
    dqdc[77] = q_nocor;
    dqdc[78] = q_nocor;
    dqdc[79] = q_nocor;
    dqdc[80] = q_nocor;
    dqdc[81] = q_nocor;
    dqdc[82] = q_nocor;
    dqdc[83] = q_nocor;
    dqdc[84] = q_nocor;
    dqdc[85] = q_nocor;
    dqdc[86] = q_nocor;
    dqdc[87] = q_nocor;
    for (int k = 0; k < 88; k++) {
      J[89 * k + 0] -= dqdc[k];
      J[89 * k + 2] -= dqdc[k];
      J[89 * k + 4] += dqdc[k];
    }
  }
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7836] += dqdT; // dwdot[oh]/dT

  // reaction 98: o2 + M => 2 o + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[1] + (12 - 1) * sc[5] + (1.9 - 1) * sc[6] +
          (3.8 - 1) * sc[8];
  // forward
  phi_f = sc[3];
  k_f = 647300000000000 * exp(-1.5 * logT - (61140.8248952734) * invT);
  dlnkfdT = -1.5 * invT + (61140.8248952734) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += 2 * q; // o
  wdot[3] -= q;     // o2
  // for convenience
  k_f *= alpha;
  if (consP == 1) {
    // d()/d[h2]
    dqdci = (2.5 - 1) * q_nocor;
    J[91] += 2 * dqdci; // dwdot[o]/d[h2]
    J[92] -= dqdci;     // dwdot[o2]/d[h2]
    // d()/d[o2]
    dqdci = +k_f;
    J[269] += 2 * dqdci; // dwdot[o]/d[o2]
    J[270] -= dqdci;     // dwdot[o2]/d[o2]
    // d()/d[h2o]
    dqdci = (12 - 1) * q_nocor;
    J[447] += 2 * dqdci; // dwdot[o]/d[h2o]
    J[448] -= dqdci;     // dwdot[o2]/d[h2o]
    // d()/d[co]
    dqdci = (1.9 - 1) * q_nocor;
    J[536] += 2 * dqdci; // dwdot[o]/d[co]
    J[537] -= dqdci;     // dwdot[o2]/d[co]
    // d()/d[co2]
    dqdci = (3.8 - 1) * q_nocor;
    J[714] += 2 * dqdci; // dwdot[o]/d[co2]
    J[715] -= dqdci;     // dwdot[o2]/d[co2]
  } else {
    dqdc[0] = q_nocor;
    dqdc[1] = 2.5 * q_nocor;
    dqdc[2] = q_nocor;
    dqdc[3] = q_nocor + k_f;
    dqdc[4] = q_nocor;
    dqdc[5] = 12 * q_nocor;
    dqdc[6] = 1.9 * q_nocor;
    dqdc[7] = q_nocor;
    dqdc[8] = 3.8 * q_nocor;
    dqdc[9] = q_nocor;
    dqdc[10] = q_nocor;
    dqdc[11] = q_nocor;
    dqdc[12] = q_nocor;
    dqdc[13] = q_nocor;
    dqdc[14] = q_nocor;
    dqdc[15] = q_nocor;
    dqdc[16] = q_nocor;
    dqdc[17] = q_nocor;
    dqdc[18] = q_nocor;
    dqdc[19] = q_nocor;
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[25] = q_nocor;
    dqdc[26] = q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    dqdc[34] = q_nocor;
    dqdc[35] = q_nocor;
    dqdc[36] = q_nocor;
    dqdc[37] = q_nocor;
    dqdc[38] = q_nocor;
    dqdc[39] = q_nocor;
    dqdc[40] = q_nocor;
    dqdc[41] = q_nocor;
    dqdc[42] = q_nocor;
    dqdc[43] = q_nocor;
    dqdc[44] = q_nocor;
    dqdc[45] = q_nocor;
    dqdc[46] = q_nocor;
    dqdc[47] = q_nocor;
    dqdc[48] = q_nocor;
    dqdc[49] = q_nocor;
    dqdc[50] = q_nocor;
    dqdc[51] = q_nocor;
    dqdc[52] = q_nocor;
    dqdc[53] = q_nocor;
    dqdc[54] = q_nocor;
    dqdc[55] = q_nocor;
    dqdc[56] = q_nocor;
    dqdc[57] = q_nocor;
    dqdc[58] = q_nocor;
    dqdc[59] = q_nocor;
    dqdc[60] = q_nocor;
    dqdc[61] = q_nocor;
    dqdc[62] = q_nocor;
    dqdc[63] = q_nocor;
    dqdc[64] = q_nocor;
    dqdc[65] = q_nocor;
    dqdc[66] = q_nocor;
    dqdc[67] = q_nocor;
    dqdc[68] = q_nocor;
    dqdc[69] = q_nocor;
    dqdc[70] = q_nocor;
    dqdc[71] = q_nocor;
    dqdc[72] = q_nocor;
    dqdc[73] = q_nocor;
    dqdc[74] = q_nocor;
    dqdc[75] = q_nocor;
    dqdc[76] = q_nocor;
    dqdc[77] = q_nocor;
    dqdc[78] = q_nocor;
    dqdc[79] = q_nocor;
    dqdc[80] = q_nocor;
    dqdc[81] = q_nocor;
    dqdc[82] = q_nocor;
    dqdc[83] = q_nocor;
    dqdc[84] = q_nocor;
    dqdc[85] = q_nocor;
    dqdc[86] = q_nocor;
    dqdc[87] = q_nocor;
    for (int k = 0; k < 88; k++) {
      J[89 * k + 2] += 2 * dqdc[k];
      J[89 * k + 3] -= dqdc[k];
    }
  }
  J[7834] += 2 * dqdT; // dwdot[o]/dT
  J[7835] -= dqdT;     // dwdot[o2]/dT

  // reaction 99: 2 o + M => o2 + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[1] + (12 - 1) * sc[5] + (1.9 - 1) * sc[6] +
          (3.8 - 1) * sc[8];
  // forward
  phi_f = (sc[2] * sc[2]);
  k_f = 6170 * exp(-0.5 * logT);
  dlnkfdT = -0.5 * invT;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= 2 * q; // o
  wdot[3] += q;     // o2
  // for convenience
  k_f *= alpha;
  if (consP == 1) {
    // d()/d[h2]
    dqdci = (2.5 - 1) * q_nocor;
    J[91] += -2 * dqdci; // dwdot[o]/d[h2]
    J[92] += dqdci;      // dwdot[o2]/d[h2]
    // d()/d[o]
    dqdci = +k_f * 2.000000 * sc[2];
    J[180] += -2 * dqdci; // dwdot[o]/d[o]
    J[181] += dqdci;      // dwdot[o2]/d[o]
    // d()/d[h2o]
    dqdci = (12 - 1) * q_nocor;
    J[447] += -2 * dqdci; // dwdot[o]/d[h2o]
    J[448] += dqdci;      // dwdot[o2]/d[h2o]
    // d()/d[co]
    dqdci = (1.9 - 1) * q_nocor;
    J[536] += -2 * dqdci; // dwdot[o]/d[co]
    J[537] += dqdci;      // dwdot[o2]/d[co]
    // d()/d[co2]
    dqdci = (3.8 - 1) * q_nocor;
    J[714] += -2 * dqdci; // dwdot[o]/d[co2]
    J[715] += dqdci;      // dwdot[o2]/d[co2]
  } else {
    dqdc[0] = q_nocor;
    dqdc[1] = 2.5 * q_nocor;
    dqdc[2] = q_nocor + k_f * 2.000000 * sc[2];
    dqdc[3] = q_nocor;
    dqdc[4] = q_nocor;
    dqdc[5] = 12 * q_nocor;
    dqdc[6] = 1.9 * q_nocor;
    dqdc[7] = q_nocor;
    dqdc[8] = 3.8 * q_nocor;
    dqdc[9] = q_nocor;
    dqdc[10] = q_nocor;
    dqdc[11] = q_nocor;
    dqdc[12] = q_nocor;
    dqdc[13] = q_nocor;
    dqdc[14] = q_nocor;
    dqdc[15] = q_nocor;
    dqdc[16] = q_nocor;
    dqdc[17] = q_nocor;
    dqdc[18] = q_nocor;
    dqdc[19] = q_nocor;
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[25] = q_nocor;
    dqdc[26] = q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    dqdc[34] = q_nocor;
    dqdc[35] = q_nocor;
    dqdc[36] = q_nocor;
    dqdc[37] = q_nocor;
    dqdc[38] = q_nocor;
    dqdc[39] = q_nocor;
    dqdc[40] = q_nocor;
    dqdc[41] = q_nocor;
    dqdc[42] = q_nocor;
    dqdc[43] = q_nocor;
    dqdc[44] = q_nocor;
    dqdc[45] = q_nocor;
    dqdc[46] = q_nocor;
    dqdc[47] = q_nocor;
    dqdc[48] = q_nocor;
    dqdc[49] = q_nocor;
    dqdc[50] = q_nocor;
    dqdc[51] = q_nocor;
    dqdc[52] = q_nocor;
    dqdc[53] = q_nocor;
    dqdc[54] = q_nocor;
    dqdc[55] = q_nocor;
    dqdc[56] = q_nocor;
    dqdc[57] = q_nocor;
    dqdc[58] = q_nocor;
    dqdc[59] = q_nocor;
    dqdc[60] = q_nocor;
    dqdc[61] = q_nocor;
    dqdc[62] = q_nocor;
    dqdc[63] = q_nocor;
    dqdc[64] = q_nocor;
    dqdc[65] = q_nocor;
    dqdc[66] = q_nocor;
    dqdc[67] = q_nocor;
    dqdc[68] = q_nocor;
    dqdc[69] = q_nocor;
    dqdc[70] = q_nocor;
    dqdc[71] = q_nocor;
    dqdc[72] = q_nocor;
    dqdc[73] = q_nocor;
    dqdc[74] = q_nocor;
    dqdc[75] = q_nocor;
    dqdc[76] = q_nocor;
    dqdc[77] = q_nocor;
    dqdc[78] = q_nocor;
    dqdc[79] = q_nocor;
    dqdc[80] = q_nocor;
    dqdc[81] = q_nocor;
    dqdc[82] = q_nocor;
    dqdc[83] = q_nocor;
    dqdc[84] = q_nocor;
    dqdc[85] = q_nocor;
    dqdc[86] = q_nocor;
    dqdc[87] = q_nocor;
    for (int k = 0; k < 88; k++) {
      J[89 * k + 2] += -2 * dqdc[k];
      J[89 * k + 3] += dqdc[k];
    }
  }
  J[7834] += -2 * dqdT; // dwdot[o]/dT
  J[7835] += dqdT;      // dwdot[o2]/dT

  // reaction 100: h2 + M => 2 h + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[1] + (12 - 1) * sc[5] + (1.9 - 1) * sc[6] +
          (3.8 - 1) * sc[8];
  // forward
  phi_f = sc[1];
  k_f = 45700000000000 * exp(-1.4 * logT - (52535.8199100127) * invT);
  dlnkfdT = -1.4 * invT + (52535.8199100127) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += 2 * q; // h
  wdot[1] -= q;     // h2
  // for convenience
  k_f *= alpha;
  if (consP == 1) {
    // d()/d[h2]
    dqdci = (2.5 - 1) * q_nocor + k_f;
    J[89] += 2 * dqdci; // dwdot[h]/d[h2]
    J[90] -= dqdci;     // dwdot[h2]/d[h2]
    // d()/d[h2o]
    dqdci = (12 - 1) * q_nocor;
    J[445] += 2 * dqdci; // dwdot[h]/d[h2o]
    J[446] -= dqdci;     // dwdot[h2]/d[h2o]
    // d()/d[co]
    dqdci = (1.9 - 1) * q_nocor;
    J[534] += 2 * dqdci; // dwdot[h]/d[co]
    J[535] -= dqdci;     // dwdot[h2]/d[co]
    // d()/d[co2]
    dqdci = (3.8 - 1) * q_nocor;
    J[712] += 2 * dqdci; // dwdot[h]/d[co2]
    J[713] -= dqdci;     // dwdot[h2]/d[co2]
  } else {
    dqdc[0] = q_nocor;
    dqdc[1] = 2.5 * q_nocor + k_f;
    dqdc[2] = q_nocor;
    dqdc[3] = q_nocor;
    dqdc[4] = q_nocor;
    dqdc[5] = 12 * q_nocor;
    dqdc[6] = 1.9 * q_nocor;
    dqdc[7] = q_nocor;
    dqdc[8] = 3.8 * q_nocor;
    dqdc[9] = q_nocor;
    dqdc[10] = q_nocor;
    dqdc[11] = q_nocor;
    dqdc[12] = q_nocor;
    dqdc[13] = q_nocor;
    dqdc[14] = q_nocor;
    dqdc[15] = q_nocor;
    dqdc[16] = q_nocor;
    dqdc[17] = q_nocor;
    dqdc[18] = q_nocor;
    dqdc[19] = q_nocor;
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[25] = q_nocor;
    dqdc[26] = q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    dqdc[34] = q_nocor;
    dqdc[35] = q_nocor;
    dqdc[36] = q_nocor;
    dqdc[37] = q_nocor;
    dqdc[38] = q_nocor;
    dqdc[39] = q_nocor;
    dqdc[40] = q_nocor;
    dqdc[41] = q_nocor;
    dqdc[42] = q_nocor;
    dqdc[43] = q_nocor;
    dqdc[44] = q_nocor;
    dqdc[45] = q_nocor;
    dqdc[46] = q_nocor;
    dqdc[47] = q_nocor;
    dqdc[48] = q_nocor;
    dqdc[49] = q_nocor;
    dqdc[50] = q_nocor;
    dqdc[51] = q_nocor;
    dqdc[52] = q_nocor;
    dqdc[53] = q_nocor;
    dqdc[54] = q_nocor;
    dqdc[55] = q_nocor;
    dqdc[56] = q_nocor;
    dqdc[57] = q_nocor;
    dqdc[58] = q_nocor;
    dqdc[59] = q_nocor;
    dqdc[60] = q_nocor;
    dqdc[61] = q_nocor;
    dqdc[62] = q_nocor;
    dqdc[63] = q_nocor;
    dqdc[64] = q_nocor;
    dqdc[65] = q_nocor;
    dqdc[66] = q_nocor;
    dqdc[67] = q_nocor;
    dqdc[68] = q_nocor;
    dqdc[69] = q_nocor;
    dqdc[70] = q_nocor;
    dqdc[71] = q_nocor;
    dqdc[72] = q_nocor;
    dqdc[73] = q_nocor;
    dqdc[74] = q_nocor;
    dqdc[75] = q_nocor;
    dqdc[76] = q_nocor;
    dqdc[77] = q_nocor;
    dqdc[78] = q_nocor;
    dqdc[79] = q_nocor;
    dqdc[80] = q_nocor;
    dqdc[81] = q_nocor;
    dqdc[82] = q_nocor;
    dqdc[83] = q_nocor;
    dqdc[84] = q_nocor;
    dqdc[85] = q_nocor;
    dqdc[86] = q_nocor;
    dqdc[87] = q_nocor;
    for (int k = 0; k < 88; k++) {
      J[89 * k + 0] += 2 * dqdc[k];
      J[89 * k + 1] -= dqdc[k];
    }
  }
  J[7832] += 2 * dqdT; // dwdot[h]/dT
  J[7833] -= dqdT;     // dwdot[h2]/dT

  // reaction 101: 2 h + M => h2 + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + (2.5 - 1) * sc[1] + (12 - 1) * sc[5] + (1.9 - 1) * sc[6] +
          (3.8 - 1) * sc[8];
  // forward
  phi_f = (sc[0] * sc[0]);
  k_f = 2423 * exp(-0.4 * logT - (-1529.77866404635) * invT);
  dlnkfdT = -0.4 * invT + (-1529.77866404635) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= 2 * q; // h
  wdot[1] += q;     // h2
  // for convenience
  k_f *= alpha;
  if (consP == 1) {
    // d()/d[h]
    dqdci = +k_f * 2.000000 * sc[0];
    J[0] += -2 * dqdci; // dwdot[h]/d[h]
    J[1] += dqdci;      // dwdot[h2]/d[h]
    // d()/d[h2]
    dqdci = (2.5 - 1) * q_nocor;
    J[89] += -2 * dqdci; // dwdot[h]/d[h2]
    J[90] += dqdci;      // dwdot[h2]/d[h2]
    // d()/d[h2o]
    dqdci = (12 - 1) * q_nocor;
    J[445] += -2 * dqdci; // dwdot[h]/d[h2o]
    J[446] += dqdci;      // dwdot[h2]/d[h2o]
    // d()/d[co]
    dqdci = (1.9 - 1) * q_nocor;
    J[534] += -2 * dqdci; // dwdot[h]/d[co]
    J[535] += dqdci;      // dwdot[h2]/d[co]
    // d()/d[co2]
    dqdci = (3.8 - 1) * q_nocor;
    J[712] += -2 * dqdci; // dwdot[h]/d[co2]
    J[713] += dqdci;      // dwdot[h2]/d[co2]
  } else {
    dqdc[0] = q_nocor + k_f * 2.000000 * sc[0];
    dqdc[1] = 2.5 * q_nocor;
    dqdc[2] = q_nocor;
    dqdc[3] = q_nocor;
    dqdc[4] = q_nocor;
    dqdc[5] = 12 * q_nocor;
    dqdc[6] = 1.9 * q_nocor;
    dqdc[7] = q_nocor;
    dqdc[8] = 3.8 * q_nocor;
    dqdc[9] = q_nocor;
    dqdc[10] = q_nocor;
    dqdc[11] = q_nocor;
    dqdc[12] = q_nocor;
    dqdc[13] = q_nocor;
    dqdc[14] = q_nocor;
    dqdc[15] = q_nocor;
    dqdc[16] = q_nocor;
    dqdc[17] = q_nocor;
    dqdc[18] = q_nocor;
    dqdc[19] = q_nocor;
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[25] = q_nocor;
    dqdc[26] = q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    dqdc[34] = q_nocor;
    dqdc[35] = q_nocor;
    dqdc[36] = q_nocor;
    dqdc[37] = q_nocor;
    dqdc[38] = q_nocor;
    dqdc[39] = q_nocor;
    dqdc[40] = q_nocor;
    dqdc[41] = q_nocor;
    dqdc[42] = q_nocor;
    dqdc[43] = q_nocor;
    dqdc[44] = q_nocor;
    dqdc[45] = q_nocor;
    dqdc[46] = q_nocor;
    dqdc[47] = q_nocor;
    dqdc[48] = q_nocor;
    dqdc[49] = q_nocor;
    dqdc[50] = q_nocor;
    dqdc[51] = q_nocor;
    dqdc[52] = q_nocor;
    dqdc[53] = q_nocor;
    dqdc[54] = q_nocor;
    dqdc[55] = q_nocor;
    dqdc[56] = q_nocor;
    dqdc[57] = q_nocor;
    dqdc[58] = q_nocor;
    dqdc[59] = q_nocor;
    dqdc[60] = q_nocor;
    dqdc[61] = q_nocor;
    dqdc[62] = q_nocor;
    dqdc[63] = q_nocor;
    dqdc[64] = q_nocor;
    dqdc[65] = q_nocor;
    dqdc[66] = q_nocor;
    dqdc[67] = q_nocor;
    dqdc[68] = q_nocor;
    dqdc[69] = q_nocor;
    dqdc[70] = q_nocor;
    dqdc[71] = q_nocor;
    dqdc[72] = q_nocor;
    dqdc[73] = q_nocor;
    dqdc[74] = q_nocor;
    dqdc[75] = q_nocor;
    dqdc[76] = q_nocor;
    dqdc[77] = q_nocor;
    dqdc[78] = q_nocor;
    dqdc[79] = q_nocor;
    dqdc[80] = q_nocor;
    dqdc[81] = q_nocor;
    dqdc[82] = q_nocor;
    dqdc[83] = q_nocor;
    dqdc[84] = q_nocor;
    dqdc[85] = q_nocor;
    dqdc[86] = q_nocor;
    dqdc[87] = q_nocor;
    for (int k = 0; k < 88; k++) {
      J[89 * k + 0] += -2 * dqdc[k];
      J[89 * k + 1] += dqdc[k];
    }
  }
  J[7832] += -2 * dqdT; // dwdot[h]/dT
  J[7833] += dqdT;      // dwdot[h2]/dT

  // reaction 196: ch2o + M => co + h2 + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[13];
  k_f = 1.826e+26 * exp(-4.42 * logT - (43840.2359249072) * invT);
  dlnkfdT = -4.42 * invT + (43840.2359249072) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] += q;  // h2
  wdot[6] += q;  // co
  wdot[13] -= q; // ch2o
  // for convenience
  k_f *= alpha;
  if (consP == 1) {
    // d()/d[ch2o]
    dqdci = +k_f;
    J[1158] += dqdci; // dwdot[h2]/d[ch2o]
    J[1163] += dqdci; // dwdot[co]/d[ch2o]
    J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  } else {
    dqdc[0] = q_nocor;
    dqdc[1] = q_nocor;
    dqdc[2] = q_nocor;
    dqdc[3] = q_nocor;
    dqdc[4] = q_nocor;
    dqdc[5] = q_nocor;
    dqdc[6] = q_nocor;
    dqdc[7] = q_nocor;
    dqdc[8] = q_nocor;
    dqdc[9] = q_nocor;
    dqdc[10] = q_nocor;
    dqdc[11] = q_nocor;
    dqdc[12] = q_nocor;
    dqdc[13] = q_nocor + k_f;
    dqdc[14] = q_nocor;
    dqdc[15] = q_nocor;
    dqdc[16] = q_nocor;
    dqdc[17] = q_nocor;
    dqdc[18] = q_nocor;
    dqdc[19] = q_nocor;
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[25] = q_nocor;
    dqdc[26] = q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    dqdc[34] = q_nocor;
    dqdc[35] = q_nocor;
    dqdc[36] = q_nocor;
    dqdc[37] = q_nocor;
    dqdc[38] = q_nocor;
    dqdc[39] = q_nocor;
    dqdc[40] = q_nocor;
    dqdc[41] = q_nocor;
    dqdc[42] = q_nocor;
    dqdc[43] = q_nocor;
    dqdc[44] = q_nocor;
    dqdc[45] = q_nocor;
    dqdc[46] = q_nocor;
    dqdc[47] = q_nocor;
    dqdc[48] = q_nocor;
    dqdc[49] = q_nocor;
    dqdc[50] = q_nocor;
    dqdc[51] = q_nocor;
    dqdc[52] = q_nocor;
    dqdc[53] = q_nocor;
    dqdc[54] = q_nocor;
    dqdc[55] = q_nocor;
    dqdc[56] = q_nocor;
    dqdc[57] = q_nocor;
    dqdc[58] = q_nocor;
    dqdc[59] = q_nocor;
    dqdc[60] = q_nocor;
    dqdc[61] = q_nocor;
    dqdc[62] = q_nocor;
    dqdc[63] = q_nocor;
    dqdc[64] = q_nocor;
    dqdc[65] = q_nocor;
    dqdc[66] = q_nocor;
    dqdc[67] = q_nocor;
    dqdc[68] = q_nocor;
    dqdc[69] = q_nocor;
    dqdc[70] = q_nocor;
    dqdc[71] = q_nocor;
    dqdc[72] = q_nocor;
    dqdc[73] = q_nocor;
    dqdc[74] = q_nocor;
    dqdc[75] = q_nocor;
    dqdc[76] = q_nocor;
    dqdc[77] = q_nocor;
    dqdc[78] = q_nocor;
    dqdc[79] = q_nocor;
    dqdc[80] = q_nocor;
    dqdc[81] = q_nocor;
    dqdc[82] = q_nocor;
    dqdc[83] = q_nocor;
    dqdc[84] = q_nocor;
    dqdc[85] = q_nocor;
    dqdc[86] = q_nocor;
    dqdc[87] = q_nocor;
    for (int k = 0; k < 88; k++) {
      J[89 * k + 1] += dqdc[k];
      J[89 * k + 6] += dqdc[k];
      J[89 * k + 13] -= dqdc[k];
    }
  }
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT

  // reaction 197: co + h2 + M => ch2o + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[1] * sc[6];
  k_f = 5.07e+15 * exp(-3.42 * logT - (42446.3257606281) * invT);
  dlnkfdT = -3.42 * invT + (42446.3257606281) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // h2
  wdot[6] -= q;  // co
  wdot[13] += q; // ch2o
  // for convenience
  k_f *= alpha;
  if (consP == 1) {
    // d()/d[h2]
    dqdci = +k_f * sc[6];
    J[90] -= dqdci;  // dwdot[h2]/d[h2]
    J[95] -= dqdci;  // dwdot[co]/d[h2]
    J[102] += dqdci; // dwdot[ch2o]/d[h2]
    // d()/d[co]
    dqdci = +k_f * sc[1];
    J[535] -= dqdci; // dwdot[h2]/d[co]
    J[540] -= dqdci; // dwdot[co]/d[co]
    J[547] += dqdci; // dwdot[ch2o]/d[co]
  } else {
    dqdc[0] = q_nocor;
    dqdc[1] = q_nocor + k_f * sc[6];
    dqdc[2] = q_nocor;
    dqdc[3] = q_nocor;
    dqdc[4] = q_nocor;
    dqdc[5] = q_nocor;
    dqdc[6] = q_nocor + k_f * sc[1];
    dqdc[7] = q_nocor;
    dqdc[8] = q_nocor;
    dqdc[9] = q_nocor;
    dqdc[10] = q_nocor;
    dqdc[11] = q_nocor;
    dqdc[12] = q_nocor;
    dqdc[13] = q_nocor;
    dqdc[14] = q_nocor;
    dqdc[15] = q_nocor;
    dqdc[16] = q_nocor;
    dqdc[17] = q_nocor;
    dqdc[18] = q_nocor;
    dqdc[19] = q_nocor;
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[25] = q_nocor;
    dqdc[26] = q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    dqdc[34] = q_nocor;
    dqdc[35] = q_nocor;
    dqdc[36] = q_nocor;
    dqdc[37] = q_nocor;
    dqdc[38] = q_nocor;
    dqdc[39] = q_nocor;
    dqdc[40] = q_nocor;
    dqdc[41] = q_nocor;
    dqdc[42] = q_nocor;
    dqdc[43] = q_nocor;
    dqdc[44] = q_nocor;
    dqdc[45] = q_nocor;
    dqdc[46] = q_nocor;
    dqdc[47] = q_nocor;
    dqdc[48] = q_nocor;
    dqdc[49] = q_nocor;
    dqdc[50] = q_nocor;
    dqdc[51] = q_nocor;
    dqdc[52] = q_nocor;
    dqdc[53] = q_nocor;
    dqdc[54] = q_nocor;
    dqdc[55] = q_nocor;
    dqdc[56] = q_nocor;
    dqdc[57] = q_nocor;
    dqdc[58] = q_nocor;
    dqdc[59] = q_nocor;
    dqdc[60] = q_nocor;
    dqdc[61] = q_nocor;
    dqdc[62] = q_nocor;
    dqdc[63] = q_nocor;
    dqdc[64] = q_nocor;
    dqdc[65] = q_nocor;
    dqdc[66] = q_nocor;
    dqdc[67] = q_nocor;
    dqdc[68] = q_nocor;
    dqdc[69] = q_nocor;
    dqdc[70] = q_nocor;
    dqdc[71] = q_nocor;
    dqdc[72] = q_nocor;
    dqdc[73] = q_nocor;
    dqdc[74] = q_nocor;
    dqdc[75] = q_nocor;
    dqdc[76] = q_nocor;
    dqdc[77] = q_nocor;
    dqdc[78] = q_nocor;
    dqdc[79] = q_nocor;
    dqdc[80] = q_nocor;
    dqdc[81] = q_nocor;
    dqdc[82] = q_nocor;
    dqdc[83] = q_nocor;
    dqdc[84] = q_nocor;
    dqdc[85] = q_nocor;
    dqdc[86] = q_nocor;
    dqdc[87] = q_nocor;
    for (int k = 0; k < 88; k++) {
      J[89 * k + 1] -= dqdc[k];
      J[89 * k + 6] -= dqdc[k];
      J[89 * k + 13] += dqdc[k];
    }
  }
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT

  // reaction 311: c2h5o + M => ch2o + ch3 + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[37];
  k_f = 1.35e+32 * exp(-6.96 * logT - (11976.5566461523) * invT);
  dlnkfdT = -6.96 * invT + (11976.5566461523) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[13] += q; // ch2o
  wdot[37] -= q; // c2h5o
  // for convenience
  k_f *= alpha;
  if (consP == 1) {
    // d()/d[c2h5o]
    dqdci = +k_f;
    J[3302] += dqdci; // dwdot[ch3]/d[c2h5o]
    J[3306] += dqdci; // dwdot[ch2o]/d[c2h5o]
    J[3330] -= dqdci; // dwdot[c2h5o]/d[c2h5o]
  } else {
    dqdc[0] = q_nocor;
    dqdc[1] = q_nocor;
    dqdc[2] = q_nocor;
    dqdc[3] = q_nocor;
    dqdc[4] = q_nocor;
    dqdc[5] = q_nocor;
    dqdc[6] = q_nocor;
    dqdc[7] = q_nocor;
    dqdc[8] = q_nocor;
    dqdc[9] = q_nocor;
    dqdc[10] = q_nocor;
    dqdc[11] = q_nocor;
    dqdc[12] = q_nocor;
    dqdc[13] = q_nocor;
    dqdc[14] = q_nocor;
    dqdc[15] = q_nocor;
    dqdc[16] = q_nocor;
    dqdc[17] = q_nocor;
    dqdc[18] = q_nocor;
    dqdc[19] = q_nocor;
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[25] = q_nocor;
    dqdc[26] = q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    dqdc[34] = q_nocor;
    dqdc[35] = q_nocor;
    dqdc[36] = q_nocor;
    dqdc[37] = q_nocor + k_f;
    dqdc[38] = q_nocor;
    dqdc[39] = q_nocor;
    dqdc[40] = q_nocor;
    dqdc[41] = q_nocor;
    dqdc[42] = q_nocor;
    dqdc[43] = q_nocor;
    dqdc[44] = q_nocor;
    dqdc[45] = q_nocor;
    dqdc[46] = q_nocor;
    dqdc[47] = q_nocor;
    dqdc[48] = q_nocor;
    dqdc[49] = q_nocor;
    dqdc[50] = q_nocor;
    dqdc[51] = q_nocor;
    dqdc[52] = q_nocor;
    dqdc[53] = q_nocor;
    dqdc[54] = q_nocor;
    dqdc[55] = q_nocor;
    dqdc[56] = q_nocor;
    dqdc[57] = q_nocor;
    dqdc[58] = q_nocor;
    dqdc[59] = q_nocor;
    dqdc[60] = q_nocor;
    dqdc[61] = q_nocor;
    dqdc[62] = q_nocor;
    dqdc[63] = q_nocor;
    dqdc[64] = q_nocor;
    dqdc[65] = q_nocor;
    dqdc[66] = q_nocor;
    dqdc[67] = q_nocor;
    dqdc[68] = q_nocor;
    dqdc[69] = q_nocor;
    dqdc[70] = q_nocor;
    dqdc[71] = q_nocor;
    dqdc[72] = q_nocor;
    dqdc[73] = q_nocor;
    dqdc[74] = q_nocor;
    dqdc[75] = q_nocor;
    dqdc[76] = q_nocor;
    dqdc[77] = q_nocor;
    dqdc[78] = q_nocor;
    dqdc[79] = q_nocor;
    dqdc[80] = q_nocor;
    dqdc[81] = q_nocor;
    dqdc[82] = q_nocor;
    dqdc[83] = q_nocor;
    dqdc[84] = q_nocor;
    dqdc[85] = q_nocor;
    dqdc[86] = q_nocor;
    dqdc[87] = q_nocor;
    for (int k = 0; k < 88; k++) {
      J[89 * k + 9] += dqdc[k];
      J[89 * k + 13] += dqdc[k];
      J[89 * k + 37] -= dqdc[k];
    }
  }
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT
  J[7869] -= dqdT; // dwdot[c2h5o]/dT

  // reaction 312: ch2o + ch3 + M => c2h5o + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[9] * sc[13];
  k_f = 6.442e+24 * exp(-6.99 * logT - (8479.20081880953) * invT);
  dlnkfdT = -6.99 * invT + (8479.20081880953) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[13] -= q; // ch2o
  wdot[37] += q; // c2h5o
  // for convenience
  k_f *= alpha;
  if (consP == 1) {
    // d()/d[ch3]
    dqdci = +k_f * sc[13];
    J[810] -= dqdci; // dwdot[ch3]/d[ch3]
    J[814] -= dqdci; // dwdot[ch2o]/d[ch3]
    J[838] += dqdci; // dwdot[c2h5o]/d[ch3]
    // d()/d[ch2o]
    dqdci = +k_f * sc[9];
    J[1166] -= dqdci; // dwdot[ch3]/d[ch2o]
    J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
    J[1194] += dqdci; // dwdot[c2h5o]/d[ch2o]
  } else {
    dqdc[0] = q_nocor;
    dqdc[1] = q_nocor;
    dqdc[2] = q_nocor;
    dqdc[3] = q_nocor;
    dqdc[4] = q_nocor;
    dqdc[5] = q_nocor;
    dqdc[6] = q_nocor;
    dqdc[7] = q_nocor;
    dqdc[8] = q_nocor;
    dqdc[9] = q_nocor + k_f * sc[13];
    dqdc[10] = q_nocor;
    dqdc[11] = q_nocor;
    dqdc[12] = q_nocor;
    dqdc[13] = q_nocor + k_f * sc[9];
    dqdc[14] = q_nocor;
    dqdc[15] = q_nocor;
    dqdc[16] = q_nocor;
    dqdc[17] = q_nocor;
    dqdc[18] = q_nocor;
    dqdc[19] = q_nocor;
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[25] = q_nocor;
    dqdc[26] = q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    dqdc[34] = q_nocor;
    dqdc[35] = q_nocor;
    dqdc[36] = q_nocor;
    dqdc[37] = q_nocor;
    dqdc[38] = q_nocor;
    dqdc[39] = q_nocor;
    dqdc[40] = q_nocor;
    dqdc[41] = q_nocor;
    dqdc[42] = q_nocor;
    dqdc[43] = q_nocor;
    dqdc[44] = q_nocor;
    dqdc[45] = q_nocor;
    dqdc[46] = q_nocor;
    dqdc[47] = q_nocor;
    dqdc[48] = q_nocor;
    dqdc[49] = q_nocor;
    dqdc[50] = q_nocor;
    dqdc[51] = q_nocor;
    dqdc[52] = q_nocor;
    dqdc[53] = q_nocor;
    dqdc[54] = q_nocor;
    dqdc[55] = q_nocor;
    dqdc[56] = q_nocor;
    dqdc[57] = q_nocor;
    dqdc[58] = q_nocor;
    dqdc[59] = q_nocor;
    dqdc[60] = q_nocor;
    dqdc[61] = q_nocor;
    dqdc[62] = q_nocor;
    dqdc[63] = q_nocor;
    dqdc[64] = q_nocor;
    dqdc[65] = q_nocor;
    dqdc[66] = q_nocor;
    dqdc[67] = q_nocor;
    dqdc[68] = q_nocor;
    dqdc[69] = q_nocor;
    dqdc[70] = q_nocor;
    dqdc[71] = q_nocor;
    dqdc[72] = q_nocor;
    dqdc[73] = q_nocor;
    dqdc[74] = q_nocor;
    dqdc[75] = q_nocor;
    dqdc[76] = q_nocor;
    dqdc[77] = q_nocor;
    dqdc[78] = q_nocor;
    dqdc[79] = q_nocor;
    dqdc[80] = q_nocor;
    dqdc[81] = q_nocor;
    dqdc[82] = q_nocor;
    dqdc[83] = q_nocor;
    dqdc[84] = q_nocor;
    dqdc[85] = q_nocor;
    dqdc[86] = q_nocor;
    dqdc[87] = q_nocor;
    for (int k = 0; k < 88; k++) {
      J[89 * k + 9] -= dqdc[k];
      J[89 * k + 13] -= dqdc[k];
      J[89 * k + 37] += dqdc[k];
    }
  }
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT
  J[7869] += dqdT; // dwdot[c2h5o]/dT

  // reaction 319: ch3o2 + M => ch3 + o2 + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[38];
  k_f = 4.343e+21 * exp(-3.42 * logT - (15333.0118070698) * invT);
  dlnkfdT = -3.42 * invT + (15333.0118070698) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[9] += q;  // ch3
  wdot[38] -= q; // ch3o2
  // for convenience
  k_f *= alpha;
  if (consP == 1) {
    // d()/d[ch3o2]
    dqdci = +k_f;
    J[3385] += dqdci; // dwdot[o2]/d[ch3o2]
    J[3391] += dqdci; // dwdot[ch3]/d[ch3o2]
    J[3420] -= dqdci; // dwdot[ch3o2]/d[ch3o2]
  } else {
    dqdc[0] = q_nocor;
    dqdc[1] = q_nocor;
    dqdc[2] = q_nocor;
    dqdc[3] = q_nocor;
    dqdc[4] = q_nocor;
    dqdc[5] = q_nocor;
    dqdc[6] = q_nocor;
    dqdc[7] = q_nocor;
    dqdc[8] = q_nocor;
    dqdc[9] = q_nocor;
    dqdc[10] = q_nocor;
    dqdc[11] = q_nocor;
    dqdc[12] = q_nocor;
    dqdc[13] = q_nocor;
    dqdc[14] = q_nocor;
    dqdc[15] = q_nocor;
    dqdc[16] = q_nocor;
    dqdc[17] = q_nocor;
    dqdc[18] = q_nocor;
    dqdc[19] = q_nocor;
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[25] = q_nocor;
    dqdc[26] = q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    dqdc[34] = q_nocor;
    dqdc[35] = q_nocor;
    dqdc[36] = q_nocor;
    dqdc[37] = q_nocor;
    dqdc[38] = q_nocor + k_f;
    dqdc[39] = q_nocor;
    dqdc[40] = q_nocor;
    dqdc[41] = q_nocor;
    dqdc[42] = q_nocor;
    dqdc[43] = q_nocor;
    dqdc[44] = q_nocor;
    dqdc[45] = q_nocor;
    dqdc[46] = q_nocor;
    dqdc[47] = q_nocor;
    dqdc[48] = q_nocor;
    dqdc[49] = q_nocor;
    dqdc[50] = q_nocor;
    dqdc[51] = q_nocor;
    dqdc[52] = q_nocor;
    dqdc[53] = q_nocor;
    dqdc[54] = q_nocor;
    dqdc[55] = q_nocor;
    dqdc[56] = q_nocor;
    dqdc[57] = q_nocor;
    dqdc[58] = q_nocor;
    dqdc[59] = q_nocor;
    dqdc[60] = q_nocor;
    dqdc[61] = q_nocor;
    dqdc[62] = q_nocor;
    dqdc[63] = q_nocor;
    dqdc[64] = q_nocor;
    dqdc[65] = q_nocor;
    dqdc[66] = q_nocor;
    dqdc[67] = q_nocor;
    dqdc[68] = q_nocor;
    dqdc[69] = q_nocor;
    dqdc[70] = q_nocor;
    dqdc[71] = q_nocor;
    dqdc[72] = q_nocor;
    dqdc[73] = q_nocor;
    dqdc[74] = q_nocor;
    dqdc[75] = q_nocor;
    dqdc[76] = q_nocor;
    dqdc[77] = q_nocor;
    dqdc[78] = q_nocor;
    dqdc[79] = q_nocor;
    dqdc[80] = q_nocor;
    dqdc[81] = q_nocor;
    dqdc[82] = q_nocor;
    dqdc[83] = q_nocor;
    dqdc[84] = q_nocor;
    dqdc[85] = q_nocor;
    dqdc[86] = q_nocor;
    dqdc[87] = q_nocor;
    for (int k = 0; k < 88; k++) {
      J[89 * k + 3] += dqdc[k];
      J[89 * k + 9] += dqdc[k];
      J[89 * k + 38] -= dqdc[k];
    }
  }
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7870] -= dqdT; // dwdot[ch3o2]/dT

  // reaction 320: ch3 + o2 + M => ch3o2 + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[3] * sc[9];
  k_f = 54400000000000 * exp(-3.3 * logT);
  dlnkfdT = -3.3 * invT;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[9] -= q;  // ch3
  wdot[38] += q; // ch3o2
  // for convenience
  k_f *= alpha;
  if (consP == 1) {
    // d()/d[o2]
    dqdci = +k_f * sc[9];
    J[270] -= dqdci; // dwdot[o2]/d[o2]
    J[276] -= dqdci; // dwdot[ch3]/d[o2]
    J[305] += dqdci; // dwdot[ch3o2]/d[o2]
    // d()/d[ch3]
    dqdci = +k_f * sc[3];
    J[804] -= dqdci; // dwdot[o2]/d[ch3]
    J[810] -= dqdci; // dwdot[ch3]/d[ch3]
    J[839] += dqdci; // dwdot[ch3o2]/d[ch3]
  } else {
    dqdc[0] = q_nocor;
    dqdc[1] = q_nocor;
    dqdc[2] = q_nocor;
    dqdc[3] = q_nocor + k_f * sc[9];
    dqdc[4] = q_nocor;
    dqdc[5] = q_nocor;
    dqdc[6] = q_nocor;
    dqdc[7] = q_nocor;
    dqdc[8] = q_nocor;
    dqdc[9] = q_nocor + k_f * sc[3];
    dqdc[10] = q_nocor;
    dqdc[11] = q_nocor;
    dqdc[12] = q_nocor;
    dqdc[13] = q_nocor;
    dqdc[14] = q_nocor;
    dqdc[15] = q_nocor;
    dqdc[16] = q_nocor;
    dqdc[17] = q_nocor;
    dqdc[18] = q_nocor;
    dqdc[19] = q_nocor;
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[25] = q_nocor;
    dqdc[26] = q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    dqdc[34] = q_nocor;
    dqdc[35] = q_nocor;
    dqdc[36] = q_nocor;
    dqdc[37] = q_nocor;
    dqdc[38] = q_nocor;
    dqdc[39] = q_nocor;
    dqdc[40] = q_nocor;
    dqdc[41] = q_nocor;
    dqdc[42] = q_nocor;
    dqdc[43] = q_nocor;
    dqdc[44] = q_nocor;
    dqdc[45] = q_nocor;
    dqdc[46] = q_nocor;
    dqdc[47] = q_nocor;
    dqdc[48] = q_nocor;
    dqdc[49] = q_nocor;
    dqdc[50] = q_nocor;
    dqdc[51] = q_nocor;
    dqdc[52] = q_nocor;
    dqdc[53] = q_nocor;
    dqdc[54] = q_nocor;
    dqdc[55] = q_nocor;
    dqdc[56] = q_nocor;
    dqdc[57] = q_nocor;
    dqdc[58] = q_nocor;
    dqdc[59] = q_nocor;
    dqdc[60] = q_nocor;
    dqdc[61] = q_nocor;
    dqdc[62] = q_nocor;
    dqdc[63] = q_nocor;
    dqdc[64] = q_nocor;
    dqdc[65] = q_nocor;
    dqdc[66] = q_nocor;
    dqdc[67] = q_nocor;
    dqdc[68] = q_nocor;
    dqdc[69] = q_nocor;
    dqdc[70] = q_nocor;
    dqdc[71] = q_nocor;
    dqdc[72] = q_nocor;
    dqdc[73] = q_nocor;
    dqdc[74] = q_nocor;
    dqdc[75] = q_nocor;
    dqdc[76] = q_nocor;
    dqdc[77] = q_nocor;
    dqdc[78] = q_nocor;
    dqdc[79] = q_nocor;
    dqdc[80] = q_nocor;
    dqdc[81] = q_nocor;
    dqdc[82] = q_nocor;
    dqdc[83] = q_nocor;
    dqdc[84] = q_nocor;
    dqdc[85] = q_nocor;
    dqdc[86] = q_nocor;
    dqdc[87] = q_nocor;
    for (int k = 0; k < 88; k++) {
      J[89 * k + 3] -= dqdc[k];
      J[89 * k + 9] -= dqdc[k];
      J[89 * k + 38] += dqdc[k];
    }
  }
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7870] += dqdT; // dwdot[ch3o2]/dT

  // reaction 343: c2h5o + M => ch3cho + h + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[37];
  k_f = 1.16e+29 * exp(-5.89 * logT - (12716.2851448853) * invT);
  dlnkfdT = -5.89 * invT + (12716.2851448853) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[24] += q; // ch3cho
  wdot[37] -= q; // c2h5o
  // for convenience
  k_f *= alpha;
  if (consP == 1) {
    // d()/d[c2h5o]
    dqdci = +k_f;
    J[3293] += dqdci; // dwdot[h]/d[c2h5o]
    J[3317] += dqdci; // dwdot[ch3cho]/d[c2h5o]
    J[3330] -= dqdci; // dwdot[c2h5o]/d[c2h5o]
  } else {
    dqdc[0] = q_nocor;
    dqdc[1] = q_nocor;
    dqdc[2] = q_nocor;
    dqdc[3] = q_nocor;
    dqdc[4] = q_nocor;
    dqdc[5] = q_nocor;
    dqdc[6] = q_nocor;
    dqdc[7] = q_nocor;
    dqdc[8] = q_nocor;
    dqdc[9] = q_nocor;
    dqdc[10] = q_nocor;
    dqdc[11] = q_nocor;
    dqdc[12] = q_nocor;
    dqdc[13] = q_nocor;
    dqdc[14] = q_nocor;
    dqdc[15] = q_nocor;
    dqdc[16] = q_nocor;
    dqdc[17] = q_nocor;
    dqdc[18] = q_nocor;
    dqdc[19] = q_nocor;
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[25] = q_nocor;
    dqdc[26] = q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    dqdc[34] = q_nocor;
    dqdc[35] = q_nocor;
    dqdc[36] = q_nocor;
    dqdc[37] = q_nocor + k_f;
    dqdc[38] = q_nocor;
    dqdc[39] = q_nocor;
    dqdc[40] = q_nocor;
    dqdc[41] = q_nocor;
    dqdc[42] = q_nocor;
    dqdc[43] = q_nocor;
    dqdc[44] = q_nocor;
    dqdc[45] = q_nocor;
    dqdc[46] = q_nocor;
    dqdc[47] = q_nocor;
    dqdc[48] = q_nocor;
    dqdc[49] = q_nocor;
    dqdc[50] = q_nocor;
    dqdc[51] = q_nocor;
    dqdc[52] = q_nocor;
    dqdc[53] = q_nocor;
    dqdc[54] = q_nocor;
    dqdc[55] = q_nocor;
    dqdc[56] = q_nocor;
    dqdc[57] = q_nocor;
    dqdc[58] = q_nocor;
    dqdc[59] = q_nocor;
    dqdc[60] = q_nocor;
    dqdc[61] = q_nocor;
    dqdc[62] = q_nocor;
    dqdc[63] = q_nocor;
    dqdc[64] = q_nocor;
    dqdc[65] = q_nocor;
    dqdc[66] = q_nocor;
    dqdc[67] = q_nocor;
    dqdc[68] = q_nocor;
    dqdc[69] = q_nocor;
    dqdc[70] = q_nocor;
    dqdc[71] = q_nocor;
    dqdc[72] = q_nocor;
    dqdc[73] = q_nocor;
    dqdc[74] = q_nocor;
    dqdc[75] = q_nocor;
    dqdc[76] = q_nocor;
    dqdc[77] = q_nocor;
    dqdc[78] = q_nocor;
    dqdc[79] = q_nocor;
    dqdc[80] = q_nocor;
    dqdc[81] = q_nocor;
    dqdc[82] = q_nocor;
    dqdc[83] = q_nocor;
    dqdc[84] = q_nocor;
    dqdc[85] = q_nocor;
    dqdc[86] = q_nocor;
    dqdc[87] = q_nocor;
    for (int k = 0; k < 88; k++) {
      J[89 * k + 0] += dqdc[k];
      J[89 * k + 24] += dqdc[k];
      J[89 * k + 37] -= dqdc[k];
    }
  }
  J[7832] += dqdT; // dwdot[h]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT
  J[7869] -= dqdT; // dwdot[c2h5o]/dT

  // reaction 344: ch3cho + h + M => c2h5o + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[0] * sc[24];
  k_f = 3.063e+18 * exp(-4.78 * logT - (3069.62166140879) * invT);
  dlnkfdT = -4.78 * invT + (3069.62166140879) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[24] -= q; // ch3cho
  wdot[37] += q; // c2h5o
  // for convenience
  k_f *= alpha;
  if (consP == 1) {
    // d()/d[h]
    dqdci = +k_f * sc[24];
    J[0] -= dqdci;  // dwdot[h]/d[h]
    J[24] -= dqdci; // dwdot[ch3cho]/d[h]
    J[37] += dqdci; // dwdot[c2h5o]/d[h]
    // d()/d[ch3cho]
    dqdci = +k_f * sc[0];
    J[2136] -= dqdci; // dwdot[h]/d[ch3cho]
    J[2160] -= dqdci; // dwdot[ch3cho]/d[ch3cho]
    J[2173] += dqdci; // dwdot[c2h5o]/d[ch3cho]
  } else {
    dqdc[0] = q_nocor + k_f * sc[24];
    dqdc[1] = q_nocor;
    dqdc[2] = q_nocor;
    dqdc[3] = q_nocor;
    dqdc[4] = q_nocor;
    dqdc[5] = q_nocor;
    dqdc[6] = q_nocor;
    dqdc[7] = q_nocor;
    dqdc[8] = q_nocor;
    dqdc[9] = q_nocor;
    dqdc[10] = q_nocor;
    dqdc[11] = q_nocor;
    dqdc[12] = q_nocor;
    dqdc[13] = q_nocor;
    dqdc[14] = q_nocor;
    dqdc[15] = q_nocor;
    dqdc[16] = q_nocor;
    dqdc[17] = q_nocor;
    dqdc[18] = q_nocor;
    dqdc[19] = q_nocor;
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor + k_f * sc[0];
    dqdc[25] = q_nocor;
    dqdc[26] = q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    dqdc[34] = q_nocor;
    dqdc[35] = q_nocor;
    dqdc[36] = q_nocor;
    dqdc[37] = q_nocor;
    dqdc[38] = q_nocor;
    dqdc[39] = q_nocor;
    dqdc[40] = q_nocor;
    dqdc[41] = q_nocor;
    dqdc[42] = q_nocor;
    dqdc[43] = q_nocor;
    dqdc[44] = q_nocor;
    dqdc[45] = q_nocor;
    dqdc[46] = q_nocor;
    dqdc[47] = q_nocor;
    dqdc[48] = q_nocor;
    dqdc[49] = q_nocor;
    dqdc[50] = q_nocor;
    dqdc[51] = q_nocor;
    dqdc[52] = q_nocor;
    dqdc[53] = q_nocor;
    dqdc[54] = q_nocor;
    dqdc[55] = q_nocor;
    dqdc[56] = q_nocor;
    dqdc[57] = q_nocor;
    dqdc[58] = q_nocor;
    dqdc[59] = q_nocor;
    dqdc[60] = q_nocor;
    dqdc[61] = q_nocor;
    dqdc[62] = q_nocor;
    dqdc[63] = q_nocor;
    dqdc[64] = q_nocor;
    dqdc[65] = q_nocor;
    dqdc[66] = q_nocor;
    dqdc[67] = q_nocor;
    dqdc[68] = q_nocor;
    dqdc[69] = q_nocor;
    dqdc[70] = q_nocor;
    dqdc[71] = q_nocor;
    dqdc[72] = q_nocor;
    dqdc[73] = q_nocor;
    dqdc[74] = q_nocor;
    dqdc[75] = q_nocor;
    dqdc[76] = q_nocor;
    dqdc[77] = q_nocor;
    dqdc[78] = q_nocor;
    dqdc[79] = q_nocor;
    dqdc[80] = q_nocor;
    dqdc[81] = q_nocor;
    dqdc[82] = q_nocor;
    dqdc[83] = q_nocor;
    dqdc[84] = q_nocor;
    dqdc[85] = q_nocor;
    dqdc[86] = q_nocor;
    dqdc[87] = q_nocor;
    for (int k = 0; k < 88; k++) {
      J[89 * k + 0] -= dqdc[k];
      J[89 * k + 24] -= dqdc[k];
      J[89 * k + 37] += dqdc[k];
    }
  }
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7856] -= dqdT; // dwdot[ch3cho]/dT
  J[7869] += dqdT; // dwdot[c2h5o]/dT

  // reaction 440: c3h4-a + M => c3h3 + h + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[25];
  k_f = 114300000000 * exp(-(35225.1666063304) * invT);
  dlnkfdT = (35225.1666063304) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[25] -= q; // c3h4-a
  wdot[48] += q; // c3h3
  // for convenience
  k_f *= alpha;
  if (consP == 1) {
    // d()/d[c3h4-a]
    dqdci = +k_f;
    J[2225] += dqdci; // dwdot[h]/d[c3h4-a]
    J[2250] -= dqdci; // dwdot[c3h4-a]/d[c3h4-a]
    J[2273] += dqdci; // dwdot[c3h3]/d[c3h4-a]
  } else {
    dqdc[0] = q_nocor;
    dqdc[1] = q_nocor;
    dqdc[2] = q_nocor;
    dqdc[3] = q_nocor;
    dqdc[4] = q_nocor;
    dqdc[5] = q_nocor;
    dqdc[6] = q_nocor;
    dqdc[7] = q_nocor;
    dqdc[8] = q_nocor;
    dqdc[9] = q_nocor;
    dqdc[10] = q_nocor;
    dqdc[11] = q_nocor;
    dqdc[12] = q_nocor;
    dqdc[13] = q_nocor;
    dqdc[14] = q_nocor;
    dqdc[15] = q_nocor;
    dqdc[16] = q_nocor;
    dqdc[17] = q_nocor;
    dqdc[18] = q_nocor;
    dqdc[19] = q_nocor;
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[25] = q_nocor + k_f;
    dqdc[26] = q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    dqdc[34] = q_nocor;
    dqdc[35] = q_nocor;
    dqdc[36] = q_nocor;
    dqdc[37] = q_nocor;
    dqdc[38] = q_nocor;
    dqdc[39] = q_nocor;
    dqdc[40] = q_nocor;
    dqdc[41] = q_nocor;
    dqdc[42] = q_nocor;
    dqdc[43] = q_nocor;
    dqdc[44] = q_nocor;
    dqdc[45] = q_nocor;
    dqdc[46] = q_nocor;
    dqdc[47] = q_nocor;
    dqdc[48] = q_nocor;
    dqdc[49] = q_nocor;
    dqdc[50] = q_nocor;
    dqdc[51] = q_nocor;
    dqdc[52] = q_nocor;
    dqdc[53] = q_nocor;
    dqdc[54] = q_nocor;
    dqdc[55] = q_nocor;
    dqdc[56] = q_nocor;
    dqdc[57] = q_nocor;
    dqdc[58] = q_nocor;
    dqdc[59] = q_nocor;
    dqdc[60] = q_nocor;
    dqdc[61] = q_nocor;
    dqdc[62] = q_nocor;
    dqdc[63] = q_nocor;
    dqdc[64] = q_nocor;
    dqdc[65] = q_nocor;
    dqdc[66] = q_nocor;
    dqdc[67] = q_nocor;
    dqdc[68] = q_nocor;
    dqdc[69] = q_nocor;
    dqdc[70] = q_nocor;
    dqdc[71] = q_nocor;
    dqdc[72] = q_nocor;
    dqdc[73] = q_nocor;
    dqdc[74] = q_nocor;
    dqdc[75] = q_nocor;
    dqdc[76] = q_nocor;
    dqdc[77] = q_nocor;
    dqdc[78] = q_nocor;
    dqdc[79] = q_nocor;
    dqdc[80] = q_nocor;
    dqdc[81] = q_nocor;
    dqdc[82] = q_nocor;
    dqdc[83] = q_nocor;
    dqdc[84] = q_nocor;
    dqdc[85] = q_nocor;
    dqdc[86] = q_nocor;
    dqdc[87] = q_nocor;
    for (int k = 0; k < 88; k++) {
      J[89 * k + 0] += dqdc[k];
      J[89 * k + 25] -= dqdc[k];
      J[89 * k + 48] += dqdc[k];
    }
  }
  J[7832] += dqdT; // dwdot[h]/dT
  J[7857] -= dqdT; // dwdot[c3h4-a]/dT
  J[7880] += dqdT; // dwdot[c3h3]/dT

  // reaction 441: c3h3 + h + M => c3h4-a + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture;
  // forward
  phi_f = sc[0] * sc[48];
  k_f = 1798 * exp(-0.38 * logT - (5339.12882418808) * invT);
  dlnkfdT = -0.38 * invT + (5339.12882418808) * invT2;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[25] += q; // c3h4-a
  wdot[48] -= q; // c3h3
  // for convenience
  k_f *= alpha;
  if (consP == 1) {
    // d()/d[h]
    dqdci = +k_f * sc[48];
    J[0] -= dqdci;  // dwdot[h]/d[h]
    J[25] += dqdci; // dwdot[c3h4-a]/d[h]
    J[48] -= dqdci; // dwdot[c3h3]/d[h]
    // d()/d[c3h3]
    dqdci = +k_f * sc[0];
    J[4272] -= dqdci; // dwdot[h]/d[c3h3]
    J[4297] += dqdci; // dwdot[c3h4-a]/d[c3h3]
    J[4320] -= dqdci; // dwdot[c3h3]/d[c3h3]
  } else {
    dqdc[0] = q_nocor + k_f * sc[48];
    dqdc[1] = q_nocor;
    dqdc[2] = q_nocor;
    dqdc[3] = q_nocor;
    dqdc[4] = q_nocor;
    dqdc[5] = q_nocor;
    dqdc[6] = q_nocor;
    dqdc[7] = q_nocor;
    dqdc[8] = q_nocor;
    dqdc[9] = q_nocor;
    dqdc[10] = q_nocor;
    dqdc[11] = q_nocor;
    dqdc[12] = q_nocor;
    dqdc[13] = q_nocor;
    dqdc[14] = q_nocor;
    dqdc[15] = q_nocor;
    dqdc[16] = q_nocor;
    dqdc[17] = q_nocor;
    dqdc[18] = q_nocor;
    dqdc[19] = q_nocor;
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[25] = q_nocor;
    dqdc[26] = q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    dqdc[34] = q_nocor;
    dqdc[35] = q_nocor;
    dqdc[36] = q_nocor;
    dqdc[37] = q_nocor;
    dqdc[38] = q_nocor;
    dqdc[39] = q_nocor;
    dqdc[40] = q_nocor;
    dqdc[41] = q_nocor;
    dqdc[42] = q_nocor;
    dqdc[43] = q_nocor;
    dqdc[44] = q_nocor;
    dqdc[45] = q_nocor;
    dqdc[46] = q_nocor;
    dqdc[47] = q_nocor;
    dqdc[48] = q_nocor + k_f * sc[0];
    dqdc[49] = q_nocor;
    dqdc[50] = q_nocor;
    dqdc[51] = q_nocor;
    dqdc[52] = q_nocor;
    dqdc[53] = q_nocor;
    dqdc[54] = q_nocor;
    dqdc[55] = q_nocor;
    dqdc[56] = q_nocor;
    dqdc[57] = q_nocor;
    dqdc[58] = q_nocor;
    dqdc[59] = q_nocor;
    dqdc[60] = q_nocor;
    dqdc[61] = q_nocor;
    dqdc[62] = q_nocor;
    dqdc[63] = q_nocor;
    dqdc[64] = q_nocor;
    dqdc[65] = q_nocor;
    dqdc[66] = q_nocor;
    dqdc[67] = q_nocor;
    dqdc[68] = q_nocor;
    dqdc[69] = q_nocor;
    dqdc[70] = q_nocor;
    dqdc[71] = q_nocor;
    dqdc[72] = q_nocor;
    dqdc[73] = q_nocor;
    dqdc[74] = q_nocor;
    dqdc[75] = q_nocor;
    dqdc[76] = q_nocor;
    dqdc[77] = q_nocor;
    dqdc[78] = q_nocor;
    dqdc[79] = q_nocor;
    dqdc[80] = q_nocor;
    dqdc[81] = q_nocor;
    dqdc[82] = q_nocor;
    dqdc[83] = q_nocor;
    dqdc[84] = q_nocor;
    dqdc[85] = q_nocor;
    dqdc[86] = q_nocor;
    dqdc[87] = q_nocor;
    for (int k = 0; k < 88; k++) {
      J[89 * k + 0] -= dqdc[k];
      J[89 * k + 25] += dqdc[k];
      J[89 * k + 48] -= dqdc[k];
    }
  }
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7857] += dqdT; // dwdot[c3h4-a]/dT
  J[7880] -= dqdT; // dwdot[c3h3]/dT

  // reaction 1: ch4 + h => ch3 + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[10];
  k_f = 0.01727 * exp(3 * logT - (4138.45385957801) * invT);
  dlnkfdT = 3 * invT + (4138.45385957801) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  // d()/d[h]
  dqdci = +k_f * sc[10];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[9] += dqdci;  // dwdot[ch3]/d[h]
  J[10] -= dqdci; // dwdot[ch4]/d[h]
  // d()/d[ch4]
  dqdci = +k_f * sc[0];
  J[890] -= dqdci; // dwdot[h]/d[ch4]
  J[891] += dqdci; // dwdot[h2]/d[ch4]
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT

  // reaction 2: ch3 + h2 => ch4 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[9];
  k_f = 0.000661 * exp(3 * logT - (3896.90985999175) * invT);
  dlnkfdT = 3 * invT + (3896.90985999175) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  // d()/d[h2]
  dqdci = +k_f * sc[9];
  J[89] += dqdci; // dwdot[h]/d[h2]
  J[90] -= dqdci; // dwdot[h2]/d[h2]
  J[98] -= dqdci; // dwdot[ch3]/d[h2]
  J[99] += dqdci; // dwdot[ch4]/d[h2]
  // d()/d[ch3]
  dqdci = +k_f * sc[1];
  J[801] += dqdci; // dwdot[h]/d[ch3]
  J[802] -= dqdci; // dwdot[h2]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT

  // reaction 3: ch4 + oh => ch3 + h2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[10];
  k_f = 0.193 * exp(2.4 * logT - (1059.77429818474) * invT);
  dlnkfdT = 2.4 * invT + (1059.77429818474) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  // d()/d[oh]
  dqdci = +k_f * sc[10];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[365] += dqdci; // dwdot[ch3]/d[oh]
  J[366] -= dqdci; // dwdot[ch4]/d[oh]
  // d()/d[ch4]
  dqdci = +k_f * sc[4];
  J[894] -= dqdci; // dwdot[oh]/d[ch4]
  J[895] += dqdci; // dwdot[h2o]/d[ch4]
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT

  // reaction 4: ch3 + h2o => ch4 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[9];
  k_f = 0.03199 * exp(2.4 * logT - (8443.9756522032) * invT);
  dlnkfdT = 2.4 * invT + (8443.9756522032) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  // d()/d[h2o]
  dqdci = +k_f * sc[9];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[454] -= dqdci; // dwdot[ch3]/d[h2o]
  J[455] += dqdci; // dwdot[ch4]/d[h2o]
  // d()/d[ch3]
  dqdci = +k_f * sc[5];
  J[805] += dqdci; // dwdot[oh]/d[ch3]
  J[806] -= dqdci; // dwdot[h2o]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT

  // reaction 5: ch4 + o => ch3 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[10];
  k_f = 3150000 * exp(0.5 * logT - (5178.09949113057) * invT);
  dlnkfdT = 0.5 * invT + (5178.09949113057) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[4] += q;  // oh
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  // d()/d[o]
  dqdci = +k_f * sc[10];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[182] += dqdci; // dwdot[oh]/d[o]
  J[187] += dqdci; // dwdot[ch3]/d[o]
  J[188] -= dqdci; // dwdot[ch4]/d[o]
  // d()/d[ch4]
  dqdci = +k_f * sc[2];
  J[892] -= dqdci; // dwdot[o]/d[ch4]
  J[894] += dqdci; // dwdot[oh]/d[ch4]
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT

  // reaction 6: ch3 + oh => ch4 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[9];
  k_f = 52960 * exp(0.5 * logT - (3882.31657668341) * invT);
  dlnkfdT = 0.5 * invT + (3882.31657668341) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[4] -= q;  // oh
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  // d()/d[oh]
  dqdci = +k_f * sc[9];
  J[358] += dqdci; // dwdot[o]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[365] -= dqdci; // dwdot[ch3]/d[oh]
  J[366] += dqdci; // dwdot[ch4]/d[oh]
  // d()/d[ch3]
  dqdci = +k_f * sc[4];
  J[803] += dqdci; // dwdot[o]/d[ch3]
  J[805] -= dqdci; // dwdot[oh]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT

  // reaction 7: c2h6 + ch3 => c2h5 + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[15];
  k_f = 1.51e-13 * exp(6 * logT - (3042.95117812114) * invT);
  dlnkfdT = 6 * invT + (3042.95117812114) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[15] -= q; // c2h6
  wdot[17] += q; // c2h5
  // d()/d[ch3]
  dqdci = +k_f * sc[15];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[816] -= dqdci; // dwdot[c2h6]/d[ch3]
  J[818] += dqdci; // dwdot[c2h5]/d[ch3]
  // d()/d[c2h6]
  dqdci = +k_f * sc[9];
  J[1344] -= dqdci; // dwdot[ch3]/d[c2h6]
  J[1345] += dqdci; // dwdot[ch4]/d[c2h6]
  J[1350] -= dqdci; // dwdot[c2h6]/d[c2h6]
  J[1352] += dqdci; // dwdot[c2h5]/d[c2h6]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7847] -= dqdT; // dwdot[c2h6]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT

  // reaction 8: c2h5 + ch4 => c2h6 + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[17];
  k_f = 9.649e-16 * exp(6.56 * logT - (5142.87432452423) * invT);
  dlnkfdT = 6.56 * invT + (5142.87432452423) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[15] += q; // c2h6
  wdot[17] -= q; // c2h5
  // d()/d[ch4]
  dqdci = +k_f * sc[17];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[905] += dqdci; // dwdot[c2h6]/d[ch4]
  J[907] -= dqdci; // dwdot[c2h5]/d[ch4]
  // d()/d[c2h5]
  dqdci = +k_f * sc[10];
  J[1522] += dqdci; // dwdot[ch3]/d[c2h5]
  J[1523] -= dqdci; // dwdot[ch4]/d[c2h5]
  J[1528] += dqdci; // dwdot[c2h6]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7847] += dqdT; // dwdot[c2h6]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT

  // reaction 9: hco + oh => co + h2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[7];
  k_f = 102000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q; // oh
  wdot[5] += q; // h2o
  wdot[6] += q; // co
  wdot[7] -= q; // hco
  // d()/d[oh]
  dqdci = +k_f * sc[7];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[362] += dqdci; // dwdot[co]/d[oh]
  J[363] -= dqdci; // dwdot[hco]/d[oh]
  // d()/d[hco]
  dqdci = +k_f * sc[4];
  J[627] -= dqdci; // dwdot[oh]/d[hco]
  J[628] += dqdci; // dwdot[h2o]/d[hco]
  J[629] += dqdci; // dwdot[co]/d[hco]
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7839] -= dqdT; // dwdot[hco]/dT

  // reaction 10: co + h2o => hco + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[6];
  k_f = 2896000000 * exp(-(52938.3932426565) * invT);
  dlnkfdT = (52938.3932426565) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q; // oh
  wdot[5] -= q; // h2o
  wdot[6] -= q; // co
  wdot[7] += q; // hco
  // d()/d[h2o]
  dqdci = +k_f * sc[6];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[451] -= dqdci; // dwdot[co]/d[h2o]
  J[452] += dqdci; // dwdot[hco]/d[h2o]
  // d()/d[co]
  dqdci = +k_f * sc[5];
  J[538] += dqdci; // dwdot[oh]/d[co]
  J[539] -= dqdci; // dwdot[h2o]/d[co]
  J[540] -= dqdci; // dwdot[co]/d[co]
  J[541] += dqdci; // dwdot[hco]/d[co]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7839] += dqdT; // dwdot[hco]/dT

  // reaction 11: co + oh => co2 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[6];
  k_f = 0.14 * exp(1.95 * logT - (-677.832848838957) * invT);
  dlnkfdT = 1.95 * invT + (-677.832848838957) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q; // h
  wdot[4] -= q; // oh
  wdot[6] -= q; // co
  wdot[8] += q; // co2
  // d()/d[oh]
  dqdci = +k_f * sc[6];
  J[356] += dqdci; // dwdot[h]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[362] -= dqdci; // dwdot[co]/d[oh]
  J[364] += dqdci; // dwdot[co2]/d[oh]
  // d()/d[co]
  dqdci = +k_f * sc[4];
  J[534] += dqdci; // dwdot[h]/d[co]
  J[538] -= dqdci; // dwdot[oh]/d[co]
  J[540] -= dqdci; // dwdot[co]/d[co]
  J[542] += dqdci; // dwdot[co2]/d[co]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7840] += dqdT; // dwdot[co2]/dT

  // reaction 12: co2 + h => co + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[8];
  k_f = 15.68 * exp(1.95 * logT - (10562.5178152411) * invT);
  dlnkfdT = 1.95 * invT + (10562.5178152411) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q; // h
  wdot[4] += q; // oh
  wdot[6] += q; // co
  wdot[8] -= q; // co2
  // d()/d[h]
  dqdci = +k_f * sc[8];
  J[0] -= dqdci; // dwdot[h]/d[h]
  J[4] += dqdci; // dwdot[oh]/d[h]
  J[6] += dqdci; // dwdot[co]/d[h]
  J[8] -= dqdci; // dwdot[co2]/d[h]
  // d()/d[co2]
  dqdci = +k_f * sc[0];
  J[712] -= dqdci; // dwdot[h]/d[co2]
  J[716] += dqdci; // dwdot[oh]/d[co2]
  J[718] += dqdci; // dwdot[co]/d[co2]
  J[720] -= dqdci; // dwdot[co2]/d[co2]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7840] -= dqdT; // dwdot[co2]/dT

  // reaction 13: h + o2 => o + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[3];
  k_f = 197000000 * exp(-(8323.20365241006) * invT);
  dlnkfdT = (8323.20365241006) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q; // h
  wdot[2] += q; // o
  wdot[3] -= q; // o2
  wdot[4] += q; // oh
  // d()/d[h]
  dqdci = +k_f * sc[3];
  J[0] -= dqdci; // dwdot[h]/d[h]
  J[2] += dqdci; // dwdot[o]/d[h]
  J[3] -= dqdci; // dwdot[o2]/d[h]
  J[4] += dqdci; // dwdot[oh]/d[h]
  // d()/d[o2]
  dqdci = +k_f * sc[0];
  J[267] -= dqdci; // dwdot[h]/d[o2]
  J[269] += dqdci; // dwdot[o]/d[o2]
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[271] += dqdci; // dwdot[oh]/d[o2]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7836] += dqdT; // dwdot[oh]/dT

  // reaction 14: o + oh => h + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[4];
  k_f = 15550000 * exp(-(213.867082967006) * invT);
  dlnkfdT = (213.867082967006) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q; // h
  wdot[2] -= q; // o
  wdot[3] += q; // o2
  wdot[4] -= q; // oh
  // d()/d[o]
  dqdci = +k_f * sc[4];
  J[178] += dqdci; // dwdot[h]/d[o]
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[181] += dqdci; // dwdot[o2]/d[o]
  J[182] -= dqdci; // dwdot[oh]/d[o]
  // d()/d[oh]
  dqdci = +k_f * sc[2];
  J[356] += dqdci; // dwdot[h]/d[oh]
  J[358] -= dqdci; // dwdot[o]/d[oh]
  J[359] += dqdci; // dwdot[o2]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT

  // reaction 15: h2 + o => h + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[2];
  k_f = 0.0508 * exp(2.67 * logT - (3166.2392612433) * invT);
  dlnkfdT = 2.67 * invT + (3166.2392612433) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q; // h
  wdot[1] -= q; // h2
  wdot[2] -= q; // o
  wdot[4] += q; // oh
  // d()/d[h2]
  dqdci = +k_f * sc[2];
  J[89] += dqdci; // dwdot[h]/d[h2]
  J[90] -= dqdci; // dwdot[h2]/d[h2]
  J[91] -= dqdci; // dwdot[o]/d[h2]
  J[93] += dqdci; // dwdot[oh]/d[h2]
  // d()/d[o]
  dqdci = +k_f * sc[1];
  J[178] += dqdci; // dwdot[h]/d[o]
  J[179] -= dqdci; // dwdot[h2]/d[o]
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[182] += dqdci; // dwdot[oh]/d[o]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7836] += dqdT; // dwdot[oh]/dT

  // reaction 16: h + oh => h2 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[4];
  k_f = 0.02231 * exp(2.67 * logT - (2112.00034638241) * invT);
  dlnkfdT = 2.67 * invT + (2112.00034638241) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q; // h
  wdot[1] += q; // h2
  wdot[2] += q; // o
  wdot[4] -= q; // oh
  // d()/d[h]
  dqdci = +k_f * sc[4];
  J[0] -= dqdci; // dwdot[h]/d[h]
  J[1] += dqdci; // dwdot[h2]/d[h]
  J[2] += dqdci; // dwdot[o]/d[h]
  J[4] -= dqdci; // dwdot[oh]/d[h]
  // d()/d[oh]
  dqdci = +k_f * sc[0];
  J[356] -= dqdci; // dwdot[h]/d[oh]
  J[357] += dqdci; // dwdot[h2]/d[oh]
  J[358] += dqdci; // dwdot[o]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT

  // reaction 17: h2o + o => 2 oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[5];
  k_f = 2.97 * exp(2.02 * logT - (6743.10332178324) * invT);
  dlnkfdT = 2.02 * invT + (6743.10332178324) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;     // o
  wdot[4] += 2 * q; // oh
  wdot[5] -= q;     // h2o
  // d()/d[o]
  dqdci = +k_f * sc[5];
  J[180] -= dqdci;     // dwdot[o]/d[o]
  J[182] += 2 * dqdci; // dwdot[oh]/d[o]
  J[183] -= dqdci;     // dwdot[h2o]/d[o]
  // d()/d[h2o]
  dqdci = +k_f * sc[2];
  J[447] -= dqdci;     // dwdot[o]/d[h2o]
  J[449] += 2 * dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci;     // dwdot[h2o]/d[h2o]
  // d()/dT
  J[7834] -= dqdT;     // dwdot[o]/dT
  J[7836] += 2 * dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT;     // dwdot[h2o]/dT

  // reaction 18: 2 oh => h2o + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[4] * sc[4]);
  k_f = 0.3013 * exp(2.02 * logT - (-1937.38416334817) * invT);
  dlnkfdT = 2.02 * invT + (-1937.38416334817) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;     // o
  wdot[4] -= 2 * q; // oh
  wdot[5] += q;     // h2o
  // d()/d[oh]
  dqdci = +k_f * 2.000000 * sc[4];
  J[358] += dqdci;      // dwdot[o]/d[oh]
  J[360] += -2 * dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci;      // dwdot[h2o]/d[oh]
  // d()/dT
  J[7834] += dqdT;      // dwdot[o]/dT
  J[7836] += -2 * dqdT; // dwdot[oh]/dT
  J[7837] += dqdT;      // dwdot[h2o]/dT

  // reaction 19: h2 + oh => h + h2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[4];
  k_f = 216 * exp(1.51 * logT - (1726.03316371019) * invT);
  dlnkfdT = 1.51 * invT + (1726.03316371019) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q; // h
  wdot[1] -= q; // h2
  wdot[4] -= q; // oh
  wdot[5] += q; // h2o
  // d()/d[h2]
  dqdci = +k_f * sc[4];
  J[89] += dqdci; // dwdot[h]/d[h2]
  J[90] -= dqdci; // dwdot[h2]/d[h2]
  J[93] -= dqdci; // dwdot[oh]/d[h2]
  J[94] += dqdci; // dwdot[h2o]/d[h2]
  // d()/d[oh]
  dqdci = +k_f * sc[1];
  J[356] += dqdci; // dwdot[h]/d[oh]
  J[357] -= dqdci; // dwdot[h2]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT

  // reaction 20: h + h2o => h2 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[5];
  k_f = 935.2 * exp(1.51 * logT - (9349.76565065169) * invT);
  dlnkfdT = 1.51 * invT + (9349.76565065169) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q; // h
  wdot[1] += q; // h2
  wdot[4] += q; // oh
  wdot[5] -= q; // h2o
  // d()/d[h]
  dqdci = +k_f * sc[5];
  J[0] -= dqdci; // dwdot[h]/d[h]
  J[1] += dqdci; // dwdot[h2]/d[h]
  J[4] += dqdci; // dwdot[oh]/d[h]
  J[5] -= dqdci; // dwdot[h2o]/d[h]
  // d()/d[h2o]
  dqdci = +k_f * sc[0];
  J[445] -= dqdci; // dwdot[h]/d[h2o]
  J[446] += dqdci; // dwdot[h2]/d[h2o]
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT

  // reaction 23: h2o2 + oh => h2o + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[12];
  k_f = 1000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[11] += q; // ho2
  wdot[12] -= q; // h2o2
  // d()/d[oh]
  dqdci = +k_f * sc[12];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[367] += dqdci; // dwdot[ho2]/d[oh]
  J[368] -= dqdci; // dwdot[h2o2]/d[oh]
  // d()/d[h2o2]
  dqdci = +k_f * sc[4];
  J[1072] -= dqdci; // dwdot[oh]/d[h2o2]
  J[1073] += dqdci; // dwdot[h2o]/d[h2o2]
  J[1079] += dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci; // dwdot[h2o2]/d[h2o2]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT; // dwdot[h2o2]/dT

  // reaction 24: h2o + ho2 => h2o2 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[11];
  k_f = 168500 * exp(0.33 * logT - (15831.1963062165) * invT);
  dlnkfdT = 0.33 * invT + (15831.1963062165) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  // d()/d[h2o]
  dqdci = +k_f * sc[11];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[456] -= dqdci; // dwdot[ho2]/d[h2o]
  J[457] += dqdci; // dwdot[h2o2]/d[h2o]
  // d()/d[ho2]
  dqdci = +k_f * sc[5];
  J[983] += dqdci; // dwdot[oh]/d[ho2]
  J[984] -= dqdci; // dwdot[h2o]/d[ho2]
  J[990] -= dqdci; // dwdot[ho2]/d[ho2]
  J[991] += dqdci; // dwdot[h2o2]/d[ho2]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT

  // reaction 25: c2h4 + o => ch3 + hco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[16];
  k_f = 10.2 * exp(1.88 * logT - (90.0757831790448) * invT);
  dlnkfdT = 1.88 * invT + (90.0757831790448) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[7] += q;  // hco
  wdot[9] += q;  // ch3
  wdot[16] -= q; // c2h4
  // d()/d[o]
  dqdci = +k_f * sc[16];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[185] += dqdci; // dwdot[hco]/d[o]
  J[187] += dqdci; // dwdot[ch3]/d[o]
  J[194] -= dqdci; // dwdot[c2h4]/d[o]
  // d()/d[c2h4]
  dqdci = +k_f * sc[2];
  J[1426] -= dqdci; // dwdot[o]/d[c2h4]
  J[1431] += dqdci; // dwdot[hco]/d[c2h4]
  J[1433] += dqdci; // dwdot[ch3]/d[c2h4]
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7839] += dqdT; // dwdot[hco]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT

  // reaction 26: ch3 + hco => c2h4 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[9];
  k_f = 285.1 * exp(1.05 * logT - (15987.1934726159) * invT);
  dlnkfdT = 1.05 * invT + (15987.1934726159) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[7] -= q;  // hco
  wdot[9] -= q;  // ch3
  wdot[16] += q; // c2h4
  // d()/d[hco]
  dqdci = +k_f * sc[9];
  J[625] += dqdci; // dwdot[o]/d[hco]
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  J[632] -= dqdci; // dwdot[ch3]/d[hco]
  J[639] += dqdci; // dwdot[c2h4]/d[hco]
  // d()/d[ch3]
  dqdci = +k_f * sc[7];
  J[803] += dqdci; // dwdot[o]/d[ch3]
  J[808] -= dqdci; // dwdot[hco]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[817] += dqdci; // dwdot[c2h4]/d[ch3]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7839] -= dqdT; // dwdot[hco]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT

  // reaction 28: c2h6 + h => c2h5 + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[15];
  k_f = 0.000554 * exp(3.5 * logT - (2600.12051221299) * invT);
  dlnkfdT = 3.5 * invT + (2600.12051221299) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[15] -= q; // c2h6
  wdot[17] += q; // c2h5
  // d()/d[h]
  dqdci = +k_f * sc[15];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[15] -= dqdci; // dwdot[c2h6]/d[h]
  J[17] += dqdci; // dwdot[c2h5]/d[h]
  // d()/d[c2h6]
  dqdci = +k_f * sc[0];
  J[1335] -= dqdci; // dwdot[h]/d[c2h6]
  J[1336] += dqdci; // dwdot[h2]/d[c2h6]
  J[1350] -= dqdci; // dwdot[c2h6]/d[c2h6]
  J[1352] += dqdci; // dwdot[c2h5]/d[c2h6]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7847] -= dqdT; // dwdot[c2h6]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT

  // reaction 29: c2h5 + h2 => c2h6 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[17];
  k_f = 1.355e-07 * exp(4.06 * logT - (4456.9900090324) * invT);
  dlnkfdT = 4.06 * invT + (4456.9900090324) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[15] += q; // c2h6
  wdot[17] -= q; // c2h5
  // d()/d[h2]
  dqdci = +k_f * sc[17];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[104] += dqdci; // dwdot[c2h6]/d[h2]
  J[106] -= dqdci; // dwdot[c2h5]/d[h2]
  // d()/d[c2h5]
  dqdci = +k_f * sc[1];
  J[1513] += dqdci; // dwdot[h]/d[c2h5]
  J[1514] -= dqdci; // dwdot[h2]/d[c2h5]
  J[1528] += dqdci; // dwdot[c2h6]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7847] += dqdT; // dwdot[c2h6]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT

  // reaction 30: c2h5 + o2 => c2h4 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[17];
  k_f = 1.22e+24 * exp(-5.76 * logT - (5082.48832462767) * invT);
  dlnkfdT = -5.76 * invT + (5082.48832462767) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[16] += q; // c2h4
  wdot[17] -= q; // c2h5
  // d()/d[o2]
  dqdci = +k_f * sc[17];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[283] += dqdci; // dwdot[c2h4]/d[o2]
  J[284] -= dqdci; // dwdot[c2h5]/d[o2]
  // d()/d[c2h5]
  dqdci = +k_f * sc[3];
  J[1516] -= dqdci; // dwdot[o2]/d[c2h5]
  J[1524] += dqdci; // dwdot[ho2]/d[c2h5]
  J[1529] += dqdci; // dwdot[c2h4]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT

  // reaction 31: c2h4 + ho2 => c2h5 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[16];
  k_f = 1.259e+24 * exp(-5.63 * logT - (11221.7316474452) * invT);
  dlnkfdT = -5.63 * invT + (11221.7316474452) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[16] -= q; // c2h4
  wdot[17] += q; // c2h5
  // d()/d[ho2]
  dqdci = +k_f * sc[16];
  J[982] += dqdci; // dwdot[o2]/d[ho2]
  J[990] -= dqdci; // dwdot[ho2]/d[ho2]
  J[995] -= dqdci; // dwdot[c2h4]/d[ho2]
  J[996] += dqdci; // dwdot[c2h5]/d[ho2]
  // d()/d[c2h4]
  dqdci = +k_f * sc[11];
  J[1427] += dqdci; // dwdot[o2]/d[c2h4]
  J[1435] -= dqdci; // dwdot[ho2]/d[c2h4]
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1441] += dqdci; // dwdot[c2h5]/d[c2h4]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT

  // reaction 32: c2h6 + oh => c2h5 + h2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[15];
  k_f = 58 * exp(1.73 * logT - (583.731332333475) * invT);
  dlnkfdT = 1.73 * invT + (583.731332333475) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[15] -= q; // c2h6
  wdot[17] += q; // c2h5
  // d()/d[oh]
  dqdci = +k_f * sc[15];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[371] -= dqdci; // dwdot[c2h6]/d[oh]
  J[373] += dqdci; // dwdot[c2h5]/d[oh]
  // d()/d[c2h6]
  dqdci = +k_f * sc[4];
  J[1339] -= dqdci; // dwdot[oh]/d[c2h6]
  J[1340] += dqdci; // dwdot[h2o]/d[c2h6]
  J[1350] -= dqdci; // dwdot[c2h6]/d[c2h6]
  J[1352] += dqdci; // dwdot[c2h5]/d[c2h6]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7847] -= dqdT; // dwdot[c2h6]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT

  // reaction 33: c2h5 + h2o => c2h6 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[17];
  k_f = 0.06142 * exp(2.29 * logT - (10064.3333160944) * invT);
  dlnkfdT = 2.29 * invT + (10064.3333160944) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[15] += q; // c2h6
  wdot[17] -= q; // c2h5
  // d()/d[h2o]
  dqdci = +k_f * sc[17];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[460] += dqdci; // dwdot[c2h6]/d[h2o]
  J[462] -= dqdci; // dwdot[c2h5]/d[h2o]
  // d()/d[c2h5]
  dqdci = +k_f * sc[5];
  J[1517] += dqdci; // dwdot[oh]/d[c2h5]
  J[1518] -= dqdci; // dwdot[h2o]/d[c2h5]
  J[1528] += dqdci; // dwdot[c2h6]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7847] += dqdT; // dwdot[c2h6]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT

  // reaction 34: c2h6 + o => c2h5 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[15];
  k_f = 13 * exp(2.13 * logT - (2611.6944955265) * invT);
  dlnkfdT = 2.13 * invT + (2611.6944955265) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[4] += q;  // oh
  wdot[15] -= q; // c2h6
  wdot[17] += q; // c2h5
  // d()/d[o]
  dqdci = +k_f * sc[15];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[182] += dqdci; // dwdot[oh]/d[o]
  J[193] -= dqdci; // dwdot[c2h6]/d[o]
  J[195] += dqdci; // dwdot[c2h5]/d[o]
  // d()/d[c2h6]
  dqdci = +k_f * sc[2];
  J[1337] -= dqdci; // dwdot[o]/d[c2h6]
  J[1339] += dqdci; // dwdot[oh]/d[c2h6]
  J[1350] -= dqdci; // dwdot[c2h6]/d[c2h6]
  J[1352] += dqdci; // dwdot[c2h5]/d[c2h6]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7847] -= dqdT; // dwdot[c2h6]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT

  // reaction 35: c2h5 + oh => c2h6 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[17];
  k_f = 0.001397 * exp(2.69 * logT - (3414.32507748502) * invT);
  dlnkfdT = 2.69 * invT + (3414.32507748502) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[4] -= q;  // oh
  wdot[15] += q; // c2h6
  wdot[17] -= q; // c2h5
  // d()/d[oh]
  dqdci = +k_f * sc[17];
  J[358] += dqdci; // dwdot[o]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[371] += dqdci; // dwdot[c2h6]/d[oh]
  J[373] -= dqdci; // dwdot[c2h5]/d[oh]
  // d()/d[c2h5]
  dqdci = +k_f * sc[4];
  J[1515] += dqdci; // dwdot[o]/d[c2h5]
  J[1517] -= dqdci; // dwdot[oh]/d[c2h5]
  J[1528] += dqdci; // dwdot[c2h6]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7847] += dqdT; // dwdot[c2h6]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT

  // reaction 36: ch3 + ho2 => ch3o + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[11];
  k_f = 11000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[9] -= q;  // ch3
  wdot[11] -= q; // ho2
  wdot[14] += q; // ch3o
  // d()/d[ch3]
  dqdci = +k_f * sc[11];
  J[805] += dqdci; // dwdot[oh]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[812] -= dqdci; // dwdot[ho2]/d[ch3]
  J[815] += dqdci; // dwdot[ch3o]/d[ch3]
  // d()/d[ho2]
  dqdci = +k_f * sc[9];
  J[983] += dqdci; // dwdot[oh]/d[ho2]
  J[988] -= dqdci; // dwdot[ch3]/d[ho2]
  J[990] -= dqdci; // dwdot[ho2]/d[ho2]
  J[993] += dqdci; // dwdot[ch3o]/d[ho2]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7846] += dqdT; // dwdot[ch3o]/dT

  // reaction 37: ch3o + oh => ch3 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[14];
  k_f = 478000000 * exp(-0.35 * logT - (12353.9691455059) * invT);
  dlnkfdT = -0.35 * invT + (12353.9691455059) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[9] += q;  // ch3
  wdot[11] += q; // ho2
  wdot[14] -= q; // ch3o
  // d()/d[oh]
  dqdci = +k_f * sc[14];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[365] += dqdci; // dwdot[ch3]/d[oh]
  J[367] += dqdci; // dwdot[ho2]/d[oh]
  J[370] -= dqdci; // dwdot[ch3o]/d[oh]
  // d()/d[ch3o]
  dqdci = +k_f * sc[4];
  J[1250] -= dqdci; // dwdot[oh]/d[ch3o]
  J[1255] += dqdci; // dwdot[ch3]/d[ch3o]
  J[1257] += dqdci; // dwdot[ho2]/d[ch3o]
  J[1260] -= dqdci; // dwdot[ch3o]/d[ch3o]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7846] -= dqdT; // dwdot[ch3o]/dT

  // reaction 38: co + ho2 => co2 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[11];
  k_f = 30100000 * exp(-(11573.9833135086) * invT);
  dlnkfdT = (11573.9833135086) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[6] -= q;  // co
  wdot[8] += q;  // co2
  wdot[11] -= q; // ho2
  // d()/d[co]
  dqdci = +k_f * sc[11];
  J[538] += dqdci; // dwdot[oh]/d[co]
  J[540] -= dqdci; // dwdot[co]/d[co]
  J[542] += dqdci; // dwdot[co2]/d[co]
  J[545] -= dqdci; // dwdot[ho2]/d[co]
  // d()/d[ho2]
  dqdci = +k_f * sc[6];
  J[983] += dqdci; // dwdot[oh]/d[ho2]
  J[985] -= dqdci; // dwdot[co]/d[ho2]
  J[987] += dqdci; // dwdot[co2]/d[ho2]
  J[990] -= dqdci; // dwdot[ho2]/d[ho2]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7840] += dqdT; // dwdot[co2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT

  // reaction 39: co2 + oh => co + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[8];
  k_f = 6435000000 * exp(-0.33 * logT - (42577.1620937373) * invT);
  dlnkfdT = -0.33 * invT + (42577.1620937373) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[6] += q;  // co
  wdot[8] -= q;  // co2
  wdot[11] += q; // ho2
  // d()/d[oh]
  dqdci = +k_f * sc[8];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[362] += dqdci; // dwdot[co]/d[oh]
  J[364] -= dqdci; // dwdot[co2]/d[oh]
  J[367] += dqdci; // dwdot[ho2]/d[oh]
  // d()/d[co2]
  dqdci = +k_f * sc[4];
  J[716] -= dqdci; // dwdot[oh]/d[co2]
  J[718] += dqdci; // dwdot[co]/d[co2]
  J[720] -= dqdci; // dwdot[co2]/d[co2]
  J[723] += dqdci; // dwdot[ho2]/d[co2]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7840] -= dqdT; // dwdot[co2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT

  // reaction 45: co + o2 => co2 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[6];
  k_f = 16200000 * exp(-(24003.4349588851) * invT);
  dlnkfdT = (24003.4349588851) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q; // o
  wdot[3] -= q; // o2
  wdot[6] -= q; // co
  wdot[8] += q; // co2
  // d()/d[o2]
  dqdci = +k_f * sc[6];
  J[269] += dqdci; // dwdot[o]/d[o2]
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[273] -= dqdci; // dwdot[co]/d[o2]
  J[275] += dqdci; // dwdot[co2]/d[o2]
  // d()/d[co]
  dqdci = +k_f * sc[3];
  J[536] += dqdci; // dwdot[o]/d[co]
  J[537] -= dqdci; // dwdot[o2]/d[co]
  J[540] -= dqdci; // dwdot[co]/d[co]
  J[542] += dqdci; // dwdot[co2]/d[co]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7840] += dqdT; // dwdot[co2]/dT

  // reaction 46: co2 + o => co + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[8];
  k_f = 143300000 * exp(-(27133.4426201905) * invT);
  dlnkfdT = (27133.4426201905) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q; // o
  wdot[3] += q; // o2
  wdot[6] += q; // co
  wdot[8] -= q; // co2
  // d()/d[o]
  dqdci = +k_f * sc[8];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[181] += dqdci; // dwdot[o2]/d[o]
  J[184] += dqdci; // dwdot[co]/d[o]
  J[186] -= dqdci; // dwdot[co2]/d[o]
  // d()/d[co2]
  dqdci = +k_f * sc[2];
  J[714] -= dqdci; // dwdot[o]/d[co2]
  J[715] += dqdci; // dwdot[o2]/d[co2]
  J[718] += dqdci; // dwdot[co]/d[co2]
  J[720] -= dqdci; // dwdot[co2]/d[co2]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7840] -= dqdT; // dwdot[co2]/dT

  // reaction 47: h + hco => co + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[7];
  k_f = 73400000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q; // h
  wdot[1] += q; // h2
  wdot[6] += q; // co
  wdot[7] -= q; // hco
  // d()/d[h]
  dqdci = +k_f * sc[7];
  J[0] -= dqdci; // dwdot[h]/d[h]
  J[1] += dqdci; // dwdot[h2]/d[h]
  J[6] += dqdci; // dwdot[co]/d[h]
  J[7] -= dqdci; // dwdot[hco]/d[h]
  // d()/d[hco]
  dqdci = +k_f * sc[0];
  J[623] -= dqdci; // dwdot[h]/d[hco]
  J[624] += dqdci; // dwdot[h2]/d[hco]
  J[629] += dqdci; // dwdot[co]/d[hco]
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7839] -= dqdT; // dwdot[hco]/dT

  // reaction 48: co + h2 => h + hco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[6];
  k_f = 481300000 * exp(-(45289.4999224248) * invT);
  dlnkfdT = (45289.4999224248) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q; // h
  wdot[1] -= q; // h2
  wdot[6] -= q; // co
  wdot[7] += q; // hco
  // d()/d[h2]
  dqdci = +k_f * sc[6];
  J[89] += dqdci; // dwdot[h]/d[h2]
  J[90] -= dqdci; // dwdot[h2]/d[h2]
  J[95] -= dqdci; // dwdot[co]/d[h2]
  J[96] += dqdci; // dwdot[hco]/d[h2]
  // d()/d[co]
  dqdci = +k_f * sc[1];
  J[534] += dqdci; // dwdot[h]/d[co]
  J[535] -= dqdci; // dwdot[h2]/d[co]
  J[540] -= dqdci; // dwdot[co]/d[co]
  J[541] += dqdci; // dwdot[hco]/d[co]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7839] += dqdT; // dwdot[hco]/dT

  // reaction 49: hco + o => co + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[7];
  k_f = 30200000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q; // o
  wdot[4] += q; // oh
  wdot[6] += q; // co
  wdot[7] -= q; // hco
  // d()/d[o]
  dqdci = +k_f * sc[7];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[182] += dqdci; // dwdot[oh]/d[o]
  J[184] += dqdci; // dwdot[co]/d[o]
  J[185] -= dqdci; // dwdot[hco]/d[o]
  // d()/d[hco]
  dqdci = +k_f * sc[2];
  J[625] -= dqdci; // dwdot[o]/d[hco]
  J[627] += dqdci; // dwdot[oh]/d[hco]
  J[629] += dqdci; // dwdot[co]/d[hco]
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7839] -= dqdT; // dwdot[hco]/dT

  // reaction 50: co + oh => hco + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[6];
  k_f = 86970000 * exp(-(44232.7449242349) * invT);
  dlnkfdT = (44232.7449242349) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q; // o
  wdot[4] -= q; // oh
  wdot[6] -= q; // co
  wdot[7] += q; // hco
  // d()/d[oh]
  dqdci = +k_f * sc[6];
  J[358] += dqdci; // dwdot[o]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[362] -= dqdci; // dwdot[co]/d[oh]
  J[363] += dqdci; // dwdot[hco]/d[oh]
  // d()/d[co]
  dqdci = +k_f * sc[4];
  J[536] += dqdci; // dwdot[o]/d[co]
  J[538] -= dqdci; // dwdot[oh]/d[co]
  J[540] -= dqdci; // dwdot[co]/d[co]
  J[541] += dqdci; // dwdot[hco]/d[co]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7839] += dqdT; // dwdot[hco]/dT

  // reaction 53: ch2o + oh => h2o + hco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[13];
  k_f = 3430 * exp(1.18 * logT - (-224.93784961471) * invT);
  dlnkfdT = 1.18 * invT + (-224.93784961471) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[7] += q;  // hco
  wdot[13] -= q; // ch2o
  // d()/d[oh]
  dqdci = +k_f * sc[13];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[363] += dqdci; // dwdot[hco]/d[oh]
  J[369] -= dqdci; // dwdot[ch2o]/d[oh]
  // d()/d[ch2o]
  dqdci = +k_f * sc[4];
  J[1161] -= dqdci; // dwdot[oh]/d[ch2o]
  J[1162] += dqdci; // dwdot[h2o]/d[ch2o]
  J[1164] += dqdci; // dwdot[hco]/d[ch2o]
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7839] += dqdT; // dwdot[hco]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT

  // reaction 54: h2o + hco => ch2o + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[7];
  k_f = 1186 * exp(1.18 * logT - (14784.5056413427) * invT);
  dlnkfdT = 1.18 * invT + (14784.5056413427) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[7] -= q;  // hco
  wdot[13] += q; // ch2o
  // d()/d[h2o]
  dqdci = +k_f * sc[7];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[452] -= dqdci; // dwdot[hco]/d[h2o]
  J[458] += dqdci; // dwdot[ch2o]/d[h2o]
  // d()/d[hco]
  dqdci = +k_f * sc[5];
  J[627] += dqdci; // dwdot[oh]/d[hco]
  J[628] -= dqdci; // dwdot[h2o]/d[hco]
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  J[636] += dqdci; // dwdot[ch2o]/d[hco]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7839] -= dqdT; // dwdot[hco]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT

  // reaction 55: ch2o + h => h2 + hco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[13];
  k_f = 933.4 * exp(1.5 * logT - (1497.57279743485) * invT);
  dlnkfdT = 1.5 * invT + (1497.57279743485) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[7] += q;  // hco
  wdot[13] -= q; // ch2o
  // d()/d[h]
  dqdci = +k_f * sc[13];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[7] += dqdci;  // dwdot[hco]/d[h]
  J[13] -= dqdci; // dwdot[ch2o]/d[h]
  // d()/d[ch2o]
  dqdci = +k_f * sc[0];
  J[1157] -= dqdci; // dwdot[h]/d[ch2o]
  J[1158] += dqdci; // dwdot[h2]/d[ch2o]
  J[1164] += dqdci; // dwdot[hco]/d[ch2o]
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7839] += dqdT; // dwdot[hco]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT

  // reaction 56: h2 + hco => ch2o + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[7];
  k_f = 74.53 * exp(1.5 * logT - (8881.7741514533) * invT);
  dlnkfdT = 1.5 * invT + (8881.7741514533) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[7] -= q;  // hco
  wdot[13] += q; // ch2o
  // d()/d[h2]
  dqdci = +k_f * sc[7];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[96] -= dqdci;  // dwdot[hco]/d[h2]
  J[102] += dqdci; // dwdot[ch2o]/d[h2]
  // d()/d[hco]
  dqdci = +k_f * sc[1];
  J[623] += dqdci; // dwdot[h]/d[hco]
  J[624] -= dqdci; // dwdot[h2]/d[hco]
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  J[636] += dqdci; // dwdot[ch2o]/d[hco]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7839] -= dqdT; // dwdot[hco]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT

  // reaction 57: ch2o + o => hco + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[13];
  k_f = 416000 * exp(0.57 * logT - (1389.88443095264) * invT);
  dlnkfdT = 0.57 * invT + (1389.88443095264) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[4] += q;  // oh
  wdot[7] += q;  // hco
  wdot[13] -= q; // ch2o
  // d()/d[o]
  dqdci = +k_f * sc[13];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[182] += dqdci; // dwdot[oh]/d[o]
  J[185] += dqdci; // dwdot[hco]/d[o]
  J[191] -= dqdci; // dwdot[ch2o]/d[o]
  // d()/d[ch2o]
  dqdci = +k_f * sc[2];
  J[1159] -= dqdci; // dwdot[o]/d[ch2o]
  J[1161] += dqdci; // dwdot[oh]/d[ch2o]
  J[1164] += dqdci; // dwdot[hco]/d[ch2o]
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7839] += dqdT; // dwdot[hco]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT

  // reaction 58: hco + oh => ch2o + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[7];
  k_f = 14590 * exp(0.57 * logT - (7719.3436534444) * invT);
  dlnkfdT = 0.57 * invT + (7719.3436534444) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[4] -= q;  // oh
  wdot[7] -= q;  // hco
  wdot[13] += q; // ch2o
  // d()/d[oh]
  dqdci = +k_f * sc[7];
  J[358] += dqdci; // dwdot[o]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[363] -= dqdci; // dwdot[hco]/d[oh]
  J[369] += dqdci; // dwdot[ch2o]/d[oh]
  // d()/d[hco]
  dqdci = +k_f * sc[4];
  J[625] += dqdci; // dwdot[o]/d[hco]
  J[627] -= dqdci; // dwdot[oh]/d[hco]
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  J[636] += dqdci; // dwdot[ch2o]/d[hco]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7839] -= dqdT; // dwdot[hco]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT

  // reaction 59: ch3 + oh => ch2o + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[9];
  k_f = 22500000 * exp(-(2163.83166296029) * invT);
  dlnkfdT = (2163.83166296029) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] += q;  // h2
  wdot[4] -= q;  // oh
  wdot[9] -= q;  // ch3
  wdot[13] += q; // ch2o
  // d()/d[oh]
  dqdci = +k_f * sc[9];
  J[357] += dqdci; // dwdot[h2]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[365] -= dqdci; // dwdot[ch3]/d[oh]
  J[369] += dqdci; // dwdot[ch2o]/d[oh]
  // d()/d[ch3]
  dqdci = +k_f * sc[4];
  J[802] += dqdci; // dwdot[h2]/d[ch3]
  J[805] -= dqdci; // dwdot[oh]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[814] += dqdci; // dwdot[ch2o]/d[ch3]
  // d()/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT

  // reaction 60: ch2o + h2 => ch3 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[13];
  k_f = 675600000 * exp(-(38254.5309344748) * invT);
  dlnkfdT = (38254.5309344748) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // h2
  wdot[4] += q;  // oh
  wdot[9] += q;  // ch3
  wdot[13] -= q; // ch2o
  // d()/d[h2]
  dqdci = +k_f * sc[13];
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[93] += dqdci;  // dwdot[oh]/d[h2]
  J[98] += dqdci;  // dwdot[ch3]/d[h2]
  J[102] -= dqdci; // dwdot[ch2o]/d[h2]
  // d()/d[ch2o]
  dqdci = +k_f * sc[1];
  J[1158] -= dqdci; // dwdot[h2]/d[ch2o]
  J[1161] += dqdci; // dwdot[oh]/d[ch2o]
  J[1166] += dqdci; // dwdot[ch3]/d[ch2o]
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  // d()/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT

  // reaction 61: ch3 + o => ch2o + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[9];
  k_f = 80000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[2] -= q;  // o
  wdot[9] -= q;  // ch3
  wdot[13] += q; // ch2o
  // d()/d[o]
  dqdci = +k_f * sc[9];
  J[178] += dqdci; // dwdot[h]/d[o]
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[187] -= dqdci; // dwdot[ch3]/d[o]
  J[191] += dqdci; // dwdot[ch2o]/d[o]
  // d()/d[ch3]
  dqdci = +k_f * sc[2];
  J[801] += dqdci; // dwdot[h]/d[ch3]
  J[803] -= dqdci; // dwdot[o]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[814] += dqdci; // dwdot[ch2o]/d[ch3]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT

  // reaction 62: ch2o + h => ch3 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[13];
  k_f = 1055000000 * exp(-(35038.9764399826) * invT);
  dlnkfdT = (35038.9764399826) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[2] += q;  // o
  wdot[9] += q;  // ch3
  wdot[13] -= q; // ch2o
  // d()/d[h]
  dqdci = +k_f * sc[13];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[2] += dqdci;  // dwdot[o]/d[h]
  J[9] += dqdci;  // dwdot[ch3]/d[h]
  J[13] -= dqdci; // dwdot[ch2o]/d[h]
  // d()/d[ch2o]
  dqdci = +k_f * sc[0];
  J[1157] -= dqdci; // dwdot[h]/d[ch2o]
  J[1159] += dqdci; // dwdot[o]/d[ch2o]
  J[1166] += dqdci; // dwdot[ch3]/d[ch2o]
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT

  // reaction 63: ch3 + o2 => ch3o + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[9];
  k_f = 1995000000000 * exp(-1.57 * logT - (14698.9588081559) * invT);
  dlnkfdT = -1.57 * invT + (14698.9588081559) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[3] -= q;  // o2
  wdot[9] -= q;  // ch3
  wdot[14] += q; // ch3o
  // d()/d[o2]
  dqdci = +k_f * sc[9];
  J[269] += dqdci; // dwdot[o]/d[o2]
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[276] -= dqdci; // dwdot[ch3]/d[o2]
  J[281] += dqdci; // dwdot[ch3o]/d[o2]
  // d()/d[ch3]
  dqdci = +k_f * sc[3];
  J[803] += dqdci; // dwdot[o]/d[ch3]
  J[804] -= dqdci; // dwdot[o2]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[815] += dqdci; // dwdot[ch3o]/d[ch3]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7846] += dqdT; // dwdot[ch3o]/dT

  // reaction 64: ch3o + o => ch3 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[14];
  k_f = 3585000000000 * exp(-1.59 * logT - (-820.746381927498) * invT);
  dlnkfdT = -1.59 * invT + (-820.746381927498) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[3] += q;  // o2
  wdot[9] += q;  // ch3
  wdot[14] -= q; // ch3o
  // d()/d[o]
  dqdci = +k_f * sc[14];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[181] += dqdci; // dwdot[o2]/d[o]
  J[187] += dqdci; // dwdot[ch3]/d[o]
  J[192] -= dqdci; // dwdot[ch3o]/d[o]
  // d()/d[ch3o]
  dqdci = +k_f * sc[2];
  J[1248] -= dqdci; // dwdot[o]/d[ch3o]
  J[1249] += dqdci; // dwdot[o2]/d[ch3o]
  J[1255] += dqdci; // dwdot[ch3]/d[ch3o]
  J[1260] -= dqdci; // dwdot[ch3o]/d[ch3o]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7846] -= dqdT; // dwdot[ch3o]/dT

  // reaction 65: ch2o + ch3 => ch4 + hco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[13];
  k_f = 3.636e-12 * exp(5.42 * logT - (502.21023247311) * invT);
  dlnkfdT = 5.42 * invT + (502.21023247311) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[7] += q;  // hco
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[13] -= q; // ch2o
  // d()/d[ch3]
  dqdci = +k_f * sc[13];
  J[808] += dqdci; // dwdot[hco]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[814] -= dqdci; // dwdot[ch2o]/d[ch3]
  // d()/d[ch2o]
  dqdci = +k_f * sc[9];
  J[1164] += dqdci; // dwdot[hco]/d[ch2o]
  J[1166] -= dqdci; // dwdot[ch3]/d[ch2o]
  J[1167] += dqdci; // dwdot[ch4]/d[ch2o]
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  // d()/dT
  J[7839] += dqdT; // dwdot[hco]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT

  // reaction 66: ch4 + hco => ch2o + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[10];
  k_f = 7.584e-12 * exp(5.42 * logT - (8126.94915274622) * invT);
  dlnkfdT = 5.42 * invT + (8126.94915274622) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[7] -= q;  // hco
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[13] += q; // ch2o
  // d()/d[hco]
  dqdci = +k_f * sc[10];
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  J[632] += dqdci; // dwdot[ch3]/d[hco]
  J[633] -= dqdci; // dwdot[ch4]/d[hco]
  J[636] += dqdci; // dwdot[ch2o]/d[hco]
  // d()/d[ch4]
  dqdci = +k_f * sc[7];
  J[897] -= dqdci; // dwdot[hco]/d[ch4]
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[903] += dqdci; // dwdot[ch2o]/d[ch4]
  // d()/dT
  J[7839] -= dqdT; // dwdot[hco]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT

  // reaction 67: ch3 + hco => ch4 + co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[9];
  k_f = 121000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] += q;  // co
  wdot[7] -= q;  // hco
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  // d()/d[hco]
  dqdci = +k_f * sc[9];
  J[629] += dqdci; // dwdot[co]/d[hco]
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  J[632] -= dqdci; // dwdot[ch3]/d[hco]
  J[633] += dqdci; // dwdot[ch4]/d[hco]
  // d()/d[ch3]
  dqdci = +k_f * sc[7];
  J[807] += dqdci; // dwdot[co]/d[ch3]
  J[808] -= dqdci; // dwdot[hco]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  // d()/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7839] -= dqdT; // dwdot[hco]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT

  // reaction 68: ch4 + co => ch3 + hco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[10];
  k_f = 20730000000 * exp(-(45531.043922011) * invT);
  dlnkfdT = (45531.043922011) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // co
  wdot[7] += q;  // hco
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  // d()/d[co]
  dqdci = +k_f * sc[10];
  J[540] -= dqdci; // dwdot[co]/d[co]
  J[541] += dqdci; // dwdot[hco]/d[co]
  J[543] += dqdci; // dwdot[ch3]/d[co]
  J[544] -= dqdci; // dwdot[ch4]/d[co]
  // d()/d[ch4]
  dqdci = +k_f * sc[6];
  J[896] -= dqdci; // dwdot[co]/d[ch4]
  J[897] += dqdci; // dwdot[hco]/d[ch4]
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  // d()/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7839] += dqdT; // dwdot[hco]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT

  // reaction 71: ho2 + o => o2 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[11];
  k_f = 32500000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[3] += q;  // o2
  wdot[4] += q;  // oh
  wdot[11] -= q; // ho2
  // d()/d[o]
  dqdci = +k_f * sc[11];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[181] += dqdci; // dwdot[o2]/d[o]
  J[182] += dqdci; // dwdot[oh]/d[o]
  J[189] -= dqdci; // dwdot[ho2]/d[o]
  // d()/d[ho2]
  dqdci = +k_f * sc[2];
  J[981] -= dqdci; // dwdot[o]/d[ho2]
  J[982] += dqdci; // dwdot[o2]/d[ho2]
  J[983] += dqdci; // dwdot[oh]/d[ho2]
  J[990] -= dqdci; // dwdot[ho2]/d[ho2]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT

  // reaction 72: o2 + oh => ho2 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[4];
  k_f = 785700000 * exp(-0.33 * logT - (27873.1711189234) * invT);
  dlnkfdT = -0.33 * invT + (27873.1711189234) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[3] -= q;  // o2
  wdot[4] -= q;  // oh
  wdot[11] += q; // ho2
  // d()/d[o2]
  dqdci = +k_f * sc[4];
  J[269] += dqdci; // dwdot[o]/d[o2]
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[271] -= dqdci; // dwdot[oh]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  // d()/d[oh]
  dqdci = +k_f * sc[3];
  J[358] += dqdci; // dwdot[o]/d[oh]
  J[359] -= dqdci; // dwdot[o2]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[367] += dqdci; // dwdot[ho2]/d[oh]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT

  // reaction 73: hco + ho2 => ch2o + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[11];
  k_f = 29740 * exp(0.33 * logT - (-1942.91954667202) * invT);
  dlnkfdT = 0.33 * invT + (-1942.91954667202) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[7] -= q;  // hco
  wdot[11] -= q; // ho2
  wdot[13] += q; // ch2o
  // d()/d[hco]
  dqdci = +k_f * sc[11];
  J[626] += dqdci; // dwdot[o2]/d[hco]
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  J[634] -= dqdci; // dwdot[ho2]/d[hco]
  J[636] += dqdci; // dwdot[ch2o]/d[hco]
  // d()/d[ho2]
  dqdci = +k_f * sc[7];
  J[982] += dqdci; // dwdot[o2]/d[ho2]
  J[986] -= dqdci; // dwdot[hco]/d[ho2]
  J[990] -= dqdci; // dwdot[ho2]/d[ho2]
  J[992] += dqdci; // dwdot[ch2o]/d[ho2]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7839] -= dqdT; // dwdot[hco]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT

  // reaction 74: ch2o + o2 => hco + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[13];
  k_f = 20500000 * exp(-(19600.2891330938) * invT);
  dlnkfdT = (19600.2891330938) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[7] += q;  // hco
  wdot[11] += q; // ho2
  wdot[13] -= q; // ch2o
  // d()/d[o2]
  dqdci = +k_f * sc[13];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[274] += dqdci; // dwdot[hco]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[280] -= dqdci; // dwdot[ch2o]/d[o2]
  // d()/d[ch2o]
  dqdci = +k_f * sc[3];
  J[1160] -= dqdci; // dwdot[o2]/d[ch2o]
  J[1164] += dqdci; // dwdot[hco]/d[ch2o]
  J[1168] += dqdci; // dwdot[ho2]/d[ch2o]
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7839] += dqdT; // dwdot[hco]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT

  // reaction 75: ch3o + o2 => ch2o + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[14];
  k_f = 55000 * exp(-(1219.79719791064) * invT);
  dlnkfdT = (1219.79719791064) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[13] += q; // ch2o
  wdot[14] -= q; // ch3o
  // d()/d[o2]
  dqdci = +k_f * sc[14];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[280] += dqdci; // dwdot[ch2o]/d[o2]
  J[281] -= dqdci; // dwdot[ch3o]/d[o2]
  // d()/d[ch3o]
  dqdci = +k_f * sc[3];
  J[1249] -= dqdci; // dwdot[o2]/d[ch3o]
  J[1257] += dqdci; // dwdot[ho2]/d[ch3o]
  J[1259] += dqdci; // dwdot[ch2o]/d[ch3o]
  J[1260] -= dqdci; // dwdot[ch3o]/d[ch3o]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT
  J[7846] -= dqdT; // dwdot[ch3o]/dT

  // reaction 76: ch2o + ho2 => ch3o + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[13];
  k_f = 1318 * exp(0.35 * logT - (15795.9711396102) * invT);
  dlnkfdT = 0.35 * invT + (15795.9711396102) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[13] -= q; // ch2o
  wdot[14] += q; // ch3o
  // d()/d[ho2]
  dqdci = +k_f * sc[13];
  J[982] += dqdci; // dwdot[o2]/d[ho2]
  J[990] -= dqdci; // dwdot[ho2]/d[ho2]
  J[992] -= dqdci; // dwdot[ch2o]/d[ho2]
  J[993] += dqdci; // dwdot[ch3o]/d[ho2]
  // d()/d[ch2o]
  dqdci = +k_f * sc[11];
  J[1160] += dqdci; // dwdot[o2]/d[ch2o]
  J[1168] -= dqdci; // dwdot[ho2]/d[ch2o]
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  J[1171] += dqdci; // dwdot[ch3o]/d[ch2o]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT
  J[7846] += dqdT; // dwdot[ch3o]/dT

  // reaction 77: ch3 + ho2 => ch4 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[11];
  k_f = 3600000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[11] -= q; // ho2
  // d()/d[ch3]
  dqdci = +k_f * sc[11];
  J[804] += dqdci; // dwdot[o2]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[812] -= dqdci; // dwdot[ho2]/d[ch3]
  // d()/d[ho2]
  dqdci = +k_f * sc[9];
  J[982] += dqdci; // dwdot[o2]/d[ho2]
  J[988] -= dqdci; // dwdot[ch3]/d[ho2]
  J[989] += dqdci; // dwdot[ch4]/d[ho2]
  J[990] -= dqdci; // dwdot[ho2]/d[ho2]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT

  // reaction 78: ch4 + o2 => ch3 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[10];
  k_f = 5177000000 * exp(-0.33 * logT - (29166.4379500416) * invT);
  dlnkfdT = -0.33 * invT + (29166.4379500416) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[11] += q; // ho2
  // d()/d[o2]
  dqdci = +k_f * sc[10];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[276] += dqdci; // dwdot[ch3]/d[o2]
  J[277] -= dqdci; // dwdot[ch4]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  // d()/d[ch4]
  dqdci = +k_f * sc[3];
  J[893] -= dqdci; // dwdot[o2]/d[ch4]
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[901] += dqdci; // dwdot[ho2]/d[ch4]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT

  // reaction 79: hco + o2 => co + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[7];
  k_f = 7580000 * exp(-(206.318832979935) * invT);
  dlnkfdT = (206.318832979935) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[6] += q;  // co
  wdot[7] -= q;  // hco
  wdot[11] += q; // ho2
  // d()/d[o2]
  dqdci = +k_f * sc[7];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[273] += dqdci; // dwdot[co]/d[o2]
  J[274] -= dqdci; // dwdot[hco]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  // d()/d[hco]
  dqdci = +k_f * sc[3];
  J[626] -= dqdci; // dwdot[o2]/d[hco]
  J[629] += dqdci; // dwdot[co]/d[hco]
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  J[634] += dqdci; // dwdot[ho2]/d[hco]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7839] -= dqdT; // dwdot[hco]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT

  // reaction 80: co + ho2 => hco + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[11];
  k_f = 902900 * exp(0.33 * logT - (16570.9248049494) * invT);
  dlnkfdT = 0.33 * invT + (16570.9248049494) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[6] -= q;  // co
  wdot[7] += q;  // hco
  wdot[11] -= q; // ho2
  // d()/d[co]
  dqdci = +k_f * sc[11];
  J[537] += dqdci; // dwdot[o2]/d[co]
  J[540] -= dqdci; // dwdot[co]/d[co]
  J[541] += dqdci; // dwdot[hco]/d[co]
  J[545] -= dqdci; // dwdot[ho2]/d[co]
  // d()/d[ho2]
  dqdci = +k_f * sc[6];
  J[982] += dqdci; // dwdot[o2]/d[ho2]
  J[985] -= dqdci; // dwdot[co]/d[ho2]
  J[986] += dqdci; // dwdot[hco]/d[ho2]
  J[990] -= dqdci; // dwdot[ho2]/d[ho2]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7839] += dqdT; // dwdot[hco]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT

  // reaction 81: h + ho2 => 2 oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[11];
  k_f = 70800000 * exp(-(150.964999741416) * invT);
  dlnkfdT = (150.964999741416) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;     // h
  wdot[4] += 2 * q; // oh
  wdot[11] -= q;    // ho2
  // d()/d[h]
  dqdci = +k_f * sc[11];
  J[0] -= dqdci;     // dwdot[h]/d[h]
  J[4] += 2 * dqdci; // dwdot[oh]/d[h]
  J[11] -= dqdci;    // dwdot[ho2]/d[h]
  // d()/d[ho2]
  dqdci = +k_f * sc[0];
  J[979] -= dqdci;     // dwdot[h]/d[ho2]
  J[983] += 2 * dqdci; // dwdot[oh]/d[ho2]
  J[990] -= dqdci;     // dwdot[ho2]/d[ho2]
  // d()/dT
  J[7832] -= dqdT;     // dwdot[h]/dT
  J[7836] += 2 * dqdT; // dwdot[oh]/dT
  J[7843] -= dqdT;     // dwdot[ho2]/dT

  // reaction 82: 2 oh => h + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[4] * sc[4]);
  k_f = 135200000 * exp(-0.33 * logT - (19912.2834658928) * invT);
  dlnkfdT = -0.33 * invT + (19912.2834658928) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;     // h
  wdot[4] -= 2 * q; // oh
  wdot[11] += q;    // ho2
  // d()/d[oh]
  dqdci = +k_f * 2.000000 * sc[4];
  J[356] += dqdci;      // dwdot[h]/d[oh]
  J[360] += -2 * dqdci; // dwdot[oh]/d[oh]
  J[367] += dqdci;      // dwdot[ho2]/d[oh]
  // d()/dT
  J[7832] += dqdT;      // dwdot[h]/dT
  J[7836] += -2 * dqdT; // dwdot[oh]/dT
  J[7843] += dqdT;      // dwdot[ho2]/dT

  // reaction 83: h + ho2 => h2 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[11];
  k_f = 16600000 * exp(-(412.63766595987) * invT);
  dlnkfdT = (412.63766595987) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  // d()/d[h]
  dqdci = +k_f * sc[11];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[3] += dqdci;  // dwdot[o2]/d[h]
  J[11] -= dqdci; // dwdot[ho2]/d[h]
  // d()/d[ho2]
  dqdci = +k_f * sc[0];
  J[979] -= dqdci; // dwdot[h]/d[ho2]
  J[980] += dqdci; // dwdot[h2]/d[ho2]
  J[982] += dqdci; // dwdot[o2]/d[ho2]
  J[990] -= dqdci; // dwdot[ho2]/d[ho2]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT

  // reaction 84: h2 + o2 => h + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[3];
  k_f = 913800000 * exp(-0.33 * logT - (29337.5316164152) * invT);
  dlnkfdT = -0.33 * invT + (29337.5316164152) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  // d()/d[h2]
  dqdci = +k_f * sc[3];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[92] -= dqdci;  // dwdot[o2]/d[h2]
  J[100] += dqdci; // dwdot[ho2]/d[h2]
  // d()/d[o2]
  dqdci = +k_f * sc[1];
  J[267] += dqdci; // dwdot[h]/d[o2]
  J[268] -= dqdci; // dwdot[h2]/d[o2]
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT

  // reaction 85: ho2 + oh => h2o + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[11];
  k_f = 28900000 * exp(-(-251.60833290236) * invT);
  dlnkfdT = (-251.60833290236) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[11] -= q; // ho2
  // d()/d[oh]
  dqdci = +k_f * sc[11];
  J[359] += dqdci; // dwdot[o2]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[367] -= dqdci; // dwdot[ho2]/d[oh]
  // d()/d[ho2]
  dqdci = +k_f * sc[4];
  J[982] += dqdci; // dwdot[o2]/d[ho2]
  J[983] -= dqdci; // dwdot[oh]/d[ho2]
  J[984] += dqdci; // dwdot[h2o]/d[ho2]
  J[990] -= dqdci; // dwdot[ho2]/d[ho2]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT

  // reaction 86: h2o + o2 => ho2 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[5];
  k_f = 6888000000 * exp(-0.33 * logT - (36302.0502711525) * invT);
  dlnkfdT = -0.33 * invT + (36302.0502711525) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[11] += q; // ho2
  // d()/d[o2]
  dqdci = +k_f * sc[5];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[271] += dqdci; // dwdot[oh]/d[o2]
  J[272] -= dqdci; // dwdot[h2o]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  // d()/d[h2o]
  dqdci = +k_f * sc[3];
  J[448] -= dqdci; // dwdot[o2]/d[h2o]
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[456] += dqdci; // dwdot[ho2]/d[h2o]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT

  // reaction 87: h2o2 + o2 => 2 ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[12];
  k_f = 594200000000 * exp(-0.66 * logT - (26745.9657875209) * invT);
  dlnkfdT = -0.66 * invT + (26745.9657875209) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;      // o2
  wdot[11] += 2 * q; // ho2
  wdot[12] -= q;     // h2o2
  // d()/d[o2]
  dqdci = +k_f * sc[12];
  J[270] -= dqdci;     // dwdot[o2]/d[o2]
  J[278] += 2 * dqdci; // dwdot[ho2]/d[o2]
  J[279] -= dqdci;     // dwdot[h2o2]/d[o2]
  // d()/d[h2o2]
  dqdci = +k_f * sc[3];
  J[1071] -= dqdci;     // dwdot[o2]/d[h2o2]
  J[1079] += 2 * dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci;     // dwdot[h2o2]/d[h2o2]
  // d()/dT
  J[7835] -= dqdT;     // dwdot[o2]/dT
  J[7843] += 2 * dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT;     // dwdot[h2o2]/dT

  // reaction 88: 2 ho2 => h2o2 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[11] * sc[11]);
  k_f = 420000000 * exp(-(6028.53565634054) * invT);
  dlnkfdT = (6028.53565634054) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;      // o2
  wdot[11] -= 2 * q; // ho2
  wdot[12] += q;     // h2o2
  // d()/d[ho2]
  dqdci = +k_f * 2.000000 * sc[11];
  J[982] += dqdci;      // dwdot[o2]/d[ho2]
  J[990] += -2 * dqdci; // dwdot[ho2]/d[ho2]
  J[991] += dqdci;      // dwdot[h2o2]/d[ho2]
  // d()/dT
  J[7835] += dqdT;      // dwdot[o2]/dT
  J[7843] += -2 * dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT;      // dwdot[h2o2]/dT

  // reaction 90: h + h2o2 => h2o + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[12];
  k_f = 24100000 * exp(-(1997.77016324474) * invT);
  dlnkfdT = (1997.77016324474) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[4] += q;  // oh
  wdot[5] += q;  // h2o
  wdot[12] -= q; // h2o2
  // d()/d[h]
  dqdci = +k_f * sc[12];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[4] += dqdci;  // dwdot[oh]/d[h]
  J[5] += dqdci;  // dwdot[h2o]/d[h]
  J[12] -= dqdci; // dwdot[h2o2]/d[h]
  // d()/d[h2o2]
  dqdci = +k_f * sc[0];
  J[1068] -= dqdci; // dwdot[h]/d[h2o2]
  J[1072] += dqdci; // dwdot[oh]/d[h2o2]
  J[1073] += dqdci; // dwdot[h2o]/d[h2o2]
  J[1080] -= dqdci; // dwdot[h2o2]/d[h2o2]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7844] -= dqdT; // dwdot[h2o2]/dT

  // reaction 91: h2o + oh => h + h2o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[5];
  k_f = 7750000 * exp(-(37590.2849356126) * invT);
  dlnkfdT = (37590.2849356126) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[4] -= q;  // oh
  wdot[5] -= q;  // h2o
  wdot[12] += q; // h2o2
  // d()/d[oh]
  dqdci = +k_f * sc[5];
  J[356] += dqdci; // dwdot[h]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] -= dqdci; // dwdot[h2o]/d[oh]
  J[368] += dqdci; // dwdot[h2o2]/d[oh]
  // d()/d[h2o]
  dqdci = +k_f * sc[4];
  J[445] += dqdci; // dwdot[h]/d[h2o]
  J[449] -= dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[457] += dqdci; // dwdot[h2o2]/d[h2o]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT

  // reaction 92: ch4 + ho2 => ch3 + h2o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[11];
  k_f = 342000 * exp(-(9707.04948337304) * invT);
  dlnkfdT = (9707.04948337304) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  // d()/d[ch4]
  dqdci = +k_f * sc[11];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[901] -= dqdci; // dwdot[ho2]/d[ch4]
  J[902] += dqdci; // dwdot[h2o2]/d[ch4]
  // d()/d[ho2]
  dqdci = +k_f * sc[10];
  J[988] += dqdci; // dwdot[ch3]/d[ho2]
  J[989] -= dqdci; // dwdot[ch4]/d[ho2]
  J[990] -= dqdci; // dwdot[ho2]/d[ho2]
  J[991] += dqdci; // dwdot[h2o2]/d[ho2]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT

  // reaction 93: ch3 + h2o2 => ch4 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[12];
  k_f = 336500 * exp(-0.33 * logT - (1259.04809784341) * invT);
  dlnkfdT = -0.33 * invT + (1259.04809784341) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[11] += q; // ho2
  wdot[12] -= q; // h2o2
  // d()/d[ch3]
  dqdci = +k_f * sc[12];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[812] += dqdci; // dwdot[ho2]/d[ch3]
  J[813] -= dqdci; // dwdot[h2o2]/d[ch3]
  // d()/d[h2o2]
  dqdci = +k_f * sc[9];
  J[1077] -= dqdci; // dwdot[ch3]/d[h2o2]
  J[1078] += dqdci; // dwdot[ch4]/d[h2o2]
  J[1079] += dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci; // dwdot[h2o2]/d[h2o2]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT; // dwdot[h2o2]/dT

  // reaction 94: ch2o + ho2 => h2o2 + hco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[13];
  k_f = 5.82e-09 * exp(4.53 * logT - (3299.59167768155) * invT);
  dlnkfdT = 4.53 * invT + (3299.59167768155) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[7] += q;  // hco
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  wdot[13] -= q; // ch2o
  // d()/d[ho2]
  dqdci = +k_f * sc[13];
  J[986] += dqdci; // dwdot[hco]/d[ho2]
  J[990] -= dqdci; // dwdot[ho2]/d[ho2]
  J[991] += dqdci; // dwdot[h2o2]/d[ho2]
  J[992] -= dqdci; // dwdot[ch2o]/d[ho2]
  // d()/d[ch2o]
  dqdci = +k_f * sc[11];
  J[1164] += dqdci; // dwdot[hco]/d[ch2o]
  J[1168] -= dqdci; // dwdot[ho2]/d[ch2o]
  J[1169] += dqdci; // dwdot[h2o2]/d[ch2o]
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  // d()/dT
  J[7839] += dqdT; // dwdot[hco]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT

  // reaction 95: h2o2 + hco => ch2o + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[12];
  k_f = 1.194e-08 * exp(4.2 * logT - (2476.32921242503) * invT);
  dlnkfdT = 4.2 * invT + (2476.32921242503) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[7] -= q;  // hco
  wdot[11] += q; // ho2
  wdot[12] -= q; // h2o2
  wdot[13] += q; // ch2o
  // d()/d[hco]
  dqdci = +k_f * sc[12];
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  J[634] += dqdci; // dwdot[ho2]/d[hco]
  J[635] -= dqdci; // dwdot[h2o2]/d[hco]
  J[636] += dqdci; // dwdot[ch2o]/d[hco]
  // d()/d[h2o2]
  dqdci = +k_f * sc[7];
  J[1075] -= dqdci; // dwdot[hco]/d[h2o2]
  J[1079] += dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci; // dwdot[h2o2]/d[h2o2]
  J[1081] += dqdci; // dwdot[ch2o]/d[h2o2]
  // d()/dT
  J[7839] -= dqdT; // dwdot[hco]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT; // dwdot[h2o2]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT

  // reaction 103: c2h3 + c2h5 => 2 c2h4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[19];
  k_f = 576500000 * exp(-0.63 * logT - (1253.00949785375) * invT);
  dlnkfdT = -0.63 * invT + (1253.00949785375) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] += 2 * q; // c2h4
  wdot[17] -= q;     // c2h5
  wdot[19] -= q;     // c2h3
  // d()/d[c2h5]
  dqdci = +k_f * sc[19];
  J[1529] += 2 * dqdci; // dwdot[c2h4]/d[c2h5]
  J[1530] -= dqdci;     // dwdot[c2h5]/d[c2h5]
  J[1532] -= dqdci;     // dwdot[c2h3]/d[c2h5]
  // d()/d[c2h3]
  dqdci = +k_f * sc[17];
  J[1707] += 2 * dqdci; // dwdot[c2h4]/d[c2h3]
  J[1708] -= dqdci;     // dwdot[c2h5]/d[c2h3]
  J[1710] -= dqdci;     // dwdot[c2h3]/d[c2h3]
  // d()/dT
  J[7848] += 2 * dqdT; // dwdot[c2h4]/dT
  J[7849] -= dqdT;     // dwdot[c2h5]/dT
  J[7851] -= dqdT;     // dwdot[c2h3]/dT

  // reaction 104: 2 c2h4 => c2h3 + c2h5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[16] * sc[16]);
  k_f = 482000000 * exp(-(35995.0881050116) * invT);
  dlnkfdT = (35995.0881050116) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] -= 2 * q; // c2h4
  wdot[17] += q;     // c2h5
  wdot[19] += q;     // c2h3
  // d()/d[c2h4]
  dqdci = +k_f * 2.000000 * sc[16];
  J[1440] += -2 * dqdci; // dwdot[c2h4]/d[c2h4]
  J[1441] += dqdci;      // dwdot[c2h5]/d[c2h4]
  J[1443] += dqdci;      // dwdot[c2h3]/d[c2h4]
  // d()/dT
  J[7848] += -2 * dqdT; // dwdot[c2h4]/dT
  J[7849] += dqdT;      // dwdot[c2h5]/dT
  J[7851] += dqdT;      // dwdot[c2h3]/dT

  // reaction 106: c2h4 + h => c2h3 + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[16];
  k_f = 8.42e-09 * exp(4.62 * logT - (1299.80864777359) * invT);
  dlnkfdT = 4.62 * invT + (1299.80864777359) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[16] -= q; // c2h4
  wdot[19] += q; // c2h3
  // d()/d[h]
  dqdci = +k_f * sc[16];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[16] -= dqdci; // dwdot[c2h4]/d[h]
  J[19] += dqdci; // dwdot[c2h3]/d[h]
  // d()/d[c2h4]
  dqdci = +k_f * sc[0];
  J[1424] -= dqdci; // dwdot[h]/d[c2h4]
  J[1425] += dqdci; // dwdot[h2]/d[c2h4]
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1443] += dqdci; // dwdot[c2h3]/d[c2h4]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT

  // reaction 107: c2h3 + h2 => c2h4 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[19];
  k_f = 5.723e-07 * exp(3.79 * logT - (1626.89948054666) * invT);
  dlnkfdT = 3.79 * invT + (1626.89948054666) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[16] += q; // c2h4
  wdot[19] -= q; // c2h3
  // d()/d[h2]
  dqdci = +k_f * sc[19];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[105] += dqdci; // dwdot[c2h4]/d[h2]
  J[108] -= dqdci; // dwdot[c2h3]/d[h2]
  // d()/d[c2h3]
  dqdci = +k_f * sc[1];
  J[1691] += dqdci; // dwdot[h]/d[c2h3]
  J[1692] -= dqdci; // dwdot[h2]/d[c2h3]
  J[1707] += dqdci; // dwdot[c2h4]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT

  // reaction 108: c2h4 + oh => c2h3 + h2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[16];
  k_f = 20500000 * exp(-(2994.13916153808) * invT);
  dlnkfdT = (2994.13916153808) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[16] -= q; // c2h4
  wdot[19] += q; // c2h3
  // d()/d[oh]
  dqdci = +k_f * sc[16];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[372] -= dqdci; // dwdot[c2h4]/d[oh]
  J[375] += dqdci; // dwdot[c2h3]/d[oh]
  // d()/d[c2h4]
  dqdci = +k_f * sc[4];
  J[1428] -= dqdci; // dwdot[oh]/d[c2h4]
  J[1429] += dqdci; // dwdot[h2o]/d[c2h4]
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1443] += dqdci; // dwdot[c2h3]/d[c2h4]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT

  // reaction 109: c2h3 + h2o => c2h4 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[19];
  k_f = 6033000000 * exp(-0.83 * logT - (10949.9946479107) * invT);
  dlnkfdT = -0.83 * invT + (10949.9946479107) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[16] += q; // c2h4
  wdot[19] -= q; // c2h3
  // d()/d[h2o]
  dqdci = +k_f * sc[19];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[461] += dqdci; // dwdot[c2h4]/d[h2o]
  J[464] -= dqdci; // dwdot[c2h3]/d[h2o]
  // d()/d[c2h3]
  dqdci = +k_f * sc[5];
  J[1695] += dqdci; // dwdot[oh]/d[c2h3]
  J[1696] -= dqdci; // dwdot[h2o]/d[c2h3]
  J[1707] += dqdci; // dwdot[c2h4]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT

  // reaction 110: c2h2 + o2 => hcco + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[18];
  k_f = 200 * exp(1.5 * logT - (15146.8216407221) * invT);
  dlnkfdT = 1.5 * invT + (15146.8216407221) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[4] += q;  // oh
  wdot[18] -= q; // c2h2
  wdot[21] += q; // hcco
  // d()/d[o2]
  dqdci = +k_f * sc[18];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[271] += dqdci; // dwdot[oh]/d[o2]
  J[285] -= dqdci; // dwdot[c2h2]/d[o2]
  J[288] += dqdci; // dwdot[hcco]/d[o2]
  // d()/d[c2h2]
  dqdci = +k_f * sc[3];
  J[1605] -= dqdci; // dwdot[o2]/d[c2h2]
  J[1606] += dqdci; // dwdot[oh]/d[c2h2]
  J[1620] -= dqdci; // dwdot[c2h2]/d[c2h2]
  J[1623] += dqdci; // dwdot[hcco]/d[c2h2]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7850] -= dqdT; // dwdot[c2h2]/dT
  J[7853] += dqdT; // dwdot[hcco]/dT

  // reaction 111: hcco + oh => c2h2 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[21];
  k_f = 0.2232 * exp(1.5 * logT - (12781.7033114399) * invT);
  dlnkfdT = 1.5 * invT + (12781.7033114399) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[4] -= q;  // oh
  wdot[18] += q; // c2h2
  wdot[21] -= q; // hcco
  // d()/d[oh]
  dqdci = +k_f * sc[21];
  J[359] += dqdci; // dwdot[o2]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[374] += dqdci; // dwdot[c2h2]/d[oh]
  J[377] -= dqdci; // dwdot[hcco]/d[oh]
  // d()/d[hcco]
  dqdci = +k_f * sc[4];
  J[1872] += dqdci; // dwdot[o2]/d[hcco]
  J[1873] -= dqdci; // dwdot[oh]/d[hcco]
  J[1887] += dqdci; // dwdot[c2h2]/d[hcco]
  J[1890] -= dqdci; // dwdot[hcco]/d[hcco]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7850] += dqdT; // dwdot[c2h2]/dT
  J[7853] -= dqdT; // dwdot[hcco]/dT

  // reaction 112: c2h3 + o2 => c2h2 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[19];
  k_f = 2.12e-12 * exp(6 * logT - (4772.50685849196) * invT);
  dlnkfdT = 6 * invT + (4772.50685849196) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[18] += q; // c2h2
  wdot[19] -= q; // c2h3
  // d()/d[o2]
  dqdci = +k_f * sc[19];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[285] += dqdci; // dwdot[c2h2]/d[o2]
  J[286] -= dqdci; // dwdot[c2h3]/d[o2]
  // d()/d[c2h3]
  dqdci = +k_f * sc[3];
  J[1694] -= dqdci; // dwdot[o2]/d[c2h3]
  J[1702] += dqdci; // dwdot[ho2]/d[c2h3]
  J[1709] += dqdci; // dwdot[c2h2]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7850] += dqdT; // dwdot[c2h2]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT

  // reaction 113: c2h2 + ho2 => c2h3 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[18];
  k_f = 1.114e-13 * exp(6.33 * logT - (8841.51681818893) * invT);
  dlnkfdT = 6.33 * invT + (8841.51681818893) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[18] -= q; // c2h2
  wdot[19] += q; // c2h3
  // d()/d[ho2]
  dqdci = +k_f * sc[18];
  J[982] += dqdci; // dwdot[o2]/d[ho2]
  J[990] -= dqdci; // dwdot[ho2]/d[ho2]
  J[997] -= dqdci; // dwdot[c2h2]/d[ho2]
  J[998] += dqdci; // dwdot[c2h3]/d[ho2]
  // d()/d[c2h2]
  dqdci = +k_f * sc[11];
  J[1605] += dqdci; // dwdot[o2]/d[c2h2]
  J[1613] -= dqdci; // dwdot[ho2]/d[c2h2]
  J[1620] -= dqdci; // dwdot[c2h2]/d[c2h2]
  J[1621] += dqdci; // dwdot[c2h3]/d[c2h2]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7850] -= dqdT; // dwdot[c2h2]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT

  // reaction 114: h2o2 + o => ho2 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[12];
  k_f = 9.55 * exp(2 * logT - (1997.77016324474) * invT);
  dlnkfdT = 2 * invT + (1997.77016324474) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[4] += q;  // oh
  wdot[11] += q; // ho2
  wdot[12] -= q; // h2o2
  // d()/d[o]
  dqdci = +k_f * sc[12];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[182] += dqdci; // dwdot[oh]/d[o]
  J[189] += dqdci; // dwdot[ho2]/d[o]
  J[190] -= dqdci; // dwdot[h2o2]/d[o]
  // d()/d[h2o2]
  dqdci = +k_f * sc[2];
  J[1070] -= dqdci; // dwdot[o]/d[h2o2]
  J[1072] += dqdci; // dwdot[oh]/d[h2o2]
  J[1079] += dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci; // dwdot[h2o2]/d[h2o2]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT; // dwdot[h2o2]/dT

  // reaction 115: ho2 + oh => h2o2 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[11];
  k_f = 0.1632 * exp(2.33 * logT - (9148.4789843298) * invT);
  dlnkfdT = 2.33 * invT + (9148.4789843298) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[4] -= q;  // oh
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  // d()/d[oh]
  dqdci = +k_f * sc[11];
  J[358] += dqdci; // dwdot[o]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[367] -= dqdci; // dwdot[ho2]/d[oh]
  J[368] += dqdci; // dwdot[h2o2]/d[oh]
  // d()/d[ho2]
  dqdci = +k_f * sc[4];
  J[981] += dqdci; // dwdot[o]/d[ho2]
  J[983] -= dqdci; // dwdot[oh]/d[ho2]
  J[990] -= dqdci; // dwdot[ho2]/d[ho2]
  J[991] += dqdci; // dwdot[h2o2]/d[ho2]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT

  // reaction 116: c2h2 + o => h + hcco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[18];
  k_f = 14.3 * exp(2 * logT - (956.111665028967) * invT);
  dlnkfdT = 2 * invT + (956.111665028967) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[2] -= q;  // o
  wdot[18] -= q; // c2h2
  wdot[21] += q; // hcco
  // d()/d[o]
  dqdci = +k_f * sc[18];
  J[178] += dqdci; // dwdot[h]/d[o]
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[196] -= dqdci; // dwdot[c2h2]/d[o]
  J[199] += dqdci; // dwdot[hcco]/d[o]
  // d()/d[c2h2]
  dqdci = +k_f * sc[2];
  J[1602] += dqdci; // dwdot[h]/d[c2h2]
  J[1604] -= dqdci; // dwdot[o]/d[c2h2]
  J[1620] -= dqdci; // dwdot[c2h2]/d[c2h2]
  J[1623] += dqdci; // dwdot[hcco]/d[c2h2]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7850] -= dqdT; // dwdot[c2h2]/dT
  J[7853] += dqdT; // dwdot[hcco]/dT

  // reaction 117: h + hcco => c2h2 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[21];
  k_f = 0.2021 * exp(2 * logT - (6697.81382186082) * invT);
  dlnkfdT = 2 * invT + (6697.81382186082) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[2] += q;  // o
  wdot[18] += q; // c2h2
  wdot[21] -= q; // hcco
  // d()/d[h]
  dqdci = +k_f * sc[21];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[2] += dqdci;  // dwdot[o]/d[h]
  J[18] += dqdci; // dwdot[c2h2]/d[h]
  J[21] -= dqdci; // dwdot[hcco]/d[h]
  // d()/d[hcco]
  dqdci = +k_f * sc[0];
  J[1869] -= dqdci; // dwdot[h]/d[hcco]
  J[1871] += dqdci; // dwdot[o]/d[hcco]
  J[1887] += dqdci; // dwdot[c2h2]/d[hcco]
  J[1890] -= dqdci; // dwdot[hcco]/d[hcco]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7850] += dqdT; // dwdot[c2h2]/dT
  J[7853] -= dqdT; // dwdot[hcco]/dT

  // reaction 118: c2h2 + oh => ch2co + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[18];
  k_f = 2.19e-10 * exp(4.5 * logT - (-503.21666580472) * invT);
  dlnkfdT = 4.5 * invT + (-503.21666580472) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[4] -= q;  // oh
  wdot[18] -= q; // c2h2
  wdot[20] += q; // ch2co
  // d()/d[oh]
  dqdci = +k_f * sc[18];
  J[356] += dqdci; // dwdot[h]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[374] -= dqdci; // dwdot[c2h2]/d[oh]
  J[376] += dqdci; // dwdot[ch2co]/d[oh]
  // d()/d[c2h2]
  dqdci = +k_f * sc[4];
  J[1602] += dqdci; // dwdot[h]/d[c2h2]
  J[1606] -= dqdci; // dwdot[oh]/d[c2h2]
  J[1620] -= dqdci; // dwdot[c2h2]/d[c2h2]
  J[1622] += dqdci; // dwdot[ch2co]/d[c2h2]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7850] -= dqdT; // dwdot[c2h2]/dT
  J[7852] += dqdT; // dwdot[ch2co]/dT

  // reaction 119: ch2co + h => c2h2 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[20];
  k_f = 2.161e-09 * exp(4.5 * logT - (9893.23964972079) * invT);
  dlnkfdT = 4.5 * invT + (9893.23964972079) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[4] += q;  // oh
  wdot[18] += q; // c2h2
  wdot[20] -= q; // ch2co
  // d()/d[h]
  dqdci = +k_f * sc[20];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[4] += dqdci;  // dwdot[oh]/d[h]
  J[18] += dqdci; // dwdot[c2h2]/d[h]
  J[20] -= dqdci; // dwdot[ch2co]/d[h]
  // d()/d[ch2co]
  dqdci = +k_f * sc[0];
  J[1780] -= dqdci; // dwdot[h]/d[ch2co]
  J[1784] += dqdci; // dwdot[oh]/d[ch2co]
  J[1798] += dqdci; // dwdot[c2h2]/d[ch2co]
  J[1800] -= dqdci; // dwdot[ch2co]/d[ch2co]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7850] += dqdT; // dwdot[c2h2]/dT
  J[7852] -= dqdT; // dwdot[ch2co]/dT

  // reaction 120: ch2co + h => ch3 + co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[20];
  k_f = 11000000 * exp(-(1710.93666373605) * invT);
  dlnkfdT = (1710.93666373605) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[6] += q;  // co
  wdot[9] += q;  // ch3
  wdot[20] -= q; // ch2co
  // d()/d[h]
  dqdci = +k_f * sc[20];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[6] += dqdci;  // dwdot[co]/d[h]
  J[9] += dqdci;  // dwdot[ch3]/d[h]
  J[20] -= dqdci; // dwdot[ch2co]/d[h]
  // d()/d[ch2co]
  dqdci = +k_f * sc[0];
  J[1780] -= dqdci; // dwdot[h]/d[ch2co]
  J[1786] += dqdci; // dwdot[co]/d[ch2co]
  J[1789] += dqdci; // dwdot[ch3]/d[ch2co]
  J[1800] -= dqdci; // dwdot[ch2co]/d[ch2co]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7852] -= dqdT; // dwdot[ch2co]/dT

  // reaction 121: ch3 + co => ch2co + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[9];
  k_f = 2400000 * exp(-(20229.3099653497) * invT);
  dlnkfdT = (20229.3099653497) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[6] -= q;  // co
  wdot[9] -= q;  // ch3
  wdot[20] += q; // ch2co
  // d()/d[co]
  dqdci = +k_f * sc[9];
  J[534] += dqdci; // dwdot[h]/d[co]
  J[540] -= dqdci; // dwdot[co]/d[co]
  J[543] -= dqdci; // dwdot[ch3]/d[co]
  J[554] += dqdci; // dwdot[ch2co]/d[co]
  // d()/d[ch3]
  dqdci = +k_f * sc[6];
  J[801] += dqdci; // dwdot[h]/d[ch3]
  J[807] -= dqdci; // dwdot[co]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[821] += dqdci; // dwdot[ch2co]/d[ch3]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7852] += dqdT; // dwdot[ch2co]/dT

  // reaction 122: ch2co + o => hcco + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[20];
  k_f = 10000000 * exp(-(4025.73332643776) * invT);
  dlnkfdT = (4025.73332643776) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[4] += q;  // oh
  wdot[20] -= q; // ch2co
  wdot[21] += q; // hcco
  // d()/d[o]
  dqdci = +k_f * sc[20];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[182] += dqdci; // dwdot[oh]/d[o]
  J[198] -= dqdci; // dwdot[ch2co]/d[o]
  J[199] += dqdci; // dwdot[hcco]/d[o]
  // d()/d[ch2co]
  dqdci = +k_f * sc[2];
  J[1782] -= dqdci; // dwdot[o]/d[ch2co]
  J[1784] += dqdci; // dwdot[oh]/d[ch2co]
  J[1800] -= dqdci; // dwdot[ch2co]/d[ch2co]
  J[1801] += dqdci; // dwdot[hcco]/d[ch2co]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7852] -= dqdT; // dwdot[ch2co]/dT
  J[7853] += dqdT; // dwdot[hcco]/dT

  // reaction 123: hcco + oh => ch2co + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[21];
  k_f = 14320 * exp(-(-631.536915584923) * invT);
  dlnkfdT = (-631.536915584923) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[4] -= q;  // oh
  wdot[20] += q; // ch2co
  wdot[21] -= q; // hcco
  // d()/d[oh]
  dqdci = +k_f * sc[21];
  J[358] += dqdci; // dwdot[o]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[376] += dqdci; // dwdot[ch2co]/d[oh]
  J[377] -= dqdci; // dwdot[hcco]/d[oh]
  // d()/d[hcco]
  dqdci = +k_f * sc[4];
  J[1871] += dqdci; // dwdot[o]/d[hcco]
  J[1873] -= dqdci; // dwdot[oh]/d[hcco]
  J[1889] += dqdci; // dwdot[ch2co]/d[hcco]
  J[1890] -= dqdci; // dwdot[hcco]/d[hcco]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7852] += dqdT; // dwdot[ch2co]/dT
  J[7853] -= dqdT; // dwdot[hcco]/dT

  // reaction 124: ch2co + oh => h2o + hcco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[20];
  k_f = 10000000 * exp(-(1006.43333160944) * invT);
  dlnkfdT = (1006.43333160944) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[20] -= q; // ch2co
  wdot[21] += q; // hcco
  // d()/d[oh]
  dqdci = +k_f * sc[20];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[376] -= dqdci; // dwdot[ch2co]/d[oh]
  J[377] += dqdci; // dwdot[hcco]/d[oh]
  // d()/d[ch2co]
  dqdci = +k_f * sc[4];
  J[1784] -= dqdci; // dwdot[oh]/d[ch2co]
  J[1785] += dqdci; // dwdot[h2o]/d[ch2co]
  J[1800] -= dqdci; // dwdot[ch2co]/d[ch2co]
  J[1801] += dqdci; // dwdot[hcco]/d[ch2co]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7852] -= dqdT; // dwdot[ch2co]/dT
  J[7853] += dqdT; // dwdot[hcco]/dT

  // reaction 125: h2o + hcco => ch2co + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[21];
  k_f = 141200 * exp(-(5029.65057471817) * invT);
  dlnkfdT = (5029.65057471817) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[20] += q; // ch2co
  wdot[21] -= q; // hcco
  // d()/d[h2o]
  dqdci = +k_f * sc[21];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[465] += dqdci; // dwdot[ch2co]/d[h2o]
  J[466] -= dqdci; // dwdot[hcco]/d[h2o]
  // d()/d[hcco]
  dqdci = +k_f * sc[5];
  J[1873] += dqdci; // dwdot[oh]/d[hcco]
  J[1874] -= dqdci; // dwdot[h2o]/d[hcco]
  J[1889] += dqdci; // dwdot[ch2co]/d[hcco]
  J[1890] -= dqdci; // dwdot[hcco]/d[hcco]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7852] += dqdT; // dwdot[ch2co]/dT
  J[7853] -= dqdT; // dwdot[hcco]/dT

  // reaction 126: ch2co + h => h2 + hcco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[20];
  k_f = 200000000 * exp(-(4025.73332643776) * invT);
  dlnkfdT = (4025.73332643776) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[20] -= q; // ch2co
  wdot[21] += q; // hcco
  // d()/d[h]
  dqdci = +k_f * sc[20];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[20] -= dqdci; // dwdot[ch2co]/d[h]
  J[21] += dqdci; // dwdot[hcco]/d[h]
  // d()/d[ch2co]
  dqdci = +k_f * sc[0];
  J[1780] -= dqdci; // dwdot[h]/d[ch2co]
  J[1781] += dqdci; // dwdot[h2]/d[ch2co]
  J[1800] -= dqdci; // dwdot[ch2co]/d[ch2co]
  J[1801] += dqdci; // dwdot[hcco]/d[ch2co]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7852] -= dqdT; // dwdot[ch2co]/dT
  J[7853] += dqdT; // dwdot[hcco]/dT

  // reaction 127: h2 + hcco => ch2co + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[21];
  k_f = 652200 * exp(-(422.701999275965) * invT);
  dlnkfdT = (422.701999275965) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[20] += q; // ch2co
  wdot[21] -= q; // hcco
  // d()/d[h2]
  dqdci = +k_f * sc[21];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[109] += dqdci; // dwdot[ch2co]/d[h2]
  J[110] -= dqdci; // dwdot[hcco]/d[h2]
  // d()/d[hcco]
  dqdci = +k_f * sc[1];
  J[1869] += dqdci; // dwdot[h]/d[hcco]
  J[1870] -= dqdci; // dwdot[h2]/d[hcco]
  J[1889] += dqdci; // dwdot[ch2co]/d[hcco]
  J[1890] -= dqdci; // dwdot[hcco]/d[hcco]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7852] += dqdT; // dwdot[ch2co]/dT
  J[7853] -= dqdT; // dwdot[hcco]/dT

  // reaction 128: hcco + oh => 2 hco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[21];
  k_f = 10000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;     // oh
  wdot[7] += 2 * q; // hco
  wdot[21] -= q;    // hcco
  // d()/d[oh]
  dqdci = +k_f * sc[21];
  J[360] -= dqdci;     // dwdot[oh]/d[oh]
  J[363] += 2 * dqdci; // dwdot[hco]/d[oh]
  J[377] -= dqdci;     // dwdot[hcco]/d[oh]
  // d()/d[hcco]
  dqdci = +k_f * sc[4];
  J[1873] -= dqdci;     // dwdot[oh]/d[hcco]
  J[1876] += 2 * dqdci; // dwdot[hco]/d[hcco]
  J[1890] -= dqdci;     // dwdot[hcco]/d[hcco]
  // d()/dT
  J[7836] -= dqdT;     // dwdot[oh]/dT
  J[7839] += 2 * dqdT; // dwdot[hco]/dT
  J[7853] -= dqdT;     // dwdot[hcco]/dT

  // reaction 129: 2 hco => hcco + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[7] * sc[7]);
  k_f = 241100000 * exp(-(20309.8246318785) * invT);
  dlnkfdT = (20309.8246318785) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;     // oh
  wdot[7] -= 2 * q; // hco
  wdot[21] += q;    // hcco
  // d()/d[hco]
  dqdci = +k_f * 2.000000 * sc[7];
  J[627] += dqdci;      // dwdot[oh]/d[hco]
  J[630] += -2 * dqdci; // dwdot[hco]/d[hco]
  J[644] += dqdci;      // dwdot[hcco]/d[hco]
  // d()/dT
  J[7836] += dqdT;      // dwdot[oh]/dT
  J[7839] += -2 * dqdT; // dwdot[hco]/dT
  J[7853] += dqdT;      // dwdot[hcco]/dT

  // reaction 130: h + hcco => ch2(s) + co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[21];
  k_f = 110000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[6] += q;  // co
  wdot[21] -= q; // hcco
  wdot[50] += q; // ch2(s)
  // d()/d[h]
  dqdci = +k_f * sc[21];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[6] += dqdci;  // dwdot[co]/d[h]
  J[21] -= dqdci; // dwdot[hcco]/d[h]
  J[50] += dqdci; // dwdot[ch2(s)]/d[h]
  // d()/d[hcco]
  dqdci = +k_f * sc[0];
  J[1869] -= dqdci; // dwdot[h]/d[hcco]
  J[1875] += dqdci; // dwdot[co]/d[hcco]
  J[1890] -= dqdci; // dwdot[hcco]/d[hcco]
  J[1919] += dqdci; // dwdot[ch2(s)]/d[hcco]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7853] -= dqdT; // dwdot[hcco]/dT
  J[7882] += dqdT; // dwdot[ch2(s)]/dT

  // reaction 131: ch2(s) + co => h + hcco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[50];
  k_f = 2046000 * exp(0.89 * logT - (14004.5198093453) * invT);
  dlnkfdT = 0.89 * invT + (14004.5198093453) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[6] -= q;  // co
  wdot[21] += q; // hcco
  wdot[50] -= q; // ch2(s)
  // d()/d[co]
  dqdci = +k_f * sc[50];
  J[534] += dqdci; // dwdot[h]/d[co]
  J[540] -= dqdci; // dwdot[co]/d[co]
  J[555] += dqdci; // dwdot[hcco]/d[co]
  J[584] -= dqdci; // dwdot[ch2(s)]/d[co]
  // d()/d[ch2(s)]
  dqdci = +k_f * sc[6];
  J[4450] += dqdci; // dwdot[h]/d[ch2(s)]
  J[4456] -= dqdci; // dwdot[co]/d[ch2(s)]
  J[4471] += dqdci; // dwdot[hcco]/d[ch2(s)]
  J[4500] -= dqdci; // dwdot[ch2(s)]/d[ch2(s)]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7853] += dqdT; // dwdot[hcco]/dT
  J[7882] -= dqdT; // dwdot[ch2(s)]/dT

  // reaction 132: hcco + o => 2 co + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[21];
  k_f = 80000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;     // h
  wdot[2] -= q;     // o
  wdot[6] += 2 * q; // co
  wdot[21] -= q;    // hcco
  // d()/d[o]
  dqdci = +k_f * sc[21];
  J[178] += dqdci;     // dwdot[h]/d[o]
  J[180] -= dqdci;     // dwdot[o]/d[o]
  J[184] += 2 * dqdci; // dwdot[co]/d[o]
  J[199] -= dqdci;     // dwdot[hcco]/d[o]
  // d()/d[hcco]
  dqdci = +k_f * sc[2];
  J[1869] += dqdci;     // dwdot[h]/d[hcco]
  J[1871] -= dqdci;     // dwdot[o]/d[hcco]
  J[1875] += 2 * dqdci; // dwdot[co]/d[hcco]
  J[1890] -= dqdci;     // dwdot[hcco]/d[hcco]
  // d()/dT
  J[7832] += dqdT;     // dwdot[h]/dT
  J[7834] -= dqdT;     // dwdot[o]/dT
  J[7838] += 2 * dqdT; // dwdot[co]/dT
  J[7853] -= dqdT;     // dwdot[hcco]/dT

  // reaction 133: c2h6 + o2 => c2h5 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[15];
  k_f = 60300000 * exp(-(26101.8484552908) * invT);
  dlnkfdT = (26101.8484552908) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[15] -= q; // c2h6
  wdot[17] += q; // c2h5
  // d()/d[o2]
  dqdci = +k_f * sc[15];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[282] -= dqdci; // dwdot[c2h6]/d[o2]
  J[284] += dqdci; // dwdot[c2h5]/d[o2]
  // d()/d[c2h6]
  dqdci = +k_f * sc[3];
  J[1338] -= dqdci; // dwdot[o2]/d[c2h6]
  J[1346] += dqdci; // dwdot[ho2]/d[c2h6]
  J[1350] -= dqdci; // dwdot[c2h6]/d[c2h6]
  J[1352] += dqdci; // dwdot[c2h5]/d[c2h6]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7847] -= dqdT; // dwdot[c2h6]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT

  // reaction 134: c2h5 + ho2 => c2h6 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[17];
  k_f = 267.9 * exp(0.89 * logT - (-967.182431676671) * invT);
  dlnkfdT = 0.89 * invT + (-967.182431676671) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[15] += q; // c2h6
  wdot[17] -= q; // c2h5
  // d()/d[ho2]
  dqdci = +k_f * sc[17];
  J[982] += dqdci; // dwdot[o2]/d[ho2]
  J[990] -= dqdci; // dwdot[ho2]/d[ho2]
  J[994] += dqdci; // dwdot[c2h6]/d[ho2]
  J[996] -= dqdci; // dwdot[c2h5]/d[ho2]
  // d()/d[c2h5]
  dqdci = +k_f * sc[11];
  J[1516] += dqdci; // dwdot[o2]/d[c2h5]
  J[1524] -= dqdci; // dwdot[ho2]/d[c2h5]
  J[1528] += dqdci; // dwdot[c2h6]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7847] += dqdT; // dwdot[c2h6]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT

  // reaction 135: c2h6 + ho2 => c2h5 + h2o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[15];
  k_f = 13200000 * exp(-(10300.8451490226) * invT);
  dlnkfdT = (10300.8451490226) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  wdot[15] -= q; // c2h6
  wdot[17] += q; // c2h5
  // d()/d[ho2]
  dqdci = +k_f * sc[15];
  J[990] -= dqdci; // dwdot[ho2]/d[ho2]
  J[991] += dqdci; // dwdot[h2o2]/d[ho2]
  J[994] -= dqdci; // dwdot[c2h6]/d[ho2]
  J[996] += dqdci; // dwdot[c2h5]/d[ho2]
  // d()/d[c2h6]
  dqdci = +k_f * sc[11];
  J[1346] -= dqdci; // dwdot[ho2]/d[c2h6]
  J[1347] += dqdci; // dwdot[h2o2]/d[c2h6]
  J[1350] -= dqdci; // dwdot[c2h6]/d[c2h6]
  J[1352] += dqdci; // dwdot[c2h5]/d[c2h6]
  // d()/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT
  J[7847] -= dqdT; // dwdot[c2h6]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT

  // reaction 136: c2h5 + h2o2 => c2h6 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[17];
  k_f = 82980 * exp(0.24 * logT - (3951.25725989866) * invT);
  dlnkfdT = 0.24 * invT + (3951.25725989866) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // ho2
  wdot[12] -= q; // h2o2
  wdot[15] += q; // c2h6
  wdot[17] -= q; // c2h5
  // d()/d[h2o2]
  dqdci = +k_f * sc[17];
  J[1079] += dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci; // dwdot[h2o2]/d[h2o2]
  J[1083] += dqdci; // dwdot[c2h6]/d[h2o2]
  J[1085] -= dqdci; // dwdot[c2h5]/d[h2o2]
  // d()/d[c2h5]
  dqdci = +k_f * sc[12];
  J[1524] += dqdci; // dwdot[ho2]/d[c2h5]
  J[1525] -= dqdci; // dwdot[h2o2]/d[c2h5]
  J[1528] += dqdci; // dwdot[c2h6]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  // d()/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT; // dwdot[h2o2]/dT
  J[7847] += dqdT; // dwdot[c2h6]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT

  // reaction 137: c2h3 + ch3 => c2h2 + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[19];
  k_f = 392000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[18] += q; // c2h2
  wdot[19] -= q; // c2h3
  // d()/d[ch3]
  dqdci = +k_f * sc[19];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[819] += dqdci; // dwdot[c2h2]/d[ch3]
  J[820] -= dqdci; // dwdot[c2h3]/d[ch3]
  // d()/d[c2h3]
  dqdci = +k_f * sc[9];
  J[1700] -= dqdci; // dwdot[ch3]/d[c2h3]
  J[1701] += dqdci; // dwdot[ch4]/d[c2h3]
  J[1709] += dqdci; // dwdot[c2h2]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7850] += dqdT; // dwdot[c2h2]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT

  // reaction 138: c2h2 + ch4 => c2h3 + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[18];
  k_f = 29620000 * exp(-(33237.4607764017) * invT);
  dlnkfdT = (33237.4607764017) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[18] -= q; // c2h2
  wdot[19] += q; // c2h3
  // d()/d[ch4]
  dqdci = +k_f * sc[18];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[908] -= dqdci; // dwdot[c2h2]/d[ch4]
  J[909] += dqdci; // dwdot[c2h3]/d[ch4]
  // d()/d[c2h2]
  dqdci = +k_f * sc[10];
  J[1611] += dqdci; // dwdot[ch3]/d[c2h2]
  J[1612] -= dqdci; // dwdot[ch4]/d[c2h2]
  J[1620] -= dqdci; // dwdot[c2h2]/d[c2h2]
  J[1621] += dqdci; // dwdot[c2h3]/d[c2h2]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7850] -= dqdT; // dwdot[c2h2]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT

  // reaction 139: c2h5 + ch3 => c2h4 + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[17];
  k_f = 19500000 * exp(-0.5 * logT);
  dlnkfdT = -0.5 * invT;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[16] += q; // c2h4
  wdot[17] -= q; // c2h5
  // d()/d[ch3]
  dqdci = +k_f * sc[17];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[817] += dqdci; // dwdot[c2h4]/d[ch3]
  J[818] -= dqdci; // dwdot[c2h5]/d[ch3]
  // d()/d[c2h5]
  dqdci = +k_f * sc[9];
  J[1522] -= dqdci; // dwdot[ch3]/d[c2h5]
  J[1523] += dqdci; // dwdot[ch4]/d[c2h5]
  J[1529] += dqdci; // dwdot[c2h4]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT

  // reaction 140: c2h4 + ch4 => c2h5 + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[16];
  k_f = 28950000000 * exp(-0.7 * logT - (35310.7134395172) * invT);
  dlnkfdT = -0.7 * invT + (35310.7134395172) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[16] -= q; // c2h4
  wdot[17] += q; // c2h5
  // d()/d[ch4]
  dqdci = +k_f * sc[16];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[906] -= dqdci; // dwdot[c2h4]/d[ch4]
  J[907] += dqdci; // dwdot[c2h5]/d[ch4]
  // d()/d[c2h4]
  dqdci = +k_f * sc[10];
  J[1433] += dqdci; // dwdot[ch3]/d[c2h4]
  J[1434] -= dqdci; // dwdot[ch4]/d[c2h4]
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1441] += dqdci; // dwdot[c2h5]/d[c2h4]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT

  // reaction 141: c2h3 + h => c2h2 + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[19];
  k_f = 20000000 * exp(-(1258.0416645118) * invT);
  dlnkfdT = (1258.0416645118) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[18] += q; // c2h2
  wdot[19] -= q; // c2h3
  // d()/d[h]
  dqdci = +k_f * sc[19];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[18] += dqdci; // dwdot[c2h2]/d[h]
  J[19] -= dqdci; // dwdot[c2h3]/d[h]
  // d()/d[c2h3]
  dqdci = +k_f * sc[0];
  J[1691] -= dqdci; // dwdot[h]/d[c2h3]
  J[1692] += dqdci; // dwdot[h2]/d[c2h3]
  J[1709] += dqdci; // dwdot[c2h2]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7850] += dqdT; // dwdot[c2h2]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT

  // reaction 142: c2h2 + h2 => c2h3 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[18];
  k_f = 13310000 * exp(-(34258.9906079853) * invT);
  dlnkfdT = (34258.9906079853) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[18] -= q; // c2h2
  wdot[19] += q; // c2h3
  // d()/d[h2]
  dqdci = +k_f * sc[18];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[107] -= dqdci; // dwdot[c2h2]/d[h2]
  J[108] += dqdci; // dwdot[c2h3]/d[h2]
  // d()/d[c2h2]
  dqdci = +k_f * sc[1];
  J[1602] += dqdci; // dwdot[h]/d[c2h2]
  J[1603] -= dqdci; // dwdot[h2]/d[c2h2]
  J[1620] -= dqdci; // dwdot[c2h2]/d[c2h2]
  J[1621] += dqdci; // dwdot[c2h3]/d[c2h2]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7850] -= dqdT; // dwdot[c2h2]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT

  // reaction 143: c2h5 + h => 2 ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[17];
  k_f = 36100000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;     // h
  wdot[9] += 2 * q; // ch3
  wdot[17] -= q;    // c2h5
  // d()/d[h]
  dqdci = +k_f * sc[17];
  J[0] -= dqdci;     // dwdot[h]/d[h]
  J[9] += 2 * dqdci; // dwdot[ch3]/d[h]
  J[17] -= dqdci;    // dwdot[c2h5]/d[h]
  // d()/d[c2h5]
  dqdci = +k_f * sc[0];
  J[1513] -= dqdci;     // dwdot[h]/d[c2h5]
  J[1522] += 2 * dqdci; // dwdot[ch3]/d[c2h5]
  J[1530] -= dqdci;     // dwdot[c2h5]/d[c2h5]
  // d()/dT
  J[7832] -= dqdT;     // dwdot[h]/dT
  J[7841] += 2 * dqdT; // dwdot[ch3]/dT
  J[7849] -= dqdT;     // dwdot[c2h5]/dT

  // reaction 144: 2 ch3 => c2h5 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[9] * sc[9]);
  k_f = 54460000000 * exp(-1.03 * logT - (8544.61898536414) * invT);
  dlnkfdT = -1.03 * invT + (8544.61898536414) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;     // h
  wdot[9] -= 2 * q; // ch3
  wdot[17] += q;    // c2h5
  // d()/d[ch3]
  dqdci = +k_f * 2.000000 * sc[9];
  J[801] += dqdci;      // dwdot[h]/d[ch3]
  J[810] += -2 * dqdci; // dwdot[ch3]/d[ch3]
  J[818] += dqdci;      // dwdot[c2h5]/d[ch3]
  // d()/dT
  J[7832] += dqdT;      // dwdot[h]/dT
  J[7841] += -2 * dqdT; // dwdot[ch3]/dT
  J[7849] += dqdT;      // dwdot[c2h5]/dT

  // reaction 145: c2h3 + o2 => ch2o + hco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[19];
  k_f = 1.7e+23 * exp(-5.31 * logT - (3270.90832773068) * invT);
  dlnkfdT = -5.31 * invT + (3270.90832773068) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[7] += q;  // hco
  wdot[13] += q; // ch2o
  wdot[19] -= q; // c2h3
  // d()/d[o2]
  dqdci = +k_f * sc[19];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[274] += dqdci; // dwdot[hco]/d[o2]
  J[280] += dqdci; // dwdot[ch2o]/d[o2]
  J[286] -= dqdci; // dwdot[c2h3]/d[o2]
  // d()/d[c2h3]
  dqdci = +k_f * sc[3];
  J[1694] -= dqdci; // dwdot[o2]/d[c2h3]
  J[1698] += dqdci; // dwdot[hco]/d[c2h3]
  J[1704] += dqdci; // dwdot[ch2o]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7839] += dqdT; // dwdot[hco]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT

  // reaction 146: ch2o + hco => c2h3 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[13];
  k_f = 1.657e+23 * exp(-5.31 * logT - (46824.3107531292) * invT);
  dlnkfdT = -5.31 * invT + (46824.3107531292) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[7] -= q;  // hco
  wdot[13] -= q; // ch2o
  wdot[19] += q; // c2h3
  // d()/d[hco]
  dqdci = +k_f * sc[13];
  J[626] += dqdci; // dwdot[o2]/d[hco]
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  J[636] -= dqdci; // dwdot[ch2o]/d[hco]
  J[642] += dqdci; // dwdot[c2h3]/d[hco]
  // d()/d[ch2o]
  dqdci = +k_f * sc[7];
  J[1160] += dqdci; // dwdot[o2]/d[ch2o]
  J[1164] -= dqdci; // dwdot[hco]/d[ch2o]
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  J[1176] += dqdci; // dwdot[c2h3]/d[ch2o]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7839] -= dqdT; // dwdot[hco]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT

  // reaction 147: c2h6 => c2h5 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15];
  k_f = 2.783e+21 * exp(-1.56 * logT - (52233.8899105299) * invT);
  dlnkfdT = -1.56 * invT + (52233.8899105299) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[15] -= q; // c2h6
  wdot[17] += q; // c2h5
  // d()/d[c2h6]
  dqdci = +k_f;
  J[1335] += dqdci; // dwdot[h]/d[c2h6]
  J[1350] -= dqdci; // dwdot[c2h6]/d[c2h6]
  J[1352] += dqdci; // dwdot[c2h5]/d[c2h6]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7847] -= dqdT; // dwdot[c2h6]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT

  // reaction 148: c2h5 + h => c2h6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[17];
  k_f = 36100000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[15] += q; // c2h6
  wdot[17] -= q; // c2h5
  // d()/d[h]
  dqdci = +k_f * sc[17];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[15] += dqdci; // dwdot[c2h6]/d[h]
  J[17] -= dqdci; // dwdot[c2h5]/d[h]
  // d()/d[c2h5]
  dqdci = +k_f * sc[0];
  J[1513] -= dqdci; // dwdot[h]/d[c2h5]
  J[1528] += dqdci; // dwdot[c2h6]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7847] += dqdT; // dwdot[c2h6]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT

  // reaction 149: c2h4 + ch3 => c2h3 + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[16];
  k_f = 6.62e-06 * exp(3.7 * logT - (4780.55832514484) * invT);
  dlnkfdT = 3.7 * invT + (4780.55832514484) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[16] -= q; // c2h4
  wdot[19] += q; // c2h3
  // d()/d[ch3]
  dqdci = +k_f * sc[16];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[817] -= dqdci; // dwdot[c2h4]/d[ch3]
  J[820] += dqdci; // dwdot[c2h3]/d[ch3]
  // d()/d[c2h4]
  dqdci = +k_f * sc[9];
  J[1433] -= dqdci; // dwdot[ch3]/d[c2h4]
  J[1434] += dqdci; // dwdot[ch4]/d[c2h4]
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1443] += dqdci; // dwdot[c2h3]/d[c2h4]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT

  // reaction 150: c2h3 + ch4 => c2h4 + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[19];
  k_f = 1.44e-06 * exp(4.02 * logT - (2753.60159528343) * invT);
  dlnkfdT = 4.02 * invT + (2753.60159528343) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[16] += q; // c2h4
  wdot[19] -= q; // c2h3
  // d()/d[ch4]
  dqdci = +k_f * sc[19];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[906] += dqdci; // dwdot[c2h4]/d[ch4]
  J[909] -= dqdci; // dwdot[c2h3]/d[ch4]
  // d()/d[c2h3]
  dqdci = +k_f * sc[10];
  J[1700] += dqdci; // dwdot[ch3]/d[c2h3]
  J[1701] -= dqdci; // dwdot[ch4]/d[c2h3]
  J[1707] += dqdci; // dwdot[c2h4]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT

  // reaction 152: ch3cho => ch3 + hco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[24];
  k_f = 2.614e+15 * exp(0.15 * logT - (40534.1024305702) * invT);
  dlnkfdT = 0.15 * invT + (40534.1024305702) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[7] += q;  // hco
  wdot[9] += q;  // ch3
  wdot[24] -= q; // ch3cho
  // d()/d[ch3cho]
  dqdci = +k_f;
  J[2143] += dqdci; // dwdot[hco]/d[ch3cho]
  J[2145] += dqdci; // dwdot[ch3]/d[ch3cho]
  J[2160] -= dqdci; // dwdot[ch3cho]/d[ch3cho]
  // d()/dT
  J[7839] += dqdT; // dwdot[hco]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7856] -= dqdT; // dwdot[ch3cho]/dT

  // reaction 153: ch3 + hco => ch3cho
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[9];
  k_f = 20000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[7] -= q;  // hco
  wdot[9] -= q;  // ch3
  wdot[24] += q; // ch3cho
  // d()/d[hco]
  dqdci = +k_f * sc[9];
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  J[632] -= dqdci; // dwdot[ch3]/d[hco]
  J[647] += dqdci; // dwdot[ch3cho]/d[hco]
  // d()/d[ch3]
  dqdci = +k_f * sc[7];
  J[808] -= dqdci; // dwdot[hco]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[825] += dqdci; // dwdot[ch3cho]/d[ch3]
  // d()/dT
  J[7839] -= dqdT; // dwdot[hco]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT

  // reaction 154: ch3cho + o2 => ch3co + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[24];
  k_f = 30100000 * exp(-(19700.9324662548) * invT);
  dlnkfdT = (19700.9324662548) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[22] += q; // ch3co
  wdot[24] -= q; // ch3cho
  // d()/d[o2]
  dqdci = +k_f * sc[24];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[289] += dqdci; // dwdot[ch3co]/d[o2]
  J[291] -= dqdci; // dwdot[ch3cho]/d[o2]
  // d()/d[ch3cho]
  dqdci = +k_f * sc[3];
  J[2139] -= dqdci; // dwdot[o2]/d[ch3cho]
  J[2147] += dqdci; // dwdot[ho2]/d[ch3cho]
  J[2158] += dqdci; // dwdot[ch3co]/d[ch3cho]
  J[2160] -= dqdci; // dwdot[ch3cho]/d[ch3cho]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7854] += dqdT; // dwdot[ch3co]/dT
  J[7856] -= dqdT; // dwdot[ch3cho]/dT

  // reaction 155: ch3co + ho2 => ch3cho + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[22];
  k_f = 85520 * exp(0.32 * logT - (-976.240331661156) * invT);
  dlnkfdT = 0.32 * invT + (-976.240331661156) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[22] -= q; // ch3co
  wdot[24] += q; // ch3cho
  // d()/d[ho2]
  dqdci = +k_f * sc[22];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1001] -= dqdci; // dwdot[ch3co]/d[ho2]
  J[1003] += dqdci; // dwdot[ch3cho]/d[ho2]
  // d()/d[ch3co]
  dqdci = +k_f * sc[11];
  J[1961] += dqdci; // dwdot[o2]/d[ch3co]
  J[1969] -= dqdci; // dwdot[ho2]/d[ch3co]
  J[1980] -= dqdci; // dwdot[ch3co]/d[ch3co]
  J[1982] += dqdci; // dwdot[ch3cho]/d[ch3co]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7854] -= dqdT; // dwdot[ch3co]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT

  // reaction 156: ch3cho + oh => ch3co + h2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[24];
  k_f = 2 * exp(1.8 * logT - (654.181665546136) * invT);
  dlnkfdT = 1.8 * invT + (654.181665546136) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[22] += q; // ch3co
  wdot[24] -= q; // ch3cho
  // d()/d[oh]
  dqdci = +k_f * sc[24];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[378] += dqdci; // dwdot[ch3co]/d[oh]
  J[380] -= dqdci; // dwdot[ch3cho]/d[oh]
  // d()/d[ch3cho]
  dqdci = +k_f * sc[4];
  J[2140] -= dqdci; // dwdot[oh]/d[ch3cho]
  J[2141] += dqdci; // dwdot[h2o]/d[ch3cho]
  J[2158] += dqdci; // dwdot[ch3co]/d[ch3cho]
  J[2160] -= dqdci; // dwdot[ch3cho]/d[ch3cho]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7854] += dqdT; // dwdot[ch3co]/dT
  J[7856] -= dqdT; // dwdot[ch3cho]/dT

  // reaction 157: ch3co + h2o => ch3cho + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[22];
  k_f = 1.354 * exp(1.79 * logT - (16530.667471685) * invT);
  dlnkfdT = 1.79 * invT + (16530.667471685) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[22] -= q; // ch3co
  wdot[24] += q; // ch3cho
  // d()/d[h2o]
  dqdci = +k_f * sc[22];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[467] -= dqdci; // dwdot[ch3co]/d[h2o]
  J[469] += dqdci; // dwdot[ch3cho]/d[h2o]
  // d()/d[ch3co]
  dqdci = +k_f * sc[5];
  J[1962] += dqdci; // dwdot[oh]/d[ch3co]
  J[1963] -= dqdci; // dwdot[h2o]/d[ch3co]
  J[1980] -= dqdci; // dwdot[ch3co]/d[ch3co]
  J[1982] += dqdci; // dwdot[ch3cho]/d[ch3co]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7854] -= dqdT; // dwdot[ch3co]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT

  // reaction 158: ch3cho + h => ch3co + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[24];
  k_f = 13400000 * exp(-(1660.61499715557) * invT);
  dlnkfdT = (1660.61499715557) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[22] += q; // ch3co
  wdot[24] -= q; // ch3cho
  // d()/d[h]
  dqdci = +k_f * sc[24];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[22] += dqdci; // dwdot[ch3co]/d[h]
  J[24] -= dqdci; // dwdot[ch3cho]/d[h]
  // d()/d[ch3cho]
  dqdci = +k_f * sc[0];
  J[2136] -= dqdci; // dwdot[h]/d[ch3cho]
  J[2137] += dqdci; // dwdot[h2]/d[ch3cho]
  J[2158] += dqdci; // dwdot[ch3co]/d[ch3cho]
  J[2160] -= dqdci; // dwdot[ch3cho]/d[ch3cho]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7854] += dqdT; // dwdot[ch3co]/dT
  J[7856] -= dqdT; // dwdot[ch3cho]/dT

  // reaction 159: ch3co + h2 => ch3cho + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[22];
  k_f = 2096000 * exp(-0.01 * logT - (9908.33614969493) * invT);
  dlnkfdT = -0.01 * invT + (9908.33614969493) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[22] -= q; // ch3co
  wdot[24] += q; // ch3cho
  // d()/d[h2]
  dqdci = +k_f * sc[22];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[111] -= dqdci; // dwdot[ch3co]/d[h2]
  J[113] += dqdci; // dwdot[ch3cho]/d[h2]
  // d()/d[ch3co]
  dqdci = +k_f * sc[1];
  J[1958] += dqdci; // dwdot[h]/d[ch3co]
  J[1959] -= dqdci; // dwdot[h2]/d[ch3co]
  J[1980] -= dqdci; // dwdot[ch3co]/d[ch3co]
  J[1982] += dqdci; // dwdot[ch3cho]/d[ch3co]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7854] -= dqdT; // dwdot[ch3co]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT

  // reaction 160: ch3cho + o => ch3co + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[24];
  k_f = 5940000 * exp(-(940.008731723216) * invT);
  dlnkfdT = (940.008731723216) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[4] += q;  // oh
  wdot[22] += q; // ch3co
  wdot[24] -= q; // ch3cho
  // d()/d[o]
  dqdci = +k_f * sc[24];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[182] += dqdci; // dwdot[oh]/d[o]
  J[200] += dqdci; // dwdot[ch3co]/d[o]
  J[202] -= dqdci; // dwdot[ch3cho]/d[o]
  // d()/d[ch3cho]
  dqdci = +k_f * sc[2];
  J[2138] -= dqdci; // dwdot[o]/d[ch3cho]
  J[2140] += dqdci; // dwdot[oh]/d[ch3cho]
  J[2158] += dqdci; // dwdot[ch3co]/d[ch3cho]
  J[2160] -= dqdci; // dwdot[ch3cho]/d[ch3cho]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7854] += dqdT; // dwdot[ch3co]/dT
  J[7856] -= dqdT; // dwdot[ch3cho]/dT

  // reaction 161: ch3co + oh => ch3cho + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[22];
  k_f = 408000 * exp(-0.01 * logT - (8137.01348606232) * invT);
  dlnkfdT = -0.01 * invT + (8137.01348606232) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[4] -= q;  // oh
  wdot[22] -= q; // ch3co
  wdot[24] += q; // ch3cho
  // d()/d[oh]
  dqdci = +k_f * sc[22];
  J[358] += dqdci; // dwdot[o]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[378] -= dqdci; // dwdot[ch3co]/d[oh]
  J[380] += dqdci; // dwdot[ch3cho]/d[oh]
  // d()/d[ch3co]
  dqdci = +k_f * sc[4];
  J[1960] += dqdci; // dwdot[o]/d[ch3co]
  J[1962] -= dqdci; // dwdot[oh]/d[ch3co]
  J[1980] -= dqdci; // dwdot[ch3co]/d[ch3co]
  J[1982] += dqdci; // dwdot[ch3cho]/d[ch3co]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7854] -= dqdT; // dwdot[ch3co]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT

  // reaction 162: ch3cho + ho2 => ch3co + h2o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[24];
  k_f = 3010000 * exp(-(5998.34265639226) * invT);
  dlnkfdT = (5998.34265639226) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  wdot[22] += q; // ch3co
  wdot[24] -= q; // ch3cho
  // d()/d[ho2]
  dqdci = +k_f * sc[24];
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[991] += dqdci;  // dwdot[h2o2]/d[ho2]
  J[1001] += dqdci; // dwdot[ch3co]/d[ho2]
  J[1003] -= dqdci; // dwdot[ch3cho]/d[ho2]
  // d()/d[ch3cho]
  dqdci = +k_f * sc[11];
  J[2147] -= dqdci; // dwdot[ho2]/d[ch3cho]
  J[2148] += dqdci; // dwdot[h2o2]/d[ch3cho]
  J[2158] += dqdci; // dwdot[ch3co]/d[ch3cho]
  J[2160] -= dqdci; // dwdot[ch3cho]/d[ch3cho]
  // d()/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT
  J[7854] += dqdT; // dwdot[ch3co]/dT
  J[7856] -= dqdT; // dwdot[ch3cho]/dT

  // reaction 163: ch3co + h2o2 => ch3cho + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[22];
  k_f = 12100000 * exp(-0.34 * logT - (6043.63215631468) * invT);
  dlnkfdT = -0.34 * invT + (6043.63215631468) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // ho2
  wdot[12] -= q; // h2o2
  wdot[22] -= q; // ch3co
  wdot[24] += q; // ch3cho
  // d()/d[h2o2]
  dqdci = +k_f * sc[22];
  J[1079] += dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci; // dwdot[h2o2]/d[h2o2]
  J[1090] -= dqdci; // dwdot[ch3co]/d[h2o2]
  J[1092] += dqdci; // dwdot[ch3cho]/d[h2o2]
  // d()/d[ch3co]
  dqdci = +k_f * sc[12];
  J[1969] += dqdci; // dwdot[ho2]/d[ch3co]
  J[1970] -= dqdci; // dwdot[h2o2]/d[ch3co]
  J[1980] -= dqdci; // dwdot[ch3co]/d[ch3co]
  J[1982] += dqdci; // dwdot[ch3cho]/d[ch3co]
  // d()/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT; // dwdot[h2o2]/dT
  J[7854] -= dqdT; // dwdot[ch3co]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT

  // reaction 164: ch3 + ch3cho => ch3co + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[24];
  k_f = 2.608 * exp(1.78 * logT - (2974.5137115717) * invT);
  dlnkfdT = 1.78 * invT + (2974.5137115717) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[22] += q; // ch3co
  wdot[24] -= q; // ch3cho
  // d()/d[ch3]
  dqdci = +k_f * sc[24];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[823] += dqdci; // dwdot[ch3co]/d[ch3]
  J[825] -= dqdci; // dwdot[ch3cho]/d[ch3]
  // d()/d[ch3cho]
  dqdci = +k_f * sc[9];
  J[2145] -= dqdci; // dwdot[ch3]/d[ch3cho]
  J[2146] += dqdci; // dwdot[ch4]/d[ch3cho]
  J[2158] += dqdci; // dwdot[ch3co]/d[ch3cho]
  J[2160] -= dqdci; // dwdot[ch3cho]/d[ch3cho]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7854] += dqdT; // dwdot[ch3co]/dT
  J[7856] -= dqdT; // dwdot[ch3cho]/dT

  // reaction 165: ch3co + ch4 => ch3 + ch3cho
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[22];
  k_f = 10.66 * exp(1.77 * logT - (11463.2756470315) * invT);
  dlnkfdT = 1.77 * invT + (11463.2756470315) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[22] -= q; // ch3co
  wdot[24] += q; // ch3cho
  // d()/d[ch4]
  dqdci = +k_f * sc[22];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[912] -= dqdci; // dwdot[ch3co]/d[ch4]
  J[914] += dqdci; // dwdot[ch3cho]/d[ch4]
  // d()/d[ch3co]
  dqdci = +k_f * sc[10];
  J[1967] += dqdci; // dwdot[ch3]/d[ch3co]
  J[1968] -= dqdci; // dwdot[ch4]/d[ch3co]
  J[1980] -= dqdci; // dwdot[ch3co]/d[ch3co]
  J[1982] += dqdci; // dwdot[ch3cho]/d[ch3co]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7854] -= dqdT; // dwdot[ch3co]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT

  // reaction 166: c3h5-a => c2h2 + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[47];
  k_f = 2.397e+48 * exp(-9.9 * logT - (41304.0239292514) * invT);
  dlnkfdT = -9.9 * invT + (41304.0239292514) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[18] += q; // c2h2
  wdot[47] -= q; // c3h5-a
  // d()/d[c3h5-a]
  dqdci = +k_f;
  J[4192] += dqdci; // dwdot[ch3]/d[c3h5-a]
  J[4201] += dqdci; // dwdot[c2h2]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7850] += dqdT; // dwdot[c2h2]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 167: c2h2 + ch3 => c3h5-a
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[18];
  k_f = 2.61e+40 * exp(-9.82 * logT - (18593.8558014844) * invT);
  dlnkfdT = -9.82 * invT + (18593.8558014844) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[18] -= q; // c2h2
  wdot[47] += q; // c3h5-a
  // d()/d[ch3]
  dqdci = +k_f * sc[18];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[819] -= dqdci; // dwdot[c2h2]/d[ch3]
  J[848] += dqdci; // dwdot[c3h5-a]/d[ch3]
  // d()/d[c2h2]
  dqdci = +k_f * sc[9];
  J[1611] -= dqdci; // dwdot[ch3]/d[c2h2]
  J[1620] -= dqdci; // dwdot[c2h2]/d[c2h2]
  J[1649] += dqdci; // dwdot[c3h5-a]/d[c2h2]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7850] -= dqdT; // dwdot[c2h2]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 168: c3h6 => c2h3 + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[26];
  k_f = 2.73e+62 * exp(-13.28 * logT - (61996.2932271415) * invT);
  dlnkfdT = -13.28 * invT + (61996.2932271415) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[19] += q; // c2h3
  wdot[26] -= q; // c3h6
  // d()/d[c3h6]
  dqdci = +k_f;
  J[2323] += dqdci; // dwdot[ch3]/d[c3h6]
  J[2333] += dqdci; // dwdot[c2h3]/d[c3h6]
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT

  // reaction 169: c2h3 + ch3 => c3h6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[19];
  k_f = 4.712e+53 * exp(-13.19 * logT - (14865.0203078714) * invT);
  dlnkfdT = -13.19 * invT + (14865.0203078714) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[19] -= q; // c2h3
  wdot[26] += q; // c3h6
  // d()/d[ch3]
  dqdci = +k_f * sc[19];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[820] -= dqdci; // dwdot[c2h3]/d[ch3]
  J[827] += dqdci; // dwdot[c3h6]/d[ch3]
  // d()/d[c2h3]
  dqdci = +k_f * sc[9];
  J[1700] -= dqdci; // dwdot[ch3]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  J[1717] += dqdci; // dwdot[c3h6]/d[c2h3]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT

  // reaction 170: c2h2 + ch3 => c3h4-a + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[18];
  k_f = 67400000000000 * exp(-2.08 * logT - (15896.6144727711) * invT);
  dlnkfdT = -2.08 * invT + (15896.6144727711) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[9] -= q;  // ch3
  wdot[18] -= q; // c2h2
  wdot[25] += q; // c3h4-a
  // d()/d[ch3]
  dqdci = +k_f * sc[18];
  J[801] += dqdci; // dwdot[h]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[819] -= dqdci; // dwdot[c2h2]/d[ch3]
  J[826] += dqdci; // dwdot[c3h4-a]/d[ch3]
  // d()/d[c2h2]
  dqdci = +k_f * sc[9];
  J[1602] += dqdci; // dwdot[h]/d[c2h2]
  J[1611] -= dqdci; // dwdot[ch3]/d[c2h2]
  J[1620] -= dqdci; // dwdot[c2h2]/d[c2h2]
  J[1627] += dqdci; // dwdot[c3h4-a]/d[c2h2]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7850] -= dqdT; // dwdot[c2h2]/dT
  J[7857] += dqdT; // dwdot[c3h4-a]/dT

  // reaction 171: c3h4-a + h => c2h2 + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[25];
  k_f = 11490000000 * exp(-0.7 * logT - (7945.79115305652) * invT);
  dlnkfdT = -0.7 * invT + (7945.79115305652) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[9] += q;  // ch3
  wdot[18] += q; // c2h2
  wdot[25] -= q; // c3h4-a
  // d()/d[h]
  dqdci = +k_f * sc[25];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[9] += dqdci;  // dwdot[ch3]/d[h]
  J[18] += dqdci; // dwdot[c2h2]/d[h]
  J[25] -= dqdci; // dwdot[c3h4-a]/d[h]
  // d()/d[c3h4-a]
  dqdci = +k_f * sc[0];
  J[2225] -= dqdci; // dwdot[h]/d[c3h4-a]
  J[2234] += dqdci; // dwdot[ch3]/d[c3h4-a]
  J[2243] += dqdci; // dwdot[c2h2]/d[c3h4-a]
  J[2250] -= dqdci; // dwdot[c3h4-a]/d[c3h4-a]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7850] += dqdT; // dwdot[c2h2]/dT
  J[7857] -= dqdT; // dwdot[c3h4-a]/dT

  // reaction 172: c3h6 => c3h5-a + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[26];
  k_f = 2.01e+61 * exp(-13.26 * logT - (59631.1748978593) * invT);
  dlnkfdT = -13.26 * invT + (59631.1748978593) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[26] -= q; // c3h6
  wdot[47] += q; // c3h5-a
  // d()/d[c3h6]
  dqdci = +k_f;
  J[2314] += dqdci; // dwdot[h]/d[c3h6]
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  J[2361] += dqdci; // dwdot[c3h5-a]/d[c3h6]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 173: c3h5-a + h => c3h6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[47];
  k_f = 4.887e+50 * exp(-12.25 * logT - (14130.3239757965) * invT);
  dlnkfdT = -12.25 * invT + (14130.3239757965) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[26] += q; // c3h6
  wdot[47] -= q; // c3h5-a
  // d()/d[h]
  dqdci = +k_f * sc[47];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[26] += dqdci; // dwdot[c3h6]/d[h]
  J[47] -= dqdci; // dwdot[c3h5-a]/d[h]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[0];
  J[4183] -= dqdci; // dwdot[h]/d[c3h5-a]
  J[4209] += dqdci; // dwdot[c3h6]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 174: c3h6 + o => ch2co + ch3 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[26];
  k_f = 25 * exp(1.76 * logT - (38.2444666011587) * invT);
  dlnkfdT = 1.76 * invT + (38.2444666011587) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[2] -= q;  // o
  wdot[9] += q;  // ch3
  wdot[20] += q; // ch2co
  wdot[26] -= q; // c3h6
  // d()/d[o]
  dqdci = +k_f * sc[26];
  J[178] += dqdci; // dwdot[h]/d[o]
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[187] += dqdci; // dwdot[ch3]/d[o]
  J[198] += dqdci; // dwdot[ch2co]/d[o]
  J[204] -= dqdci; // dwdot[c3h6]/d[o]
  // d()/d[c3h6]
  dqdci = +k_f * sc[2];
  J[2314] += dqdci; // dwdot[h]/d[c3h6]
  J[2316] -= dqdci; // dwdot[o]/d[c3h6]
  J[2323] += dqdci; // dwdot[ch3]/d[c3h6]
  J[2334] += dqdci; // dwdot[ch2co]/d[c3h6]
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7852] += dqdT; // dwdot[ch2co]/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT

  // reaction 175: ch2co + ch3 + h => c3h6 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[9] * sc[20];
  k_f = 1e-12;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[2] += q;  // o
  wdot[9] -= q;  // ch3
  wdot[20] -= q; // ch2co
  wdot[26] += q; // c3h6
  // d()/d[h]
  dqdci = +k_f * sc[9] * sc[20];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[2] += dqdci;  // dwdot[o]/d[h]
  J[9] -= dqdci;  // dwdot[ch3]/d[h]
  J[20] -= dqdci; // dwdot[ch2co]/d[h]
  J[26] += dqdci; // dwdot[c3h6]/d[h]
  // d()/d[ch3]
  dqdci = +k_f * sc[0] * sc[20];
  J[801] -= dqdci; // dwdot[h]/d[ch3]
  J[803] += dqdci; // dwdot[o]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[821] -= dqdci; // dwdot[ch2co]/d[ch3]
  J[827] += dqdci; // dwdot[c3h6]/d[ch3]
  // d()/d[ch2co]
  dqdci = +k_f * sc[0] * sc[9];
  J[1780] -= dqdci; // dwdot[h]/d[ch2co]
  J[1782] += dqdci; // dwdot[o]/d[ch2co]
  J[1789] -= dqdci; // dwdot[ch3]/d[ch2co]
  J[1800] -= dqdci; // dwdot[ch2co]/d[ch2co]
  J[1806] += dqdci; // dwdot[c3h6]/d[ch2co]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7852] -= dqdT; // dwdot[ch2co]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT

  // reaction 176: c3h6 + o => c2h5 + hco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[26];
  k_f = 15.8 * exp(1.76 * logT - (-611.911465618539) * invT);
  dlnkfdT = 1.76 * invT + (-611.911465618539) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[7] += q;  // hco
  wdot[17] += q; // c2h5
  wdot[26] -= q; // c3h6
  // d()/d[o]
  dqdci = +k_f * sc[26];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[185] += dqdci; // dwdot[hco]/d[o]
  J[195] += dqdci; // dwdot[c2h5]/d[o]
  J[204] -= dqdci; // dwdot[c3h6]/d[o]
  // d()/d[c3h6]
  dqdci = +k_f * sc[2];
  J[2316] -= dqdci; // dwdot[o]/d[c3h6]
  J[2321] += dqdci; // dwdot[hco]/d[c3h6]
  J[2331] += dqdci; // dwdot[c2h5]/d[c3h6]
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7839] += dqdT; // dwdot[hco]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT

  // reaction 177: c2h5 + hco => c3h6 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[17];
  k_f = 0.1402 * exp(1.88 * logT - (13340.2738104831) * invT);
  dlnkfdT = 1.88 * invT + (13340.2738104831) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[7] -= q;  // hco
  wdot[17] -= q; // c2h5
  wdot[26] += q; // c3h6
  // d()/d[hco]
  dqdci = +k_f * sc[17];
  J[625] += dqdci; // dwdot[o]/d[hco]
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  J[640] -= dqdci; // dwdot[c2h5]/d[hco]
  J[649] += dqdci; // dwdot[c3h6]/d[hco]
  // d()/d[c2h5]
  dqdci = +k_f * sc[7];
  J[1515] += dqdci; // dwdot[o]/d[c2h5]
  J[1520] -= dqdci; // dwdot[hco]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1539] += dqdci; // dwdot[c3h6]/d[c2h5]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7839] -= dqdT; // dwdot[hco]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT

  // reaction 178: c3h6 + ho2 => c3h5-a + h2o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[26];
  k_f = 150000 * exp(-(7140.64448776897) * invT);
  dlnkfdT = (7140.64448776897) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  wdot[26] -= q; // c3h6
  wdot[47] += q; // c3h5-a
  // d()/d[ho2]
  dqdci = +k_f * sc[26];
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[991] += dqdci;  // dwdot[h2o2]/d[ho2]
  J[1005] -= dqdci; // dwdot[c3h6]/d[ho2]
  J[1026] += dqdci; // dwdot[c3h5-a]/d[ho2]
  // d()/d[c3h6]
  dqdci = +k_f * sc[11];
  J[2325] -= dqdci; // dwdot[ho2]/d[c3h6]
  J[2326] += dqdci; // dwdot[h2o2]/d[c3h6]
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  J[2361] += dqdci; // dwdot[c3h5-a]/d[c3h6]
  // d()/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 179: c3h5-a + h2o2 => c3h6 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[47];
  k_f = 0.5867 * exp(1.33 * logT - (4910.89144158826) * invT);
  dlnkfdT = 1.33 * invT + (4910.89144158826) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // ho2
  wdot[12] -= q; // h2o2
  wdot[26] += q; // c3h6
  wdot[47] -= q; // c3h5-a
  // d()/d[h2o2]
  dqdci = +k_f * sc[47];
  J[1079] += dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci; // dwdot[h2o2]/d[h2o2]
  J[1094] += dqdci; // dwdot[c3h6]/d[h2o2]
  J[1115] -= dqdci; // dwdot[c3h5-a]/d[h2o2]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[12];
  J[4194] += dqdci; // dwdot[ho2]/d[c3h5-a]
  J[4195] -= dqdci; // dwdot[h2o2]/d[c3h5-a]
  J[4209] += dqdci; // dwdot[c3h6]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT; // dwdot[h2o2]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 180: c3h6 + oh => c3h5-a + h2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[26];
  k_f = 3.12 * exp(2 * logT - (-149.958566409806) * invT);
  dlnkfdT = 2 * invT + (-149.958566409806) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[26] -= q; // c3h6
  wdot[47] += q; // c3h5-a
  // d()/d[oh]
  dqdci = +k_f * sc[26];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[382] -= dqdci; // dwdot[c3h6]/d[oh]
  J[403] += dqdci; // dwdot[c3h5-a]/d[oh]
  // d()/d[c3h6]
  dqdci = +k_f * sc[4];
  J[2318] -= dqdci; // dwdot[oh]/d[c3h6]
  J[2319] += dqdci; // dwdot[h2o]/d[c3h6]
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  J[2361] += dqdci; // dwdot[c3h5-a]/d[c3h6]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 181: c3h5-a + h2o => c3h6 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[47];
  k_f = 6.194 * exp(2.01 * logT - (16042.5473058545) * invT);
  dlnkfdT = 2.01 * invT + (16042.5473058545) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[26] += q; // c3h6
  wdot[47] -= q; // c3h5-a
  // d()/d[h2o]
  dqdci = +k_f * sc[47];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[471] += dqdci; // dwdot[c3h6]/d[h2o]
  J[492] -= dqdci; // dwdot[c3h5-a]/d[h2o]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[5];
  J[4187] += dqdci; // dwdot[oh]/d[c3h5-a]
  J[4188] -= dqdci; // dwdot[h2o]/d[c3h5-a]
  J[4209] += dqdci; // dwdot[c3h6]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 182: c4h6 => 2 c2h3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[27];
  k_f = 4.027e+19 * exp(-1 * logT - (49390.7157487332) * invT);
  dlnkfdT = -1 * invT + (49390.7157487332) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[19] += 2 * q; // c2h3
  wdot[27] -= q;     // c4h6
  // d()/d[c4h6]
  dqdci = +k_f;
  J[2422] += 2 * dqdci; // dwdot[c2h3]/d[c4h6]
  J[2430] -= dqdci;     // dwdot[c4h6]/d[c4h6]
  // d()/dT
  J[7851] += 2 * dqdT; // dwdot[c2h3]/dT
  J[7859] -= dqdT;     // dwdot[c4h6]/dT

  // reaction 183: 2 c2h3 => c4h6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[19] * sc[19]);
  k_f = 12600000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[19] -= 2 * q; // c2h3
  wdot[27] += q;     // c4h6
  // d()/d[c2h3]
  dqdci = +k_f * 2.000000 * sc[19];
  J[1710] += -2 * dqdci; // dwdot[c2h3]/d[c2h3]
  J[1718] += dqdci;      // dwdot[c4h6]/d[c2h3]
  // d()/dT
  J[7851] += -2 * dqdT; // dwdot[c2h3]/dT
  J[7859] += dqdT;      // dwdot[c4h6]/dT

  // reaction 184: c4h6 + oh => c2h5 + ch2co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[27];
  k_f = 1000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[17] += q; // c2h5
  wdot[20] += q; // ch2co
  wdot[27] -= q; // c4h6
  // d()/d[oh]
  dqdci = +k_f * sc[27];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[373] += dqdci; // dwdot[c2h5]/d[oh]
  J[376] += dqdci; // dwdot[ch2co]/d[oh]
  J[383] -= dqdci; // dwdot[c4h6]/d[oh]
  // d()/d[c4h6]
  dqdci = +k_f * sc[4];
  J[2407] -= dqdci; // dwdot[oh]/d[c4h6]
  J[2420] += dqdci; // dwdot[c2h5]/d[c4h6]
  J[2423] += dqdci; // dwdot[ch2co]/d[c4h6]
  J[2430] -= dqdci; // dwdot[c4h6]/d[c4h6]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7852] += dqdT; // dwdot[ch2co]/dT
  J[7859] -= dqdT; // dwdot[c4h6]/dT

  // reaction 185: c2h5 + ch2co => c4h6 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[20];
  k_f = 3730000 * exp(-(15106.5643074577) * invT);
  dlnkfdT = (15106.5643074577) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[17] -= q; // c2h5
  wdot[20] -= q; // ch2co
  wdot[27] += q; // c4h6
  // d()/d[c2h5]
  dqdci = +k_f * sc[20];
  J[1517] += dqdci; // dwdot[oh]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1533] -= dqdci; // dwdot[ch2co]/d[c2h5]
  J[1540] += dqdci; // dwdot[c4h6]/d[c2h5]
  // d()/d[ch2co]
  dqdci = +k_f * sc[17];
  J[1784] += dqdci; // dwdot[oh]/d[ch2co]
  J[1797] -= dqdci; // dwdot[c2h5]/d[ch2co]
  J[1800] -= dqdci; // dwdot[ch2co]/d[ch2co]
  J[1807] += dqdci; // dwdot[c4h6]/d[ch2co]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7852] -= dqdT; // dwdot[ch2co]/dT
  J[7859] += dqdT; // dwdot[c4h6]/dT

  // reaction 186: c4h6 + oh => c3h5-a + ch2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[27];
  k_f = 1000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[13] += q; // ch2o
  wdot[27] -= q; // c4h6
  wdot[47] += q; // c3h5-a
  // d()/d[oh]
  dqdci = +k_f * sc[27];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[369] += dqdci; // dwdot[ch2o]/d[oh]
  J[383] -= dqdci; // dwdot[c4h6]/d[oh]
  J[403] += dqdci; // dwdot[c3h5-a]/d[oh]
  // d()/d[c4h6]
  dqdci = +k_f * sc[4];
  J[2407] -= dqdci; // dwdot[oh]/d[c4h6]
  J[2416] += dqdci; // dwdot[ch2o]/d[c4h6]
  J[2430] -= dqdci; // dwdot[c4h6]/d[c4h6]
  J[2450] += dqdci; // dwdot[c3h5-a]/d[c4h6]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT
  J[7859] -= dqdT; // dwdot[c4h6]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 187: c3h5-a + ch2o => c4h6 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[47];
  k_f = 3.501 * exp(-(35758.5762720834) * invT);
  dlnkfdT = (35758.5762720834) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[13] -= q; // ch2o
  wdot[27] += q; // c4h6
  wdot[47] -= q; // c3h5-a
  // d()/d[ch2o]
  dqdci = +k_f * sc[47];
  J[1161] += dqdci; // dwdot[oh]/d[ch2o]
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  J[1184] += dqdci; // dwdot[c4h6]/d[ch2o]
  J[1204] -= dqdci; // dwdot[c3h5-a]/d[ch2o]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[13];
  J[4187] += dqdci; // dwdot[oh]/d[c3h5-a]
  J[4196] -= dqdci; // dwdot[ch2o]/d[c3h5-a]
  J[4210] += dqdci; // dwdot[c4h6]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT
  J[7859] += dqdT; // dwdot[c4h6]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 188: c4h6 + oh => c2h3 + ch3cho
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[27];
  k_f = 1000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[19] += q; // c2h3
  wdot[24] += q; // ch3cho
  wdot[27] -= q; // c4h6
  // d()/d[oh]
  dqdci = +k_f * sc[27];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[375] += dqdci; // dwdot[c2h3]/d[oh]
  J[380] += dqdci; // dwdot[ch3cho]/d[oh]
  J[383] -= dqdci; // dwdot[c4h6]/d[oh]
  // d()/d[c4h6]
  dqdci = +k_f * sc[4];
  J[2407] -= dqdci; // dwdot[oh]/d[c4h6]
  J[2422] += dqdci; // dwdot[c2h3]/d[c4h6]
  J[2427] += dqdci; // dwdot[ch3cho]/d[c4h6]
  J[2430] -= dqdci; // dwdot[c4h6]/d[c4h6]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT
  J[7859] -= dqdT; // dwdot[c4h6]/dT

  // reaction 189: c2h3 + ch3cho => c4h6 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[24];
  k_f = 543700 * exp(-(9334.66915067755) * invT);
  dlnkfdT = (9334.66915067755) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[19] -= q; // c2h3
  wdot[24] -= q; // ch3cho
  wdot[27] += q; // c4h6
  // d()/d[c2h3]
  dqdci = +k_f * sc[24];
  J[1695] += dqdci; // dwdot[oh]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  J[1715] -= dqdci; // dwdot[ch3cho]/d[c2h3]
  J[1718] += dqdci; // dwdot[c4h6]/d[c2h3]
  // d()/d[ch3cho]
  dqdci = +k_f * sc[19];
  J[2140] += dqdci; // dwdot[oh]/d[ch3cho]
  J[2155] -= dqdci; // dwdot[c2h3]/d[ch3cho]
  J[2160] -= dqdci; // dwdot[ch3cho]/d[ch3cho]
  J[2163] += dqdci; // dwdot[c4h6]/d[ch3cho]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT
  J[7856] -= dqdT; // dwdot[ch3cho]/dT
  J[7859] += dqdT; // dwdot[c4h6]/dT

  // reaction 190: c4h6 + o => c2h4 + ch2co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[27];
  k_f = 1000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[16] += q; // c2h4
  wdot[20] += q; // ch2co
  wdot[27] -= q; // c4h6
  // d()/d[o]
  dqdci = +k_f * sc[27];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[194] += dqdci; // dwdot[c2h4]/d[o]
  J[198] += dqdci; // dwdot[ch2co]/d[o]
  J[205] -= dqdci; // dwdot[c4h6]/d[o]
  // d()/d[c4h6]
  dqdci = +k_f * sc[2];
  J[2405] -= dqdci; // dwdot[o]/d[c4h6]
  J[2419] += dqdci; // dwdot[c2h4]/d[c4h6]
  J[2423] += dqdci; // dwdot[ch2co]/d[c4h6]
  J[2430] -= dqdci; // dwdot[c4h6]/d[c4h6]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7852] += dqdT; // dwdot[ch2co]/dT
  J[7859] -= dqdT; // dwdot[c4h6]/dT

  // reaction 191: c2h4 + ch2co => c4h6 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[20];
  k_f = 637700 * exp(-(47473.4602520173) * invT);
  dlnkfdT = (47473.4602520173) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[16] -= q; // c2h4
  wdot[20] -= q; // ch2co
  wdot[27] += q; // c4h6
  // d()/d[c2h4]
  dqdci = +k_f * sc[20];
  J[1426] += dqdci; // dwdot[o]/d[c2h4]
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1444] -= dqdci; // dwdot[ch2co]/d[c2h4]
  J[1451] += dqdci; // dwdot[c4h6]/d[c2h4]
  // d()/d[ch2co]
  dqdci = +k_f * sc[16];
  J[1782] += dqdci; // dwdot[o]/d[ch2co]
  J[1796] -= dqdci; // dwdot[c2h4]/d[ch2co]
  J[1800] -= dqdci; // dwdot[ch2co]/d[ch2co]
  J[1807] += dqdci; // dwdot[c4h6]/d[ch2co]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7852] -= dqdT; // dwdot[ch2co]/dT
  J[7859] += dqdT; // dwdot[c4h6]/dT

  // reaction 192: c4h6 + o => c3h4-a + ch2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[27];
  k_f = 1000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[13] += q; // ch2o
  wdot[25] += q; // c3h4-a
  wdot[27] -= q; // c4h6
  // d()/d[o]
  dqdci = +k_f * sc[27];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[191] += dqdci; // dwdot[ch2o]/d[o]
  J[203] += dqdci; // dwdot[c3h4-a]/d[o]
  J[205] -= dqdci; // dwdot[c4h6]/d[o]
  // d()/d[c4h6]
  dqdci = +k_f * sc[2];
  J[2405] -= dqdci; // dwdot[o]/d[c4h6]
  J[2416] += dqdci; // dwdot[ch2o]/d[c4h6]
  J[2428] += dqdci; // dwdot[c3h4-a]/d[c4h6]
  J[2430] -= dqdci; // dwdot[c4h6]/d[c4h6]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT
  J[7857] += dqdT; // dwdot[c3h4-a]/dT
  J[7859] -= dqdT; // dwdot[c4h6]/dT

  // reaction 193: c3h4-a + ch2o => c4h6 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[25];
  k_f = 1075000 * exp(-(39779.2774318631) * invT);
  dlnkfdT = (39779.2774318631) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[13] -= q; // ch2o
  wdot[25] -= q; // c3h4-a
  wdot[27] += q; // c4h6
  // d()/d[ch2o]
  dqdci = +k_f * sc[25];
  J[1159] += dqdci; // dwdot[o]/d[ch2o]
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  J[1182] -= dqdci; // dwdot[c3h4-a]/d[ch2o]
  J[1184] += dqdci; // dwdot[c4h6]/d[ch2o]
  // d()/d[c3h4-a]
  dqdci = +k_f * sc[13];
  J[2227] += dqdci; // dwdot[o]/d[c3h4-a]
  J[2238] -= dqdci; // dwdot[ch2o]/d[c3h4-a]
  J[2250] -= dqdci; // dwdot[c3h4-a]/d[c3h4-a]
  J[2252] += dqdci; // dwdot[c4h6]/d[c3h4-a]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT
  J[7857] -= dqdT; // dwdot[c3h4-a]/dT
  J[7859] += dqdT; // dwdot[c4h6]/dT

  // reaction 194: c2h4 + o2 => c2h3 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[16];
  k_f = 40000000 * exp(-(29287.2099498347) * invT);
  dlnkfdT = (29287.2099498347) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[16] -= q; // c2h4
  wdot[19] += q; // c2h3
  // d()/d[o2]
  dqdci = +k_f * sc[16];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[283] -= dqdci; // dwdot[c2h4]/d[o2]
  J[286] += dqdci; // dwdot[c2h3]/d[o2]
  // d()/d[c2h4]
  dqdci = +k_f * sc[3];
  J[1427] -= dqdci; // dwdot[o2]/d[c2h4]
  J[1435] += dqdci; // dwdot[ho2]/d[c2h4]
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1443] += dqdci; // dwdot[c2h3]/d[c2h4]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT

  // reaction 195: c2h3 + ho2 => c2h4 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[19];
  k_f = 49390000 * exp(-0.5 * logT - (688.400398820856) * invT);
  dlnkfdT = -0.5 * invT + (688.400398820856) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[16] += q; // c2h4
  wdot[19] -= q; // c2h3
  // d()/d[ho2]
  dqdci = +k_f * sc[19];
  J[982] += dqdci; // dwdot[o2]/d[ho2]
  J[990] -= dqdci; // dwdot[ho2]/d[ho2]
  J[995] += dqdci; // dwdot[c2h4]/d[ho2]
  J[998] -= dqdci; // dwdot[c2h3]/d[ho2]
  // d()/d[c2h3]
  dqdci = +k_f * sc[11];
  J[1694] += dqdci; // dwdot[o2]/d[c2h3]
  J[1702] -= dqdci; // dwdot[ho2]/d[c2h3]
  J[1707] += dqdci; // dwdot[c2h4]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT

  // reaction 198: nc3h7 => c2h4 + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[28];
  k_f = 228400000000000 * exp(-0.55 * logT - (14291.353308854) * invT);
  dlnkfdT = -0.55 * invT + (14291.353308854) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[16] += q; // c2h4
  wdot[28] -= q; // nc3h7
  // d()/d[nc3h7]
  dqdci = +k_f;
  J[2501] += dqdci; // dwdot[ch3]/d[nc3h7]
  J[2508] += dqdci; // dwdot[c2h4]/d[nc3h7]
  J[2520] -= dqdci; // dwdot[nc3h7]/d[nc3h7]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7860] -= dqdT; // dwdot[nc3h7]/dT

  // reaction 199: c2h4 + ch3 => nc3h7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[16];
  k_f = 410000 * exp(-(3625.1728604572) * invT);
  dlnkfdT = (3625.1728604572) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[16] -= q; // c2h4
  wdot[28] += q; // nc3h7
  // d()/d[ch3]
  dqdci = +k_f * sc[16];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[817] -= dqdci; // dwdot[c2h4]/d[ch3]
  J[829] += dqdci; // dwdot[nc3h7]/d[ch3]
  // d()/d[c2h4]
  dqdci = +k_f * sc[9];
  J[1433] -= dqdci; // dwdot[ch3]/d[c2h4]
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1452] += dqdci; // dwdot[nc3h7]/d[c2h4]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7860] += dqdT; // dwdot[nc3h7]/dT

  // reaction 200: nc3h7 => c3h6 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[28];
  k_f = 2.667e+15 * exp(-0.64 * logT - (18528.4376349298) * invT);
  dlnkfdT = -0.64 * invT + (18528.4376349298) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[26] += q; // c3h6
  wdot[28] -= q; // nc3h7
  // d()/d[nc3h7]
  dqdci = +k_f;
  J[2492] += dqdci; // dwdot[h]/d[nc3h7]
  J[2518] += dqdci; // dwdot[c3h6]/d[nc3h7]
  J[2520] -= dqdci; // dwdot[nc3h7]/d[nc3h7]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7860] -= dqdT; // dwdot[nc3h7]/dT

  // reaction 201: c3h6 + h => nc3h7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[26];
  k_f = 10000000 * exp(-(1258.0416645118) * invT);
  dlnkfdT = (1258.0416645118) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[26] -= q; // c3h6
  wdot[28] += q; // nc3h7
  // d()/d[h]
  dqdci = +k_f * sc[26];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[26] -= dqdci; // dwdot[c3h6]/d[h]
  J[28] += dqdci; // dwdot[nc3h7]/d[h]
  // d()/d[c3h6]
  dqdci = +k_f * sc[0];
  J[2314] -= dqdci; // dwdot[h]/d[c3h6]
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  J[2342] += dqdci; // dwdot[nc3h7]/d[c3h6]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT
  J[7860] += dqdT; // dwdot[nc3h7]/dT

  // reaction 202: nc3h7 + o2 => c3h6 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[28];
  k_f = 300000 * exp(-(1509.64999741416) * invT);
  dlnkfdT = (1509.64999741416) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[26] += q; // c3h6
  wdot[28] -= q; // nc3h7
  // d()/d[o2]
  dqdci = +k_f * sc[28];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[293] += dqdci; // dwdot[c3h6]/d[o2]
  J[295] -= dqdci; // dwdot[nc3h7]/d[o2]
  // d()/d[nc3h7]
  dqdci = +k_f * sc[3];
  J[2495] -= dqdci; // dwdot[o2]/d[nc3h7]
  J[2503] += dqdci; // dwdot[ho2]/d[nc3h7]
  J[2518] += dqdci; // dwdot[c3h6]/d[nc3h7]
  J[2520] -= dqdci; // dwdot[nc3h7]/d[nc3h7]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7860] -= dqdT; // dwdot[nc3h7]/dT

  // reaction 203: c3h6 + ho2 => nc3h7 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[26];
  k_f = 200000 * exp(-(8806.29165158259) * invT);
  dlnkfdT = (8806.29165158259) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[26] -= q; // c3h6
  wdot[28] += q; // nc3h7
  // d()/d[ho2]
  dqdci = +k_f * sc[26];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1005] -= dqdci; // dwdot[c3h6]/d[ho2]
  J[1007] += dqdci; // dwdot[nc3h7]/d[ho2]
  // d()/d[c3h6]
  dqdci = +k_f * sc[11];
  J[2317] += dqdci; // dwdot[o2]/d[c3h6]
  J[2325] -= dqdci; // dwdot[ho2]/d[c3h6]
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  J[2342] += dqdci; // dwdot[nc3h7]/d[c3h6]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT
  J[7860] += dqdT; // dwdot[nc3h7]/dT

  // reaction 204: c3h6 + o => c3h5-a + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[26];
  k_f = 524000 * exp(0.7 * logT - (2960.92686159497) * invT);
  dlnkfdT = 0.7 * invT + (2960.92686159497) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[4] += q;  // oh
  wdot[26] -= q; // c3h6
  wdot[47] += q; // c3h5-a
  // d()/d[o]
  dqdci = +k_f * sc[26];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[182] += dqdci; // dwdot[oh]/d[o]
  J[204] -= dqdci; // dwdot[c3h6]/d[o]
  J[225] += dqdci; // dwdot[c3h5-a]/d[o]
  // d()/d[c3h6]
  dqdci = +k_f * sc[2];
  J[2316] -= dqdci; // dwdot[o]/d[c3h6]
  J[2318] += dqdci; // dwdot[oh]/d[c3h6]
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  J[2361] += dqdci; // dwdot[c3h5-a]/d[c3h6]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 205: c3h5-a + oh => c3h6 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[47];
  k_f = 105500 * exp(0.71 * logT - (10476.9709820543) * invT);
  dlnkfdT = 0.71 * invT + (10476.9709820543) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[4] -= q;  // oh
  wdot[26] += q; // c3h6
  wdot[47] -= q; // c3h5-a
  // d()/d[oh]
  dqdci = +k_f * sc[47];
  J[358] += dqdci; // dwdot[o]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[382] += dqdci; // dwdot[c3h6]/d[oh]
  J[403] -= dqdci; // dwdot[c3h5-a]/d[oh]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[4];
  J[4185] += dqdci; // dwdot[o]/d[c3h5-a]
  J[4187] -= dqdci; // dwdot[oh]/d[c3h5-a]
  J[4209] += dqdci; // dwdot[c3h6]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 206: c3h6 + h => c3h5-a + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[26];
  k_f = 0.173 * exp(2.5 * logT - (1254.01593118536) * invT);
  dlnkfdT = 2.5 * invT + (1254.01593118536) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[26] -= q; // c3h6
  wdot[47] += q; // c3h5-a
  // d()/d[h]
  dqdci = +k_f * sc[26];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[26] -= dqdci; // dwdot[c3h6]/d[h]
  J[47] += dqdci; // dwdot[c3h5-a]/d[h]
  // d()/d[c3h6]
  dqdci = +k_f * sc[0];
  J[2314] -= dqdci; // dwdot[h]/d[c3h6]
  J[2315] += dqdci; // dwdot[h2]/d[c3h6]
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  J[2361] += dqdci; // dwdot[c3h5-a]/d[c3h6]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 207: c3h5-a + h2 => c3h6 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[47];
  k_f = 0.07933 * exp(2.51 * logT - (9822.78931650813) * invT);
  dlnkfdT = 2.51 * invT + (9822.78931650813) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[26] += q; // c3h6
  wdot[47] -= q; // c3h5-a
  // d()/d[h2]
  dqdci = +k_f * sc[47];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[115] += dqdci; // dwdot[c3h6]/d[h2]
  J[136] -= dqdci; // dwdot[c3h5-a]/d[h2]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[1];
  J[4183] += dqdci; // dwdot[h]/d[c3h5-a]
  J[4184] -= dqdci; // dwdot[h2]/d[c3h5-a]
  J[4209] += dqdci; // dwdot[c3h6]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 208: c3h6 + h => c2h4 + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[26];
  k_f = 4.83e+27 * exp(-5.81 * logT - (9309.50831738731) * invT);
  dlnkfdT = -5.81 * invT + (9309.50831738731) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[9] += q;  // ch3
  wdot[16] += q; // c2h4
  wdot[26] -= q; // c3h6
  // d()/d[h]
  dqdci = +k_f * sc[26];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[9] += dqdci;  // dwdot[ch3]/d[h]
  J[16] += dqdci; // dwdot[c2h4]/d[h]
  J[26] -= dqdci; // dwdot[c3h6]/d[h]
  // d()/d[c3h6]
  dqdci = +k_f * sc[0];
  J[2314] -= dqdci; // dwdot[h]/d[c3h6]
  J[2323] += dqdci; // dwdot[ch3]/d[c3h6]
  J[2330] += dqdci; // dwdot[c2h4]/d[c3h6]
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT

  // reaction 209: c2h4 + ch3 => c3h6 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[16];
  k_f = 2.313e+27 * exp(-5.9 * logT - (15911.7109727452) * invT);
  dlnkfdT = -5.9 * invT + (15911.7109727452) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[9] -= q;  // ch3
  wdot[16] -= q; // c2h4
  wdot[26] += q; // c3h6
  // d()/d[ch3]
  dqdci = +k_f * sc[16];
  J[801] += dqdci; // dwdot[h]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[817] -= dqdci; // dwdot[c2h4]/d[ch3]
  J[827] += dqdci; // dwdot[c3h6]/d[ch3]
  // d()/d[c2h4]
  dqdci = +k_f * sc[9];
  J[1424] += dqdci; // dwdot[h]/d[c2h4]
  J[1433] -= dqdci; // dwdot[ch3]/d[c2h4]
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1450] += dqdci; // dwdot[c3h6]/d[c2h4]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT

  // reaction 210: c5h9 => c2h4 + c3h5-a
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[35];
  k_f = 25000000000000 * exp(-(22644.7499612124) * invT);
  dlnkfdT = (22644.7499612124) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] += q; // c2h4
  wdot[35] -= q; // c5h9
  wdot[47] += q; // c3h5-a
  // d()/d[c5h9]
  dqdci = +k_f;
  J[3131] += dqdci; // dwdot[c2h4]/d[c5h9]
  J[3150] -= dqdci; // dwdot[c5h9]/d[c5h9]
  J[3162] += dqdci; // dwdot[c3h5-a]/d[c5h9]
  // d()/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7867] -= dqdT; // dwdot[c5h9]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 211: c5h9 => c4h6 + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[35];
  k_f = 1.339e+15 * exp(-0.52 * logT - (19283.2626336369) * invT);
  dlnkfdT = -0.52 * invT + (19283.2626336369) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[27] += q; // c4h6
  wdot[35] -= q; // c5h9
  // d()/d[c5h9]
  dqdci = +k_f;
  J[3124] += dqdci; // dwdot[ch3]/d[c5h9]
  J[3142] += dqdci; // dwdot[c4h6]/d[c5h9]
  J[3150] -= dqdci; // dwdot[c5h9]/d[c5h9]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7859] += dqdT; // dwdot[c4h6]/dT
  J[7867] -= dqdT; // dwdot[c5h9]/dT

  // reaction 212: c4h6 + ch3 => c5h9
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[27];
  k_f = 175000 * exp(-(3824.44666011587) * invT);
  dlnkfdT = (3824.44666011587) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[27] -= q; // c4h6
  wdot[35] += q; // c5h9
  // d()/d[ch3]
  dqdci = +k_f * sc[27];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[828] -= dqdci; // dwdot[c4h6]/d[ch3]
  J[836] += dqdci; // dwdot[c5h9]/d[ch3]
  // d()/d[c4h6]
  dqdci = +k_f * sc[9];
  J[2412] -= dqdci; // dwdot[ch3]/d[c4h6]
  J[2430] -= dqdci; // dwdot[c4h6]/d[c4h6]
  J[2438] += dqdci; // dwdot[c5h9]/d[c4h6]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7859] -= dqdT; // dwdot[c4h6]/dT
  J[7867] += dqdT; // dwdot[c5h9]/dT

  // reaction 213: c4h7 => c4h6 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[29];
  k_f = 120000000000000 * exp(-(24808.5816241727) * invT);
  dlnkfdT = (24808.5816241727) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[27] += q; // c4h6
  wdot[29] -= q; // c4h7
  // d()/d[c4h7]
  dqdci = +k_f;
  J[2581] += dqdci; // dwdot[h]/d[c4h7]
  J[2608] += dqdci; // dwdot[c4h6]/d[c4h7]
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7859] += dqdT; // dwdot[c4h6]/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT

  // reaction 214: c4h6 + h => c4h7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[27];
  k_f = 40000000 * exp(-(654.181665546136) * invT);
  dlnkfdT = (654.181665546136) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[27] -= q; // c4h6
  wdot[29] += q; // c4h7
  // d()/d[h]
  dqdci = +k_f * sc[27];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[27] -= dqdci; // dwdot[c4h6]/d[h]
  J[29] += dqdci; // dwdot[c4h7]/d[h]
  // d()/d[c4h6]
  dqdci = +k_f * sc[0];
  J[2403] -= dqdci; // dwdot[h]/d[c4h6]
  J[2430] -= dqdci; // dwdot[c4h6]/d[c4h6]
  J[2432] += dqdci; // dwdot[c4h7]/d[c4h6]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7859] -= dqdT; // dwdot[c4h6]/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT

  // reaction 215: c4h7 => c2h3 + c2h4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[29];
  k_f = 100000000000 * exp(-(18619.0166347746) * invT);
  dlnkfdT = (18619.0166347746) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] += q; // c2h4
  wdot[19] += q; // c2h3
  wdot[29] -= q; // c4h7
  // d()/d[c4h7]
  dqdci = +k_f;
  J[2597] += dqdci; // dwdot[c2h4]/d[c4h7]
  J[2600] += dqdci; // dwdot[c2h3]/d[c4h7]
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  // d()/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT

  // reaction 216: c2h3 + c2h4 => c4h7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[19];
  k_f = 50000 * exp(-(3522.51666063304) * invT);
  dlnkfdT = (3522.51666063304) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] -= q; // c2h4
  wdot[19] -= q; // c2h3
  wdot[29] += q; // c4h7
  // d()/d[c2h4]
  dqdci = +k_f * sc[19];
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1443] -= dqdci; // dwdot[c2h3]/d[c2h4]
  J[1453] += dqdci; // dwdot[c4h7]/d[c2h4]
  // d()/d[c2h3]
  dqdci = +k_f * sc[16];
  J[1707] -= dqdci; // dwdot[c2h4]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  J[1720] += dqdci; // dwdot[c4h7]/d[c2h3]
  // d()/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT

  // reaction 217: c4h6 + c4h8-1 => 2 c4h7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[27] * sc[30];
  k_f = 2350000 * exp(-(23510.2826263965) * invT);
  dlnkfdT = (23510.2826263965) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[27] -= q;     // c4h6
  wdot[29] += 2 * q; // c4h7
  wdot[30] -= q;     // c4h8-1
  // d()/d[c4h6]
  dqdci = +k_f * sc[30];
  J[2430] -= dqdci;     // dwdot[c4h6]/d[c4h6]
  J[2432] += 2 * dqdci; // dwdot[c4h7]/d[c4h6]
  J[2433] -= dqdci;     // dwdot[c4h8-1]/d[c4h6]
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[27];
  J[2697] -= dqdci;     // dwdot[c4h6]/d[c4h8-1]
  J[2699] += 2 * dqdci; // dwdot[c4h7]/d[c4h8-1]
  J[2700] -= dqdci;     // dwdot[c4h8-1]/d[c4h8-1]
  // d()/dT
  J[7859] -= dqdT;     // dwdot[c4h6]/dT
  J[7861] += 2 * dqdT; // dwdot[c4h7]/dT
  J[7862] -= dqdT;     // dwdot[c4h8-1]/dT

  // reaction 218: 2 c4h7 => c4h6 + c4h8-1
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[29] * sc[29]);
  k_f = 1600000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[27] += q;     // c4h6
  wdot[29] -= 2 * q; // c4h7
  wdot[30] += q;     // c4h8-1
  // d()/d[c4h7]
  dqdci = +k_f * 2.000000 * sc[29];
  J[2608] += dqdci;      // dwdot[c4h6]/d[c4h7]
  J[2610] += -2 * dqdci; // dwdot[c4h7]/d[c4h7]
  J[2611] += dqdci;      // dwdot[c4h8-1]/d[c4h7]
  // d()/dT
  J[7859] += dqdT;      // dwdot[c4h6]/dT
  J[7861] += -2 * dqdT; // dwdot[c4h7]/dT
  J[7862] += dqdT;      // dwdot[c4h8-1]/dT

  // reaction 219: c4h7 + ch3 => c4h6 + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[29];
  k_f = 8000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[27] += q; // c4h6
  wdot[29] -= q; // c4h7
  // d()/d[ch3]
  dqdci = +k_f * sc[29];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[828] += dqdci; // dwdot[c4h6]/d[ch3]
  J[830] -= dqdci; // dwdot[c4h7]/d[ch3]
  // d()/d[c4h7]
  dqdci = +k_f * sc[9];
  J[2590] -= dqdci; // dwdot[ch3]/d[c4h7]
  J[2591] += dqdci; // dwdot[ch4]/d[c4h7]
  J[2608] += dqdci; // dwdot[c4h6]/d[c4h7]
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7859] += dqdT; // dwdot[c4h6]/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT

  // reaction 220: c4h6 + ch4 => c4h7 + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[27];
  k_f = 70500000 * exp(-(28824.2506172943) * invT);
  dlnkfdT = (28824.2506172943) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[27] -= q; // c4h6
  wdot[29] += q; // c4h7
  // d()/d[ch4]
  dqdci = +k_f * sc[27];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[917] -= dqdci; // dwdot[c4h6]/d[ch4]
  J[919] += dqdci; // dwdot[c4h7]/d[ch4]
  // d()/d[c4h6]
  dqdci = +k_f * sc[10];
  J[2412] += dqdci; // dwdot[ch3]/d[c4h6]
  J[2413] -= dqdci; // dwdot[ch4]/d[c4h6]
  J[2430] -= dqdci; // dwdot[c4h6]/d[c4h6]
  J[2432] += dqdci; // dwdot[c4h7]/d[c4h6]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7859] -= dqdT; // dwdot[c4h6]/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT

  // reaction 221: c3h5-a + c4h7 => c3h6 + c4h6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[29] * sc[47];
  k_f = 6310000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[26] += q; // c3h6
  wdot[27] += q; // c4h6
  wdot[29] -= q; // c4h7
  wdot[47] -= q; // c3h5-a
  // d()/d[c4h7]
  dqdci = +k_f * sc[47];
  J[2607] += dqdci; // dwdot[c3h6]/d[c4h7]
  J[2608] += dqdci; // dwdot[c4h6]/d[c4h7]
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  J[2628] -= dqdci; // dwdot[c3h5-a]/d[c4h7]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[29];
  J[4209] += dqdci; // dwdot[c3h6]/d[c3h5-a]
  J[4210] += dqdci; // dwdot[c4h6]/d[c3h5-a]
  J[4212] -= dqdci; // dwdot[c4h7]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7859] += dqdT; // dwdot[c4h6]/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 222: c3h6 + c4h6 => c3h5-a + c4h7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[26] * sc[27];
  k_f = 10000 * exp(-(25160.833290236) * invT);
  dlnkfdT = (25160.833290236) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[26] -= q; // c3h6
  wdot[27] -= q; // c4h6
  wdot[29] += q; // c4h7
  wdot[47] += q; // c3h5-a
  // d()/d[c3h6]
  dqdci = +k_f * sc[27];
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  J[2341] -= dqdci; // dwdot[c4h6]/d[c3h6]
  J[2343] += dqdci; // dwdot[c4h7]/d[c3h6]
  J[2361] += dqdci; // dwdot[c3h5-a]/d[c3h6]
  // d()/d[c4h6]
  dqdci = +k_f * sc[26];
  J[2429] -= dqdci; // dwdot[c3h6]/d[c4h6]
  J[2430] -= dqdci; // dwdot[c4h6]/d[c4h6]
  J[2432] += dqdci; // dwdot[c4h7]/d[c4h6]
  J[2450] += dqdci; // dwdot[c3h5-a]/d[c4h6]
  // d()/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT
  J[7859] -= dqdT; // dwdot[c4h6]/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 223: c4h7 + o2 => c4h6 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[29];
  k_f = 1000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[27] += q; // c4h6
  wdot[29] -= q; // c4h7
  // d()/d[o2]
  dqdci = +k_f * sc[29];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[294] += dqdci; // dwdot[c4h6]/d[o2]
  J[296] -= dqdci; // dwdot[c4h7]/d[o2]
  // d()/d[c4h7]
  dqdci = +k_f * sc[3];
  J[2584] -= dqdci; // dwdot[o2]/d[c4h7]
  J[2592] += dqdci; // dwdot[ho2]/d[c4h7]
  J[2608] += dqdci; // dwdot[c4h6]/d[c4h7]
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7859] += dqdT; // dwdot[c4h6]/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT

  // reaction 224: c4h6 + ho2 => c4h7 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[27];
  k_f = 100000 * exp(-(8554.68331868023) * invT);
  dlnkfdT = (8554.68331868023) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[27] -= q; // c4h6
  wdot[29] += q; // c4h7
  // d()/d[ho2]
  dqdci = +k_f * sc[27];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1006] -= dqdci; // dwdot[c4h6]/d[ho2]
  J[1008] += dqdci; // dwdot[c4h7]/d[ho2]
  // d()/d[c4h6]
  dqdci = +k_f * sc[11];
  J[2406] += dqdci; // dwdot[o2]/d[c4h6]
  J[2414] -= dqdci; // dwdot[ho2]/d[c4h6]
  J[2430] -= dqdci; // dwdot[c4h6]/d[c4h6]
  J[2432] += dqdci; // dwdot[c4h7]/d[c4h6]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7859] -= dqdT; // dwdot[c4h6]/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT

  // reaction 225: c4h7 + h => c4h6 + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[29];
  k_f = 31600000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[27] += q; // c4h6
  wdot[29] -= q; // c4h7
  // d()/d[h]
  dqdci = +k_f * sc[29];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[27] += dqdci; // dwdot[c4h6]/d[h]
  J[29] -= dqdci; // dwdot[c4h7]/d[h]
  // d()/d[c4h7]
  dqdci = +k_f * sc[0];
  J[2581] -= dqdci; // dwdot[h]/d[c4h7]
  J[2582] += dqdci; // dwdot[h2]/d[c4h7]
  J[2608] += dqdci; // dwdot[c4h6]/d[c4h7]
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7859] += dqdT; // dwdot[c4h6]/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT

  // reaction 226: c4h6 + h2 => c4h7 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[27];
  k_f = 10660000 * exp(-(28587.7387843661) * invT);
  dlnkfdT = (28587.7387843661) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[27] -= q; // c4h6
  wdot[29] += q; // c4h7
  // d()/d[h2]
  dqdci = +k_f * sc[27];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[116] -= dqdci; // dwdot[c4h6]/d[h2]
  J[118] += dqdci; // dwdot[c4h7]/d[h2]
  // d()/d[c4h6]
  dqdci = +k_f * sc[1];
  J[2403] += dqdci; // dwdot[h]/d[c4h6]
  J[2404] -= dqdci; // dwdot[h2]/d[c4h6]
  J[2430] -= dqdci; // dwdot[c4h6]/d[c4h6]
  J[2432] += dqdci; // dwdot[c4h7]/d[c4h6]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7859] -= dqdT; // dwdot[c4h6]/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT

  // reaction 227: c2h5 + c4h7 => c2h6 + c4h6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[29];
  k_f = 3980000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[15] += q; // c2h6
  wdot[17] -= q; // c2h5
  wdot[27] += q; // c4h6
  wdot[29] -= q; // c4h7
  // d()/d[c2h5]
  dqdci = +k_f * sc[29];
  J[1528] += dqdci; // dwdot[c2h6]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1540] += dqdci; // dwdot[c4h6]/d[c2h5]
  J[1542] -= dqdci; // dwdot[c4h7]/d[c2h5]
  // d()/d[c4h7]
  dqdci = +k_f * sc[17];
  J[2596] += dqdci; // dwdot[c2h6]/d[c4h7]
  J[2598] -= dqdci; // dwdot[c2h5]/d[c4h7]
  J[2608] += dqdci; // dwdot[c4h6]/d[c4h7]
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  // d()/dT
  J[7847] += dqdT; // dwdot[c2h6]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7859] += dqdT; // dwdot[c4h6]/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT

  // reaction 228: c2h6 + c4h6 => c2h5 + c4h7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[27];
  k_f = 3211000 * exp(-(25080.3186237072) * invT);
  dlnkfdT = (25080.3186237072) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[15] -= q; // c2h6
  wdot[17] += q; // c2h5
  wdot[27] -= q; // c4h6
  wdot[29] += q; // c4h7
  // d()/d[c2h6]
  dqdci = +k_f * sc[27];
  J[1350] -= dqdci; // dwdot[c2h6]/d[c2h6]
  J[1352] += dqdci; // dwdot[c2h5]/d[c2h6]
  J[1362] -= dqdci; // dwdot[c4h6]/d[c2h6]
  J[1364] += dqdci; // dwdot[c4h7]/d[c2h6]
  // d()/d[c4h6]
  dqdci = +k_f * sc[15];
  J[2418] -= dqdci; // dwdot[c2h6]/d[c4h6]
  J[2420] += dqdci; // dwdot[c2h5]/d[c4h6]
  J[2430] -= dqdci; // dwdot[c4h6]/d[c4h6]
  J[2432] += dqdci; // dwdot[c4h7]/d[c4h6]
  // d()/dT
  J[7847] -= dqdT; // dwdot[c2h6]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7859] -= dqdT; // dwdot[c4h6]/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT

  // reaction 229: c2h5 + c4h7 => c2h4 + c4h8-1
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[29];
  k_f = 9.24 * exp(1.5 * logT - (-484.09443250414) * invT);
  dlnkfdT = 1.5 * invT + (-484.09443250414) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] += q; // c2h4
  wdot[17] -= q; // c2h5
  wdot[29] -= q; // c4h7
  wdot[30] += q; // c4h8-1
  // d()/d[c2h5]
  dqdci = +k_f * sc[29];
  J[1529] += dqdci; // dwdot[c2h4]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1542] -= dqdci; // dwdot[c4h7]/d[c2h5]
  J[1543] += dqdci; // dwdot[c4h8-1]/d[c2h5]
  // d()/d[c4h7]
  dqdci = +k_f * sc[17];
  J[2597] += dqdci; // dwdot[c2h4]/d[c4h7]
  J[2598] -= dqdci; // dwdot[c2h5]/d[c4h7]
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  J[2611] += dqdci; // dwdot[c4h8-1]/d[c4h7]
  // d()/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT

  // reaction 230: c2h4 + c4h8-1 => c2h5 + c4h7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[30];
  k_f = 0.0007807 * exp(2.91 * logT - (25643.9212894085) * invT);
  dlnkfdT = 2.91 * invT + (25643.9212894085) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] -= q; // c2h4
  wdot[17] += q; // c2h5
  wdot[29] += q; // c4h7
  wdot[30] -= q; // c4h8-1
  // d()/d[c2h4]
  dqdci = +k_f * sc[30];
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1441] += dqdci; // dwdot[c2h5]/d[c2h4]
  J[1453] += dqdci; // dwdot[c4h7]/d[c2h4]
  J[1454] -= dqdci; // dwdot[c4h8-1]/d[c2h4]
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[16];
  J[2686] -= dqdci; // dwdot[c2h4]/d[c4h8-1]
  J[2687] += dqdci; // dwdot[c2h5]/d[c4h8-1]
  J[2699] += dqdci; // dwdot[c4h7]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  // d()/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT

  // reaction 231: c2h3 + c4h7 => c2h4 + c4h6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[29];
  k_f = 3980000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] += q; // c2h4
  wdot[19] -= q; // c2h3
  wdot[27] += q; // c4h6
  wdot[29] -= q; // c4h7
  // d()/d[c2h3]
  dqdci = +k_f * sc[29];
  J[1707] += dqdci; // dwdot[c2h4]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  J[1718] += dqdci; // dwdot[c4h6]/d[c2h3]
  J[1720] -= dqdci; // dwdot[c4h7]/d[c2h3]
  // d()/d[c4h7]
  dqdci = +k_f * sc[19];
  J[2597] += dqdci; // dwdot[c2h4]/d[c4h7]
  J[2600] -= dqdci; // dwdot[c2h3]/d[c4h7]
  J[2608] += dqdci; // dwdot[c4h6]/d[c4h7]
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  // d()/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT
  J[7859] += dqdT; // dwdot[c4h6]/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT

  // reaction 232: c2h4 + c4h6 => c2h3 + c4h7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[27];
  k_f = 11570000 * exp(-(29040.6337835904) * invT);
  dlnkfdT = (29040.6337835904) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] -= q; // c2h4
  wdot[19] += q; // c2h3
  wdot[27] -= q; // c4h6
  wdot[29] += q; // c4h7
  // d()/d[c2h4]
  dqdci = +k_f * sc[27];
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1443] += dqdci; // dwdot[c2h3]/d[c2h4]
  J[1451] -= dqdci; // dwdot[c4h6]/d[c2h4]
  J[1453] += dqdci; // dwdot[c4h7]/d[c2h4]
  // d()/d[c4h6]
  dqdci = +k_f * sc[16];
  J[2419] -= dqdci; // dwdot[c2h4]/d[c4h6]
  J[2422] += dqdci; // dwdot[c2h3]/d[c4h6]
  J[2430] -= dqdci; // dwdot[c4h6]/d[c4h6]
  J[2432] += dqdci; // dwdot[c4h7]/d[c4h6]
  // d()/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT
  J[7859] -= dqdT; // dwdot[c4h6]/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT

  // reaction 233: c4h8-1 => c3h5-a + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[30];
  k_f = 5e+15 * exp(-(35728.3832721351) * invT);
  dlnkfdT = (35728.3832721351) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[30] -= q; // c4h8-1
  wdot[47] += q; // c3h5-a
  // d()/d[c4h8-1]
  dqdci = +k_f;
  J[2679] += dqdci; // dwdot[ch3]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  J[2717] += dqdci; // dwdot[c3h5-a]/d[c4h8-1]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 234: c3h5-a + ch3 => c4h8-1
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[47];
  k_f = 5000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[30] += q; // c4h8-1
  wdot[47] -= q; // c3h5-a
  // d()/d[ch3]
  dqdci = +k_f * sc[47];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[831] += dqdci; // dwdot[c4h8-1]/d[ch3]
  J[848] -= dqdci; // dwdot[c3h5-a]/d[ch3]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[9];
  J[4192] -= dqdci; // dwdot[ch3]/d[c3h5-a]
  J[4213] += dqdci; // dwdot[c4h8-1]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 235: c4h8-1 => c2h3 + c2h5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[30];
  k_f = 1e+19 * exp(-1 * logT - (48696.2767499227) * invT);
  dlnkfdT = -1 * invT + (48696.2767499227) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[17] += q; // c2h5
  wdot[19] += q; // c2h3
  wdot[30] -= q; // c4h8-1
  // d()/d[c4h8-1]
  dqdci = +k_f;
  J[2687] += dqdci; // dwdot[c2h5]/d[c4h8-1]
  J[2689] += dqdci; // dwdot[c2h3]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  // d()/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT

  // reaction 236: c2h3 + c2h5 => c4h8-1
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[19];
  k_f = 9000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[17] -= q; // c2h5
  wdot[19] -= q; // c2h3
  wdot[30] += q; // c4h8-1
  // d()/d[c2h5]
  dqdci = +k_f * sc[19];
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1532] -= dqdci; // dwdot[c2h3]/d[c2h5]
  J[1543] += dqdci; // dwdot[c4h8-1]/d[c2h5]
  // d()/d[c2h3]
  dqdci = +k_f * sc[17];
  J[1708] -= dqdci; // dwdot[c2h5]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  J[1721] += dqdci; // dwdot[c4h8-1]/d[c2h3]
  // d()/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT

  // reaction 237: c4h8-1 => c4h7 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[30];
  k_f = 4.107e+18 * exp(-1 * logT - (48988.1424160895) * invT);
  dlnkfdT = -1 * invT + (48988.1424160895) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[29] += q; // c4h7
  wdot[30] -= q; // c4h8-1
  // d()/d[c4h8-1]
  dqdci = +k_f;
  J[2670] += dqdci; // dwdot[h]/d[c4h8-1]
  J[2699] += dqdci; // dwdot[c4h7]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT

  // reaction 238: c4h7 + h => c4h8-1
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[29];
  k_f = 50000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[29] -= q; // c4h7
  wdot[30] += q; // c4h8-1
  // d()/d[h]
  dqdci = +k_f * sc[29];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[29] -= dqdci; // dwdot[c4h7]/d[h]
  J[30] += dqdci; // dwdot[c4h8-1]/d[h]
  // d()/d[c4h7]
  dqdci = +k_f * sc[0];
  J[2581] -= dqdci; // dwdot[h]/d[c4h7]
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  J[2611] += dqdci; // dwdot[c4h8-1]/d[c4h7]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT

  // reaction 239: c4h8-1 + ch3 => c4h7 + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[30];
  k_f = 100000 * exp(-(3673.48166037445) * invT);
  dlnkfdT = (3673.48166037445) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[29] += q; // c4h7
  wdot[30] -= q; // c4h8-1
  // d()/d[ch3]
  dqdci = +k_f * sc[30];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[830] += dqdci; // dwdot[c4h7]/d[ch3]
  J[831] -= dqdci; // dwdot[c4h8-1]/d[ch3]
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[9];
  J[2679] -= dqdci; // dwdot[ch3]/d[c4h8-1]
  J[2680] += dqdci; // dwdot[ch4]/d[c4h8-1]
  J[2699] += dqdci; // dwdot[c4h7]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT

  // reaction 240: c4h7 + ch4 => c4h8-1 + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[29];
  k_f = 600000 * exp(-(8987.44965127229) * invT);
  dlnkfdT = (8987.44965127229) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[29] -= q; // c4h7
  wdot[30] += q; // c4h8-1
  // d()/d[ch4]
  dqdci = +k_f * sc[29];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[919] -= dqdci; // dwdot[c4h7]/d[ch4]
  J[920] += dqdci; // dwdot[c4h8-1]/d[ch4]
  // d()/d[c4h7]
  dqdci = +k_f * sc[10];
  J[2590] += dqdci; // dwdot[ch3]/d[c4h7]
  J[2591] -= dqdci; // dwdot[ch4]/d[c4h7]
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  J[2611] += dqdci; // dwdot[c4h8-1]/d[c4h7]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT

  // reaction 241: c4h8-1 + h => c4h7 + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[30];
  k_f = 50000000 * exp(-(1962.54499663841) * invT);
  dlnkfdT = (1962.54499663841) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[29] += q; // c4h7
  wdot[30] -= q; // c4h8-1
  // d()/d[h]
  dqdci = +k_f * sc[30];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[29] += dqdci; // dwdot[c4h7]/d[h]
  J[30] -= dqdci; // dwdot[c4h8-1]/d[h]
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[0];
  J[2670] -= dqdci; // dwdot[h]/d[c4h8-1]
  J[2671] += dqdci; // dwdot[h2]/d[c4h8-1]
  J[2699] += dqdci; // dwdot[c4h7]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT

  // reaction 242: c4h7 + h2 => c4h8-1 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[29];
  k_f = 40000000 * exp(-(12681.0599782789) * invT);
  dlnkfdT = (12681.0599782789) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[29] -= q; // c4h7
  wdot[30] += q; // c4h8-1
  // d()/d[h2]
  dqdci = +k_f * sc[29];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[118] -= dqdci; // dwdot[c4h7]/d[h2]
  J[119] += dqdci; // dwdot[c4h8-1]/d[h2]
  // d()/d[c4h7]
  dqdci = +k_f * sc[1];
  J[2581] += dqdci; // dwdot[h]/d[c4h7]
  J[2582] -= dqdci; // dwdot[h2]/d[c4h7]
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  J[2611] += dqdci; // dwdot[c4h8-1]/d[c4h7]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT

  // reaction 243: c4h8-1 + oh => c4h7 + h2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[30];
  k_f = 22500000 * exp(-(1115.63134808906) * invT);
  dlnkfdT = (1115.63134808906) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[29] += q; // c4h7
  wdot[30] -= q; // c4h8-1
  // d()/d[oh]
  dqdci = +k_f * sc[30];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[385] += dqdci; // dwdot[c4h7]/d[oh]
  J[386] -= dqdci; // dwdot[c4h8-1]/d[oh]
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[4];
  J[2674] -= dqdci; // dwdot[oh]/d[c4h8-1]
  J[2675] += dqdci; // dwdot[h2o]/d[c4h8-1]
  J[2699] += dqdci; // dwdot[c4h7]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT

  // reaction 244: c4h7 + h2o => c4h8-1 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[29];
  k_f = 4772000 * exp(-(13320.1451438509) * invT);
  dlnkfdT = (13320.1451438509) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[29] -= q; // c4h7
  wdot[30] += q; // c4h8-1
  // d()/d[h2o]
  dqdci = +k_f * sc[29];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[474] -= dqdci; // dwdot[c4h7]/d[h2o]
  J[475] += dqdci; // dwdot[c4h8-1]/d[h2o]
  // d()/d[c4h7]
  dqdci = +k_f * sc[5];
  J[2585] += dqdci; // dwdot[oh]/d[c4h7]
  J[2586] -= dqdci; // dwdot[h2o]/d[c4h7]
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  J[2611] += dqdci; // dwdot[c4h8-1]/d[c4h7]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT

  // reaction 245: c3h5-a + c4h8-1 => c3h6 + c4h7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[30] * sc[47];
  k_f = 79000 * exp(-(6239.88665597852) * invT);
  dlnkfdT = (6239.88665597852) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[26] += q; // c3h6
  wdot[29] += q; // c4h7
  wdot[30] -= q; // c4h8-1
  wdot[47] -= q; // c3h5-a
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[47];
  J[2696] += dqdci; // dwdot[c3h6]/d[c4h8-1]
  J[2699] += dqdci; // dwdot[c4h7]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  J[2717] -= dqdci; // dwdot[c3h5-a]/d[c4h8-1]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[30];
  J[4209] += dqdci; // dwdot[c3h6]/d[c3h5-a]
  J[4212] += dqdci; // dwdot[c4h7]/d[c3h5-a]
  J[4213] -= dqdci; // dwdot[c4h8-1]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 246: c3h6 + c4h7 => c3h5-a + c4h8-1
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[26] * sc[29];
  k_f = 100000 * exp(-(8806.29165158259) * invT);
  dlnkfdT = (8806.29165158259) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[26] -= q; // c3h6
  wdot[29] -= q; // c4h7
  wdot[30] += q; // c4h8-1
  wdot[47] += q; // c3h5-a
  // d()/d[c3h6]
  dqdci = +k_f * sc[29];
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  J[2343] -= dqdci; // dwdot[c4h7]/d[c3h6]
  J[2344] += dqdci; // dwdot[c4h8-1]/d[c3h6]
  J[2361] += dqdci; // dwdot[c3h5-a]/d[c3h6]
  // d()/d[c4h7]
  dqdci = +k_f * sc[26];
  J[2607] -= dqdci; // dwdot[c3h6]/d[c4h7]
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  J[2611] += dqdci; // dwdot[c4h8-1]/d[c4h7]
  J[2628] += dqdci; // dwdot[c3h5-a]/d[c4h7]
  // d()/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 247: c4h8-1 + ho2 => c4h7 + h2o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[30];
  k_f = 1400000 * exp(-(7497.92832049032) * invT);
  dlnkfdT = (7497.92832049032) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  wdot[29] += q; // c4h7
  wdot[30] -= q; // c4h8-1
  // d()/d[ho2]
  dqdci = +k_f * sc[30];
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[991] += dqdci;  // dwdot[h2o2]/d[ho2]
  J[1008] += dqdci; // dwdot[c4h7]/d[ho2]
  J[1009] -= dqdci; // dwdot[c4h8-1]/d[ho2]
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[11];
  J[2681] -= dqdci; // dwdot[ho2]/d[c4h8-1]
  J[2682] += dqdci; // dwdot[h2o2]/d[c4h8-1]
  J[2699] += dqdci; // dwdot[c4h7]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  // d()/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT

  // reaction 248: c4h7 + h2o2 => c4h8-1 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[29];
  k_f = 316000 * exp(-(6541.81665546136) * invT);
  dlnkfdT = (6541.81665546136) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // ho2
  wdot[12] -= q; // h2o2
  wdot[29] -= q; // c4h7
  wdot[30] += q; // c4h8-1
  // d()/d[h2o2]
  dqdci = +k_f * sc[29];
  J[1079] += dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci; // dwdot[h2o2]/d[h2o2]
  J[1097] -= dqdci; // dwdot[c4h7]/d[h2o2]
  J[1098] += dqdci; // dwdot[c4h8-1]/d[h2o2]
  // d()/d[c4h7]
  dqdci = +k_f * sc[12];
  J[2592] += dqdci; // dwdot[ho2]/d[c4h7]
  J[2593] -= dqdci; // dwdot[h2o2]/d[c4h7]
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  J[2611] += dqdci; // dwdot[c4h8-1]/d[c4h7]
  // d()/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT; // dwdot[h2o2]/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT

  // reaction 249: c4h8-1 + o2 => c4h7 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[30];
  k_f = 27000000 * exp(-(16706.7933047167) * invT);
  dlnkfdT = (16706.7933047167) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[29] += q; // c4h7
  wdot[30] -= q; // c4h8-1
  // d()/d[o2]
  dqdci = +k_f * sc[30];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[296] += dqdci; // dwdot[c4h7]/d[o2]
  J[297] -= dqdci; // dwdot[c4h8-1]/d[o2]
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[3];
  J[2673] -= dqdci; // dwdot[o2]/d[c4h8-1]
  J[2681] += dqdci; // dwdot[ho2]/d[c4h8-1]
  J[2699] += dqdci; // dwdot[c4h7]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT

  // reaction 250: c4h7 + ho2 => c4h8-1 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[29];
  k_f = 300000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[29] -= q; // c4h7
  wdot[30] += q; // c4h8-1
  // d()/d[ho2]
  dqdci = +k_f * sc[29];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1008] -= dqdci; // dwdot[c4h7]/d[ho2]
  J[1009] += dqdci; // dwdot[c4h8-1]/d[ho2]
  // d()/d[c4h7]
  dqdci = +k_f * sc[11];
  J[2584] += dqdci; // dwdot[o2]/d[c4h7]
  J[2592] -= dqdci; // dwdot[ho2]/d[c4h7]
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  J[2611] += dqdci; // dwdot[c4h8-1]/d[c4h7]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT

  // reaction 251: pc4h9 => c2h4 + c2h5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[31];
  k_f = 7.497e+17 * exp(-1.41 * logT - (14885.1489745036) * invT);
  dlnkfdT = -1.41 * invT + (14885.1489745036) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] += q; // c2h4
  wdot[17] += q; // c2h5
  wdot[31] -= q; // pc4h9
  // d()/d[pc4h9]
  dqdci = +k_f;
  J[2775] += dqdci; // dwdot[c2h4]/d[pc4h9]
  J[2776] += dqdci; // dwdot[c2h5]/d[pc4h9]
  J[2790] -= dqdci; // dwdot[pc4h9]/d[pc4h9]
  // d()/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7863] -= dqdT; // dwdot[pc4h9]/dT

  // reaction 252: c2h4 + c2h5 => pc4h9
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[17];
  k_f = 330000 * exp(-(3623.15999379398) * invT);
  dlnkfdT = (3623.15999379398) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] -= q; // c2h4
  wdot[17] -= q; // c2h5
  wdot[31] += q; // pc4h9
  // d()/d[c2h4]
  dqdci = +k_f * sc[17];
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1441] -= dqdci; // dwdot[c2h5]/d[c2h4]
  J[1455] += dqdci; // dwdot[pc4h9]/d[c2h4]
  // d()/d[c2h5]
  dqdci = +k_f * sc[16];
  J[1529] -= dqdci; // dwdot[c2h4]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1544] += dqdci; // dwdot[pc4h9]/d[c2h5]
  // d()/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7863] += dqdT; // dwdot[pc4h9]/dT

  // reaction 253: pc4h9 => c4h8-1 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[31];
  k_f = 1.159e+17 * exp(-1.17 * logT - (19202.7479671081) * invT);
  dlnkfdT = -1.17 * invT + (19202.7479671081) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[30] += q; // c4h8-1
  wdot[31] -= q; // pc4h9
  // d()/d[pc4h9]
  dqdci = +k_f;
  J[2759] += dqdci; // dwdot[h]/d[pc4h9]
  J[2789] += dqdci; // dwdot[c4h8-1]/d[pc4h9]
  J[2790] -= dqdci; // dwdot[pc4h9]/d[pc4h9]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT
  J[7863] -= dqdT; // dwdot[pc4h9]/dT

  // reaction 254: c4h8-1 + h => pc4h9
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[30];
  k_f = 10000000 * exp(-(1459.32833083369) * invT);
  dlnkfdT = (1459.32833083369) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[30] -= q; // c4h8-1
  wdot[31] += q; // pc4h9
  // d()/d[h]
  dqdci = +k_f * sc[30];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[30] -= dqdci; // dwdot[c4h8-1]/d[h]
  J[31] += dqdci; // dwdot[pc4h9]/d[h]
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[0];
  J[2670] -= dqdci; // dwdot[h]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  J[2701] += dqdci; // dwdot[pc4h9]/d[c4h8-1]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT
  J[7863] += dqdT; // dwdot[pc4h9]/dT

  // reaction 255: o2 + pc4h9 => c4h8-1 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[31];
  k_f = 3e-25 * exp(-(1509.64999741416) * invT);
  dlnkfdT = (1509.64999741416) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[30] += q; // c4h8-1
  wdot[31] -= q; // pc4h9
  // d()/d[o2]
  dqdci = +k_f * sc[31];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[297] += dqdci; // dwdot[c4h8-1]/d[o2]
  J[298] -= dqdci; // dwdot[pc4h9]/d[o2]
  // d()/d[pc4h9]
  dqdci = +k_f * sc[3];
  J[2762] -= dqdci; // dwdot[o2]/d[pc4h9]
  J[2770] += dqdci; // dwdot[ho2]/d[pc4h9]
  J[2789] += dqdci; // dwdot[c4h8-1]/d[pc4h9]
  J[2790] -= dqdci; // dwdot[pc4h9]/d[pc4h9]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT
  J[7863] -= dqdT; // dwdot[pc4h9]/dT

  // reaction 256: c4h8-1 + ho2 => o2 + pc4h9
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[30];
  k_f = 2e-25 * exp(-(8806.29165158259) * invT);
  dlnkfdT = (8806.29165158259) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[30] -= q; // c4h8-1
  wdot[31] += q; // pc4h9
  // d()/d[ho2]
  dqdci = +k_f * sc[30];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1009] -= dqdci; // dwdot[c4h8-1]/d[ho2]
  J[1010] += dqdci; // dwdot[pc4h9]/d[ho2]
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[11];
  J[2673] += dqdci; // dwdot[o2]/d[c4h8-1]
  J[2681] -= dqdci; // dwdot[ho2]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  J[2701] += dqdci; // dwdot[pc4h9]/d[c4h8-1]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT
  J[7863] += dqdT; // dwdot[pc4h9]/dT

  // reaction 257: ch3coch2 => ch2co + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[32];
  k_f = 100000000000000 * exp(-(15599.7166399463) * invT);
  dlnkfdT = (15599.7166399463) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[20] += q; // ch2co
  wdot[32] -= q; // ch3coch2
  // d()/d[ch3coch2]
  dqdci = +k_f;
  J[2857] += dqdci; // dwdot[ch3]/d[ch3coch2]
  J[2868] += dqdci; // dwdot[ch2co]/d[ch3coch2]
  J[2880] -= dqdci; // dwdot[ch3coch2]/d[ch3coch2]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7852] += dqdT; // dwdot[ch2co]/dT
  J[7864] -= dqdT; // dwdot[ch3coch2]/dT

  // reaction 258: ch2co + ch3 => ch3coch2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[20];
  k_f = 100000 * exp(-(3019.29999482832) * invT);
  dlnkfdT = (3019.29999482832) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[20] -= q; // ch2co
  wdot[32] += q; // ch3coch2
  // d()/d[ch3]
  dqdci = +k_f * sc[20];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[821] -= dqdci; // dwdot[ch2co]/d[ch3]
  J[833] += dqdci; // dwdot[ch3coch2]/d[ch3]
  // d()/d[ch2co]
  dqdci = +k_f * sc[9];
  J[1789] -= dqdci; // dwdot[ch3]/d[ch2co]
  J[1800] -= dqdci; // dwdot[ch2co]/d[ch2co]
  J[1812] += dqdci; // dwdot[ch3coch2]/d[ch2co]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7852] -= dqdT; // dwdot[ch2co]/dT
  J[7864] += dqdT; // dwdot[ch3coch2]/dT

  // reaction 259: c2h5co => c2h5 + co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[34];
  k_f = 1.834e+15 * exp(-0.73 * logT - (6496.52715553893) * invT);
  dlnkfdT = -0.73 * invT + (6496.52715553893) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] += q;  // co
  wdot[17] += q; // c2h5
  wdot[34] -= q; // c2h5co
  // d()/d[c2h5co]
  dqdci = +k_f;
  J[3032] += dqdci; // dwdot[co]/d[c2h5co]
  J[3043] += dqdci; // dwdot[c2h5]/d[c2h5co]
  J[3060] -= dqdci; // dwdot[c2h5co]/d[c2h5co]
  // d()/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7866] -= dqdT; // dwdot[c2h5co]/dT

  // reaction 260: c2h5 + co => c2h5co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[17];
  k_f = 151000 * exp(-(2420.4721625207) * invT);
  dlnkfdT = (2420.4721625207) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // co
  wdot[17] -= q; // c2h5
  wdot[34] += q; // c2h5co
  // d()/d[co]
  dqdci = +k_f * sc[17];
  J[540] -= dqdci; // dwdot[co]/d[co]
  J[551] -= dqdci; // dwdot[c2h5]/d[co]
  J[568] += dqdci; // dwdot[c2h5co]/d[co]
  // d()/d[c2h5]
  dqdci = +k_f * sc[6];
  J[1519] -= dqdci; // dwdot[co]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1547] += dqdci; // dwdot[c2h5co]/d[c2h5]
  // d()/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7866] += dqdT; // dwdot[c2h5co]/dT

  // reaction 261: c2h5cho + h => c2h5co + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[33];
  k_f = 40000000 * exp(-(2113.50999637982) * invT);
  dlnkfdT = (2113.50999637982) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[33] -= q; // c2h5cho
  wdot[34] += q; // c2h5co
  // d()/d[h]
  dqdci = +k_f * sc[33];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[33] -= dqdci; // dwdot[c2h5cho]/d[h]
  J[34] += dqdci; // dwdot[c2h5co]/d[h]
  // d()/d[c2h5cho]
  dqdci = +k_f * sc[0];
  J[2937] -= dqdci; // dwdot[h]/d[c2h5cho]
  J[2938] += dqdci; // dwdot[h2]/d[c2h5cho]
  J[2970] -= dqdci; // dwdot[c2h5cho]/d[c2h5cho]
  J[2971] += dqdci; // dwdot[c2h5co]/d[c2h5cho]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7865] -= dqdT; // dwdot[c2h5cho]/dT
  J[7866] += dqdT; // dwdot[c2h5co]/dT

  // reaction 262: c2h5co + h2 => c2h5cho + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[34];
  k_f = 5854000 * exp(-(10361.2311489192) * invT);
  dlnkfdT = (10361.2311489192) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[33] += q; // c2h5cho
  wdot[34] -= q; // c2h5co
  // d()/d[h2]
  dqdci = +k_f * sc[34];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[122] += dqdci; // dwdot[c2h5cho]/d[h2]
  J[123] -= dqdci; // dwdot[c2h5co]/d[h2]
  // d()/d[c2h5co]
  dqdci = +k_f * sc[1];
  J[3026] += dqdci; // dwdot[h]/d[c2h5co]
  J[3027] -= dqdci; // dwdot[h2]/d[c2h5co]
  J[3059] += dqdci; // dwdot[c2h5cho]/d[c2h5co]
  J[3060] -= dqdci; // dwdot[c2h5co]/d[c2h5co]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7865] += dqdT; // dwdot[c2h5cho]/dT
  J[7866] -= dqdT; // dwdot[c2h5co]/dT

  // reaction 263: c2h5cho + o => c2h5co + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[33];
  k_f = 5000000 * exp(-(900.757831790448) * invT);
  dlnkfdT = (900.757831790448) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[4] += q;  // oh
  wdot[33] -= q; // c2h5cho
  wdot[34] += q; // c2h5co
  // d()/d[o]
  dqdci = +k_f * sc[33];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[182] += dqdci; // dwdot[oh]/d[o]
  J[211] -= dqdci; // dwdot[c2h5cho]/d[o]
  J[212] += dqdci; // dwdot[c2h5co]/d[o]
  // d()/d[c2h5cho]
  dqdci = +k_f * sc[2];
  J[2939] -= dqdci; // dwdot[o]/d[c2h5cho]
  J[2941] += dqdci; // dwdot[oh]/d[c2h5cho]
  J[2970] -= dqdci; // dwdot[c2h5cho]/d[c2h5cho]
  J[2971] += dqdci; // dwdot[c2h5co]/d[c2h5cho]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7865] -= dqdT; // dwdot[c2h5cho]/dT
  J[7866] += dqdT; // dwdot[c2h5co]/dT

  // reaction 264: c2h5co + oh => c2h5cho + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[34];
  k_f = 321400 * exp(-(8091.72398613989) * invT);
  dlnkfdT = (8091.72398613989) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[4] -= q;  // oh
  wdot[33] += q; // c2h5cho
  wdot[34] -= q; // c2h5co
  // d()/d[oh]
  dqdci = +k_f * sc[34];
  J[358] += dqdci; // dwdot[o]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[389] += dqdci; // dwdot[c2h5cho]/d[oh]
  J[390] -= dqdci; // dwdot[c2h5co]/d[oh]
  // d()/d[c2h5co]
  dqdci = +k_f * sc[4];
  J[3028] += dqdci; // dwdot[o]/d[c2h5co]
  J[3030] -= dqdci; // dwdot[oh]/d[c2h5co]
  J[3059] += dqdci; // dwdot[c2h5cho]/d[c2h5co]
  J[3060] -= dqdci; // dwdot[c2h5co]/d[c2h5co]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7865] += dqdT; // dwdot[c2h5cho]/dT
  J[7866] -= dqdT; // dwdot[c2h5co]/dT

  // reaction 265: c2h5cho + oh => c2h5co + h2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[33];
  k_f = 26900 * exp(0.76 * logT - (-171.093666373605) * invT);
  dlnkfdT = 0.76 * invT + (-171.093666373605) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[33] -= q; // c2h5cho
  wdot[34] += q; // c2h5co
  // d()/d[oh]
  dqdci = +k_f * sc[33];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[389] -= dqdci; // dwdot[c2h5cho]/d[oh]
  J[390] += dqdci; // dwdot[c2h5co]/d[oh]
  // d()/d[c2h5cho]
  dqdci = +k_f * sc[4];
  J[2941] -= dqdci; // dwdot[oh]/d[c2h5cho]
  J[2942] += dqdci; // dwdot[h2o]/d[c2h5cho]
  J[2970] -= dqdci; // dwdot[c2h5cho]/d[c2h5cho]
  J[2971] += dqdci; // dwdot[c2h5co]/d[c2h5cho]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7865] -= dqdT; // dwdot[c2h5cho]/dT
  J[7866] += dqdT; // dwdot[c2h5co]/dT

  // reaction 266: c2h5co + h2o => c2h5cho + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[34];
  k_f = 17050 * exp(0.76 * logT - (15700.3599731073) * invT);
  dlnkfdT = 0.76 * invT + (15700.3599731073) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[33] += q; // c2h5cho
  wdot[34] -= q; // c2h5co
  // d()/d[h2o]
  dqdci = +k_f * sc[34];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[478] += dqdci; // dwdot[c2h5cho]/d[h2o]
  J[479] -= dqdci; // dwdot[c2h5co]/d[h2o]
  // d()/d[c2h5co]
  dqdci = +k_f * sc[5];
  J[3030] += dqdci; // dwdot[oh]/d[c2h5co]
  J[3031] -= dqdci; // dwdot[h2o]/d[c2h5co]
  J[3059] += dqdci; // dwdot[c2h5cho]/d[c2h5co]
  J[3060] -= dqdci; // dwdot[c2h5co]/d[c2h5co]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7865] += dqdT; // dwdot[c2h5cho]/dT
  J[7866] -= dqdT; // dwdot[c2h5co]/dT

  // reaction 267: c2h5cho + ch3 => c2h5co + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[33];
  k_f = 2.608 * exp(1.78 * logT - (2974.5137115717) * invT);
  dlnkfdT = 1.78 * invT + (2974.5137115717) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[33] -= q; // c2h5cho
  wdot[34] += q; // c2h5co
  // d()/d[ch3]
  dqdci = +k_f * sc[33];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[834] -= dqdci; // dwdot[c2h5cho]/d[ch3]
  J[835] += dqdci; // dwdot[c2h5co]/d[ch3]
  // d()/d[c2h5cho]
  dqdci = +k_f * sc[9];
  J[2946] -= dqdci; // dwdot[ch3]/d[c2h5cho]
  J[2947] += dqdci; // dwdot[ch4]/d[c2h5cho]
  J[2970] -= dqdci; // dwdot[c2h5cho]/d[c2h5cho]
  J[2971] += dqdci; // dwdot[c2h5co]/d[c2h5cho]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7865] -= dqdT; // dwdot[c2h5cho]/dT
  J[7866] += dqdT; // dwdot[c2h5co]/dT

  // reaction 268: c2h5co + ch4 => c2h5cho + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[34];
  k_f = 9.972 * exp(1.78 * logT - (11463.2756470315) * invT);
  dlnkfdT = 1.78 * invT + (11463.2756470315) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[33] += q; // c2h5cho
  wdot[34] -= q; // c2h5co
  // d()/d[ch4]
  dqdci = +k_f * sc[34];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[923] += dqdci; // dwdot[c2h5cho]/d[ch4]
  J[924] -= dqdci; // dwdot[c2h5co]/d[ch4]
  // d()/d[c2h5co]
  dqdci = +k_f * sc[10];
  J[3035] += dqdci; // dwdot[ch3]/d[c2h5co]
  J[3036] -= dqdci; // dwdot[ch4]/d[c2h5co]
  J[3059] += dqdci; // dwdot[c2h5cho]/d[c2h5co]
  J[3060] -= dqdci; // dwdot[c2h5co]/d[c2h5co]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7865] += dqdT; // dwdot[c2h5cho]/dT
  J[7866] -= dqdT; // dwdot[c2h5co]/dT

  // reaction 269: c2h5cho + ho2 => c2h5co + h2o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[33];
  k_f = 2800000 * exp(-(6843.74665494419) * invT);
  dlnkfdT = (6843.74665494419) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  wdot[33] -= q; // c2h5cho
  wdot[34] += q; // c2h5co
  // d()/d[ho2]
  dqdci = +k_f * sc[33];
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[991] += dqdci;  // dwdot[h2o2]/d[ho2]
  J[1012] -= dqdci; // dwdot[c2h5cho]/d[ho2]
  J[1013] += dqdci; // dwdot[c2h5co]/d[ho2]
  // d()/d[c2h5cho]
  dqdci = +k_f * sc[11];
  J[2948] -= dqdci; // dwdot[ho2]/d[c2h5cho]
  J[2949] += dqdci; // dwdot[h2o2]/d[c2h5cho]
  J[2970] -= dqdci; // dwdot[c2h5cho]/d[c2h5cho]
  J[2971] += dqdci; // dwdot[c2h5co]/d[c2h5cho]
  // d()/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT
  J[7865] -= dqdT; // dwdot[c2h5cho]/dT
  J[7866] += dqdT; // dwdot[c2h5co]/dT

  // reaction 270: c2h5co + h2o2 => c2h5cho + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[34];
  k_f = 10530000 * exp(-0.33 * logT - (6884.00398820857) * invT);
  dlnkfdT = -0.33 * invT + (6884.00398820857) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // ho2
  wdot[12] -= q; // h2o2
  wdot[33] += q; // c2h5cho
  wdot[34] -= q; // c2h5co
  // d()/d[h2o2]
  dqdci = +k_f * sc[34];
  J[1079] += dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci; // dwdot[h2o2]/d[h2o2]
  J[1101] += dqdci; // dwdot[c2h5cho]/d[h2o2]
  J[1102] -= dqdci; // dwdot[c2h5co]/d[h2o2]
  // d()/d[c2h5co]
  dqdci = +k_f * sc[12];
  J[3037] += dqdci; // dwdot[ho2]/d[c2h5co]
  J[3038] -= dqdci; // dwdot[h2o2]/d[c2h5co]
  J[3059] += dqdci; // dwdot[c2h5cho]/d[c2h5co]
  J[3060] -= dqdci; // dwdot[c2h5co]/d[c2h5co]
  // d()/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT; // dwdot[h2o2]/dT
  J[7865] += dqdT; // dwdot[c2h5cho]/dT
  J[7866] -= dqdT; // dwdot[c2h5co]/dT

  // reaction 271: c2h5 + c2h5cho => c2h5co + c2h6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[33];
  k_f = 1000000 * exp(-(4025.73332643776) * invT);
  dlnkfdT = (4025.73332643776) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[15] += q; // c2h6
  wdot[17] -= q; // c2h5
  wdot[33] -= q; // c2h5cho
  wdot[34] += q; // c2h5co
  // d()/d[c2h5]
  dqdci = +k_f * sc[33];
  J[1528] += dqdci; // dwdot[c2h6]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1546] -= dqdci; // dwdot[c2h5cho]/d[c2h5]
  J[1547] += dqdci; // dwdot[c2h5co]/d[c2h5]
  // d()/d[c2h5cho]
  dqdci = +k_f * sc[17];
  J[2952] += dqdci; // dwdot[c2h6]/d[c2h5cho]
  J[2954] -= dqdci; // dwdot[c2h5]/d[c2h5cho]
  J[2970] -= dqdci; // dwdot[c2h5cho]/d[c2h5cho]
  J[2971] += dqdci; // dwdot[c2h5co]/d[c2h5cho]
  // d()/dT
  J[7847] += dqdT; // dwdot[c2h6]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7865] -= dqdT; // dwdot[c2h5cho]/dT
  J[7866] += dqdT; // dwdot[c2h5co]/dT

  // reaction 272: c2h5co + c2h6 => c2h5 + c2h5cho
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[34];
  k_f = 598400000 * exp(-0.57 * logT - (10416.5849821577) * invT);
  dlnkfdT = -0.57 * invT + (10416.5849821577) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[15] -= q; // c2h6
  wdot[17] += q; // c2h5
  wdot[33] += q; // c2h5cho
  wdot[34] -= q; // c2h5co
  // d()/d[c2h6]
  dqdci = +k_f * sc[34];
  J[1350] -= dqdci; // dwdot[c2h6]/d[c2h6]
  J[1352] += dqdci; // dwdot[c2h5]/d[c2h6]
  J[1368] += dqdci; // dwdot[c2h5cho]/d[c2h6]
  J[1369] -= dqdci; // dwdot[c2h5co]/d[c2h6]
  // d()/d[c2h5co]
  dqdci = +k_f * sc[15];
  J[3041] -= dqdci; // dwdot[c2h6]/d[c2h5co]
  J[3043] += dqdci; // dwdot[c2h5]/d[c2h5co]
  J[3059] += dqdci; // dwdot[c2h5cho]/d[c2h5co]
  J[3060] -= dqdci; // dwdot[c2h5co]/d[c2h5co]
  // d()/dT
  J[7847] -= dqdT; // dwdot[c2h6]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7865] += dqdT; // dwdot[c2h5cho]/dT
  J[7866] -= dqdT; // dwdot[c2h5co]/dT

  // reaction 273: c2h5cho => c2h5 + hco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[33];
  k_f = 9.85e+18 * exp(-0.73 * logT - (41117.8337629036) * invT);
  dlnkfdT = -0.73 * invT + (41117.8337629036) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[7] += q;  // hco
  wdot[17] += q; // c2h5
  wdot[33] -= q; // c2h5cho
  // d()/d[c2h5cho]
  dqdci = +k_f;
  J[2944] += dqdci; // dwdot[hco]/d[c2h5cho]
  J[2954] += dqdci; // dwdot[c2h5]/d[c2h5cho]
  J[2970] -= dqdci; // dwdot[c2h5cho]/d[c2h5cho]
  // d()/dT
  J[7839] += dqdT; // dwdot[hco]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7865] -= dqdT; // dwdot[c2h5cho]/dT

  // reaction 274: c2h5 + hco => c2h5cho
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[17];
  k_f = 18100000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[7] -= q;  // hco
  wdot[17] -= q; // c2h5
  wdot[33] += q; // c2h5cho
  // d()/d[hco]
  dqdci = +k_f * sc[17];
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  J[640] -= dqdci; // dwdot[c2h5]/d[hco]
  J[656] += dqdci; // dwdot[c2h5cho]/d[hco]
  // d()/d[c2h5]
  dqdci = +k_f * sc[7];
  J[1520] -= dqdci; // dwdot[hco]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1546] += dqdci; // dwdot[c2h5cho]/d[c2h5]
  // d()/dT
  J[7839] -= dqdT; // dwdot[hco]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7865] += dqdT; // dwdot[c2h5cho]/dT

  // reaction 275: c2h5cho + o2 => c2h5co + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[33];
  k_f = 10050000 * exp(-(20480.9182982521) * invT);
  dlnkfdT = (20480.9182982521) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[33] -= q; // c2h5cho
  wdot[34] += q; // c2h5co
  // d()/d[o2]
  dqdci = +k_f * sc[33];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[300] -= dqdci; // dwdot[c2h5cho]/d[o2]
  J[301] += dqdci; // dwdot[c2h5co]/d[o2]
  // d()/d[c2h5cho]
  dqdci = +k_f * sc[3];
  J[2940] -= dqdci; // dwdot[o2]/d[c2h5cho]
  J[2948] += dqdci; // dwdot[ho2]/d[c2h5cho]
  J[2970] -= dqdci; // dwdot[c2h5cho]/d[c2h5cho]
  J[2971] += dqdci; // dwdot[c2h5co]/d[c2h5cho]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7865] -= dqdT; // dwdot[c2h5cho]/dT
  J[7866] += dqdT; // dwdot[c2h5co]/dT

  // reaction 276: c2h5co + ho2 => c2h5cho + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[34];
  k_f = 26720 * exp(0.33 * logT - (-199.273799658669) * invT);
  dlnkfdT = 0.33 * invT + (-199.273799658669) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[33] += q; // c2h5cho
  wdot[34] -= q; // c2h5co
  // d()/d[ho2]
  dqdci = +k_f * sc[34];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1012] += dqdci; // dwdot[c2h5cho]/d[ho2]
  J[1013] -= dqdci; // dwdot[c2h5co]/d[ho2]
  // d()/d[c2h5co]
  dqdci = +k_f * sc[11];
  J[3029] += dqdci; // dwdot[o2]/d[c2h5co]
  J[3037] -= dqdci; // dwdot[ho2]/d[c2h5co]
  J[3059] += dqdci; // dwdot[c2h5cho]/d[c2h5co]
  J[3060] -= dqdci; // dwdot[c2h5co]/d[c2h5co]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7865] += dqdT; // dwdot[c2h5cho]/dT
  J[7866] -= dqdT; // dwdot[c2h5co]/dT

  // reaction 277: c2h3 + c2h5cho => c2h4 + c2h5co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[33];
  k_f = 1700000 * exp(-(4247.14865939183) * invT);
  dlnkfdT = (4247.14865939183) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] += q; // c2h4
  wdot[19] -= q; // c2h3
  wdot[33] -= q; // c2h5cho
  wdot[34] += q; // c2h5co
  // d()/d[c2h3]
  dqdci = +k_f * sc[33];
  J[1707] += dqdci; // dwdot[c2h4]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  J[1724] -= dqdci; // dwdot[c2h5cho]/d[c2h3]
  J[1725] += dqdci; // dwdot[c2h5co]/d[c2h3]
  // d()/d[c2h5cho]
  dqdci = +k_f * sc[19];
  J[2953] += dqdci; // dwdot[c2h4]/d[c2h5cho]
  J[2956] -= dqdci; // dwdot[c2h3]/d[c2h5cho]
  J[2970] -= dqdci; // dwdot[c2h5cho]/d[c2h5cho]
  J[2971] += dqdci; // dwdot[c2h5co]/d[c2h5cho]
  // d()/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT
  J[7865] -= dqdT; // dwdot[c2h5cho]/dT
  J[7866] += dqdT; // dwdot[c2h5co]/dT

  // reaction 278: c2h4 + c2h5co => c2h3 + c2h5cho
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[34];
  k_f = 3661 * exp(0.83 * logT - (12167.7789791581) * invT);
  dlnkfdT = 0.83 * invT + (12167.7789791581) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] -= q; // c2h4
  wdot[19] += q; // c2h3
  wdot[33] += q; // c2h5cho
  wdot[34] -= q; // c2h5co
  // d()/d[c2h4]
  dqdci = +k_f * sc[34];
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1443] += dqdci; // dwdot[c2h3]/d[c2h4]
  J[1457] += dqdci; // dwdot[c2h5cho]/d[c2h4]
  J[1458] -= dqdci; // dwdot[c2h5co]/d[c2h4]
  // d()/d[c2h5co]
  dqdci = +k_f * sc[16];
  J[3042] -= dqdci; // dwdot[c2h4]/d[c2h5co]
  J[3045] += dqdci; // dwdot[c2h3]/d[c2h5co]
  J[3059] += dqdci; // dwdot[c2h5cho]/d[c2h5co]
  J[3060] -= dqdci; // dwdot[c2h5co]/d[c2h5co]
  // d()/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT
  J[7865] += dqdT; // dwdot[c2h5cho]/dT
  J[7866] -= dqdT; // dwdot[c2h5co]/dT

  // reaction 279: c2h5cho + c3h5-a => c2h5co + c3h6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[33] * sc[47];
  k_f = 1700000 * exp(-(4247.14865939183) * invT);
  dlnkfdT = (4247.14865939183) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[26] += q; // c3h6
  wdot[33] -= q; // c2h5cho
  wdot[34] += q; // c2h5co
  wdot[47] -= q; // c3h5-a
  // d()/d[c2h5cho]
  dqdci = +k_f * sc[47];
  J[2963] += dqdci; // dwdot[c3h6]/d[c2h5cho]
  J[2970] -= dqdci; // dwdot[c2h5cho]/d[c2h5cho]
  J[2971] += dqdci; // dwdot[c2h5co]/d[c2h5cho]
  J[2984] -= dqdci; // dwdot[c3h5-a]/d[c2h5cho]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[33];
  J[4209] += dqdci; // dwdot[c3h6]/d[c3h5-a]
  J[4216] -= dqdci; // dwdot[c2h5cho]/d[c3h5-a]
  J[4217] += dqdci; // dwdot[c2h5co]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7865] -= dqdT; // dwdot[c2h5cho]/dT
  J[7866] += dqdT; // dwdot[c2h5co]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 280: c2h5co + c3h6 => c2h5cho + c3h5-a
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[26] * sc[34];
  k_f = 10000000 * exp(-(14090.0666425322) * invT);
  dlnkfdT = (14090.0666425322) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[26] -= q; // c3h6
  wdot[33] += q; // c2h5cho
  wdot[34] -= q; // c2h5co
  wdot[47] += q; // c3h5-a
  // d()/d[c3h6]
  dqdci = +k_f * sc[34];
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  J[2347] += dqdci; // dwdot[c2h5cho]/d[c3h6]
  J[2348] -= dqdci; // dwdot[c2h5co]/d[c3h6]
  J[2361] += dqdci; // dwdot[c3h5-a]/d[c3h6]
  // d()/d[c2h5co]
  dqdci = +k_f * sc[26];
  J[3052] -= dqdci; // dwdot[c3h6]/d[c2h5co]
  J[3059] += dqdci; // dwdot[c2h5cho]/d[c2h5co]
  J[3060] -= dqdci; // dwdot[c2h5co]/d[c2h5co]
  J[3073] += dqdci; // dwdot[c3h5-a]/d[c2h5co]
  // d()/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT
  J[7865] += dqdT; // dwdot[c2h5cho]/dT
  J[7866] -= dqdT; // dwdot[c2h5co]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 281: c5h10-1 => c2h5 + c3h5-a
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[36];
  k_f = 9.173e+20 * exp(-1.63 * logT - (37233.0011028912) * invT);
  dlnkfdT = -1.63 * invT + (37233.0011028912) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[17] += q; // c2h5
  wdot[36] -= q; // c5h10-1
  wdot[47] += q; // c3h5-a
  // d()/d[c5h10-1]
  dqdci = +k_f;
  J[3221] += dqdci; // dwdot[c2h5]/d[c5h10-1]
  J[3240] -= dqdci; // dwdot[c5h10-1]/d[c5h10-1]
  J[3251] += dqdci; // dwdot[c3h5-a]/d[c5h10-1]
  // d()/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7868] -= dqdT; // dwdot[c5h10-1]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 282: c2h5 + c3h5-a => c5h10-1
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[47];
  k_f = 4000000 * exp(-(-299.917132819613) * invT);
  dlnkfdT = (-299.917132819613) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[17] -= q; // c2h5
  wdot[36] += q; // c5h10-1
  wdot[47] -= q; // c3h5-a
  // d()/d[c2h5]
  dqdci = +k_f * sc[47];
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1549] += dqdci; // dwdot[c5h10-1]/d[c2h5]
  J[1560] -= dqdci; // dwdot[c3h5-a]/d[c2h5]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[17];
  J[4200] -= dqdci; // dwdot[c2h5]/d[c3h5-a]
  J[4219] += dqdci; // dwdot[c5h10-1]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7868] += dqdT; // dwdot[c5h10-1]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 283: c5h10-1 + h => c5h9 + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[36];
  k_f = 28000000 * exp(-(2012.86666321888) * invT);
  dlnkfdT = (2012.86666321888) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[35] += q; // c5h9
  wdot[36] -= q; // c5h10-1
  // d()/d[h]
  dqdci = +k_f * sc[36];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[35] += dqdci; // dwdot[c5h9]/d[h]
  J[36] -= dqdci; // dwdot[c5h10-1]/d[h]
  // d()/d[c5h10-1]
  dqdci = +k_f * sc[0];
  J[3204] -= dqdci; // dwdot[h]/d[c5h10-1]
  J[3205] += dqdci; // dwdot[h2]/d[c5h10-1]
  J[3239] += dqdci; // dwdot[c5h9]/d[c5h10-1]
  J[3240] -= dqdci; // dwdot[c5h10-1]/d[c5h10-1]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7867] += dqdT; // dwdot[c5h9]/dT
  J[7868] -= dqdT; // dwdot[c5h10-1]/dT

  // reaction 284: c5h9 + h2 => c5h10-1 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[35];
  k_f = 1000000 * exp(-(7045.03332126608) * invT);
  dlnkfdT = (7045.03332126608) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[35] -= q; // c5h9
  wdot[36] += q; // c5h10-1
  // d()/d[h2]
  dqdci = +k_f * sc[35];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[124] -= dqdci; // dwdot[c5h9]/d[h2]
  J[125] += dqdci; // dwdot[c5h10-1]/d[h2]
  // d()/d[c5h9]
  dqdci = +k_f * sc[1];
  J[3115] += dqdci; // dwdot[h]/d[c5h9]
  J[3116] -= dqdci; // dwdot[h2]/d[c5h9]
  J[3150] -= dqdci; // dwdot[c5h9]/d[c5h9]
  J[3151] += dqdci; // dwdot[c5h10-1]/d[c5h9]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7867] -= dqdT; // dwdot[c5h9]/dT
  J[7868] += dqdT; // dwdot[c5h10-1]/dT

  // reaction 285: c5h10-1 + o => c5h9 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[36];
  k_f = 0.254 * exp(2.56 * logT - (-568.634832359333) * invT);
  dlnkfdT = 2.56 * invT + (-568.634832359333) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[4] += q;  // oh
  wdot[35] += q; // c5h9
  wdot[36] -= q; // c5h10-1
  // d()/d[o]
  dqdci = +k_f * sc[36];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[182] += dqdci; // dwdot[oh]/d[o]
  J[213] += dqdci; // dwdot[c5h9]/d[o]
  J[214] -= dqdci; // dwdot[c5h10-1]/d[o]
  // d()/d[c5h10-1]
  dqdci = +k_f * sc[2];
  J[3206] -= dqdci; // dwdot[o]/d[c5h10-1]
  J[3208] += dqdci; // dwdot[oh]/d[c5h10-1]
  J[3239] += dqdci; // dwdot[c5h9]/d[c5h10-1]
  J[3240] -= dqdci; // dwdot[c5h10-1]/d[c5h10-1]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7867] += dqdT; // dwdot[c5h9]/dT
  J[7868] -= dqdT; // dwdot[c5h10-1]/dT

  // reaction 286: c5h9 + oh => c5h10-1 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[35];
  k_f = 700000 * exp(-(15046.1783075611) * invT);
  dlnkfdT = (15046.1783075611) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[4] -= q;  // oh
  wdot[35] -= q; // c5h9
  wdot[36] += q; // c5h10-1
  // d()/d[oh]
  dqdci = +k_f * sc[35];
  J[358] += dqdci; // dwdot[o]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[391] -= dqdci; // dwdot[c5h9]/d[oh]
  J[392] += dqdci; // dwdot[c5h10-1]/d[oh]
  // d()/d[c5h9]
  dqdci = +k_f * sc[4];
  J[3117] += dqdci; // dwdot[o]/d[c5h9]
  J[3119] -= dqdci; // dwdot[oh]/d[c5h9]
  J[3150] -= dqdci; // dwdot[c5h9]/d[c5h9]
  J[3151] += dqdci; // dwdot[c5h10-1]/d[c5h9]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7867] -= dqdT; // dwdot[c5h9]/dT
  J[7868] += dqdT; // dwdot[c5h10-1]/dT

  // reaction 287: c5h10-1 + o => hco + pc4h9
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[36];
  k_f = 100000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[7] += q;  // hco
  wdot[31] += q; // pc4h9
  wdot[36] -= q; // c5h10-1
  // d()/d[o]
  dqdci = +k_f * sc[36];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[185] += dqdci; // dwdot[hco]/d[o]
  J[209] += dqdci; // dwdot[pc4h9]/d[o]
  J[214] -= dqdci; // dwdot[c5h10-1]/d[o]
  // d()/d[c5h10-1]
  dqdci = +k_f * sc[2];
  J[3206] -= dqdci; // dwdot[o]/d[c5h10-1]
  J[3211] += dqdci; // dwdot[hco]/d[c5h10-1]
  J[3235] += dqdci; // dwdot[pc4h9]/d[c5h10-1]
  J[3240] -= dqdci; // dwdot[c5h10-1]/d[c5h10-1]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7839] += dqdT; // dwdot[hco]/dT
  J[7863] += dqdT; // dwdot[pc4h9]/dT
  J[7868] -= dqdT; // dwdot[c5h10-1]/dT

  // reaction 288: c5h10-1 + o => ch3co + nc3h7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[36];
  k_f = 100000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[22] += q; // ch3co
  wdot[28] += q; // nc3h7
  wdot[36] -= q; // c5h10-1
  // d()/d[o]
  dqdci = +k_f * sc[36];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[200] += dqdci; // dwdot[ch3co]/d[o]
  J[206] += dqdci; // dwdot[nc3h7]/d[o]
  J[214] -= dqdci; // dwdot[c5h10-1]/d[o]
  // d()/d[c5h10-1]
  dqdci = +k_f * sc[2];
  J[3206] -= dqdci; // dwdot[o]/d[c5h10-1]
  J[3226] += dqdci; // dwdot[ch3co]/d[c5h10-1]
  J[3232] += dqdci; // dwdot[nc3h7]/d[c5h10-1]
  J[3240] -= dqdci; // dwdot[c5h10-1]/d[c5h10-1]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7854] += dqdT; // dwdot[ch3co]/dT
  J[7860] += dqdT; // dwdot[nc3h7]/dT
  J[7868] -= dqdT; // dwdot[c5h10-1]/dT

  // reaction 289: c5h10-1 + oh => c5h9 + h2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[36];
  k_f = 5.12 * exp(2 * logT - (-149.958566409806) * invT);
  dlnkfdT = 2 * invT + (-149.958566409806) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[35] += q; // c5h9
  wdot[36] -= q; // c5h10-1
  // d()/d[oh]
  dqdci = +k_f * sc[36];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[391] += dqdci; // dwdot[c5h9]/d[oh]
  J[392] -= dqdci; // dwdot[c5h10-1]/d[oh]
  // d()/d[c5h10-1]
  dqdci = +k_f * sc[4];
  J[3208] -= dqdci; // dwdot[oh]/d[c5h10-1]
  J[3209] += dqdci; // dwdot[h2o]/d[c5h10-1]
  J[3239] += dqdci; // dwdot[c5h9]/d[c5h10-1]
  J[3240] -= dqdci; // dwdot[c5h10-1]/d[c5h10-1]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7867] += dqdT; // dwdot[c5h9]/dT
  J[7868] -= dqdT; // dwdot[c5h10-1]/dT

  // reaction 290: c5h9 + h2o => c5h10-1 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[35];
  k_f = 20.6 * exp(2.16 * logT - (17597.486803191) * invT);
  dlnkfdT = 2.16 * invT + (17597.486803191) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[35] -= q; // c5h9
  wdot[36] += q; // c5h10-1
  // d()/d[h2o]
  dqdci = +k_f * sc[35];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[480] -= dqdci; // dwdot[c5h9]/d[h2o]
  J[481] += dqdci; // dwdot[c5h10-1]/d[h2o]
  // d()/d[c5h9]
  dqdci = +k_f * sc[5];
  J[3119] += dqdci; // dwdot[oh]/d[c5h9]
  J[3120] -= dqdci; // dwdot[h2o]/d[c5h9]
  J[3150] -= dqdci; // dwdot[c5h9]/d[c5h9]
  J[3151] += dqdci; // dwdot[c5h10-1]/d[c5h9]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7867] -= dqdT; // dwdot[c5h9]/dT
  J[7868] += dqdT; // dwdot[c5h10-1]/dT

  // reaction 291: c5h10-1 + oh => ch2o + pc4h9
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[36];
  k_f = 100000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[13] += q; // ch2o
  wdot[31] += q; // pc4h9
  wdot[36] -= q; // c5h10-1
  // d()/d[oh]
  dqdci = +k_f * sc[36];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[369] += dqdci; // dwdot[ch2o]/d[oh]
  J[387] += dqdci; // dwdot[pc4h9]/d[oh]
  J[392] -= dqdci; // dwdot[c5h10-1]/d[oh]
  // d()/d[c5h10-1]
  dqdci = +k_f * sc[4];
  J[3208] -= dqdci; // dwdot[oh]/d[c5h10-1]
  J[3217] += dqdci; // dwdot[ch2o]/d[c5h10-1]
  J[3235] += dqdci; // dwdot[pc4h9]/d[c5h10-1]
  J[3240] -= dqdci; // dwdot[c5h10-1]/d[c5h10-1]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT
  J[7863] += dqdT; // dwdot[pc4h9]/dT
  J[7868] -= dqdT; // dwdot[c5h10-1]/dT

  // reaction 292: c5h10-1 + oh => ch3cho + nc3h7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[36];
  k_f = 100000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[24] += q; // ch3cho
  wdot[28] += q; // nc3h7
  wdot[36] -= q; // c5h10-1
  // d()/d[oh]
  dqdci = +k_f * sc[36];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[380] += dqdci; // dwdot[ch3cho]/d[oh]
  J[384] += dqdci; // dwdot[nc3h7]/d[oh]
  J[392] -= dqdci; // dwdot[c5h10-1]/d[oh]
  // d()/d[c5h10-1]
  dqdci = +k_f * sc[4];
  J[3208] -= dqdci; // dwdot[oh]/d[c5h10-1]
  J[3228] += dqdci; // dwdot[ch3cho]/d[c5h10-1]
  J[3232] += dqdci; // dwdot[nc3h7]/d[c5h10-1]
  J[3240] -= dqdci; // dwdot[c5h10-1]/d[c5h10-1]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT
  J[7860] += dqdT; // dwdot[nc3h7]/dT
  J[7868] -= dqdT; // dwdot[c5h10-1]/dT

  // reaction 293: c5h10-1 + ch3 => c5h9 + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[36];
  k_f = 100000 * exp(-(3673.48166037445) * invT);
  dlnkfdT = (3673.48166037445) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[35] += q; // c5h9
  wdot[36] -= q; // c5h10-1
  // d()/d[ch3]
  dqdci = +k_f * sc[36];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[836] += dqdci; // dwdot[c5h9]/d[ch3]
  J[837] -= dqdci; // dwdot[c5h10-1]/d[ch3]
  // d()/d[c5h10-1]
  dqdci = +k_f * sc[9];
  J[3213] -= dqdci; // dwdot[ch3]/d[c5h10-1]
  J[3214] += dqdci; // dwdot[ch4]/d[c5h10-1]
  J[3239] += dqdci; // dwdot[c5h9]/d[c5h10-1]
  J[3240] -= dqdci; // dwdot[c5h10-1]/d[c5h10-1]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7867] += dqdT; // dwdot[c5h9]/dT
  J[7868] -= dqdT; // dwdot[c5h10-1]/dT

  // reaction 294: c5h9 + ch4 => c5h10-1 + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[35];
  k_f = 600000 * exp(-(9007.57831790448) * invT);
  dlnkfdT = (9007.57831790448) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[35] -= q; // c5h9
  wdot[36] += q; // c5h10-1
  // d()/d[ch4]
  dqdci = +k_f * sc[35];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[925] -= dqdci; // dwdot[c5h9]/d[ch4]
  J[926] += dqdci; // dwdot[c5h10-1]/d[ch4]
  // d()/d[c5h9]
  dqdci = +k_f * sc[10];
  J[3124] += dqdci; // dwdot[ch3]/d[c5h9]
  J[3125] -= dqdci; // dwdot[ch4]/d[c5h9]
  J[3150] -= dqdci; // dwdot[c5h9]/d[c5h9]
  J[3151] += dqdci; // dwdot[c5h10-1]/d[c5h9]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7867] -= dqdT; // dwdot[c5h9]/dT
  J[7868] += dqdT; // dwdot[c5h10-1]/dT

  // reaction 295: h + h2o2 => h2 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[12];
  k_f = 48200000 * exp(-(4000.57249314752) * invT);
  dlnkfdT = (4000.57249314752) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[11] += q; // ho2
  wdot[12] -= q; // h2o2
  // d()/d[h]
  dqdci = +k_f * sc[12];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[11] += dqdci; // dwdot[ho2]/d[h]
  J[12] -= dqdci; // dwdot[h2o2]/d[h]
  // d()/d[h2o2]
  dqdci = +k_f * sc[0];
  J[1068] -= dqdci; // dwdot[h]/d[h2o2]
  J[1069] += dqdci; // dwdot[h2]/d[h2o2]
  J[1079] += dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci; // dwdot[h2o2]/d[h2o2]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT; // dwdot[h2o2]/dT

  // reaction 296: h2 + ho2 => h + h2o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[11];
  k_f = 1875000 * exp(0.33 * logT - (12208.0363124225) * invT);
  dlnkfdT = 0.33 * invT + (12208.0363124225) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  // d()/d[h2]
  dqdci = +k_f * sc[11];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[100] -= dqdci; // dwdot[ho2]/d[h2]
  J[101] += dqdci; // dwdot[h2o2]/d[h2]
  // d()/d[ho2]
  dqdci = +k_f * sc[1];
  J[979] += dqdci; // dwdot[h]/d[ho2]
  J[980] -= dqdci; // dwdot[h2]/d[ho2]
  J[990] -= dqdci; // dwdot[ho2]/d[ho2]
  J[991] += dqdci; // dwdot[h2o2]/d[ho2]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT

  // reaction 297: hco + o => co2 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[7];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q; // h
  wdot[2] -= q; // o
  wdot[7] -= q; // hco
  wdot[8] += q; // co2
  // d()/d[o]
  dqdci = +k_f * sc[7];
  J[178] += dqdci; // dwdot[h]/d[o]
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[185] -= dqdci; // dwdot[hco]/d[o]
  J[186] += dqdci; // dwdot[co2]/d[o]
  // d()/d[hco]
  dqdci = +k_f * sc[2];
  J[623] += dqdci; // dwdot[h]/d[hco]
  J[625] -= dqdci; // dwdot[o]/d[hco]
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  J[631] += dqdci; // dwdot[co2]/d[hco]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7839] -= dqdT; // dwdot[hco]/dT
  J[7840] += dqdT; // dwdot[co2]/dT

  // reaction 298: co2 + h => hco + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[8];
  k_f = 9677000000 * exp(-(55454.4765716801) * invT);
  dlnkfdT = (55454.4765716801) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q; // h
  wdot[2] += q; // o
  wdot[7] += q; // hco
  wdot[8] -= q; // co2
  // d()/d[h]
  dqdci = +k_f * sc[8];
  J[0] -= dqdci; // dwdot[h]/d[h]
  J[2] += dqdci; // dwdot[o]/d[h]
  J[7] += dqdci; // dwdot[hco]/d[h]
  J[8] -= dqdci; // dwdot[co2]/d[h]
  // d()/d[co2]
  dqdci = +k_f * sc[0];
  J[712] -= dqdci; // dwdot[h]/d[co2]
  J[714] += dqdci; // dwdot[o]/d[co2]
  J[719] += dqdci; // dwdot[hco]/d[co2]
  J[720] -= dqdci; // dwdot[co2]/d[co2]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7839] += dqdT; // dwdot[hco]/dT
  J[7840] -= dqdT; // dwdot[co2]/dT

  // reaction 299: ch3co + h => ch2co + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[22];
  k_f = 20000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[20] += q; // ch2co
  wdot[22] -= q; // ch3co
  // d()/d[h]
  dqdci = +k_f * sc[22];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[20] += dqdci; // dwdot[ch2co]/d[h]
  J[22] -= dqdci; // dwdot[ch3co]/d[h]
  // d()/d[ch3co]
  dqdci = +k_f * sc[0];
  J[1958] -= dqdci; // dwdot[h]/d[ch3co]
  J[1959] += dqdci; // dwdot[h2]/d[ch3co]
  J[1978] += dqdci; // dwdot[ch2co]/d[ch3co]
  J[1980] -= dqdci; // dwdot[ch3co]/d[ch3co]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7852] += dqdT; // dwdot[ch2co]/dT
  J[7854] -= dqdT; // dwdot[ch3co]/dT

  // reaction 300: ch2co + h2 => ch3co + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[20];
  k_f = 562600000000 * exp(-1.13 * logT - (32054.9016117606) * invT);
  dlnkfdT = -1.13 * invT + (32054.9016117606) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[20] -= q; // ch2co
  wdot[22] += q; // ch3co
  // d()/d[h2]
  dqdci = +k_f * sc[20];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[109] -= dqdci; // dwdot[ch2co]/d[h2]
  J[111] += dqdci; // dwdot[ch3co]/d[h2]
  // d()/d[ch2co]
  dqdci = +k_f * sc[1];
  J[1780] += dqdci; // dwdot[h]/d[ch2co]
  J[1781] -= dqdci; // dwdot[h2]/d[ch2co]
  J[1800] -= dqdci; // dwdot[ch2co]/d[ch2co]
  J[1802] += dqdci; // dwdot[ch3co]/d[ch2co]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7852] -= dqdT; // dwdot[ch2co]/dT
  J[7854] += dqdT; // dwdot[ch3co]/dT

  // reaction 301: ch3co + o => ch2co + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[22];
  k_f = 20000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[4] += q;  // oh
  wdot[20] += q; // ch2co
  wdot[22] -= q; // ch3co
  // d()/d[o]
  dqdci = +k_f * sc[22];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[182] += dqdci; // dwdot[oh]/d[o]
  J[198] += dqdci; // dwdot[ch2co]/d[o]
  J[200] -= dqdci; // dwdot[ch3co]/d[o]
  // d()/d[ch3co]
  dqdci = +k_f * sc[2];
  J[1960] -= dqdci; // dwdot[o]/d[ch3co]
  J[1962] += dqdci; // dwdot[oh]/d[ch3co]
  J[1978] += dqdci; // dwdot[ch2co]/d[ch3co]
  J[1980] -= dqdci; // dwdot[ch3co]/d[ch3co]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7852] += dqdT; // dwdot[ch2co]/dT
  J[7854] -= dqdT; // dwdot[ch3co]/dT

  // reaction 302: ch2co + oh => ch3co + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[20];
  k_f = 5951000000000 * exp(-1.13 * logT - (60738.2515626297) * invT);
  dlnkfdT = -1.13 * invT + (60738.2515626297) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[4] -= q;  // oh
  wdot[20] -= q; // ch2co
  wdot[22] += q; // ch3co
  // d()/d[oh]
  dqdci = +k_f * sc[20];
  J[358] += dqdci; // dwdot[o]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[376] -= dqdci; // dwdot[ch2co]/d[oh]
  J[378] += dqdci; // dwdot[ch3co]/d[oh]
  // d()/d[ch2co]
  dqdci = +k_f * sc[4];
  J[1782] += dqdci; // dwdot[o]/d[ch2co]
  J[1784] -= dqdci; // dwdot[oh]/d[ch2co]
  J[1800] -= dqdci; // dwdot[ch2co]/d[ch2co]
  J[1802] += dqdci; // dwdot[ch3co]/d[ch2co]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7852] -= dqdT; // dwdot[ch2co]/dT
  J[7854] += dqdT; // dwdot[ch3co]/dT

  // reaction 303: ch3 + ch3co => ch2co + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[22];
  k_f = 50000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[20] += q; // ch2co
  wdot[22] -= q; // ch3co
  // d()/d[ch3]
  dqdci = +k_f * sc[22];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[821] += dqdci; // dwdot[ch2co]/d[ch3]
  J[823] -= dqdci; // dwdot[ch3co]/d[ch3]
  // d()/d[ch3co]
  dqdci = +k_f * sc[9];
  J[1967] -= dqdci; // dwdot[ch3]/d[ch3co]
  J[1968] += dqdci; // dwdot[ch4]/d[ch3co]
  J[1978] += dqdci; // dwdot[ch2co]/d[ch3co]
  J[1980] -= dqdci; // dwdot[ch3co]/d[ch3co]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7852] += dqdT; // dwdot[ch2co]/dT
  J[7854] -= dqdT; // dwdot[ch3co]/dT

  // reaction 304: ch2co + ch4 => ch3 + ch3co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[20];
  k_f = 819700000000 * exp(-0.67 * logT - (40171.7864311908) * invT);
  dlnkfdT = -0.67 * invT + (40171.7864311908) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[20] -= q; // ch2co
  wdot[22] += q; // ch3co
  // d()/d[ch4]
  dqdci = +k_f * sc[20];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[910] -= dqdci; // dwdot[ch2co]/d[ch4]
  J[912] += dqdci; // dwdot[ch3co]/d[ch4]
  // d()/d[ch2co]
  dqdci = +k_f * sc[10];
  J[1789] += dqdci; // dwdot[ch3]/d[ch2co]
  J[1790] -= dqdci; // dwdot[ch4]/d[ch2co]
  J[1800] -= dqdci; // dwdot[ch2co]/d[ch2co]
  J[1802] += dqdci; // dwdot[ch3co]/d[ch2co]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7852] -= dqdT; // dwdot[ch2co]/dT
  J[7854] += dqdT; // dwdot[ch3co]/dT

  // reaction 305: c2h4 + o => ch2cho + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[16];
  k_f = 3.39 * exp(1.88 * logT - (90.0757831790448) * invT);
  dlnkfdT = 1.88 * invT + (90.0757831790448) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[2] -= q;  // o
  wdot[16] -= q; // c2h4
  wdot[23] += q; // ch2cho
  // d()/d[o]
  dqdci = +k_f * sc[16];
  J[178] += dqdci; // dwdot[h]/d[o]
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[194] -= dqdci; // dwdot[c2h4]/d[o]
  J[201] += dqdci; // dwdot[ch2cho]/d[o]
  // d()/d[c2h4]
  dqdci = +k_f * sc[2];
  J[1424] += dqdci; // dwdot[h]/d[c2h4]
  J[1426] -= dqdci; // dwdot[o]/d[c2h4]
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1447] += dqdci; // dwdot[ch2cho]/d[c2h4]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7855] += dqdT; // dwdot[ch2cho]/dT

  // reaction 306: ch2cho + h => c2h4 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[23];
  k_f = 9.481 * exp(1.79 * logT - (8076.62748616575) * invT);
  dlnkfdT = 1.79 * invT + (8076.62748616575) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[2] += q;  // o
  wdot[16] += q; // c2h4
  wdot[23] -= q; // ch2cho
  // d()/d[h]
  dqdci = +k_f * sc[23];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[2] += dqdci;  // dwdot[o]/d[h]
  J[16] += dqdci; // dwdot[c2h4]/d[h]
  J[23] -= dqdci; // dwdot[ch2cho]/d[h]
  // d()/d[ch2cho]
  dqdci = +k_f * sc[0];
  J[2047] -= dqdci; // dwdot[h]/d[ch2cho]
  J[2049] += dqdci; // dwdot[o]/d[ch2cho]
  J[2063] += dqdci; // dwdot[c2h4]/d[ch2cho]
  J[2070] -= dqdci; // dwdot[ch2cho]/d[ch2cho]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7855] -= dqdT; // dwdot[ch2cho]/dT

  // reaction 307: c2h5 + o => ch3cho + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[17];
  k_f = 50000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[2] -= q;  // o
  wdot[17] -= q; // c2h5
  wdot[24] += q; // ch3cho
  // d()/d[o]
  dqdci = +k_f * sc[17];
  J[178] += dqdci; // dwdot[h]/d[o]
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[195] -= dqdci; // dwdot[c2h5]/d[o]
  J[202] += dqdci; // dwdot[ch3cho]/d[o]
  // d()/d[c2h5]
  dqdci = +k_f * sc[2];
  J[1513] += dqdci; // dwdot[h]/d[c2h5]
  J[1515] -= dqdci; // dwdot[o]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1537] += dqdci; // dwdot[ch3cho]/d[c2h5]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT

  // reaction 308: ch3cho + h => c2h5 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[24];
  k_f = 550500000 * exp(0.11 * logT - (37434.2877692131) * invT);
  dlnkfdT = 0.11 * invT + (37434.2877692131) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[2] += q;  // o
  wdot[17] += q; // c2h5
  wdot[24] -= q; // ch3cho
  // d()/d[h]
  dqdci = +k_f * sc[24];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[2] += dqdci;  // dwdot[o]/d[h]
  J[17] += dqdci; // dwdot[c2h5]/d[h]
  J[24] -= dqdci; // dwdot[ch3cho]/d[h]
  // d()/d[ch3cho]
  dqdci = +k_f * sc[0];
  J[2136] -= dqdci; // dwdot[h]/d[ch3cho]
  J[2138] += dqdci; // dwdot[o]/d[ch3cho]
  J[2153] += dqdci; // dwdot[c2h5]/d[ch3cho]
  J[2160] -= dqdci; // dwdot[ch3cho]/d[ch3cho]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7856] -= dqdT; // dwdot[ch3cho]/dT

  // reaction 309: c2h3 + c2h4 => c4h6 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[19];
  k_f = 500000 * exp(-(3673.48166037445) * invT);
  dlnkfdT = (3673.48166037445) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[16] -= q; // c2h4
  wdot[19] -= q; // c2h3
  wdot[27] += q; // c4h6
  // d()/d[c2h4]
  dqdci = +k_f * sc[19];
  J[1424] += dqdci; // dwdot[h]/d[c2h4]
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1443] -= dqdci; // dwdot[c2h3]/d[c2h4]
  J[1451] += dqdci; // dwdot[c4h6]/d[c2h4]
  // d()/d[c2h3]
  dqdci = +k_f * sc[16];
  J[1691] += dqdci; // dwdot[h]/d[c2h3]
  J[1707] -= dqdci; // dwdot[c2h4]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  J[1718] += dqdci; // dwdot[c4h6]/d[c2h3]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT
  J[7859] += dqdT; // dwdot[c4h6]/dT

  // reaction 310: c4h6 + h => c2h3 + c2h4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[27];
  k_f = 10000000 * exp(-(2365.11832928218) * invT);
  dlnkfdT = (2365.11832928218) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[16] += q; // c2h4
  wdot[19] += q; // c2h3
  wdot[27] -= q; // c4h6
  // d()/d[h]
  dqdci = +k_f * sc[27];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[16] += dqdci; // dwdot[c2h4]/d[h]
  J[19] += dqdci; // dwdot[c2h3]/d[h]
  J[27] -= dqdci; // dwdot[c4h6]/d[h]
  // d()/d[c4h6]
  dqdci = +k_f * sc[0];
  J[2403] -= dqdci; // dwdot[h]/d[c4h6]
  J[2419] += dqdci; // dwdot[c2h4]/d[c4h6]
  J[2422] += dqdci; // dwdot[c2h3]/d[c4h6]
  J[2430] -= dqdci; // dwdot[c4h6]/d[c4h6]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT
  J[7859] -= dqdT; // dwdot[c4h6]/dT

  // reaction 313: c2h5o + o2 => ch3cho + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[37];
  k_f = 42800 * exp(-(552.028682387778) * invT);
  dlnkfdT = (552.028682387778) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[24] += q; // ch3cho
  wdot[37] -= q; // c2h5o
  // d()/d[o2]
  dqdci = +k_f * sc[37];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[291] += dqdci; // dwdot[ch3cho]/d[o2]
  J[304] -= dqdci; // dwdot[c2h5o]/d[o2]
  // d()/d[c2h5o]
  dqdci = +k_f * sc[3];
  J[3296] -= dqdci; // dwdot[o2]/d[c2h5o]
  J[3304] += dqdci; // dwdot[ho2]/d[c2h5o]
  J[3317] += dqdci; // dwdot[ch3cho]/d[c2h5o]
  J[3330] -= dqdci; // dwdot[c2h5o]/d[c2h5o]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT
  J[7869] -= dqdT; // dwdot[c2h5o]/dT

  // reaction 314: ch3cho + ho2 => c2h5o + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[24];
  k_f = 387.2 * exp(0.44 * logT - (16042.5473058545) * invT);
  dlnkfdT = 0.44 * invT + (16042.5473058545) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[24] -= q; // ch3cho
  wdot[37] += q; // c2h5o
  // d()/d[ho2]
  dqdci = +k_f * sc[24];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1003] -= dqdci; // dwdot[ch3cho]/d[ho2]
  J[1016] += dqdci; // dwdot[c2h5o]/d[ho2]
  // d()/d[ch3cho]
  dqdci = +k_f * sc[11];
  J[2139] += dqdci; // dwdot[o2]/d[ch3cho]
  J[2147] -= dqdci; // dwdot[ho2]/d[ch3cho]
  J[2160] -= dqdci; // dwdot[ch3cho]/d[ch3cho]
  J[2173] += dqdci; // dwdot[c2h5o]/d[ch3cho]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7856] -= dqdT; // dwdot[ch3cho]/dT
  J[7869] += dqdT; // dwdot[c2h5o]/dT

  // reaction 315: h2o2 + o2 => 2 ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[12];
  k_f = 183900000 * exp(-0.66 * logT - (19897.1869659186) * invT);
  dlnkfdT = -0.66 * invT + (19897.1869659186) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;      // o2
  wdot[11] += 2 * q; // ho2
  wdot[12] -= q;     // h2o2
  // d()/d[o2]
  dqdci = +k_f * sc[12];
  J[270] -= dqdci;     // dwdot[o2]/d[o2]
  J[278] += 2 * dqdci; // dwdot[ho2]/d[o2]
  J[279] -= dqdci;     // dwdot[h2o2]/d[o2]
  // d()/d[h2o2]
  dqdci = +k_f * sc[3];
  J[1071] -= dqdci;     // dwdot[o2]/d[h2o2]
  J[1079] += 2 * dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci;     // dwdot[h2o2]/d[h2o2]
  // d()/dT
  J[7835] -= dqdT;     // dwdot[o2]/dT
  J[7843] += 2 * dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT;     // dwdot[h2o2]/dT

  // reaction 316: 2 ho2 => h2o2 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[11] * sc[11]);
  k_f = 130000 * exp(-(-819.739948595888) * invT);
  dlnkfdT = (-819.739948595888) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;      // o2
  wdot[11] -= 2 * q; // ho2
  wdot[12] += q;     // h2o2
  // d()/d[ho2]
  dqdci = +k_f * 2.000000 * sc[11];
  J[982] += dqdci;      // dwdot[o2]/d[ho2]
  J[990] += -2 * dqdci; // dwdot[ho2]/d[ho2]
  J[991] += dqdci;      // dwdot[h2o2]/d[ho2]
  // d()/dT
  J[7835] += dqdT;      // dwdot[o2]/dT
  J[7843] += -2 * dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT;      // dwdot[h2o2]/dT

  // reaction 317: c2h3 + o2 => ch2cho + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[19];
  k_f = 350000000 * exp(-0.61 * logT - (2646.91966213283) * invT);
  dlnkfdT = -0.61 * invT + (2646.91966213283) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[3] -= q;  // o2
  wdot[19] -= q; // c2h3
  wdot[23] += q; // ch2cho
  // d()/d[o2]
  dqdci = +k_f * sc[19];
  J[269] += dqdci; // dwdot[o]/d[o2]
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[286] -= dqdci; // dwdot[c2h3]/d[o2]
  J[290] += dqdci; // dwdot[ch2cho]/d[o2]
  // d()/d[c2h3]
  dqdci = +k_f * sc[3];
  J[1693] += dqdci; // dwdot[o]/d[c2h3]
  J[1694] -= dqdci; // dwdot[o2]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  J[1714] += dqdci; // dwdot[ch2cho]/d[c2h3]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT
  J[7855] += dqdT; // dwdot[ch2cho]/dT

  // reaction 318: ch2cho + o => c2h3 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[23];
  k_f = 2589000 * exp(0.12 * logT - (3250.27644443268) * invT);
  dlnkfdT = 0.12 * invT + (3250.27644443268) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[3] += q;  // o2
  wdot[19] += q; // c2h3
  wdot[23] -= q; // ch2cho
  // d()/d[o]
  dqdci = +k_f * sc[23];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[181] += dqdci; // dwdot[o2]/d[o]
  J[197] += dqdci; // dwdot[c2h3]/d[o]
  J[201] -= dqdci; // dwdot[ch2cho]/d[o]
  // d()/d[ch2cho]
  dqdci = +k_f * sc[2];
  J[2049] -= dqdci; // dwdot[o]/d[ch2cho]
  J[2050] += dqdci; // dwdot[o2]/d[ch2cho]
  J[2066] += dqdci; // dwdot[c2h3]/d[ch2cho]
  J[2070] -= dqdci; // dwdot[ch2cho]/d[ch2cho]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT
  J[7855] -= dqdT; // dwdot[ch2cho]/dT

  // reaction 321: ch3o2h => ch3o + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[39];
  k_f = 631000000000000 * exp(-(21286.0649635396) * invT);
  dlnkfdT = (21286.0649635396) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[14] += q; // ch3o
  wdot[39] -= q; // ch3o2h
  // d()/d[ch3o2h]
  dqdci = +k_f;
  J[3475] += dqdci; // dwdot[oh]/d[ch3o2h]
  J[3485] += dqdci; // dwdot[ch3o]/d[ch3o2h]
  J[3510] -= dqdci; // dwdot[ch3o2h]/d[ch3o2h]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7846] += dqdT; // dwdot[ch3o]/dT
  J[7871] -= dqdT; // dwdot[ch3o2h]/dT

  // reaction 322: ch3o + oh => ch3o2h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[14];
  k_f = 116600 * exp(0.6 * logT - (-891.196715140159) * invT);
  dlnkfdT = 0.6 * invT + (-891.196715140159) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[14] -= q; // ch3o
  wdot[39] += q; // ch3o2h
  // d()/d[oh]
  dqdci = +k_f * sc[14];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[370] -= dqdci; // dwdot[ch3o]/d[oh]
  J[395] += dqdci; // dwdot[ch3o2h]/d[oh]
  // d()/d[ch3o]
  dqdci = +k_f * sc[4];
  J[1250] -= dqdci; // dwdot[oh]/d[ch3o]
  J[1260] -= dqdci; // dwdot[ch3o]/d[ch3o]
  J[1285] += dqdci; // dwdot[ch3o2h]/d[ch3o]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7846] -= dqdT; // dwdot[ch3o]/dT
  J[7871] += dqdT; // dwdot[ch3o2h]/dT

  // reaction 323: c3h2 + o2 => co + h + hcco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[49];
  k_f = 50000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[3] -= q;  // o2
  wdot[6] += q;  // co
  wdot[21] += q; // hcco
  wdot[49] -= q; // c3h2
  // d()/d[o2]
  dqdci = +k_f * sc[49];
  J[267] += dqdci; // dwdot[h]/d[o2]
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[273] += dqdci; // dwdot[co]/d[o2]
  J[288] += dqdci; // dwdot[hcco]/d[o2]
  J[316] -= dqdci; // dwdot[c3h2]/d[o2]
  // d()/d[c3h2]
  dqdci = +k_f * sc[3];
  J[4361] += dqdci; // dwdot[h]/d[c3h2]
  J[4364] -= dqdci; // dwdot[o2]/d[c3h2]
  J[4367] += dqdci; // dwdot[co]/d[c3h2]
  J[4382] += dqdci; // dwdot[hcco]/d[c3h2]
  J[4410] -= dqdci; // dwdot[c3h2]/d[c3h2]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7853] += dqdT; // dwdot[hcco]/dT
  J[7881] -= dqdT; // dwdot[c3h2]/dT

  // reaction 324: ch2o + ch3o2 => ch3o2h + hco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[38];
  k_f = 1990000 * exp(-(5867.50632328303) * invT);
  dlnkfdT = (5867.50632328303) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[7] += q;  // hco
  wdot[13] -= q; // ch2o
  wdot[38] -= q; // ch3o2
  wdot[39] += q; // ch3o2h
  // d()/d[ch2o]
  dqdci = +k_f * sc[38];
  J[1164] += dqdci; // dwdot[hco]/d[ch2o]
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  J[1195] -= dqdci; // dwdot[ch3o2]/d[ch2o]
  J[1196] += dqdci; // dwdot[ch3o2h]/d[ch2o]
  // d()/d[ch3o2]
  dqdci = +k_f * sc[13];
  J[3389] += dqdci; // dwdot[hco]/d[ch3o2]
  J[3395] -= dqdci; // dwdot[ch2o]/d[ch3o2]
  J[3420] -= dqdci; // dwdot[ch3o2]/d[ch3o2]
  J[3421] += dqdci; // dwdot[ch3o2h]/d[ch3o2]
  // d()/dT
  J[7839] += dqdT; // dwdot[hco]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT
  J[7870] -= dqdT; // dwdot[ch3o2]/dT
  J[7871] += dqdT; // dwdot[ch3o2h]/dT

  // reaction 325: ch3o2h + hco => ch2o + ch3o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[39];
  k_f = 8504000 * exp(-0.5 * logT - (3527.04561062528) * invT);
  dlnkfdT = -0.5 * invT + (3527.04561062528) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[7] -= q;  // hco
  wdot[13] += q; // ch2o
  wdot[38] += q; // ch3o2
  wdot[39] -= q; // ch3o2h
  // d()/d[hco]
  dqdci = +k_f * sc[39];
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  J[636] += dqdci; // dwdot[ch2o]/d[hco]
  J[661] += dqdci; // dwdot[ch3o2]/d[hco]
  J[662] -= dqdci; // dwdot[ch3o2h]/d[hco]
  // d()/d[ch3o2h]
  dqdci = +k_f * sc[7];
  J[3478] -= dqdci; // dwdot[hco]/d[ch3o2h]
  J[3484] += dqdci; // dwdot[ch2o]/d[ch3o2h]
  J[3509] += dqdci; // dwdot[ch3o2]/d[ch3o2h]
  J[3510] -= dqdci; // dwdot[ch3o2h]/d[ch3o2h]
  // d()/dT
  J[7839] -= dqdT; // dwdot[hco]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT
  J[7870] += dqdT; // dwdot[ch3o2]/dT
  J[7871] -= dqdT; // dwdot[ch3o2h]/dT

  // reaction 326: c2h4 + ch3o2 => c2h3 + ch3o2h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[38];
  k_f = 2230000 * exp(-(8650.29448518313) * invT);
  dlnkfdT = (8650.29448518313) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] -= q; // c2h4
  wdot[19] += q; // c2h3
  wdot[38] -= q; // ch3o2
  wdot[39] += q; // ch3o2h
  // d()/d[c2h4]
  dqdci = +k_f * sc[38];
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1443] += dqdci; // dwdot[c2h3]/d[c2h4]
  J[1462] -= dqdci; // dwdot[ch3o2]/d[c2h4]
  J[1463] += dqdci; // dwdot[ch3o2h]/d[c2h4]
  // d()/d[ch3o2]
  dqdci = +k_f * sc[16];
  J[3398] -= dqdci; // dwdot[c2h4]/d[ch3o2]
  J[3401] += dqdci; // dwdot[c2h3]/d[ch3o2]
  J[3420] -= dqdci; // dwdot[ch3o2]/d[ch3o2]
  J[3421] += dqdci; // dwdot[ch3o2h]/d[ch3o2]
  // d()/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT
  J[7870] -= dqdT; // dwdot[ch3o2]/dT
  J[7871] += dqdT; // dwdot[ch3o2h]/dT

  // reaction 327: c2h3 + ch3o2h => c2h4 + ch3o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[39];
  k_f = 8112000000 * exp(-1.33 * logT - (-749.289615383228) * invT);
  dlnkfdT = -1.33 * invT + (-749.289615383228) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] += q; // c2h4
  wdot[19] -= q; // c2h3
  wdot[38] += q; // ch3o2
  wdot[39] -= q; // ch3o2h
  // d()/d[c2h3]
  dqdci = +k_f * sc[39];
  J[1707] += dqdci; // dwdot[c2h4]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  J[1729] += dqdci; // dwdot[ch3o2]/d[c2h3]
  J[1730] -= dqdci; // dwdot[ch3o2h]/d[c2h3]
  // d()/d[ch3o2h]
  dqdci = +k_f * sc[19];
  J[3487] += dqdci; // dwdot[c2h4]/d[ch3o2h]
  J[3490] -= dqdci; // dwdot[c2h3]/d[ch3o2h]
  J[3509] += dqdci; // dwdot[ch3o2]/d[ch3o2h]
  J[3510] -= dqdci; // dwdot[ch3o2h]/d[ch3o2h]
  // d()/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT
  J[7870] += dqdT; // dwdot[ch3o2]/dT
  J[7871] -= dqdT; // dwdot[ch3o2h]/dT

  // reaction 328: ch3o2 + ch4 => ch3 + ch3o2h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[38];
  k_f = 181000 * exp(-(9299.44398407122) * invT);
  dlnkfdT = (9299.44398407122) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[38] -= q; // ch3o2
  wdot[39] += q; // ch3o2h
  // d()/d[ch4]
  dqdci = +k_f * sc[38];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[928] -= dqdci; // dwdot[ch3o2]/d[ch4]
  J[929] += dqdci; // dwdot[ch3o2h]/d[ch4]
  // d()/d[ch3o2]
  dqdci = +k_f * sc[10];
  J[3391] += dqdci; // dwdot[ch3]/d[ch3o2]
  J[3392] -= dqdci; // dwdot[ch4]/d[ch3o2]
  J[3420] -= dqdci; // dwdot[ch3o2]/d[ch3o2]
  J[3421] += dqdci; // dwdot[ch3o2h]/d[ch3o2]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7870] -= dqdT; // dwdot[ch3o2]/dT
  J[7871] += dqdT; // dwdot[ch3o2h]/dT

  // reaction 329: ch3 + ch3o2h => ch3o2 + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[39];
  k_f = 370800 * exp(-0.5 * logT - (-667.768515522863) * invT);
  dlnkfdT = -0.5 * invT + (-667.768515522863) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[38] += q; // ch3o2
  wdot[39] -= q; // ch3o2h
  // d()/d[ch3]
  dqdci = +k_f * sc[39];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[839] += dqdci; // dwdot[ch3o2]/d[ch3]
  J[840] -= dqdci; // dwdot[ch3o2h]/d[ch3]
  // d()/d[ch3o2h]
  dqdci = +k_f * sc[9];
  J[3480] -= dqdci; // dwdot[ch3]/d[ch3o2h]
  J[3481] += dqdci; // dwdot[ch4]/d[ch3o2h]
  J[3509] += dqdci; // dwdot[ch3o2]/d[ch3o2h]
  J[3510] -= dqdci; // dwdot[ch3o2h]/d[ch3o2h]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7870] += dqdT; // dwdot[ch3o2]/dT
  J[7871] -= dqdT; // dwdot[ch3o2h]/dT

  // reaction 330: c2h5 + ho2 => c2h5o + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[17];
  k_f = 32000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[11] -= q; // ho2
  wdot[17] -= q; // c2h5
  wdot[37] += q; // c2h5o
  // d()/d[ho2]
  dqdci = +k_f * sc[17];
  J[983] += dqdci;  // dwdot[oh]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[996] -= dqdci;  // dwdot[c2h5]/d[ho2]
  J[1016] += dqdci; // dwdot[c2h5o]/d[ho2]
  // d()/d[c2h5]
  dqdci = +k_f * sc[11];
  J[1517] += dqdci; // dwdot[oh]/d[c2h5]
  J[1524] -= dqdci; // dwdot[ho2]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1550] += dqdci; // dwdot[c2h5o]/d[c2h5]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7869] += dqdT; // dwdot[c2h5o]/dT

  // reaction 331: c2h5o + oh => c2h5 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[37];
  k_f = 3075000000 * exp(-0.32 * logT - (13833.4261429717) * invT);
  dlnkfdT = -0.32 * invT + (13833.4261429717) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[11] += q; // ho2
  wdot[17] += q; // c2h5
  wdot[37] -= q; // c2h5o
  // d()/d[oh]
  dqdci = +k_f * sc[37];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[367] += dqdci; // dwdot[ho2]/d[oh]
  J[373] += dqdci; // dwdot[c2h5]/d[oh]
  J[393] -= dqdci; // dwdot[c2h5o]/d[oh]
  // d()/d[c2h5o]
  dqdci = +k_f * sc[4];
  J[3297] -= dqdci; // dwdot[oh]/d[c2h5o]
  J[3304] += dqdci; // dwdot[ho2]/d[c2h5o]
  J[3310] += dqdci; // dwdot[c2h5]/d[c2h5o]
  J[3330] -= dqdci; // dwdot[c2h5o]/d[c2h5o]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7869] -= dqdT; // dwdot[c2h5o]/dT

  // reaction 332: ch3 + ch3o2 => 2 ch3o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[38];
  k_f = 7000000 * exp(-(-503.21666580472) * invT);
  dlnkfdT = (-503.21666580472) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;      // ch3
  wdot[14] += 2 * q; // ch3o
  wdot[38] -= q;     // ch3o2
  // d()/d[ch3]
  dqdci = +k_f * sc[38];
  J[810] -= dqdci;     // dwdot[ch3]/d[ch3]
  J[815] += 2 * dqdci; // dwdot[ch3o]/d[ch3]
  J[839] -= dqdci;     // dwdot[ch3o2]/d[ch3]
  // d()/d[ch3o2]
  dqdci = +k_f * sc[9];
  J[3391] -= dqdci;     // dwdot[ch3]/d[ch3o2]
  J[3396] += 2 * dqdci; // dwdot[ch3o]/d[ch3o2]
  J[3420] -= dqdci;     // dwdot[ch3o2]/d[ch3o2]
  // d()/dT
  J[7841] -= dqdT;     // dwdot[ch3]/dT
  J[7846] += 2 * dqdT; // dwdot[ch3o]/dT
  J[7870] -= dqdT;     // dwdot[ch3o2]/dT

  // reaction 333: 2 ch3o => ch3 + ch3o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[14] * sc[14]);
  k_f = 29710000000 * exp(-0.93 * logT - (14246.0638089316) * invT);
  dlnkfdT = -0.93 * invT + (14246.0638089316) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;      // ch3
  wdot[14] -= 2 * q; // ch3o
  wdot[38] += q;     // ch3o2
  // d()/d[ch3o]
  dqdci = +k_f * 2.000000 * sc[14];
  J[1255] += dqdci;      // dwdot[ch3]/d[ch3o]
  J[1260] += -2 * dqdci; // dwdot[ch3o]/d[ch3o]
  J[1284] += dqdci;      // dwdot[ch3o2]/d[ch3o]
  // d()/dT
  J[7841] += dqdT;      // dwdot[ch3]/dT
  J[7846] += -2 * dqdT; // dwdot[ch3o]/dT
  J[7870] += dqdT;      // dwdot[ch3o2]/dT

  // reaction 334: c2h5 + ch3o2 => c2h5o + ch3o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[38];
  k_f = 7000000 * exp(-(-503.21666580472) * invT);
  dlnkfdT = (-503.21666580472) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[14] += q; // ch3o
  wdot[17] -= q; // c2h5
  wdot[37] += q; // c2h5o
  wdot[38] -= q; // ch3o2
  // d()/d[c2h5]
  dqdci = +k_f * sc[38];
  J[1527] += dqdci; // dwdot[ch3o]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1550] += dqdci; // dwdot[c2h5o]/d[c2h5]
  J[1551] -= dqdci; // dwdot[ch3o2]/d[c2h5]
  // d()/d[ch3o2]
  dqdci = +k_f * sc[17];
  J[3396] += dqdci; // dwdot[ch3o]/d[ch3o2]
  J[3399] -= dqdci; // dwdot[c2h5]/d[ch3o2]
  J[3419] += dqdci; // dwdot[c2h5o]/d[ch3o2]
  J[3420] -= dqdci; // dwdot[ch3o2]/d[ch3o2]
  // d()/dT
  J[7846] += dqdT; // dwdot[ch3o]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7869] += dqdT; // dwdot[c2h5o]/dT
  J[7870] -= dqdT; // dwdot[ch3o2]/dT

  // reaction 335: c2h5o + ch3o => c2h5 + ch3o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[37];
  k_f = 65690000000 * exp(-0.9 * logT - (15730.5529730555) * invT);
  dlnkfdT = -0.9 * invT + (15730.5529730555) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[14] -= q; // ch3o
  wdot[17] += q; // c2h5
  wdot[37] -= q; // c2h5o
  wdot[38] += q; // ch3o2
  // d()/d[ch3o]
  dqdci = +k_f * sc[37];
  J[1260] -= dqdci; // dwdot[ch3o]/d[ch3o]
  J[1263] += dqdci; // dwdot[c2h5]/d[ch3o]
  J[1283] -= dqdci; // dwdot[c2h5o]/d[ch3o]
  J[1284] += dqdci; // dwdot[ch3o2]/d[ch3o]
  // d()/d[c2h5o]
  dqdci = +k_f * sc[14];
  J[3307] -= dqdci; // dwdot[ch3o]/d[c2h5o]
  J[3310] += dqdci; // dwdot[c2h5]/d[c2h5o]
  J[3330] -= dqdci; // dwdot[c2h5o]/d[c2h5o]
  J[3331] += dqdci; // dwdot[ch3o2]/d[c2h5o]
  // d()/dT
  J[7846] -= dqdT; // dwdot[ch3o]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7869] -= dqdT; // dwdot[c2h5o]/dT
  J[7870] += dqdT; // dwdot[ch3o2]/dT

  // reaction 336: ch3o2 + ho2 => ch3o2h + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[38];
  k_f = 17500 * exp(-(-1648.03458051046) * invT);
  dlnkfdT = (-1648.03458051046) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[38] -= q; // ch3o2
  wdot[39] += q; // ch3o2h
  // d()/d[ho2]
  dqdci = +k_f * sc[38];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1017] -= dqdci; // dwdot[ch3o2]/d[ho2]
  J[1018] += dqdci; // dwdot[ch3o2h]/d[ho2]
  // d()/d[ch3o2]
  dqdci = +k_f * sc[11];
  J[3385] += dqdci; // dwdot[o2]/d[ch3o2]
  J[3393] -= dqdci; // dwdot[ho2]/d[ch3o2]
  J[3420] -= dqdci; // dwdot[ch3o2]/d[ch3o2]
  J[3421] += dqdci; // dwdot[ch3o2h]/d[ch3o2]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7870] -= dqdT; // dwdot[ch3o2]/dT
  J[7871] += dqdT; // dwdot[ch3o2h]/dT

  // reaction 337: ch3o2h + o2 => ch3o2 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[39];
  k_f = 51560000 * exp(-0.83 * logT - (17552.1973032686) * invT);
  dlnkfdT = -0.83 * invT + (17552.1973032686) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[38] += q; // ch3o2
  wdot[39] -= q; // ch3o2h
  // d()/d[o2]
  dqdci = +k_f * sc[39];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[305] += dqdci; // dwdot[ch3o2]/d[o2]
  J[306] -= dqdci; // dwdot[ch3o2h]/d[o2]
  // d()/d[ch3o2h]
  dqdci = +k_f * sc[3];
  J[3474] -= dqdci; // dwdot[o2]/d[ch3o2h]
  J[3482] += dqdci; // dwdot[ho2]/d[ch3o2h]
  J[3509] += dqdci; // dwdot[ch3o2]/d[ch3o2h]
  J[3510] -= dqdci; // dwdot[ch3o2h]/d[ch3o2h]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7870] += dqdT; // dwdot[ch3o2]/dT
  J[7871] -= dqdT; // dwdot[ch3o2h]/dT

  // reaction 338: h2o2 + oh => h2o + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[12];
  k_f = 580000000 * exp(-(4810.75132509312) * invT);
  dlnkfdT = (4810.75132509312) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[11] += q; // ho2
  wdot[12] -= q; // h2o2
  // d()/d[oh]
  dqdci = +k_f * sc[12];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[367] += dqdci; // dwdot[ho2]/d[oh]
  J[368] -= dqdci; // dwdot[h2o2]/d[oh]
  // d()/d[h2o2]
  dqdci = +k_f * sc[4];
  J[1072] -= dqdci; // dwdot[oh]/d[h2o2]
  J[1073] += dqdci; // dwdot[h2o]/d[h2o2]
  J[1079] += dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci; // dwdot[h2o2]/d[h2o2]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT; // dwdot[h2o2]/dT

  // reaction 339: h2o + ho2 => h2o2 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[11];
  k_f = 97710000 * exp(0.33 * logT - (20641.9476313096) * invT);
  dlnkfdT = 0.33 * invT + (20641.9476313096) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  // d()/d[h2o]
  dqdci = +k_f * sc[11];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[456] -= dqdci; // dwdot[ho2]/d[h2o]
  J[457] += dqdci; // dwdot[h2o2]/d[h2o]
  // d()/d[ho2]
  dqdci = +k_f * sc[5];
  J[983] += dqdci; // dwdot[oh]/d[ho2]
  J[984] -= dqdci; // dwdot[h2o]/d[ho2]
  J[990] -= dqdci; // dwdot[ho2]/d[ho2]
  J[991] += dqdci; // dwdot[h2o2]/d[ho2]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT

  // reaction 340: 2 ch3o2 => 2 ch3o + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[38] * sc[38]);
  k_f = 14000000000 * exp(-1.61 * logT - (935.982998396779) * invT);
  dlnkfdT = -1.61 * invT + (935.982998396779) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;      // o2
  wdot[14] += 2 * q; // ch3o
  wdot[38] -= 2 * q; // ch3o2
  // d()/d[ch3o2]
  dqdci = +k_f * 2.000000 * sc[38];
  J[3385] += dqdci;      // dwdot[o2]/d[ch3o2]
  J[3396] += 2 * dqdci;  // dwdot[ch3o]/d[ch3o2]
  J[3420] += -2 * dqdci; // dwdot[ch3o2]/d[ch3o2]
  // d()/dT
  J[7835] += dqdT;      // dwdot[o2]/dT
  J[7846] += 2 * dqdT;  // dwdot[ch3o]/dT
  J[7870] += -2 * dqdT; // dwdot[ch3o2]/dT

  // reaction 341: c2h6 + ch3o2 => c2h5 + ch3o2h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[38];
  k_f = 13200000 * exp(-(10300.8451490226) * invT);
  dlnkfdT = (10300.8451490226) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[15] -= q; // c2h6
  wdot[17] += q; // c2h5
  wdot[38] -= q; // ch3o2
  wdot[39] += q; // ch3o2h
  // d()/d[c2h6]
  dqdci = +k_f * sc[38];
  J[1350] -= dqdci; // dwdot[c2h6]/d[c2h6]
  J[1352] += dqdci; // dwdot[c2h5]/d[c2h6]
  J[1373] -= dqdci; // dwdot[ch3o2]/d[c2h6]
  J[1374] += dqdci; // dwdot[ch3o2h]/d[c2h6]
  // d()/d[ch3o2]
  dqdci = +k_f * sc[15];
  J[3397] -= dqdci; // dwdot[c2h6]/d[ch3o2]
  J[3399] += dqdci; // dwdot[c2h5]/d[ch3o2]
  J[3420] -= dqdci; // dwdot[ch3o2]/d[ch3o2]
  J[3421] += dqdci; // dwdot[ch3o2h]/d[ch3o2]
  // d()/dT
  J[7847] -= dqdT; // dwdot[c2h6]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7870] -= dqdT; // dwdot[ch3o2]/dT
  J[7871] += dqdT; // dwdot[ch3o2h]/dT

  // reaction 342: c2h5 + ch3o2h => c2h6 + ch3o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[39];
  k_f = 172800 * exp(0.06 * logT - (2431.54292916841) * invT);
  dlnkfdT = 0.06 * invT + (2431.54292916841) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[15] += q; // c2h6
  wdot[17] -= q; // c2h5
  wdot[38] += q; // ch3o2
  wdot[39] -= q; // ch3o2h
  // d()/d[c2h5]
  dqdci = +k_f * sc[39];
  J[1528] += dqdci; // dwdot[c2h6]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1551] += dqdci; // dwdot[ch3o2]/d[c2h5]
  J[1552] -= dqdci; // dwdot[ch3o2h]/d[c2h5]
  // d()/d[ch3o2h]
  dqdci = +k_f * sc[17];
  J[3486] += dqdci; // dwdot[c2h6]/d[ch3o2h]
  J[3488] -= dqdci; // dwdot[c2h5]/d[ch3o2h]
  J[3509] += dqdci; // dwdot[ch3o2]/d[ch3o2h]
  J[3510] -= dqdci; // dwdot[ch3o2h]/d[ch3o2h]
  // d()/dT
  J[7847] += dqdT; // dwdot[c2h6]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7870] += dqdT; // dwdot[ch3o2]/dT
  J[7871] -= dqdT; // dwdot[ch3o2h]/dT

  // reaction 345: ch3cho + ch3o2 => ch3co + ch3o2h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[24] * sc[38];
  k_f = 3010000 * exp(-(5998.34265639226) * invT);
  dlnkfdT = (5998.34265639226) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[22] += q; // ch3co
  wdot[24] -= q; // ch3cho
  wdot[38] -= q; // ch3o2
  wdot[39] += q; // ch3o2h
  // d()/d[ch3cho]
  dqdci = +k_f * sc[38];
  J[2158] += dqdci; // dwdot[ch3co]/d[ch3cho]
  J[2160] -= dqdci; // dwdot[ch3cho]/d[ch3cho]
  J[2174] -= dqdci; // dwdot[ch3o2]/d[ch3cho]
  J[2175] += dqdci; // dwdot[ch3o2h]/d[ch3cho]
  // d()/d[ch3o2]
  dqdci = +k_f * sc[24];
  J[3404] += dqdci; // dwdot[ch3co]/d[ch3o2]
  J[3406] -= dqdci; // dwdot[ch3cho]/d[ch3o2]
  J[3420] -= dqdci; // dwdot[ch3o2]/d[ch3o2]
  J[3421] += dqdci; // dwdot[ch3o2h]/d[ch3o2]
  // d()/dT
  J[7854] += dqdT; // dwdot[ch3co]/dT
  J[7856] -= dqdT; // dwdot[ch3cho]/dT
  J[7870] -= dqdT; // dwdot[ch3o2]/dT
  J[7871] += dqdT; // dwdot[ch3o2h]/dT

  // reaction 346: ch3co + ch3o2h => ch3cho + ch3o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[22] * sc[39];
  k_f = 25190000 * exp(-0.51 * logT - (4524.42104225023) * invT);
  dlnkfdT = -0.51 * invT + (4524.42104225023) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[22] -= q; // ch3co
  wdot[24] += q; // ch3cho
  wdot[38] += q; // ch3o2
  wdot[39] -= q; // ch3o2h
  // d()/d[ch3co]
  dqdci = +k_f * sc[39];
  J[1980] -= dqdci; // dwdot[ch3co]/d[ch3co]
  J[1982] += dqdci; // dwdot[ch3cho]/d[ch3co]
  J[1996] += dqdci; // dwdot[ch3o2]/d[ch3co]
  J[1997] -= dqdci; // dwdot[ch3o2h]/d[ch3co]
  // d()/d[ch3o2h]
  dqdci = +k_f * sc[22];
  J[3493] -= dqdci; // dwdot[ch3co]/d[ch3o2h]
  J[3495] += dqdci; // dwdot[ch3cho]/d[ch3o2h]
  J[3509] += dqdci; // dwdot[ch3o2]/d[ch3o2h]
  J[3510] -= dqdci; // dwdot[ch3o2h]/d[ch3o2h]
  // d()/dT
  J[7854] -= dqdT; // dwdot[ch3co]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT
  J[7870] += dqdT; // dwdot[ch3o2]/dT
  J[7871] -= dqdT; // dwdot[ch3o2h]/dT

  // reaction 347: c2h3co => c2h3 + co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[40];
  k_f = 304300000000000 * exp(-0.46 * logT - (15353.140473702) * invT);
  dlnkfdT = -0.46 * invT + (15353.140473702) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] += q;  // co
  wdot[19] += q; // c2h3
  wdot[40] -= q; // c2h3co
  // d()/d[c2h3co]
  dqdci = +k_f;
  J[3566] += dqdci; // dwdot[co]/d[c2h3co]
  J[3579] += dqdci; // dwdot[c2h3]/d[c2h3co]
  J[3600] -= dqdci; // dwdot[c2h3co]/d[c2h3co]
  // d()/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT
  J[7872] -= dqdT; // dwdot[c2h3co]/dT

  // reaction 348: c2h3 + co => c2h3co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[19];
  k_f = 151000 * exp(-(2420.4721625207) * invT);
  dlnkfdT = (2420.4721625207) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // co
  wdot[19] -= q; // c2h3
  wdot[40] += q; // c2h3co
  // d()/d[co]
  dqdci = +k_f * sc[19];
  J[540] -= dqdci; // dwdot[co]/d[co]
  J[553] -= dqdci; // dwdot[c2h3]/d[co]
  J[574] += dqdci; // dwdot[c2h3co]/d[co]
  // d()/d[c2h3]
  dqdci = +k_f * sc[6];
  J[1697] -= dqdci; // dwdot[co]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  J[1731] += dqdci; // dwdot[c2h3co]/d[c2h3]
  // d()/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT
  J[7872] += dqdT; // dwdot[c2h3co]/dT

  // reaction 349: c2h3cho + oh => c2h3co + h2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[41];
  k_f = 9.24 * exp(1.5 * logT - (-484.09443250414) * invT);
  dlnkfdT = 1.5 * invT + (-484.09443250414) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[40] += q; // c2h3co
  wdot[41] -= q; // c2h3cho
  // d()/d[oh]
  dqdci = +k_f * sc[41];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[396] += dqdci; // dwdot[c2h3co]/d[oh]
  J[397] -= dqdci; // dwdot[c2h3cho]/d[oh]
  // d()/d[c2h3cho]
  dqdci = +k_f * sc[4];
  J[3653] -= dqdci; // dwdot[oh]/d[c2h3cho]
  J[3654] += dqdci; // dwdot[h2o]/d[c2h3cho]
  J[3689] += dqdci; // dwdot[c2h3co]/d[c2h3cho]
  J[3690] -= dqdci; // dwdot[c2h3cho]/d[c2h3cho]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7872] += dqdT; // dwdot[c2h3co]/dT
  J[7873] -= dqdT; // dwdot[c2h3cho]/dT

  // reaction 350: c2h3co + h2o => c2h3cho + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[40];
  k_f = 21.47 * exp(1.48 * logT - (17869.2238027256) * invT);
  dlnkfdT = 1.48 * invT + (17869.2238027256) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[40] -= q; // c2h3co
  wdot[41] += q; // c2h3cho
  // d()/d[h2o]
  dqdci = +k_f * sc[40];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[485] -= dqdci; // dwdot[c2h3co]/d[h2o]
  J[486] += dqdci; // dwdot[c2h3cho]/d[h2o]
  // d()/d[c2h3co]
  dqdci = +k_f * sc[5];
  J[3564] += dqdci; // dwdot[oh]/d[c2h3co]
  J[3565] -= dqdci; // dwdot[h2o]/d[c2h3co]
  J[3600] -= dqdci; // dwdot[c2h3co]/d[c2h3co]
  J[3601] += dqdci; // dwdot[c2h3cho]/d[c2h3co]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7872] -= dqdT; // dwdot[c2h3co]/dT
  J[7873] += dqdT; // dwdot[c2h3cho]/dT

  // reaction 351: c2h3cho + h => c2h3co + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[41];
  k_f = 13400000 * exp(-(1660.61499715557) * invT);
  dlnkfdT = (1660.61499715557) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[40] += q; // c2h3co
  wdot[41] -= q; // c2h3cho
  // d()/d[h]
  dqdci = +k_f * sc[41];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[40] += dqdci; // dwdot[c2h3co]/d[h]
  J[41] -= dqdci; // dwdot[c2h3cho]/d[h]
  // d()/d[c2h3cho]
  dqdci = +k_f * sc[0];
  J[3649] -= dqdci; // dwdot[h]/d[c2h3cho]
  J[3650] += dqdci; // dwdot[h2]/d[c2h3cho]
  J[3689] += dqdci; // dwdot[c2h3co]/d[c2h3cho]
  J[3690] -= dqdci; // dwdot[c2h3cho]/d[c2h3cho]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7872] += dqdT; // dwdot[c2h3co]/dT
  J[7873] -= dqdT; // dwdot[c2h3cho]/dT

  // reaction 352: c2h3co + h2 => c2h3cho + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[40];
  k_f = 7191000 * exp(-0.02 * logT - (12389.1943121122) * invT);
  dlnkfdT = -0.02 * invT + (12389.1943121122) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[40] -= q; // c2h3co
  wdot[41] += q; // c2h3cho
  // d()/d[h2]
  dqdci = +k_f * sc[40];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[129] -= dqdci; // dwdot[c2h3co]/d[h2]
  J[130] += dqdci; // dwdot[c2h3cho]/d[h2]
  // d()/d[c2h3co]
  dqdci = +k_f * sc[1];
  J[3560] += dqdci; // dwdot[h]/d[c2h3co]
  J[3561] -= dqdci; // dwdot[h2]/d[c2h3co]
  J[3600] -= dqdci; // dwdot[c2h3co]/d[c2h3co]
  J[3601] += dqdci; // dwdot[c2h3cho]/d[c2h3co]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7872] -= dqdT; // dwdot[c2h3co]/dT
  J[7873] += dqdT; // dwdot[c2h3cho]/dT

  // reaction 353: c2h3cho + o => c2h3co + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[41];
  k_f = 5940000 * exp(-(940.008731723216) * invT);
  dlnkfdT = (940.008731723216) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[4] += q;  // oh
  wdot[40] += q; // c2h3co
  wdot[41] -= q; // c2h3cho
  // d()/d[o]
  dqdci = +k_f * sc[41];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[182] += dqdci; // dwdot[oh]/d[o]
  J[218] += dqdci; // dwdot[c2h3co]/d[o]
  J[219] -= dqdci; // dwdot[c2h3cho]/d[o]
  // d()/d[c2h3cho]
  dqdci = +k_f * sc[2];
  J[3651] -= dqdci; // dwdot[o]/d[c2h3cho]
  J[3653] += dqdci; // dwdot[oh]/d[c2h3cho]
  J[3689] += dqdci; // dwdot[c2h3co]/d[c2h3cho]
  J[3690] -= dqdci; // dwdot[c2h3cho]/d[c2h3cho]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7872] += dqdT; // dwdot[c2h3co]/dT
  J[7873] -= dqdT; // dwdot[c2h3cho]/dT

  // reaction 354: c2h3co + oh => c2h3cho + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[40];
  k_f = 1400000 * exp(-0.02 * logT - (10612.8394818215) * invT);
  dlnkfdT = -0.02 * invT + (10612.8394818215) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[4] -= q;  // oh
  wdot[40] -= q; // c2h3co
  wdot[41] += q; // c2h3cho
  // d()/d[oh]
  dqdci = +k_f * sc[40];
  J[358] += dqdci; // dwdot[o]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[396] -= dqdci; // dwdot[c2h3co]/d[oh]
  J[397] += dqdci; // dwdot[c2h3cho]/d[oh]
  // d()/d[c2h3co]
  dqdci = +k_f * sc[4];
  J[3562] += dqdci; // dwdot[o]/d[c2h3co]
  J[3564] -= dqdci; // dwdot[oh]/d[c2h3co]
  J[3600] -= dqdci; // dwdot[c2h3co]/d[c2h3co]
  J[3601] += dqdci; // dwdot[c2h3cho]/d[c2h3co]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7872] -= dqdT; // dwdot[c2h3co]/dT
  J[7873] += dqdT; // dwdot[c2h3cho]/dT

  // reaction 355: c2h3cho + ho2 => c2h3co + h2o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[41];
  k_f = 3010000 * exp(-(5998.34265639226) * invT);
  dlnkfdT = (5998.34265639226) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  wdot[40] += q; // c2h3co
  wdot[41] -= q; // c2h3cho
  // d()/d[ho2]
  dqdci = +k_f * sc[41];
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[991] += dqdci;  // dwdot[h2o2]/d[ho2]
  J[1019] += dqdci; // dwdot[c2h3co]/d[ho2]
  J[1020] -= dqdci; // dwdot[c2h3cho]/d[ho2]
  // d()/d[c2h3cho]
  dqdci = +k_f * sc[11];
  J[3660] -= dqdci; // dwdot[ho2]/d[c2h3cho]
  J[3661] += dqdci; // dwdot[h2o2]/d[c2h3cho]
  J[3689] += dqdci; // dwdot[c2h3co]/d[c2h3cho]
  J[3690] -= dqdci; // dwdot[c2h3cho]/d[c2h3cho]
  // d()/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT
  J[7872] += dqdT; // dwdot[c2h3co]/dT
  J[7873] -= dqdT; // dwdot[c2h3cho]/dT

  // reaction 356: c2h3co + h2o2 => c2h3cho + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[40];
  k_f = 41520000 * exp(-0.35 * logT - (8524.49031873195) * invT);
  dlnkfdT = -0.35 * invT + (8524.49031873195) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // ho2
  wdot[12] -= q; // h2o2
  wdot[40] -= q; // c2h3co
  wdot[41] += q; // c2h3cho
  // d()/d[h2o2]
  dqdci = +k_f * sc[40];
  J[1079] += dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci; // dwdot[h2o2]/d[h2o2]
  J[1108] -= dqdci; // dwdot[c2h3co]/d[h2o2]
  J[1109] += dqdci; // dwdot[c2h3cho]/d[h2o2]
  // d()/d[c2h3co]
  dqdci = +k_f * sc[12];
  J[3571] += dqdci; // dwdot[ho2]/d[c2h3co]
  J[3572] -= dqdci; // dwdot[h2o2]/d[c2h3co]
  J[3600] -= dqdci; // dwdot[c2h3co]/d[c2h3co]
  J[3601] += dqdci; // dwdot[c2h3cho]/d[c2h3co]
  // d()/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT; // dwdot[h2o2]/dT
  J[7872] -= dqdT; // dwdot[c2h3co]/dT
  J[7873] += dqdT; // dwdot[c2h3cho]/dT

  // reaction 357: c2h3cho + ch3 => c2h3co + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[41];
  k_f = 2.608 * exp(1.78 * logT - (2974.5137115717) * invT);
  dlnkfdT = 1.78 * invT + (2974.5137115717) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[40] += q; // c2h3co
  wdot[41] -= q; // c2h3cho
  // d()/d[ch3]
  dqdci = +k_f * sc[41];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[841] += dqdci; // dwdot[c2h3co]/d[ch3]
  J[842] -= dqdci; // dwdot[c2h3cho]/d[ch3]
  // d()/d[c2h3cho]
  dqdci = +k_f * sc[9];
  J[3658] -= dqdci; // dwdot[ch3]/d[c2h3cho]
  J[3659] += dqdci; // dwdot[ch4]/d[c2h3cho]
  J[3689] += dqdci; // dwdot[c2h3co]/d[c2h3cho]
  J[3690] -= dqdci; // dwdot[c2h3cho]/d[c2h3cho]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7872] += dqdT; // dwdot[c2h3co]/dT
  J[7873] -= dqdT; // dwdot[c2h3cho]/dT

  // reaction 358: c2h3co + ch4 => c2h3cho + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[40];
  k_f = 36.56 * exp(1.76 * logT - (13944.1338094488) * invT);
  dlnkfdT = 1.76 * invT + (13944.1338094488) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[40] -= q; // c2h3co
  wdot[41] += q; // c2h3cho
  // d()/d[ch4]
  dqdci = +k_f * sc[40];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[930] -= dqdci; // dwdot[c2h3co]/d[ch4]
  J[931] += dqdci; // dwdot[c2h3cho]/d[ch4]
  // d()/d[c2h3co]
  dqdci = +k_f * sc[10];
  J[3569] += dqdci; // dwdot[ch3]/d[c2h3co]
  J[3570] -= dqdci; // dwdot[ch4]/d[c2h3co]
  J[3600] -= dqdci; // dwdot[c2h3co]/d[c2h3co]
  J[3601] += dqdci; // dwdot[c2h3cho]/d[c2h3co]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7872] -= dqdT; // dwdot[c2h3co]/dT
  J[7873] += dqdT; // dwdot[c2h3cho]/dT

  // reaction 359: c2h3cho + ch3o2 => c2h3co + ch3o2h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[38] * sc[41];
  k_f = 3010000 * exp(-(5998.34265639226) * invT);
  dlnkfdT = (5998.34265639226) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[38] -= q; // ch3o2
  wdot[39] += q; // ch3o2h
  wdot[40] += q; // c2h3co
  wdot[41] -= q; // c2h3cho
  // d()/d[ch3o2]
  dqdci = +k_f * sc[41];
  J[3420] -= dqdci; // dwdot[ch3o2]/d[ch3o2]
  J[3421] += dqdci; // dwdot[ch3o2h]/d[ch3o2]
  J[3422] += dqdci; // dwdot[c2h3co]/d[ch3o2]
  J[3423] -= dqdci; // dwdot[c2h3cho]/d[ch3o2]
  // d()/d[c2h3cho]
  dqdci = +k_f * sc[38];
  J[3687] -= dqdci; // dwdot[ch3o2]/d[c2h3cho]
  J[3688] += dqdci; // dwdot[ch3o2h]/d[c2h3cho]
  J[3689] += dqdci; // dwdot[c2h3co]/d[c2h3cho]
  J[3690] -= dqdci; // dwdot[c2h3cho]/d[c2h3cho]
  // d()/dT
  J[7870] -= dqdT; // dwdot[ch3o2]/dT
  J[7871] += dqdT; // dwdot[ch3o2h]/dT
  J[7872] += dqdT; // dwdot[c2h3co]/dT
  J[7873] -= dqdT; // dwdot[c2h3cho]/dT

  // reaction 360: c2h3co + ch3o2h => c2h3cho + ch3o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[39] * sc[40];
  k_f = 86450000 * exp(-0.53 * logT - (7004.7759880017) * invT);
  dlnkfdT = -0.53 * invT + (7004.7759880017) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[38] += q; // ch3o2
  wdot[39] -= q; // ch3o2h
  wdot[40] -= q; // c2h3co
  wdot[41] += q; // c2h3cho
  // d()/d[ch3o2h]
  dqdci = +k_f * sc[40];
  J[3509] += dqdci; // dwdot[ch3o2]/d[ch3o2h]
  J[3510] -= dqdci; // dwdot[ch3o2h]/d[ch3o2h]
  J[3511] -= dqdci; // dwdot[c2h3co]/d[ch3o2h]
  J[3512] += dqdci; // dwdot[c2h3cho]/d[ch3o2h]
  // d()/d[c2h3co]
  dqdci = +k_f * sc[39];
  J[3598] += dqdci; // dwdot[ch3o2]/d[c2h3co]
  J[3599] -= dqdci; // dwdot[ch3o2h]/d[c2h3co]
  J[3600] -= dqdci; // dwdot[c2h3co]/d[c2h3co]
  J[3601] += dqdci; // dwdot[c2h3cho]/d[c2h3co]
  // d()/dT
  J[7870] += dqdT; // dwdot[ch3o2]/dT
  J[7871] -= dqdT; // dwdot[ch3o2h]/dT
  J[7872] -= dqdT; // dwdot[c2h3co]/dT
  J[7873] += dqdT; // dwdot[c2h3cho]/dT

  // reaction 361: c3h5o => c2h3cho + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[42];
  k_f = 100000000000000 * exp(-(14643.6049749173) * invT);
  dlnkfdT = (14643.6049749173) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[41] += q; // c2h3cho
  wdot[42] -= q; // c3h5o
  // d()/d[c3h5o]
  dqdci = +k_f;
  J[3738] += dqdci; // dwdot[h]/d[c3h5o]
  J[3779] += dqdci; // dwdot[c2h3cho]/d[c3h5o]
  J[3780] -= dqdci; // dwdot[c3h5o]/d[c3h5o]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7873] += dqdT; // dwdot[c2h3cho]/dT
  J[7874] -= dqdT; // dwdot[c3h5o]/dT

  // reaction 362: c2h3cho + h => c3h5o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[41];
  k_f = 771400 * exp(0.48 * logT - (8932.09581803377) * invT);
  dlnkfdT = 0.48 * invT + (8932.09581803377) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[41] -= q; // c2h3cho
  wdot[42] += q; // c3h5o
  // d()/d[h]
  dqdci = +k_f * sc[41];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[41] -= dqdci; // dwdot[c2h3cho]/d[h]
  J[42] += dqdci; // dwdot[c3h5o]/d[h]
  // d()/d[c2h3cho]
  dqdci = +k_f * sc[0];
  J[3649] -= dqdci; // dwdot[h]/d[c2h3cho]
  J[3690] -= dqdci; // dwdot[c2h3cho]/d[c2h3cho]
  J[3691] += dqdci; // dwdot[c3h5o]/d[c2h3cho]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7873] -= dqdT; // dwdot[c2h3cho]/dT
  J[7874] += dqdT; // dwdot[c3h5o]/dT

  // reaction 363: c3h5o => c2h3 + ch2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[42];
  k_f = 2028000000000 * exp(0.09 * logT - (11855.7846463592) * invT);
  dlnkfdT = 0.09 * invT + (11855.7846463592) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[13] += q; // ch2o
  wdot[19] += q; // c2h3
  wdot[42] -= q; // c3h5o
  // d()/d[c3h5o]
  dqdci = +k_f;
  J[3751] += dqdci; // dwdot[ch2o]/d[c3h5o]
  J[3757] += dqdci; // dwdot[c2h3]/d[c3h5o]
  J[3780] -= dqdci; // dwdot[c3h5o]/d[c3h5o]
  // d()/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT
  J[7874] -= dqdT; // dwdot[c3h5o]/dT

  // reaction 364: c2h3 + ch2o => c3h5o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[19];
  k_f = 150000 * exp(-(5334.09665753003) * invT);
  dlnkfdT = (5334.09665753003) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[13] -= q; // ch2o
  wdot[19] -= q; // c2h3
  wdot[42] += q; // c3h5o
  // d()/d[ch2o]
  dqdci = +k_f * sc[19];
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  J[1176] -= dqdci; // dwdot[c2h3]/d[ch2o]
  J[1199] += dqdci; // dwdot[c3h5o]/d[ch2o]
  // d()/d[c2h3]
  dqdci = +k_f * sc[13];
  J[1704] -= dqdci; // dwdot[ch2o]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  J[1733] += dqdci; // dwdot[c3h5o]/d[c2h3]
  // d()/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT
  J[7874] += dqdT; // dwdot[c3h5o]/dT

  // reaction 365: c3h5o + o2 => c2h3cho + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[42];
  k_f = 1000000 * exp(-(3019.29999482832) * invT);
  dlnkfdT = (3019.29999482832) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[41] += q; // c2h3cho
  wdot[42] -= q; // c3h5o
  // d()/d[o2]
  dqdci = +k_f * sc[42];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[308] += dqdci; // dwdot[c2h3cho]/d[o2]
  J[309] -= dqdci; // dwdot[c3h5o]/d[o2]
  // d()/d[c3h5o]
  dqdci = +k_f * sc[3];
  J[3741] -= dqdci; // dwdot[o2]/d[c3h5o]
  J[3749] += dqdci; // dwdot[ho2]/d[c3h5o]
  J[3779] += dqdci; // dwdot[c2h3cho]/d[c3h5o]
  J[3780] -= dqdci; // dwdot[c3h5o]/d[c3h5o]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7873] += dqdT; // dwdot[c2h3cho]/dT
  J[7874] -= dqdT; // dwdot[c3h5o]/dT

  // reaction 366: c2h3cho + ho2 => c3h5o + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[41];
  k_f = 128800 * exp(-(16102.933305751) * invT);
  dlnkfdT = (16102.933305751) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[41] -= q; // c2h3cho
  wdot[42] += q; // c3h5o
  // d()/d[ho2]
  dqdci = +k_f * sc[41];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1020] -= dqdci; // dwdot[c2h3cho]/d[ho2]
  J[1021] += dqdci; // dwdot[c3h5o]/d[ho2]
  // d()/d[c2h3cho]
  dqdci = +k_f * sc[11];
  J[3652] += dqdci; // dwdot[o2]/d[c2h3cho]
  J[3660] -= dqdci; // dwdot[ho2]/d[c2h3cho]
  J[3690] -= dqdci; // dwdot[c2h3cho]/d[c2h3cho]
  J[3691] += dqdci; // dwdot[c3h5o]/d[c2h3cho]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7873] -= dqdT; // dwdot[c2h3cho]/dT
  J[7874] += dqdT; // dwdot[c3h5o]/dT

  // reaction 367: c3h5-a + ho2 => c3h5o + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[47];
  k_f = 7000000 * exp(-(-503.21666580472) * invT);
  dlnkfdT = (-503.21666580472) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[11] -= q; // ho2
  wdot[42] += q; // c3h5o
  wdot[47] -= q; // c3h5-a
  // d()/d[ho2]
  dqdci = +k_f * sc[47];
  J[983] += dqdci;  // dwdot[oh]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1021] += dqdci; // dwdot[c3h5o]/d[ho2]
  J[1026] -= dqdci; // dwdot[c3h5-a]/d[ho2]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[11];
  J[4187] += dqdci; // dwdot[oh]/d[c3h5-a]
  J[4194] -= dqdci; // dwdot[ho2]/d[c3h5-a]
  J[4225] += dqdci; // dwdot[c3h5o]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7874] += dqdT; // dwdot[c3h5o]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 368: c3h5o + oh => c3h5-a + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[42];
  k_f = 20410000 * exp(-0.16 * logT - (6169.43632276586) * invT);
  dlnkfdT = -0.16 * invT + (6169.43632276586) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[11] += q; // ho2
  wdot[42] -= q; // c3h5o
  wdot[47] += q; // c3h5-a
  // d()/d[oh]
  dqdci = +k_f * sc[42];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[367] += dqdci; // dwdot[ho2]/d[oh]
  J[398] -= dqdci; // dwdot[c3h5o]/d[oh]
  J[403] += dqdci; // dwdot[c3h5-a]/d[oh]
  // d()/d[c3h5o]
  dqdci = +k_f * sc[4];
  J[3742] -= dqdci; // dwdot[oh]/d[c3h5o]
  J[3749] += dqdci; // dwdot[ho2]/d[c3h5o]
  J[3780] -= dqdci; // dwdot[c3h5o]/d[c3h5o]
  J[3785] += dqdci; // dwdot[c3h5-a]/d[c3h5o]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7874] -= dqdT; // dwdot[c3h5o]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 369: c3h5-a + ch3o2 => c3h5o + ch3o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[38] * sc[47];
  k_f = 7000000 * exp(-(-503.21666580472) * invT);
  dlnkfdT = (-503.21666580472) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[14] += q; // ch3o
  wdot[38] -= q; // ch3o2
  wdot[42] += q; // c3h5o
  wdot[47] -= q; // c3h5-a
  // d()/d[ch3o2]
  dqdci = +k_f * sc[47];
  J[3396] += dqdci; // dwdot[ch3o]/d[ch3o2]
  J[3420] -= dqdci; // dwdot[ch3o2]/d[ch3o2]
  J[3424] += dqdci; // dwdot[c3h5o]/d[ch3o2]
  J[3429] -= dqdci; // dwdot[c3h5-a]/d[ch3o2]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[38];
  J[4197] += dqdci; // dwdot[ch3o]/d[c3h5-a]
  J[4221] -= dqdci; // dwdot[ch3o2]/d[c3h5-a]
  J[4225] += dqdci; // dwdot[c3h5o]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7846] += dqdT; // dwdot[ch3o]/dT
  J[7870] -= dqdT; // dwdot[ch3o2]/dT
  J[7874] += dqdT; // dwdot[c3h5o]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 370: c3h5o + ch3o => c3h5-a + ch3o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[42];
  k_f = 1994000000 * exp(-0.74 * logT - (8564.74765199633) * invT);
  dlnkfdT = -0.74 * invT + (8564.74765199633) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[14] -= q; // ch3o
  wdot[38] += q; // ch3o2
  wdot[42] -= q; // c3h5o
  wdot[47] += q; // c3h5-a
  // d()/d[ch3o]
  dqdci = +k_f * sc[42];
  J[1260] -= dqdci; // dwdot[ch3o]/d[ch3o]
  J[1284] += dqdci; // dwdot[ch3o2]/d[ch3o]
  J[1288] -= dqdci; // dwdot[c3h5o]/d[ch3o]
  J[1293] += dqdci; // dwdot[c3h5-a]/d[ch3o]
  // d()/d[c3h5o]
  dqdci = +k_f * sc[14];
  J[3752] -= dqdci; // dwdot[ch3o]/d[c3h5o]
  J[3776] += dqdci; // dwdot[ch3o2]/d[c3h5o]
  J[3780] -= dqdci; // dwdot[c3h5o]/d[c3h5o]
  J[3785] += dqdci; // dwdot[c3h5-a]/d[c3h5o]
  // d()/dT
  J[7846] -= dqdT; // dwdot[ch3o]/dT
  J[7870] += dqdT; // dwdot[ch3o2]/dT
  J[7874] -= dqdT; // dwdot[c3h5o]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 371: c3h6 + ch3o2 => c3h5-a + ch3o2h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[26] * sc[38];
  k_f = 324000 * exp(-(7497.92832049032) * invT);
  dlnkfdT = (7497.92832049032) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[26] -= q; // c3h6
  wdot[38] -= q; // ch3o2
  wdot[39] += q; // ch3o2h
  wdot[47] += q; // c3h5-a
  // d()/d[c3h6]
  dqdci = +k_f * sc[38];
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  J[2352] -= dqdci; // dwdot[ch3o2]/d[c3h6]
  J[2353] += dqdci; // dwdot[ch3o2h]/d[c3h6]
  J[2361] += dqdci; // dwdot[c3h5-a]/d[c3h6]
  // d()/d[ch3o2]
  dqdci = +k_f * sc[26];
  J[3408] -= dqdci; // dwdot[c3h6]/d[ch3o2]
  J[3420] -= dqdci; // dwdot[ch3o2]/d[ch3o2]
  J[3421] += dqdci; // dwdot[ch3o2h]/d[ch3o2]
  J[3429] += dqdci; // dwdot[c3h5-a]/d[ch3o2]
  // d()/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT
  J[7870] -= dqdT; // dwdot[ch3o2]/dT
  J[7871] += dqdT; // dwdot[ch3o2h]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 372: c3h5-a + ch3o2h => c3h6 + ch3o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[39] * sc[47];
  k_f = 20000 * exp(-(7548.2499870708) * invT);
  dlnkfdT = (7548.2499870708) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[26] += q; // c3h6
  wdot[38] += q; // ch3o2
  wdot[39] -= q; // ch3o2h
  wdot[47] -= q; // c3h5-a
  // d()/d[ch3o2h]
  dqdci = +k_f * sc[47];
  J[3497] += dqdci; // dwdot[c3h6]/d[ch3o2h]
  J[3509] += dqdci; // dwdot[ch3o2]/d[ch3o2h]
  J[3510] -= dqdci; // dwdot[ch3o2h]/d[ch3o2h]
  J[3518] -= dqdci; // dwdot[c3h5-a]/d[ch3o2h]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[39];
  J[4209] += dqdci; // dwdot[c3h6]/d[c3h5-a]
  J[4221] += dqdci; // dwdot[ch3o2]/d[c3h5-a]
  J[4222] -= dqdci; // dwdot[ch3o2h]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7870] += dqdT; // dwdot[ch3o2]/dT
  J[7871] -= dqdT; // dwdot[ch3o2h]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 373: ch3 + oh => ch2(s) + h2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[9];
  k_f = 26500000 * exp(-(1100.03163144912) * invT);
  dlnkfdT = (1100.03163144912) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[9] -= q;  // ch3
  wdot[50] += q; // ch2(s)
  // d()/d[oh]
  dqdci = +k_f * sc[9];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[365] -= dqdci; // dwdot[ch3]/d[oh]
  J[406] += dqdci; // dwdot[ch2(s)]/d[oh]
  // d()/d[ch3]
  dqdci = +k_f * sc[4];
  J[805] -= dqdci; // dwdot[oh]/d[ch3]
  J[806] += dqdci; // dwdot[h2o]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[851] += dqdci; // dwdot[ch2(s)]/d[ch3]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7882] += dqdT; // dwdot[ch2(s)]/dT

  // reaction 374: ch2(s) + h2o => ch3 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[50];
  k_f = 32360 * exp(0.89 * logT - (609.395382289516) * invT);
  dlnkfdT = 0.89 * invT + (609.395382289516) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[9] += q;  // ch3
  wdot[50] -= q; // ch2(s)
  // d()/d[h2o]
  dqdci = +k_f * sc[50];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[454] += dqdci; // dwdot[ch3]/d[h2o]
  J[495] -= dqdci; // dwdot[ch2(s)]/d[h2o]
  // d()/d[ch2(s)]
  dqdci = +k_f * sc[5];
  J[4454] += dqdci; // dwdot[oh]/d[ch2(s)]
  J[4455] -= dqdci; // dwdot[h2o]/d[ch2(s)]
  J[4459] += dqdci; // dwdot[ch3]/d[ch2(s)]
  J[4500] -= dqdci; // dwdot[ch2(s)]/d[ch2(s)]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7882] -= dqdT; // dwdot[ch2(s)]/dT

  // reaction 375: c4h7o => c2h3 + ch3cho
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[43];
  k_f = 794000000000000 * exp(-(9561.11665028967) * invT);
  dlnkfdT = (9561.11665028967) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[19] += q; // c2h3
  wdot[24] += q; // ch3cho
  wdot[43] -= q; // c4h7o
  // d()/d[c4h7o]
  dqdci = +k_f;
  J[3846] += dqdci; // dwdot[c2h3]/d[c4h7o]
  J[3851] += dqdci; // dwdot[ch3cho]/d[c4h7o]
  J[3870] -= dqdci; // dwdot[c4h7o]/d[c4h7o]
  // d()/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT
  J[7875] -= dqdT; // dwdot[c4h7o]/dT

  // reaction 376: c2h3 + ch3cho => c4h7o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[24];
  k_f = 10000 * exp(-(10064.3333160944) * invT);
  dlnkfdT = (10064.3333160944) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[19] -= q; // c2h3
  wdot[24] -= q; // ch3cho
  wdot[43] += q; // c4h7o
  // d()/d[c2h3]
  dqdci = +k_f * sc[24];
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  J[1715] -= dqdci; // dwdot[ch3cho]/d[c2h3]
  J[1734] += dqdci; // dwdot[c4h7o]/d[c2h3]
  // d()/d[ch3cho]
  dqdci = +k_f * sc[19];
  J[2155] -= dqdci; // dwdot[c2h3]/d[ch3cho]
  J[2160] -= dqdci; // dwdot[ch3cho]/d[ch3cho]
  J[2179] += dqdci; // dwdot[c4h7o]/d[ch3cho]
  // d()/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT
  J[7856] -= dqdT; // dwdot[ch3cho]/dT
  J[7875] += dqdT; // dwdot[c4h7o]/dT

  // reaction 377: c4h7o => c2h3cho + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[43];
  k_f = 794000000000000 * exp(-(9561.11665028967) * invT);
  dlnkfdT = (9561.11665028967) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[41] += q; // c2h3cho
  wdot[43] -= q; // c4h7o
  // d()/d[c4h7o]
  dqdci = +k_f;
  J[3836] += dqdci; // dwdot[ch3]/d[c4h7o]
  J[3868] += dqdci; // dwdot[c2h3cho]/d[c4h7o]
  J[3870] -= dqdci; // dwdot[c4h7o]/d[c4h7o]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7873] += dqdT; // dwdot[c2h3cho]/dT
  J[7875] -= dqdT; // dwdot[c4h7o]/dT

  // reaction 378: c2h3cho + ch3 => c4h7o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[41];
  k_f = 10000 * exp(-(10064.3333160944) * invT);
  dlnkfdT = (10064.3333160944) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[41] -= q; // c2h3cho
  wdot[43] += q; // c4h7o
  // d()/d[ch3]
  dqdci = +k_f * sc[41];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[842] -= dqdci; // dwdot[c2h3cho]/d[ch3]
  J[844] += dqdci; // dwdot[c4h7o]/d[ch3]
  // d()/d[c2h3cho]
  dqdci = +k_f * sc[9];
  J[3658] -= dqdci; // dwdot[ch3]/d[c2h3cho]
  J[3690] -= dqdci; // dwdot[c2h3cho]/d[c2h3cho]
  J[3692] += dqdci; // dwdot[c4h7o]/d[c2h3cho]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7873] -= dqdT; // dwdot[c2h3cho]/dT
  J[7875] += dqdT; // dwdot[c4h7o]/dT

  // reaction 379: c4h7 + ho2 => c4h7o + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[29];
  k_f = 7000000 * exp(-(-503.21666580472) * invT);
  dlnkfdT = (-503.21666580472) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[11] -= q; // ho2
  wdot[29] -= q; // c4h7
  wdot[43] += q; // c4h7o
  // d()/d[ho2]
  dqdci = +k_f * sc[29];
  J[983] += dqdci;  // dwdot[oh]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1008] -= dqdci; // dwdot[c4h7]/d[ho2]
  J[1022] += dqdci; // dwdot[c4h7o]/d[ho2]
  // d()/d[c4h7]
  dqdci = +k_f * sc[11];
  J[2585] += dqdci; // dwdot[oh]/d[c4h7]
  J[2592] -= dqdci; // dwdot[ho2]/d[c4h7]
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  J[2624] += dqdci; // dwdot[c4h7o]/d[c4h7]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT
  J[7875] += dqdT; // dwdot[c4h7o]/dT

  // reaction 380: c4h7o + oh => c4h7 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[43];
  k_f = 100800 * exp(0.26 * logT - (8499.32948544172) * invT);
  dlnkfdT = 0.26 * invT + (8499.32948544172) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[11] += q; // ho2
  wdot[29] += q; // c4h7
  wdot[43] -= q; // c4h7o
  // d()/d[oh]
  dqdci = +k_f * sc[43];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[367] += dqdci; // dwdot[ho2]/d[oh]
  J[385] += dqdci; // dwdot[c4h7]/d[oh]
  J[399] -= dqdci; // dwdot[c4h7o]/d[oh]
  // d()/d[c4h7o]
  dqdci = +k_f * sc[4];
  J[3831] -= dqdci; // dwdot[oh]/d[c4h7o]
  J[3838] += dqdci; // dwdot[ho2]/d[c4h7o]
  J[3856] += dqdci; // dwdot[c4h7]/d[c4h7o]
  J[3870] -= dqdci; // dwdot[c4h7o]/d[c4h7o]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT
  J[7875] -= dqdT; // dwdot[c4h7o]/dT

  // reaction 381: c4h7 + ch3o2 => c4h7o + ch3o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[29] * sc[38];
  k_f = 7000000 * exp(-(-503.21666580472) * invT);
  dlnkfdT = (-503.21666580472) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[14] += q; // ch3o
  wdot[29] -= q; // c4h7
  wdot[38] -= q; // ch3o2
  wdot[43] += q; // c4h7o
  // d()/d[c4h7]
  dqdci = +k_f * sc[38];
  J[2595] += dqdci; // dwdot[ch3o]/d[c4h7]
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  J[2619] -= dqdci; // dwdot[ch3o2]/d[c4h7]
  J[2624] += dqdci; // dwdot[c4h7o]/d[c4h7]
  // d()/d[ch3o2]
  dqdci = +k_f * sc[29];
  J[3396] += dqdci; // dwdot[ch3o]/d[ch3o2]
  J[3411] -= dqdci; // dwdot[c4h7]/d[ch3o2]
  J[3420] -= dqdci; // dwdot[ch3o2]/d[ch3o2]
  J[3425] += dqdci; // dwdot[c4h7o]/d[ch3o2]
  // d()/dT
  J[7846] += dqdT; // dwdot[ch3o]/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT
  J[7870] -= dqdT; // dwdot[ch3o2]/dT
  J[7875] += dqdT; // dwdot[c4h7o]/dT

  // reaction 382: c4h7o + ch3o => c4h7 + ch3o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[43];
  k_f = 9844000 * exp(-0.32 * logT - (10894.6408146722) * invT);
  dlnkfdT = -0.32 * invT + (10894.6408146722) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[14] -= q; // ch3o
  wdot[29] += q; // c4h7
  wdot[38] += q; // ch3o2
  wdot[43] -= q; // c4h7o
  // d()/d[ch3o]
  dqdci = +k_f * sc[43];
  J[1260] -= dqdci; // dwdot[ch3o]/d[ch3o]
  J[1275] += dqdci; // dwdot[c4h7]/d[ch3o]
  J[1284] += dqdci; // dwdot[ch3o2]/d[ch3o]
  J[1289] -= dqdci; // dwdot[c4h7o]/d[ch3o]
  // d()/d[c4h7o]
  dqdci = +k_f * sc[14];
  J[3841] -= dqdci; // dwdot[ch3o]/d[c4h7o]
  J[3856] += dqdci; // dwdot[c4h7]/d[c4h7o]
  J[3865] += dqdci; // dwdot[ch3o2]/d[c4h7o]
  J[3870] -= dqdci; // dwdot[c4h7o]/d[c4h7o]
  // d()/dT
  J[7846] -= dqdT; // dwdot[ch3o]/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT
  J[7870] += dqdT; // dwdot[ch3o2]/dT
  J[7875] -= dqdT; // dwdot[c4h7o]/dT

  // reaction 383: c4h8-1 + oh => ch2o + nc3h7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[30];
  k_f = 1000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[13] += q; // ch2o
  wdot[28] += q; // nc3h7
  wdot[30] -= q; // c4h8-1
  // d()/d[oh]
  dqdci = +k_f * sc[30];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[369] += dqdci; // dwdot[ch2o]/d[oh]
  J[384] += dqdci; // dwdot[nc3h7]/d[oh]
  J[386] -= dqdci; // dwdot[c4h8-1]/d[oh]
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[4];
  J[2674] -= dqdci; // dwdot[oh]/d[c4h8-1]
  J[2683] += dqdci; // dwdot[ch2o]/d[c4h8-1]
  J[2698] += dqdci; // dwdot[nc3h7]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT
  J[7860] += dqdT; // dwdot[nc3h7]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT

  // reaction 384: ch2o + nc3h7 => c4h8-1 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[28];
  k_f = 1620000 * exp(-(6657.55648859644) * invT);
  dlnkfdT = (6657.55648859644) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[13] -= q; // ch2o
  wdot[28] -= q; // nc3h7
  wdot[30] += q; // c4h8-1
  // d()/d[ch2o]
  dqdci = +k_f * sc[28];
  J[1161] += dqdci; // dwdot[oh]/d[ch2o]
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  J[1185] -= dqdci; // dwdot[nc3h7]/d[ch2o]
  J[1187] += dqdci; // dwdot[c4h8-1]/d[ch2o]
  // d()/d[nc3h7]
  dqdci = +k_f * sc[13];
  J[2496] += dqdci; // dwdot[oh]/d[nc3h7]
  J[2505] -= dqdci; // dwdot[ch2o]/d[nc3h7]
  J[2520] -= dqdci; // dwdot[nc3h7]/d[nc3h7]
  J[2522] += dqdci; // dwdot[c4h8-1]/d[nc3h7]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT
  J[7860] -= dqdT; // dwdot[nc3h7]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT

  // reaction 385: c4h8-1 + o => c3h6 + ch2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[30];
  k_f = 0.723 * exp(2.34 * logT - (-528.377499094956) * invT);
  dlnkfdT = 2.34 * invT + (-528.377499094956) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[13] += q; // ch2o
  wdot[26] += q; // c3h6
  wdot[30] -= q; // c4h8-1
  // d()/d[o]
  dqdci = +k_f * sc[30];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[191] += dqdci; // dwdot[ch2o]/d[o]
  J[204] += dqdci; // dwdot[c3h6]/d[o]
  J[208] -= dqdci; // dwdot[c4h8-1]/d[o]
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[2];
  J[2672] -= dqdci; // dwdot[o]/d[c4h8-1]
  J[2683] += dqdci; // dwdot[ch2o]/d[c4h8-1]
  J[2696] += dqdci; // dwdot[c3h6]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT

  // reaction 386: c3h6 + ch2o => c4h8-1 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[26];
  k_f = 0.2 * exp(2.34 * logT - (40398.2339308029) * invT);
  dlnkfdT = 2.34 * invT + (40398.2339308029) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[13] -= q; // ch2o
  wdot[26] -= q; // c3h6
  wdot[30] += q; // c4h8-1
  // d()/d[ch2o]
  dqdci = +k_f * sc[26];
  J[1159] += dqdci; // dwdot[o]/d[ch2o]
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  J[1183] -= dqdci; // dwdot[c3h6]/d[ch2o]
  J[1187] += dqdci; // dwdot[c4h8-1]/d[ch2o]
  // d()/d[c3h6]
  dqdci = +k_f * sc[13];
  J[2316] += dqdci; // dwdot[o]/d[c3h6]
  J[2327] -= dqdci; // dwdot[ch2o]/d[c3h6]
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  J[2344] += dqdci; // dwdot[c4h8-1]/d[c3h6]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT

  // reaction 387: c4h8-1 + o => c2h4 + ch3cho
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[30];
  k_f = 13000000 * exp(-(427.734165934012) * invT);
  dlnkfdT = (427.734165934012) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[16] += q; // c2h4
  wdot[24] += q; // ch3cho
  wdot[30] -= q; // c4h8-1
  // d()/d[o]
  dqdci = +k_f * sc[30];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[194] += dqdci; // dwdot[c2h4]/d[o]
  J[202] += dqdci; // dwdot[ch3cho]/d[o]
  J[208] -= dqdci; // dwdot[c4h8-1]/d[o]
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[2];
  J[2672] -= dqdci; // dwdot[o]/d[c4h8-1]
  J[2686] += dqdci; // dwdot[c2h4]/d[c4h8-1]
  J[2694] += dqdci; // dwdot[ch3cho]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT

  // reaction 388: c2h4 + ch3cho => c4h8-1 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[24];
  k_f = 2070000 * exp(-(42823.7382599816) * invT);
  dlnkfdT = (42823.7382599816) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[16] -= q; // c2h4
  wdot[24] -= q; // ch3cho
  wdot[30] += q; // c4h8-1
  // d()/d[c2h4]
  dqdci = +k_f * sc[24];
  J[1426] += dqdci; // dwdot[o]/d[c2h4]
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1448] -= dqdci; // dwdot[ch3cho]/d[c2h4]
  J[1454] += dqdci; // dwdot[c4h8-1]/d[c2h4]
  // d()/d[ch3cho]
  dqdci = +k_f * sc[16];
  J[2138] += dqdci; // dwdot[o]/d[ch3cho]
  J[2152] -= dqdci; // dwdot[c2h4]/d[ch3cho]
  J[2160] -= dqdci; // dwdot[ch3cho]/d[ch3cho]
  J[2166] += dqdci; // dwdot[c4h8-1]/d[ch3cho]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7856] -= dqdT; // dwdot[ch3cho]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT

  // reaction 389: c4h8-1 + o => c2h5 + ch3co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[30];
  k_f = 13000000 * exp(-(427.734165934012) * invT);
  dlnkfdT = (427.734165934012) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[17] += q; // c2h5
  wdot[22] += q; // ch3co
  wdot[30] -= q; // c4h8-1
  // d()/d[o]
  dqdci = +k_f * sc[30];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[195] += dqdci; // dwdot[c2h5]/d[o]
  J[200] += dqdci; // dwdot[ch3co]/d[o]
  J[208] -= dqdci; // dwdot[c4h8-1]/d[o]
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[2];
  J[2672] -= dqdci; // dwdot[o]/d[c4h8-1]
  J[2687] += dqdci; // dwdot[c2h5]/d[c4h8-1]
  J[2692] += dqdci; // dwdot[ch3co]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7854] += dqdT; // dwdot[ch3co]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT

  // reaction 390: c2h5 + ch3co => c4h8-1 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[22];
  k_f = 2350000 * exp(-(19197.7158004501) * invT);
  dlnkfdT = (19197.7158004501) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[17] -= q; // c2h5
  wdot[22] -= q; // ch3co
  wdot[30] += q; // c4h8-1
  // d()/d[c2h5]
  dqdci = +k_f * sc[22];
  J[1515] += dqdci; // dwdot[o]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1535] -= dqdci; // dwdot[ch3co]/d[c2h5]
  J[1543] += dqdci; // dwdot[c4h8-1]/d[c2h5]
  // d()/d[ch3co]
  dqdci = +k_f * sc[17];
  J[1960] += dqdci; // dwdot[o]/d[ch3co]
  J[1975] -= dqdci; // dwdot[c2h5]/d[ch3co]
  J[1980] -= dqdci; // dwdot[ch3co]/d[ch3co]
  J[1988] += dqdci; // dwdot[c4h8-1]/d[ch3co]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7854] -= dqdT; // dwdot[ch3co]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT

  // reaction 391: c4h8-1 + oh => c2h5 + ch3cho
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[30];
  k_f = 1000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[17] += q; // c2h5
  wdot[24] += q; // ch3cho
  wdot[30] -= q; // c4h8-1
  // d()/d[oh]
  dqdci = +k_f * sc[30];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[373] += dqdci; // dwdot[c2h5]/d[oh]
  J[380] += dqdci; // dwdot[ch3cho]/d[oh]
  J[386] -= dqdci; // dwdot[c4h8-1]/d[oh]
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[4];
  J[2674] -= dqdci; // dwdot[oh]/d[c4h8-1]
  J[2687] += dqdci; // dwdot[c2h5]/d[c4h8-1]
  J[2694] += dqdci; // dwdot[ch3cho]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT

  // reaction 392: c2h5 + ch3cho => c4h8-1 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[24];
  k_f = 9330000 * exp(-(10029.1081494881) * invT);
  dlnkfdT = (10029.1081494881) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[17] -= q; // c2h5
  wdot[24] -= q; // ch3cho
  wdot[30] += q; // c4h8-1
  // d()/d[c2h5]
  dqdci = +k_f * sc[24];
  J[1517] += dqdci; // dwdot[oh]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1537] -= dqdci; // dwdot[ch3cho]/d[c2h5]
  J[1543] += dqdci; // dwdot[c4h8-1]/d[c2h5]
  // d()/d[ch3cho]
  dqdci = +k_f * sc[17];
  J[2140] += dqdci; // dwdot[oh]/d[ch3cho]
  J[2153] -= dqdci; // dwdot[c2h5]/d[ch3cho]
  J[2160] -= dqdci; // dwdot[ch3cho]/d[ch3cho]
  J[2166] += dqdci; // dwdot[c4h8-1]/d[ch3cho]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7856] -= dqdT; // dwdot[ch3cho]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT

  // reaction 393: c4h8-1 + oh => c2h6 + ch3co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[30];
  k_f = 500000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[15] += q; // c2h6
  wdot[22] += q; // ch3co
  wdot[30] -= q; // c4h8-1
  // d()/d[oh]
  dqdci = +k_f * sc[30];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[371] += dqdci; // dwdot[c2h6]/d[oh]
  J[378] += dqdci; // dwdot[ch3co]/d[oh]
  J[386] -= dqdci; // dwdot[c4h8-1]/d[oh]
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[4];
  J[2674] -= dqdci; // dwdot[oh]/d[c4h8-1]
  J[2685] += dqdci; // dwdot[c2h6]/d[c4h8-1]
  J[2692] += dqdci; // dwdot[ch3co]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7847] += dqdT; // dwdot[c2h6]/dT
  J[7854] += dqdT; // dwdot[ch3co]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT

  // reaction 394: c2h6 + ch3co => c4h8-1 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[22];
  k_f = 9830000 * exp(-(16319.3164720471) * invT);
  dlnkfdT = (16319.3164720471) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[15] -= q; // c2h6
  wdot[22] -= q; // ch3co
  wdot[30] += q; // c4h8-1
  // d()/d[c2h6]
  dqdci = +k_f * sc[22];
  J[1339] += dqdci; // dwdot[oh]/d[c2h6]
  J[1350] -= dqdci; // dwdot[c2h6]/d[c2h6]
  J[1357] -= dqdci; // dwdot[ch3co]/d[c2h6]
  J[1365] += dqdci; // dwdot[c4h8-1]/d[c2h6]
  // d()/d[ch3co]
  dqdci = +k_f * sc[15];
  J[1962] += dqdci; // dwdot[oh]/d[ch3co]
  J[1973] -= dqdci; // dwdot[c2h6]/d[ch3co]
  J[1980] -= dqdci; // dwdot[ch3co]/d[ch3co]
  J[1988] += dqdci; // dwdot[c4h8-1]/d[ch3co]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7847] -= dqdT; // dwdot[c2h6]/dT
  J[7854] -= dqdT; // dwdot[ch3co]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT

  // reaction 395: c4h8-1 + o => c2h5co + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[30];
  k_f = 13000000 * exp(-(427.734165934012) * invT);
  dlnkfdT = (427.734165934012) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[9] += q;  // ch3
  wdot[30] -= q; // c4h8-1
  wdot[34] += q; // c2h5co
  // d()/d[o]
  dqdci = +k_f * sc[30];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[187] += dqdci; // dwdot[ch3]/d[o]
  J[208] -= dqdci; // dwdot[c4h8-1]/d[o]
  J[212] += dqdci; // dwdot[c2h5co]/d[o]
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[2];
  J[2672] -= dqdci; // dwdot[o]/d[c4h8-1]
  J[2679] += dqdci; // dwdot[ch3]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  J[2704] += dqdci; // dwdot[c2h5co]/d[c4h8-1]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT
  J[7866] += dqdT; // dwdot[c2h5co]/dT

  // reaction 396: c2h5co + ch3 => c4h8-1 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[34];
  k_f = 480000 * exp(-(16379.7024719436) * invT);
  dlnkfdT = (16379.7024719436) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[9] -= q;  // ch3
  wdot[30] += q; // c4h8-1
  wdot[34] -= q; // c2h5co
  // d()/d[ch3]
  dqdci = +k_f * sc[34];
  J[803] += dqdci; // dwdot[o]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[831] += dqdci; // dwdot[c4h8-1]/d[ch3]
  J[835] -= dqdci; // dwdot[c2h5co]/d[ch3]
  // d()/d[c2h5co]
  dqdci = +k_f * sc[9];
  J[3028] += dqdci; // dwdot[o]/d[c2h5co]
  J[3035] -= dqdci; // dwdot[ch3]/d[c2h5co]
  J[3056] += dqdci; // dwdot[c4h8-1]/d[c2h5co]
  J[3060] -= dqdci; // dwdot[c2h5co]/d[c2h5co]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT
  J[7866] -= dqdT; // dwdot[c2h5co]/dT

  // reaction 397: c4h8-1 + oh => c2h5cho + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[30];
  k_f = 1000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[9] += q;  // ch3
  wdot[30] -= q; // c4h8-1
  wdot[33] += q; // c2h5cho
  // d()/d[oh]
  dqdci = +k_f * sc[30];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[365] += dqdci; // dwdot[ch3]/d[oh]
  J[386] -= dqdci; // dwdot[c4h8-1]/d[oh]
  J[389] += dqdci; // dwdot[c2h5cho]/d[oh]
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[4];
  J[2674] -= dqdci; // dwdot[oh]/d[c4h8-1]
  J[2679] += dqdci; // dwdot[ch3]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  J[2703] += dqdci; // dwdot[c2h5cho]/d[c4h8-1]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT
  J[7865] += dqdT; // dwdot[c2h5cho]/dT

  // reaction 398: c2h5cho + ch3 => c4h8-1 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[33];
  k_f = 49500 * exp(-(8524.49031873195) * invT);
  dlnkfdT = (8524.49031873195) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[9] -= q;  // ch3
  wdot[30] += q; // c4h8-1
  wdot[33] -= q; // c2h5cho
  // d()/d[ch3]
  dqdci = +k_f * sc[33];
  J[805] += dqdci; // dwdot[oh]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[831] += dqdci; // dwdot[c4h8-1]/d[ch3]
  J[834] -= dqdci; // dwdot[c2h5cho]/d[ch3]
  // d()/d[c2h5cho]
  dqdci = +k_f * sc[9];
  J[2941] += dqdci; // dwdot[oh]/d[c2h5cho]
  J[2946] -= dqdci; // dwdot[ch3]/d[c2h5cho]
  J[2967] += dqdci; // dwdot[c4h8-1]/d[c2h5cho]
  J[2970] -= dqdci; // dwdot[c2h5cho]/d[c2h5cho]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT
  J[7865] -= dqdT; // dwdot[c2h5cho]/dT

  // reaction 399: c4h8-1 + oh => c2h5co + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[30];
  k_f = 500000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[10] += q; // ch4
  wdot[30] -= q; // c4h8-1
  wdot[34] += q; // c2h5co
  // d()/d[oh]
  dqdci = +k_f * sc[30];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[366] += dqdci; // dwdot[ch4]/d[oh]
  J[386] -= dqdci; // dwdot[c4h8-1]/d[oh]
  J[390] += dqdci; // dwdot[c2h5co]/d[oh]
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[4];
  J[2674] -= dqdci; // dwdot[oh]/d[c4h8-1]
  J[2680] += dqdci; // dwdot[ch4]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  J[2704] += dqdci; // dwdot[c2h5co]/d[c4h8-1]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT
  J[7866] += dqdT; // dwdot[c2h5co]/dT

  // reaction 400: c2h5co + ch4 => c4h8-1 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[34];
  k_f = 22000000 * exp(-(17245.2351371277) * invT);
  dlnkfdT = (17245.2351371277) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[10] -= q; // ch4
  wdot[30] += q; // c4h8-1
  wdot[34] -= q; // c2h5co
  // d()/d[ch4]
  dqdci = +k_f * sc[34];
  J[894] += dqdci; // dwdot[oh]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[920] += dqdci; // dwdot[c4h8-1]/d[ch4]
  J[924] -= dqdci; // dwdot[c2h5co]/d[ch4]
  // d()/d[c2h5co]
  dqdci = +k_f * sc[10];
  J[3030] += dqdci; // dwdot[oh]/d[c2h5co]
  J[3036] -= dqdci; // dwdot[ch4]/d[c2h5co]
  J[3056] += dqdci; // dwdot[c4h8-1]/d[c2h5co]
  J[3060] -= dqdci; // dwdot[c2h5co]/d[c2h5co]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT
  J[7866] -= dqdT; // dwdot[c2h5co]/dT

  // reaction 401: c4h8-1 + ch3o2 => c4h7 + ch3o2h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[30] * sc[38];
  k_f = 1400000 * exp(-(7497.92832049032) * invT);
  dlnkfdT = (7497.92832049032) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[29] += q; // c4h7
  wdot[30] -= q; // c4h8-1
  wdot[38] -= q; // ch3o2
  wdot[39] += q; // ch3o2h
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[38];
  J[2699] += dqdci; // dwdot[c4h7]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  J[2708] -= dqdci; // dwdot[ch3o2]/d[c4h8-1]
  J[2709] += dqdci; // dwdot[ch3o2h]/d[c4h8-1]
  // d()/d[ch3o2]
  dqdci = +k_f * sc[30];
  J[3411] += dqdci; // dwdot[c4h7]/d[ch3o2]
  J[3412] -= dqdci; // dwdot[c4h8-1]/d[ch3o2]
  J[3420] -= dqdci; // dwdot[ch3o2]/d[ch3o2]
  J[3421] += dqdci; // dwdot[ch3o2h]/d[ch3o2]
  // d()/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT
  J[7870] -= dqdT; // dwdot[ch3o2]/dT
  J[7871] += dqdT; // dwdot[ch3o2h]/dT

  // reaction 402: c4h7 + ch3o2h => c4h8-1 + ch3o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[29] * sc[39];
  k_f = 316000 * exp(-(6541.81665546136) * invT);
  dlnkfdT = (6541.81665546136) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[29] -= q; // c4h7
  wdot[30] += q; // c4h8-1
  wdot[38] += q; // ch3o2
  wdot[39] -= q; // ch3o2h
  // d()/d[c4h7]
  dqdci = +k_f * sc[39];
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  J[2611] += dqdci; // dwdot[c4h8-1]/d[c4h7]
  J[2619] += dqdci; // dwdot[ch3o2]/d[c4h7]
  J[2620] -= dqdci; // dwdot[ch3o2h]/d[c4h7]
  // d()/d[ch3o2h]
  dqdci = +k_f * sc[29];
  J[3500] -= dqdci; // dwdot[c4h7]/d[ch3o2h]
  J[3501] += dqdci; // dwdot[c4h8-1]/d[ch3o2h]
  J[3509] += dqdci; // dwdot[ch3o2]/d[ch3o2h]
  J[3510] -= dqdci; // dwdot[ch3o2h]/d[ch3o2h]
  // d()/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT
  J[7870] += dqdT; // dwdot[ch3o2]/dT
  J[7871] -= dqdT; // dwdot[ch3o2h]/dT

  // reaction 403: c4h8ooh1-3o2 => c4h8ooh1-3 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[44];
  k_f = 5.601e+22 * exp(-2.23 * logT - (19102.1046339472) * invT);
  dlnkfdT = -2.23 * invT + (19102.1046339472) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[44] -= q; // c4h8ooh1-3o2
  wdot[45] += q; // c4h8ooh1-3
  // d()/d[c4h8ooh1-3o2]
  dqdci = +k_f;
  J[3919] += dqdci; // dwdot[o2]/d[c4h8ooh1-3o2]
  J[3960] -= dqdci; // dwdot[c4h8ooh1-3o2]/d[c4h8ooh1-3o2]
  J[3961] += dqdci; // dwdot[c4h8ooh1-3]/d[c4h8ooh1-3o2]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7876] -= dqdT; // dwdot[c4h8ooh1-3o2]/dT
  J[7877] += dqdT; // dwdot[c4h8ooh1-3]/dT

  // reaction 404: c4h8ooh1-3 + o2 => c4h8ooh1-3o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[45];
  k_f = 7540000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[44] += q; // c4h8ooh1-3o2
  wdot[45] -= q; // c4h8ooh1-3
  // d()/d[o2]
  dqdci = +k_f * sc[45];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[311] += dqdci; // dwdot[c4h8ooh1-3o2]/d[o2]
  J[312] -= dqdci; // dwdot[c4h8ooh1-3]/d[o2]
  // d()/d[c4h8ooh1-3]
  dqdci = +k_f * sc[3];
  J[4008] -= dqdci; // dwdot[o2]/d[c4h8ooh1-3]
  J[4049] += dqdci; // dwdot[c4h8ooh1-3o2]/d[c4h8ooh1-3]
  J[4050] -= dqdci; // dwdot[c4h8ooh1-3]/d[c4h8ooh1-3]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7876] += dqdT; // dwdot[c4h8ooh1-3o2]/dT
  J[7877] -= dqdT; // dwdot[c4h8ooh1-3]/dT

  // reaction 405: c4h8ooh1-3o2 => nc4ket13 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[44];
  k_f = 25000000000 * exp(-(10768.836648221) * invT);
  dlnkfdT = (10768.836648221) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[44] -= q; // c4h8ooh1-3o2
  wdot[51] += q; // nc4ket13
  // d()/d[c4h8ooh1-3o2]
  dqdci = +k_f;
  J[3920] += dqdci; // dwdot[oh]/d[c4h8ooh1-3o2]
  J[3960] -= dqdci; // dwdot[c4h8ooh1-3o2]/d[c4h8ooh1-3o2]
  J[3967] += dqdci; // dwdot[nc4ket13]/d[c4h8ooh1-3o2]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7876] -= dqdT; // dwdot[c4h8ooh1-3o2]/dT
  J[7883] += dqdT; // dwdot[nc4ket13]/dT

  // reaction 406: nc4ket13 + oh => c4h8ooh1-3o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[51];
  k_f = 0.006893 * exp(1.3 * logT - (22493.784961471) * invT);
  dlnkfdT = 1.3 * invT + (22493.784961471) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[44] += q; // c4h8ooh1-3o2
  wdot[51] -= q; // nc4ket13
  // d()/d[oh]
  dqdci = +k_f * sc[51];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[400] += dqdci; // dwdot[c4h8ooh1-3o2]/d[oh]
  J[407] -= dqdci; // dwdot[nc4ket13]/d[oh]
  // d()/d[nc4ket13]
  dqdci = +k_f * sc[4];
  J[4543] -= dqdci; // dwdot[oh]/d[nc4ket13]
  J[4583] += dqdci; // dwdot[c4h8ooh1-3o2]/d[nc4ket13]
  J[4590] -= dqdci; // dwdot[nc4ket13]/d[nc4ket13]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7876] += dqdT; // dwdot[c4h8ooh1-3o2]/dT
  J[7883] -= dqdT; // dwdot[nc4ket13]/dT

  // reaction 407: c4h8ooh1-3 => c3h6 + ch2o + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[45];
  k_f = 66370000000000 * exp(-0.16 * logT - (15046.1783075611) * invT);
  dlnkfdT = -0.16 * invT + (15046.1783075611) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[13] += q; // ch2o
  wdot[26] += q; // c3h6
  wdot[45] -= q; // c4h8ooh1-3
  // d()/d[c4h8ooh1-3]
  dqdci = +k_f;
  J[4009] += dqdci; // dwdot[oh]/d[c4h8ooh1-3]
  J[4018] += dqdci; // dwdot[ch2o]/d[c4h8ooh1-3]
  J[4031] += dqdci; // dwdot[c3h6]/d[c4h8ooh1-3]
  J[4050] -= dqdci; // dwdot[c4h8ooh1-3]/d[c4h8ooh1-3]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7877] -= dqdT; // dwdot[c4h8ooh1-3]/dT

  // reaction 408: pc4h9o2 => c4h8ooh1-3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[46];
  k_f = 25000000000 * exp(-(10492.0674820284) * invT);
  dlnkfdT = (10492.0674820284) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[45] += q; // c4h8ooh1-3
  wdot[46] -= q; // pc4h9o2
  // d()/d[pc4h9o2]
  dqdci = +k_f;
  J[4139] += dqdci; // dwdot[c4h8ooh1-3]/d[pc4h9o2]
  J[4140] -= dqdci; // dwdot[pc4h9o2]/d[pc4h9o2]
  // d()/dT
  J[7877] += dqdT; // dwdot[c4h8ooh1-3]/dT
  J[7878] -= dqdT; // dwdot[pc4h9o2]/dT

  // reaction 409: c4h8ooh1-3 => pc4h9o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[45];
  k_f = 3231000000 * exp(-0.14 * logT - (3960.81837654895) * invT);
  dlnkfdT = -0.14 * invT + (3960.81837654895) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[45] -= q; // c4h8ooh1-3
  wdot[46] += q; // pc4h9o2
  // d()/d[c4h8ooh1-3]
  dqdci = +k_f;
  J[4050] -= dqdci; // dwdot[c4h8ooh1-3]/d[c4h8ooh1-3]
  J[4051] += dqdci; // dwdot[pc4h9o2]/d[c4h8ooh1-3]
  // d()/dT
  J[7877] -= dqdT; // dwdot[c4h8ooh1-3]/dT
  J[7878] += dqdT; // dwdot[pc4h9o2]/dT

  // reaction 410: c2h5cho + ch3o2 => c2h5co + ch3o2h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[33] * sc[38];
  k_f = 3010000 * exp(-(5998.34265639226) * invT);
  dlnkfdT = (5998.34265639226) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[33] -= q; // c2h5cho
  wdot[34] += q; // c2h5co
  wdot[38] -= q; // ch3o2
  wdot[39] += q; // ch3o2h
  // d()/d[c2h5cho]
  dqdci = +k_f * sc[38];
  J[2970] -= dqdci; // dwdot[c2h5cho]/d[c2h5cho]
  J[2971] += dqdci; // dwdot[c2h5co]/d[c2h5cho]
  J[2975] -= dqdci; // dwdot[ch3o2]/d[c2h5cho]
  J[2976] += dqdci; // dwdot[ch3o2h]/d[c2h5cho]
  // d()/d[ch3o2]
  dqdci = +k_f * sc[33];
  J[3415] -= dqdci; // dwdot[c2h5cho]/d[ch3o2]
  J[3416] += dqdci; // dwdot[c2h5co]/d[ch3o2]
  J[3420] -= dqdci; // dwdot[ch3o2]/d[ch3o2]
  J[3421] += dqdci; // dwdot[ch3o2h]/d[ch3o2]
  // d()/dT
  J[7865] -= dqdT; // dwdot[c2h5cho]/dT
  J[7866] += dqdT; // dwdot[c2h5co]/dT
  J[7870] -= dqdT; // dwdot[ch3o2]/dT
  J[7871] += dqdT; // dwdot[ch3o2h]/dT

  // reaction 411: c2h5co + ch3o2h => c2h5cho + ch3o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[34] * sc[39];
  k_f = 23580000 * exp(-0.51 * logT - (4520.3953089238) * invT);
  dlnkfdT = -0.51 * invT + (4520.3953089238) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[33] += q; // c2h5cho
  wdot[34] -= q; // c2h5co
  wdot[38] += q; // ch3o2
  wdot[39] -= q; // ch3o2h
  // d()/d[c2h5co]
  dqdci = +k_f * sc[39];
  J[3059] += dqdci; // dwdot[c2h5cho]/d[c2h5co]
  J[3060] -= dqdci; // dwdot[c2h5co]/d[c2h5co]
  J[3064] += dqdci; // dwdot[ch3o2]/d[c2h5co]
  J[3065] -= dqdci; // dwdot[ch3o2h]/d[c2h5co]
  // d()/d[ch3o2h]
  dqdci = +k_f * sc[34];
  J[3504] += dqdci; // dwdot[c2h5cho]/d[ch3o2h]
  J[3505] -= dqdci; // dwdot[c2h5co]/d[ch3o2h]
  J[3509] += dqdci; // dwdot[ch3o2]/d[ch3o2h]
  J[3510] -= dqdci; // dwdot[ch3o2h]/d[ch3o2h]
  // d()/dT
  J[7865] += dqdT; // dwdot[c2h5cho]/dT
  J[7866] -= dqdT; // dwdot[c2h5co]/dT
  J[7870] += dqdT; // dwdot[ch3o2]/dT
  J[7871] -= dqdT; // dwdot[ch3o2h]/dT

  // reaction 412: c2h5cho + c4h7 => c2h5co + c4h8-1
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[29] * sc[33];
  k_f = 1700000 * exp(-(4247.14865939183) * invT);
  dlnkfdT = (4247.14865939183) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[29] -= q; // c4h7
  wdot[30] += q; // c4h8-1
  wdot[33] -= q; // c2h5cho
  wdot[34] += q; // c2h5co
  // d()/d[c4h7]
  dqdci = +k_f * sc[33];
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  J[2611] += dqdci; // dwdot[c4h8-1]/d[c4h7]
  J[2614] -= dqdci; // dwdot[c2h5cho]/d[c4h7]
  J[2615] += dqdci; // dwdot[c2h5co]/d[c4h7]
  // d()/d[c2h5cho]
  dqdci = +k_f * sc[29];
  J[2966] -= dqdci; // dwdot[c4h7]/d[c2h5cho]
  J[2967] += dqdci; // dwdot[c4h8-1]/d[c2h5cho]
  J[2970] -= dqdci; // dwdot[c2h5cho]/d[c2h5cho]
  J[2971] += dqdci; // dwdot[c2h5co]/d[c2h5cho]
  // d()/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT
  J[7865] -= dqdT; // dwdot[c2h5cho]/dT
  J[7866] += dqdT; // dwdot[c2h5co]/dT

  // reaction 413: c2h5co + c4h8-1 => c2h5cho + c4h7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[30] * sc[34];
  k_f = 10000000 * exp(-(14090.0666425322) * invT);
  dlnkfdT = (14090.0666425322) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[29] += q; // c4h7
  wdot[30] -= q; // c4h8-1
  wdot[33] += q; // c2h5cho
  wdot[34] -= q; // c2h5co
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[34];
  J[2699] += dqdci; // dwdot[c4h7]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  J[2703] += dqdci; // dwdot[c2h5cho]/d[c4h8-1]
  J[2704] -= dqdci; // dwdot[c2h5co]/d[c4h8-1]
  // d()/d[c2h5co]
  dqdci = +k_f * sc[30];
  J[3055] += dqdci; // dwdot[c4h7]/d[c2h5co]
  J[3056] -= dqdci; // dwdot[c4h8-1]/d[c2h5co]
  J[3059] += dqdci; // dwdot[c2h5cho]/d[c2h5co]
  J[3060] -= dqdci; // dwdot[c2h5co]/d[c2h5co]
  // d()/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT
  J[7865] += dqdT; // dwdot[c2h5cho]/dT
  J[7866] -= dqdT; // dwdot[c2h5co]/dT

  // reaction 414: c3h4-a + ho2 => c2h4 + co + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[25];
  k_f = 1000000 * exp(-(7045.03332126608) * invT);
  dlnkfdT = (7045.03332126608) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[6] += q;  // co
  wdot[11] -= q; // ho2
  wdot[16] += q; // c2h4
  wdot[25] -= q; // c3h4-a
  // d()/d[ho2]
  dqdci = +k_f * sc[25];
  J[983] += dqdci;  // dwdot[oh]/d[ho2]
  J[985] += dqdci;  // dwdot[co]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[995] += dqdci;  // dwdot[c2h4]/d[ho2]
  J[1004] -= dqdci; // dwdot[c3h4-a]/d[ho2]
  // d()/d[c3h4-a]
  dqdci = +k_f * sc[11];
  J[2229] += dqdci; // dwdot[oh]/d[c3h4-a]
  J[2231] += dqdci; // dwdot[co]/d[c3h4-a]
  J[2236] -= dqdci; // dwdot[ho2]/d[c3h4-a]
  J[2241] += dqdci; // dwdot[c2h4]/d[c3h4-a]
  J[2250] -= dqdci; // dwdot[c3h4-a]/d[c3h4-a]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7857] -= dqdT; // dwdot[c3h4-a]/dT

  // reaction 415: c2h4 + co + oh => c3h4-a + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[6] * sc[16];
  k_f = 1e-12;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[6] -= q;  // co
  wdot[11] += q; // ho2
  wdot[16] -= q; // c2h4
  wdot[25] += q; // c3h4-a
  // d()/d[oh]
  dqdci = +k_f * sc[6] * sc[16];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[362] -= dqdci; // dwdot[co]/d[oh]
  J[367] += dqdci; // dwdot[ho2]/d[oh]
  J[372] -= dqdci; // dwdot[c2h4]/d[oh]
  J[381] += dqdci; // dwdot[c3h4-a]/d[oh]
  // d()/d[co]
  dqdci = +k_f * sc[4] * sc[16];
  J[538] -= dqdci; // dwdot[oh]/d[co]
  J[540] -= dqdci; // dwdot[co]/d[co]
  J[545] += dqdci; // dwdot[ho2]/d[co]
  J[550] -= dqdci; // dwdot[c2h4]/d[co]
  J[559] += dqdci; // dwdot[c3h4-a]/d[co]
  // d()/d[c2h4]
  dqdci = +k_f * sc[4] * sc[6];
  J[1428] -= dqdci; // dwdot[oh]/d[c2h4]
  J[1430] -= dqdci; // dwdot[co]/d[c2h4]
  J[1435] += dqdci; // dwdot[ho2]/d[c2h4]
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1449] += dqdci; // dwdot[c3h4-a]/d[c2h4]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7857] += dqdT; // dwdot[c3h4-a]/dT

  // reaction 416: c3h4-a + ho2 => c3h3 + h2o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[25];
  k_f = 30000000 * exp(-(7045.03332126608) * invT);
  dlnkfdT = (7045.03332126608) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  wdot[25] -= q; // c3h4-a
  wdot[48] += q; // c3h3
  // d()/d[ho2]
  dqdci = +k_f * sc[25];
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[991] += dqdci;  // dwdot[h2o2]/d[ho2]
  J[1004] -= dqdci; // dwdot[c3h4-a]/d[ho2]
  J[1027] += dqdci; // dwdot[c3h3]/d[ho2]
  // d()/d[c3h4-a]
  dqdci = +k_f * sc[11];
  J[2236] -= dqdci; // dwdot[ho2]/d[c3h4-a]
  J[2237] += dqdci; // dwdot[h2o2]/d[c3h4-a]
  J[2250] -= dqdci; // dwdot[c3h4-a]/d[c3h4-a]
  J[2273] += dqdci; // dwdot[c3h3]/d[c3h4-a]
  // d()/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT
  J[7857] -= dqdT; // dwdot[c3h4-a]/dT
  J[7880] += dqdT; // dwdot[c3h3]/dT

  // reaction 417: c3h3 + h2o2 => c3h4-a + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[48];
  k_f = 15510000000 * exp(-1.38 * logT - (22141.5332954077) * invT);
  dlnkfdT = -1.38 * invT + (22141.5332954077) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // ho2
  wdot[12] -= q; // h2o2
  wdot[25] += q; // c3h4-a
  wdot[48] -= q; // c3h3
  // d()/d[h2o2]
  dqdci = +k_f * sc[48];
  J[1079] += dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci; // dwdot[h2o2]/d[h2o2]
  J[1093] += dqdci; // dwdot[c3h4-a]/d[h2o2]
  J[1116] -= dqdci; // dwdot[c3h3]/d[h2o2]
  // d()/d[c3h3]
  dqdci = +k_f * sc[12];
  J[4283] += dqdci; // dwdot[ho2]/d[c3h3]
  J[4284] -= dqdci; // dwdot[h2o2]/d[c3h3]
  J[4297] += dqdci; // dwdot[c3h4-a]/d[c3h3]
  J[4320] -= dqdci; // dwdot[c3h3]/d[c3h3]
  // d()/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT; // dwdot[h2o2]/dT
  J[7857] += dqdT; // dwdot[c3h4-a]/dT
  J[7880] -= dqdT; // dwdot[c3h3]/dT

  // reaction 418: c3h6 + o2 => c3h5-a + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[26];
  k_f = 4000000 * exp(-(20078.3449656083) * invT);
  dlnkfdT = (20078.3449656083) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[26] -= q; // c3h6
  wdot[47] += q; // c3h5-a
  // d()/d[o2]
  dqdci = +k_f * sc[26];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[293] -= dqdci; // dwdot[c3h6]/d[o2]
  J[314] += dqdci; // dwdot[c3h5-a]/d[o2]
  // d()/d[c3h6]
  dqdci = +k_f * sc[3];
  J[2317] -= dqdci; // dwdot[o2]/d[c3h6]
  J[2325] += dqdci; // dwdot[ho2]/d[c3h6]
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  J[2361] += dqdci; // dwdot[c3h5-a]/d[c3h6]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 419: c3h5-a + ho2 => c3h6 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[47];
  k_f = 33320 * exp(0.34 * logT - (-279.788466187424) * invT);
  dlnkfdT = 0.34 * invT + (-279.788466187424) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[26] += q; // c3h6
  wdot[47] -= q; // c3h5-a
  // d()/d[ho2]
  dqdci = +k_f * sc[47];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1005] += dqdci; // dwdot[c3h6]/d[ho2]
  J[1026] -= dqdci; // dwdot[c3h5-a]/d[ho2]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[11];
  J[4186] += dqdci; // dwdot[o2]/d[c3h5-a]
  J[4194] -= dqdci; // dwdot[ho2]/d[c3h5-a]
  J[4209] += dqdci; // dwdot[c3h6]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 420: c3h6 + ch3 => c3h5-a + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[26];
  k_f = 2.21e-06 * exp(3.5 * logT - (2855.75457844178) * invT);
  dlnkfdT = 3.5 * invT + (2855.75457844178) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[26] -= q; // c3h6
  wdot[47] += q; // c3h5-a
  // d()/d[ch3]
  dqdci = +k_f * sc[26];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[827] -= dqdci; // dwdot[c3h6]/d[ch3]
  J[848] += dqdci; // dwdot[c3h5-a]/d[ch3]
  // d()/d[c3h6]
  dqdci = +k_f * sc[9];
  J[2323] -= dqdci; // dwdot[ch3]/d[c3h6]
  J[2324] += dqdci; // dwdot[ch4]/d[c3h6]
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  J[2361] += dqdci; // dwdot[c3h5-a]/d[c3h6]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 421: c3h5-a + ch4 => c3h6 + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[47];
  k_f = 2.647e-05 * exp(3.51 * logT - (11664.5623133534) * invT);
  dlnkfdT = 3.51 * invT + (11664.5623133534) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[26] += q; // c3h6
  wdot[47] -= q; // c3h5-a
  // d()/d[ch4]
  dqdci = +k_f * sc[47];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[916] += dqdci; // dwdot[c3h6]/d[ch4]
  J[937] -= dqdci; // dwdot[c3h5-a]/d[ch4]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[10];
  J[4192] += dqdci; // dwdot[ch3]/d[c3h5-a]
  J[4193] -= dqdci; // dwdot[ch4]/d[c3h5-a]
  J[4209] += dqdci; // dwdot[c3h6]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 422: c2h5 + c3h6 => c2h6 + c3h5-a
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[26];
  k_f = 100000 * exp(-(4931.52332488625) * invT);
  dlnkfdT = (4931.52332488625) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[15] += q; // c2h6
  wdot[17] -= q; // c2h5
  wdot[26] -= q; // c3h6
  wdot[47] += q; // c3h5-a
  // d()/d[c2h5]
  dqdci = +k_f * sc[26];
  J[1528] += dqdci; // dwdot[c2h6]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1539] -= dqdci; // dwdot[c3h6]/d[c2h5]
  J[1560] += dqdci; // dwdot[c3h5-a]/d[c2h5]
  // d()/d[c3h6]
  dqdci = +k_f * sc[17];
  J[2329] += dqdci; // dwdot[c2h6]/d[c3h6]
  J[2331] -= dqdci; // dwdot[c2h5]/d[c3h6]
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  J[2361] += dqdci; // dwdot[c3h5-a]/d[c3h6]
  // d()/dT
  J[7847] += dqdT; // dwdot[c2h6]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 423: c2h6 + c3h5-a => c2h5 + c3h6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[47];
  k_f = 0.5369 * exp(1.33 * logT - (8272.88198582959) * invT);
  dlnkfdT = 1.33 * invT + (8272.88198582959) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[15] -= q; // c2h6
  wdot[17] += q; // c2h5
  wdot[26] += q; // c3h6
  wdot[47] -= q; // c3h5-a
  // d()/d[c2h6]
  dqdci = +k_f * sc[47];
  J[1350] -= dqdci; // dwdot[c2h6]/d[c2h6]
  J[1352] += dqdci; // dwdot[c2h5]/d[c2h6]
  J[1361] += dqdci; // dwdot[c3h6]/d[c2h6]
  J[1382] -= dqdci; // dwdot[c3h5-a]/d[c2h6]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[15];
  J[4198] -= dqdci; // dwdot[c2h6]/d[c3h5-a]
  J[4200] += dqdci; // dwdot[c2h5]/d[c3h5-a]
  J[4209] += dqdci; // dwdot[c3h6]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7847] -= dqdT; // dwdot[c2h6]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 424: c3h5-a + ho2 => c2h3 + ch2o + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[47];
  k_f = 1e-24;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[11] -= q; // ho2
  wdot[13] += q; // ch2o
  wdot[19] += q; // c2h3
  wdot[47] -= q; // c3h5-a
  // d()/d[ho2]
  dqdci = +k_f * sc[47];
  J[983] += dqdci;  // dwdot[oh]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[992] += dqdci;  // dwdot[ch2o]/d[ho2]
  J[998] += dqdci;  // dwdot[c2h3]/d[ho2]
  J[1026] -= dqdci; // dwdot[c3h5-a]/d[ho2]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[11];
  J[4187] += dqdci; // dwdot[oh]/d[c3h5-a]
  J[4194] -= dqdci; // dwdot[ho2]/d[c3h5-a]
  J[4196] += dqdci; // dwdot[ch2o]/d[c3h5-a]
  J[4202] += dqdci; // dwdot[c2h3]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 425: c2h3 + ch2o + oh => c3h5-a + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[13] * sc[19];
  k_f = 1e-42;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[11] += q; // ho2
  wdot[13] -= q; // ch2o
  wdot[19] -= q; // c2h3
  wdot[47] += q; // c3h5-a
  // d()/d[oh]
  dqdci = +k_f * sc[13] * sc[19];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[367] += dqdci; // dwdot[ho2]/d[oh]
  J[369] -= dqdci; // dwdot[ch2o]/d[oh]
  J[375] -= dqdci; // dwdot[c2h3]/d[oh]
  J[403] += dqdci; // dwdot[c3h5-a]/d[oh]
  // d()/d[ch2o]
  dqdci = +k_f * sc[4] * sc[19];
  J[1161] -= dqdci; // dwdot[oh]/d[ch2o]
  J[1168] += dqdci; // dwdot[ho2]/d[ch2o]
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  J[1176] -= dqdci; // dwdot[c2h3]/d[ch2o]
  J[1204] += dqdci; // dwdot[c3h5-a]/d[ch2o]
  // d()/d[c2h3]
  dqdci = +k_f * sc[4] * sc[13];
  J[1695] -= dqdci; // dwdot[oh]/d[c2h3]
  J[1702] += dqdci; // dwdot[ho2]/d[c2h3]
  J[1704] -= dqdci; // dwdot[ch2o]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  J[1738] += dqdci; // dwdot[c3h5-a]/d[c2h3]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 426: c3h5-a + h => c3h4-a + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[47];
  k_f = 18100000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[25] += q; // c3h4-a
  wdot[47] -= q; // c3h5-a
  // d()/d[h]
  dqdci = +k_f * sc[47];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[25] += dqdci; // dwdot[c3h4-a]/d[h]
  J[47] -= dqdci; // dwdot[c3h5-a]/d[h]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[0];
  J[4183] -= dqdci; // dwdot[h]/d[c3h5-a]
  J[4184] += dqdci; // dwdot[h2]/d[c3h5-a]
  J[4208] += dqdci; // dwdot[c3h4-a]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7857] += dqdT; // dwdot[c3h4-a]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 427: c3h4-a + h2 => c3h5-a + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[25];
  k_f = 12300000 * exp(0.12 * logT - (23766.9231259569) * invT);
  dlnkfdT = 0.12 * invT + (23766.9231259569) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[25] -= q; // c3h4-a
  wdot[47] += q; // c3h5-a
  // d()/d[h2]
  dqdci = +k_f * sc[25];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[114] -= dqdci; // dwdot[c3h4-a]/d[h2]
  J[136] += dqdci; // dwdot[c3h5-a]/d[h2]
  // d()/d[c3h4-a]
  dqdci = +k_f * sc[1];
  J[2225] += dqdci; // dwdot[h]/d[c3h4-a]
  J[2226] -= dqdci; // dwdot[h2]/d[c3h4-a]
  J[2250] -= dqdci; // dwdot[c3h4-a]/d[c3h4-a]
  J[2272] += dqdci; // dwdot[c3h5-a]/d[c3h4-a]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7857] -= dqdT; // dwdot[c3h4-a]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 428: c3h5-a + ch3 => c3h4-a + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[47];
  k_f = 100000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[25] += q; // c3h4-a
  wdot[47] -= q; // c3h5-a
  // d()/d[ch3]
  dqdci = +k_f * sc[47];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[826] += dqdci; // dwdot[c3h4-a]/d[ch3]
  J[848] -= dqdci; // dwdot[c3h5-a]/d[ch3]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[9];
  J[4192] -= dqdci; // dwdot[ch3]/d[c3h5-a]
  J[4193] += dqdci; // dwdot[ch4]/d[c3h5-a]
  J[4208] += dqdci; // dwdot[c3h4-a]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7857] += dqdT; // dwdot[c3h4-a]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 429: c3h4-a + ch4 => c3h5-a + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[25];
  k_f = 4921000 * exp(0.05 * logT - (24043.6922921495) * invT);
  dlnkfdT = 0.05 * invT + (24043.6922921495) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[25] -= q; // c3h4-a
  wdot[47] += q; // c3h5-a
  // d()/d[ch4]
  dqdci = +k_f * sc[25];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[915] -= dqdci; // dwdot[c3h4-a]/d[ch4]
  J[937] += dqdci; // dwdot[c3h5-a]/d[ch4]
  // d()/d[c3h4-a]
  dqdci = +k_f * sc[10];
  J[2234] += dqdci; // dwdot[ch3]/d[c3h4-a]
  J[2235] -= dqdci; // dwdot[ch4]/d[c3h4-a]
  J[2250] -= dqdci; // dwdot[c3h4-a]/d[c3h4-a]
  J[2272] += dqdci; // dwdot[c3h5-a]/d[c3h4-a]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7857] -= dqdT; // dwdot[c3h4-a]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 430: c2h5 + c3h5-a => c2h6 + c3h4-a
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[47];
  k_f = 400000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[15] += q; // c2h6
  wdot[17] -= q; // c2h5
  wdot[25] += q; // c3h4-a
  wdot[47] -= q; // c3h5-a
  // d()/d[c2h5]
  dqdci = +k_f * sc[47];
  J[1528] += dqdci; // dwdot[c2h6]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1538] += dqdci; // dwdot[c3h4-a]/d[c2h5]
  J[1560] -= dqdci; // dwdot[c3h5-a]/d[c2h5]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[17];
  J[4198] += dqdci; // dwdot[c2h6]/d[c3h5-a]
  J[4200] -= dqdci; // dwdot[c2h5]/d[c3h5-a]
  J[4208] += dqdci; // dwdot[c3h4-a]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7847] += dqdT; // dwdot[c2h6]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7857] += dqdT; // dwdot[c3h4-a]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 431: c2h6 + c3h4-a => c2h5 + c3h5-a
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[25];
  k_f = 1802000 * exp(0.05 * logT - (20294.7281319043) * invT);
  dlnkfdT = 0.05 * invT + (20294.7281319043) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[15] -= q; // c2h6
  wdot[17] += q; // c2h5
  wdot[25] -= q; // c3h4-a
  wdot[47] += q; // c3h5-a
  // d()/d[c2h6]
  dqdci = +k_f * sc[25];
  J[1350] -= dqdci; // dwdot[c2h6]/d[c2h6]
  J[1352] += dqdci; // dwdot[c2h5]/d[c2h6]
  J[1360] -= dqdci; // dwdot[c3h4-a]/d[c2h6]
  J[1382] += dqdci; // dwdot[c3h5-a]/d[c2h6]
  // d()/d[c3h4-a]
  dqdci = +k_f * sc[15];
  J[2240] -= dqdci; // dwdot[c2h6]/d[c3h4-a]
  J[2242] += dqdci; // dwdot[c2h5]/d[c3h4-a]
  J[2250] -= dqdci; // dwdot[c3h4-a]/d[c3h4-a]
  J[2272] += dqdci; // dwdot[c3h5-a]/d[c3h4-a]
  // d()/dT
  J[7847] -= dqdT; // dwdot[c2h6]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7857] -= dqdT; // dwdot[c3h4-a]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 432: c2h5 + c3h5-a => c2h4 + c3h6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[47];
  k_f = 400000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] += q; // c2h4
  wdot[17] -= q; // c2h5
  wdot[26] += q; // c3h6
  wdot[47] -= q; // c3h5-a
  // d()/d[c2h5]
  dqdci = +k_f * sc[47];
  J[1529] += dqdci; // dwdot[c2h4]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1539] += dqdci; // dwdot[c3h6]/d[c2h5]
  J[1560] -= dqdci; // dwdot[c3h5-a]/d[c2h5]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[17];
  J[4199] += dqdci; // dwdot[c2h4]/d[c3h5-a]
  J[4200] -= dqdci; // dwdot[c2h5]/d[c3h5-a]
  J[4209] += dqdci; // dwdot[c3h6]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 433: c2h4 + c3h6 => c2h5 + c3h5-a
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[26];
  k_f = 69370000000 * exp(-1.33 * logT - (26569.8399544892) * invT);
  dlnkfdT = -1.33 * invT + (26569.8399544892) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] -= q; // c2h4
  wdot[17] += q; // c2h5
  wdot[26] -= q; // c3h6
  wdot[47] += q; // c3h5-a
  // d()/d[c2h4]
  dqdci = +k_f * sc[26];
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1441] += dqdci; // dwdot[c2h5]/d[c2h4]
  J[1450] -= dqdci; // dwdot[c3h6]/d[c2h4]
  J[1471] += dqdci; // dwdot[c3h5-a]/d[c2h4]
  // d()/d[c3h6]
  dqdci = +k_f * sc[16];
  J[2330] -= dqdci; // dwdot[c2h4]/d[c3h6]
  J[2331] += dqdci; // dwdot[c2h5]/d[c3h6]
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  J[2361] += dqdci; // dwdot[c3h5-a]/d[c3h6]
  // d()/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 434: c2h3 + c3h5-a => c2h4 + c3h4-a
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[47];
  k_f = 1000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] += q; // c2h4
  wdot[19] -= q; // c2h3
  wdot[25] += q; // c3h4-a
  wdot[47] -= q; // c3h5-a
  // d()/d[c2h3]
  dqdci = +k_f * sc[47];
  J[1707] += dqdci; // dwdot[c2h4]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  J[1716] += dqdci; // dwdot[c3h4-a]/d[c2h3]
  J[1738] -= dqdci; // dwdot[c3h5-a]/d[c2h3]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[19];
  J[4199] += dqdci; // dwdot[c2h4]/d[c3h5-a]
  J[4202] -= dqdci; // dwdot[c2h3]/d[c3h5-a]
  J[4208] += dqdci; // dwdot[c3h4-a]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT
  J[7857] += dqdT; // dwdot[c3h4-a]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 435: c2h4 + c3h4-a => c2h3 + c3h5-a
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[25];
  k_f = 16240000 * exp(0.05 * logT - (24250.0111251294) * invT);
  dlnkfdT = 0.05 * invT + (24250.0111251294) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] -= q; // c2h4
  wdot[19] += q; // c2h3
  wdot[25] -= q; // c3h4-a
  wdot[47] += q; // c3h5-a
  // d()/d[c2h4]
  dqdci = +k_f * sc[25];
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1443] += dqdci; // dwdot[c2h3]/d[c2h4]
  J[1449] -= dqdci; // dwdot[c3h4-a]/d[c2h4]
  J[1471] += dqdci; // dwdot[c3h5-a]/d[c2h4]
  // d()/d[c3h4-a]
  dqdci = +k_f * sc[16];
  J[2241] -= dqdci; // dwdot[c2h4]/d[c3h4-a]
  J[2244] += dqdci; // dwdot[c2h3]/d[c3h4-a]
  J[2250] -= dqdci; // dwdot[c3h4-a]/d[c3h4-a]
  J[2272] += dqdci; // dwdot[c3h5-a]/d[c3h4-a]
  // d()/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT
  J[7857] -= dqdT; // dwdot[c3h4-a]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 436: c3h4-a + c3h6 => 2 c3h5-a
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[25] * sc[26];
  k_f = 839100000000 * exp(-1.29 * logT - (16953.369470961) * invT);
  dlnkfdT = -1.29 * invT + (16953.369470961) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[25] -= q;     // c3h4-a
  wdot[26] -= q;     // c3h6
  wdot[47] += 2 * q; // c3h5-a
  // d()/d[c3h4-a]
  dqdci = +k_f * sc[26];
  J[2250] -= dqdci;     // dwdot[c3h4-a]/d[c3h4-a]
  J[2251] -= dqdci;     // dwdot[c3h6]/d[c3h4-a]
  J[2272] += 2 * dqdci; // dwdot[c3h5-a]/d[c3h4-a]
  // d()/d[c3h6]
  dqdci = +k_f * sc[25];
  J[2339] -= dqdci;     // dwdot[c3h4-a]/d[c3h6]
  J[2340] -= dqdci;     // dwdot[c3h6]/d[c3h6]
  J[2361] += 2 * dqdci; // dwdot[c3h5-a]/d[c3h6]
  // d()/dT
  J[7857] -= dqdT;     // dwdot[c3h4-a]/dT
  J[7858] -= dqdT;     // dwdot[c3h6]/dT
  J[7879] += 2 * dqdT; // dwdot[c3h5-a]/dT

  // reaction 437: 2 c3h5-a => c3h4-a + c3h6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[47] * sc[47]);
  k_f = 1000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[25] += q;     // c3h4-a
  wdot[26] += q;     // c3h6
  wdot[47] -= 2 * q; // c3h5-a
  // d()/d[c3h5-a]
  dqdci = +k_f * 2.000000 * sc[47];
  J[4208] += dqdci;      // dwdot[c3h4-a]/d[c3h5-a]
  J[4209] += dqdci;      // dwdot[c3h6]/d[c3h5-a]
  J[4230] += -2 * dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7857] += dqdT;      // dwdot[c3h4-a]/dT
  J[7858] += dqdT;      // dwdot[c3h6]/dT
  J[7879] += -2 * dqdT; // dwdot[c3h5-a]/dT

  // reaction 438: c3h5-a + o2 => c2h3cho + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[47];
  k_f = 24700000 * exp(-0.44 * logT - (11584.0476468246) * invT);
  dlnkfdT = -0.44 * invT + (11584.0476468246) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[4] += q;  // oh
  wdot[41] += q; // c2h3cho
  wdot[47] -= q; // c3h5-a
  // d()/d[o2]
  dqdci = +k_f * sc[47];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[271] += dqdci; // dwdot[oh]/d[o2]
  J[308] += dqdci; // dwdot[c2h3cho]/d[o2]
  J[314] -= dqdci; // dwdot[c3h5-a]/d[o2]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[3];
  J[4186] -= dqdci; // dwdot[o2]/d[c3h5-a]
  J[4187] += dqdci; // dwdot[oh]/d[c3h5-a]
  J[4224] += dqdci; // dwdot[c2h3cho]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7873] += dqdT; // dwdot[c2h3cho]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 439: c2h3cho + oh => c3h5-a + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[41];
  k_f = 190300000 * exp(-0.8 * logT - (37680.8639354574) * invT);
  dlnkfdT = -0.8 * invT + (37680.8639354574) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[4] -= q;  // oh
  wdot[41] -= q; // c2h3cho
  wdot[47] += q; // c3h5-a
  // d()/d[oh]
  dqdci = +k_f * sc[41];
  J[359] += dqdci; // dwdot[o2]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[397] -= dqdci; // dwdot[c2h3cho]/d[oh]
  J[403] += dqdci; // dwdot[c3h5-a]/d[oh]
  // d()/d[c2h3cho]
  dqdci = +k_f * sc[4];
  J[3652] += dqdci; // dwdot[o2]/d[c2h3cho]
  J[3653] -= dqdci; // dwdot[oh]/d[c2h3cho]
  J[3690] -= dqdci; // dwdot[c2h3cho]/d[c2h3cho]
  J[3696] += dqdci; // dwdot[c3h5-a]/d[c2h3cho]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7873] -= dqdT; // dwdot[c2h3cho]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 442: c3h4-a + o2 => c3h3 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[25];
  k_f = 40000000 * exp(-(19705.9646329128) * invT);
  dlnkfdT = (19705.9646329128) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[25] -= q; // c3h4-a
  wdot[48] += q; // c3h3
  // d()/d[o2]
  dqdci = +k_f * sc[25];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[292] -= dqdci; // dwdot[c3h4-a]/d[o2]
  J[315] += dqdci; // dwdot[c3h3]/d[o2]
  // d()/d[c3h4-a]
  dqdci = +k_f * sc[3];
  J[2228] -= dqdci; // dwdot[o2]/d[c3h4-a]
  J[2236] += dqdci; // dwdot[ho2]/d[c3h4-a]
  J[2250] -= dqdci; // dwdot[c3h4-a]/d[c3h4-a]
  J[2273] += dqdci; // dwdot[c3h3]/d[c3h4-a]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7857] -= dqdT; // dwdot[c3h4-a]/dT
  J[7880] += dqdT; // dwdot[c3h3]/dT

  // reaction 443: c3h3 + ho2 => c3h4-a + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[48];
  k_f = 117500 * exp(0.3 * logT - (19.1222333005793) * invT);
  dlnkfdT = 0.3 * invT + (19.1222333005793) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[25] += q; // c3h4-a
  wdot[48] -= q; // c3h3
  // d()/d[ho2]
  dqdci = +k_f * sc[48];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1004] += dqdci; // dwdot[c3h4-a]/d[ho2]
  J[1027] -= dqdci; // dwdot[c3h3]/d[ho2]
  // d()/d[c3h3]
  dqdci = +k_f * sc[11];
  J[4275] += dqdci; // dwdot[o2]/d[c3h3]
  J[4283] -= dqdci; // dwdot[ho2]/d[c3h3]
  J[4297] += dqdci; // dwdot[c3h4-a]/d[c3h3]
  J[4320] -= dqdci; // dwdot[c3h3]/d[c3h3]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7857] += dqdT; // dwdot[c3h4-a]/dT
  J[7880] -= dqdT; // dwdot[c3h3]/dT

  // reaction 444: c3h3 + h => c3h2 + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[48];
  k_f = 50000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[48] -= q; // c3h3
  wdot[49] += q; // c3h2
  // d()/d[h]
  dqdci = +k_f * sc[48];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[48] -= dqdci; // dwdot[c3h3]/d[h]
  J[49] += dqdci; // dwdot[c3h2]/d[h]
  // d()/d[c3h3]
  dqdci = +k_f * sc[0];
  J[4272] -= dqdci; // dwdot[h]/d[c3h3]
  J[4273] += dqdci; // dwdot[h2]/d[c3h3]
  J[4320] -= dqdci; // dwdot[c3h3]/d[c3h3]
  J[4321] += dqdci; // dwdot[c3h2]/d[c3h3]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7880] -= dqdT; // dwdot[c3h3]/dT
  J[7881] += dqdT; // dwdot[c3h2]/dT

  // reaction 445: c3h2 + h2 => c3h3 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[49];
  k_f = 38530 * exp(0.38 * logT - (2314.79666270171) * invT);
  dlnkfdT = 0.38 * invT + (2314.79666270171) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[48] += q; // c3h3
  wdot[49] -= q; // c3h2
  // d()/d[h2]
  dqdci = +k_f * sc[49];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[137] += dqdci; // dwdot[c3h3]/d[h2]
  J[138] -= dqdci; // dwdot[c3h2]/d[h2]
  // d()/d[c3h2]
  dqdci = +k_f * sc[1];
  J[4361] += dqdci; // dwdot[h]/d[c3h2]
  J[4362] -= dqdci; // dwdot[h2]/d[c3h2]
  J[4409] += dqdci; // dwdot[c3h3]/d[c3h2]
  J[4410] -= dqdci; // dwdot[c3h2]/d[c3h2]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7880] += dqdT; // dwdot[c3h3]/dT
  J[7881] -= dqdT; // dwdot[c3h2]/dT

  // reaction 446: c3h4-a + oh => c3h3 + h2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[25];
  k_f = 10 * exp(2 * logT - (503.21666580472) * invT);
  dlnkfdT = 2 * invT + (503.21666580472) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[25] -= q; // c3h4-a
  wdot[48] += q; // c3h3
  // d()/d[oh]
  dqdci = +k_f * sc[25];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[381] -= dqdci; // dwdot[c3h4-a]/d[oh]
  J[404] += dqdci; // dwdot[c3h3]/d[oh]
  // d()/d[c3h4-a]
  dqdci = +k_f * sc[4];
  J[2229] -= dqdci; // dwdot[oh]/d[c3h4-a]
  J[2230] += dqdci; // dwdot[h2o]/d[c3h4-a]
  J[2250] -= dqdci; // dwdot[c3h4-a]/d[c3h4-a]
  J[2273] += dqdci; // dwdot[c3h3]/d[c3h4-a]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7857] -= dqdT; // dwdot[c3h4-a]/dT
  J[7880] += dqdT; // dwdot[c3h3]/dT

  // reaction 447: c3h3 + h2o => c3h4-a + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[48];
  k_f = 7.003 * exp(1.97 * logT - (17371.0393035789) * invT);
  dlnkfdT = 1.97 * invT + (17371.0393035789) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[25] += q; // c3h4-a
  wdot[48] -= q; // c3h3
  // d()/d[h2o]
  dqdci = +k_f * sc[48];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[470] += dqdci; // dwdot[c3h4-a]/d[h2o]
  J[493] -= dqdci; // dwdot[c3h3]/d[h2o]
  // d()/d[c3h3]
  dqdci = +k_f * sc[5];
  J[4276] += dqdci; // dwdot[oh]/d[c3h3]
  J[4277] -= dqdci; // dwdot[h2o]/d[c3h3]
  J[4297] += dqdci; // dwdot[c3h4-a]/d[c3h3]
  J[4320] -= dqdci; // dwdot[c3h3]/d[c3h3]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7857] += dqdT; // dwdot[c3h4-a]/dT
  J[7880] -= dqdT; // dwdot[c3h3]/dT

  // reaction 448: c3h4-a + o => c2h4 + co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[25];
  k_f = 7800000 * exp(-(805.146665287552) * invT);
  dlnkfdT = (805.146665287552) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[6] += q;  // co
  wdot[16] += q; // c2h4
  wdot[25] -= q; // c3h4-a
  // d()/d[o]
  dqdci = +k_f * sc[25];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[184] += dqdci; // dwdot[co]/d[o]
  J[194] += dqdci; // dwdot[c2h4]/d[o]
  J[203] -= dqdci; // dwdot[c3h4-a]/d[o]
  // d()/d[c3h4-a]
  dqdci = +k_f * sc[2];
  J[2227] -= dqdci; // dwdot[o]/d[c3h4-a]
  J[2231] += dqdci; // dwdot[co]/d[c3h4-a]
  J[2241] += dqdci; // dwdot[c2h4]/d[c3h4-a]
  J[2250] -= dqdci; // dwdot[c3h4-a]/d[c3h4-a]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7857] -= dqdT; // dwdot[c3h4-a]/dT

  // reaction 449: c2h4 + co => c3h4-a + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[16];
  k_f = 82800000 * exp(-0.21 * logT - (62801.439892429) * invT);
  dlnkfdT = -0.21 * invT + (62801.439892429) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[6] -= q;  // co
  wdot[16] -= q; // c2h4
  wdot[25] += q; // c3h4-a
  // d()/d[co]
  dqdci = +k_f * sc[16];
  J[536] += dqdci; // dwdot[o]/d[co]
  J[540] -= dqdci; // dwdot[co]/d[co]
  J[550] -= dqdci; // dwdot[c2h4]/d[co]
  J[559] += dqdci; // dwdot[c3h4-a]/d[co]
  // d()/d[c2h4]
  dqdci = +k_f * sc[6];
  J[1426] += dqdci; // dwdot[o]/d[c2h4]
  J[1430] -= dqdci; // dwdot[co]/d[c2h4]
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1449] += dqdci; // dwdot[c3h4-a]/d[c2h4]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7857] += dqdT; // dwdot[c3h4-a]/dT

  // reaction 450: c3h2 + oh => c2h2 + hco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[49];
  k_f = 50000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[7] += q;  // hco
  wdot[18] += q; // c2h2
  wdot[49] -= q; // c3h2
  // d()/d[oh]
  dqdci = +k_f * sc[49];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[363] += dqdci; // dwdot[hco]/d[oh]
  J[374] += dqdci; // dwdot[c2h2]/d[oh]
  J[405] -= dqdci; // dwdot[c3h2]/d[oh]
  // d()/d[c3h2]
  dqdci = +k_f * sc[4];
  J[4365] -= dqdci; // dwdot[oh]/d[c3h2]
  J[4368] += dqdci; // dwdot[hco]/d[c3h2]
  J[4379] += dqdci; // dwdot[c2h2]/d[c3h2]
  J[4410] -= dqdci; // dwdot[c3h2]/d[c3h2]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7839] += dqdT; // dwdot[hco]/dT
  J[7850] += dqdT; // dwdot[c2h2]/dT
  J[7881] -= dqdT; // dwdot[c3h2]/dT

  // reaction 451: c2h2 + hco => c3h2 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[18];
  k_f = 290700000000000 * exp(-1.39 * logT - (39512.5725989866) * invT);
  dlnkfdT = -1.39 * invT + (39512.5725989866) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[7] -= q;  // hco
  wdot[18] -= q; // c2h2
  wdot[49] += q; // c3h2
  // d()/d[hco]
  dqdci = +k_f * sc[18];
  J[627] += dqdci; // dwdot[oh]/d[hco]
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  J[641] -= dqdci; // dwdot[c2h2]/d[hco]
  J[672] += dqdci; // dwdot[c3h2]/d[hco]
  // d()/d[c2h2]
  dqdci = +k_f * sc[7];
  J[1606] += dqdci; // dwdot[oh]/d[c2h2]
  J[1609] -= dqdci; // dwdot[hco]/d[c2h2]
  J[1620] -= dqdci; // dwdot[c2h2]/d[c2h2]
  J[1651] += dqdci; // dwdot[c3h2]/d[c2h2]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7839] -= dqdT; // dwdot[hco]/dT
  J[7850] -= dqdT; // dwdot[c2h2]/dT
  J[7881] += dqdT; // dwdot[c3h2]/dT

  // reaction 452: c3h5-a => c3h4-a + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[47];
  k_f = 6.663e+15 * exp(-0.43 * logT - (31813.3576121744) * invT);
  dlnkfdT = -0.43 * invT + (31813.3576121744) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[25] += q; // c3h4-a
  wdot[47] -= q; // c3h5-a
  // d()/d[c3h5-a]
  dqdci = +k_f;
  J[4183] += dqdci; // dwdot[h]/d[c3h5-a]
  J[4208] += dqdci; // dwdot[c3h4-a]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7857] += dqdT; // dwdot[c3h4-a]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 453: c3h4-a + h => c3h5-a
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[25];
  k_f = 240000 * exp(0.69 * logT - (1513.17251407479) * invT);
  dlnkfdT = 0.69 * invT + (1513.17251407479) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[25] -= q; // c3h4-a
  wdot[47] += q; // c3h5-a
  // d()/d[h]
  dqdci = +k_f * sc[25];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[25] -= dqdci; // dwdot[c3h4-a]/d[h]
  J[47] += dqdci; // dwdot[c3h5-a]/d[h]
  // d()/d[c3h4-a]
  dqdci = +k_f * sc[0];
  J[2225] -= dqdci; // dwdot[h]/d[c3h4-a]
  J[2250] -= dqdci; // dwdot[c3h4-a]/d[c3h4-a]
  J[2272] += dqdci; // dwdot[c3h5-a]/d[c3h4-a]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7857] -= dqdT; // dwdot[c3h4-a]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 454: c3h4-a + h => c3h3 + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[25];
  k_f = 20 * exp(2 * logT - (2516.0833290236) * invT);
  dlnkfdT = 2 * invT + (2516.0833290236) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[25] -= q; // c3h4-a
  wdot[48] += q; // c3h3
  // d()/d[h]
  dqdci = +k_f * sc[25];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[25] -= dqdci; // dwdot[c3h4-a]/d[h]
  J[48] += dqdci; // dwdot[c3h3]/d[h]
  // d()/d[c3h4-a]
  dqdci = +k_f * sc[0];
  J[2225] -= dqdci; // dwdot[h]/d[c3h4-a]
  J[2226] += dqdci; // dwdot[h2]/d[c3h4-a]
  J[2250] -= dqdci; // dwdot[c3h4-a]/d[c3h4-a]
  J[2273] += dqdci; // dwdot[c3h3]/d[c3h4-a]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7857] -= dqdT; // dwdot[c3h4-a]/dT
  J[7880] += dqdT; // dwdot[c3h3]/dT

  // reaction 455: c3h3 + h2 => c3h4-a + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[48];
  k_f = 3.235 * exp(1.97 * logT - (11755.1413131983) * invT);
  dlnkfdT = 1.97 * invT + (11755.1413131983) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[25] += q; // c3h4-a
  wdot[48] -= q; // c3h3
  // d()/d[h2]
  dqdci = +k_f * sc[48];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[114] += dqdci; // dwdot[c3h4-a]/d[h2]
  J[137] -= dqdci; // dwdot[c3h3]/d[h2]
  // d()/d[c3h3]
  dqdci = +k_f * sc[1];
  J[4272] += dqdci; // dwdot[h]/d[c3h3]
  J[4273] -= dqdci; // dwdot[h2]/d[c3h3]
  J[4297] += dqdci; // dwdot[c3h4-a]/d[c3h3]
  J[4320] -= dqdci; // dwdot[c3h3]/d[c3h3]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7857] += dqdT; // dwdot[c3h4-a]/dT
  J[7880] -= dqdT; // dwdot[c3h3]/dT

  // reaction 456: c3h4-a + ch3 => c3h3 + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[25];
  k_f = 3.67e-08 * exp(4.01 * logT - (3436.96982744624) * invT);
  dlnkfdT = 4.01 * invT + (3436.96982744624) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[25] -= q; // c3h4-a
  wdot[48] += q; // c3h3
  // d()/d[ch3]
  dqdci = +k_f * sc[25];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[826] -= dqdci; // dwdot[c3h4-a]/d[ch3]
  J[849] += dqdci; // dwdot[c3h3]/d[ch3]
  // d()/d[c3h4-a]
  dqdci = +k_f * sc[9];
  J[2234] -= dqdci; // dwdot[ch3]/d[c3h4-a]
  J[2235] += dqdci; // dwdot[ch4]/d[c3h4-a]
  J[2250] -= dqdci; // dwdot[c3h4-a]/d[c3h4-a]
  J[2273] += dqdci; // dwdot[c3h3]/d[c3h4-a]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7857] -= dqdT; // dwdot[c3h4-a]/dT
  J[7880] += dqdT; // dwdot[c3h3]/dT

  // reaction 457: c3h3 + ch4 => c3h4-a + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[48];
  k_f = 1.551e-07 * exp(3.98 * logT - (12917.5718112072) * invT);
  dlnkfdT = 3.98 * invT + (12917.5718112072) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[25] += q; // c3h4-a
  wdot[48] -= q; // c3h3
  // d()/d[ch4]
  dqdci = +k_f * sc[48];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[915] += dqdci; // dwdot[c3h4-a]/d[ch4]
  J[938] -= dqdci; // dwdot[c3h3]/d[ch4]
  // d()/d[c3h3]
  dqdci = +k_f * sc[10];
  J[4281] += dqdci; // dwdot[ch3]/d[c3h3]
  J[4282] -= dqdci; // dwdot[ch4]/d[c3h3]
  J[4297] += dqdci; // dwdot[c3h4-a]/d[c3h3]
  J[4320] -= dqdci; // dwdot[c3h3]/d[c3h3]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7857] += dqdT; // dwdot[c3h4-a]/dT
  J[7880] -= dqdT; // dwdot[c3h3]/dT

  // reaction 458: c3h4-a + c3h5-a => c3h3 + c3h6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[25] * sc[47];
  k_f = 200000 * exp(-(3874.76832669634) * invT);
  dlnkfdT = (3874.76832669634) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[25] -= q; // c3h4-a
  wdot[26] += q; // c3h6
  wdot[47] -= q; // c3h5-a
  wdot[48] += q; // c3h3
  // d()/d[c3h4-a]
  dqdci = +k_f * sc[47];
  J[2250] -= dqdci; // dwdot[c3h4-a]/d[c3h4-a]
  J[2251] += dqdci; // dwdot[c3h6]/d[c3h4-a]
  J[2272] -= dqdci; // dwdot[c3h5-a]/d[c3h4-a]
  J[2273] += dqdci; // dwdot[c3h3]/d[c3h4-a]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[25];
  J[4208] -= dqdci; // dwdot[c3h4-a]/d[c3h5-a]
  J[4209] += dqdci; // dwdot[c3h6]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  J[4231] += dqdci; // dwdot[c3h3]/d[c3h5-a]
  // d()/dT
  J[7857] -= dqdT; // dwdot[c3h4-a]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT
  J[7880] += dqdT; // dwdot[c3h3]/dT

  // reaction 459: c3h3 + c3h6 => c3h4-a + c3h5-a
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[26] * sc[48];
  k_f = 26440000000000 * exp(-2.71 * logT - (21205.5502970109) * invT);
  dlnkfdT = -2.71 * invT + (21205.5502970109) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[25] += q; // c3h4-a
  wdot[26] -= q; // c3h6
  wdot[47] += q; // c3h5-a
  wdot[48] -= q; // c3h3
  // d()/d[c3h6]
  dqdci = +k_f * sc[48];
  J[2339] += dqdci; // dwdot[c3h4-a]/d[c3h6]
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  J[2361] += dqdci; // dwdot[c3h5-a]/d[c3h6]
  J[2362] -= dqdci; // dwdot[c3h3]/d[c3h6]
  // d()/d[c3h3]
  dqdci = +k_f * sc[26];
  J[4297] += dqdci; // dwdot[c3h4-a]/d[c3h3]
  J[4298] -= dqdci; // dwdot[c3h6]/d[c3h3]
  J[4319] += dqdci; // dwdot[c3h5-a]/d[c3h3]
  J[4320] -= dqdci; // dwdot[c3h3]/d[c3h3]
  // d()/dT
  J[7857] += dqdT; // dwdot[c3h4-a]/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT
  J[7880] -= dqdT; // dwdot[c3h3]/dT

  // reaction 460: c3h3 + oh => c3h2 + h2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[48];
  k_f = 10000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[48] -= q; // c3h3
  wdot[49] += q; // c3h2
  // d()/d[oh]
  dqdci = +k_f * sc[48];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[404] -= dqdci; // dwdot[c3h3]/d[oh]
  J[405] += dqdci; // dwdot[c3h2]/d[oh]
  // d()/d[c3h3]
  dqdci = +k_f * sc[4];
  J[4276] -= dqdci; // dwdot[oh]/d[c3h3]
  J[4277] += dqdci; // dwdot[h2o]/d[c3h3]
  J[4320] -= dqdci; // dwdot[c3h3]/d[c3h3]
  J[4321] += dqdci; // dwdot[c3h2]/d[c3h3]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7880] -= dqdT; // dwdot[c3h3]/dT
  J[7881] += dqdT; // dwdot[c3h2]/dT

  // reaction 461: c3h2 + h2o => c3h3 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[49];
  k_f = 1343000000 * exp(-(7890.437319818) * invT);
  dlnkfdT = (7890.437319818) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[48] += q; // c3h3
  wdot[49] -= q; // c3h2
  // d()/d[h2o]
  dqdci = +k_f * sc[49];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[493] += dqdci; // dwdot[c3h3]/d[h2o]
  J[494] -= dqdci; // dwdot[c3h2]/d[h2o]
  // d()/d[c3h2]
  dqdci = +k_f * sc[5];
  J[4365] += dqdci; // dwdot[oh]/d[c3h2]
  J[4366] -= dqdci; // dwdot[h2o]/d[c3h2]
  J[4409] += dqdci; // dwdot[c3h3]/d[c3h2]
  J[4410] -= dqdci; // dwdot[c3h2]/d[c3h2]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7880] += dqdT; // dwdot[c3h3]/dT
  J[7881] -= dqdT; // dwdot[c3h2]/dT

  // reaction 462: c3h3 + o2 => ch2co + hco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[48];
  k_f = 30100 * exp(-(1444.23183085955) * invT);
  dlnkfdT = (1444.23183085955) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[7] += q;  // hco
  wdot[20] += q; // ch2co
  wdot[48] -= q; // c3h3
  // d()/d[o2]
  dqdci = +k_f * sc[48];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[274] += dqdci; // dwdot[hco]/d[o2]
  J[287] += dqdci; // dwdot[ch2co]/d[o2]
  J[315] -= dqdci; // dwdot[c3h3]/d[o2]
  // d()/d[c3h3]
  dqdci = +k_f * sc[3];
  J[4275] -= dqdci; // dwdot[o2]/d[c3h3]
  J[4279] += dqdci; // dwdot[hco]/d[c3h3]
  J[4292] += dqdci; // dwdot[ch2co]/d[c3h3]
  J[4320] -= dqdci; // dwdot[c3h3]/d[c3h3]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7839] += dqdT; // dwdot[hco]/dT
  J[7852] += dqdT; // dwdot[ch2co]/dT
  J[7880] -= dqdT; // dwdot[c3h3]/dT

  // reaction 463: ch2co + hco => c3h3 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[20];
  k_f = 488100 * exp(-(29926.2951154067) * invT);
  dlnkfdT = (29926.2951154067) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[7] -= q;  // hco
  wdot[20] -= q; // ch2co
  wdot[48] += q; // c3h3
  // d()/d[hco]
  dqdci = +k_f * sc[20];
  J[626] += dqdci; // dwdot[o2]/d[hco]
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  J[643] -= dqdci; // dwdot[ch2co]/d[hco]
  J[671] += dqdci; // dwdot[c3h3]/d[hco]
  // d()/d[ch2co]
  dqdci = +k_f * sc[7];
  J[1783] += dqdci; // dwdot[o2]/d[ch2co]
  J[1787] -= dqdci; // dwdot[hco]/d[ch2co]
  J[1800] -= dqdci; // dwdot[ch2co]/d[ch2co]
  J[1828] += dqdci; // dwdot[c3h3]/d[ch2co]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7839] -= dqdT; // dwdot[hco]/dT
  J[7852] -= dqdT; // dwdot[ch2co]/dT
  J[7880] += dqdT; // dwdot[c3h3]/dT

  // reaction 464: pc4h9o2 => o2 + pc4h9
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[46];
  k_f = 6.155e+19 * exp(-1.38 * logT - (17869.2238027256) * invT);
  dlnkfdT = -1.38 * invT + (17869.2238027256) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[31] += q; // pc4h9
  wdot[46] -= q; // pc4h9o2
  // d()/d[pc4h9o2]
  dqdci = +k_f;
  J[4097] += dqdci; // dwdot[o2]/d[pc4h9o2]
  J[4125] += dqdci; // dwdot[pc4h9]/d[pc4h9o2]
  J[4140] -= dqdci; // dwdot[pc4h9o2]/d[pc4h9o2]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7863] += dqdT; // dwdot[pc4h9]/dT
  J[7878] -= dqdT; // dwdot[pc4h9o2]/dT

  // reaction 465: o2 + pc4h9 => pc4h9o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[31];
  k_f = 4520000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[31] -= q; // pc4h9
  wdot[46] += q; // pc4h9o2
  // d()/d[o2]
  dqdci = +k_f * sc[31];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[298] -= dqdci; // dwdot[pc4h9]/d[o2]
  J[313] += dqdci; // dwdot[pc4h9o2]/d[o2]
  // d()/d[pc4h9]
  dqdci = +k_f * sc[3];
  J[2762] -= dqdci; // dwdot[o2]/d[pc4h9]
  J[2790] -= dqdci; // dwdot[pc4h9]/d[pc4h9]
  J[2805] += dqdci; // dwdot[pc4h9o2]/d[pc4h9]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7863] -= dqdT; // dwdot[pc4h9]/dT
  J[7878] += dqdT; // dwdot[pc4h9o2]/dT

  // reaction 466: ch2cho => ch2co + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[23];
  k_f = 3.094e+15 * exp(-0.26 * logT - (25573.4709561959) * invT);
  dlnkfdT = -0.26 * invT + (25573.4709561959) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[20] += q; // ch2co
  wdot[23] -= q; // ch2cho
  // d()/d[ch2cho]
  dqdci = +k_f;
  J[2047] += dqdci; // dwdot[h]/d[ch2cho]
  J[2067] += dqdci; // dwdot[ch2co]/d[ch2cho]
  J[2070] -= dqdci; // dwdot[ch2cho]/d[ch2cho]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7852] += dqdT; // dwdot[ch2co]/dT
  J[7855] -= dqdT; // dwdot[ch2cho]/dT

  // reaction 467: ch2co + h => ch2cho
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[20];
  k_f = 50000000 * exp(-(6189.56498939805) * invT);
  dlnkfdT = (6189.56498939805) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[20] -= q; // ch2co
  wdot[23] += q; // ch2cho
  // d()/d[h]
  dqdci = +k_f * sc[20];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[20] -= dqdci; // dwdot[ch2co]/d[h]
  J[23] += dqdci; // dwdot[ch2cho]/d[h]
  // d()/d[ch2co]
  dqdci = +k_f * sc[0];
  J[1780] -= dqdci; // dwdot[h]/d[ch2co]
  J[1800] -= dqdci; // dwdot[ch2co]/d[ch2co]
  J[1803] += dqdci; // dwdot[ch2cho]/d[ch2co]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7852] -= dqdT; // dwdot[ch2co]/dT
  J[7855] += dqdT; // dwdot[ch2cho]/dT

  // reaction 468: ch2cho + o2 => ch2o + co + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[23];
  k_f = 20000000 * exp(-(2113.50999637982) * invT);
  dlnkfdT = (2113.50999637982) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[4] += q;  // oh
  wdot[6] += q;  // co
  wdot[13] += q; // ch2o
  wdot[23] -= q; // ch2cho
  // d()/d[o2]
  dqdci = +k_f * sc[23];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[271] += dqdci; // dwdot[oh]/d[o2]
  J[273] += dqdci; // dwdot[co]/d[o2]
  J[280] += dqdci; // dwdot[ch2o]/d[o2]
  J[290] -= dqdci; // dwdot[ch2cho]/d[o2]
  // d()/d[ch2cho]
  dqdci = +k_f * sc[3];
  J[2050] -= dqdci; // dwdot[o2]/d[ch2cho]
  J[2051] += dqdci; // dwdot[oh]/d[ch2cho]
  J[2053] += dqdci; // dwdot[co]/d[ch2cho]
  J[2060] += dqdci; // dwdot[ch2o]/d[ch2cho]
  J[2070] -= dqdci; // dwdot[ch2cho]/d[ch2cho]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT
  J[7855] -= dqdT; // dwdot[ch2cho]/dT

  // reaction 469: nc4ket13 => ch2cho + ch3cho + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[51];
  k_f = 1.05e+16 * exp(-(20933.8132974763) * invT);
  dlnkfdT = (20933.8132974763) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[23] += q; // ch2cho
  wdot[24] += q; // ch3cho
  wdot[51] -= q; // nc4ket13
  // d()/d[nc4ket13]
  dqdci = +k_f;
  J[4543] += dqdci; // dwdot[oh]/d[nc4ket13]
  J[4562] += dqdci; // dwdot[ch2cho]/d[nc4ket13]
  J[4563] += dqdci; // dwdot[ch3cho]/d[nc4ket13]
  J[4590] -= dqdci; // dwdot[nc4ket13]/d[nc4ket13]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7855] += dqdT; // dwdot[ch2cho]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT
  J[7883] -= dqdT; // dwdot[nc4ket13]/dT

  // reaction 470: c3h5-a + o2 => c3h4-a + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[47];
  k_f = 2.18e+15 * exp(-2.85 * logT - (15478.9446401532) * invT);
  dlnkfdT = -2.85 * invT + (15478.9446401532) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[25] += q; // c3h4-a
  wdot[47] -= q; // c3h5-a
  // d()/d[o2]
  dqdci = +k_f * sc[47];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[292] += dqdci; // dwdot[c3h4-a]/d[o2]
  J[314] -= dqdci; // dwdot[c3h5-a]/d[o2]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[3];
  J[4186] -= dqdci; // dwdot[o2]/d[c3h5-a]
  J[4194] += dqdci; // dwdot[ho2]/d[c3h5-a]
  J[4208] += dqdci; // dwdot[c3h4-a]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7857] += dqdT; // dwdot[c3h4-a]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 471: c3h4-a + ho2 => c3h5-a + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[25];
  k_f = 26900000000000 * exp(-2.4 * logT - (10315.9416489968) * invT);
  dlnkfdT = -2.4 * invT + (10315.9416489968) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[25] -= q; // c3h4-a
  wdot[47] += q; // c3h5-a
  // d()/d[ho2]
  dqdci = +k_f * sc[25];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1004] -= dqdci; // dwdot[c3h4-a]/d[ho2]
  J[1026] += dqdci; // dwdot[c3h5-a]/d[ho2]
  // d()/d[c3h4-a]
  dqdci = +k_f * sc[11];
  J[2228] += dqdci; // dwdot[o2]/d[c3h4-a]
  J[2236] -= dqdci; // dwdot[ho2]/d[c3h4-a]
  J[2250] -= dqdci; // dwdot[c3h4-a]/d[c3h4-a]
  J[2272] += dqdci; // dwdot[c3h5-a]/d[c3h4-a]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7857] -= dqdT; // dwdot[c3h4-a]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 472: c3h5-a + o2 => ch2cho + ch2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[47];
  k_f = 7140000000 * exp(-1.21 * logT - (10592.7108151893) * invT);
  dlnkfdT = -1.21 * invT + (10592.7108151893) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[13] += q; // ch2o
  wdot[23] += q; // ch2cho
  wdot[47] -= q; // c3h5-a
  // d()/d[o2]
  dqdci = +k_f * sc[47];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[280] += dqdci; // dwdot[ch2o]/d[o2]
  J[290] += dqdci; // dwdot[ch2cho]/d[o2]
  J[314] -= dqdci; // dwdot[c3h5-a]/d[o2]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[3];
  J[4186] -= dqdci; // dwdot[o2]/d[c3h5-a]
  J[4196] += dqdci; // dwdot[ch2o]/d[c3h5-a]
  J[4206] += dqdci; // dwdot[ch2cho]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT
  J[7855] += dqdT; // dwdot[ch2cho]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 473: ch2cho + ch2o => c3h5-a + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[23];
  k_f = 49440000000 * exp(-1.4 * logT - (44595.0609236143) * invT);
  dlnkfdT = -1.4 * invT + (44595.0609236143) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[13] -= q; // ch2o
  wdot[23] -= q; // ch2cho
  wdot[47] += q; // c3h5-a
  // d()/d[ch2o]
  dqdci = +k_f * sc[23];
  J[1160] += dqdci; // dwdot[o2]/d[ch2o]
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  J[1180] -= dqdci; // dwdot[ch2cho]/d[ch2o]
  J[1204] += dqdci; // dwdot[c3h5-a]/d[ch2o]
  // d()/d[ch2cho]
  dqdci = +k_f * sc[13];
  J[2050] += dqdci; // dwdot[o2]/d[ch2cho]
  J[2060] -= dqdci; // dwdot[ch2o]/d[ch2cho]
  J[2070] -= dqdci; // dwdot[ch2cho]/d[ch2cho]
  J[2094] += dqdci; // dwdot[c3h5-a]/d[ch2cho]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT
  J[7855] -= dqdT; // dwdot[ch2cho]/dT
  J[7879] += dqdT; // dwdot[c3h5-a]/dT

  // reaction 474: c3h5-a + o2 => c2h2 + ch2o + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[47];
  k_f = 9.72e+23 * exp(-5.71 * logT - (10793.9974815112) * invT);
  dlnkfdT = -5.71 * invT + (10793.9974815112) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[4] += q;  // oh
  wdot[13] += q; // ch2o
  wdot[18] += q; // c2h2
  wdot[47] -= q; // c3h5-a
  // d()/d[o2]
  dqdci = +k_f * sc[47];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[271] += dqdci; // dwdot[oh]/d[o2]
  J[280] += dqdci; // dwdot[ch2o]/d[o2]
  J[285] += dqdci; // dwdot[c2h2]/d[o2]
  J[314] -= dqdci; // dwdot[c3h5-a]/d[o2]
  // d()/d[c3h5-a]
  dqdci = +k_f * sc[3];
  J[4186] -= dqdci; // dwdot[o2]/d[c3h5-a]
  J[4187] += dqdci; // dwdot[oh]/d[c3h5-a]
  J[4196] += dqdci; // dwdot[ch2o]/d[c3h5-a]
  J[4201] += dqdci; // dwdot[c2h2]/d[c3h5-a]
  J[4230] -= dqdci; // dwdot[c3h5-a]/d[c3h5-a]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT
  J[7850] += dqdT; // dwdot[c2h2]/dT
  J[7879] -= dqdT; // dwdot[c3h5-a]/dT

  // reaction 475: hcco + o2 => co2 + hco
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[21];
  k_f = 240000 * exp(-(-429.747032597231) * invT);
  dlnkfdT = (-429.747032597231) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[7] += q;  // hco
  wdot[8] += q;  // co2
  wdot[21] -= q; // hcco
  // d()/d[o2]
  dqdci = +k_f * sc[21];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[274] += dqdci; // dwdot[hco]/d[o2]
  J[275] += dqdci; // dwdot[co2]/d[o2]
  J[288] -= dqdci; // dwdot[hcco]/d[o2]
  // d()/d[hcco]
  dqdci = +k_f * sc[3];
  J[1872] -= dqdci; // dwdot[o2]/d[hcco]
  J[1876] += dqdci; // dwdot[hco]/d[hcco]
  J[1877] += dqdci; // dwdot[co2]/d[hcco]
  J[1890] -= dqdci; // dwdot[hcco]/d[hcco]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7839] += dqdT; // dwdot[hco]/dT
  J[7840] += dqdT; // dwdot[co2]/dT
  J[7853] -= dqdT; // dwdot[hcco]/dT

  // reaction 476: co2 + hco => hcco + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[8];
  k_f = 147400000 * exp(-(67229.7465515105) * invT);
  dlnkfdT = (67229.7465515105) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[7] -= q;  // hco
  wdot[8] -= q;  // co2
  wdot[21] += q; // hcco
  // d()/d[hco]
  dqdci = +k_f * sc[8];
  J[626] += dqdci; // dwdot[o2]/d[hco]
  J[630] -= dqdci; // dwdot[hco]/d[hco]
  J[631] -= dqdci; // dwdot[co2]/d[hco]
  J[644] += dqdci; // dwdot[hcco]/d[hco]
  // d()/d[co2]
  dqdci = +k_f * sc[7];
  J[715] += dqdci; // dwdot[o2]/d[co2]
  J[719] -= dqdci; // dwdot[hco]/d[co2]
  J[720] -= dqdci; // dwdot[co2]/d[co2]
  J[733] += dqdci; // dwdot[hcco]/d[co2]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7839] -= dqdT; // dwdot[hco]/dT
  J[7840] -= dqdT; // dwdot[co2]/dT
  J[7853] += dqdT; // dwdot[hcco]/dT

  // reaction 477: ch3 + o2 => ch2o + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[9];
  k_f = 747000 * exp(-(7170.83748771726) * invT);
  dlnkfdT = (7170.83748771726) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[4] += q;  // oh
  wdot[9] -= q;  // ch3
  wdot[13] += q; // ch2o
  // d()/d[o2]
  dqdci = +k_f * sc[9];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[271] += dqdci; // dwdot[oh]/d[o2]
  J[276] -= dqdci; // dwdot[ch3]/d[o2]
  J[280] += dqdci; // dwdot[ch2o]/d[o2]
  // d()/d[ch3]
  dqdci = +k_f * sc[3];
  J[804] -= dqdci; // dwdot[o2]/d[ch3]
  J[805] += dqdci; // dwdot[oh]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[814] += dqdci; // dwdot[ch2o]/d[ch3]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT

  // reaction 478: ch2o + oh => ch3 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[13];
  k_f = 777800 * exp(-(34102.9934415859) * invT);
  dlnkfdT = (34102.9934415859) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[4] -= q;  // oh
  wdot[9] += q;  // ch3
  wdot[13] -= q; // ch2o
  // d()/d[oh]
  dqdci = +k_f * sc[13];
  J[359] += dqdci; // dwdot[o2]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[365] += dqdci; // dwdot[ch3]/d[oh]
  J[369] -= dqdci; // dwdot[ch2o]/d[oh]
  // d()/d[ch2o]
  dqdci = +k_f * sc[4];
  J[1160] += dqdci; // dwdot[o2]/d[ch2o]
  J[1161] -= dqdci; // dwdot[oh]/d[ch2o]
  J[1166] += dqdci; // dwdot[ch3]/d[ch2o]
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT

  // reaction 479: c2h4 + h2 => 2 ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[16];
  k_f = 3767000 * exp(0.83 * logT - (42627.4837603178) * invT);
  dlnkfdT = 0.83 * invT + (42627.4837603178) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;     // h2
  wdot[9] += 2 * q; // ch3
  wdot[16] -= q;    // c2h4
  // d()/d[h2]
  dqdci = +k_f * sc[16];
  J[90] -= dqdci;     // dwdot[h2]/d[h2]
  J[98] += 2 * dqdci; // dwdot[ch3]/d[h2]
  J[105] -= dqdci;    // dwdot[c2h4]/d[h2]
  // d()/d[c2h4]
  dqdci = +k_f * sc[1];
  J[1425] -= dqdci;     // dwdot[h2]/d[c2h4]
  J[1433] += 2 * dqdci; // dwdot[ch3]/d[c2h4]
  J[1440] -= dqdci;     // dwdot[c2h4]/d[c2h4]
  // d()/dT
  J[7833] -= dqdT;     // dwdot[h2]/dT
  J[7841] += 2 * dqdT; // dwdot[ch3]/dT
  J[7848] -= dqdT;     // dwdot[c2h4]/dT

  // reaction 480: 2 ch3 => c2h4 + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[9] * sc[9]);
  k_f = 100000000 * exp(-(16102.933305751) * invT);
  dlnkfdT = (16102.933305751) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] += q;     // h2
  wdot[9] -= 2 * q; // ch3
  wdot[16] += q;    // c2h4
  // d()/d[ch3]
  dqdci = +k_f * 2.000000 * sc[9];
  J[802] += dqdci;      // dwdot[h2]/d[ch3]
  J[810] += -2 * dqdci; // dwdot[ch3]/d[ch3]
  J[817] += dqdci;      // dwdot[c2h4]/d[ch3]
  // d()/dT
  J[7833] += dqdT;      // dwdot[h2]/dT
  J[7841] += -2 * dqdT; // dwdot[ch3]/dT
  J[7848] += dqdT;      // dwdot[c2h4]/dT

  // reaction 481: nc3h7cho + o2 => ho2 + nc3h7co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[52];
  k_f = 20000000 * exp(0.5 * logT - (21235.7432969592) * invT);
  dlnkfdT = 0.5 * invT + (21235.7432969592) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[52] -= q; // nc3h7cho
  wdot[53] += q; // nc3h7co
  // d()/d[o2]
  dqdci = +k_f * sc[52];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[319] -= dqdci; // dwdot[nc3h7cho]/d[o2]
  J[320] += dqdci; // dwdot[nc3h7co]/d[o2]
  // d()/d[nc3h7cho]
  dqdci = +k_f * sc[3];
  J[4631] -= dqdci; // dwdot[o2]/d[nc3h7cho]
  J[4639] += dqdci; // dwdot[ho2]/d[nc3h7cho]
  J[4680] -= dqdci; // dwdot[nc3h7cho]/d[nc3h7cho]
  J[4681] += dqdci; // dwdot[nc3h7co]/d[nc3h7cho]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7884] -= dqdT; // dwdot[nc3h7cho]/dT
  J[7885] += dqdT; // dwdot[nc3h7co]/dT

  // reaction 482: ho2 + nc3h7co => nc3h7cho + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[53];
  k_f = 10 * exp(0.5 * logT - (2012.86666321888) * invT);
  dlnkfdT = 0.5 * invT + (2012.86666321888) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[52] += q; // nc3h7cho
  wdot[53] -= q; // nc3h7co
  // d()/d[ho2]
  dqdci = +k_f * sc[53];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1031] += dqdci; // dwdot[nc3h7cho]/d[ho2]
  J[1032] -= dqdci; // dwdot[nc3h7co]/d[ho2]
  // d()/d[nc3h7co]
  dqdci = +k_f * sc[11];
  J[4720] += dqdci; // dwdot[o2]/d[nc3h7co]
  J[4728] -= dqdci; // dwdot[ho2]/d[nc3h7co]
  J[4769] += dqdci; // dwdot[nc3h7cho]/d[nc3h7co]
  J[4770] -= dqdci; // dwdot[nc3h7co]/d[nc3h7co]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7884] += dqdT; // dwdot[nc3h7cho]/dT
  J[7885] -= dqdT; // dwdot[nc3h7co]/dT

  // reaction 483: nc3h7cho + oh => h2o + nc3h7co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[52];
  k_f = 26900 * exp(0.76 * logT - (-171.093666373605) * invT);
  dlnkfdT = 0.76 * invT + (-171.093666373605) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[52] -= q; // nc3h7cho
  wdot[53] += q; // nc3h7co
  // d()/d[oh]
  dqdci = +k_f * sc[52];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[408] -= dqdci; // dwdot[nc3h7cho]/d[oh]
  J[409] += dqdci; // dwdot[nc3h7co]/d[oh]
  // d()/d[nc3h7cho]
  dqdci = +k_f * sc[4];
  J[4632] -= dqdci; // dwdot[oh]/d[nc3h7cho]
  J[4633] += dqdci; // dwdot[h2o]/d[nc3h7cho]
  J[4680] -= dqdci; // dwdot[nc3h7cho]/d[nc3h7cho]
  J[4681] += dqdci; // dwdot[nc3h7co]/d[nc3h7cho]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7884] -= dqdT; // dwdot[nc3h7cho]/dT
  J[7885] += dqdT; // dwdot[nc3h7co]/dT

  // reaction 484: h2o + nc3h7co => nc3h7cho + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[53];
  k_f = 18520 * exp(0.75 * logT - (15710.4243064233) * invT);
  dlnkfdT = 0.75 * invT + (15710.4243064233) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[52] += q; // nc3h7cho
  wdot[53] -= q; // nc3h7co
  // d()/d[h2o]
  dqdci = +k_f * sc[53];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[497] += dqdci; // dwdot[nc3h7cho]/d[h2o]
  J[498] -= dqdci; // dwdot[nc3h7co]/d[h2o]
  // d()/d[nc3h7co]
  dqdci = +k_f * sc[5];
  J[4721] += dqdci; // dwdot[oh]/d[nc3h7co]
  J[4722] -= dqdci; // dwdot[h2o]/d[nc3h7co]
  J[4769] += dqdci; // dwdot[nc3h7cho]/d[nc3h7co]
  J[4770] -= dqdci; // dwdot[nc3h7co]/d[nc3h7co]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7884] += dqdT; // dwdot[nc3h7cho]/dT
  J[7885] -= dqdT; // dwdot[nc3h7co]/dT

  // reaction 485: h + nc3h7cho => h2 + nc3h7co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[52];
  k_f = 40000000 * exp(-(2113.50999637982) * invT);
  dlnkfdT = (2113.50999637982) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[52] -= q; // nc3h7cho
  wdot[53] += q; // nc3h7co
  // d()/d[h]
  dqdci = +k_f * sc[52];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[52] -= dqdci; // dwdot[nc3h7cho]/d[h]
  J[53] += dqdci; // dwdot[nc3h7co]/d[h]
  // d()/d[nc3h7cho]
  dqdci = +k_f * sc[0];
  J[4628] -= dqdci; // dwdot[h]/d[nc3h7cho]
  J[4629] += dqdci; // dwdot[h2]/d[nc3h7cho]
  J[4680] -= dqdci; // dwdot[nc3h7cho]/d[nc3h7cho]
  J[4681] += dqdci; // dwdot[nc3h7co]/d[nc3h7cho]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7884] -= dqdT; // dwdot[nc3h7cho]/dT
  J[7885] += dqdT; // dwdot[nc3h7co]/dT

  // reaction 486: h2 + nc3h7co => h + nc3h7cho
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[53];
  k_f = 18000000 * exp(-(12077.1999793133) * invT);
  dlnkfdT = (12077.1999793133) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[52] += q; // nc3h7cho
  wdot[53] -= q; // nc3h7co
  // d()/d[h2]
  dqdci = +k_f * sc[53];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[141] += dqdci; // dwdot[nc3h7cho]/d[h2]
  J[142] -= dqdci; // dwdot[nc3h7co]/d[h2]
  // d()/d[nc3h7co]
  dqdci = +k_f * sc[1];
  J[4717] += dqdci; // dwdot[h]/d[nc3h7co]
  J[4718] -= dqdci; // dwdot[h2]/d[nc3h7co]
  J[4769] += dqdci; // dwdot[nc3h7cho]/d[nc3h7co]
  J[4770] -= dqdci; // dwdot[nc3h7co]/d[nc3h7co]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7884] += dqdT; // dwdot[nc3h7cho]/dT
  J[7885] -= dqdT; // dwdot[nc3h7co]/dT

  // reaction 487: nc3h7cho + o => nc3h7co + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[52];
  k_f = 5000000 * exp(-(900.757831790448) * invT);
  dlnkfdT = (900.757831790448) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[4] += q;  // oh
  wdot[52] -= q; // nc3h7cho
  wdot[53] += q; // nc3h7co
  // d()/d[o]
  dqdci = +k_f * sc[52];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[182] += dqdci; // dwdot[oh]/d[o]
  J[230] -= dqdci; // dwdot[nc3h7cho]/d[o]
  J[231] += dqdci; // dwdot[nc3h7co]/d[o]
  // d()/d[nc3h7cho]
  dqdci = +k_f * sc[2];
  J[4630] -= dqdci; // dwdot[o]/d[nc3h7cho]
  J[4632] += dqdci; // dwdot[oh]/d[nc3h7cho]
  J[4680] -= dqdci; // dwdot[nc3h7cho]/d[nc3h7cho]
  J[4681] += dqdci; // dwdot[nc3h7co]/d[nc3h7cho]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7884] -= dqdT; // dwdot[nc3h7cho]/dT
  J[7885] += dqdT; // dwdot[nc3h7co]/dT

  // reaction 488: nc3h7co + oh => nc3h7cho + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[53];
  k_f = 1000000 * exp(-(9561.11665028967) * invT);
  dlnkfdT = (9561.11665028967) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[4] -= q;  // oh
  wdot[52] += q; // nc3h7cho
  wdot[53] -= q; // nc3h7co
  // d()/d[oh]
  dqdci = +k_f * sc[53];
  J[358] += dqdci; // dwdot[o]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[408] += dqdci; // dwdot[nc3h7cho]/d[oh]
  J[409] -= dqdci; // dwdot[nc3h7co]/d[oh]
  // d()/d[nc3h7co]
  dqdci = +k_f * sc[4];
  J[4719] += dqdci; // dwdot[o]/d[nc3h7co]
  J[4721] -= dqdci; // dwdot[oh]/d[nc3h7co]
  J[4769] += dqdci; // dwdot[nc3h7cho]/d[nc3h7co]
  J[4770] -= dqdci; // dwdot[nc3h7co]/d[nc3h7co]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7884] += dqdT; // dwdot[nc3h7cho]/dT
  J[7885] -= dqdT; // dwdot[nc3h7co]/dT

  // reaction 489: ho2 + nc3h7cho => h2o2 + nc3h7co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[52];
  k_f = 2800000 * exp(-(6843.74665494419) * invT);
  dlnkfdT = (6843.74665494419) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  wdot[52] -= q; // nc3h7cho
  wdot[53] += q; // nc3h7co
  // d()/d[ho2]
  dqdci = +k_f * sc[52];
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[991] += dqdci;  // dwdot[h2o2]/d[ho2]
  J[1031] -= dqdci; // dwdot[nc3h7cho]/d[ho2]
  J[1032] += dqdci; // dwdot[nc3h7co]/d[ho2]
  // d()/d[nc3h7cho]
  dqdci = +k_f * sc[11];
  J[4639] -= dqdci; // dwdot[ho2]/d[nc3h7cho]
  J[4640] += dqdci; // dwdot[h2o2]/d[nc3h7cho]
  J[4680] -= dqdci; // dwdot[nc3h7cho]/d[nc3h7cho]
  J[4681] += dqdci; // dwdot[nc3h7co]/d[nc3h7cho]
  // d()/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT
  J[7884] -= dqdT; // dwdot[nc3h7cho]/dT
  J[7885] += dqdT; // dwdot[nc3h7co]/dT

  // reaction 490: h2o2 + nc3h7co => ho2 + nc3h7cho
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[53];
  k_f = 1000000 * exp(-(5032.1666580472) * invT);
  dlnkfdT = (5032.1666580472) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // ho2
  wdot[12] -= q; // h2o2
  wdot[52] += q; // nc3h7cho
  wdot[53] -= q; // nc3h7co
  // d()/d[h2o2]
  dqdci = +k_f * sc[53];
  J[1079] += dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci; // dwdot[h2o2]/d[h2o2]
  J[1120] += dqdci; // dwdot[nc3h7cho]/d[h2o2]
  J[1121] -= dqdci; // dwdot[nc3h7co]/d[h2o2]
  // d()/d[nc3h7co]
  dqdci = +k_f * sc[12];
  J[4728] += dqdci; // dwdot[ho2]/d[nc3h7co]
  J[4729] -= dqdci; // dwdot[h2o2]/d[nc3h7co]
  J[4769] += dqdci; // dwdot[nc3h7cho]/d[nc3h7co]
  J[4770] -= dqdci; // dwdot[nc3h7co]/d[nc3h7co]
  // d()/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT; // dwdot[h2o2]/dT
  J[7884] += dqdT; // dwdot[nc3h7cho]/dT
  J[7885] -= dqdT; // dwdot[nc3h7co]/dT

  // reaction 491: ch3 + nc3h7cho => ch4 + nc3h7co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[52];
  k_f = 1700000 * exp(-(4247.14865939183) * invT);
  dlnkfdT = (4247.14865939183) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[52] -= q; // nc3h7cho
  wdot[53] += q; // nc3h7co
  // d()/d[ch3]
  dqdci = +k_f * sc[52];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[853] -= dqdci; // dwdot[nc3h7cho]/d[ch3]
  J[854] += dqdci; // dwdot[nc3h7co]/d[ch3]
  // d()/d[nc3h7cho]
  dqdci = +k_f * sc[9];
  J[4637] -= dqdci; // dwdot[ch3]/d[nc3h7cho]
  J[4638] += dqdci; // dwdot[ch4]/d[nc3h7cho]
  J[4680] -= dqdci; // dwdot[nc3h7cho]/d[nc3h7cho]
  J[4681] += dqdci; // dwdot[nc3h7co]/d[nc3h7cho]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7884] -= dqdT; // dwdot[nc3h7cho]/dT
  J[7885] += dqdT; // dwdot[nc3h7co]/dT

  // reaction 492: ch4 + nc3h7co => ch3 + nc3h7cho
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[53];
  k_f = 15000000 * exp(-(14090.0666425322) * invT);
  dlnkfdT = (14090.0666425322) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[52] += q; // nc3h7cho
  wdot[53] -= q; // nc3h7co
  // d()/d[ch4]
  dqdci = +k_f * sc[53];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[942] += dqdci; // dwdot[nc3h7cho]/d[ch4]
  J[943] -= dqdci; // dwdot[nc3h7co]/d[ch4]
  // d()/d[nc3h7co]
  dqdci = +k_f * sc[10];
  J[4726] += dqdci; // dwdot[ch3]/d[nc3h7co]
  J[4727] -= dqdci; // dwdot[ch4]/d[nc3h7co]
  J[4769] += dqdci; // dwdot[nc3h7cho]/d[nc3h7co]
  J[4770] -= dqdci; // dwdot[nc3h7co]/d[nc3h7co]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7884] += dqdT; // dwdot[nc3h7cho]/dT
  J[7885] -= dqdT; // dwdot[nc3h7co]/dT

  // reaction 493: ch3o2 + nc3h7cho => ch3o2h + nc3h7co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[38] * sc[52];
  k_f = 1000000 * exp(-(4780.55832514484) * invT);
  dlnkfdT = (4780.55832514484) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[38] -= q; // ch3o2
  wdot[39] += q; // ch3o2h
  wdot[52] -= q; // nc3h7cho
  wdot[53] += q; // nc3h7co
  // d()/d[ch3o2]
  dqdci = +k_f * sc[52];
  J[3420] -= dqdci; // dwdot[ch3o2]/d[ch3o2]
  J[3421] += dqdci; // dwdot[ch3o2h]/d[ch3o2]
  J[3434] -= dqdci; // dwdot[nc3h7cho]/d[ch3o2]
  J[3435] += dqdci; // dwdot[nc3h7co]/d[ch3o2]
  // d()/d[nc3h7cho]
  dqdci = +k_f * sc[38];
  J[4666] -= dqdci; // dwdot[ch3o2]/d[nc3h7cho]
  J[4667] += dqdci; // dwdot[ch3o2h]/d[nc3h7cho]
  J[4680] -= dqdci; // dwdot[nc3h7cho]/d[nc3h7cho]
  J[4681] += dqdci; // dwdot[nc3h7co]/d[nc3h7cho]
  // d()/dT
  J[7870] -= dqdT; // dwdot[ch3o2]/dT
  J[7871] += dqdT; // dwdot[ch3o2h]/dT
  J[7884] -= dqdT; // dwdot[nc3h7cho]/dT
  J[7885] += dqdT; // dwdot[nc3h7co]/dT

  // reaction 494: ch3o2h + nc3h7co => ch3o2 + nc3h7cho
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[39] * sc[53];
  k_f = 25000 * exp(-(5032.1666580472) * invT);
  dlnkfdT = (5032.1666580472) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[38] += q; // ch3o2
  wdot[39] -= q; // ch3o2h
  wdot[52] += q; // nc3h7cho
  wdot[53] -= q; // nc3h7co
  // d()/d[ch3o2h]
  dqdci = +k_f * sc[53];
  J[3509] += dqdci; // dwdot[ch3o2]/d[ch3o2h]
  J[3510] -= dqdci; // dwdot[ch3o2h]/d[ch3o2h]
  J[3523] += dqdci; // dwdot[nc3h7cho]/d[ch3o2h]
  J[3524] -= dqdci; // dwdot[nc3h7co]/d[ch3o2h]
  // d()/d[nc3h7co]
  dqdci = +k_f * sc[39];
  J[4755] += dqdci; // dwdot[ch3o2]/d[nc3h7co]
  J[4756] -= dqdci; // dwdot[ch3o2h]/d[nc3h7co]
  J[4769] += dqdci; // dwdot[nc3h7cho]/d[nc3h7co]
  J[4770] -= dqdci; // dwdot[nc3h7co]/d[nc3h7co]
  // d()/dT
  J[7870] += dqdT; // dwdot[ch3o2]/dT
  J[7871] -= dqdT; // dwdot[ch3o2h]/dT
  J[7884] += dqdT; // dwdot[nc3h7cho]/dT
  J[7885] -= dqdT; // dwdot[nc3h7co]/dT

  // reaction 495: nc3h7co => co + nc3h7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[53];
  k_f = 5.325e+15 * exp(-0.86 * logT - (6743.10332178324) * invT);
  dlnkfdT = -0.86 * invT + (6743.10332178324) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] += q;  // co
  wdot[28] += q; // nc3h7
  wdot[53] -= q; // nc3h7co
  // d()/d[nc3h7co]
  dqdci = +k_f;
  J[4723] += dqdci; // dwdot[co]/d[nc3h7co]
  J[4745] += dqdci; // dwdot[nc3h7]/d[nc3h7co]
  J[4770] -= dqdci; // dwdot[nc3h7co]/d[nc3h7co]
  // d()/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7860] += dqdT; // dwdot[nc3h7]/dT
  J[7885] -= dqdT; // dwdot[nc3h7co]/dT

  // reaction 496: co + nc3h7 => nc3h7co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[28];
  k_f = 150000 * exp(-(2415.43999586265) * invT);
  dlnkfdT = (2415.43999586265) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // co
  wdot[28] -= q; // nc3h7
  wdot[53] += q; // nc3h7co
  // d()/d[co]
  dqdci = +k_f * sc[28];
  J[540] -= dqdci; // dwdot[co]/d[co]
  J[562] -= dqdci; // dwdot[nc3h7]/d[co]
  J[587] += dqdci; // dwdot[nc3h7co]/d[co]
  // d()/d[nc3h7]
  dqdci = +k_f * sc[6];
  J[2498] -= dqdci; // dwdot[co]/d[nc3h7]
  J[2520] -= dqdci; // dwdot[nc3h7]/d[nc3h7]
  J[2545] += dqdci; // dwdot[nc3h7co]/d[nc3h7]
  // d()/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7860] -= dqdT; // dwdot[nc3h7]/dT
  J[7885] += dqdT; // dwdot[nc3h7co]/dT

  // reaction 497: c2h5coch2 => c2h5 + ch2co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[54];
  k_f = 15700000000000 * exp(-(15096.4999741416) * invT);
  dlnkfdT = (15096.4999741416) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[17] += q; // c2h5
  wdot[20] += q; // ch2co
  wdot[54] -= q; // c2h5coch2
  // d()/d[c2h5coch2]
  dqdci = +k_f;
  J[4823] += dqdci; // dwdot[c2h5]/d[c2h5coch2]
  J[4826] += dqdci; // dwdot[ch2co]/d[c2h5coch2]
  J[4860] -= dqdci; // dwdot[c2h5coch2]/d[c2h5coch2]
  // d()/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7852] += dqdT; // dwdot[ch2co]/dT
  J[7886] -= dqdT; // dwdot[c2h5coch2]/dT

  // reaction 498: c2h5 + ch2co => c2h5coch2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[20];
  k_f = 211000 * exp(-(3698.64249366469) * invT);
  dlnkfdT = (3698.64249366469) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[17] -= q; // c2h5
  wdot[20] -= q; // ch2co
  wdot[54] += q; // c2h5coch2
  // d()/d[c2h5]
  dqdci = +k_f * sc[20];
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1533] -= dqdci; // dwdot[ch2co]/d[c2h5]
  J[1567] += dqdci; // dwdot[c2h5coch2]/d[c2h5]
  // d()/d[ch2co]
  dqdci = +k_f * sc[17];
  J[1797] -= dqdci; // dwdot[c2h5]/d[ch2co]
  J[1800] -= dqdci; // dwdot[ch2co]/d[ch2co]
  J[1834] += dqdci; // dwdot[c2h5coch2]/d[ch2co]
  // d()/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7852] -= dqdT; // dwdot[ch2co]/dT
  J[7886] += dqdT; // dwdot[c2h5coch2]/dT

  // reaction 499: nc3h7coch2 => ch2co + nc3h7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[55];
  k_f = 1.226e+18 * exp(-1.4 * logT - (21864.7641292151) * invT);
  dlnkfdT = -1.4 * invT + (21864.7641292151) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[20] += q; // ch2co
  wdot[28] += q; // nc3h7
  wdot[55] -= q; // nc3h7coch2
  // d()/d[nc3h7coch2]
  dqdci = +k_f;
  J[4915] += dqdci; // dwdot[ch2co]/d[nc3h7coch2]
  J[4923] += dqdci; // dwdot[nc3h7]/d[nc3h7coch2]
  J[4950] -= dqdci; // dwdot[nc3h7coch2]/d[nc3h7coch2]
  // d()/dT
  J[7852] += dqdT; // dwdot[ch2co]/dT
  J[7860] += dqdT; // dwdot[nc3h7]/dT
  J[7887] -= dqdT; // dwdot[nc3h7coch2]/dT

  // reaction 500: ch2co + nc3h7 => nc3h7coch2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[20] * sc[28];
  k_f = 100000 * exp(-(5837.31332333475) * invT);
  dlnkfdT = (5837.31332333475) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[20] -= q; // ch2co
  wdot[28] -= q; // nc3h7
  wdot[55] += q; // nc3h7coch2
  // d()/d[ch2co]
  dqdci = +k_f * sc[28];
  J[1800] -= dqdci; // dwdot[ch2co]/d[ch2co]
  J[1808] -= dqdci; // dwdot[nc3h7]/d[ch2co]
  J[1835] += dqdci; // dwdot[nc3h7coch2]/d[ch2co]
  // d()/d[nc3h7]
  dqdci = +k_f * sc[20];
  J[2512] -= dqdci; // dwdot[ch2co]/d[nc3h7]
  J[2520] -= dqdci; // dwdot[nc3h7]/d[nc3h7]
  J[2547] += dqdci; // dwdot[nc3h7coch2]/d[nc3h7]
  // d()/dT
  J[7852] -= dqdT; // dwdot[ch2co]/dT
  J[7860] -= dqdT; // dwdot[nc3h7]/dT
  J[7887] += dqdT; // dwdot[nc3h7coch2]/dT

  // reaction 501: nc4h9cho + o2 => ho2 + nc4h9co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[56];
  k_f = 20000000 * exp(0.5 * logT - (21235.7432969592) * invT);
  dlnkfdT = 0.5 * invT + (21235.7432969592) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[56] -= q; // nc4h9cho
  wdot[57] += q; // nc4h9co
  // d()/d[o2]
  dqdci = +k_f * sc[56];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[323] -= dqdci; // dwdot[nc4h9cho]/d[o2]
  J[324] += dqdci; // dwdot[nc4h9co]/d[o2]
  // d()/d[nc4h9cho]
  dqdci = +k_f * sc[3];
  J[4987] -= dqdci; // dwdot[o2]/d[nc4h9cho]
  J[4995] += dqdci; // dwdot[ho2]/d[nc4h9cho]
  J[5040] -= dqdci; // dwdot[nc4h9cho]/d[nc4h9cho]
  J[5041] += dqdci; // dwdot[nc4h9co]/d[nc4h9cho]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7888] -= dqdT; // dwdot[nc4h9cho]/dT
  J[7889] += dqdT; // dwdot[nc4h9co]/dT

  // reaction 502: ho2 + nc4h9co => nc4h9cho + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[57];
  k_f = 10 * exp(-(20128.6666321888) * invT);
  dlnkfdT = (20128.6666321888) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[56] += q; // nc4h9cho
  wdot[57] -= q; // nc4h9co
  // d()/d[ho2]
  dqdci = +k_f * sc[57];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1035] += dqdci; // dwdot[nc4h9cho]/d[ho2]
  J[1036] -= dqdci; // dwdot[nc4h9co]/d[ho2]
  // d()/d[nc4h9co]
  dqdci = +k_f * sc[11];
  J[5076] += dqdci; // dwdot[o2]/d[nc4h9co]
  J[5084] -= dqdci; // dwdot[ho2]/d[nc4h9co]
  J[5129] += dqdci; // dwdot[nc4h9cho]/d[nc4h9co]
  J[5130] -= dqdci; // dwdot[nc4h9co]/d[nc4h9co]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7888] += dqdT; // dwdot[nc4h9cho]/dT
  J[7889] -= dqdT; // dwdot[nc4h9co]/dT

  // reaction 503: nc4h9cho + oh => h2o + nc4h9co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[56];
  k_f = 26900 * exp(0.76 * logT - (-171.093666373605) * invT);
  dlnkfdT = 0.76 * invT + (-171.093666373605) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[56] -= q; // nc4h9cho
  wdot[57] += q; // nc4h9co
  // d()/d[oh]
  dqdci = +k_f * sc[56];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[412] -= dqdci; // dwdot[nc4h9cho]/d[oh]
  J[413] += dqdci; // dwdot[nc4h9co]/d[oh]
  // d()/d[nc4h9cho]
  dqdci = +k_f * sc[4];
  J[4988] -= dqdci; // dwdot[oh]/d[nc4h9cho]
  J[4989] += dqdci; // dwdot[h2o]/d[nc4h9cho]
  J[5040] -= dqdci; // dwdot[nc4h9cho]/d[nc4h9cho]
  J[5041] += dqdci; // dwdot[nc4h9co]/d[nc4h9cho]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7888] -= dqdT; // dwdot[nc4h9cho]/dT
  J[7889] += dqdT; // dwdot[nc4h9co]/dT

  // reaction 504: h2o + nc4h9co => nc4h9cho + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[57];
  k_f = 21430 * exp(0.73 * logT - (15720.4886397394) * invT);
  dlnkfdT = 0.73 * invT + (15720.4886397394) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[56] += q; // nc4h9cho
  wdot[57] -= q; // nc4h9co
  // d()/d[h2o]
  dqdci = +k_f * sc[57];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[501] += dqdci; // dwdot[nc4h9cho]/d[h2o]
  J[502] -= dqdci; // dwdot[nc4h9co]/d[h2o]
  // d()/d[nc4h9co]
  dqdci = +k_f * sc[5];
  J[5077] += dqdci; // dwdot[oh]/d[nc4h9co]
  J[5078] -= dqdci; // dwdot[h2o]/d[nc4h9co]
  J[5129] += dqdci; // dwdot[nc4h9cho]/d[nc4h9co]
  J[5130] -= dqdci; // dwdot[nc4h9co]/d[nc4h9co]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7888] += dqdT; // dwdot[nc4h9cho]/dT
  J[7889] -= dqdT; // dwdot[nc4h9co]/dT

  // reaction 505: h + nc4h9cho => h2 + nc4h9co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[56];
  k_f = 40000000 * exp(-(2113.50999637982) * invT);
  dlnkfdT = (2113.50999637982) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[56] -= q; // nc4h9cho
  wdot[57] += q; // nc4h9co
  // d()/d[h]
  dqdci = +k_f * sc[56];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[56] -= dqdci; // dwdot[nc4h9cho]/d[h]
  J[57] += dqdci; // dwdot[nc4h9co]/d[h]
  // d()/d[nc4h9cho]
  dqdci = +k_f * sc[0];
  J[4984] -= dqdci; // dwdot[h]/d[nc4h9cho]
  J[4985] += dqdci; // dwdot[h2]/d[nc4h9cho]
  J[5040] -= dqdci; // dwdot[nc4h9cho]/d[nc4h9cho]
  J[5041] += dqdci; // dwdot[nc4h9co]/d[nc4h9cho]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7888] -= dqdT; // dwdot[nc4h9cho]/dT
  J[7889] += dqdT; // dwdot[nc4h9co]/dT

  // reaction 506: h2 + nc4h9co => h + nc4h9cho
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[57];
  k_f = 18000000 * exp(-(12077.1999793133) * invT);
  dlnkfdT = (12077.1999793133) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[56] += q; // nc4h9cho
  wdot[57] -= q; // nc4h9co
  // d()/d[h2]
  dqdci = +k_f * sc[57];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[145] += dqdci; // dwdot[nc4h9cho]/d[h2]
  J[146] -= dqdci; // dwdot[nc4h9co]/d[h2]
  // d()/d[nc4h9co]
  dqdci = +k_f * sc[1];
  J[5073] += dqdci; // dwdot[h]/d[nc4h9co]
  J[5074] -= dqdci; // dwdot[h2]/d[nc4h9co]
  J[5129] += dqdci; // dwdot[nc4h9cho]/d[nc4h9co]
  J[5130] -= dqdci; // dwdot[nc4h9co]/d[nc4h9co]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7888] += dqdT; // dwdot[nc4h9cho]/dT
  J[7889] -= dqdT; // dwdot[nc4h9co]/dT

  // reaction 507: nc4h9cho + o => nc4h9co + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[56];
  k_f = 5000000 * exp(-(900.757831790448) * invT);
  dlnkfdT = (900.757831790448) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[4] += q;  // oh
  wdot[56] -= q; // nc4h9cho
  wdot[57] += q; // nc4h9co
  // d()/d[o]
  dqdci = +k_f * sc[56];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[182] += dqdci; // dwdot[oh]/d[o]
  J[234] -= dqdci; // dwdot[nc4h9cho]/d[o]
  J[235] += dqdci; // dwdot[nc4h9co]/d[o]
  // d()/d[nc4h9cho]
  dqdci = +k_f * sc[2];
  J[4986] -= dqdci; // dwdot[o]/d[nc4h9cho]
  J[4988] += dqdci; // dwdot[oh]/d[nc4h9cho]
  J[5040] -= dqdci; // dwdot[nc4h9cho]/d[nc4h9cho]
  J[5041] += dqdci; // dwdot[nc4h9co]/d[nc4h9cho]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7888] -= dqdT; // dwdot[nc4h9cho]/dT
  J[7889] += dqdT; // dwdot[nc4h9co]/dT

  // reaction 508: nc4h9co + oh => nc4h9cho + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[57];
  k_f = 1000000 * exp(-(9561.11665028967) * invT);
  dlnkfdT = (9561.11665028967) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[4] -= q;  // oh
  wdot[56] += q; // nc4h9cho
  wdot[57] -= q; // nc4h9co
  // d()/d[oh]
  dqdci = +k_f * sc[57];
  J[358] += dqdci; // dwdot[o]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[412] += dqdci; // dwdot[nc4h9cho]/d[oh]
  J[413] -= dqdci; // dwdot[nc4h9co]/d[oh]
  // d()/d[nc4h9co]
  dqdci = +k_f * sc[4];
  J[5075] += dqdci; // dwdot[o]/d[nc4h9co]
  J[5077] -= dqdci; // dwdot[oh]/d[nc4h9co]
  J[5129] += dqdci; // dwdot[nc4h9cho]/d[nc4h9co]
  J[5130] -= dqdci; // dwdot[nc4h9co]/d[nc4h9co]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7888] += dqdT; // dwdot[nc4h9cho]/dT
  J[7889] -= dqdT; // dwdot[nc4h9co]/dT

  // reaction 509: ho2 + nc4h9cho => h2o2 + nc4h9co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[56];
  k_f = 2800000 * exp(-(6843.74665494419) * invT);
  dlnkfdT = (6843.74665494419) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  wdot[56] -= q; // nc4h9cho
  wdot[57] += q; // nc4h9co
  // d()/d[ho2]
  dqdci = +k_f * sc[56];
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[991] += dqdci;  // dwdot[h2o2]/d[ho2]
  J[1035] -= dqdci; // dwdot[nc4h9cho]/d[ho2]
  J[1036] += dqdci; // dwdot[nc4h9co]/d[ho2]
  // d()/d[nc4h9cho]
  dqdci = +k_f * sc[11];
  J[4995] -= dqdci; // dwdot[ho2]/d[nc4h9cho]
  J[4996] += dqdci; // dwdot[h2o2]/d[nc4h9cho]
  J[5040] -= dqdci; // dwdot[nc4h9cho]/d[nc4h9cho]
  J[5041] += dqdci; // dwdot[nc4h9co]/d[nc4h9cho]
  // d()/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT
  J[7888] -= dqdT; // dwdot[nc4h9cho]/dT
  J[7889] += dqdT; // dwdot[nc4h9co]/dT

  // reaction 510: h2o2 + nc4h9co => ho2 + nc4h9cho
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[57];
  k_f = 1000000 * exp(-(5032.1666580472) * invT);
  dlnkfdT = (5032.1666580472) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // ho2
  wdot[12] -= q; // h2o2
  wdot[56] += q; // nc4h9cho
  wdot[57] -= q; // nc4h9co
  // d()/d[h2o2]
  dqdci = +k_f * sc[57];
  J[1079] += dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci; // dwdot[h2o2]/d[h2o2]
  J[1124] += dqdci; // dwdot[nc4h9cho]/d[h2o2]
  J[1125] -= dqdci; // dwdot[nc4h9co]/d[h2o2]
  // d()/d[nc4h9co]
  dqdci = +k_f * sc[12];
  J[5084] += dqdci; // dwdot[ho2]/d[nc4h9co]
  J[5085] -= dqdci; // dwdot[h2o2]/d[nc4h9co]
  J[5129] += dqdci; // dwdot[nc4h9cho]/d[nc4h9co]
  J[5130] -= dqdci; // dwdot[nc4h9co]/d[nc4h9co]
  // d()/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT; // dwdot[h2o2]/dT
  J[7888] += dqdT; // dwdot[nc4h9cho]/dT
  J[7889] -= dqdT; // dwdot[nc4h9co]/dT

  // reaction 511: ch3 + nc4h9cho => ch4 + nc4h9co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[56];
  k_f = 1700000 * exp(-(4247.14865939183) * invT);
  dlnkfdT = (4247.14865939183) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[56] -= q; // nc4h9cho
  wdot[57] += q; // nc4h9co
  // d()/d[ch3]
  dqdci = +k_f * sc[56];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[857] -= dqdci; // dwdot[nc4h9cho]/d[ch3]
  J[858] += dqdci; // dwdot[nc4h9co]/d[ch3]
  // d()/d[nc4h9cho]
  dqdci = +k_f * sc[9];
  J[4993] -= dqdci; // dwdot[ch3]/d[nc4h9cho]
  J[4994] += dqdci; // dwdot[ch4]/d[nc4h9cho]
  J[5040] -= dqdci; // dwdot[nc4h9cho]/d[nc4h9cho]
  J[5041] += dqdci; // dwdot[nc4h9co]/d[nc4h9cho]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7888] -= dqdT; // dwdot[nc4h9cho]/dT
  J[7889] += dqdT; // dwdot[nc4h9co]/dT

  // reaction 512: ch4 + nc4h9co => ch3 + nc4h9cho
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[57];
  k_f = 15000000 * exp(-(14090.0666425322) * invT);
  dlnkfdT = (14090.0666425322) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[56] += q; // nc4h9cho
  wdot[57] -= q; // nc4h9co
  // d()/d[ch4]
  dqdci = +k_f * sc[57];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[946] += dqdci; // dwdot[nc4h9cho]/d[ch4]
  J[947] -= dqdci; // dwdot[nc4h9co]/d[ch4]
  // d()/d[nc4h9co]
  dqdci = +k_f * sc[10];
  J[5082] += dqdci; // dwdot[ch3]/d[nc4h9co]
  J[5083] -= dqdci; // dwdot[ch4]/d[nc4h9co]
  J[5129] += dqdci; // dwdot[nc4h9cho]/d[nc4h9co]
  J[5130] -= dqdci; // dwdot[nc4h9co]/d[nc4h9co]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7888] += dqdT; // dwdot[nc4h9cho]/dT
  J[7889] -= dqdT; // dwdot[nc4h9co]/dT

  // reaction 513: ch3o2 + nc4h9cho => ch3o2h + nc4h9co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[38] * sc[56];
  k_f = 1000000 * exp(-(4780.55832514484) * invT);
  dlnkfdT = (4780.55832514484) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[38] -= q; // ch3o2
  wdot[39] += q; // ch3o2h
  wdot[56] -= q; // nc4h9cho
  wdot[57] += q; // nc4h9co
  // d()/d[ch3o2]
  dqdci = +k_f * sc[56];
  J[3420] -= dqdci; // dwdot[ch3o2]/d[ch3o2]
  J[3421] += dqdci; // dwdot[ch3o2h]/d[ch3o2]
  J[3438] -= dqdci; // dwdot[nc4h9cho]/d[ch3o2]
  J[3439] += dqdci; // dwdot[nc4h9co]/d[ch3o2]
  // d()/d[nc4h9cho]
  dqdci = +k_f * sc[38];
  J[5022] -= dqdci; // dwdot[ch3o2]/d[nc4h9cho]
  J[5023] += dqdci; // dwdot[ch3o2h]/d[nc4h9cho]
  J[5040] -= dqdci; // dwdot[nc4h9cho]/d[nc4h9cho]
  J[5041] += dqdci; // dwdot[nc4h9co]/d[nc4h9cho]
  // d()/dT
  J[7870] -= dqdT; // dwdot[ch3o2]/dT
  J[7871] += dqdT; // dwdot[ch3o2h]/dT
  J[7888] -= dqdT; // dwdot[nc4h9cho]/dT
  J[7889] += dqdT; // dwdot[nc4h9co]/dT

  // reaction 514: ch3o2h + nc4h9co => ch3o2 + nc4h9cho
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[39] * sc[57];
  k_f = 25000 * exp(-(5032.1666580472) * invT);
  dlnkfdT = (5032.1666580472) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[38] += q; // ch3o2
  wdot[39] -= q; // ch3o2h
  wdot[56] += q; // nc4h9cho
  wdot[57] -= q; // nc4h9co
  // d()/d[ch3o2h]
  dqdci = +k_f * sc[57];
  J[3509] += dqdci; // dwdot[ch3o2]/d[ch3o2h]
  J[3510] -= dqdci; // dwdot[ch3o2h]/d[ch3o2h]
  J[3527] += dqdci; // dwdot[nc4h9cho]/d[ch3o2h]
  J[3528] -= dqdci; // dwdot[nc4h9co]/d[ch3o2h]
  // d()/d[nc4h9co]
  dqdci = +k_f * sc[39];
  J[5111] += dqdci; // dwdot[ch3o2]/d[nc4h9co]
  J[5112] -= dqdci; // dwdot[ch3o2h]/d[nc4h9co]
  J[5129] += dqdci; // dwdot[nc4h9cho]/d[nc4h9co]
  J[5130] -= dqdci; // dwdot[nc4h9co]/d[nc4h9co]
  // d()/dT
  J[7870] += dqdT; // dwdot[ch3o2]/dT
  J[7871] -= dqdT; // dwdot[ch3o2h]/dT
  J[7888] += dqdT; // dwdot[nc4h9cho]/dT
  J[7889] -= dqdT; // dwdot[nc4h9co]/dT

  // reaction 515: nc4h9co => co + pc4h9
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[57];
  k_f = 100000000000 * exp(-(4830.87999172531) * invT);
  dlnkfdT = (4830.87999172531) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] += q;  // co
  wdot[31] += q; // pc4h9
  wdot[57] -= q; // nc4h9co
  // d()/d[nc4h9co]
  dqdci = +k_f;
  J[5079] += dqdci; // dwdot[co]/d[nc4h9co]
  J[5104] += dqdci; // dwdot[pc4h9]/d[nc4h9co]
  J[5130] -= dqdci; // dwdot[nc4h9co]/d[nc4h9co]
  // d()/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7863] += dqdT; // dwdot[pc4h9]/dT
  J[7889] -= dqdT; // dwdot[nc4h9co]/dT

  // reaction 516: co + pc4h9 => nc4h9co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[31];
  k_f = 100000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // co
  wdot[31] -= q; // pc4h9
  wdot[57] += q; // nc4h9co
  // d()/d[co]
  dqdci = +k_f * sc[31];
  J[540] -= dqdci; // dwdot[co]/d[co]
  J[565] -= dqdci; // dwdot[pc4h9]/d[co]
  J[591] += dqdci; // dwdot[nc4h9co]/d[co]
  // d()/d[pc4h9]
  dqdci = +k_f * sc[6];
  J[2765] -= dqdci; // dwdot[co]/d[pc4h9]
  J[2790] -= dqdci; // dwdot[pc4h9]/d[pc4h9]
  J[2816] += dqdci; // dwdot[nc4h9co]/d[pc4h9]
  // d()/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7863] -= dqdT; // dwdot[pc4h9]/dT
  J[7889] += dqdT; // dwdot[nc4h9co]/dT

  // reaction 517: ch2(s) + ch4 => 2 ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[50];
  k_f = 40000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += 2 * q; // ch3
  wdot[10] -= q;    // ch4
  wdot[50] -= q;    // ch2(s)
  // d()/d[ch4]
  dqdci = +k_f * sc[50];
  J[899] += 2 * dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci;     // dwdot[ch4]/d[ch4]
  J[940] -= dqdci;     // dwdot[ch2(s)]/d[ch4]
  // d()/d[ch2(s)]
  dqdci = +k_f * sc[10];
  J[4459] += 2 * dqdci; // dwdot[ch3]/d[ch2(s)]
  J[4460] -= dqdci;     // dwdot[ch4]/d[ch2(s)]
  J[4500] -= dqdci;     // dwdot[ch2(s)]/d[ch2(s)]
  // d()/dT
  J[7841] += 2 * dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT;     // dwdot[ch4]/dT
  J[7882] -= dqdT;     // dwdot[ch2(s)]/dT

  // reaction 518: 2 ch3 => ch2(s) + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[9] * sc[9]);
  k_f = 5429000000 * exp(-0.89 * logT - (7875.34081984386) * invT);
  dlnkfdT = -0.89 * invT + (7875.34081984386) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= 2 * q; // ch3
  wdot[10] += q;    // ch4
  wdot[50] += q;    // ch2(s)
  // d()/d[ch3]
  dqdci = +k_f * 2.000000 * sc[9];
  J[810] += -2 * dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci;      // dwdot[ch4]/d[ch3]
  J[851] += dqdci;      // dwdot[ch2(s)]/d[ch3]
  // d()/dT
  J[7841] += -2 * dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT;      // dwdot[ch4]/dT
  J[7882] += dqdT;      // dwdot[ch2(s)]/dT

  // reaction 519: c2h6 + ch2(s) => c2h5 + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[50];
  k_f = 120000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[15] -= q; // c2h6
  wdot[17] += q; // c2h5
  wdot[50] -= q; // ch2(s)
  // d()/d[c2h6]
  dqdci = +k_f * sc[50];
  J[1344] += dqdci; // dwdot[ch3]/d[c2h6]
  J[1350] -= dqdci; // dwdot[c2h6]/d[c2h6]
  J[1352] += dqdci; // dwdot[c2h5]/d[c2h6]
  J[1385] -= dqdci; // dwdot[ch2(s)]/d[c2h6]
  // d()/d[ch2(s)]
  dqdci = +k_f * sc[15];
  J[4459] += dqdci; // dwdot[ch3]/d[ch2(s)]
  J[4465] -= dqdci; // dwdot[c2h6]/d[ch2(s)]
  J[4467] += dqdci; // dwdot[c2h5]/d[ch2(s)]
  J[4500] -= dqdci; // dwdot[ch2(s)]/d[ch2(s)]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7847] -= dqdT; // dwdot[c2h6]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7882] -= dqdT; // dwdot[ch2(s)]/dT

  // reaction 520: c2h5 + ch3 => c2h6 + ch2(s)
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[17];
  k_f = 104100000 * exp(-0.33 * logT - (9973.75431624954) * invT);
  dlnkfdT = -0.33 * invT + (9973.75431624954) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[15] += q; // c2h6
  wdot[17] -= q; // c2h5
  wdot[50] += q; // ch2(s)
  // d()/d[ch3]
  dqdci = +k_f * sc[17];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[816] += dqdci; // dwdot[c2h6]/d[ch3]
  J[818] -= dqdci; // dwdot[c2h5]/d[ch3]
  J[851] += dqdci; // dwdot[ch2(s)]/d[ch3]
  // d()/d[c2h5]
  dqdci = +k_f * sc[9];
  J[1522] -= dqdci; // dwdot[ch3]/d[c2h5]
  J[1528] += dqdci; // dwdot[c2h6]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1563] += dqdci; // dwdot[ch2(s)]/d[c2h5]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7847] += dqdT; // dwdot[c2h6]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7882] += dqdT; // dwdot[ch2(s)]/dT

  // reaction 521: ch2(s) + o2 => co + h + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[50];
  k_f = 70000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[3] -= q;  // o2
  wdot[4] += q;  // oh
  wdot[6] += q;  // co
  wdot[50] -= q; // ch2(s)
  // d()/d[o2]
  dqdci = +k_f * sc[50];
  J[267] += dqdci; // dwdot[h]/d[o2]
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[271] += dqdci; // dwdot[oh]/d[o2]
  J[273] += dqdci; // dwdot[co]/d[o2]
  J[317] -= dqdci; // dwdot[ch2(s)]/d[o2]
  // d()/d[ch2(s)]
  dqdci = +k_f * sc[3];
  J[4450] += dqdci; // dwdot[h]/d[ch2(s)]
  J[4453] -= dqdci; // dwdot[o2]/d[ch2(s)]
  J[4454] += dqdci; // dwdot[oh]/d[ch2(s)]
  J[4456] += dqdci; // dwdot[co]/d[ch2(s)]
  J[4500] -= dqdci; // dwdot[ch2(s)]/d[ch2(s)]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7882] -= dqdT; // dwdot[ch2(s)]/dT

  // reaction 522: ch2(s) + h2 => ch3 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[50];
  k_f = 70000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[9] += q;  // ch3
  wdot[50] -= q; // ch2(s)
  // d()/d[h2]
  dqdci = +k_f * sc[50];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[98] += dqdci;  // dwdot[ch3]/d[h2]
  J[139] -= dqdci; // dwdot[ch2(s)]/d[h2]
  // d()/d[ch2(s)]
  dqdci = +k_f * sc[1];
  J[4450] += dqdci; // dwdot[h]/d[ch2(s)]
  J[4451] -= dqdci; // dwdot[h2]/d[ch2(s)]
  J[4459] += dqdci; // dwdot[ch3]/d[ch2(s)]
  J[4500] -= dqdci; // dwdot[ch2(s)]/d[ch2(s)]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7882] -= dqdT; // dwdot[ch2(s)]/dT

  // reaction 523: ch3 + h => ch2(s) + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[9];
  k_f = 248200000000 * exp(-0.89 * logT - (8116.88481943013) * invT);
  dlnkfdT = -0.89 * invT + (8116.88481943013) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[9] -= q;  // ch3
  wdot[50] += q; // ch2(s)
  // d()/d[h]
  dqdci = +k_f * sc[9];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[9] -= dqdci;  // dwdot[ch3]/d[h]
  J[50] += dqdci; // dwdot[ch2(s)]/d[h]
  // d()/d[ch3]
  dqdci = +k_f * sc[0];
  J[801] -= dqdci; // dwdot[h]/d[ch3]
  J[802] += dqdci; // dwdot[h2]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[851] += dqdci; // dwdot[ch2(s)]/d[ch3]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7882] += dqdT; // dwdot[ch2(s)]/dT

  // reaction 524: ch2(s) + o => co + 2 h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[50];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += 2 * q; // h
  wdot[2] -= q;     // o
  wdot[6] += q;     // co
  wdot[50] -= q;    // ch2(s)
  // d()/d[o]
  dqdci = +k_f * sc[50];
  J[178] += 2 * dqdci; // dwdot[h]/d[o]
  J[180] -= dqdci;     // dwdot[o]/d[o]
  J[184] += dqdci;     // dwdot[co]/d[o]
  J[228] -= dqdci;     // dwdot[ch2(s)]/d[o]
  // d()/d[ch2(s)]
  dqdci = +k_f * sc[2];
  J[4450] += 2 * dqdci; // dwdot[h]/d[ch2(s)]
  J[4452] -= dqdci;     // dwdot[o]/d[ch2(s)]
  J[4456] += dqdci;     // dwdot[co]/d[ch2(s)]
  J[4500] -= dqdci;     // dwdot[ch2(s)]/d[ch2(s)]
  // d()/dT
  J[7832] += 2 * dqdT; // dwdot[h]/dT
  J[7834] -= dqdT;     // dwdot[o]/dT
  J[7838] += dqdT;     // dwdot[co]/dT
  J[7882] -= dqdT;     // dwdot[ch2(s)]/dT

  // reaction 525: ch2(s) + oh => ch2o + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[50];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[4] -= q;  // oh
  wdot[13] += q; // ch2o
  wdot[50] -= q; // ch2(s)
  // d()/d[oh]
  dqdci = +k_f * sc[50];
  J[356] += dqdci; // dwdot[h]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[369] += dqdci; // dwdot[ch2o]/d[oh]
  J[406] -= dqdci; // dwdot[ch2(s)]/d[oh]
  // d()/d[ch2(s)]
  dqdci = +k_f * sc[4];
  J[4450] += dqdci; // dwdot[h]/d[ch2(s)]
  J[4454] -= dqdci; // dwdot[oh]/d[ch2(s)]
  J[4463] += dqdci; // dwdot[ch2o]/d[ch2(s)]
  J[4500] -= dqdci; // dwdot[ch2(s)]/d[ch2(s)]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT
  J[7882] -= dqdT; // dwdot[ch2(s)]/dT

  // reaction 526: ch2o + h => ch2(s) + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[13];
  k_f = 3194000000000 * exp(-0.89 * logT - (44212.6162576027) * invT);
  dlnkfdT = -0.89 * invT + (44212.6162576027) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[4] += q;  // oh
  wdot[13] -= q; // ch2o
  wdot[50] += q; // ch2(s)
  // d()/d[h]
  dqdci = +k_f * sc[13];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[4] += dqdci;  // dwdot[oh]/d[h]
  J[13] -= dqdci; // dwdot[ch2o]/d[h]
  J[50] += dqdci; // dwdot[ch2(s)]/d[h]
  // d()/d[ch2o]
  dqdci = +k_f * sc[0];
  J[1157] -= dqdci; // dwdot[h]/d[ch2o]
  J[1161] += dqdci; // dwdot[oh]/d[ch2o]
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  J[1207] += dqdci; // dwdot[ch2(s)]/d[ch2o]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT
  J[7882] += dqdT; // dwdot[ch2(s)]/dT

  // reaction 527: ch2(s) + co2 => ch2o + co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[50];
  k_f = 3000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] += q;  // co
  wdot[8] -= q;  // co2
  wdot[13] += q; // ch2o
  wdot[50] -= q; // ch2(s)
  // d()/d[co2]
  dqdci = +k_f * sc[50];
  J[718] += dqdci; // dwdot[co]/d[co2]
  J[720] -= dqdci; // dwdot[co2]/d[co2]
  J[725] += dqdci; // dwdot[ch2o]/d[co2]
  J[762] -= dqdci; // dwdot[ch2(s)]/d[co2]
  // d()/d[ch2(s)]
  dqdci = +k_f * sc[8];
  J[4456] += dqdci; // dwdot[co]/d[ch2(s)]
  J[4458] -= dqdci; // dwdot[co2]/d[ch2(s)]
  J[4463] += dqdci; // dwdot[ch2o]/d[ch2(s)]
  J[4500] -= dqdci; // dwdot[ch2(s)]/d[ch2(s)]
  // d()/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7840] -= dqdT; // dwdot[co2]/dT
  J[7845] += dqdT; // dwdot[ch2o]/dT
  J[7882] -= dqdT; // dwdot[ch2(s)]/dT

  // reaction 528: ch2o + co => ch2(s) + co2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[13];
  k_f = 2852000000 * exp(-0.89 * logT - (32970.7559435252) * invT);
  dlnkfdT = -0.89 * invT + (32970.7559435252) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // co
  wdot[8] += q;  // co2
  wdot[13] -= q; // ch2o
  wdot[50] += q; // ch2(s)
  // d()/d[co]
  dqdci = +k_f * sc[13];
  J[540] -= dqdci; // dwdot[co]/d[co]
  J[542] += dqdci; // dwdot[co2]/d[co]
  J[547] -= dqdci; // dwdot[ch2o]/d[co]
  J[584] += dqdci; // dwdot[ch2(s)]/d[co]
  // d()/d[ch2o]
  dqdci = +k_f * sc[6];
  J[1163] -= dqdci; // dwdot[co]/d[ch2o]
  J[1165] += dqdci; // dwdot[co2]/d[ch2o]
  J[1170] -= dqdci; // dwdot[ch2o]/d[ch2o]
  J[1207] += dqdci; // dwdot[ch2(s)]/d[ch2o]
  // d()/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7840] += dqdT; // dwdot[co2]/dT
  J[7845] -= dqdT; // dwdot[ch2o]/dT
  J[7882] += dqdT; // dwdot[ch2(s)]/dT

  // reaction 529: ch2(s) + ch3 => c2h4 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[50];
  k_f = 20000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[9] -= q;  // ch3
  wdot[16] += q; // c2h4
  wdot[50] -= q; // ch2(s)
  // d()/d[ch3]
  dqdci = +k_f * sc[50];
  J[801] += dqdci; // dwdot[h]/d[ch3]
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[817] += dqdci; // dwdot[c2h4]/d[ch3]
  J[851] -= dqdci; // dwdot[ch2(s)]/d[ch3]
  // d()/d[ch2(s)]
  dqdci = +k_f * sc[9];
  J[4450] += dqdci; // dwdot[h]/d[ch2(s)]
  J[4459] -= dqdci; // dwdot[ch3]/d[ch2(s)]
  J[4466] += dqdci; // dwdot[c2h4]/d[ch2(s)]
  J[4500] -= dqdci; // dwdot[ch2(s)]/d[ch2(s)]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7882] -= dqdT; // dwdot[ch2(s)]/dT

  // reaction 530: c2h4 + h => ch2(s) + ch3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[16];
  k_f = 2671000000 * exp(-0.06 * logT - (34641.4352739969) * invT);
  dlnkfdT = -0.06 * invT + (34641.4352739969) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[9] += q;  // ch3
  wdot[16] -= q; // c2h4
  wdot[50] += q; // ch2(s)
  // d()/d[h]
  dqdci = +k_f * sc[16];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[9] += dqdci;  // dwdot[ch3]/d[h]
  J[16] -= dqdci; // dwdot[c2h4]/d[h]
  J[50] += dqdci; // dwdot[ch2(s)]/d[h]
  // d()/d[c2h4]
  dqdci = +k_f * sc[0];
  J[1424] -= dqdci; // dwdot[h]/d[c2h4]
  J[1433] += dqdci; // dwdot[ch3]/d[c2h4]
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1474] += dqdci; // dwdot[ch2(s)]/d[c2h4]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7882] += dqdT; // dwdot[ch2(s)]/dT

  // reaction 531: ch2(s) + ch2co => c2h4 + co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[20] * sc[50];
  k_f = 160000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] += q;  // co
  wdot[16] += q; // c2h4
  wdot[20] -= q; // ch2co
  wdot[50] -= q; // ch2(s)
  // d()/d[ch2co]
  dqdci = +k_f * sc[50];
  J[1786] += dqdci; // dwdot[co]/d[ch2co]
  J[1796] += dqdci; // dwdot[c2h4]/d[ch2co]
  J[1800] -= dqdci; // dwdot[ch2co]/d[ch2co]
  J[1830] -= dqdci; // dwdot[ch2(s)]/d[ch2co]
  // d()/d[ch2(s)]
  dqdci = +k_f * sc[20];
  J[4456] += dqdci; // dwdot[co]/d[ch2(s)]
  J[4466] += dqdci; // dwdot[c2h4]/d[ch2(s)]
  J[4470] -= dqdci; // dwdot[ch2co]/d[ch2(s)]
  J[4500] -= dqdci; // dwdot[ch2(s)]/d[ch2(s)]
  // d()/dT
  J[7838] += dqdT; // dwdot[co]/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7852] -= dqdT; // dwdot[ch2co]/dT
  J[7882] -= dqdT; // dwdot[ch2(s)]/dT

  // reaction 532: c2h4 + co => ch2(s) + ch2co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[16];
  k_f = 4596000000 * exp(-0.06 * logT - (53139.6799089784) * invT);
  dlnkfdT = -0.06 * invT + (53139.6799089784) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // co
  wdot[16] -= q; // c2h4
  wdot[20] += q; // ch2co
  wdot[50] += q; // ch2(s)
  // d()/d[co]
  dqdci = +k_f * sc[16];
  J[540] -= dqdci; // dwdot[co]/d[co]
  J[550] -= dqdci; // dwdot[c2h4]/d[co]
  J[554] += dqdci; // dwdot[ch2co]/d[co]
  J[584] += dqdci; // dwdot[ch2(s)]/d[co]
  // d()/d[c2h4]
  dqdci = +k_f * sc[6];
  J[1430] -= dqdci; // dwdot[co]/d[c2h4]
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1444] += dqdci; // dwdot[ch2co]/d[c2h4]
  J[1474] += dqdci; // dwdot[ch2(s)]/d[c2h4]
  // d()/dT
  J[7838] -= dqdT; // dwdot[co]/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7852] += dqdT; // dwdot[ch2co]/dT
  J[7882] += dqdT; // dwdot[ch2(s)]/dT

  // reaction 533: nc7h16 => c7h15-1 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[58];
  k_f = 1.34e+88 * exp(-21.17 * logT - (71859.339876914) * invT);
  dlnkfdT = -21.17 * invT + (71859.339876914) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[58] -= q; // nc7h16
  wdot[59] += q; // c7h15-1
  // d()/d[nc7h16]
  dqdci = +k_f;
  J[5162] += dqdci; // dwdot[h]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5221] += dqdci; // dwdot[c7h15-1]/d[nc7h16]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7891] += dqdT; // dwdot[c7h15-1]/dT

  // reaction 534: c7h15-1 + h => nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[59];
  k_f = 3.374e+76 * exp(-20.22 * logT - (19932.4121325249) * invT);
  dlnkfdT = -20.22 * invT + (19932.4121325249) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[58] += q; // nc7h16
  wdot[59] -= q; // c7h15-1
  // d()/d[h]
  dqdci = +k_f * sc[59];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[58] += dqdci; // dwdot[nc7h16]/d[h]
  J[59] -= dqdci; // dwdot[c7h15-1]/d[h]
  // d()/d[c7h15-1]
  dqdci = +k_f * sc[0];
  J[5251] -= dqdci; // dwdot[h]/d[c7h15-1]
  J[5309] += dqdci; // dwdot[nc7h16]/d[c7h15-1]
  J[5310] -= dqdci; // dwdot[c7h15-1]/d[c7h15-1]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7891] -= dqdT; // dwdot[c7h15-1]/dT

  // reaction 535: nc7h16 => c7h15-2 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[58];
  k_f = 6.5e+87 * exp(-21.01 * logT - (70198.7248797584) * invT);
  dlnkfdT = -21.01 * invT + (70198.7248797584) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[58] -= q; // nc7h16
  wdot[60] += q; // c7h15-2
  // d()/d[nc7h16]
  dqdci = +k_f;
  J[5162] += dqdci; // dwdot[h]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5222] += dqdci; // dwdot[c7h15-2]/d[nc7h16]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7892] += dqdT; // dwdot[c7h15-2]/dT

  // reaction 536: c7h15-2 + h => nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[60];
  k_f = 5.207e+74 * exp(-19.67 * logT - (19570.0961331455) * invT);
  dlnkfdT = -19.67 * invT + (19570.0961331455) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[58] += q; // nc7h16
  wdot[60] -= q; // c7h15-2
  // d()/d[h]
  dqdci = +k_f * sc[60];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[58] += dqdci; // dwdot[nc7h16]/d[h]
  J[60] -= dqdci; // dwdot[c7h15-2]/d[h]
  // d()/d[c7h15-2]
  dqdci = +k_f * sc[0];
  J[5340] -= dqdci; // dwdot[h]/d[c7h15-2]
  J[5398] += dqdci; // dwdot[nc7h16]/d[c7h15-2]
  J[5400] -= dqdci; // dwdot[c7h15-2]/d[c7h15-2]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7892] -= dqdT; // dwdot[c7h15-2]/dT

  // reaction 537: nc7h16 => c7h15-3 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[58];
  k_f = 6.5e+87 * exp(-21.01 * logT - (70198.7248797584) * invT);
  dlnkfdT = -21.01 * invT + (70198.7248797584) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[58] -= q; // nc7h16
  wdot[61] += q; // c7h15-3
  // d()/d[nc7h16]
  dqdci = +k_f;
  J[5162] += dqdci; // dwdot[h]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5223] += dqdci; // dwdot[c7h15-3]/d[nc7h16]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT

  // reaction 538: c7h15-3 + h => nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[61];
  k_f = 5.207e+74 * exp(-19.67 * logT - (19570.0961331455) * invT);
  dlnkfdT = -19.67 * invT + (19570.0961331455) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[58] += q; // nc7h16
  wdot[61] -= q; // c7h15-3
  // d()/d[h]
  dqdci = +k_f * sc[61];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[58] += dqdci; // dwdot[nc7h16]/d[h]
  J[61] -= dqdci; // dwdot[c7h15-3]/d[h]
  // d()/d[c7h15-3]
  dqdci = +k_f * sc[0];
  J[5429] -= dqdci; // dwdot[h]/d[c7h15-3]
  J[5487] += dqdci; // dwdot[nc7h16]/d[c7h15-3]
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT

  // reaction 539: nc7h16 => c7h15-4 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[58];
  k_f = 3.25e+87 * exp(-21.01 * logT - (70198.7248797584) * invT);
  dlnkfdT = -21.01 * invT + (70198.7248797584) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[58] -= q; // nc7h16
  wdot[62] += q; // c7h15-4
  // d()/d[nc7h16]
  dqdci = +k_f;
  J[5162] += dqdci; // dwdot[h]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5224] += dqdci; // dwdot[c7h15-4]/d[nc7h16]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7894] += dqdT; // dwdot[c7h15-4]/dT

  // reaction 540: c7h15-4 + h => nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[62];
  k_f = 5.187e+74 * exp(-19.67 * logT - (19570.0961331455) * invT);
  dlnkfdT = -19.67 * invT + (19570.0961331455) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[58] += q; // nc7h16
  wdot[62] -= q; // c7h15-4
  // d()/d[h]
  dqdci = +k_f * sc[62];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[58] += dqdci; // dwdot[nc7h16]/d[h]
  J[62] -= dqdci; // dwdot[c7h15-4]/d[h]
  // d()/d[c7h15-4]
  dqdci = +k_f * sc[0];
  J[5518] -= dqdci; // dwdot[h]/d[c7h15-4]
  J[5576] += dqdci; // dwdot[nc7h16]/d[c7h15-4]
  J[5580] -= dqdci; // dwdot[c7h15-4]/d[c7h15-4]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7894] -= dqdT; // dwdot[c7h15-4]/dT

  // reaction 541: nc7h16 => nc3h7 + pc4h9
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[58];
  k_f = 1.415e+78 * exp(-17.71 * logT - (60738.2515626297) * invT);
  dlnkfdT = -17.71 * invT + (60738.2515626297) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[28] += q; // nc3h7
  wdot[31] += q; // pc4h9
  wdot[58] -= q; // nc7h16
  // d()/d[nc7h16]
  dqdci = +k_f;
  J[5190] += dqdci; // dwdot[nc3h7]/d[nc7h16]
  J[5193] += dqdci; // dwdot[pc4h9]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  // d()/dT
  J[7860] += dqdT; // dwdot[nc3h7]/dT
  J[7863] += dqdT; // dwdot[pc4h9]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT

  // reaction 542: nc3h7 + pc4h9 => nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[28] * sc[31];
  k_f = 1.363e+62 * exp(-16.11 * logT - (16334.4129720212) * invT);
  dlnkfdT = -16.11 * invT + (16334.4129720212) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[28] -= q; // nc3h7
  wdot[31] -= q; // pc4h9
  wdot[58] += q; // nc7h16
  // d()/d[nc3h7]
  dqdci = +k_f * sc[31];
  J[2520] -= dqdci; // dwdot[nc3h7]/d[nc3h7]
  J[2523] -= dqdci; // dwdot[pc4h9]/d[nc3h7]
  J[2550] += dqdci; // dwdot[nc7h16]/d[nc3h7]
  // d()/d[pc4h9]
  dqdci = +k_f * sc[28];
  J[2787] -= dqdci; // dwdot[nc3h7]/d[pc4h9]
  J[2790] -= dqdci; // dwdot[pc4h9]/d[pc4h9]
  J[2817] += dqdci; // dwdot[nc7h16]/d[pc4h9]
  // d()/dT
  J[7860] -= dqdT; // dwdot[nc3h7]/dT
  J[7863] -= dqdT; // dwdot[pc4h9]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT

  // reaction 543: h + nc7h16 => c7h15-1 + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[58];
  k_f = 0.188 * exp(2.75 * logT - (3160.20066125364) * invT);
  dlnkfdT = 2.75 * invT + (3160.20066125364) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[58] -= q; // nc7h16
  wdot[59] += q; // c7h15-1
  // d()/d[h]
  dqdci = +k_f * sc[58];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[58] -= dqdci; // dwdot[nc7h16]/d[h]
  J[59] += dqdci; // dwdot[c7h15-1]/d[h]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[0];
  J[5162] -= dqdci; // dwdot[h]/d[nc7h16]
  J[5163] += dqdci; // dwdot[h2]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5221] += dqdci; // dwdot[c7h15-1]/d[nc7h16]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7891] += dqdT; // dwdot[c7h15-1]/dT

  // reaction 544: c7h15-1 + h2 => h + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[59];
  k_f = 0.008926 * exp(2.7 * logT - (5308.93582423979) * invT);
  dlnkfdT = 2.7 * invT + (5308.93582423979) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[58] += q; // nc7h16
  wdot[59] -= q; // c7h15-1
  // d()/d[h2]
  dqdci = +k_f * sc[59];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[147] += dqdci; // dwdot[nc7h16]/d[h2]
  J[148] -= dqdci; // dwdot[c7h15-1]/d[h2]
  // d()/d[c7h15-1]
  dqdci = +k_f * sc[1];
  J[5251] += dqdci; // dwdot[h]/d[c7h15-1]
  J[5252] -= dqdci; // dwdot[h2]/d[c7h15-1]
  J[5309] += dqdci; // dwdot[nc7h16]/d[c7h15-1]
  J[5310] -= dqdci; // dwdot[c7h15-1]/d[c7h15-1]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7891] -= dqdT; // dwdot[c7h15-1]/dT

  // reaction 545: h + nc7h16 => c7h15-2 + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[58];
  k_f = 2.6 * exp(2.4 * logT - (2249.8817128129) * invT);
  dlnkfdT = 2.4 * invT + (2249.8817128129) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[58] -= q; // nc7h16
  wdot[60] += q; // c7h15-2
  // d()/d[h]
  dqdci = +k_f * sc[58];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[58] -= dqdci; // dwdot[nc7h16]/d[h]
  J[60] += dqdci; // dwdot[c7h15-2]/d[h]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[0];
  J[5162] -= dqdci; // dwdot[h]/d[nc7h16]
  J[5163] += dqdci; // dwdot[h2]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5222] += dqdci; // dwdot[c7h15-2]/d[nc7h16]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7892] += dqdT; // dwdot[c7h15-2]/dT

  // reaction 546: c7h15-2 + h2 => h + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[60];
  k_f = 0.003928 * exp(2.74 * logT - (5666.21965696114) * invT);
  dlnkfdT = 2.74 * invT + (5666.21965696114) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[58] += q; // nc7h16
  wdot[60] -= q; // c7h15-2
  // d()/d[h2]
  dqdci = +k_f * sc[60];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[147] += dqdci; // dwdot[nc7h16]/d[h2]
  J[149] -= dqdci; // dwdot[c7h15-2]/d[h2]
  // d()/d[c7h15-2]
  dqdci = +k_f * sc[1];
  J[5340] += dqdci; // dwdot[h]/d[c7h15-2]
  J[5341] -= dqdci; // dwdot[h2]/d[c7h15-2]
  J[5398] += dqdci; // dwdot[nc7h16]/d[c7h15-2]
  J[5400] -= dqdci; // dwdot[c7h15-2]/d[c7h15-2]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7892] -= dqdT; // dwdot[c7h15-2]/dT

  // reaction 547: h + nc7h16 => c7h15-3 + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[58];
  k_f = 2.6 * exp(2.4 * logT - (2249.8817128129) * invT);
  dlnkfdT = 2.4 * invT + (2249.8817128129) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[58] -= q; // nc7h16
  wdot[61] += q; // c7h15-3
  // d()/d[h]
  dqdci = +k_f * sc[58];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[58] -= dqdci; // dwdot[nc7h16]/d[h]
  J[61] += dqdci; // dwdot[c7h15-3]/d[h]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[0];
  J[5162] -= dqdci; // dwdot[h]/d[nc7h16]
  J[5163] += dqdci; // dwdot[h2]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5223] += dqdci; // dwdot[c7h15-3]/d[nc7h16]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT

  // reaction 548: c7h15-3 + h2 => h + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[61];
  k_f = 0.003928 * exp(2.74 * logT - (5666.21965696114) * invT);
  dlnkfdT = 2.74 * invT + (5666.21965696114) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[58] += q; // nc7h16
  wdot[61] -= q; // c7h15-3
  // d()/d[h2]
  dqdci = +k_f * sc[61];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[147] += dqdci; // dwdot[nc7h16]/d[h2]
  J[150] -= dqdci; // dwdot[c7h15-3]/d[h2]
  // d()/d[c7h15-3]
  dqdci = +k_f * sc[1];
  J[5429] += dqdci; // dwdot[h]/d[c7h15-3]
  J[5430] -= dqdci; // dwdot[h2]/d[c7h15-3]
  J[5487] += dqdci; // dwdot[nc7h16]/d[c7h15-3]
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT

  // reaction 549: h + nc7h16 => c7h15-4 + h2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[58];
  k_f = 1.3 * exp(2.4 * logT - (2249.8817128129) * invT);
  dlnkfdT = 2.4 * invT + (2249.8817128129) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[1] += q;  // h2
  wdot[58] -= q; // nc7h16
  wdot[62] += q; // c7h15-4
  // d()/d[h]
  dqdci = +k_f * sc[58];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[1] += dqdci;  // dwdot[h2]/d[h]
  J[58] -= dqdci; // dwdot[nc7h16]/d[h]
  J[62] += dqdci; // dwdot[c7h15-4]/d[h]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[0];
  J[5162] -= dqdci; // dwdot[h]/d[nc7h16]
  J[5163] += dqdci; // dwdot[h2]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5224] += dqdci; // dwdot[c7h15-4]/d[nc7h16]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7833] += dqdT; // dwdot[h2]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7894] += dqdT; // dwdot[c7h15-4]/dT

  // reaction 550: c7h15-4 + h2 => h + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[62];
  k_f = 0.003913 * exp(2.74 * logT - (5666.21965696114) * invT);
  dlnkfdT = 2.74 * invT + (5666.21965696114) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[1] -= q;  // h2
  wdot[58] += q; // nc7h16
  wdot[62] -= q; // c7h15-4
  // d()/d[h2]
  dqdci = +k_f * sc[62];
  J[89] += dqdci;  // dwdot[h]/d[h2]
  J[90] -= dqdci;  // dwdot[h2]/d[h2]
  J[147] += dqdci; // dwdot[nc7h16]/d[h2]
  J[151] -= dqdci; // dwdot[c7h15-4]/d[h2]
  // d()/d[c7h15-4]
  dqdci = +k_f * sc[1];
  J[5518] += dqdci; // dwdot[h]/d[c7h15-4]
  J[5519] -= dqdci; // dwdot[h2]/d[c7h15-4]
  J[5576] += dqdci; // dwdot[nc7h16]/d[c7h15-4]
  J[5580] -= dqdci; // dwdot[c7h15-4]/d[c7h15-4]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7833] -= dqdT; // dwdot[h2]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7894] -= dqdT; // dwdot[c7h15-4]/dT

  // reaction 551: nc7h16 + o => c7h15-1 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[58];
  k_f = 0.193 * exp(2.68 * logT - (1869.95313013034) * invT);
  dlnkfdT = 2.68 * invT + (1869.95313013034) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[4] += q;  // oh
  wdot[58] -= q; // nc7h16
  wdot[59] += q; // c7h15-1
  // d()/d[o]
  dqdci = +k_f * sc[58];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[182] += dqdci; // dwdot[oh]/d[o]
  J[236] -= dqdci; // dwdot[nc7h16]/d[o]
  J[237] += dqdci; // dwdot[c7h15-1]/d[o]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[2];
  J[5164] -= dqdci; // dwdot[o]/d[nc7h16]
  J[5166] += dqdci; // dwdot[oh]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5221] += dqdci; // dwdot[c7h15-1]/d[nc7h16]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7891] += dqdT; // dwdot[c7h15-1]/dT

  // reaction 552: c7h15-1 + oh => nc7h16 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[59];
  k_f = 0.004025 * exp(2.63 * logT - (2965.45581158721) * invT);
  dlnkfdT = 2.63 * invT + (2965.45581158721) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[4] -= q;  // oh
  wdot[58] += q; // nc7h16
  wdot[59] -= q; // c7h15-1
  // d()/d[oh]
  dqdci = +k_f * sc[59];
  J[358] += dqdci; // dwdot[o]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[414] += dqdci; // dwdot[nc7h16]/d[oh]
  J[415] -= dqdci; // dwdot[c7h15-1]/d[oh]
  // d()/d[c7h15-1]
  dqdci = +k_f * sc[4];
  J[5253] += dqdci; // dwdot[o]/d[c7h15-1]
  J[5255] -= dqdci; // dwdot[oh]/d[c7h15-1]
  J[5309] += dqdci; // dwdot[nc7h16]/d[c7h15-1]
  J[5310] -= dqdci; // dwdot[c7h15-1]/d[c7h15-1]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7891] -= dqdT; // dwdot[c7h15-1]/dT

  // reaction 553: nc7h16 + o => c7h15-2 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[58];
  k_f = 0.0954 * exp(2.71 * logT - (1059.77429818474) * invT);
  dlnkfdT = 2.71 * invT + (1059.77429818474) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[4] += q;  // oh
  wdot[58] -= q; // nc7h16
  wdot[60] += q; // c7h15-2
  // d()/d[o]
  dqdci = +k_f * sc[58];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[182] += dqdci; // dwdot[oh]/d[o]
  J[236] -= dqdci; // dwdot[nc7h16]/d[o]
  J[238] += dqdci; // dwdot[c7h15-2]/d[o]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[2];
  J[5164] -= dqdci; // dwdot[o]/d[nc7h16]
  J[5166] += dqdci; // dwdot[oh]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5222] += dqdci; // dwdot[c7h15-2]/d[nc7h16]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7892] += dqdT; // dwdot[c7h15-2]/dT

  // reaction 554: c7h15-2 + oh => nc7h16 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[60];
  k_f = 6.33e-05 * exp(3.05 * logT - (3420.86689414048) * invT);
  dlnkfdT = 3.05 * invT + (3420.86689414048) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[4] -= q;  // oh
  wdot[58] += q; // nc7h16
  wdot[60] -= q; // c7h15-2
  // d()/d[oh]
  dqdci = +k_f * sc[60];
  J[358] += dqdci; // dwdot[o]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[414] += dqdci; // dwdot[nc7h16]/d[oh]
  J[416] -= dqdci; // dwdot[c7h15-2]/d[oh]
  // d()/d[c7h15-2]
  dqdci = +k_f * sc[4];
  J[5342] += dqdci; // dwdot[o]/d[c7h15-2]
  J[5344] -= dqdci; // dwdot[oh]/d[c7h15-2]
  J[5398] += dqdci; // dwdot[nc7h16]/d[c7h15-2]
  J[5400] -= dqdci; // dwdot[c7h15-2]/d[c7h15-2]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7892] -= dqdT; // dwdot[c7h15-2]/dT

  // reaction 555: nc7h16 + o => c7h15-3 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[58];
  k_f = 0.0954 * exp(2.71 * logT - (1059.77429818474) * invT);
  dlnkfdT = 2.71 * invT + (1059.77429818474) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[4] += q;  // oh
  wdot[58] -= q; // nc7h16
  wdot[61] += q; // c7h15-3
  // d()/d[o]
  dqdci = +k_f * sc[58];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[182] += dqdci; // dwdot[oh]/d[o]
  J[236] -= dqdci; // dwdot[nc7h16]/d[o]
  J[239] += dqdci; // dwdot[c7h15-3]/d[o]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[2];
  J[5164] -= dqdci; // dwdot[o]/d[nc7h16]
  J[5166] += dqdci; // dwdot[oh]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5223] += dqdci; // dwdot[c7h15-3]/d[nc7h16]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT

  // reaction 556: c7h15-3 + oh => nc7h16 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[61];
  k_f = 6.33e-05 * exp(3.05 * logT - (3420.86689414048) * invT);
  dlnkfdT = 3.05 * invT + (3420.86689414048) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[4] -= q;  // oh
  wdot[58] += q; // nc7h16
  wdot[61] -= q; // c7h15-3
  // d()/d[oh]
  dqdci = +k_f * sc[61];
  J[358] += dqdci; // dwdot[o]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[414] += dqdci; // dwdot[nc7h16]/d[oh]
  J[417] -= dqdci; // dwdot[c7h15-3]/d[oh]
  // d()/d[c7h15-3]
  dqdci = +k_f * sc[4];
  J[5431] += dqdci; // dwdot[o]/d[c7h15-3]
  J[5433] -= dqdci; // dwdot[oh]/d[c7h15-3]
  J[5487] += dqdci; // dwdot[nc7h16]/d[c7h15-3]
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT

  // reaction 557: nc7h16 + o => c7h15-4 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[58];
  k_f = 0.0477 * exp(2.71 * logT - (1059.77429818474) * invT);
  dlnkfdT = 2.71 * invT + (1059.77429818474) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[4] += q;  // oh
  wdot[58] -= q; // nc7h16
  wdot[62] += q; // c7h15-4
  // d()/d[o]
  dqdci = +k_f * sc[58];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[182] += dqdci; // dwdot[oh]/d[o]
  J[236] -= dqdci; // dwdot[nc7h16]/d[o]
  J[240] += dqdci; // dwdot[c7h15-4]/d[o]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[2];
  J[5164] -= dqdci; // dwdot[o]/d[nc7h16]
  J[5166] += dqdci; // dwdot[oh]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5224] += dqdci; // dwdot[c7h15-4]/d[nc7h16]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7894] += dqdT; // dwdot[c7h15-4]/dT

  // reaction 558: c7h15-4 + oh => nc7h16 + o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[62];
  k_f = 6.306e-05 * exp(3.05 * logT - (3420.86689414048) * invT);
  dlnkfdT = 3.05 * invT + (3420.86689414048) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // o
  wdot[4] -= q;  // oh
  wdot[58] += q; // nc7h16
  wdot[62] -= q; // c7h15-4
  // d()/d[oh]
  dqdci = +k_f * sc[62];
  J[358] += dqdci; // dwdot[o]/d[oh]
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[414] += dqdci; // dwdot[nc7h16]/d[oh]
  J[418] -= dqdci; // dwdot[c7h15-4]/d[oh]
  // d()/d[c7h15-4]
  dqdci = +k_f * sc[4];
  J[5520] += dqdci; // dwdot[o]/d[c7h15-4]
  J[5522] -= dqdci; // dwdot[oh]/d[c7h15-4]
  J[5576] += dqdci; // dwdot[nc7h16]/d[c7h15-4]
  J[5580] -= dqdci; // dwdot[c7h15-4]/d[c7h15-4]
  // d()/dT
  J[7834] += dqdT; // dwdot[o]/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7894] -= dqdT; // dwdot[c7h15-4]/dT

  // reaction 559: nc7h16 + oh => c7h15-1 + h2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[58];
  k_f = 10500 * exp(0.97 * logT - (800.114498629504) * invT);
  dlnkfdT = 0.97 * invT + (800.114498629504) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[58] -= q; // nc7h16
  wdot[59] += q; // c7h15-1
  // d()/d[oh]
  dqdci = +k_f * sc[58];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[414] -= dqdci; // dwdot[nc7h16]/d[oh]
  J[415] += dqdci; // dwdot[c7h15-1]/d[oh]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[4];
  J[5166] -= dqdci; // dwdot[oh]/d[nc7h16]
  J[5167] += dqdci; // dwdot[h2o]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5221] += dqdci; // dwdot[c7h15-1]/d[nc7h16]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7891] += dqdT; // dwdot[c7h15-1]/dT

  // reaction 560: c7h15-1 + h2o => nc7h16 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[59];
  k_f = 15000 * exp(1.05 * logT - (11740.0448132241) * invT);
  dlnkfdT = 1.05 * invT + (11740.0448132241) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[58] += q; // nc7h16
  wdot[59] -= q; // c7h15-1
  // d()/d[h2o]
  dqdci = +k_f * sc[59];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[503] += dqdci; // dwdot[nc7h16]/d[h2o]
  J[504] -= dqdci; // dwdot[c7h15-1]/d[h2o]
  // d()/d[c7h15-1]
  dqdci = +k_f * sc[5];
  J[5255] += dqdci; // dwdot[oh]/d[c7h15-1]
  J[5256] -= dqdci; // dwdot[h2o]/d[c7h15-1]
  J[5309] += dqdci; // dwdot[nc7h16]/d[c7h15-1]
  J[5310] -= dqdci; // dwdot[c7h15-1]/d[c7h15-1]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7891] -= dqdT; // dwdot[c7h15-1]/dT

  // reaction 561: nc7h16 + oh => c7h15-2 + h2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[58];
  k_f = 94 * exp(1.61 * logT - (-17.6125833031652) * invT);
  dlnkfdT = 1.61 * invT + (-17.6125833031652) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[58] -= q; // nc7h16
  wdot[60] += q; // c7h15-2
  // d()/d[oh]
  dqdci = +k_f * sc[58];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[414] -= dqdci; // dwdot[nc7h16]/d[oh]
  J[416] += dqdci; // dwdot[c7h15-2]/d[oh]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[4];
  J[5166] -= dqdci; // dwdot[oh]/d[nc7h16]
  J[5167] += dqdci; // dwdot[h2o]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5222] += dqdci; // dwdot[c7h15-2]/d[nc7h16]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7892] += dqdT; // dwdot[c7h15-2]/dT

  // reaction 562: c7h15-2 + h2o => nc7h16 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[60];
  k_f = 0.6148 * exp(1.95 * logT - (11025.4771477814) * invT);
  dlnkfdT = 1.95 * invT + (11025.4771477814) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[58] += q; // nc7h16
  wdot[60] -= q; // c7h15-2
  // d()/d[h2o]
  dqdci = +k_f * sc[60];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[503] += dqdci; // dwdot[nc7h16]/d[h2o]
  J[505] -= dqdci; // dwdot[c7h15-2]/d[h2o]
  // d()/d[c7h15-2]
  dqdci = +k_f * sc[5];
  J[5344] += dqdci; // dwdot[oh]/d[c7h15-2]
  J[5345] -= dqdci; // dwdot[h2o]/d[c7h15-2]
  J[5398] += dqdci; // dwdot[nc7h16]/d[c7h15-2]
  J[5400] -= dqdci; // dwdot[c7h15-2]/d[c7h15-2]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7892] -= dqdT; // dwdot[c7h15-2]/dT

  // reaction 563: nc7h16 + oh => c7h15-3 + h2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[58];
  k_f = 94 * exp(1.61 * logT - (-17.6125833031652) * invT);
  dlnkfdT = 1.61 * invT + (-17.6125833031652) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[58] -= q; // nc7h16
  wdot[61] += q; // c7h15-3
  // d()/d[oh]
  dqdci = +k_f * sc[58];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[414] -= dqdci; // dwdot[nc7h16]/d[oh]
  J[417] += dqdci; // dwdot[c7h15-3]/d[oh]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[4];
  J[5166] -= dqdci; // dwdot[oh]/d[nc7h16]
  J[5167] += dqdci; // dwdot[h2o]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5223] += dqdci; // dwdot[c7h15-3]/d[nc7h16]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT

  // reaction 564: c7h15-3 + h2o => nc7h16 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[61];
  k_f = 0.6148 * exp(1.95 * logT - (11025.4771477814) * invT);
  dlnkfdT = 1.95 * invT + (11025.4771477814) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[58] += q; // nc7h16
  wdot[61] -= q; // c7h15-3
  // d()/d[h2o]
  dqdci = +k_f * sc[61];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[503] += dqdci; // dwdot[nc7h16]/d[h2o]
  J[506] -= dqdci; // dwdot[c7h15-3]/d[h2o]
  // d()/d[c7h15-3]
  dqdci = +k_f * sc[5];
  J[5433] += dqdci; // dwdot[oh]/d[c7h15-3]
  J[5434] -= dqdci; // dwdot[h2o]/d[c7h15-3]
  J[5487] += dqdci; // dwdot[nc7h16]/d[c7h15-3]
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT

  // reaction 565: nc7h16 + oh => c7h15-4 + h2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[58];
  k_f = 47 * exp(1.61 * logT - (-17.6125833031652) * invT);
  dlnkfdT = 1.61 * invT + (-17.6125833031652) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[58] -= q; // nc7h16
  wdot[62] += q; // c7h15-4
  // d()/d[oh]
  dqdci = +k_f * sc[58];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[414] -= dqdci; // dwdot[nc7h16]/d[oh]
  J[418] += dqdci; // dwdot[c7h15-4]/d[oh]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[4];
  J[5166] -= dqdci; // dwdot[oh]/d[nc7h16]
  J[5167] += dqdci; // dwdot[h2o]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5224] += dqdci; // dwdot[c7h15-4]/d[nc7h16]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7894] += dqdT; // dwdot[c7h15-4]/dT

  // reaction 566: c7h15-4 + h2o => nc7h16 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[62];
  k_f = 0.6125 * exp(1.95 * logT - (11025.4771477814) * invT);
  dlnkfdT = 1.95 * invT + (11025.4771477814) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[5] -= q;  // h2o
  wdot[58] += q; // nc7h16
  wdot[62] -= q; // c7h15-4
  // d()/d[h2o]
  dqdci = +k_f * sc[62];
  J[449] += dqdci; // dwdot[oh]/d[h2o]
  J[450] -= dqdci; // dwdot[h2o]/d[h2o]
  J[503] += dqdci; // dwdot[nc7h16]/d[h2o]
  J[507] -= dqdci; // dwdot[c7h15-4]/d[h2o]
  // d()/d[c7h15-4]
  dqdci = +k_f * sc[5];
  J[5522] += dqdci; // dwdot[oh]/d[c7h15-4]
  J[5523] -= dqdci; // dwdot[h2o]/d[c7h15-4]
  J[5576] += dqdci; // dwdot[nc7h16]/d[c7h15-4]
  J[5580] -= dqdci; // dwdot[c7h15-4]/d[c7h15-4]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7837] -= dqdT; // dwdot[h2o]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7894] -= dqdT; // dwdot[c7h15-4]/dT

  // reaction 567: ho2 + nc7h16 => c7h15-1 + h2o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[58];
  k_f = 16800000 * exp(-(10285.7486490485) * invT);
  dlnkfdT = (10285.7486490485) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  wdot[58] -= q; // nc7h16
  wdot[59] += q; // c7h15-1
  // d()/d[ho2]
  dqdci = +k_f * sc[58];
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[991] += dqdci;  // dwdot[h2o2]/d[ho2]
  J[1037] -= dqdci; // dwdot[nc7h16]/d[ho2]
  J[1038] += dqdci; // dwdot[c7h15-1]/d[ho2]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[11];
  J[5173] -= dqdci; // dwdot[ho2]/d[nc7h16]
  J[5174] += dqdci; // dwdot[h2o2]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5221] += dqdci; // dwdot[c7h15-1]/d[nc7h16]
  // d()/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7891] += dqdT; // dwdot[c7h15-1]/dT

  // reaction 568: c7h15-1 + h2o2 => ho2 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[59];
  k_f = 20500000 * exp(-0.38 * logT - (4226.51677609384) * invT);
  dlnkfdT = -0.38 * invT + (4226.51677609384) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // ho2
  wdot[12] -= q; // h2o2
  wdot[58] += q; // nc7h16
  wdot[59] -= q; // c7h15-1
  // d()/d[h2o2]
  dqdci = +k_f * sc[59];
  J[1079] += dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci; // dwdot[h2o2]/d[h2o2]
  J[1126] += dqdci; // dwdot[nc7h16]/d[h2o2]
  J[1127] -= dqdci; // dwdot[c7h15-1]/d[h2o2]
  // d()/d[c7h15-1]
  dqdci = +k_f * sc[12];
  J[5262] += dqdci; // dwdot[ho2]/d[c7h15-1]
  J[5263] -= dqdci; // dwdot[h2o2]/d[c7h15-1]
  J[5309] += dqdci; // dwdot[nc7h16]/d[c7h15-1]
  J[5310] -= dqdci; // dwdot[c7h15-1]/d[c7h15-1]
  // d()/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT; // dwdot[h2o2]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7891] -= dqdT; // dwdot[c7h15-1]/dT

  // reaction 569: ho2 + nc7h16 => c7h15-2 + h2o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[58];
  k_f = 11200000 * exp(-(8901.90281808549) * invT);
  dlnkfdT = (8901.90281808549) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  wdot[58] -= q; // nc7h16
  wdot[60] += q; // c7h15-2
  // d()/d[ho2]
  dqdci = +k_f * sc[58];
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[991] += dqdci;  // dwdot[h2o2]/d[ho2]
  J[1037] -= dqdci; // dwdot[nc7h16]/d[ho2]
  J[1039] += dqdci; // dwdot[c7h15-2]/d[ho2]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[11];
  J[5173] -= dqdci; // dwdot[ho2]/d[nc7h16]
  J[5174] += dqdci; // dwdot[h2o2]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5222] += dqdci; // dwdot[c7h15-2]/d[nc7h16]
  // d()/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7892] += dqdT; // dwdot[c7h15-2]/dT

  // reaction 570: c7h15-2 + h2o2 => ho2 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[60];
  k_f = 434800 * exp(0.01 * logT - (4108.76407629554) * invT);
  dlnkfdT = 0.01 * invT + (4108.76407629554) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // ho2
  wdot[12] -= q; // h2o2
  wdot[58] += q; // nc7h16
  wdot[60] -= q; // c7h15-2
  // d()/d[h2o2]
  dqdci = +k_f * sc[60];
  J[1079] += dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci; // dwdot[h2o2]/d[h2o2]
  J[1126] += dqdci; // dwdot[nc7h16]/d[h2o2]
  J[1128] -= dqdci; // dwdot[c7h15-2]/d[h2o2]
  // d()/d[c7h15-2]
  dqdci = +k_f * sc[12];
  J[5351] += dqdci; // dwdot[ho2]/d[c7h15-2]
  J[5352] -= dqdci; // dwdot[h2o2]/d[c7h15-2]
  J[5398] += dqdci; // dwdot[nc7h16]/d[c7h15-2]
  J[5400] -= dqdci; // dwdot[c7h15-2]/d[c7h15-2]
  // d()/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT; // dwdot[h2o2]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7892] -= dqdT; // dwdot[c7h15-2]/dT

  // reaction 571: ho2 + nc7h16 => c7h15-3 + h2o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[58];
  k_f = 11200000 * exp(-(8901.90281808549) * invT);
  dlnkfdT = (8901.90281808549) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  wdot[58] -= q; // nc7h16
  wdot[61] += q; // c7h15-3
  // d()/d[ho2]
  dqdci = +k_f * sc[58];
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[991] += dqdci;  // dwdot[h2o2]/d[ho2]
  J[1037] -= dqdci; // dwdot[nc7h16]/d[ho2]
  J[1040] += dqdci; // dwdot[c7h15-3]/d[ho2]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[11];
  J[5173] -= dqdci; // dwdot[ho2]/d[nc7h16]
  J[5174] += dqdci; // dwdot[h2o2]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5223] += dqdci; // dwdot[c7h15-3]/d[nc7h16]
  // d()/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT

  // reaction 572: c7h15-3 + h2o2 => ho2 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[61];
  k_f = 434800 * exp(0.01 * logT - (4108.76407629554) * invT);
  dlnkfdT = 0.01 * invT + (4108.76407629554) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // ho2
  wdot[12] -= q; // h2o2
  wdot[58] += q; // nc7h16
  wdot[61] -= q; // c7h15-3
  // d()/d[h2o2]
  dqdci = +k_f * sc[61];
  J[1079] += dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci; // dwdot[h2o2]/d[h2o2]
  J[1126] += dqdci; // dwdot[nc7h16]/d[h2o2]
  J[1129] -= dqdci; // dwdot[c7h15-3]/d[h2o2]
  // d()/d[c7h15-3]
  dqdci = +k_f * sc[12];
  J[5440] += dqdci; // dwdot[ho2]/d[c7h15-3]
  J[5441] -= dqdci; // dwdot[h2o2]/d[c7h15-3]
  J[5487] += dqdci; // dwdot[nc7h16]/d[c7h15-3]
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  // d()/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT; // dwdot[h2o2]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT

  // reaction 573: ho2 + nc7h16 => c7h15-4 + h2o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[58];
  k_f = 5600000 * exp(-(8901.90281808549) * invT);
  dlnkfdT = (8901.90281808549) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  wdot[58] -= q; // nc7h16
  wdot[62] += q; // c7h15-4
  // d()/d[ho2]
  dqdci = +k_f * sc[58];
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[991] += dqdci;  // dwdot[h2o2]/d[ho2]
  J[1037] -= dqdci; // dwdot[nc7h16]/d[ho2]
  J[1041] += dqdci; // dwdot[c7h15-4]/d[ho2]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[11];
  J[5173] -= dqdci; // dwdot[ho2]/d[nc7h16]
  J[5174] += dqdci; // dwdot[h2o2]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5224] += dqdci; // dwdot[c7h15-4]/d[nc7h16]
  // d()/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7894] += dqdT; // dwdot[c7h15-4]/dT

  // reaction 574: c7h15-4 + h2o2 => ho2 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[62];
  k_f = 433200 * exp(0.01 * logT - (4108.76407629554) * invT);
  dlnkfdT = 0.01 * invT + (4108.76407629554) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // ho2
  wdot[12] -= q; // h2o2
  wdot[58] += q; // nc7h16
  wdot[62] -= q; // c7h15-4
  // d()/d[h2o2]
  dqdci = +k_f * sc[62];
  J[1079] += dqdci; // dwdot[ho2]/d[h2o2]
  J[1080] -= dqdci; // dwdot[h2o2]/d[h2o2]
  J[1126] += dqdci; // dwdot[nc7h16]/d[h2o2]
  J[1130] -= dqdci; // dwdot[c7h15-4]/d[h2o2]
  // d()/d[c7h15-4]
  dqdci = +k_f * sc[12];
  J[5529] += dqdci; // dwdot[ho2]/d[c7h15-4]
  J[5530] -= dqdci; // dwdot[h2o2]/d[c7h15-4]
  J[5576] += dqdci; // dwdot[nc7h16]/d[c7h15-4]
  J[5580] -= dqdci; // dwdot[c7h15-4]/d[c7h15-4]
  // d()/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7844] -= dqdT; // dwdot[h2o2]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7894] -= dqdT; // dwdot[c7h15-4]/dT

  // reaction 575: ch3 + nc7h16 => c7h15-1 + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[58];
  k_f = 9.04e-07 * exp(3.65 * logT - (3600.01202716696) * invT);
  dlnkfdT = 3.65 * invT + (3600.01202716696) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[58] -= q; // nc7h16
  wdot[59] += q; // c7h15-1
  // d()/d[ch3]
  dqdci = +k_f * sc[58];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[859] -= dqdci; // dwdot[nc7h16]/d[ch3]
  J[860] += dqdci; // dwdot[c7h15-1]/d[ch3]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[9];
  J[5171] -= dqdci; // dwdot[ch3]/d[nc7h16]
  J[5172] += dqdci; // dwdot[ch4]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5221] += dqdci; // dwdot[c7h15-1]/d[nc7h16]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7891] += dqdT; // dwdot[c7h15-1]/dT

  // reaction 576: c7h15-1 + ch4 => ch3 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[59];
  k_f = 1.121e-06 * exp(3.6 * logT - (5993.31048973421) * invT);
  dlnkfdT = 3.6 * invT + (5993.31048973421) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[58] += q; // nc7h16
  wdot[59] -= q; // c7h15-1
  // d()/d[ch4]
  dqdci = +k_f * sc[59];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[948] += dqdci; // dwdot[nc7h16]/d[ch4]
  J[949] -= dqdci; // dwdot[c7h15-1]/d[ch4]
  // d()/d[c7h15-1]
  dqdci = +k_f * sc[10];
  J[5260] += dqdci; // dwdot[ch3]/d[c7h15-1]
  J[5261] -= dqdci; // dwdot[ch4]/d[c7h15-1]
  J[5309] += dqdci; // dwdot[nc7h16]/d[c7h15-1]
  J[5310] -= dqdci; // dwdot[c7h15-1]/d[c7h15-1]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7891] -= dqdT; // dwdot[c7h15-1]/dT

  // reaction 577: ch3 + nc7h16 => c7h15-2 + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[58];
  k_f = 0.0541 * exp(2.26 * logT - (3666.93984371899) * invT);
  dlnkfdT = 2.26 * invT + (3666.93984371899) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[58] -= q; // nc7h16
  wdot[60] += q; // c7h15-2
  // d()/d[ch3]
  dqdci = +k_f * sc[58];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[859] -= dqdci; // dwdot[nc7h16]/d[ch3]
  J[861] += dqdci; // dwdot[c7h15-2]/d[ch3]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[9];
  J[5171] -= dqdci; // dwdot[ch3]/d[nc7h16]
  J[5172] += dqdci; // dwdot[ch4]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5222] += dqdci; // dwdot[c7h15-2]/d[nc7h16]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7892] += dqdT; // dwdot[c7h15-2]/dT

  // reaction 578: c7h15-2 + ch4 => ch3 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[60];
  k_f = 0.002135 * exp(2.6 * logT - (7321.80248745867) * invT);
  dlnkfdT = 2.6 * invT + (7321.80248745867) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[58] += q; // nc7h16
  wdot[60] -= q; // c7h15-2
  // d()/d[ch4]
  dqdci = +k_f * sc[60];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[948] += dqdci; // dwdot[nc7h16]/d[ch4]
  J[950] -= dqdci; // dwdot[c7h15-2]/d[ch4]
  // d()/d[c7h15-2]
  dqdci = +k_f * sc[10];
  J[5349] += dqdci; // dwdot[ch3]/d[c7h15-2]
  J[5350] -= dqdci; // dwdot[ch4]/d[c7h15-2]
  J[5398] += dqdci; // dwdot[nc7h16]/d[c7h15-2]
  J[5400] -= dqdci; // dwdot[c7h15-2]/d[c7h15-2]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7892] -= dqdT; // dwdot[c7h15-2]/dT

  // reaction 579: ch3 + nc7h16 => c7h15-3 + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[58];
  k_f = 0.0541 * exp(2.26 * logT - (3666.93984371899) * invT);
  dlnkfdT = 2.26 * invT + (3666.93984371899) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[58] -= q; // nc7h16
  wdot[61] += q; // c7h15-3
  // d()/d[ch3]
  dqdci = +k_f * sc[58];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[859] -= dqdci; // dwdot[nc7h16]/d[ch3]
  J[862] += dqdci; // dwdot[c7h15-3]/d[ch3]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[9];
  J[5171] -= dqdci; // dwdot[ch3]/d[nc7h16]
  J[5172] += dqdci; // dwdot[ch4]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5223] += dqdci; // dwdot[c7h15-3]/d[nc7h16]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT

  // reaction 580: c7h15-3 + ch4 => ch3 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[61];
  k_f = 0.002135 * exp(2.6 * logT - (7321.80248745867) * invT);
  dlnkfdT = 2.6 * invT + (7321.80248745867) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[58] += q; // nc7h16
  wdot[61] -= q; // c7h15-3
  // d()/d[ch4]
  dqdci = +k_f * sc[61];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[948] += dqdci; // dwdot[nc7h16]/d[ch4]
  J[951] -= dqdci; // dwdot[c7h15-3]/d[ch4]
  // d()/d[c7h15-3]
  dqdci = +k_f * sc[10];
  J[5438] += dqdci; // dwdot[ch3]/d[c7h15-3]
  J[5439] -= dqdci; // dwdot[ch4]/d[c7h15-3]
  J[5487] += dqdci; // dwdot[nc7h16]/d[c7h15-3]
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT

  // reaction 581: ch3 + nc7h16 => c7h15-4 + ch4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[58];
  k_f = 0.02705 * exp(2.26 * logT - (3666.93984371899) * invT);
  dlnkfdT = 2.26 * invT + (3666.93984371899) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] -= q;  // ch3
  wdot[10] += q; // ch4
  wdot[58] -= q; // nc7h16
  wdot[62] += q; // c7h15-4
  // d()/d[ch3]
  dqdci = +k_f * sc[58];
  J[810] -= dqdci; // dwdot[ch3]/d[ch3]
  J[811] += dqdci; // dwdot[ch4]/d[ch3]
  J[859] -= dqdci; // dwdot[nc7h16]/d[ch3]
  J[863] += dqdci; // dwdot[c7h15-4]/d[ch3]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[9];
  J[5171] -= dqdci; // dwdot[ch3]/d[nc7h16]
  J[5172] += dqdci; // dwdot[ch4]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5224] += dqdci; // dwdot[c7h15-4]/d[nc7h16]
  // d()/dT
  J[7841] -= dqdT; // dwdot[ch3]/dT
  J[7842] += dqdT; // dwdot[ch4]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7894] += dqdT; // dwdot[c7h15-4]/dT

  // reaction 582: c7h15-4 + ch4 => ch3 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[62];
  k_f = 0.002127 * exp(2.6 * logT - (7321.80248745867) * invT);
  dlnkfdT = 2.6 * invT + (7321.80248745867) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[9] += q;  // ch3
  wdot[10] -= q; // ch4
  wdot[58] += q; // nc7h16
  wdot[62] -= q; // c7h15-4
  // d()/d[ch4]
  dqdci = +k_f * sc[62];
  J[899] += dqdci; // dwdot[ch3]/d[ch4]
  J[900] -= dqdci; // dwdot[ch4]/d[ch4]
  J[948] += dqdci; // dwdot[nc7h16]/d[ch4]
  J[952] -= dqdci; // dwdot[c7h15-4]/d[ch4]
  // d()/d[c7h15-4]
  dqdci = +k_f * sc[10];
  J[5527] += dqdci; // dwdot[ch3]/d[c7h15-4]
  J[5528] -= dqdci; // dwdot[ch4]/d[c7h15-4]
  J[5576] += dqdci; // dwdot[nc7h16]/d[c7h15-4]
  J[5580] -= dqdci; // dwdot[c7h15-4]/d[c7h15-4]
  // d()/dT
  J[7841] += dqdT; // dwdot[ch3]/dT
  J[7842] -= dqdT; // dwdot[ch4]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7894] -= dqdT; // dwdot[c7h15-4]/dT

  // reaction 583: nc7h16 + o2 => c7h15-1 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[58];
  k_f = 60000000 * exp(-(26569.8399544892) * invT);
  dlnkfdT = (26569.8399544892) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[58] -= q; // nc7h16
  wdot[59] += q; // c7h15-1
  // d()/d[o2]
  dqdci = +k_f * sc[58];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[325] -= dqdci; // dwdot[nc7h16]/d[o2]
  J[326] += dqdci; // dwdot[c7h15-1]/d[o2]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[3];
  J[5165] -= dqdci; // dwdot[o2]/d[nc7h16]
  J[5173] += dqdci; // dwdot[ho2]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5221] += dqdci; // dwdot[c7h15-1]/d[nc7h16]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7891] += dqdT; // dwdot[c7h15-1]/dT

  // reaction 584: c7h15-1 + ho2 => nc7h16 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[59];
  k_f = 51750 * exp(0.28 * logT - (-204.305966316716) * invT);
  dlnkfdT = 0.28 * invT + (-204.305966316716) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[58] += q; // nc7h16
  wdot[59] -= q; // c7h15-1
  // d()/d[ho2]
  dqdci = +k_f * sc[59];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1037] += dqdci; // dwdot[nc7h16]/d[ho2]
  J[1038] -= dqdci; // dwdot[c7h15-1]/d[ho2]
  // d()/d[c7h15-1]
  dqdci = +k_f * sc[11];
  J[5254] += dqdci; // dwdot[o2]/d[c7h15-1]
  J[5262] -= dqdci; // dwdot[ho2]/d[c7h15-1]
  J[5309] += dqdci; // dwdot[nc7h16]/d[c7h15-1]
  J[5310] -= dqdci; // dwdot[c7h15-1]/d[c7h15-1]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7891] -= dqdT; // dwdot[c7h15-1]/dT

  // reaction 585: nc7h16 + o2 => c7h15-2 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[58];
  k_f = 40000000 * exp(-(25236.3157901067) * invT);
  dlnkfdT = (25236.3157901067) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[58] -= q; // nc7h16
  wdot[60] += q; // c7h15-2
  // d()/d[o2]
  dqdci = +k_f * sc[58];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[325] -= dqdci; // dwdot[nc7h16]/d[o2]
  J[327] += dqdci; // dwdot[c7h15-2]/d[o2]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[3];
  J[5165] -= dqdci; // dwdot[o2]/d[nc7h16]
  J[5173] += dqdci; // dwdot[ho2]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5222] += dqdci; // dwdot[c7h15-2]/d[nc7h16]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7892] += dqdT; // dwdot[c7h15-2]/dT

  // reaction 586: c7h15-2 + ho2 => nc7h16 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[60];
  k_f = 1098 * exp(0.67 * logT - (-272.240216200353) * invT);
  dlnkfdT = 0.67 * invT + (-272.240216200353) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[58] += q; // nc7h16
  wdot[60] -= q; // c7h15-2
  // d()/d[ho2]
  dqdci = +k_f * sc[60];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1037] += dqdci; // dwdot[nc7h16]/d[ho2]
  J[1039] -= dqdci; // dwdot[c7h15-2]/d[ho2]
  // d()/d[c7h15-2]
  dqdci = +k_f * sc[11];
  J[5343] += dqdci; // dwdot[o2]/d[c7h15-2]
  J[5351] -= dqdci; // dwdot[ho2]/d[c7h15-2]
  J[5398] += dqdci; // dwdot[nc7h16]/d[c7h15-2]
  J[5400] -= dqdci; // dwdot[c7h15-2]/d[c7h15-2]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7892] -= dqdT; // dwdot[c7h15-2]/dT

  // reaction 587: nc7h16 + o2 => c7h15-3 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[58];
  k_f = 40000000 * exp(-(25236.3157901067) * invT);
  dlnkfdT = (25236.3157901067) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[58] -= q; // nc7h16
  wdot[61] += q; // c7h15-3
  // d()/d[o2]
  dqdci = +k_f * sc[58];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[325] -= dqdci; // dwdot[nc7h16]/d[o2]
  J[328] += dqdci; // dwdot[c7h15-3]/d[o2]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[3];
  J[5165] -= dqdci; // dwdot[o2]/d[nc7h16]
  J[5173] += dqdci; // dwdot[ho2]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5223] += dqdci; // dwdot[c7h15-3]/d[nc7h16]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT

  // reaction 588: c7h15-3 + ho2 => nc7h16 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[61];
  k_f = 1098 * exp(0.67 * logT - (-272.240216200353) * invT);
  dlnkfdT = 0.67 * invT + (-272.240216200353) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[58] += q; // nc7h16
  wdot[61] -= q; // c7h15-3
  // d()/d[ho2]
  dqdci = +k_f * sc[61];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1037] += dqdci; // dwdot[nc7h16]/d[ho2]
  J[1040] -= dqdci; // dwdot[c7h15-3]/d[ho2]
  // d()/d[c7h15-3]
  dqdci = +k_f * sc[11];
  J[5432] += dqdci; // dwdot[o2]/d[c7h15-3]
  J[5440] -= dqdci; // dwdot[ho2]/d[c7h15-3]
  J[5487] += dqdci; // dwdot[nc7h16]/d[c7h15-3]
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT

  // reaction 589: nc7h16 + o2 => c7h15-4 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[58];
  k_f = 20000000 * exp(-(25236.3157901067) * invT);
  dlnkfdT = (25236.3157901067) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[58] -= q; // nc7h16
  wdot[62] += q; // c7h15-4
  // d()/d[o2]
  dqdci = +k_f * sc[58];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[325] -= dqdci; // dwdot[nc7h16]/d[o2]
  J[329] += dqdci; // dwdot[c7h15-4]/d[o2]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[3];
  J[5165] -= dqdci; // dwdot[o2]/d[nc7h16]
  J[5173] += dqdci; // dwdot[ho2]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5224] += dqdci; // dwdot[c7h15-4]/d[nc7h16]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7894] += dqdT; // dwdot[c7h15-4]/dT

  // reaction 590: c7h15-4 + ho2 => nc7h16 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[62];
  k_f = 1094 * exp(0.67 * logT - (-272.240216200353) * invT);
  dlnkfdT = 0.67 * invT + (-272.240216200353) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[58] += q; // nc7h16
  wdot[62] -= q; // c7h15-4
  // d()/d[ho2]
  dqdci = +k_f * sc[62];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1037] += dqdci; // dwdot[nc7h16]/d[ho2]
  J[1041] -= dqdci; // dwdot[c7h15-4]/d[ho2]
  // d()/d[c7h15-4]
  dqdci = +k_f * sc[11];
  J[5521] += dqdci; // dwdot[o2]/d[c7h15-4]
  J[5529] -= dqdci; // dwdot[ho2]/d[c7h15-4]
  J[5576] += dqdci; // dwdot[nc7h16]/d[c7h15-4]
  J[5580] -= dqdci; // dwdot[c7h15-4]/d[c7h15-4]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7894] -= dqdT; // dwdot[c7h15-4]/dT

  // reaction 591: c2h5 + nc7h16 => c2h6 + c7h15-1
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[58];
  k_f = 100000 * exp(-(6743.10332178324) * invT);
  dlnkfdT = (6743.10332178324) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[15] += q; // c2h6
  wdot[17] -= q; // c2h5
  wdot[58] -= q; // nc7h16
  wdot[59] += q; // c7h15-1
  // d()/d[c2h5]
  dqdci = +k_f * sc[58];
  J[1528] += dqdci; // dwdot[c2h6]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1571] -= dqdci; // dwdot[nc7h16]/d[c2h5]
  J[1572] += dqdci; // dwdot[c7h15-1]/d[c2h5]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[17];
  J[5177] += dqdci; // dwdot[c2h6]/d[nc7h16]
  J[5179] -= dqdci; // dwdot[c2h5]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5221] += dqdci; // dwdot[c7h15-1]/d[nc7h16]
  // d()/dT
  J[7847] += dqdT; // dwdot[c2h6]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7891] += dqdT; // dwdot[c7h15-1]/dT

  // reaction 592: c2h6 + c7h15-1 => c2h5 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[59];
  k_f = 320000 * exp(-(6189.56498939805) * invT);
  dlnkfdT = (6189.56498939805) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[15] -= q; // c2h6
  wdot[17] += q; // c2h5
  wdot[58] += q; // nc7h16
  wdot[59] -= q; // c7h15-1
  // d()/d[c2h6]
  dqdci = +k_f * sc[59];
  J[1350] -= dqdci; // dwdot[c2h6]/d[c2h6]
  J[1352] += dqdci; // dwdot[c2h5]/d[c2h6]
  J[1393] += dqdci; // dwdot[nc7h16]/d[c2h6]
  J[1394] -= dqdci; // dwdot[c7h15-1]/d[c2h6]
  // d()/d[c7h15-1]
  dqdci = +k_f * sc[15];
  J[5266] -= dqdci; // dwdot[c2h6]/d[c7h15-1]
  J[5268] += dqdci; // dwdot[c2h5]/d[c7h15-1]
  J[5309] += dqdci; // dwdot[nc7h16]/d[c7h15-1]
  J[5310] -= dqdci; // dwdot[c7h15-1]/d[c7h15-1]
  // d()/dT
  J[7847] -= dqdT; // dwdot[c2h6]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7891] -= dqdT; // dwdot[c7h15-1]/dT

  // reaction 593: c2h5 + nc7h16 => c2h6 + c7h15-2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[58];
  k_f = 100000 * exp(-(5233.45332436908) * invT);
  dlnkfdT = (5233.45332436908) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[15] += q; // c2h6
  wdot[17] -= q; // c2h5
  wdot[58] -= q; // nc7h16
  wdot[60] += q; // c7h15-2
  // d()/d[c2h5]
  dqdci = +k_f * sc[58];
  J[1528] += dqdci; // dwdot[c2h6]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1571] -= dqdci; // dwdot[nc7h16]/d[c2h5]
  J[1573] += dqdci; // dwdot[c7h15-2]/d[c2h5]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[17];
  J[5177] += dqdci; // dwdot[c2h6]/d[nc7h16]
  J[5179] -= dqdci; // dwdot[c2h5]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5222] += dqdci; // dwdot[c7h15-2]/d[nc7h16]
  // d()/dT
  J[7847] += dqdT; // dwdot[c2h6]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7892] += dqdT; // dwdot[c7h15-2]/dT

  // reaction 594: c2h6 + c7h15-2 => c2h5 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[60];
  k_f = 100000 * exp(-(6491.49498888088) * invT);
  dlnkfdT = (6491.49498888088) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[15] -= q; // c2h6
  wdot[17] += q; // c2h5
  wdot[58] += q; // nc7h16
  wdot[60] -= q; // c7h15-2
  // d()/d[c2h6]
  dqdci = +k_f * sc[60];
  J[1350] -= dqdci; // dwdot[c2h6]/d[c2h6]
  J[1352] += dqdci; // dwdot[c2h5]/d[c2h6]
  J[1393] += dqdci; // dwdot[nc7h16]/d[c2h6]
  J[1395] -= dqdci; // dwdot[c7h15-2]/d[c2h6]
  // d()/d[c7h15-2]
  dqdci = +k_f * sc[15];
  J[5355] -= dqdci; // dwdot[c2h6]/d[c7h15-2]
  J[5357] += dqdci; // dwdot[c2h5]/d[c7h15-2]
  J[5398] += dqdci; // dwdot[nc7h16]/d[c7h15-2]
  J[5400] -= dqdci; // dwdot[c7h15-2]/d[c7h15-2]
  // d()/dT
  J[7847] -= dqdT; // dwdot[c2h6]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7892] -= dqdT; // dwdot[c7h15-2]/dT

  // reaction 595: c2h5 + nc7h16 => c2h6 + c7h15-3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[58];
  k_f = 100000 * exp(-(5233.45332436908) * invT);
  dlnkfdT = (5233.45332436908) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[15] += q; // c2h6
  wdot[17] -= q; // c2h5
  wdot[58] -= q; // nc7h16
  wdot[61] += q; // c7h15-3
  // d()/d[c2h5]
  dqdci = +k_f * sc[58];
  J[1528] += dqdci; // dwdot[c2h6]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1571] -= dqdci; // dwdot[nc7h16]/d[c2h5]
  J[1574] += dqdci; // dwdot[c7h15-3]/d[c2h5]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[17];
  J[5177] += dqdci; // dwdot[c2h6]/d[nc7h16]
  J[5179] -= dqdci; // dwdot[c2h5]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5223] += dqdci; // dwdot[c7h15-3]/d[nc7h16]
  // d()/dT
  J[7847] += dqdT; // dwdot[c2h6]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT

  // reaction 596: c2h6 + c7h15-3 => c2h5 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[61];
  k_f = 100000 * exp(-(6491.49498888088) * invT);
  dlnkfdT = (6491.49498888088) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[15] -= q; // c2h6
  wdot[17] += q; // c2h5
  wdot[58] += q; // nc7h16
  wdot[61] -= q; // c7h15-3
  // d()/d[c2h6]
  dqdci = +k_f * sc[61];
  J[1350] -= dqdci; // dwdot[c2h6]/d[c2h6]
  J[1352] += dqdci; // dwdot[c2h5]/d[c2h6]
  J[1393] += dqdci; // dwdot[nc7h16]/d[c2h6]
  J[1396] -= dqdci; // dwdot[c7h15-3]/d[c2h6]
  // d()/d[c7h15-3]
  dqdci = +k_f * sc[15];
  J[5444] -= dqdci; // dwdot[c2h6]/d[c7h15-3]
  J[5446] += dqdci; // dwdot[c2h5]/d[c7h15-3]
  J[5487] += dqdci; // dwdot[nc7h16]/d[c7h15-3]
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  // d()/dT
  J[7847] -= dqdT; // dwdot[c2h6]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT

  // reaction 597: c2h5 + nc7h16 => c2h6 + c7h15-4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[58];
  k_f = 50000 * exp(-(5233.45332436908) * invT);
  dlnkfdT = (5233.45332436908) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[15] += q; // c2h6
  wdot[17] -= q; // c2h5
  wdot[58] -= q; // nc7h16
  wdot[62] += q; // c7h15-4
  // d()/d[c2h5]
  dqdci = +k_f * sc[58];
  J[1528] += dqdci; // dwdot[c2h6]/d[c2h5]
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1571] -= dqdci; // dwdot[nc7h16]/d[c2h5]
  J[1575] += dqdci; // dwdot[c7h15-4]/d[c2h5]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[17];
  J[5177] += dqdci; // dwdot[c2h6]/d[nc7h16]
  J[5179] -= dqdci; // dwdot[c2h5]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5224] += dqdci; // dwdot[c7h15-4]/d[nc7h16]
  // d()/dT
  J[7847] += dqdT; // dwdot[c2h6]/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7894] += dqdT; // dwdot[c7h15-4]/dT

  // reaction 598: c2h6 + c7h15-4 => c2h5 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[15] * sc[62];
  k_f = 100000 * exp(-(6491.49498888088) * invT);
  dlnkfdT = (6491.49498888088) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[15] -= q; // c2h6
  wdot[17] += q; // c2h5
  wdot[58] += q; // nc7h16
  wdot[62] -= q; // c7h15-4
  // d()/d[c2h6]
  dqdci = +k_f * sc[62];
  J[1350] -= dqdci; // dwdot[c2h6]/d[c2h6]
  J[1352] += dqdci; // dwdot[c2h5]/d[c2h6]
  J[1393] += dqdci; // dwdot[nc7h16]/d[c2h6]
  J[1397] -= dqdci; // dwdot[c7h15-4]/d[c2h6]
  // d()/d[c7h15-4]
  dqdci = +k_f * sc[15];
  J[5533] -= dqdci; // dwdot[c2h6]/d[c7h15-4]
  J[5535] += dqdci; // dwdot[c2h5]/d[c7h15-4]
  J[5576] += dqdci; // dwdot[nc7h16]/d[c7h15-4]
  J[5580] -= dqdci; // dwdot[c7h15-4]/d[c7h15-4]
  // d()/dT
  J[7847] -= dqdT; // dwdot[c2h6]/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7894] -= dqdT; // dwdot[c7h15-4]/dT

  // reaction 599: c2h3 + nc7h16 => c2h4 + c7h15-1
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[58];
  k_f = 1000000 * exp(-(9057.89998448495) * invT);
  dlnkfdT = (9057.89998448495) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] += q; // c2h4
  wdot[19] -= q; // c2h3
  wdot[58] -= q; // nc7h16
  wdot[59] += q; // c7h15-1
  // d()/d[c2h3]
  dqdci = +k_f * sc[58];
  J[1707] += dqdci; // dwdot[c2h4]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  J[1749] -= dqdci; // dwdot[nc7h16]/d[c2h3]
  J[1750] += dqdci; // dwdot[c7h15-1]/d[c2h3]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[19];
  J[5178] += dqdci; // dwdot[c2h4]/d[nc7h16]
  J[5181] -= dqdci; // dwdot[c2h3]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5221] += dqdci; // dwdot[c7h15-1]/d[nc7h16]
  // d()/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7891] += dqdT; // dwdot[c7h15-1]/dT

  // reaction 600: c2h4 + c7h15-1 => c2h3 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[59];
  k_f = 2570000 * exp(-(12781.7033114399) * invT);
  dlnkfdT = (12781.7033114399) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] -= q; // c2h4
  wdot[19] += q; // c2h3
  wdot[58] += q; // nc7h16
  wdot[59] -= q; // c7h15-1
  // d()/d[c2h4]
  dqdci = +k_f * sc[59];
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1443] += dqdci; // dwdot[c2h3]/d[c2h4]
  J[1482] += dqdci; // dwdot[nc7h16]/d[c2h4]
  J[1483] -= dqdci; // dwdot[c7h15-1]/d[c2h4]
  // d()/d[c7h15-1]
  dqdci = +k_f * sc[16];
  J[5267] -= dqdci; // dwdot[c2h4]/d[c7h15-1]
  J[5270] += dqdci; // dwdot[c2h3]/d[c7h15-1]
  J[5309] += dqdci; // dwdot[nc7h16]/d[c7h15-1]
  J[5310] -= dqdci; // dwdot[c7h15-1]/d[c7h15-1]
  // d()/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7891] -= dqdT; // dwdot[c7h15-1]/dT

  // reaction 601: c2h3 + nc7h16 => c2h4 + c7h15-2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[58];
  k_f = 800000 * exp(-(8454.03998551929) * invT);
  dlnkfdT = (8454.03998551929) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] += q; // c2h4
  wdot[19] -= q; // c2h3
  wdot[58] -= q; // nc7h16
  wdot[60] += q; // c7h15-2
  // d()/d[c2h3]
  dqdci = +k_f * sc[58];
  J[1707] += dqdci; // dwdot[c2h4]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  J[1749] -= dqdci; // dwdot[nc7h16]/d[c2h3]
  J[1751] += dqdci; // dwdot[c7h15-2]/d[c2h3]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[19];
  J[5178] += dqdci; // dwdot[c2h4]/d[nc7h16]
  J[5181] -= dqdci; // dwdot[c2h3]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5222] += dqdci; // dwdot[c7h15-2]/d[nc7h16]
  // d()/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7892] += dqdT; // dwdot[c7h15-2]/dT

  // reaction 602: c2h4 + c7h15-2 => c2h3 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[60];
  k_f = 2000000 * exp(-(12177.8433124742) * invT);
  dlnkfdT = (12177.8433124742) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] -= q; // c2h4
  wdot[19] += q; // c2h3
  wdot[58] += q; // nc7h16
  wdot[60] -= q; // c7h15-2
  // d()/d[c2h4]
  dqdci = +k_f * sc[60];
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1443] += dqdci; // dwdot[c2h3]/d[c2h4]
  J[1482] += dqdci; // dwdot[nc7h16]/d[c2h4]
  J[1484] -= dqdci; // dwdot[c7h15-2]/d[c2h4]
  // d()/d[c7h15-2]
  dqdci = +k_f * sc[16];
  J[5356] -= dqdci; // dwdot[c2h4]/d[c7h15-2]
  J[5359] += dqdci; // dwdot[c2h3]/d[c7h15-2]
  J[5398] += dqdci; // dwdot[nc7h16]/d[c7h15-2]
  J[5400] -= dqdci; // dwdot[c7h15-2]/d[c7h15-2]
  // d()/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7892] -= dqdT; // dwdot[c7h15-2]/dT

  // reaction 603: c2h3 + nc7h16 => c2h4 + c7h15-3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[58];
  k_f = 800000 * exp(-(8454.03998551929) * invT);
  dlnkfdT = (8454.03998551929) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] += q; // c2h4
  wdot[19] -= q; // c2h3
  wdot[58] -= q; // nc7h16
  wdot[61] += q; // c7h15-3
  // d()/d[c2h3]
  dqdci = +k_f * sc[58];
  J[1707] += dqdci; // dwdot[c2h4]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  J[1749] -= dqdci; // dwdot[nc7h16]/d[c2h3]
  J[1752] += dqdci; // dwdot[c7h15-3]/d[c2h3]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[19];
  J[5178] += dqdci; // dwdot[c2h4]/d[nc7h16]
  J[5181] -= dqdci; // dwdot[c2h3]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5223] += dqdci; // dwdot[c7h15-3]/d[nc7h16]
  // d()/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT

  // reaction 604: c2h4 + c7h15-3 => c2h3 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[61];
  k_f = 2000000 * exp(-(12177.8433124742) * invT);
  dlnkfdT = (12177.8433124742) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] -= q; // c2h4
  wdot[19] += q; // c2h3
  wdot[58] += q; // nc7h16
  wdot[61] -= q; // c7h15-3
  // d()/d[c2h4]
  dqdci = +k_f * sc[61];
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1443] += dqdci; // dwdot[c2h3]/d[c2h4]
  J[1482] += dqdci; // dwdot[nc7h16]/d[c2h4]
  J[1485] -= dqdci; // dwdot[c7h15-3]/d[c2h4]
  // d()/d[c7h15-3]
  dqdci = +k_f * sc[16];
  J[5445] -= dqdci; // dwdot[c2h4]/d[c7h15-3]
  J[5448] += dqdci; // dwdot[c2h3]/d[c7h15-3]
  J[5487] += dqdci; // dwdot[nc7h16]/d[c7h15-3]
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  // d()/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT

  // reaction 605: c2h3 + nc7h16 => c2h4 + c7h15-4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[19] * sc[58];
  k_f = 400000 * exp(-(8454.03998551929) * invT);
  dlnkfdT = (8454.03998551929) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] += q; // c2h4
  wdot[19] -= q; // c2h3
  wdot[58] -= q; // nc7h16
  wdot[62] += q; // c7h15-4
  // d()/d[c2h3]
  dqdci = +k_f * sc[58];
  J[1707] += dqdci; // dwdot[c2h4]/d[c2h3]
  J[1710] -= dqdci; // dwdot[c2h3]/d[c2h3]
  J[1749] -= dqdci; // dwdot[nc7h16]/d[c2h3]
  J[1753] += dqdci; // dwdot[c7h15-4]/d[c2h3]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[19];
  J[5178] += dqdci; // dwdot[c2h4]/d[nc7h16]
  J[5181] -= dqdci; // dwdot[c2h3]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5224] += dqdci; // dwdot[c7h15-4]/d[nc7h16]
  // d()/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7851] -= dqdT; // dwdot[c2h3]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7894] += dqdT; // dwdot[c7h15-4]/dT

  // reaction 606: c2h4 + c7h15-4 => c2h3 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[16] * sc[62];
  k_f = 2000000 * exp(-(12177.8433124742) * invT);
  dlnkfdT = (12177.8433124742) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[16] -= q; // c2h4
  wdot[19] += q; // c2h3
  wdot[58] += q; // nc7h16
  wdot[62] -= q; // c7h15-4
  // d()/d[c2h4]
  dqdci = +k_f * sc[62];
  J[1440] -= dqdci; // dwdot[c2h4]/d[c2h4]
  J[1443] += dqdci; // dwdot[c2h3]/d[c2h4]
  J[1482] += dqdci; // dwdot[nc7h16]/d[c2h4]
  J[1486] -= dqdci; // dwdot[c7h15-4]/d[c2h4]
  // d()/d[c7h15-4]
  dqdci = +k_f * sc[16];
  J[5534] -= dqdci; // dwdot[c2h4]/d[c7h15-4]
  J[5537] += dqdci; // dwdot[c2h3]/d[c7h15-4]
  J[5576] += dqdci; // dwdot[nc7h16]/d[c7h15-4]
  J[5580] -= dqdci; // dwdot[c7h15-4]/d[c7h15-4]
  // d()/dT
  J[7848] -= dqdT; // dwdot[c2h4]/dT
  J[7851] += dqdT; // dwdot[c2h3]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7894] -= dqdT; // dwdot[c7h15-4]/dT

  // reaction 607: ch3o2 + nc7h16 => c7h15-1 + ch3o2h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[38] * sc[58];
  k_f = 12100000 * exp(-(10280.7164823904) * invT);
  dlnkfdT = (10280.7164823904) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[38] -= q; // ch3o2
  wdot[39] += q; // ch3o2h
  wdot[58] -= q; // nc7h16
  wdot[59] += q; // c7h15-1
  // d()/d[ch3o2]
  dqdci = +k_f * sc[58];
  J[3420] -= dqdci; // dwdot[ch3o2]/d[ch3o2]
  J[3421] += dqdci; // dwdot[ch3o2h]/d[ch3o2]
  J[3440] -= dqdci; // dwdot[nc7h16]/d[ch3o2]
  J[3441] += dqdci; // dwdot[c7h15-1]/d[ch3o2]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[38];
  J[5200] -= dqdci; // dwdot[ch3o2]/d[nc7h16]
  J[5201] += dqdci; // dwdot[ch3o2h]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5221] += dqdci; // dwdot[c7h15-1]/d[nc7h16]
  // d()/dT
  J[7870] -= dqdT; // dwdot[ch3o2]/dT
  J[7871] += dqdT; // dwdot[ch3o2h]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7891] += dqdT; // dwdot[c7h15-1]/dT

  // reaction 608: c7h15-1 + ch3o2h => ch3o2 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[39] * sc[59];
  k_f = 3600000 * exp(-(4931.52332488625) * invT);
  dlnkfdT = (4931.52332488625) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[38] += q; // ch3o2
  wdot[39] -= q; // ch3o2h
  wdot[58] += q; // nc7h16
  wdot[59] -= q; // c7h15-1
  // d()/d[ch3o2h]
  dqdci = +k_f * sc[59];
  J[3509] += dqdci; // dwdot[ch3o2]/d[ch3o2h]
  J[3510] -= dqdci; // dwdot[ch3o2h]/d[ch3o2h]
  J[3529] += dqdci; // dwdot[nc7h16]/d[ch3o2h]
  J[3530] -= dqdci; // dwdot[c7h15-1]/d[ch3o2h]
  // d()/d[c7h15-1]
  dqdci = +k_f * sc[39];
  J[5289] += dqdci; // dwdot[ch3o2]/d[c7h15-1]
  J[5290] -= dqdci; // dwdot[ch3o2h]/d[c7h15-1]
  J[5309] += dqdci; // dwdot[nc7h16]/d[c7h15-1]
  J[5310] -= dqdci; // dwdot[c7h15-1]/d[c7h15-1]
  // d()/dT
  J[7870] += dqdT; // dwdot[ch3o2]/dT
  J[7871] -= dqdT; // dwdot[ch3o2h]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7891] -= dqdT; // dwdot[c7h15-1]/dT

  // reaction 609: ch3o2 + nc7h16 => c7h15-2 + ch3o2h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[38] * sc[58];
  k_f = 8064000 * exp(-(8906.93498474354) * invT);
  dlnkfdT = (8906.93498474354) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[38] -= q; // ch3o2
  wdot[39] += q; // ch3o2h
  wdot[58] -= q; // nc7h16
  wdot[60] += q; // c7h15-2
  // d()/d[ch3o2]
  dqdci = +k_f * sc[58];
  J[3420] -= dqdci; // dwdot[ch3o2]/d[ch3o2]
  J[3421] += dqdci; // dwdot[ch3o2h]/d[ch3o2]
  J[3440] -= dqdci; // dwdot[nc7h16]/d[ch3o2]
  J[3442] += dqdci; // dwdot[c7h15-2]/d[ch3o2]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[38];
  J[5200] -= dqdci; // dwdot[ch3o2]/d[nc7h16]
  J[5201] += dqdci; // dwdot[ch3o2h]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5222] += dqdci; // dwdot[c7h15-2]/d[nc7h16]
  // d()/dT
  J[7870] -= dqdT; // dwdot[ch3o2]/dT
  J[7871] += dqdT; // dwdot[ch3o2h]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7892] += dqdT; // dwdot[c7h15-2]/dT

  // reaction 610: c7h15-2 + ch3o2h => ch3o2 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[39] * sc[60];
  k_f = 237600 * exp(-(1861.90166347746) * invT);
  dlnkfdT = (1861.90166347746) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[38] += q; // ch3o2
  wdot[39] -= q; // ch3o2h
  wdot[58] += q; // nc7h16
  wdot[60] -= q; // c7h15-2
  // d()/d[ch3o2h]
  dqdci = +k_f * sc[60];
  J[3509] += dqdci; // dwdot[ch3o2]/d[ch3o2h]
  J[3510] -= dqdci; // dwdot[ch3o2h]/d[ch3o2h]
  J[3529] += dqdci; // dwdot[nc7h16]/d[ch3o2h]
  J[3531] -= dqdci; // dwdot[c7h15-2]/d[ch3o2h]
  // d()/d[c7h15-2]
  dqdci = +k_f * sc[39];
  J[5378] += dqdci; // dwdot[ch3o2]/d[c7h15-2]
  J[5379] -= dqdci; // dwdot[ch3o2h]/d[c7h15-2]
  J[5398] += dqdci; // dwdot[nc7h16]/d[c7h15-2]
  J[5400] -= dqdci; // dwdot[c7h15-2]/d[c7h15-2]
  // d()/dT
  J[7870] += dqdT; // dwdot[ch3o2]/dT
  J[7871] -= dqdT; // dwdot[ch3o2h]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7892] -= dqdT; // dwdot[c7h15-2]/dT

  // reaction 611: ch3o2 + nc7h16 => c7h15-3 + ch3o2h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[38] * sc[58];
  k_f = 8064000 * exp(-(8906.93498474354) * invT);
  dlnkfdT = (8906.93498474354) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[38] -= q; // ch3o2
  wdot[39] += q; // ch3o2h
  wdot[58] -= q; // nc7h16
  wdot[61] += q; // c7h15-3
  // d()/d[ch3o2]
  dqdci = +k_f * sc[58];
  J[3420] -= dqdci; // dwdot[ch3o2]/d[ch3o2]
  J[3421] += dqdci; // dwdot[ch3o2h]/d[ch3o2]
  J[3440] -= dqdci; // dwdot[nc7h16]/d[ch3o2]
  J[3443] += dqdci; // dwdot[c7h15-3]/d[ch3o2]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[38];
  J[5200] -= dqdci; // dwdot[ch3o2]/d[nc7h16]
  J[5201] += dqdci; // dwdot[ch3o2h]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5223] += dqdci; // dwdot[c7h15-3]/d[nc7h16]
  // d()/dT
  J[7870] -= dqdT; // dwdot[ch3o2]/dT
  J[7871] += dqdT; // dwdot[ch3o2h]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT

  // reaction 612: c7h15-3 + ch3o2h => ch3o2 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[39] * sc[61];
  k_f = 237600 * exp(-(1861.90166347746) * invT);
  dlnkfdT = (1861.90166347746) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[38] += q; // ch3o2
  wdot[39] -= q; // ch3o2h
  wdot[58] += q; // nc7h16
  wdot[61] -= q; // c7h15-3
  // d()/d[ch3o2h]
  dqdci = +k_f * sc[61];
  J[3509] += dqdci; // dwdot[ch3o2]/d[ch3o2h]
  J[3510] -= dqdci; // dwdot[ch3o2h]/d[ch3o2h]
  J[3529] += dqdci; // dwdot[nc7h16]/d[ch3o2h]
  J[3532] -= dqdci; // dwdot[c7h15-3]/d[ch3o2h]
  // d()/d[c7h15-3]
  dqdci = +k_f * sc[39];
  J[5467] += dqdci; // dwdot[ch3o2]/d[c7h15-3]
  J[5468] -= dqdci; // dwdot[ch3o2h]/d[c7h15-3]
  J[5487] += dqdci; // dwdot[nc7h16]/d[c7h15-3]
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  // d()/dT
  J[7870] += dqdT; // dwdot[ch3o2]/dT
  J[7871] -= dqdT; // dwdot[ch3o2h]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT

  // reaction 613: ch3o2 + nc7h16 => c7h15-4 + ch3o2h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[38] * sc[58];
  k_f = 4032000 * exp(-(8906.93498474354) * invT);
  dlnkfdT = (8906.93498474354) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[38] -= q; // ch3o2
  wdot[39] += q; // ch3o2h
  wdot[58] -= q; // nc7h16
  wdot[62] += q; // c7h15-4
  // d()/d[ch3o2]
  dqdci = +k_f * sc[58];
  J[3420] -= dqdci; // dwdot[ch3o2]/d[ch3o2]
  J[3421] += dqdci; // dwdot[ch3o2h]/d[ch3o2]
  J[3440] -= dqdci; // dwdot[nc7h16]/d[ch3o2]
  J[3444] += dqdci; // dwdot[c7h15-4]/d[ch3o2]
  // d()/d[nc7h16]
  dqdci = +k_f * sc[38];
  J[5200] -= dqdci; // dwdot[ch3o2]/d[nc7h16]
  J[5201] += dqdci; // dwdot[ch3o2h]/d[nc7h16]
  J[5220] -= dqdci; // dwdot[nc7h16]/d[nc7h16]
  J[5224] += dqdci; // dwdot[c7h15-4]/d[nc7h16]
  // d()/dT
  J[7870] -= dqdT; // dwdot[ch3o2]/dT
  J[7871] += dqdT; // dwdot[ch3o2h]/dT
  J[7890] -= dqdT; // dwdot[nc7h16]/dT
  J[7894] += dqdT; // dwdot[c7h15-4]/dT

  // reaction 614: c7h15-4 + ch3o2h => ch3o2 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[39] * sc[62];
  k_f = 237600 * exp(-(1861.90166347746) * invT);
  dlnkfdT = (1861.90166347746) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[38] += q; // ch3o2
  wdot[39] -= q; // ch3o2h
  wdot[58] += q; // nc7h16
  wdot[62] -= q; // c7h15-4
  // d()/d[ch3o2h]
  dqdci = +k_f * sc[62];
  J[3509] += dqdci; // dwdot[ch3o2]/d[ch3o2h]
  J[3510] -= dqdci; // dwdot[ch3o2h]/d[ch3o2h]
  J[3529] += dqdci; // dwdot[nc7h16]/d[ch3o2h]
  J[3533] -= dqdci; // dwdot[c7h15-4]/d[ch3o2h]
  // d()/d[c7h15-4]
  dqdci = +k_f * sc[39];
  J[5556] += dqdci; // dwdot[ch3o2]/d[c7h15-4]
  J[5557] -= dqdci; // dwdot[ch3o2h]/d[c7h15-4]
  J[5576] += dqdci; // dwdot[nc7h16]/d[c7h15-4]
  J[5580] -= dqdci; // dwdot[c7h15-4]/d[c7h15-4]
  // d()/dT
  J[7870] += dqdT; // dwdot[ch3o2]/dT
  J[7871] -= dqdT; // dwdot[ch3o2h]/dT
  J[7890] += dqdT; // dwdot[nc7h16]/dT
  J[7894] -= dqdT; // dwdot[c7h15-4]/dT

  // reaction 615: c7h15-1 + nc7h16 => c7h15-2 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[58] * sc[59];
  k_f = 100000 * exp(-(5233.45332436908) * invT);
  dlnkfdT = (5233.45332436908) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[59] -= q; // c7h15-1
  wdot[60] += q; // c7h15-2
  // d()/d[nc7h16]
  dqdci = +k_f * sc[59];
  J[5221] -= dqdci; // dwdot[c7h15-1]/d[nc7h16]
  J[5222] += dqdci; // dwdot[c7h15-2]/d[nc7h16]
  // d()/d[c7h15-1]
  dqdci = +k_f * sc[58];
  J[5310] -= dqdci; // dwdot[c7h15-1]/d[c7h15-1]
  J[5311] += dqdci; // dwdot[c7h15-2]/d[c7h15-1]
  // d()/dT
  J[7891] -= dqdT; // dwdot[c7h15-1]/dT
  J[7892] += dqdT; // dwdot[c7h15-2]/dT

  // reaction 616: c7h15-2 + nc7h16 => c7h15-1 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[58] * sc[60];
  k_f = 150000 * exp(-(6189.56498939805) * invT);
  dlnkfdT = (6189.56498939805) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[59] += q; // c7h15-1
  wdot[60] -= q; // c7h15-2
  // d()/d[nc7h16]
  dqdci = +k_f * sc[60];
  J[5221] += dqdci; // dwdot[c7h15-1]/d[nc7h16]
  J[5222] -= dqdci; // dwdot[c7h15-2]/d[nc7h16]
  // d()/d[c7h15-2]
  dqdci = +k_f * sc[58];
  J[5399] += dqdci; // dwdot[c7h15-1]/d[c7h15-2]
  J[5400] -= dqdci; // dwdot[c7h15-2]/d[c7h15-2]
  // d()/dT
  J[7891] += dqdT; // dwdot[c7h15-1]/dT
  J[7892] -= dqdT; // dwdot[c7h15-2]/dT

  // reaction 617: c7h15-1 + nc7h16 => c7h15-3 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[58] * sc[59];
  k_f = 100000 * exp(-(5233.45332436908) * invT);
  dlnkfdT = (5233.45332436908) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[59] -= q; // c7h15-1
  wdot[61] += q; // c7h15-3
  // d()/d[nc7h16]
  dqdci = +k_f * sc[59];
  J[5221] -= dqdci; // dwdot[c7h15-1]/d[nc7h16]
  J[5223] += dqdci; // dwdot[c7h15-3]/d[nc7h16]
  // d()/d[c7h15-1]
  dqdci = +k_f * sc[58];
  J[5310] -= dqdci; // dwdot[c7h15-1]/d[c7h15-1]
  J[5312] += dqdci; // dwdot[c7h15-3]/d[c7h15-1]
  // d()/dT
  J[7891] -= dqdT; // dwdot[c7h15-1]/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT

  // reaction 618: c7h15-3 + nc7h16 => c7h15-1 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[58] * sc[61];
  k_f = 150000 * exp(-(6189.56498939805) * invT);
  dlnkfdT = (6189.56498939805) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[59] += q; // c7h15-1
  wdot[61] -= q; // c7h15-3
  // d()/d[nc7h16]
  dqdci = +k_f * sc[61];
  J[5221] += dqdci; // dwdot[c7h15-1]/d[nc7h16]
  J[5223] -= dqdci; // dwdot[c7h15-3]/d[nc7h16]
  // d()/d[c7h15-3]
  dqdci = +k_f * sc[58];
  J[5488] += dqdci; // dwdot[c7h15-1]/d[c7h15-3]
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  // d()/dT
  J[7891] += dqdT; // dwdot[c7h15-1]/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT

  // reaction 619: c7h15-1 + nc7h16 => c7h15-4 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[58] * sc[59];
  k_f = 50000 * exp(-(5233.45332436908) * invT);
  dlnkfdT = (5233.45332436908) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[59] -= q; // c7h15-1
  wdot[62] += q; // c7h15-4
  // d()/d[nc7h16]
  dqdci = +k_f * sc[59];
  J[5221] -= dqdci; // dwdot[c7h15-1]/d[nc7h16]
  J[5224] += dqdci; // dwdot[c7h15-4]/d[nc7h16]
  // d()/d[c7h15-1]
  dqdci = +k_f * sc[58];
  J[5310] -= dqdci; // dwdot[c7h15-1]/d[c7h15-1]
  J[5313] += dqdci; // dwdot[c7h15-4]/d[c7h15-1]
  // d()/dT
  J[7891] -= dqdT; // dwdot[c7h15-1]/dT
  J[7894] += dqdT; // dwdot[c7h15-4]/dT

  // reaction 620: c7h15-4 + nc7h16 => c7h15-1 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[58] * sc[62];
  k_f = 150000 * exp(-(6189.56498939805) * invT);
  dlnkfdT = (6189.56498939805) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[59] += q; // c7h15-1
  wdot[62] -= q; // c7h15-4
  // d()/d[nc7h16]
  dqdci = +k_f * sc[62];
  J[5221] += dqdci; // dwdot[c7h15-1]/d[nc7h16]
  J[5224] -= dqdci; // dwdot[c7h15-4]/d[nc7h16]
  // d()/d[c7h15-4]
  dqdci = +k_f * sc[58];
  J[5577] += dqdci; // dwdot[c7h15-1]/d[c7h15-4]
  J[5580] -= dqdci; // dwdot[c7h15-4]/d[c7h15-4]
  // d()/dT
  J[7891] += dqdT; // dwdot[c7h15-1]/dT
  J[7894] -= dqdT; // dwdot[c7h15-4]/dT

  // reaction 621: c7h15-2 + nc7h16 => c7h15-3 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[58] * sc[60];
  k_f = 100000 * exp(-(5233.45332436908) * invT);
  dlnkfdT = (5233.45332436908) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[60] -= q; // c7h15-2
  wdot[61] += q; // c7h15-3
  // d()/d[nc7h16]
  dqdci = +k_f * sc[60];
  J[5222] -= dqdci; // dwdot[c7h15-2]/d[nc7h16]
  J[5223] += dqdci; // dwdot[c7h15-3]/d[nc7h16]
  // d()/d[c7h15-2]
  dqdci = +k_f * sc[58];
  J[5400] -= dqdci; // dwdot[c7h15-2]/d[c7h15-2]
  J[5401] += dqdci; // dwdot[c7h15-3]/d[c7h15-2]
  // d()/dT
  J[7892] -= dqdT; // dwdot[c7h15-2]/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT

  // reaction 622: c7h15-3 + nc7h16 => c7h15-2 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[58] * sc[61];
  k_f = 100000 * exp(-(5233.45332436908) * invT);
  dlnkfdT = (5233.45332436908) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[60] += q; // c7h15-2
  wdot[61] -= q; // c7h15-3
  // d()/d[nc7h16]
  dqdci = +k_f * sc[61];
  J[5222] += dqdci; // dwdot[c7h15-2]/d[nc7h16]
  J[5223] -= dqdci; // dwdot[c7h15-3]/d[nc7h16]
  // d()/d[c7h15-3]
  dqdci = +k_f * sc[58];
  J[5489] += dqdci; // dwdot[c7h15-2]/d[c7h15-3]
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  // d()/dT
  J[7892] += dqdT; // dwdot[c7h15-2]/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT

  // reaction 623: c7h15-2 + nc7h16 => c7h15-4 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[58] * sc[60];
  k_f = 50000 * exp(-(5233.45332436908) * invT);
  dlnkfdT = (5233.45332436908) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[60] -= q; // c7h15-2
  wdot[62] += q; // c7h15-4
  // d()/d[nc7h16]
  dqdci = +k_f * sc[60];
  J[5222] -= dqdci; // dwdot[c7h15-2]/d[nc7h16]
  J[5224] += dqdci; // dwdot[c7h15-4]/d[nc7h16]
  // d()/d[c7h15-2]
  dqdci = +k_f * sc[58];
  J[5400] -= dqdci; // dwdot[c7h15-2]/d[c7h15-2]
  J[5402] += dqdci; // dwdot[c7h15-4]/d[c7h15-2]
  // d()/dT
  J[7892] -= dqdT; // dwdot[c7h15-2]/dT
  J[7894] += dqdT; // dwdot[c7h15-4]/dT

  // reaction 624: c7h15-4 + nc7h16 => c7h15-2 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[58] * sc[62];
  k_f = 100000 * exp(-(5233.45332436908) * invT);
  dlnkfdT = (5233.45332436908) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[60] += q; // c7h15-2
  wdot[62] -= q; // c7h15-4
  // d()/d[nc7h16]
  dqdci = +k_f * sc[62];
  J[5222] += dqdci; // dwdot[c7h15-2]/d[nc7h16]
  J[5224] -= dqdci; // dwdot[c7h15-4]/d[nc7h16]
  // d()/d[c7h15-4]
  dqdci = +k_f * sc[58];
  J[5578] += dqdci; // dwdot[c7h15-2]/d[c7h15-4]
  J[5580] -= dqdci; // dwdot[c7h15-4]/d[c7h15-4]
  // d()/dT
  J[7892] += dqdT; // dwdot[c7h15-2]/dT
  J[7894] -= dqdT; // dwdot[c7h15-4]/dT

  // reaction 625: c7h15-3 + nc7h16 => c7h15-4 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[58] * sc[61];
  k_f = 50000 * exp(-(5233.45332436908) * invT);
  dlnkfdT = (5233.45332436908) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[61] -= q; // c7h15-3
  wdot[62] += q; // c7h15-4
  // d()/d[nc7h16]
  dqdci = +k_f * sc[61];
  J[5223] -= dqdci; // dwdot[c7h15-3]/d[nc7h16]
  J[5224] += dqdci; // dwdot[c7h15-4]/d[nc7h16]
  // d()/d[c7h15-3]
  dqdci = +k_f * sc[58];
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  J[5491] += dqdci; // dwdot[c7h15-4]/d[c7h15-3]
  // d()/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT
  J[7894] += dqdT; // dwdot[c7h15-4]/dT

  // reaction 626: c7h15-4 + nc7h16 => c7h15-3 + nc7h16
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[58] * sc[62];
  k_f = 100000 * exp(-(5233.45332436908) * invT);
  dlnkfdT = (5233.45332436908) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[61] += q; // c7h15-3
  wdot[62] -= q; // c7h15-4
  // d()/d[nc7h16]
  dqdci = +k_f * sc[62];
  J[5223] += dqdci; // dwdot[c7h15-3]/d[nc7h16]
  J[5224] -= dqdci; // dwdot[c7h15-4]/d[nc7h16]
  // d()/d[c7h15-4]
  dqdci = +k_f * sc[58];
  J[5579] += dqdci; // dwdot[c7h15-3]/d[c7h15-4]
  J[5580] -= dqdci; // dwdot[c7h15-4]/d[c7h15-4]
  // d()/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT
  J[7894] -= dqdT; // dwdot[c7h15-4]/dT

  // reaction 627: c7h15-2 => c3h6 + pc4h9
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[60];
  k_f = 2.218e+16 * exp(-0.89 * logT - (15161.9181406962) * invT);
  dlnkfdT = -0.89 * invT + (15161.9181406962) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[26] += q; // c3h6
  wdot[31] += q; // pc4h9
  wdot[60] -= q; // c7h15-2
  // d()/d[c7h15-2]
  dqdci = +k_f;
  J[5366] += dqdci; // dwdot[c3h6]/d[c7h15-2]
  J[5371] += dqdci; // dwdot[pc4h9]/d[c7h15-2]
  J[5400] -= dqdci; // dwdot[c7h15-2]/d[c7h15-2]
  // d()/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7863] += dqdT; // dwdot[pc4h9]/dT
  J[7892] -= dqdT; // dwdot[c7h15-2]/dT

  // reaction 628: c3h6 + pc4h9 => c7h15-2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[26] * sc[31];
  k_f = 100000 * exp(-(4126.3766595987) * invT);
  dlnkfdT = (4126.3766595987) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[26] -= q; // c3h6
  wdot[31] -= q; // pc4h9
  wdot[60] += q; // c7h15-2
  // d()/d[c3h6]
  dqdci = +k_f * sc[31];
  J[2340] -= dqdci; // dwdot[c3h6]/d[c3h6]
  J[2345] -= dqdci; // dwdot[pc4h9]/d[c3h6]
  J[2374] += dqdci; // dwdot[c7h15-2]/d[c3h6]
  // d()/d[pc4h9]
  dqdci = +k_f * sc[26];
  J[2785] -= dqdci; // dwdot[c3h6]/d[pc4h9]
  J[2790] -= dqdci; // dwdot[pc4h9]/d[pc4h9]
  J[2819] += dqdci; // dwdot[c7h15-2]/d[pc4h9]
  // d()/dT
  J[7858] -= dqdT; // dwdot[c3h6]/dT
  J[7863] -= dqdT; // dwdot[pc4h9]/dT
  J[7892] += dqdT; // dwdot[c7h15-2]/dT

  // reaction 629: c7h15-2 => c7h14-2 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[60];
  k_f = 2.71e+15 * exp(-0.72 * logT - (18915.9144675994) * invT);
  dlnkfdT = -0.72 * invT + (18915.9144675994) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[60] -= q; // c7h15-2
  wdot[63] += q; // c7h14-2
  // d()/d[c7h15-2]
  dqdci = +k_f;
  J[5340] += dqdci; // dwdot[h]/d[c7h15-2]
  J[5400] -= dqdci; // dwdot[c7h15-2]/d[c7h15-2]
  J[5403] += dqdci; // dwdot[c7h14-2]/d[c7h15-2]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7892] -= dqdT; // dwdot[c7h15-2]/dT
  J[7895] += dqdT; // dwdot[c7h14-2]/dT

  // reaction 630: c7h14-2 + h => c7h15-2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[63];
  k_f = 10000000 * exp(-(1459.32833083369) * invT);
  dlnkfdT = (1459.32833083369) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[60] += q; // c7h15-2
  wdot[63] -= q; // c7h14-2
  // d()/d[h]
  dqdci = +k_f * sc[63];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[60] += dqdci; // dwdot[c7h15-2]/d[h]
  J[63] -= dqdci; // dwdot[c7h14-2]/d[h]
  // d()/d[c7h14-2]
  dqdci = +k_f * sc[0];
  J[5607] -= dqdci; // dwdot[h]/d[c7h14-2]
  J[5667] += dqdci; // dwdot[c7h15-2]/d[c7h14-2]
  J[5670] -= dqdci; // dwdot[c7h14-2]/d[c7h14-2]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7892] += dqdT; // dwdot[c7h15-2]/dT
  J[7895] -= dqdT; // dwdot[c7h14-2]/dT

  // reaction 631: c7h15-3 => c4h8-1 + nc3h7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[61];
  k_f = 9.633e+17 * exp(-1.42 * logT - (15388.3656403083) * invT);
  dlnkfdT = -1.42 * invT + (15388.3656403083) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[28] += q; // nc3h7
  wdot[30] += q; // c4h8-1
  wdot[61] -= q; // c7h15-3
  // d()/d[c7h15-3]
  dqdci = +k_f;
  J[5457] += dqdci; // dwdot[nc3h7]/d[c7h15-3]
  J[5459] += dqdci; // dwdot[c4h8-1]/d[c7h15-3]
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  // d()/dT
  J[7860] += dqdT; // dwdot[nc3h7]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT

  // reaction 632: c4h8-1 + nc3h7 => c7h15-3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[28] * sc[30];
  k_f = 100000 * exp(-(3874.76832669634) * invT);
  dlnkfdT = (3874.76832669634) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[28] -= q; // nc3h7
  wdot[30] -= q; // c4h8-1
  wdot[61] += q; // c7h15-3
  // d()/d[nc3h7]
  dqdci = +k_f * sc[30];
  J[2520] -= dqdci; // dwdot[nc3h7]/d[nc3h7]
  J[2522] -= dqdci; // dwdot[c4h8-1]/d[nc3h7]
  J[2553] += dqdci; // dwdot[c7h15-3]/d[nc3h7]
  // d()/d[c4h8-1]
  dqdci = +k_f * sc[28];
  J[2698] -= dqdci; // dwdot[nc3h7]/d[c4h8-1]
  J[2700] -= dqdci; // dwdot[c4h8-1]/d[c4h8-1]
  J[2731] += dqdci; // dwdot[c7h15-3]/d[c4h8-1]
  // d()/dT
  J[7860] -= dqdT; // dwdot[nc3h7]/dT
  J[7862] -= dqdT; // dwdot[c4h8-1]/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT

  // reaction 633: c7h15-3 => c7h14-2 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[61];
  k_f = 2.71e+15 * exp(-0.72 * logT - (18915.9144675994) * invT);
  dlnkfdT = -0.72 * invT + (18915.9144675994) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[61] -= q; // c7h15-3
  wdot[63] += q; // c7h14-2
  // d()/d[c7h15-3]
  dqdci = +k_f;
  J[5429] += dqdci; // dwdot[h]/d[c7h15-3]
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  J[5492] += dqdci; // dwdot[c7h14-2]/d[c7h15-3]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT
  J[7895] += dqdT; // dwdot[c7h14-2]/dT

  // reaction 634: c7h14-2 + h => c7h15-3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[63];
  k_f = 10000000 * exp(-(1459.32833083369) * invT);
  dlnkfdT = (1459.32833083369) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[61] += q; // c7h15-3
  wdot[63] -= q; // c7h14-2
  // d()/d[h]
  dqdci = +k_f * sc[63];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[61] += dqdci; // dwdot[c7h15-3]/d[h]
  J[63] -= dqdci; // dwdot[c7h14-2]/d[h]
  // d()/d[c7h14-2]
  dqdci = +k_f * sc[0];
  J[5607] -= dqdci; // dwdot[h]/d[c7h14-2]
  J[5668] += dqdci; // dwdot[c7h15-3]/d[c7h14-2]
  J[5670] -= dqdci; // dwdot[c7h14-2]/d[c7h14-2]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT
  J[7895] -= dqdT; // dwdot[c7h14-2]/dT

  // reaction 635: c7h15-3 => c7h14-3 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[61];
  k_f = 2.018e+15 * exp(-0.66 * logT - (18961.2039675218) * invT);
  dlnkfdT = -0.66 * invT + (18961.2039675218) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[61] -= q; // c7h15-3
  wdot[64] += q; // c7h14-3
  // d()/d[c7h15-3]
  dqdci = +k_f;
  J[5429] += dqdci; // dwdot[h]/d[c7h15-3]
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  J[5493] += dqdci; // dwdot[c7h14-3]/d[c7h15-3]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT
  J[7896] += dqdT; // dwdot[c7h14-3]/dT

  // reaction 636: c7h14-3 + h => c7h15-3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[64];
  k_f = 10000000 * exp(-(1459.32833083369) * invT);
  dlnkfdT = (1459.32833083369) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[61] += q; // c7h15-3
  wdot[64] -= q; // c7h14-3
  // d()/d[h]
  dqdci = +k_f * sc[64];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[61] += dqdci; // dwdot[c7h15-3]/d[h]
  J[64] -= dqdci; // dwdot[c7h14-3]/d[h]
  // d()/d[c7h14-3]
  dqdci = +k_f * sc[0];
  J[5696] -= dqdci; // dwdot[h]/d[c7h14-3]
  J[5757] += dqdci; // dwdot[c7h15-3]/d[c7h14-3]
  J[5760] -= dqdci; // dwdot[c7h14-3]/d[c7h14-3]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT
  J[7896] -= dqdT; // dwdot[c7h14-3]/dT

  // reaction 637: c7h15-4 => c2h5 + c5h10-1
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[62];
  k_f = 5.426e+16 * exp(-0.89 * logT - (15393.3978069664) * invT);
  dlnkfdT = -0.89 * invT + (15393.3978069664) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[17] += q; // c2h5
  wdot[36] += q; // c5h10-1
  wdot[62] -= q; // c7h15-4
  // d()/d[c7h15-4]
  dqdci = +k_f;
  J[5535] += dqdci; // dwdot[c2h5]/d[c7h15-4]
  J[5554] += dqdci; // dwdot[c5h10-1]/d[c7h15-4]
  J[5580] -= dqdci; // dwdot[c7h15-4]/d[c7h15-4]
  // d()/dT
  J[7849] += dqdT; // dwdot[c2h5]/dT
  J[7868] += dqdT; // dwdot[c5h10-1]/dT
  J[7894] -= dqdT; // dwdot[c7h15-4]/dT

  // reaction 638: c2h5 + c5h10-1 => c7h15-4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[17] * sc[36];
  k_f = 100000 * exp(-(4126.3766595987) * invT);
  dlnkfdT = (4126.3766595987) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[17] -= q; // c2h5
  wdot[36] -= q; // c5h10-1
  wdot[62] += q; // c7h15-4
  // d()/d[c2h5]
  dqdci = +k_f * sc[36];
  J[1530] -= dqdci; // dwdot[c2h5]/d[c2h5]
  J[1549] -= dqdci; // dwdot[c5h10-1]/d[c2h5]
  J[1575] += dqdci; // dwdot[c7h15-4]/d[c2h5]
  // d()/d[c5h10-1]
  dqdci = +k_f * sc[17];
  J[3221] -= dqdci; // dwdot[c2h5]/d[c5h10-1]
  J[3240] -= dqdci; // dwdot[c5h10-1]/d[c5h10-1]
  J[3266] += dqdci; // dwdot[c7h15-4]/d[c5h10-1]
  // d()/dT
  J[7849] -= dqdT; // dwdot[c2h5]/dT
  J[7868] -= dqdT; // dwdot[c5h10-1]/dT
  J[7894] += dqdT; // dwdot[c7h15-4]/dT

  // reaction 639: c7h15-4 => c7h14-3 + h
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[62];
  k_f = 4.02e+15 * exp(-0.66 * logT - (18961.2039675218) * invT);
  dlnkfdT = -0.66 * invT + (18961.2039675218) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] += q;  // h
  wdot[62] -= q; // c7h15-4
  wdot[64] += q; // c7h14-3
  // d()/d[c7h15-4]
  dqdci = +k_f;
  J[5518] += dqdci; // dwdot[h]/d[c7h15-4]
  J[5580] -= dqdci; // dwdot[c7h15-4]/d[c7h15-4]
  J[5582] += dqdci; // dwdot[c7h14-3]/d[c7h15-4]
  // d()/dT
  J[7832] += dqdT; // dwdot[h]/dT
  J[7894] -= dqdT; // dwdot[c7h15-4]/dT
  J[7896] += dqdT; // dwdot[c7h14-3]/dT

  // reaction 640: c7h14-3 + h => c7h15-4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[64];
  k_f = 10000000 * exp(-(1459.32833083369) * invT);
  dlnkfdT = (1459.32833083369) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[0] -= q;  // h
  wdot[62] += q; // c7h15-4
  wdot[64] -= q; // c7h14-3
  // d()/d[h]
  dqdci = +k_f * sc[64];
  J[0] -= dqdci;  // dwdot[h]/d[h]
  J[62] += dqdci; // dwdot[c7h15-4]/d[h]
  J[64] -= dqdci; // dwdot[c7h14-3]/d[h]
  // d()/d[c7h14-3]
  dqdci = +k_f * sc[0];
  J[5696] -= dqdci; // dwdot[h]/d[c7h14-3]
  J[5758] += dqdci; // dwdot[c7h15-4]/d[c7h14-3]
  J[5760] -= dqdci; // dwdot[c7h14-3]/d[c7h14-3]
  // d()/dT
  J[7832] -= dqdT; // dwdot[h]/dT
  J[7894] += dqdT; // dwdot[c7h15-4]/dT
  J[7896] -= dqdT; // dwdot[c7h14-3]/dT

  // reaction 641: c7h15-2 + o2 => c7h14-2 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[60];
  k_f = 3e-15 * exp(-(1509.64999741416) * invT);
  dlnkfdT = (1509.64999741416) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[60] -= q; // c7h15-2
  wdot[63] += q; // c7h14-2
  // d()/d[o2]
  dqdci = +k_f * sc[60];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[327] -= dqdci; // dwdot[c7h15-2]/d[o2]
  J[330] += dqdci; // dwdot[c7h14-2]/d[o2]
  // d()/d[c7h15-2]
  dqdci = +k_f * sc[3];
  J[5343] -= dqdci; // dwdot[o2]/d[c7h15-2]
  J[5351] += dqdci; // dwdot[ho2]/d[c7h15-2]
  J[5400] -= dqdci; // dwdot[c7h15-2]/d[c7h15-2]
  J[5403] += dqdci; // dwdot[c7h14-2]/d[c7h15-2]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7892] -= dqdT; // dwdot[c7h15-2]/dT
  J[7895] += dqdT; // dwdot[c7h14-2]/dT

  // reaction 642: c7h14-2 + ho2 => c7h15-2 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[63];
  k_f = 3.793e-15 * exp(0.05 * logT - (9193.76848425223) * invT);
  dlnkfdT = 0.05 * invT + (9193.76848425223) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[60] += q; // c7h15-2
  wdot[63] -= q; // c7h14-2
  // d()/d[ho2]
  dqdci = +k_f * sc[63];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1039] += dqdci; // dwdot[c7h15-2]/d[ho2]
  J[1042] -= dqdci; // dwdot[c7h14-2]/d[ho2]
  // d()/d[c7h14-2]
  dqdci = +k_f * sc[11];
  J[5610] += dqdci; // dwdot[o2]/d[c7h14-2]
  J[5618] -= dqdci; // dwdot[ho2]/d[c7h14-2]
  J[5667] += dqdci; // dwdot[c7h15-2]/d[c7h14-2]
  J[5670] -= dqdci; // dwdot[c7h14-2]/d[c7h14-2]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7892] += dqdT; // dwdot[c7h15-2]/dT
  J[7895] -= dqdT; // dwdot[c7h14-2]/dT

  // reaction 643: c7h15-3 + o2 => c7h14-2 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[61];
  k_f = 3e-15 * exp(-(1509.64999741416) * invT);
  dlnkfdT = (1509.64999741416) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[61] -= q; // c7h15-3
  wdot[63] += q; // c7h14-2
  // d()/d[o2]
  dqdci = +k_f * sc[61];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[328] -= dqdci; // dwdot[c7h15-3]/d[o2]
  J[330] += dqdci; // dwdot[c7h14-2]/d[o2]
  // d()/d[c7h15-3]
  dqdci = +k_f * sc[3];
  J[5432] -= dqdci; // dwdot[o2]/d[c7h15-3]
  J[5440] += dqdci; // dwdot[ho2]/d[c7h15-3]
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  J[5492] += dqdci; // dwdot[c7h14-2]/d[c7h15-3]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT
  J[7895] += dqdT; // dwdot[c7h14-2]/dT

  // reaction 644: c7h14-2 + ho2 => c7h15-3 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[63];
  k_f = 3.793e-15 * exp(0.05 * logT - (9193.76848425223) * invT);
  dlnkfdT = 0.05 * invT + (9193.76848425223) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[61] += q; // c7h15-3
  wdot[63] -= q; // c7h14-2
  // d()/d[ho2]
  dqdci = +k_f * sc[63];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1040] += dqdci; // dwdot[c7h15-3]/d[ho2]
  J[1042] -= dqdci; // dwdot[c7h14-2]/d[ho2]
  // d()/d[c7h14-2]
  dqdci = +k_f * sc[11];
  J[5610] += dqdci; // dwdot[o2]/d[c7h14-2]
  J[5618] -= dqdci; // dwdot[ho2]/d[c7h14-2]
  J[5668] += dqdci; // dwdot[c7h15-3]/d[c7h14-2]
  J[5670] -= dqdci; // dwdot[c7h14-2]/d[c7h14-2]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT
  J[7895] -= dqdT; // dwdot[c7h14-2]/dT

  // reaction 645: c7h15-3 + o2 => c7h14-3 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[61];
  k_f = 3e-15 * exp(-(1509.64999741416) * invT);
  dlnkfdT = (1509.64999741416) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[61] -= q; // c7h15-3
  wdot[64] += q; // c7h14-3
  // d()/d[o2]
  dqdci = +k_f * sc[61];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[328] -= dqdci; // dwdot[c7h15-3]/d[o2]
  J[331] += dqdci; // dwdot[c7h14-3]/d[o2]
  // d()/d[c7h15-3]
  dqdci = +k_f * sc[3];
  J[5432] -= dqdci; // dwdot[o2]/d[c7h15-3]
  J[5440] += dqdci; // dwdot[ho2]/d[c7h15-3]
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  J[5493] += dqdci; // dwdot[c7h14-3]/d[c7h15-3]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT
  J[7896] += dqdT; // dwdot[c7h14-3]/dT

  // reaction 646: c7h14-3 + ho2 => c7h15-3 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[64];
  k_f = 5.094e-15 * exp(-0.01 * logT - (9148.4789843298) * invT);
  dlnkfdT = -0.01 * invT + (9148.4789843298) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[61] += q; // c7h15-3
  wdot[64] -= q; // c7h14-3
  // d()/d[ho2]
  dqdci = +k_f * sc[64];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1040] += dqdci; // dwdot[c7h15-3]/d[ho2]
  J[1043] -= dqdci; // dwdot[c7h14-3]/d[ho2]
  // d()/d[c7h14-3]
  dqdci = +k_f * sc[11];
  J[5699] += dqdci; // dwdot[o2]/d[c7h14-3]
  J[5707] -= dqdci; // dwdot[ho2]/d[c7h14-3]
  J[5757] += dqdci; // dwdot[c7h15-3]/d[c7h14-3]
  J[5760] -= dqdci; // dwdot[c7h14-3]/d[c7h14-3]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT
  J[7896] -= dqdT; // dwdot[c7h14-3]/dT

  // reaction 647: c7h15-4 + o2 => c7h14-3 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[62];
  k_f = 6e-15 * exp(-(1509.64999741416) * invT);
  dlnkfdT = (1509.64999741416) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[11] += q; // ho2
  wdot[62] -= q; // c7h15-4
  wdot[64] += q; // c7h14-3
  // d()/d[o2]
  dqdci = +k_f * sc[62];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[278] += dqdci; // dwdot[ho2]/d[o2]
  J[329] -= dqdci; // dwdot[c7h15-4]/d[o2]
  J[331] += dqdci; // dwdot[c7h14-3]/d[o2]
  // d()/d[c7h15-4]
  dqdci = +k_f * sc[3];
  J[5521] -= dqdci; // dwdot[o2]/d[c7h15-4]
  J[5529] += dqdci; // dwdot[ho2]/d[c7h15-4]
  J[5580] -= dqdci; // dwdot[c7h15-4]/d[c7h15-4]
  J[5582] += dqdci; // dwdot[c7h14-3]/d[c7h15-4]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7894] -= dqdT; // dwdot[c7h15-4]/dT
  J[7896] += dqdT; // dwdot[c7h14-3]/dT

  // reaction 648: c7h14-3 + ho2 => c7h15-4 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[64];
  k_f = 5.113e-15 * exp(-0.01 * logT - (9148.4789843298) * invT);
  dlnkfdT = -0.01 * invT + (9148.4789843298) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[11] -= q; // ho2
  wdot[62] += q; // c7h15-4
  wdot[64] -= q; // c7h14-3
  // d()/d[ho2]
  dqdci = +k_f * sc[64];
  J[982] += dqdci;  // dwdot[o2]/d[ho2]
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1041] += dqdci; // dwdot[c7h15-4]/d[ho2]
  J[1043] -= dqdci; // dwdot[c7h14-3]/d[ho2]
  // d()/d[c7h14-3]
  dqdci = +k_f * sc[11];
  J[5699] += dqdci; // dwdot[o2]/d[c7h14-3]
  J[5707] -= dqdci; // dwdot[ho2]/d[c7h14-3]
  J[5758] += dqdci; // dwdot[c7h15-4]/d[c7h14-3]
  J[5760] -= dqdci; // dwdot[c7h14-3]/d[c7h14-3]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7894] += dqdT; // dwdot[c7h15-4]/dT
  J[7896] -= dqdT; // dwdot[c7h14-3]/dT

  // reaction 649: c7h15-1 => c7h15-3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[59];
  k_f = 1386000000 * exp(0.98 * logT - (16988.5946375673) * invT);
  dlnkfdT = 0.98 * invT + (16988.5946375673) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[59] -= q; // c7h15-1
  wdot[61] += q; // c7h15-3
  // d()/d[c7h15-1]
  dqdci = +k_f;
  J[5310] -= dqdci; // dwdot[c7h15-1]/d[c7h15-1]
  J[5312] += dqdci; // dwdot[c7h15-3]/d[c7h15-1]
  // d()/dT
  J[7891] -= dqdT; // dwdot[c7h15-1]/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT

  // reaction 650: c7h15-3 => c7h15-1
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[61];
  k_f = 44100000 * exp(1.38 * logT - (18256.7006353952) * invT);
  dlnkfdT = 1.38 * invT + (18256.7006353952) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[59] += q; // c7h15-1
  wdot[61] -= q; // c7h15-3
  // d()/d[c7h15-3]
  dqdci = +k_f;
  J[5488] += dqdci; // dwdot[c7h15-1]/d[c7h15-3]
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  // d()/dT
  J[7891] += dqdT; // dwdot[c7h15-1]/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT

  // reaction 651: c7h15-1 => c7h15-4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[59];
  k_f = 2541000000 * exp(0.35 * logT - (9943.56131630126) * invT);
  dlnkfdT = 0.35 * invT + (9943.56131630126) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[59] -= q; // c7h15-1
  wdot[62] += q; // c7h15-4
  // d()/d[c7h15-1]
  dqdci = +k_f;
  J[5310] -= dqdci; // dwdot[c7h15-1]/d[c7h15-1]
  J[5313] += dqdci; // dwdot[c7h15-4]/d[c7h15-1]
  // d()/dT
  J[7891] -= dqdT; // dwdot[c7h15-1]/dT
  J[7894] += dqdT; // dwdot[c7h15-4]/dT

  // reaction 652: c7h15-4 => c7h15-1
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[62];
  k_f = 161100000 * exp(0.74 * logT - (11211.6673141292) * invT);
  dlnkfdT = 0.74 * invT + (11211.6673141292) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[59] += q; // c7h15-1
  wdot[62] -= q; // c7h15-4
  // d()/d[c7h15-4]
  dqdci = +k_f;
  J[5577] += dqdci; // dwdot[c7h15-1]/d[c7h15-4]
  J[5580] -= dqdci; // dwdot[c7h15-4]/d[c7h15-4]
  // d()/dT
  J[7891] += dqdT; // dwdot[c7h15-1]/dT
  J[7894] -= dqdT; // dwdot[c7h15-4]/dT

  // reaction 653: c7h15-2 => c7h15-3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[60];
  k_f = 958700000 * exp(1.39 * logT - (19977.7016324474) * invT);
  dlnkfdT = 1.39 * invT + (19977.7016324474) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[60] -= q; // c7h15-2
  wdot[61] += q; // c7h15-3
  // d()/d[c7h15-2]
  dqdci = +k_f;
  J[5400] -= dqdci; // dwdot[c7h15-2]/d[c7h15-2]
  J[5401] += dqdci; // dwdot[c7h15-3]/d[c7h15-2]
  // d()/dT
  J[7892] -= dqdT; // dwdot[c7h15-2]/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT

  // reaction 654: c7h15-3 => c7h15-2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[61];
  k_f = 958700000 * exp(1.39 * logT - (19977.7016324474) * invT);
  dlnkfdT = 1.39 * invT + (19977.7016324474) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[60] += q; // c7h15-2
  wdot[61] -= q; // c7h15-3
  // d()/d[c7h15-3]
  dqdci = +k_f;
  J[5489] += dqdci; // dwdot[c7h15-2]/d[c7h15-3]
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  // d()/dT
  J[7892] += dqdT; // dwdot[c7h15-2]/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT

  // reaction 655: c7h15-1 => c7h15-2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[59];
  k_f = 547800000 * exp(1.62 * logT - (19504.6779665909) * invT);
  dlnkfdT = 1.62 * invT + (19504.6779665909) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[59] -= q; // c7h15-1
  wdot[60] += q; // c7h15-2
  // d()/d[c7h15-1]
  dqdci = +k_f;
  J[5310] -= dqdci; // dwdot[c7h15-1]/d[c7h15-1]
  J[5311] += dqdci; // dwdot[c7h15-2]/d[c7h15-1]
  // d()/dT
  J[7891] -= dqdT; // dwdot[c7h15-1]/dT
  J[7892] += dqdT; // dwdot[c7h15-2]/dT

  // reaction 656: c7h15-2 => c7h15-1
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[60];
  k_f = 17430000 * exp(2.01 * logT - (20772.7839644188) * invT);
  dlnkfdT = 2.01 * invT + (20772.7839644188) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[59] += q; // c7h15-1
  wdot[60] -= q; // c7h15-2
  // d()/d[c7h15-2]
  dqdci = +k_f;
  J[5399] += dqdci; // dwdot[c7h15-1]/d[c7h15-2]
  J[5400] -= dqdci; // dwdot[c7h15-2]/d[c7h15-2]
  // d()/dT
  J[7891] += dqdT; // dwdot[c7h15-1]/dT
  J[7892] -= dqdT; // dwdot[c7h15-2]/dT

  // reaction 657: c7h14-2 + oh => c2h5cho + pc4h9
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[63];
  k_f = 100000 * exp(-(-2012.86666321888) * invT);
  dlnkfdT = (-2012.86666321888) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[31] += q; // pc4h9
  wdot[33] += q; // c2h5cho
  wdot[63] -= q; // c7h14-2
  // d()/d[oh]
  dqdci = +k_f * sc[63];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[387] += dqdci; // dwdot[pc4h9]/d[oh]
  J[389] += dqdci; // dwdot[c2h5cho]/d[oh]
  J[419] -= dqdci; // dwdot[c7h14-2]/d[oh]
  // d()/d[c7h14-2]
  dqdci = +k_f * sc[4];
  J[5611] -= dqdci; // dwdot[oh]/d[c7h14-2]
  J[5638] += dqdci; // dwdot[pc4h9]/d[c7h14-2]
  J[5640] += dqdci; // dwdot[c2h5cho]/d[c7h14-2]
  J[5670] -= dqdci; // dwdot[c7h14-2]/d[c7h14-2]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7863] += dqdT; // dwdot[pc4h9]/dT
  J[7865] += dqdT; // dwdot[c2h5cho]/dT
  J[7895] -= dqdT; // dwdot[c7h14-2]/dT

  // reaction 658: c7h14-3 + oh => c2h5cho + pc4h9
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[64];
  k_f = 100000 * exp(-(-2012.86666321888) * invT);
  dlnkfdT = (-2012.86666321888) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[31] += q; // pc4h9
  wdot[33] += q; // c2h5cho
  wdot[64] -= q; // c7h14-3
  // d()/d[oh]
  dqdci = +k_f * sc[64];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[387] += dqdci; // dwdot[pc4h9]/d[oh]
  J[389] += dqdci; // dwdot[c2h5cho]/d[oh]
  J[420] -= dqdci; // dwdot[c7h14-3]/d[oh]
  // d()/d[c7h14-3]
  dqdci = +k_f * sc[4];
  J[5700] -= dqdci; // dwdot[oh]/d[c7h14-3]
  J[5727] += dqdci; // dwdot[pc4h9]/d[c7h14-3]
  J[5729] += dqdci; // dwdot[c2h5cho]/d[c7h14-3]
  J[5760] -= dqdci; // dwdot[c7h14-3]/d[c7h14-3]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7863] += dqdT; // dwdot[pc4h9]/dT
  J[7865] += dqdT; // dwdot[c2h5cho]/dT
  J[7896] -= dqdT; // dwdot[c7h14-3]/dT

  // reaction 659: c7h14-2 + o => c5h10-1 + ch3cho
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[63];
  k_f = 100000 * exp(-(-528.377499094956) * invT);
  dlnkfdT = (-528.377499094956) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[24] += q; // ch3cho
  wdot[36] += q; // c5h10-1
  wdot[63] -= q; // c7h14-2
  // d()/d[o]
  dqdci = +k_f * sc[63];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[202] += dqdci; // dwdot[ch3cho]/d[o]
  J[214] += dqdci; // dwdot[c5h10-1]/d[o]
  J[241] -= dqdci; // dwdot[c7h14-2]/d[o]
  // d()/d[c7h14-2]
  dqdci = +k_f * sc[2];
  J[5609] -= dqdci; // dwdot[o]/d[c7h14-2]
  J[5631] += dqdci; // dwdot[ch3cho]/d[c7h14-2]
  J[5643] += dqdci; // dwdot[c5h10-1]/d[c7h14-2]
  J[5670] -= dqdci; // dwdot[c7h14-2]/d[c7h14-2]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT
  J[7868] += dqdT; // dwdot[c5h10-1]/dT
  J[7895] -= dqdT; // dwdot[c7h14-2]/dT

  // reaction 660: c7h14-3 + o => c5h10-1 + ch3cho
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[64];
  k_f = 100000 * exp(-(-528.377499094956) * invT);
  dlnkfdT = (-528.377499094956) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // o
  wdot[24] += q; // ch3cho
  wdot[36] += q; // c5h10-1
  wdot[64] -= q; // c7h14-3
  // d()/d[o]
  dqdci = +k_f * sc[64];
  J[180] -= dqdci; // dwdot[o]/d[o]
  J[202] += dqdci; // dwdot[ch3cho]/d[o]
  J[214] += dqdci; // dwdot[c5h10-1]/d[o]
  J[242] -= dqdci; // dwdot[c7h14-3]/d[o]
  // d()/d[c7h14-3]
  dqdci = +k_f * sc[2];
  J[5698] -= dqdci; // dwdot[o]/d[c7h14-3]
  J[5720] += dqdci; // dwdot[ch3cho]/d[c7h14-3]
  J[5732] += dqdci; // dwdot[c5h10-1]/d[c7h14-3]
  J[5760] -= dqdci; // dwdot[c7h14-3]/d[c7h14-3]
  // d()/dT
  J[7834] -= dqdT; // dwdot[o]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT
  J[7868] += dqdT; // dwdot[c5h10-1]/dT
  J[7896] -= dqdT; // dwdot[c7h14-3]/dT

  // reaction 661: c7h14-2 => c4h7 + nc3h7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[63];
  k_f = 1e+16 * exp(-(35728.3832721351) * invT);
  dlnkfdT = (35728.3832721351) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[28] += q; // nc3h7
  wdot[29] += q; // c4h7
  wdot[63] -= q; // c7h14-2
  // d()/d[c7h14-2]
  dqdci = +k_f;
  J[5635] += dqdci; // dwdot[nc3h7]/d[c7h14-2]
  J[5636] += dqdci; // dwdot[c4h7]/d[c7h14-2]
  J[5670] -= dqdci; // dwdot[c7h14-2]/d[c7h14-2]
  // d()/dT
  J[7860] += dqdT; // dwdot[nc3h7]/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT
  J[7895] -= dqdT; // dwdot[c7h14-2]/dT

  // reaction 662: c4h7 + nc3h7 => c7h14-2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[28] * sc[29];
  k_f = 10000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[28] -= q; // nc3h7
  wdot[29] -= q; // c4h7
  wdot[63] += q; // c7h14-2
  // d()/d[nc3h7]
  dqdci = +k_f * sc[29];
  J[2520] -= dqdci; // dwdot[nc3h7]/d[nc3h7]
  J[2521] -= dqdci; // dwdot[c4h7]/d[nc3h7]
  J[2555] += dqdci; // dwdot[c7h14-2]/d[nc3h7]
  // d()/d[c4h7]
  dqdci = +k_f * sc[28];
  J[2609] -= dqdci; // dwdot[nc3h7]/d[c4h7]
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  J[2644] += dqdci; // dwdot[c7h14-2]/d[c4h7]
  // d()/dT
  J[7860] -= dqdT; // dwdot[nc3h7]/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT
  J[7895] += dqdT; // dwdot[c7h14-2]/dT

  // reaction 663: c7h14-3 => c4h7 + nc3h7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[64];
  k_f = 1e+16 * exp(-(35728.3832721351) * invT);
  dlnkfdT = (35728.3832721351) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[28] += q; // nc3h7
  wdot[29] += q; // c4h7
  wdot[64] -= q; // c7h14-3
  // d()/d[c7h14-3]
  dqdci = +k_f;
  J[5724] += dqdci; // dwdot[nc3h7]/d[c7h14-3]
  J[5725] += dqdci; // dwdot[c4h7]/d[c7h14-3]
  J[5760] -= dqdci; // dwdot[c7h14-3]/d[c7h14-3]
  // d()/dT
  J[7860] += dqdT; // dwdot[nc3h7]/dT
  J[7861] += dqdT; // dwdot[c4h7]/dT
  J[7896] -= dqdT; // dwdot[c7h14-3]/dT

  // reaction 664: c4h7 + nc3h7 => c7h14-3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[28] * sc[29];
  k_f = 10000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[28] -= q; // nc3h7
  wdot[29] -= q; // c4h7
  wdot[64] += q; // c7h14-3
  // d()/d[nc3h7]
  dqdci = +k_f * sc[29];
  J[2520] -= dqdci; // dwdot[nc3h7]/d[nc3h7]
  J[2521] -= dqdci; // dwdot[c4h7]/d[nc3h7]
  J[2556] += dqdci; // dwdot[c7h14-3]/d[nc3h7]
  // d()/d[c4h7]
  dqdci = +k_f * sc[28];
  J[2609] -= dqdci; // dwdot[nc3h7]/d[c4h7]
  J[2610] -= dqdci; // dwdot[c4h7]/d[c4h7]
  J[2645] += dqdci; // dwdot[c7h14-3]/d[c4h7]
  // d()/dT
  J[7860] -= dqdT; // dwdot[nc3h7]/dT
  J[7861] -= dqdT; // dwdot[c4h7]/dT
  J[7896] += dqdT; // dwdot[c7h14-3]/dT

  // reaction 665: c7h15o2-1 => c7h15-1 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[65];
  k_f = 2.657e+20 * exp(-1.67 * logT - (17813.8699694871) * invT);
  dlnkfdT = -1.67 * invT + (17813.8699694871) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[59] += q; // c7h15-1
  wdot[65] -= q; // c7h15o2-1
  // d()/d[c7h15o2-1]
  dqdci = +k_f;
  J[5788] += dqdci; // dwdot[o2]/d[c7h15o2-1]
  J[5844] += dqdci; // dwdot[c7h15-1]/d[c7h15o2-1]
  J[5850] -= dqdci; // dwdot[c7h15o2-1]/d[c7h15o2-1]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7891] += dqdT; // dwdot[c7h15-1]/dT
  J[7897] -= dqdT; // dwdot[c7h15o2-1]/dT

  // reaction 666: c7h15-1 + o2 => c7h15o2-1
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[59];
  k_f = 4520000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[59] -= q; // c7h15-1
  wdot[65] += q; // c7h15o2-1
  // d()/d[o2]
  dqdci = +k_f * sc[59];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[326] -= dqdci; // dwdot[c7h15-1]/d[o2]
  J[332] += dqdci; // dwdot[c7h15o2-1]/d[o2]
  // d()/d[c7h15-1]
  dqdci = +k_f * sc[3];
  J[5254] -= dqdci; // dwdot[o2]/d[c7h15-1]
  J[5310] -= dqdci; // dwdot[c7h15-1]/d[c7h15-1]
  J[5316] += dqdci; // dwdot[c7h15o2-1]/d[c7h15-1]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7891] -= dqdT; // dwdot[c7h15-1]/dT
  J[7897] += dqdT; // dwdot[c7h15o2-1]/dT

  // reaction 667: c7h15o2-2 => c7h15-2 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[66];
  k_f = 1.357e+23 * exp(-2.36 * logT - (18956.1718008638) * invT);
  dlnkfdT = -2.36 * invT + (18956.1718008638) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[60] += q; // c7h15-2
  wdot[66] -= q; // c7h15o2-2
  // d()/d[c7h15o2-2]
  dqdci = +k_f;
  J[5877] += dqdci; // dwdot[o2]/d[c7h15o2-2]
  J[5934] += dqdci; // dwdot[c7h15-2]/d[c7h15o2-2]
  J[5940] -= dqdci; // dwdot[c7h15o2-2]/d[c7h15o2-2]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7892] += dqdT; // dwdot[c7h15-2]/dT
  J[7898] -= dqdT; // dwdot[c7h15o2-2]/dT

  // reaction 668: c7h15-2 + o2 => c7h15o2-2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[60];
  k_f = 7540000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[60] -= q; // c7h15-2
  wdot[66] += q; // c7h15o2-2
  // d()/d[o2]
  dqdci = +k_f * sc[60];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[327] -= dqdci; // dwdot[c7h15-2]/d[o2]
  J[333] += dqdci; // dwdot[c7h15o2-2]/d[o2]
  // d()/d[c7h15-2]
  dqdci = +k_f * sc[3];
  J[5343] -= dqdci; // dwdot[o2]/d[c7h15-2]
  J[5400] -= dqdci; // dwdot[c7h15-2]/d[c7h15-2]
  J[5406] += dqdci; // dwdot[c7h15o2-2]/d[c7h15-2]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7892] -= dqdT; // dwdot[c7h15-2]/dT
  J[7898] += dqdT; // dwdot[c7h15o2-2]/dT

  // reaction 669: c7h15o2-3 => c7h15-3 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[67];
  k_f = 9.879e+21 * exp(-1.97 * logT - (19051.7829673667) * invT);
  dlnkfdT = -1.97 * invT + (19051.7829673667) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[61] += q; // c7h15-3
  wdot[67] -= q; // c7h15o2-3
  // d()/d[c7h15o2-3]
  dqdci = +k_f;
  J[5966] += dqdci; // dwdot[o2]/d[c7h15o2-3]
  J[6024] += dqdci; // dwdot[c7h15-3]/d[c7h15o2-3]
  J[6030] -= dqdci; // dwdot[c7h15o2-3]/d[c7h15o2-3]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7893] += dqdT; // dwdot[c7h15-3]/dT
  J[7899] -= dqdT; // dwdot[c7h15o2-3]/dT

  // reaction 670: c7h15-3 + o2 => c7h15o2-3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[61];
  k_f = 7540000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[61] -= q; // c7h15-3
  wdot[67] += q; // c7h15o2-3
  // d()/d[o2]
  dqdci = +k_f * sc[61];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[328] -= dqdci; // dwdot[c7h15-3]/d[o2]
  J[334] += dqdci; // dwdot[c7h15o2-3]/d[o2]
  // d()/d[c7h15-3]
  dqdci = +k_f * sc[3];
  J[5432] -= dqdci; // dwdot[o2]/d[c7h15-3]
  J[5490] -= dqdci; // dwdot[c7h15-3]/d[c7h15-3]
  J[5496] += dqdci; // dwdot[c7h15o2-3]/d[c7h15-3]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7893] -= dqdT; // dwdot[c7h15-3]/dT
  J[7899] += dqdT; // dwdot[c7h15o2-3]/dT

  // reaction 671: c7h15o2-4 => c7h15-4 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[68];
  k_f = 1.357e+23 * exp(-2.36 * logT - (18956.1718008638) * invT);
  dlnkfdT = -2.36 * invT + (18956.1718008638) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[62] += q; // c7h15-4
  wdot[68] -= q; // c7h15o2-4
  // d()/d[c7h15o2-4]
  dqdci = +k_f;
  J[6055] += dqdci; // dwdot[o2]/d[c7h15o2-4]
  J[6114] += dqdci; // dwdot[c7h15-4]/d[c7h15o2-4]
  J[6120] -= dqdci; // dwdot[c7h15o2-4]/d[c7h15o2-4]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7894] += dqdT; // dwdot[c7h15-4]/dT
  J[7900] -= dqdT; // dwdot[c7h15o2-4]/dT

  // reaction 672: c7h15-4 + o2 => c7h15o2-4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[62];
  k_f = 7540000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[62] -= q; // c7h15-4
  wdot[68] += q; // c7h15o2-4
  // d()/d[o2]
  dqdci = +k_f * sc[62];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[329] -= dqdci; // dwdot[c7h15-4]/d[o2]
  J[335] += dqdci; // dwdot[c7h15o2-4]/d[o2]
  // d()/d[c7h15-4]
  dqdci = +k_f * sc[3];
  J[5521] -= dqdci; // dwdot[o2]/d[c7h15-4]
  J[5580] -= dqdci; // dwdot[c7h15-4]/d[c7h15-4]
  J[5586] += dqdci; // dwdot[c7h15o2-4]/d[c7h15-4]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7894] -= dqdT; // dwdot[c7h15-4]/dT
  J[7900] += dqdT; // dwdot[c7h15o2-4]/dT

  // reaction 673: c7h15o2-1 => c7h14ooh1-3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[65];
  k_f = 25000000000 * exp(-(10492.0674820284) * invT);
  dlnkfdT = (10492.0674820284) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[65] -= q; // c7h15o2-1
  wdot[69] += q; // c7h14ooh1-3
  // d()/d[c7h15o2-1]
  dqdci = +k_f;
  J[5850] -= dqdci; // dwdot[c7h15o2-1]/d[c7h15o2-1]
  J[5854] += dqdci; // dwdot[c7h14ooh1-3]/d[c7h15o2-1]
  // d()/dT
  J[7897] -= dqdT; // dwdot[c7h15o2-1]/dT
  J[7901] += dqdT; // dwdot[c7h14ooh1-3]/dT

  // reaction 674: c7h14ooh1-3 => c7h15o2-1
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[69];
  k_f = 2653000000 * exp(-0.11 * logT - (4146.50532623089) * invT);
  dlnkfdT = -0.11 * invT + (4146.50532623089) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[65] += q; // c7h15o2-1
  wdot[69] -= q; // c7h14ooh1-3
  // d()/d[c7h14ooh1-3]
  dqdci = +k_f;
  J[6206] += dqdci; // dwdot[c7h15o2-1]/d[c7h14ooh1-3]
  J[6210] -= dqdci; // dwdot[c7h14ooh1-3]/d[c7h14ooh1-3]
  // d()/dT
  J[7897] += dqdT; // dwdot[c7h15o2-1]/dT
  J[7901] -= dqdT; // dwdot[c7h14ooh1-3]/dT

  // reaction 675: c7h15o2-2 => c7h14ooh2-3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[66];
  k_f = 200000000000 * exp(-(13511.3674768567) * invT);
  dlnkfdT = (13511.3674768567) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[66] -= q; // c7h15o2-2
  wdot[70] += q; // c7h14ooh2-3
  // d()/d[c7h15o2-2]
  dqdci = +k_f;
  J[5940] -= dqdci; // dwdot[c7h15o2-2]/d[c7h15o2-2]
  J[5944] += dqdci; // dwdot[c7h14ooh2-3]/d[c7h15o2-2]
  // d()/dT
  J[7898] -= dqdT; // dwdot[c7h15o2-2]/dT
  J[7902] += dqdT; // dwdot[c7h14ooh2-3]/dT

  // reaction 676: c7h14ooh2-3 => c7h15o2-2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[70];
  k_f = 22620000000 * exp(-0.11 * logT - (7180.90182103335) * invT);
  dlnkfdT = -0.11 * invT + (7180.90182103335) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[66] += q; // c7h15o2-2
  wdot[70] -= q; // c7h14ooh2-3
  // d()/d[c7h14ooh2-3]
  dqdci = +k_f;
  J[6296] += dqdci; // dwdot[c7h15o2-2]/d[c7h14ooh2-3]
  J[6300] -= dqdci; // dwdot[c7h14ooh2-3]/d[c7h14ooh2-3]
  // d()/dT
  J[7898] += dqdT; // dwdot[c7h15o2-2]/dT
  J[7902] -= dqdT; // dwdot[c7h14ooh2-3]/dT

  // reaction 677: c7h15o2-2 => c7h14ooh2-4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[66];
  k_f = 25000000000 * exp(-(10492.0674820284) * invT);
  dlnkfdT = (10492.0674820284) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[66] -= q; // c7h15o2-2
  wdot[71] += q; // c7h14ooh2-4
  // d()/d[c7h15o2-2]
  dqdci = +k_f;
  J[5940] -= dqdci; // dwdot[c7h15o2-2]/d[c7h15o2-2]
  J[5945] += dqdci; // dwdot[c7h14ooh2-4]/d[c7h15o2-2]
  // d()/dT
  J[7898] -= dqdT; // dwdot[c7h15o2-2]/dT
  J[7903] += dqdT; // dwdot[c7h14ooh2-4]/dT

  // reaction 678: c7h14ooh2-4 => c7h15o2-2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[71];
  k_f = 2827000000 * exp(-0.11 * logT - (4161.60182620503) * invT);
  dlnkfdT = -0.11 * invT + (4161.60182620503) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[66] += q; // c7h15o2-2
  wdot[71] -= q; // c7h14ooh2-4
  // d()/d[c7h14ooh2-4]
  dqdci = +k_f;
  J[6385] += dqdci; // dwdot[c7h15o2-2]/d[c7h14ooh2-4]
  J[6390] -= dqdci; // dwdot[c7h14ooh2-4]/d[c7h14ooh2-4]
  // d()/dT
  J[7898] += dqdT; // dwdot[c7h15o2-2]/dT
  J[7903] -= dqdT; // dwdot[c7h14ooh2-4]/dT

  // reaction 679: c7h15o2-3 => c7h14ooh3-2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[67];
  k_f = 200000000000 * exp(-(13511.3674768567) * invT);
  dlnkfdT = (13511.3674768567) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[67] -= q; // c7h15o2-3
  wdot[72] += q; // c7h14ooh3-2
  // d()/d[c7h15o2-3]
  dqdci = +k_f;
  J[6030] -= dqdci; // dwdot[c7h15o2-3]/d[c7h15o2-3]
  J[6035] += dqdci; // dwdot[c7h14ooh3-2]/d[c7h15o2-3]
  // d()/dT
  J[7899] -= dqdT; // dwdot[c7h15o2-3]/dT
  J[7904] += dqdT; // dwdot[c7h14ooh3-2]/dT

  // reaction 680: c7h14ooh3-2 => c7h15o2-3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[72];
  k_f = 310700000000 * exp(-0.51 * logT - (7085.29065453045) * invT);
  dlnkfdT = -0.51 * invT + (7085.29065453045) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[67] += q; // c7h15o2-3
  wdot[72] -= q; // c7h14ooh3-2
  // d()/d[c7h14ooh3-2]
  dqdci = +k_f;
  J[6475] += dqdci; // dwdot[c7h15o2-3]/d[c7h14ooh3-2]
  J[6480] -= dqdci; // dwdot[c7h14ooh3-2]/d[c7h14ooh3-2]
  // d()/dT
  J[7899] += dqdT; // dwdot[c7h15o2-3]/dT
  J[7904] -= dqdT; // dwdot[c7h14ooh3-2]/dT

  // reaction 681: c7h15o2-3 => c7h14ooh3-4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[67];
  k_f = 200000000000 * exp(-(13511.3674768567) * invT);
  dlnkfdT = (13511.3674768567) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[67] -= q; // c7h15o2-3
  wdot[73] += q; // c7h14ooh3-4
  // d()/d[c7h15o2-3]
  dqdci = +k_f;
  J[6030] -= dqdci; // dwdot[c7h15o2-3]/d[c7h15o2-3]
  J[6036] += dqdci; // dwdot[c7h14ooh3-4]/d[c7h15o2-3]
  // d()/dT
  J[7899] -= dqdT; // dwdot[c7h15o2-3]/dT
  J[7905] += dqdT; // dwdot[c7h14ooh3-4]/dT

  // reaction 682: c7h14ooh3-4 => c7h15o2-3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[73];
  k_f = 310700000000 * exp(-0.51 * logT - (7085.29065453045) * invT);
  dlnkfdT = -0.51 * invT + (7085.29065453045) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[67] += q; // c7h15o2-3
  wdot[73] -= q; // c7h14ooh3-4
  // d()/d[c7h14ooh3-4]
  dqdci = +k_f;
  J[6564] += dqdci; // dwdot[c7h15o2-3]/d[c7h14ooh3-4]
  J[6570] -= dqdci; // dwdot[c7h14ooh3-4]/d[c7h14ooh3-4]
  // d()/dT
  J[7899] += dqdT; // dwdot[c7h15o2-3]/dT
  J[7905] -= dqdT; // dwdot[c7h14ooh3-4]/dT

  // reaction 683: c7h15o2-3 => c7h14ooh3-5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[67];
  k_f = 25000000000 * exp(-(10492.0674820284) * invT);
  dlnkfdT = (10492.0674820284) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[67] -= q; // c7h15o2-3
  wdot[74] += q; // c7h14ooh3-5
  // d()/d[c7h15o2-3]
  dqdci = +k_f;
  J[6030] -= dqdci; // dwdot[c7h15o2-3]/d[c7h15o2-3]
  J[6037] += dqdci; // dwdot[c7h14ooh3-5]/d[c7h15o2-3]
  // d()/dT
  J[7899] -= dqdT; // dwdot[c7h15o2-3]/dT
  J[7906] += dqdT; // dwdot[c7h14ooh3-5]/dT

  // reaction 684: c7h14ooh3-5 => c7h15o2-3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[74];
  k_f = 38840000000 * exp(-0.51 * logT - (4065.99065970213) * invT);
  dlnkfdT = -0.51 * invT + (4065.99065970213) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[67] += q; // c7h15o2-3
  wdot[74] -= q; // c7h14ooh3-5
  // d()/d[c7h14ooh3-5]
  dqdci = +k_f;
  J[6653] += dqdci; // dwdot[c7h15o2-3]/d[c7h14ooh3-5]
  J[6660] -= dqdci; // dwdot[c7h14ooh3-5]/d[c7h14ooh3-5]
  // d()/dT
  J[7899] += dqdT; // dwdot[c7h15o2-3]/dT
  J[7906] -= dqdT; // dwdot[c7h14ooh3-5]/dT

  // reaction 685: c7h15o2-4 => c7h14ooh4-2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[68];
  k_f = 50000000000 * exp(-(10492.0674820284) * invT);
  dlnkfdT = (10492.0674820284) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[68] -= q; // c7h15o2-4
  wdot[75] += q; // c7h14ooh4-2
  // d()/d[c7h15o2-4]
  dqdci = +k_f;
  J[6120] -= dqdci; // dwdot[c7h15o2-4]/d[c7h15o2-4]
  J[6127] += dqdci; // dwdot[c7h14ooh4-2]/d[c7h15o2-4]
  // d()/dT
  J[7900] -= dqdT; // dwdot[c7h15o2-4]/dT
  J[7907] += dqdT; // dwdot[c7h14ooh4-2]/dT

  // reaction 686: c7h14ooh4-2 => c7h15o2-4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[75];
  k_f = 5655000000 * exp(-0.11 * logT - (4161.60182620503) * invT);
  dlnkfdT = -0.11 * invT + (4161.60182620503) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[68] += q; // c7h15o2-4
  wdot[75] -= q; // c7h14ooh4-2
  // d()/d[c7h14ooh4-2]
  dqdci = +k_f;
  J[6743] += dqdci; // dwdot[c7h15o2-4]/d[c7h14ooh4-2]
  J[6750] -= dqdci; // dwdot[c7h14ooh4-2]/d[c7h14ooh4-2]
  // d()/dT
  J[7900] += dqdT; // dwdot[c7h15o2-4]/dT
  J[7907] -= dqdT; // dwdot[c7h14ooh4-2]/dT

  // reaction 687: c7h15o2-4 => c7h14ooh4-3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[68];
  k_f = 400000000000 * exp(-(13511.3674768567) * invT);
  dlnkfdT = (13511.3674768567) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[68] -= q; // c7h15o2-4
  wdot[76] += q; // c7h14ooh4-3
  // d()/d[c7h15o2-4]
  dqdci = +k_f;
  J[6120] -= dqdci; // dwdot[c7h15o2-4]/d[c7h15o2-4]
  J[6128] += dqdci; // dwdot[c7h14ooh4-3]/d[c7h15o2-4]
  // d()/dT
  J[7900] -= dqdT; // dwdot[c7h15o2-4]/dT
  J[7908] += dqdT; // dwdot[c7h14ooh4-3]/dT

  // reaction 688: c7h14ooh4-3 => c7h15o2-4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[76];
  k_f = 45240000000 * exp(-0.11 * logT - (7180.90182103335) * invT);
  dlnkfdT = -0.11 * invT + (7180.90182103335) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[68] += q; // c7h15o2-4
  wdot[76] -= q; // c7h14ooh4-3
  // d()/d[c7h14ooh4-3]
  dqdci = +k_f;
  J[6832] += dqdci; // dwdot[c7h15o2-4]/d[c7h14ooh4-3]
  J[6840] -= dqdci; // dwdot[c7h14ooh4-3]/d[c7h14ooh4-3]
  // d()/dT
  J[7900] += dqdT; // dwdot[c7h15o2-4]/dT
  J[7908] -= dqdT; // dwdot[c7h14ooh4-3]/dT

  // reaction 689: c7h14ooh2-3 => c7h14-2 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[70];
  k_f = 1.61e+20 * exp(-2.52 * logT - (10743.6758149308) * invT);
  dlnkfdT = -2.52 * invT + (10743.6758149308) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // ho2
  wdot[63] += q; // c7h14-2
  wdot[70] -= q; // c7h14ooh2-3
  // d()/d[c7h14ooh2-3]
  dqdci = +k_f;
  J[6241] += dqdci; // dwdot[ho2]/d[c7h14ooh2-3]
  J[6293] += dqdci; // dwdot[c7h14-2]/d[c7h14ooh2-3]
  J[6300] -= dqdci; // dwdot[c7h14ooh2-3]/d[c7h14ooh2-3]
  // d()/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7895] += dqdT; // dwdot[c7h14-2]/dT
  J[7902] -= dqdT; // dwdot[c7h14ooh2-3]/dT

  // reaction 690: c7h14-2 + ho2 => c7h14ooh2-3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[63];
  k_f = 100000 * exp(-(5802.08815672842) * invT);
  dlnkfdT = (5802.08815672842) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // ho2
  wdot[63] -= q; // c7h14-2
  wdot[70] += q; // c7h14ooh2-3
  // d()/d[ho2]
  dqdci = +k_f * sc[63];
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1042] -= dqdci; // dwdot[c7h14-2]/d[ho2]
  J[1049] += dqdci; // dwdot[c7h14ooh2-3]/d[ho2]
  // d()/d[c7h14-2]
  dqdci = +k_f * sc[11];
  J[5618] -= dqdci; // dwdot[ho2]/d[c7h14-2]
  J[5670] -= dqdci; // dwdot[c7h14-2]/d[c7h14-2]
  J[5677] += dqdci; // dwdot[c7h14ooh2-3]/d[c7h14-2]
  // d()/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7895] -= dqdT; // dwdot[c7h14-2]/dT
  J[7902] += dqdT; // dwdot[c7h14ooh2-3]/dT

  // reaction 691: c7h14ooh3-2 => c7h14-2 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[72];
  k_f = 1.61e+20 * exp(-2.52 * logT - (10743.6758149308) * invT);
  dlnkfdT = -2.52 * invT + (10743.6758149308) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // ho2
  wdot[63] += q; // c7h14-2
  wdot[72] -= q; // c7h14ooh3-2
  // d()/d[c7h14ooh3-2]
  dqdci = +k_f;
  J[6419] += dqdci; // dwdot[ho2]/d[c7h14ooh3-2]
  J[6471] += dqdci; // dwdot[c7h14-2]/d[c7h14ooh3-2]
  J[6480] -= dqdci; // dwdot[c7h14ooh3-2]/d[c7h14ooh3-2]
  // d()/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7895] += dqdT; // dwdot[c7h14-2]/dT
  J[7904] -= dqdT; // dwdot[c7h14ooh3-2]/dT

  // reaction 692: c7h14-2 + ho2 => c7h14ooh3-2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[63];
  k_f = 100000 * exp(-(5802.08815672842) * invT);
  dlnkfdT = (5802.08815672842) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // ho2
  wdot[63] -= q; // c7h14-2
  wdot[72] += q; // c7h14ooh3-2
  // d()/d[ho2]
  dqdci = +k_f * sc[63];
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1042] -= dqdci; // dwdot[c7h14-2]/d[ho2]
  J[1051] += dqdci; // dwdot[c7h14ooh3-2]/d[ho2]
  // d()/d[c7h14-2]
  dqdci = +k_f * sc[11];
  J[5618] -= dqdci; // dwdot[ho2]/d[c7h14-2]
  J[5670] -= dqdci; // dwdot[c7h14-2]/d[c7h14-2]
  J[5679] += dqdci; // dwdot[c7h14ooh3-2]/d[c7h14-2]
  // d()/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7895] -= dqdT; // dwdot[c7h14-2]/dT
  J[7904] += dqdT; // dwdot[c7h14ooh3-2]/dT

  // reaction 693: c7h14ooh3-4 => c7h14-3 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[73];
  k_f = 1.199e+20 * exp(-2.46 * logT - (10285.7486490485) * invT);
  dlnkfdT = -2.46 * invT + (10285.7486490485) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // ho2
  wdot[64] += q; // c7h14-3
  wdot[73] -= q; // c7h14ooh3-4
  // d()/d[c7h14ooh3-4]
  dqdci = +k_f;
  J[6508] += dqdci; // dwdot[ho2]/d[c7h14ooh3-4]
  J[6561] += dqdci; // dwdot[c7h14-3]/d[c7h14ooh3-4]
  J[6570] -= dqdci; // dwdot[c7h14ooh3-4]/d[c7h14ooh3-4]
  // d()/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7896] += dqdT; // dwdot[c7h14-3]/dT
  J[7905] -= dqdT; // dwdot[c7h14ooh3-4]/dT

  // reaction 694: c7h14-3 + ho2 => c7h14ooh3-4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[64];
  k_f = 100000 * exp(-(5298.8714909237) * invT);
  dlnkfdT = (5298.8714909237) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // ho2
  wdot[64] -= q; // c7h14-3
  wdot[73] += q; // c7h14ooh3-4
  // d()/d[ho2]
  dqdci = +k_f * sc[64];
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1043] -= dqdci; // dwdot[c7h14-3]/d[ho2]
  J[1052] += dqdci; // dwdot[c7h14ooh3-4]/d[ho2]
  // d()/d[c7h14-3]
  dqdci = +k_f * sc[11];
  J[5707] -= dqdci; // dwdot[ho2]/d[c7h14-3]
  J[5760] -= dqdci; // dwdot[c7h14-3]/d[c7h14-3]
  J[5769] += dqdci; // dwdot[c7h14ooh3-4]/d[c7h14-3]
  // d()/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7896] -= dqdT; // dwdot[c7h14-3]/dT
  J[7905] += dqdT; // dwdot[c7h14ooh3-4]/dT

  // reaction 695: c7h14ooh4-3 => c7h14-3 + ho2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[76];
  k_f = 2.389e+20 * exp(-2.46 * logT - (10285.7486490485) * invT);
  dlnkfdT = -2.46 * invT + (10285.7486490485) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // ho2
  wdot[64] += q; // c7h14-3
  wdot[76] -= q; // c7h14ooh4-3
  // d()/d[c7h14ooh4-3]
  dqdci = +k_f;
  J[6775] += dqdci; // dwdot[ho2]/d[c7h14ooh4-3]
  J[6828] += dqdci; // dwdot[c7h14-3]/d[c7h14ooh4-3]
  J[6840] -= dqdci; // dwdot[c7h14ooh4-3]/d[c7h14ooh4-3]
  // d()/dT
  J[7843] += dqdT; // dwdot[ho2]/dT
  J[7896] += dqdT; // dwdot[c7h14-3]/dT
  J[7908] -= dqdT; // dwdot[c7h14ooh4-3]/dT

  // reaction 696: c7h14-3 + ho2 => c7h14ooh4-3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[64];
  k_f = 100000 * exp(-(5298.8714909237) * invT);
  dlnkfdT = (5298.8714909237) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // ho2
  wdot[64] -= q; // c7h14-3
  wdot[76] += q; // c7h14ooh4-3
  // d()/d[ho2]
  dqdci = +k_f * sc[64];
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[1043] -= dqdci; // dwdot[c7h14-3]/d[ho2]
  J[1055] += dqdci; // dwdot[c7h14ooh4-3]/d[ho2]
  // d()/d[c7h14-3]
  dqdci = +k_f * sc[11];
  J[5707] -= dqdci; // dwdot[ho2]/d[c7h14-3]
  J[5760] -= dqdci; // dwdot[c7h14-3]/d[c7h14-3]
  J[5772] += dqdci; // dwdot[c7h14ooh4-3]/d[c7h14-3]
  // d()/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7896] -= dqdT; // dwdot[c7h14-3]/dT
  J[7908] += dqdT; // dwdot[c7h14ooh4-3]/dT

  // reaction 697: c7h14ooh1-3 => c7h14o1-3 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[69];
  k_f = 75000000000 * exp(-(7674.05415352198) * invT);
  dlnkfdT = (7674.05415352198) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[69] -= q; // c7h14ooh1-3
  wdot[81] += q; // c7h14o1-3
  // d()/d[c7h14ooh1-3]
  dqdci = +k_f;
  J[6145] += dqdci; // dwdot[oh]/d[c7h14ooh1-3]
  J[6210] -= dqdci; // dwdot[c7h14ooh1-3]/d[c7h14ooh1-3]
  J[6222] += dqdci; // dwdot[c7h14o1-3]/d[c7h14ooh1-3]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7901] -= dqdT; // dwdot[c7h14ooh1-3]/dT
  J[7913] += dqdT; // dwdot[c7h14o1-3]/dT

  // reaction 698: c7h14ooh2-4 => c7h14o2-4 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[71];
  k_f = 75000000000 * exp(-(7674.05415352198) * invT);
  dlnkfdT = (7674.05415352198) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[71] -= q; // c7h14ooh2-4
  wdot[82] += q; // c7h14o2-4
  // d()/d[c7h14ooh2-4]
  dqdci = +k_f;
  J[6323] += dqdci; // dwdot[oh]/d[c7h14ooh2-4]
  J[6390] -= dqdci; // dwdot[c7h14ooh2-4]/d[c7h14ooh2-4]
  J[6401] += dqdci; // dwdot[c7h14o2-4]/d[c7h14ooh2-4]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7903] -= dqdT; // dwdot[c7h14ooh2-4]/dT
  J[7914] += dqdT; // dwdot[c7h14o2-4]/dT

  // reaction 699: c7h14ooh4-2 => c7h14o2-4 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[75];
  k_f = 75000000000 * exp(-(7674.05415352198) * invT);
  dlnkfdT = (7674.05415352198) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[75] -= q; // c7h14ooh4-2
  wdot[82] += q; // c7h14o2-4
  // d()/d[c7h14ooh4-2]
  dqdci = +k_f;
  J[6679] += dqdci; // dwdot[oh]/d[c7h14ooh4-2]
  J[6750] -= dqdci; // dwdot[c7h14ooh4-2]/d[c7h14ooh4-2]
  J[6757] += dqdci; // dwdot[c7h14o2-4]/d[c7h14ooh4-2]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7907] -= dqdT; // dwdot[c7h14ooh4-2]/dT
  J[7914] += dqdT; // dwdot[c7h14o2-4]/dT

  // reaction 700: c7h14ooh2-4 => c5h10-1 + ch3cho + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[71];
  k_f = 5.364e+17 * exp(-1.4 * logT - (13461.0458102763) * invT);
  dlnkfdT = -1.4 * invT + (13461.0458102763) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[24] += q; // ch3cho
  wdot[36] += q; // c5h10-1
  wdot[71] -= q; // c7h14ooh2-4
  // d()/d[c7h14ooh2-4]
  dqdci = +k_f;
  J[6323] += dqdci; // dwdot[oh]/d[c7h14ooh2-4]
  J[6343] += dqdci; // dwdot[ch3cho]/d[c7h14ooh2-4]
  J[6355] += dqdci; // dwdot[c5h10-1]/d[c7h14ooh2-4]
  J[6390] -= dqdci; // dwdot[c7h14ooh2-4]/d[c7h14ooh2-4]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT
  J[7868] += dqdT; // dwdot[c5h10-1]/dT
  J[7903] -= dqdT; // dwdot[c7h14ooh2-4]/dT

  // reaction 701: c7h14ooh3-5 => c2h5cho + c4h8-1 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[74];
  k_f = 2.47e+18 * exp(-1.55 * logT - (13596.9143100435) * invT);
  dlnkfdT = -1.55 * invT + (13596.9143100435) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[30] += q; // c4h8-1
  wdot[33] += q; // c2h5cho
  wdot[74] -= q; // c7h14ooh3-5
  // d()/d[c7h14ooh3-5]
  dqdci = +k_f;
  J[6590] += dqdci; // dwdot[oh]/d[c7h14ooh3-5]
  J[6616] += dqdci; // dwdot[c4h8-1]/d[c7h14ooh3-5]
  J[6619] += dqdci; // dwdot[c2h5cho]/d[c7h14ooh3-5]
  J[6660] -= dqdci; // dwdot[c7h14ooh3-5]/d[c7h14ooh3-5]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7862] += dqdT; // dwdot[c4h8-1]/dT
  J[7865] += dqdT; // dwdot[c2h5cho]/dT
  J[7906] -= dqdT; // dwdot[c7h14ooh3-5]/dT

  // reaction 702: c7h14ooh4-2 => c3h6 + nc3h7cho + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[75];
  k_f = 1.3e+18 * exp(-1.49 * logT - (13486.2066435665) * invT);
  dlnkfdT = -1.49 * invT + (13486.2066435665) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[26] += q; // c3h6
  wdot[52] += q; // nc3h7cho
  wdot[75] -= q; // c7h14ooh4-2
  // d()/d[c7h14ooh4-2]
  dqdci = +k_f;
  J[6679] += dqdci; // dwdot[oh]/d[c7h14ooh4-2]
  J[6701] += dqdci; // dwdot[c3h6]/d[c7h14ooh4-2]
  J[6727] += dqdci; // dwdot[nc3h7cho]/d[c7h14ooh4-2]
  J[6750] -= dqdci; // dwdot[c7h14ooh4-2]/d[c7h14ooh4-2]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7884] += dqdT; // dwdot[nc3h7cho]/dT
  J[7907] -= dqdT; // dwdot[c7h14ooh4-2]/dT

  // reaction 703: c7h14ooh1-3o2 => c7h14ooh1-3 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[77];
  k_f = 1.367e+23 * exp(-2.37 * logT - (18941.0753008896) * invT);
  dlnkfdT = -2.37 * invT + (18941.0753008896) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[69] += q; // c7h14ooh1-3
  wdot[77] -= q; // c7h14ooh1-3o2
  // d()/d[c7h14ooh1-3o2]
  dqdci = +k_f;
  J[6856] += dqdci; // dwdot[o2]/d[c7h14ooh1-3o2]
  J[6922] += dqdci; // dwdot[c7h14ooh1-3]/d[c7h14ooh1-3o2]
  J[6930] -= dqdci; // dwdot[c7h14ooh1-3o2]/d[c7h14ooh1-3o2]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7901] += dqdT; // dwdot[c7h14ooh1-3]/dT
  J[7909] -= dqdT; // dwdot[c7h14ooh1-3o2]/dT

  // reaction 704: c7h14ooh1-3 + o2 => c7h14ooh1-3o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[69];
  k_f = 7540000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[69] -= q; // c7h14ooh1-3
  wdot[77] += q; // c7h14ooh1-3o2
  // d()/d[o2]
  dqdci = +k_f * sc[69];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[336] -= dqdci; // dwdot[c7h14ooh1-3]/d[o2]
  J[344] += dqdci; // dwdot[c7h14ooh1-3o2]/d[o2]
  // d()/d[c7h14ooh1-3]
  dqdci = +k_f * sc[3];
  J[6144] -= dqdci; // dwdot[o2]/d[c7h14ooh1-3]
  J[6210] -= dqdci; // dwdot[c7h14ooh1-3]/d[c7h14ooh1-3]
  J[6218] += dqdci; // dwdot[c7h14ooh1-3o2]/d[c7h14ooh1-3]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7901] -= dqdT; // dwdot[c7h14ooh1-3]/dT
  J[7909] += dqdT; // dwdot[c7h14ooh1-3o2]/dT

  // reaction 705: c7h14ooh2-4o2 => c7h14ooh2-4 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[78];
  k_f = 1.389e+23 * exp(-2.38 * logT - (18920.9466342575) * invT);
  dlnkfdT = -2.38 * invT + (18920.9466342575) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[71] += q; // c7h14ooh2-4
  wdot[78] -= q; // c7h14ooh2-4o2
  // d()/d[c7h14ooh2-4o2]
  dqdci = +k_f;
  J[6945] += dqdci; // dwdot[o2]/d[c7h14ooh2-4o2]
  J[7013] += dqdci; // dwdot[c7h14ooh2-4]/d[c7h14ooh2-4o2]
  J[7020] -= dqdci; // dwdot[c7h14ooh2-4o2]/d[c7h14ooh2-4o2]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7903] += dqdT; // dwdot[c7h14ooh2-4]/dT
  J[7910] -= dqdT; // dwdot[c7h14ooh2-4o2]/dT

  // reaction 706: c7h14ooh2-4 + o2 => c7h14ooh2-4o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[71];
  k_f = 7540000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[71] -= q; // c7h14ooh2-4
  wdot[78] += q; // c7h14ooh2-4o2
  // d()/d[o2]
  dqdci = +k_f * sc[71];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[338] -= dqdci; // dwdot[c7h14ooh2-4]/d[o2]
  J[345] += dqdci; // dwdot[c7h14ooh2-4o2]/d[o2]
  // d()/d[c7h14ooh2-4]
  dqdci = +k_f * sc[3];
  J[6322] -= dqdci; // dwdot[o2]/d[c7h14ooh2-4]
  J[6390] -= dqdci; // dwdot[c7h14ooh2-4]/d[c7h14ooh2-4]
  J[6397] += dqdci; // dwdot[c7h14ooh2-4o2]/d[c7h14ooh2-4]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7903] -= dqdT; // dwdot[c7h14ooh2-4]/dT
  J[7910] += dqdT; // dwdot[c7h14ooh2-4o2]/dT

  // reaction 707: c7h14ooh3-5o2 => c7h14ooh3-5 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[79];
  k_f = 1.389e+23 * exp(-2.38 * logT - (18920.9466342575) * invT);
  dlnkfdT = -2.38 * invT + (18920.9466342575) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[74] += q; // c7h14ooh3-5
  wdot[79] -= q; // c7h14ooh3-5o2
  // d()/d[c7h14ooh3-5o2]
  dqdci = +k_f;
  J[7034] += dqdci; // dwdot[o2]/d[c7h14ooh3-5o2]
  J[7105] += dqdci; // dwdot[c7h14ooh3-5]/d[c7h14ooh3-5o2]
  J[7110] -= dqdci; // dwdot[c7h14ooh3-5o2]/d[c7h14ooh3-5o2]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7906] += dqdT; // dwdot[c7h14ooh3-5]/dT
  J[7911] -= dqdT; // dwdot[c7h14ooh3-5o2]/dT

  // reaction 708: c7h14ooh3-5 + o2 => c7h14ooh3-5o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[74];
  k_f = 7540000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[74] -= q; // c7h14ooh3-5
  wdot[79] += q; // c7h14ooh3-5o2
  // d()/d[o2]
  dqdci = +k_f * sc[74];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[341] -= dqdci; // dwdot[c7h14ooh3-5]/d[o2]
  J[346] += dqdci; // dwdot[c7h14ooh3-5o2]/d[o2]
  // d()/d[c7h14ooh3-5]
  dqdci = +k_f * sc[3];
  J[6589] -= dqdci; // dwdot[o2]/d[c7h14ooh3-5]
  J[6660] -= dqdci; // dwdot[c7h14ooh3-5]/d[c7h14ooh3-5]
  J[6665] += dqdci; // dwdot[c7h14ooh3-5o2]/d[c7h14ooh3-5]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7906] -= dqdT; // dwdot[c7h14ooh3-5]/dT
  J[7911] += dqdT; // dwdot[c7h14ooh3-5o2]/dT

  // reaction 709: c7h14ooh4-2o2 => c7h14ooh4-2 + o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[80];
  k_f = 6.969e+22 * exp(-2.38 * logT - (18920.9466342575) * invT);
  dlnkfdT = -2.38 * invT + (18920.9466342575) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // o2
  wdot[75] += q; // c7h14ooh4-2
  wdot[80] -= q; // c7h14ooh4-2o2
  // d()/d[c7h14ooh4-2o2]
  dqdci = +k_f;
  J[7123] += dqdci; // dwdot[o2]/d[c7h14ooh4-2o2]
  J[7195] += dqdci; // dwdot[c7h14ooh4-2]/d[c7h14ooh4-2o2]
  J[7200] -= dqdci; // dwdot[c7h14ooh4-2o2]/d[c7h14ooh4-2o2]
  // d()/dT
  J[7835] += dqdT; // dwdot[o2]/dT
  J[7907] += dqdT; // dwdot[c7h14ooh4-2]/dT
  J[7912] -= dqdT; // dwdot[c7h14ooh4-2o2]/dT

  // reaction 710: c7h14ooh4-2 + o2 => c7h14ooh4-2o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[75];
  k_f = 7540000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // o2
  wdot[75] -= q; // c7h14ooh4-2
  wdot[80] += q; // c7h14ooh4-2o2
  // d()/d[o2]
  dqdci = +k_f * sc[75];
  J[270] -= dqdci; // dwdot[o2]/d[o2]
  J[342] -= dqdci; // dwdot[c7h14ooh4-2]/d[o2]
  J[347] += dqdci; // dwdot[c7h14ooh4-2o2]/d[o2]
  // d()/d[c7h14ooh4-2]
  dqdci = +k_f * sc[3];
  J[6678] -= dqdci; // dwdot[o2]/d[c7h14ooh4-2]
  J[6750] -= dqdci; // dwdot[c7h14ooh4-2]/d[c7h14ooh4-2]
  J[6755] += dqdci; // dwdot[c7h14ooh4-2o2]/d[c7h14ooh4-2]
  // d()/dT
  J[7835] -= dqdT; // dwdot[o2]/dT
  J[7907] -= dqdT; // dwdot[c7h14ooh4-2]/dT
  J[7912] += dqdT; // dwdot[c7h14ooh4-2o2]/dT

  // reaction 711: c7h14ooh1-3o2 => nc7ket13 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[77];
  k_f = 25000000000 * exp(-(10768.836648221) * invT);
  dlnkfdT = (10768.836648221) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[77] -= q; // c7h14ooh1-3o2
  wdot[83] += q; // nc7ket13
  // d()/d[c7h14ooh1-3o2]
  dqdci = +k_f;
  J[6857] += dqdci; // dwdot[oh]/d[c7h14ooh1-3o2]
  J[6930] -= dqdci; // dwdot[c7h14ooh1-3o2]/d[c7h14ooh1-3o2]
  J[6936] += dqdci; // dwdot[nc7ket13]/d[c7h14ooh1-3o2]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7909] -= dqdT; // dwdot[c7h14ooh1-3o2]/dT
  J[7915] += dqdT; // dwdot[nc7ket13]/dT

  // reaction 712: nc7ket13 + oh => c7h14ooh1-3o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[83];
  k_f = 0.003303 * exp(1.41 * logT - (22664.8786278446) * invT);
  dlnkfdT = 1.41 * invT + (22664.8786278446) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[77] += q; // c7h14ooh1-3o2
  wdot[83] -= q; // nc7ket13
  // d()/d[oh]
  dqdci = +k_f * sc[83];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[433] += dqdci; // dwdot[c7h14ooh1-3o2]/d[oh]
  J[439] -= dqdci; // dwdot[nc7ket13]/d[oh]
  // d()/d[nc7ket13]
  dqdci = +k_f * sc[4];
  J[7391] -= dqdci; // dwdot[oh]/d[nc7ket13]
  J[7464] += dqdci; // dwdot[c7h14ooh1-3o2]/d[nc7ket13]
  J[7470] -= dqdci; // dwdot[nc7ket13]/d[nc7ket13]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7909] += dqdT; // dwdot[c7h14ooh1-3o2]/dT
  J[7915] -= dqdT; // dwdot[nc7ket13]/dT

  // reaction 713: c7h14ooh2-4o2 => nc7ket24 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[78];
  k_f = 12500000000 * exp(-(8982.41748461425) * invT);
  dlnkfdT = (8982.41748461425) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[78] -= q; // c7h14ooh2-4o2
  wdot[84] += q; // nc7ket24
  // d()/d[c7h14ooh2-4o2]
  dqdci = +k_f;
  J[6946] += dqdci; // dwdot[oh]/d[c7h14ooh2-4o2]
  J[7020] -= dqdci; // dwdot[c7h14ooh2-4o2]/d[c7h14ooh2-4o2]
  J[7026] += dqdci; // dwdot[nc7ket24]/d[c7h14ooh2-4o2]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7910] -= dqdT; // dwdot[c7h14ooh2-4o2]/dT
  J[7916] += dqdT; // dwdot[nc7ket24]/dT

  // reaction 714: nc7ket24 + oh => c7h14ooh2-4o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[84];
  k_f = 0.0001615 * exp(1.83 * logT - (22242.1766285686) * invT);
  dlnkfdT = 1.83 * invT + (22242.1766285686) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[78] += q; // c7h14ooh2-4o2
  wdot[84] -= q; // nc7ket24
  // d()/d[oh]
  dqdci = +k_f * sc[84];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[434] += dqdci; // dwdot[c7h14ooh2-4o2]/d[oh]
  J[440] -= dqdci; // dwdot[nc7ket24]/d[oh]
  // d()/d[nc7ket24]
  dqdci = +k_f * sc[4];
  J[7480] -= dqdci; // dwdot[oh]/d[nc7ket24]
  J[7554] += dqdci; // dwdot[c7h14ooh2-4o2]/d[nc7ket24]
  J[7560] -= dqdci; // dwdot[nc7ket24]/d[nc7ket24]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7910] += dqdT; // dwdot[c7h14ooh2-4o2]/dT
  J[7916] -= dqdT; // dwdot[nc7ket24]/dT

  // reaction 715: c7h14ooh3-5o2 => nc7ket35 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[79];
  k_f = 12500000000 * exp(-(8982.41748461425) * invT);
  dlnkfdT = (8982.41748461425) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[79] -= q; // c7h14ooh3-5o2
  wdot[85] += q; // nc7ket35
  // d()/d[c7h14ooh3-5o2]
  dqdci = +k_f;
  J[7035] += dqdci; // dwdot[oh]/d[c7h14ooh3-5o2]
  J[7110] -= dqdci; // dwdot[c7h14ooh3-5o2]/d[c7h14ooh3-5o2]
  J[7116] += dqdci; // dwdot[nc7ket35]/d[c7h14ooh3-5o2]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7911] -= dqdT; // dwdot[c7h14ooh3-5o2]/dT
  J[7917] += dqdT; // dwdot[nc7ket35]/dT

  // reaction 716: nc7ket35 + oh => c7h14ooh3-5o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[85];
  k_f = 0.0001615 * exp(1.83 * logT - (22242.1766285686) * invT);
  dlnkfdT = 1.83 * invT + (22242.1766285686) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[79] += q; // c7h14ooh3-5o2
  wdot[85] -= q; // nc7ket35
  // d()/d[oh]
  dqdci = +k_f * sc[85];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[435] += dqdci; // dwdot[c7h14ooh3-5o2]/d[oh]
  J[441] -= dqdci; // dwdot[nc7ket35]/d[oh]
  // d()/d[nc7ket35]
  dqdci = +k_f * sc[4];
  J[7569] -= dqdci; // dwdot[oh]/d[nc7ket35]
  J[7644] += dqdci; // dwdot[c7h14ooh3-5o2]/d[nc7ket35]
  J[7650] -= dqdci; // dwdot[nc7ket35]/d[nc7ket35]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7911] += dqdT; // dwdot[c7h14ooh3-5o2]/dT
  J[7917] -= dqdT; // dwdot[nc7ket35]/dT

  // reaction 717: c7h14ooh4-2o2 => nc7ket42 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[80];
  k_f = 12500000000 * exp(-(8982.41748461425) * invT);
  dlnkfdT = (8982.41748461425) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[80] -= q; // c7h14ooh4-2o2
  wdot[86] += q; // nc7ket42
  // d()/d[c7h14ooh4-2o2]
  dqdci = +k_f;
  J[7124] += dqdci; // dwdot[oh]/d[c7h14ooh4-2o2]
  J[7200] -= dqdci; // dwdot[c7h14ooh4-2o2]/d[c7h14ooh4-2o2]
  J[7206] += dqdci; // dwdot[nc7ket42]/d[c7h14ooh4-2o2]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7912] -= dqdT; // dwdot[c7h14ooh4-2o2]/dT
  J[7918] += dqdT; // dwdot[nc7ket42]/dT

  // reaction 718: nc7ket42 + oh => c7h14ooh4-2o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[86];
  k_f = 0.0001615 * exp(1.83 * logT - (22242.1766285686) * invT);
  dlnkfdT = 1.83 * invT + (22242.1766285686) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[80] += q; // c7h14ooh4-2o2
  wdot[86] -= q; // nc7ket42
  // d()/d[oh]
  dqdci = +k_f * sc[86];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[436] += dqdci; // dwdot[c7h14ooh4-2o2]/d[oh]
  J[442] -= dqdci; // dwdot[nc7ket42]/d[oh]
  // d()/d[nc7ket42]
  dqdci = +k_f * sc[4];
  J[7658] -= dqdci; // dwdot[oh]/d[nc7ket42]
  J[7734] += dqdci; // dwdot[c7h14ooh4-2o2]/d[nc7ket42]
  J[7740] -= dqdci; // dwdot[nc7ket42]/d[nc7ket42]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7912] += dqdT; // dwdot[c7h14ooh4-2o2]/dT
  J[7918] -= dqdT; // dwdot[nc7ket42]/dT

  // reaction 719: nc7ket13 => ch2cho + nc4h9cho + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[83];
  k_f = 1.05e+16 * exp(-(20933.8132974763) * invT);
  dlnkfdT = (20933.8132974763) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[23] += q; // ch2cho
  wdot[56] += q; // nc4h9cho
  wdot[83] -= q; // nc7ket13
  // d()/d[nc7ket13]
  dqdci = +k_f;
  J[7391] += dqdci; // dwdot[oh]/d[nc7ket13]
  J[7410] += dqdci; // dwdot[ch2cho]/d[nc7ket13]
  J[7443] += dqdci; // dwdot[nc4h9cho]/d[nc7ket13]
  J[7470] -= dqdci; // dwdot[nc7ket13]/d[nc7ket13]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7855] += dqdT; // dwdot[ch2cho]/dT
  J[7888] += dqdT; // dwdot[nc4h9cho]/dT
  J[7915] -= dqdT; // dwdot[nc7ket13]/dT

  // reaction 720: nc7ket24 => ch3coch2 + nc3h7cho + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[84];
  k_f = 1.05e+16 * exp(-(20933.8132974763) * invT);
  dlnkfdT = (20933.8132974763) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[32] += q; // ch3coch2
  wdot[52] += q; // nc3h7cho
  wdot[84] -= q; // nc7ket24
  // d()/d[nc7ket24]
  dqdci = +k_f;
  J[7480] += dqdci; // dwdot[oh]/d[nc7ket24]
  J[7508] += dqdci; // dwdot[ch3coch2]/d[nc7ket24]
  J[7528] += dqdci; // dwdot[nc3h7cho]/d[nc7ket24]
  J[7560] -= dqdci; // dwdot[nc7ket24]/d[nc7ket24]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7864] += dqdT; // dwdot[ch3coch2]/dT
  J[7884] += dqdT; // dwdot[nc3h7cho]/dT
  J[7916] -= dqdT; // dwdot[nc7ket24]/dT

  // reaction 721: nc7ket35 => c2h5cho + c2h5coch2 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[85];
  k_f = 1.05e+16 * exp(-(20933.8132974763) * invT);
  dlnkfdT = (20933.8132974763) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[33] += q; // c2h5cho
  wdot[54] += q; // c2h5coch2
  wdot[85] -= q; // nc7ket35
  // d()/d[nc7ket35]
  dqdci = +k_f;
  J[7569] += dqdci; // dwdot[oh]/d[nc7ket35]
  J[7598] += dqdci; // dwdot[c2h5cho]/d[nc7ket35]
  J[7619] += dqdci; // dwdot[c2h5coch2]/d[nc7ket35]
  J[7650] -= dqdci; // dwdot[nc7ket35]/d[nc7ket35]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7865] += dqdT; // dwdot[c2h5cho]/dT
  J[7886] += dqdT; // dwdot[c2h5coch2]/dT
  J[7917] -= dqdT; // dwdot[nc7ket35]/dT

  // reaction 722: nc7ket42 => ch3cho + nc3h7coch2 + oh
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[86];
  k_f = 1.05e+16 * exp(-(20933.8132974763) * invT);
  dlnkfdT = (20933.8132974763) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // oh
  wdot[24] += q; // ch3cho
  wdot[55] += q; // nc3h7coch2
  wdot[86] -= q; // nc7ket42
  // d()/d[nc7ket42]
  dqdci = +k_f;
  J[7658] += dqdci; // dwdot[oh]/d[nc7ket42]
  J[7678] += dqdci; // dwdot[ch3cho]/d[nc7ket42]
  J[7709] += dqdci; // dwdot[nc3h7coch2]/d[nc7ket42]
  J[7740] -= dqdci; // dwdot[nc7ket42]/d[nc7ket42]
  // d()/dT
  J[7836] += dqdT; // dwdot[oh]/dT
  J[7856] += dqdT; // dwdot[ch3cho]/dT
  J[7887] += dqdT; // dwdot[nc3h7coch2]/dT
  J[7918] -= dqdT; // dwdot[nc7ket42]/dT

  // reaction 723: c7h14o2-4 + oh => c5h10-1 + ch3co + h2o
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[82];
  k_f = 2500000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[22] += q; // ch3co
  wdot[36] += q; // c5h10-1
  wdot[82] -= q; // c7h14o2-4
  // d()/d[oh]
  dqdci = +k_f * sc[82];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[378] += dqdci; // dwdot[ch3co]/d[oh]
  J[392] += dqdci; // dwdot[c5h10-1]/d[oh]
  J[438] -= dqdci; // dwdot[c7h14o2-4]/d[oh]
  // d()/d[c7h14o2-4]
  dqdci = +k_f * sc[4];
  J[7302] -= dqdci; // dwdot[oh]/d[c7h14o2-4]
  J[7303] += dqdci; // dwdot[h2o]/d[c7h14o2-4]
  J[7320] += dqdci; // dwdot[ch3co]/d[c7h14o2-4]
  J[7334] += dqdci; // dwdot[c5h10-1]/d[c7h14o2-4]
  J[7380] -= dqdci; // dwdot[c7h14o2-4]/d[c7h14o2-4]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7854] += dqdT; // dwdot[ch3co]/dT
  J[7868] += dqdT; // dwdot[c5h10-1]/dT
  J[7914] -= dqdT; // dwdot[c7h14o2-4]/dT

  // reaction 724: c7h14o1-3 + oh => c2h4 + h2o + nc4h9co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[81];
  k_f = 2500000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[16] += q; // c2h4
  wdot[57] += q; // nc4h9co
  wdot[81] -= q; // c7h14o1-3
  // d()/d[oh]
  dqdci = +k_f * sc[81];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[372] += dqdci; // dwdot[c2h4]/d[oh]
  J[413] += dqdci; // dwdot[nc4h9co]/d[oh]
  J[437] -= dqdci; // dwdot[c7h14o1-3]/d[oh]
  // d()/d[c7h14o1-3]
  dqdci = +k_f * sc[4];
  J[7213] -= dqdci; // dwdot[oh]/d[c7h14o1-3]
  J[7214] += dqdci; // dwdot[h2o]/d[c7h14o1-3]
  J[7225] += dqdci; // dwdot[c2h4]/d[c7h14o1-3]
  J[7266] += dqdci; // dwdot[nc4h9co]/d[c7h14o1-3]
  J[7290] -= dqdci; // dwdot[c7h14o1-3]/d[c7h14o1-3]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7889] += dqdT; // dwdot[nc4h9co]/dT
  J[7913] -= dqdT; // dwdot[c7h14o1-3]/dT

  // reaction 725: c7h14o2-4 + oh => c3h6 + h2o + nc3h7co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[82];
  k_f = 2500000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] -= q;  // oh
  wdot[5] += q;  // h2o
  wdot[26] += q; // c3h6
  wdot[53] += q; // nc3h7co
  wdot[82] -= q; // c7h14o2-4
  // d()/d[oh]
  dqdci = +k_f * sc[82];
  J[360] -= dqdci; // dwdot[oh]/d[oh]
  J[361] += dqdci; // dwdot[h2o]/d[oh]
  J[382] += dqdci; // dwdot[c3h6]/d[oh]
  J[409] += dqdci; // dwdot[nc3h7co]/d[oh]
  J[438] -= dqdci; // dwdot[c7h14o2-4]/d[oh]
  // d()/d[c7h14o2-4]
  dqdci = +k_f * sc[4];
  J[7302] -= dqdci; // dwdot[oh]/d[c7h14o2-4]
  J[7303] += dqdci; // dwdot[h2o]/d[c7h14o2-4]
  J[7324] += dqdci; // dwdot[c3h6]/d[c7h14o2-4]
  J[7351] += dqdci; // dwdot[nc3h7co]/d[c7h14o2-4]
  J[7380] -= dqdci; // dwdot[c7h14o2-4]/d[c7h14o2-4]
  // d()/dT
  J[7836] -= dqdT; // dwdot[oh]/dT
  J[7837] += dqdT; // dwdot[h2o]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7885] += dqdT; // dwdot[nc3h7co]/dT
  J[7914] -= dqdT; // dwdot[c7h14o2-4]/dT

  // reaction 726: c7h14o2-4 + ho2 => c5h10-1 + ch3co + h2o2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[82];
  k_f = 5000000 * exp(-(8906.93498474354) * invT);
  dlnkfdT = (8906.93498474354) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  wdot[22] += q; // ch3co
  wdot[36] += q; // c5h10-1
  wdot[82] -= q; // c7h14o2-4
  // d()/d[ho2]
  dqdci = +k_f * sc[82];
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[991] += dqdci;  // dwdot[h2o2]/d[ho2]
  J[1001] += dqdci; // dwdot[ch3co]/d[ho2]
  J[1015] += dqdci; // dwdot[c5h10-1]/d[ho2]
  J[1061] -= dqdci; // dwdot[c7h14o2-4]/d[ho2]
  // d()/d[c7h14o2-4]
  dqdci = +k_f * sc[11];
  J[7309] -= dqdci; // dwdot[ho2]/d[c7h14o2-4]
  J[7310] += dqdci; // dwdot[h2o2]/d[c7h14o2-4]
  J[7320] += dqdci; // dwdot[ch3co]/d[c7h14o2-4]
  J[7334] += dqdci; // dwdot[c5h10-1]/d[c7h14o2-4]
  J[7380] -= dqdci; // dwdot[c7h14o2-4]/d[c7h14o2-4]
  // d()/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT
  J[7854] += dqdT; // dwdot[ch3co]/dT
  J[7868] += dqdT; // dwdot[c5h10-1]/dT
  J[7914] -= dqdT; // dwdot[c7h14o2-4]/dT

  // reaction 727: c7h14o1-3 + ho2 => c2h4 + h2o2 + nc4h9co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[81];
  k_f = 5000000 * exp(-(8906.93498474354) * invT);
  dlnkfdT = (8906.93498474354) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  wdot[16] += q; // c2h4
  wdot[57] += q; // nc4h9co
  wdot[81] -= q; // c7h14o1-3
  // d()/d[ho2]
  dqdci = +k_f * sc[81];
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[991] += dqdci;  // dwdot[h2o2]/d[ho2]
  J[995] += dqdci;  // dwdot[c2h4]/d[ho2]
  J[1036] += dqdci; // dwdot[nc4h9co]/d[ho2]
  J[1060] -= dqdci; // dwdot[c7h14o1-3]/d[ho2]
  // d()/d[c7h14o1-3]
  dqdci = +k_f * sc[11];
  J[7220] -= dqdci; // dwdot[ho2]/d[c7h14o1-3]
  J[7221] += dqdci; // dwdot[h2o2]/d[c7h14o1-3]
  J[7225] += dqdci; // dwdot[c2h4]/d[c7h14o1-3]
  J[7266] += dqdci; // dwdot[nc4h9co]/d[c7h14o1-3]
  J[7290] -= dqdci; // dwdot[c7h14o1-3]/d[c7h14o1-3]
  // d()/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT
  J[7848] += dqdT; // dwdot[c2h4]/dT
  J[7889] += dqdT; // dwdot[nc4h9co]/dT
  J[7913] -= dqdT; // dwdot[c7h14o1-3]/dT

  // reaction 728: c7h14o2-4 + ho2 => c3h6 + h2o2 + nc3h7co
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[11] * sc[82];
  k_f = 5000000 * exp(-(8906.93498474354) * invT);
  dlnkfdT = (8906.93498474354) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] -= q; // ho2
  wdot[12] += q; // h2o2
  wdot[26] += q; // c3h6
  wdot[53] += q; // nc3h7co
  wdot[82] -= q; // c7h14o2-4
  // d()/d[ho2]
  dqdci = +k_f * sc[82];
  J[990] -= dqdci;  // dwdot[ho2]/d[ho2]
  J[991] += dqdci;  // dwdot[h2o2]/d[ho2]
  J[1005] += dqdci; // dwdot[c3h6]/d[ho2]
  J[1032] += dqdci; // dwdot[nc3h7co]/d[ho2]
  J[1061] -= dqdci; // dwdot[c7h14o2-4]/d[ho2]
  // d()/d[c7h14o2-4]
  dqdci = +k_f * sc[11];
  J[7309] -= dqdci; // dwdot[ho2]/d[c7h14o2-4]
  J[7310] += dqdci; // dwdot[h2o2]/d[c7h14o2-4]
  J[7324] += dqdci; // dwdot[c3h6]/d[c7h14o2-4]
  J[7351] += dqdci; // dwdot[nc3h7co]/d[c7h14o2-4]
  J[7380] -= dqdci; // dwdot[c7h14o2-4]/d[c7h14o2-4]
  // d()/dT
  J[7843] -= dqdT; // dwdot[ho2]/dT
  J[7844] += dqdT; // dwdot[h2o2]/dT
  J[7858] += dqdT; // dwdot[c3h6]/dT
  J[7885] += dqdT; // dwdot[nc3h7co]/dT
  J[7914] -= dqdT; // dwdot[c7h14o2-4]/dT

  amrex::Real c_R[88], dcRdT[88], e_RT[88];
  amrex::Real* eh_RT;
  if (consP == 1) {
    cp_R(c_R, T);
    dcvpRdT(dcRdT, T);
    eh_RT = &h_RT[0];
  } else {
    cv_R(c_R, T);
    dcvpRdT(dcRdT, T);
    speciesInternalEnergy(e_RT, T);
    eh_RT = &e_RT[0];
  }

  amrex::Real cmix = 0.0, ehmix = 0.0, dcmixdT = 0.0, dehmixdT = 0.0;
  for (int k = 0; k < 88; ++k) {
    cmix += c_R[k] * sc[k];
    dcmixdT += dcRdT[k] * sc[k];
    ehmix += eh_RT[k] * wdot[k];
    dehmixdT += invT * (c_R[k] - eh_RT[k]) * wdot[k] + eh_RT[k] * J[7832 + k];
  }

  amrex::Real cmixinv = 1.0 / cmix;
  amrex::Real tmp1 = ehmix * cmixinv;
  amrex::Real tmp3 = cmixinv * T;
  amrex::Real tmp2 = tmp1 * tmp3;
  amrex::Real dehmixdc;
  // dTdot/d[X]
  for (int k = 0; k < 88; ++k) {
    dehmixdc = 0.0;
    for (int m = 0; m < 88; ++m) {
      dehmixdc += eh_RT[m] * J[k * 89 + m];
    }
    J[k * 89 + 88] = tmp2 * c_R[k] - tmp3 * dehmixdc;
  }
  // dTdot/dT
  J[7920] = -tmp1 + tmp2 * dcmixdT - tmp3 * dehmixdT;
#else
  amrex::Abort();
#endif
}

// compute the reaction Jacobian
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
DWDOT(
  amrex::Real* J,
  const amrex::Real* sc,
  const amrex::Real* Tp,
  const int* consP)
{
  amrex::Real c[88];

  for (int k = 0; k < 88; k++) {
    c[k] = 1.e6 * sc[k];
  }

  aJacobian(J, c, *Tp, *consP);

  // dwdot[k]/dT
  // dTdot/d[X]
  for (int k = 0; k < 88; k++) {
    J[7832 + k] *= 1.e-6;
    J[k * 89 + 88] *= 1.e6;
  }
}

// Transport function declarations

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetLENIMC(int* LENIMC)
{
  *LENIMC = 354;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetLENRMC(int* LENRMC)
{
  *LENRMC = 150216;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetNO(int* NO)
{
  *NO = 4;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetKK(int* KK)
{
  *KK = 88;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetNLITE(int* NLITE)
{
  *NLITE = 2;
}

// Patm in ergs/cm3
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetPATM(amrex::Real* PATM)
{
  *PATM = 0.1013250000000000E+07;
}

// the molecular weights in g/mol
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetWT(amrex::Real* WT)
{
  WT[0] = 1.00800000E+00;
  WT[1] = 2.01600000E+00;
  WT[2] = 1.59990000E+01;
  WT[3] = 3.19980000E+01;
  WT[4] = 1.70070000E+01;
  WT[5] = 1.80150000E+01;
  WT[6] = 2.80100000E+01;
  WT[7] = 2.90180000E+01;
  WT[8] = 4.40090000E+01;
  WT[9] = 1.50350000E+01;
  WT[10] = 1.60430000E+01;
  WT[11] = 3.30060000E+01;
  WT[12] = 3.40140000E+01;
  WT[13] = 3.00260000E+01;
  WT[14] = 3.10340000E+01;
  WT[15] = 3.00700000E+01;
  WT[16] = 2.80540000E+01;
  WT[17] = 2.90620000E+01;
  WT[18] = 2.60380000E+01;
  WT[19] = 2.70460000E+01;
  WT[20] = 4.20370000E+01;
  WT[21] = 4.10290000E+01;
  WT[22] = 4.30450000E+01;
  WT[23] = 4.30450000E+01;
  WT[24] = 4.40530000E+01;
  WT[25] = 4.00650000E+01;
  WT[26] = 4.20810000E+01;
  WT[27] = 5.40920000E+01;
  WT[28] = 4.30890000E+01;
  WT[29] = 5.51000000E+01;
  WT[30] = 5.61080000E+01;
  WT[31] = 5.71160000E+01;
  WT[32] = 5.70720000E+01;
  WT[33] = 5.80800000E+01;
  WT[34] = 5.70720000E+01;
  WT[35] = 6.91270000E+01;
  WT[36] = 7.01350000E+01;
  WT[37] = 4.50610000E+01;
  WT[38] = 4.70330000E+01;
  WT[39] = 4.80410000E+01;
  WT[40] = 5.50560000E+01;
  WT[41] = 5.60640000E+01;
  WT[42] = 5.70720000E+01;
  WT[43] = 7.10990000E+01;
  WT[44] = 1.21112000E+02;
  WT[45] = 8.91140000E+01;
  WT[46] = 8.91140000E+01;
  WT[47] = 4.10730000E+01;
  WT[48] = 3.90570000E+01;
  WT[49] = 3.80490000E+01;
  WT[50] = 1.40270000E+01;
  WT[51] = 1.04105000E+02;
  WT[52] = 7.21070000E+01;
  WT[53] = 7.10990000E+01;
  WT[54] = 7.10990000E+01;
  WT[55] = 8.51260000E+01;
  WT[56] = 8.61340000E+01;
  WT[57] = 8.51260000E+01;
  WT[58] = 1.00205000E+02;
  WT[59] = 9.91970000E+01;
  WT[60] = 9.91970000E+01;
  WT[61] = 9.91970000E+01;
  WT[62] = 9.91970000E+01;
  WT[63] = 9.81890000E+01;
  WT[64] = 9.81890000E+01;
  WT[65] = 1.31195000E+02;
  WT[66] = 1.31195000E+02;
  WT[67] = 1.31195000E+02;
  WT[68] = 1.31195000E+02;
  WT[69] = 1.31195000E+02;
  WT[70] = 1.31195000E+02;
  WT[71] = 1.31195000E+02;
  WT[72] = 1.31195000E+02;
  WT[73] = 1.31195000E+02;
  WT[74] = 1.31195000E+02;
  WT[75] = 1.31195000E+02;
  WT[76] = 1.31195000E+02;
  WT[77] = 1.63193000E+02;
  WT[78] = 1.63193000E+02;
  WT[79] = 1.63193000E+02;
  WT[80] = 1.63193000E+02;
  WT[81] = 1.14188000E+02;
  WT[82] = 1.14188000E+02;
  WT[83] = 1.46186000E+02;
  WT[84] = 1.46186000E+02;
  WT[85] = 1.46186000E+02;
  WT[86] = 1.46186000E+02;
  WT[87] = 2.80140000E+01;
}

// the lennard-jones potential well depth eps/kb in K
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetEPS(amrex::Real* EPS)
{
  EPS[0] = 1.45000000E+02;
  EPS[1] = 3.80000000E+01;
  EPS[2] = 8.00000000E+01;
  EPS[3] = 1.07400000E+02;
  EPS[4] = 8.00000000E+01;
  EPS[5] = 5.72400000E+02;
  EPS[6] = 9.81000000E+01;
  EPS[7] = 4.98000000E+02;
  EPS[8] = 2.44000000E+02;
  EPS[9] = 1.44000000E+02;
  EPS[10] = 1.41400000E+02;
  EPS[11] = 1.07400000E+02;
  EPS[12] = 1.07400000E+02;
  EPS[13] = 4.98000000E+02;
  EPS[14] = 4.17000000E+02;
  EPS[15] = 2.47500000E+02;
  EPS[16] = 2.38400000E+02;
  EPS[17] = 2.47500000E+02;
  EPS[18] = 2.65300000E+02;
  EPS[19] = 2.65300000E+02;
  EPS[20] = 4.36000000E+02;
  EPS[21] = 1.50000000E+02;
  EPS[22] = 4.36000000E+02;
  EPS[23] = 4.36000000E+02;
  EPS[24] = 4.36000000E+02;
  EPS[25] = 3.24800000E+02;
  EPS[26] = 3.07800000E+02;
  EPS[27] = 3.57000000E+02;
  EPS[28] = 3.03400000E+02;
  EPS[29] = 3.55000000E+02;
  EPS[30] = 3.55000000E+02;
  EPS[31] = 3.52000000E+02;
  EPS[32] = 4.35500000E+02;
  EPS[33] = 4.35200000E+02;
  EPS[34] = 4.24600000E+02;
  EPS[35] = 3.96800000E+02;
  EPS[36] = 3.86200000E+02;
  EPS[37] = 4.70600000E+02;
  EPS[38] = 4.81800000E+02;
  EPS[39] = 4.81800000E+02;
  EPS[40] = 4.43200000E+02;
  EPS[41] = 4.28800000E+02;
  EPS[42] = 4.11000000E+02;
  EPS[43] = 4.96000000E+02;
  EPS[44] = 4.96000000E+02;
  EPS[45] = 4.96000000E+02;
  EPS[46] = 4.96000000E+02;
  EPS[47] = 3.16000000E+02;
  EPS[48] = 3.24800000E+02;
  EPS[49] = 2.09000000E+02;
  EPS[50] = 1.44000000E+02;
  EPS[51] = 4.76000000E+02;
  EPS[52] = 4.64200000E+02;
  EPS[53] = 4.64200000E+02;
  EPS[54] = 4.54000000E+02;
  EPS[55] = 4.89084000E+02;
  EPS[56] = 4.76000000E+02;
  EPS[57] = 4.76000000E+02;
  EPS[58] = 4.59600000E+02;
  EPS[59] = 4.59600000E+02;
  EPS[60] = 4.59600000E+02;
  EPS[61] = 4.59600000E+02;
  EPS[62] = 4.59600000E+02;
  EPS[63] = 4.57800000E+02;
  EPS[64] = 4.57800000E+02;
  EPS[65] = 5.61000000E+02;
  EPS[66] = 5.61000000E+02;
  EPS[67] = 5.61000000E+02;
  EPS[68] = 5.61000000E+02;
  EPS[69] = 5.61000000E+02;
  EPS[70] = 5.61000000E+02;
  EPS[71] = 5.61000000E+02;
  EPS[72] = 5.61000000E+02;
  EPS[73] = 5.61000000E+02;
  EPS[74] = 5.61000000E+02;
  EPS[75] = 5.61000000E+02;
  EPS[76] = 5.61000000E+02;
  EPS[77] = 6.00600000E+02;
  EPS[78] = 6.00600000E+02;
  EPS[79] = 6.00600000E+02;
  EPS[80] = 6.00600000E+02;
  EPS[81] = 5.11500000E+02;
  EPS[82] = 5.11500000E+02;
  EPS[83] = 5.81300000E+02;
  EPS[84] = 5.81300000E+02;
  EPS[85] = 5.81300000E+02;
  EPS[86] = 5.81300000E+02;
  EPS[87] = 9.75300000E+01;
}

// the lennard-jones collision diameter in Angstroms
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetSIG(amrex::Real* SIG)
{
  SIG[0] = 2.05000000E+00;
  SIG[1] = 2.92000000E+00;
  SIG[2] = 2.75000000E+00;
  SIG[3] = 3.45800000E+00;
  SIG[4] = 2.75000000E+00;
  SIG[5] = 2.60500000E+00;
  SIG[6] = 3.65000000E+00;
  SIG[7] = 3.59000000E+00;
  SIG[8] = 3.76300000E+00;
  SIG[9] = 3.80000000E+00;
  SIG[10] = 3.74600000E+00;
  SIG[11] = 3.45800000E+00;
  SIG[12] = 3.45800000E+00;
  SIG[13] = 3.59000000E+00;
  SIG[14] = 3.69000000E+00;
  SIG[15] = 4.35000000E+00;
  SIG[16] = 3.49600000E+00;
  SIG[17] = 4.35000000E+00;
  SIG[18] = 3.72100000E+00;
  SIG[19] = 3.72100000E+00;
  SIG[20] = 3.97000000E+00;
  SIG[21] = 2.50000000E+00;
  SIG[22] = 3.97000000E+00;
  SIG[23] = 3.97000000E+00;
  SIG[24] = 3.97000000E+00;
  SIG[25] = 4.29000000E+00;
  SIG[26] = 4.14000000E+00;
  SIG[27] = 4.72000000E+00;
  SIG[28] = 4.81000000E+00;
  SIG[29] = 4.65000000E+00;
  SIG[30] = 4.65000000E+00;
  SIG[31] = 5.24000000E+00;
  SIG[32] = 4.86000000E+00;
  SIG[33] = 4.66200000E+00;
  SIG[34] = 4.82000000E+00;
  SIG[35] = 5.45800000E+00;
  SIG[36] = 5.48900000E+00;
  SIG[37] = 4.41000000E+00;
  SIG[38] = 3.62600000E+00;
  SIG[39] = 3.62600000E+00;
  SIG[40] = 4.12000000E+00;
  SIG[41] = 4.95800000E+00;
  SIG[42] = 4.82000000E+00;
  SIG[43] = 5.20000000E+00;
  SIG[44] = 5.20000000E+00;
  SIG[45] = 5.20000000E+00;
  SIG[46] = 5.20000000E+00;
  SIG[47] = 4.22000000E+00;
  SIG[48] = 4.29000000E+00;
  SIG[49] = 4.10000000E+00;
  SIG[50] = 3.80000000E+00;
  SIG[51] = 5.77800000E+00;
  SIG[52] = 5.00900000E+00;
  SIG[53] = 5.00900000E+00;
  SIG[54] = 5.41300000E+00;
  SIG[55] = 5.34800000E+00;
  SIG[56] = 5.77800000E+00;
  SIG[57] = 5.77800000E+00;
  SIG[58] = 6.25300000E+00;
  SIG[59] = 6.25300000E+00;
  SIG[60] = 6.25300000E+00;
  SIG[61] = 6.25300000E+00;
  SIG[62] = 6.25300000E+00;
  SIG[63] = 6.17300000E+00;
  SIG[64] = 6.17300000E+00;
  SIG[65] = 6.31700000E+00;
  SIG[66] = 6.31700000E+00;
  SIG[67] = 6.31700000E+00;
  SIG[68] = 6.31700000E+00;
  SIG[69] = 6.31700000E+00;
  SIG[70] = 6.31700000E+00;
  SIG[71] = 6.31700000E+00;
  SIG[72] = 6.31700000E+00;
  SIG[73] = 6.31700000E+00;
  SIG[74] = 6.31700000E+00;
  SIG[75] = 6.31700000E+00;
  SIG[76] = 6.31700000E+00;
  SIG[77] = 7.22900000E+00;
  SIG[78] = 7.22900000E+00;
  SIG[79] = 7.22900000E+00;
  SIG[80] = 7.22900000E+00;
  SIG[81] = 6.29700000E+00;
  SIG[82] = 6.29700000E+00;
  SIG[83] = 6.50600000E+00;
  SIG[84] = 6.50600000E+00;
  SIG[85] = 6.50600000E+00;
  SIG[86] = 6.50600000E+00;
  SIG[87] = 3.62100000E+00;
}

// the dipole moment in Debye
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetDIP(amrex::Real* DIP)
{
  DIP[0] = 0.00000000E+00;
  DIP[1] = 0.00000000E+00;
  DIP[2] = 0.00000000E+00;
  DIP[3] = 0.00000000E+00;
  DIP[4] = 0.00000000E+00;
  DIP[5] = 1.84400000E+00;
  DIP[6] = 0.00000000E+00;
  DIP[7] = 0.00000000E+00;
  DIP[8] = 0.00000000E+00;
  DIP[9] = 0.00000000E+00;
  DIP[10] = 0.00000000E+00;
  DIP[11] = 0.00000000E+00;
  DIP[12] = 0.00000000E+00;
  DIP[13] = 0.00000000E+00;
  DIP[14] = 1.70000000E+00;
  DIP[15] = 0.00000000E+00;
  DIP[16] = 0.00000000E+00;
  DIP[17] = 0.00000000E+00;
  DIP[18] = 0.00000000E+00;
  DIP[19] = 0.00000000E+00;
  DIP[20] = 0.00000000E+00;
  DIP[21] = 0.00000000E+00;
  DIP[22] = 0.00000000E+00;
  DIP[23] = 0.00000000E+00;
  DIP[24] = 0.00000000E+00;
  DIP[25] = 0.00000000E+00;
  DIP[26] = 0.00000000E+00;
  DIP[27] = 0.00000000E+00;
  DIP[28] = 0.00000000E+00;
  DIP[29] = 0.00000000E+00;
  DIP[30] = 0.00000000E+00;
  DIP[31] = 0.00000000E+00;
  DIP[32] = 0.00000000E+00;
  DIP[33] = 2.70000000E+00;
  DIP[34] = 0.00000000E+00;
  DIP[35] = 0.00000000E+00;
  DIP[36] = 4.00000000E-01;
  DIP[37] = 0.00000000E+00;
  DIP[38] = 0.00000000E+00;
  DIP[39] = 0.00000000E+00;
  DIP[40] = 0.00000000E+00;
  DIP[41] = 2.90000000E+00;
  DIP[42] = 0.00000000E+00;
  DIP[43] = 0.00000000E+00;
  DIP[44] = 0.00000000E+00;
  DIP[45] = 0.00000000E+00;
  DIP[46] = 0.00000000E+00;
  DIP[47] = 0.00000000E+00;
  DIP[48] = 0.00000000E+00;
  DIP[49] = 0.00000000E+00;
  DIP[50] = 0.00000000E+00;
  DIP[51] = 2.60000000E+00;
  DIP[52] = 2.60000000E+00;
  DIP[53] = 2.60000000E+00;
  DIP[54] = 3.30000000E+00;
  DIP[55] = 0.00000000E+00;
  DIP[56] = 2.60000000E+00;
  DIP[57] = 2.60000000E+00;
  DIP[58] = 0.00000000E+00;
  DIP[59] = 0.00000000E+00;
  DIP[60] = 0.00000000E+00;
  DIP[61] = 0.00000000E+00;
  DIP[62] = 0.00000000E+00;
  DIP[63] = 3.00000000E-01;
  DIP[64] = 3.00000000E-01;
  DIP[65] = 1.70000000E+00;
  DIP[66] = 1.70000000E+00;
  DIP[67] = 1.70000000E+00;
  DIP[68] = 1.70000000E+00;
  DIP[69] = 1.70000000E+00;
  DIP[70] = 1.70000000E+00;
  DIP[71] = 1.70000000E+00;
  DIP[72] = 1.70000000E+00;
  DIP[73] = 1.70000000E+00;
  DIP[74] = 1.70000000E+00;
  DIP[75] = 1.70000000E+00;
  DIP[76] = 1.70000000E+00;
  DIP[77] = 1.80000000E+00;
  DIP[78] = 1.80000000E+00;
  DIP[79] = 1.80000000E+00;
  DIP[80] = 1.80000000E+00;
  DIP[81] = 0.00000000E+00;
  DIP[82] = 0.00000000E+00;
  DIP[83] = 2.00000000E+00;
  DIP[84] = 2.00000000E+00;
  DIP[85] = 2.00000000E+00;
  DIP[86] = 2.00000000E+00;
  DIP[87] = 0.00000000E+00;
}

// the polarizability in cubic Angstroms
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetPOL(amrex::Real* POL)
{
  POL[0] = 0.00000000E+00;
  POL[1] = 7.90000000E-01;
  POL[2] = 0.00000000E+00;
  POL[3] = 1.60000000E+00;
  POL[4] = 0.00000000E+00;
  POL[5] = 0.00000000E+00;
  POL[6] = 1.95000000E+00;
  POL[7] = 0.00000000E+00;
  POL[8] = 2.65000000E+00;
  POL[9] = 0.00000000E+00;
  POL[10] = 2.60000000E+00;
  POL[11] = 0.00000000E+00;
  POL[12] = 0.00000000E+00;
  POL[13] = 0.00000000E+00;
  POL[14] = 0.00000000E+00;
  POL[15] = 0.00000000E+00;
  POL[16] = 0.00000000E+00;
  POL[17] = 0.00000000E+00;
  POL[18] = 0.00000000E+00;
  POL[19] = 0.00000000E+00;
  POL[20] = 0.00000000E+00;
  POL[21] = 0.00000000E+00;
  POL[22] = 0.00000000E+00;
  POL[23] = 0.00000000E+00;
  POL[24] = 0.00000000E+00;
  POL[25] = 0.00000000E+00;
  POL[26] = 0.00000000E+00;
  POL[27] = 0.00000000E+00;
  POL[28] = 0.00000000E+00;
  POL[29] = 0.00000000E+00;
  POL[30] = 0.00000000E+00;
  POL[31] = 0.00000000E+00;
  POL[32] = 0.00000000E+00;
  POL[33] = 0.00000000E+00;
  POL[34] = 0.00000000E+00;
  POL[35] = 0.00000000E+00;
  POL[36] = 0.00000000E+00;
  POL[37] = 0.00000000E+00;
  POL[38] = 0.00000000E+00;
  POL[39] = 0.00000000E+00;
  POL[40] = 0.00000000E+00;
  POL[41] = 0.00000000E+00;
  POL[42] = 0.00000000E+00;
  POL[43] = 0.00000000E+00;
  POL[44] = 0.00000000E+00;
  POL[45] = 0.00000000E+00;
  POL[46] = 0.00000000E+00;
  POL[47] = 0.00000000E+00;
  POL[48] = 0.00000000E+00;
  POL[49] = 0.00000000E+00;
  POL[50] = 0.00000000E+00;
  POL[51] = 0.00000000E+00;
  POL[52] = 0.00000000E+00;
  POL[53] = 0.00000000E+00;
  POL[54] = 0.00000000E+00;
  POL[55] = 0.00000000E+00;
  POL[56] = 0.00000000E+00;
  POL[57] = 0.00000000E+00;
  POL[58] = 0.00000000E+00;
  POL[59] = 0.00000000E+00;
  POL[60] = 0.00000000E+00;
  POL[61] = 0.00000000E+00;
  POL[62] = 0.00000000E+00;
  POL[63] = 0.00000000E+00;
  POL[64] = 0.00000000E+00;
  POL[65] = 0.00000000E+00;
  POL[66] = 0.00000000E+00;
  POL[67] = 0.00000000E+00;
  POL[68] = 0.00000000E+00;
  POL[69] = 0.00000000E+00;
  POL[70] = 0.00000000E+00;
  POL[71] = 0.00000000E+00;
  POL[72] = 0.00000000E+00;
  POL[73] = 0.00000000E+00;
  POL[74] = 0.00000000E+00;
  POL[75] = 0.00000000E+00;
  POL[76] = 0.00000000E+00;
  POL[77] = 0.00000000E+00;
  POL[78] = 0.00000000E+00;
  POL[79] = 0.00000000E+00;
  POL[80] = 0.00000000E+00;
  POL[81] = 0.00000000E+00;
  POL[82] = 0.00000000E+00;
  POL[83] = 0.00000000E+00;
  POL[84] = 0.00000000E+00;
  POL[85] = 0.00000000E+00;
  POL[86] = 0.00000000E+00;
  POL[87] = 1.76000000E+00;
}

// the rotational relaxation collision number at 298 K
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetZROT(amrex::Real* ZROT)
{
  ZROT[0] = 0.00000000E+00;
  ZROT[1] = 2.80000000E+02;
  ZROT[2] = 0.00000000E+00;
  ZROT[3] = 3.80000000E+00;
  ZROT[4] = 0.00000000E+00;
  ZROT[5] = 4.00000000E+00;
  ZROT[6] = 1.80000000E+00;
  ZROT[7] = 0.00000000E+00;
  ZROT[8] = 2.10000000E+00;
  ZROT[9] = 0.00000000E+00;
  ZROT[10] = 1.30000000E+01;
  ZROT[11] = 1.00000000E+00;
  ZROT[12] = 3.80000000E+00;
  ZROT[13] = 2.00000000E+00;
  ZROT[14] = 2.00000000E+00;
  ZROT[15] = 1.50000000E+00;
  ZROT[16] = 1.50000000E+00;
  ZROT[17] = 1.50000000E+00;
  ZROT[18] = 2.50000000E+00;
  ZROT[19] = 1.00000000E+00;
  ZROT[20] = 2.00000000E+00;
  ZROT[21] = 1.00000000E+00;
  ZROT[22] = 2.00000000E+00;
  ZROT[23] = 2.00000000E+00;
  ZROT[24] = 2.00000000E+00;
  ZROT[25] = 1.00000000E+00;
  ZROT[26] = 1.00000000E+00;
  ZROT[27] = 1.00000000E+00;
  ZROT[28] = 1.00000000E+00;
  ZROT[29] = 1.00000000E+00;
  ZROT[30] = 1.00000000E+00;
  ZROT[31] = 1.00000000E+00;
  ZROT[32] = 1.00000000E+00;
  ZROT[33] = 1.00000000E+00;
  ZROT[34] = 1.00000000E+00;
  ZROT[35] = 1.00000000E+00;
  ZROT[36] = 1.00000000E+00;
  ZROT[37] = 1.50000000E+00;
  ZROT[38] = 1.00000000E+00;
  ZROT[39] = 1.00000000E+00;
  ZROT[40] = 1.00000000E+00;
  ZROT[41] = 1.00000000E+00;
  ZROT[42] = 1.00000000E+00;
  ZROT[43] = 1.00000000E+00;
  ZROT[44] = 1.00000000E+00;
  ZROT[45] = 1.00000000E+00;
  ZROT[46] = 1.00000000E+00;
  ZROT[47] = 1.00000000E+00;
  ZROT[48] = 1.00000000E+00;
  ZROT[49] = 1.00000000E+00;
  ZROT[50] = 0.00000000E+00;
  ZROT[51] = 1.00000000E+00;
  ZROT[52] = 1.00000000E+00;
  ZROT[53] = 1.00000000E+00;
  ZROT[54] = 1.00000000E+00;
  ZROT[55] = 0.00000000E+00;
  ZROT[56] = 1.00000000E+00;
  ZROT[57] = 1.00000000E+00;
  ZROT[58] = 1.00000000E+00;
  ZROT[59] = 1.00000000E+00;
  ZROT[60] = 1.00000000E+00;
  ZROT[61] = 1.00000000E+00;
  ZROT[62] = 1.00000000E+00;
  ZROT[63] = 1.00000000E+00;
  ZROT[64] = 1.00000000E+00;
  ZROT[65] = 1.00000000E+00;
  ZROT[66] = 1.00000000E+00;
  ZROT[67] = 1.00000000E+00;
  ZROT[68] = 1.00000000E+00;
  ZROT[69] = 1.00000000E+00;
  ZROT[70] = 1.00000000E+00;
  ZROT[71] = 1.00000000E+00;
  ZROT[72] = 1.00000000E+00;
  ZROT[73] = 1.00000000E+00;
  ZROT[74] = 1.00000000E+00;
  ZROT[75] = 1.00000000E+00;
  ZROT[76] = 1.00000000E+00;
  ZROT[77] = 1.00000000E+00;
  ZROT[78] = 1.00000000E+00;
  ZROT[79] = 1.00000000E+00;
  ZROT[80] = 1.00000000E+00;
  ZROT[81] = 1.00000000E+00;
  ZROT[82] = 1.00000000E+00;
  ZROT[83] = 1.00000000E+00;
  ZROT[84] = 1.00000000E+00;
  ZROT[85] = 1.00000000E+00;
  ZROT[86] = 1.00000000E+00;
  ZROT[87] = 4.00000000E+00;
}

// 0: monoatomic, 1: linear, 2: nonlinear
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetNLIN(int* NLIN)
{
  NLIN[0] = 0;
  NLIN[1] = 1;
  NLIN[2] = 0;
  NLIN[3] = 1;
  NLIN[4] = 1;
  NLIN[5] = 2;
  NLIN[6] = 1;
  NLIN[7] = 2;
  NLIN[8] = 1;
  NLIN[9] = 1;
  NLIN[10] = 2;
  NLIN[11] = 2;
  NLIN[12] = 2;
  NLIN[13] = 2;
  NLIN[14] = 2;
  NLIN[15] = 2;
  NLIN[16] = 2;
  NLIN[17] = 2;
  NLIN[18] = 1;
  NLIN[19] = 2;
  NLIN[20] = 2;
  NLIN[21] = 2;
  NLIN[22] = 2;
  NLIN[23] = 2;
  NLIN[24] = 2;
  NLIN[25] = 1;
  NLIN[26] = 2;
  NLIN[27] = 2;
  NLIN[28] = 2;
  NLIN[29] = 2;
  NLIN[30] = 2;
  NLIN[31] = 2;
  NLIN[32] = 2;
  NLIN[33] = 2;
  NLIN[34] = 2;
  NLIN[35] = 2;
  NLIN[36] = 2;
  NLIN[37] = 2;
  NLIN[38] = 2;
  NLIN[39] = 2;
  NLIN[40] = 2;
  NLIN[41] = 2;
  NLIN[42] = 2;
  NLIN[43] = 2;
  NLIN[44] = 2;
  NLIN[45] = 2;
  NLIN[46] = 2;
  NLIN[47] = 2;
  NLIN[48] = 1;
  NLIN[49] = 2;
  NLIN[50] = 1;
  NLIN[51] = 2;
  NLIN[52] = 2;
  NLIN[53] = 2;
  NLIN[54] = 2;
  NLIN[55] = 2;
  NLIN[56] = 2;
  NLIN[57] = 2;
  NLIN[58] = 2;
  NLIN[59] = 2;
  NLIN[60] = 2;
  NLIN[61] = 2;
  NLIN[62] = 2;
  NLIN[63] = 2;
  NLIN[64] = 2;
  NLIN[65] = 2;
  NLIN[66] = 2;
  NLIN[67] = 2;
  NLIN[68] = 2;
  NLIN[69] = 2;
  NLIN[70] = 2;
  NLIN[71] = 2;
  NLIN[72] = 2;
  NLIN[73] = 2;
  NLIN[74] = 2;
  NLIN[75] = 2;
  NLIN[76] = 2;
  NLIN[77] = 2;
  NLIN[78] = 2;
  NLIN[79] = 2;
  NLIN[80] = 2;
  NLIN[81] = 2;
  NLIN[82] = 2;
  NLIN[83] = 2;
  NLIN[84] = 2;
  NLIN[85] = 2;
  NLIN[86] = 2;
  NLIN[87] = 1;
}

// Poly fits for the viscosities, dim NO*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFETA(amrex::Real* COFETA)
{
  COFETA[0] = -2.04078253E+01;
  COFETA[1] = 3.65436395E+00;
  COFETA[2] = -3.98339635E-01;
  COFETA[3] = 1.75883009E-02;
  COFETA[4] = -1.38347555E+01;
  COFETA[5] = 1.00106621E+00;
  COFETA[6] = -4.98105694E-02;
  COFETA[7] = 2.31450475E-03;
  COFETA[8] = -1.50926370E+01;
  COFETA[9] = 1.92606504E+00;
  COFETA[10] = -1.73487476E-01;
  COFETA[11] = 7.82572931E-03;
  COFETA[12] = -1.71618439E+01;
  COFETA[13] = 2.68036374E+00;
  COFETA[14] = -2.72570227E-01;
  COFETA[15] = 1.21650964E-02;
  COFETA[16] = -1.50620876E+01;
  COFETA[17] = 1.92606504E+00;
  COFETA[18] = -1.73487476E-01;
  COFETA[19] = 7.82572931E-03;
  COFETA[20] = -1.05420930E+01;
  COFETA[21] = -1.37777266E+00;
  COFETA[22] = 4.20502561E-01;
  COFETA[23] = -2.40627344E-02;
  COFETA[24] = -1.66188439E+01;
  COFETA[25] = 2.40307799E+00;
  COFETA[26] = -2.36167638E-01;
  COFETA[27] = 1.05714061E-02;
  COFETA[28] = -1.98501400E+01;
  COFETA[29] = 2.69480162E+00;
  COFETA[30] = -1.65880845E-01;
  COFETA[31] = 3.14504769E-03;
  COFETA[32] = -2.40015087E+01;
  COFETA[33] = 5.14359547E+00;
  COFETA[34] = -5.74269731E-01;
  COFETA[35] = 2.44937679E-02;
  COFETA[36] = -2.02316522E+01;
  COFETA[37] = 3.63241793E+00;
  COFETA[38] = -3.95581049E-01;
  COFETA[39] = 1.74725495E-02;
  COFETA[40] = -2.00094678E+01;
  COFETA[41] = 3.57220167E+00;
  COFETA[42] = -3.87936446E-01;
  COFETA[43] = 1.71483254E-02;
  COFETA[44] = -1.71463359E+01;
  COFETA[45] = 2.68036374E+00;
  COFETA[46] = -2.72570227E-01;
  COFETA[47] = 1.21650964E-02;
  COFETA[48] = -1.71312945E+01;
  COFETA[49] = 2.68036374E+00;
  COFETA[50] = -2.72570227E-01;
  COFETA[51] = 1.21650964E-02;
  COFETA[52] = -1.98330663E+01;
  COFETA[53] = 2.69480162E+00;
  COFETA[54] = -1.65880845E-01;
  COFETA[55] = 3.14504769E-03;
  COFETA[56] = -1.99945964E+01;
  COFETA[57] = 2.86923161E+00;
  COFETA[58] = -2.03325438E-01;
  COFETA[59] = 5.39055928E-03;
  COFETA[60] = -2.45432185E+01;
  COFETA[61] = 5.15878990E+00;
  COFETA[62] = -5.75274341E-01;
  COFETA[63] = 2.44975136E-02;
  COFETA[64] = -2.39690509E+01;
  COFETA[65] = 5.11436059E+00;
  COFETA[66] = -5.71999954E-01;
  COFETA[67] = 2.44581334E-02;
  COFETA[68] = -2.45602668E+01;
  COFETA[69] = 5.15878990E+00;
  COFETA[70] = -5.75274341E-01;
  COFETA[71] = 2.44975136E-02;
  COFETA[72] = -2.47697907E+01;
  COFETA[73] = 5.30039568E+00;
  COFETA[74] = -5.89273639E-01;
  COFETA[75] = 2.49261407E-02;
  COFETA[76] = -2.47507996E+01;
  COFETA[77] = 5.30039568E+00;
  COFETA[78] = -5.89273639E-01;
  COFETA[79] = 2.49261407E-02;
  COFETA[80] = -2.23395728E+01;
  COFETA[81] = 3.86433912E+00;
  COFETA[82] = -3.41553983E-01;
  COFETA[83] = 1.17083447E-02;
  COFETA[84] = -1.92183918E+01;
  COFETA[85] = 3.75164499E+00;
  COFETA[86] = -4.10390993E-01;
  COFETA[87] = 1.80861665E-02;
  COFETA[88] = -2.23277248E+01;
  COFETA[89] = 3.86433912E+00;
  COFETA[90] = -3.41553983E-01;
  COFETA[91] = 1.17083447E-02;
  COFETA[92] = -2.23277248E+01;
  COFETA[93] = 3.86433912E+00;
  COFETA[94] = -3.41553983E-01;
  COFETA[95] = 1.17083447E-02;
  COFETA[96] = -2.23161511E+01;
  COFETA[97] = 3.86433912E+00;
  COFETA[98] = -3.41553983E-01;
  COFETA[99] = 1.17083447E-02;
  COFETA[100] = -2.50200029E+01;
  COFETA[101] = 5.20184077E+00;
  COFETA[102] = -5.57265947E-01;
  COFETA[103] = 2.27565676E-02;
  COFETA[104] = -2.49727930E+01;
  COFETA[105] = 5.27067543E+00;
  COFETA[106] = -5.71909526E-01;
  COFETA[107] = 2.36230940E-02;
  COFETA[108] = -2.46654753E+01;
  COFETA[109] = 4.94595777E+00;
  COFETA[110] = -5.12278955E-01;
  COFETA[111] = 2.03286378E-02;
  COFETA[112] = -2.52463026E+01;
  COFETA[113] = 5.27749097E+00;
  COFETA[114] = -5.74219215E-01;
  COFETA[115] = 2.37811608E-02;
  COFETA[116] = -2.46566857E+01;
  COFETA[117] = 4.96413364E+00;
  COFETA[118] = -5.15375011E-01;
  COFETA[119] = 2.04926972E-02;
  COFETA[120] = -2.46476213E+01;
  COFETA[121] = 4.96413364E+00;
  COFETA[122] = -5.15375011E-01;
  COFETA[123] = 2.04926972E-02;
  COFETA[124] = -2.49295299E+01;
  COFETA[125] = 4.99407558E+00;
  COFETA[126] = -5.20389056E-01;
  COFETA[127] = 2.07557283E-02;
  COFETA[128] = -2.26083146E+01;
  COFETA[129] = 3.87265859E+00;
  COFETA[130] = -3.42827019E-01;
  COFETA[131] = 1.17712376E-02;
  COFETA[132] = -1.87102926E+01;
  COFETA[133] = 2.19584533E+00;
  COFETA[134] = -1.03152713E-01;
  COFETA[135] = 5.59848279E-04;
  COFETA[136] = -2.29493554E+01;
  COFETA[137] = 4.04788463E+00;
  COFETA[138] = -3.69734777E-01;
  COFETA[139] = 1.31039012E-02;
  COFETA[140] = -2.39731930E+01;
  COFETA[141] = 4.48124637E+00;
  COFETA[142] = -4.36934973E-01;
  COFETA[143] = 1.64568564E-02;
  COFETA[144] = -2.42040045E+01;
  COFETA[145] = 4.60377391E+00;
  COFETA[146] = -4.56799057E-01;
  COFETA[147] = 1.74771832E-02;
  COFETA[148] = -2.12500789E+01;
  COFETA[149] = 3.25726898E+00;
  COFETA[150] = -2.49519605E-01;
  COFETA[151] = 7.19215196E-03;
  COFETA[152] = -2.03725587E+01;
  COFETA[153] = 3.03946431E+00;
  COFETA[154] = -2.16994867E-01;
  COFETA[155] = 5.61394012E-03;
  COFETA[156] = -2.03619561E+01;
  COFETA[157] = 3.03946431E+00;
  COFETA[158] = -2.16994867E-01;
  COFETA[159] = 5.61394012E-03;
  COFETA[160] = -2.20273461E+01;
  COFETA[161] = 3.74231730E+00;
  COFETA[162] = -3.22923254E-01;
  COFETA[163] = 1.07891943E-02;
  COFETA[164] = -1.92053423E+01;
  COFETA[165] = 2.36233582E+00;
  COFETA[166] = -1.27934312E-01;
  COFETA[167] = 1.75444169E-03;
  COFETA[168] = -2.34114274E+01;
  COFETA[169] = 4.27461263E+00;
  COFETA[170] = -4.04617202E-01;
  COFETA[171] = 1.48351999E-02;
  COFETA[172] = -2.02354429E+01;
  COFETA[173] = 2.73742901E+00;
  COFETA[174] = -1.72182607E-01;
  COFETA[175] = 3.44858406E-03;
  COFETA[176] = -1.99691216E+01;
  COFETA[177] = 2.73742901E+00;
  COFETA[178] = -1.72182607E-01;
  COFETA[179] = 3.44858406E-03;
  COFETA[180] = -2.01225213E+01;
  COFETA[181] = 2.73742901E+00;
  COFETA[182] = -1.72182607E-01;
  COFETA[183] = 3.44858406E-03;
  COFETA[184] = -2.01225213E+01;
  COFETA[185] = 2.73742901E+00;
  COFETA[186] = -1.72182607E-01;
  COFETA[187] = 3.44858406E-03;
  COFETA[188] = -2.50402273E+01;
  COFETA[189] = 5.25451220E+00;
  COFETA[190] = -5.67228955E-01;
  COFETA[191] = 2.33156489E-02;
  COFETA[192] = -2.50327434E+01;
  COFETA[193] = 5.20184077E+00;
  COFETA[194] = -5.57265947E-01;
  COFETA[195] = 2.27565676E-02;
  COFETA[196] = -2.31769908E+01;
  COFETA[197] = 4.80350223E+00;
  COFETA[198] = -5.38341336E-01;
  COFETA[199] = 2.32747213E-02;
  COFETA[200] = -2.02663506E+01;
  COFETA[201] = 3.63241793E+00;
  COFETA[202] = -3.95581049E-01;
  COFETA[203] = 1.74725495E-02;
  COFETA[204] = -1.98518704E+01;
  COFETA[205] = 2.61144840E+00;
  COFETA[206] = -1.59776046E-01;
  COFETA[207] = 3.08856349E-03;
  COFETA[208] = -1.90759454E+01;
  COFETA[209] = 2.33020258E+00;
  COFETA[210] = -1.21324797E-01;
  COFETA[211] = 1.36332661E-03;
  COFETA[212] = -1.90829843E+01;
  COFETA[213] = 2.33020258E+00;
  COFETA[214] = -1.21324797E-01;
  COFETA[215] = 1.36332661E-03;
  COFETA[216] = -1.86167663E+01;
  COFETA[217] = 2.05646291E+00;
  COFETA[218] = -8.22350959E-02;
  COFETA[219] = -4.57922845E-04;
  COFETA[220] = -2.05246536E+01;
  COFETA[221] = 2.88686867E+00;
  COFETA[222] = -1.94323843E-01;
  COFETA[223] = 4.51745190E-03;
  COFETA[224] = -1.99466183E+01;
  COFETA[225] = 2.61144840E+00;
  COFETA[226] = -1.59776046E-01;
  COFETA[227] = 3.08856349E-03;
  COFETA[228] = -1.99525041E+01;
  COFETA[229] = 2.61144840E+00;
  COFETA[230] = -1.59776046E-01;
  COFETA[231] = 3.08856349E-03;
  COFETA[232] = -2.19841200E+01;
  COFETA[233] = 3.46341268E+00;
  COFETA[234] = -2.80516687E-01;
  COFETA[235] = 8.70427548E-03;
  COFETA[236] = -2.19891752E+01;
  COFETA[237] = 3.46341268E+00;
  COFETA[238] = -2.80516687E-01;
  COFETA[239] = 8.70427548E-03;
  COFETA[240] = -2.19891752E+01;
  COFETA[241] = 3.46341268E+00;
  COFETA[242] = -2.80516687E-01;
  COFETA[243] = 8.70427548E-03;
  COFETA[244] = -2.19891752E+01;
  COFETA[245] = 3.46341268E+00;
  COFETA[246] = -2.80516687E-01;
  COFETA[247] = 8.70427548E-03;
  COFETA[248] = -2.19891752E+01;
  COFETA[249] = 3.46341268E+00;
  COFETA[250] = -2.80516687E-01;
  COFETA[251] = 8.70427548E-03;
  COFETA[252] = -2.20266587E+01;
  COFETA[253] = 3.49198162E+00;
  COFETA[254] = -2.84911854E-01;
  COFETA[255] = 8.92219373E-03;
  COFETA[256] = -2.20266587E+01;
  COFETA[257] = 3.49198162E+00;
  COFETA[258] = -2.84911854E-01;
  COFETA[259] = 8.92219373E-03;
  COFETA[260] = -1.72138662E+01;
  COFETA[261] = 1.32892948E+00;
  COFETA[262] = 3.32518130E-02;
  COFETA[263] = -6.33218569E-03;
  COFETA[264] = -1.72138662E+01;
  COFETA[265] = 1.32892948E+00;
  COFETA[266] = 3.32518130E-02;
  COFETA[267] = -6.33218569E-03;
  COFETA[268] = -1.72138662E+01;
  COFETA[269] = 1.32892948E+00;
  COFETA[270] = 3.32518130E-02;
  COFETA[271] = -6.33218569E-03;
  COFETA[272] = -1.72138662E+01;
  COFETA[273] = 1.32892948E+00;
  COFETA[274] = 3.32518130E-02;
  COFETA[275] = -6.33218569E-03;
  COFETA[276] = -1.72138662E+01;
  COFETA[277] = 1.32892948E+00;
  COFETA[278] = 3.32518130E-02;
  COFETA[279] = -6.33218569E-03;
  COFETA[280] = -1.72138662E+01;
  COFETA[281] = 1.32892948E+00;
  COFETA[282] = 3.32518130E-02;
  COFETA[283] = -6.33218569E-03;
  COFETA[284] = -1.72138662E+01;
  COFETA[285] = 1.32892948E+00;
  COFETA[286] = 3.32518130E-02;
  COFETA[287] = -6.33218569E-03;
  COFETA[288] = -1.72138662E+01;
  COFETA[289] = 1.32892948E+00;
  COFETA[290] = 3.32518130E-02;
  COFETA[291] = -6.33218569E-03;
  COFETA[292] = -1.72138662E+01;
  COFETA[293] = 1.32892948E+00;
  COFETA[294] = 3.32518130E-02;
  COFETA[295] = -6.33218569E-03;
  COFETA[296] = -1.72138662E+01;
  COFETA[297] = 1.32892948E+00;
  COFETA[298] = 3.32518130E-02;
  COFETA[299] = -6.33218569E-03;
  COFETA[300] = -1.72138662E+01;
  COFETA[301] = 1.32892948E+00;
  COFETA[302] = 3.32518130E-02;
  COFETA[303] = -6.33218569E-03;
  COFETA[304] = -1.72138662E+01;
  COFETA[305] = 1.32892948E+00;
  COFETA[306] = 3.32518130E-02;
  COFETA[307] = -6.33218569E-03;
  COFETA[308] = -1.55079491E+01;
  COFETA[309] = 4.85864595E-01;
  COFETA[310] = 1.55872695E-01;
  COFETA[311] = -1.21585381E-02;
  COFETA[312] = -1.55079491E+01;
  COFETA[313] = 4.85864595E-01;
  COFETA[314] = 1.55872695E-01;
  COFETA[315] = -1.21585381E-02;
  COFETA[316] = -1.55079491E+01;
  COFETA[317] = 4.85864595E-01;
  COFETA[318] = 1.55872695E-01;
  COFETA[319] = -1.21585381E-02;
  COFETA[320] = -1.55079491E+01;
  COFETA[321] = 4.85864595E-01;
  COFETA[322] = 1.55872695E-01;
  COFETA[323] = -1.21585381E-02;
  COFETA[324] = -1.97234828E+01;
  COFETA[325] = 2.43187785E+00;
  COFETA[326] = -1.26857544E-01;
  COFETA[327] = 1.26099340E-03;
  COFETA[328] = -1.97234828E+01;
  COFETA[329] = 2.43187785E+00;
  COFETA[330] = -1.26857544E-01;
  COFETA[331] = 1.26099340E-03;
  COFETA[332] = -1.61859404E+01;
  COFETA[333] = 8.67921590E-01;
  COFETA[334] = 9.96556860E-02;
  COFETA[335] = -9.46033224E-03;
  COFETA[336] = -1.61859404E+01;
  COFETA[337] = 8.67921590E-01;
  COFETA[338] = 9.96556860E-02;
  COFETA[339] = -9.46033224E-03;
  COFETA[340] = -1.61859404E+01;
  COFETA[341] = 8.67921590E-01;
  COFETA[342] = 9.96556860E-02;
  COFETA[343] = -9.46033224E-03;
  COFETA[344] = -1.61859404E+01;
  COFETA[345] = 8.67921590E-01;
  COFETA[346] = 9.96556860E-02;
  COFETA[347] = -9.46033224E-03;
  COFETA[348] = -1.65695492E+01;
  COFETA[349] = 2.39056562E+00;
  COFETA[350] = -2.34558144E-01;
  COFETA[351] = 1.05024037E-02;
}

// Poly fits for the conductivities, dim NO*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFLAM(amrex::Real* COFLAM)
{
  COFLAM[0] = -8.57944636E-01;
  COFLAM[1] = 3.65436395E+00;
  COFLAM[2] = -3.98339635E-01;
  COFLAM[3] = 1.75883009E-02;
  COFLAM[4] = 9.13732503E+00;
  COFLAM[5] = -4.36831992E-01;
  COFLAM[6] = 1.12981590E-01;
  COFLAM[7] = -2.54609743E-03;
  COFLAM[8] = 1.69268564E+00;
  COFLAM[9] = 1.92606504E+00;
  COFLAM[10] = -1.73487476E-01;
  COFLAM[11] = 7.82572931E-03;
  COFLAM[12] = -1.93886978E+00;
  COFLAM[13] = 2.89244194E+00;
  COFLAM[14] = -2.71258620E-01;
  COFLAM[15] = 1.15340575E-02;
  COFLAM[16] = 1.00131059E+01;
  COFLAM[17] = -1.54006455E+00;
  COFLAM[18] = 3.02750609E-01;
  COFLAM[19] = -1.29859531E-02;
  COFLAM[20] = 2.35086359E+01;
  COFLAM[21] = -9.05997075E+00;
  COFLAM[22] = 1.54815990E+00;
  COFLAM[23] = -7.71639219E-02;
  COFLAM[24] = 1.15794139E+01;
  COFLAM[25] = -3.02088258E+00;
  COFLAM[26] = 5.82091458E-01;
  COFLAM[27] = -2.93406451E-02;
  COFLAM[28] = 5.62029879E+00;
  COFLAM[29] = -1.91574737E+00;
  COFLAM[30] = 5.90225030E-01;
  COFLAM[31] = -3.57616012E-02;
  COFLAM[32] = -1.15551899E+01;
  COFLAM[33] = 5.97444335E+00;
  COFLAM[34] = -5.83493929E-01;
  COFLAM[35] = 2.11390994E-02;
  COFLAM[36] = 1.36305852E+01;
  COFLAM[37] = -4.45086631E+00;
  COFLAM[38] = 8.75862532E-01;
  COFLAM[39] = -4.60275190E-02;
  COFLAM[40] = 1.29622495E+01;
  COFLAM[41] = -4.85747192E+00;
  COFLAM[42] = 1.02918176E+00;
  COFLAM[43] = -5.69931905E-02;
  COFLAM[44] = 4.76620244E+00;
  COFLAM[45] = -4.27753998E-01;
  COFLAM[46] = 2.68283104E-01;
  COFLAM[47] = -1.65411133E-02;
  COFLAM[48] = 8.99264201E-01;
  COFLAM[49] = 1.32506502E+00;
  COFLAM[50] = 1.81955309E-02;
  COFLAM[51] = -4.46690903E-03;
  COFLAM[52] = 4.84793677E+00;
  COFLAM[53] = -2.13603074E+00;
  COFLAM[54] = 6.99833706E-01;
  COFLAM[55] = -4.38222874E-02;
  COFLAM[56] = -6.14586258E+00;
  COFLAM[57] = 2.47428311E+00;
  COFLAM[58] = 6.44007658E-02;
  COFLAM[59] = -1.45368723E-02;
  COFLAM[60] = -1.44773233E+01;
  COFLAM[61] = 6.20799538E+00;
  COFLAM[62] = -4.66685962E-01;
  COFLAM[63] = 1.03036988E-02;
  COFLAM[64] = -1.34447095E+01;
  COFLAM[65] = 6.12380016E+00;
  COFLAM[66] = -4.86657206E-01;
  COFLAM[67] = 1.24614433E-02;
  COFLAM[68] = -1.32867393E+01;
  COFLAM[69] = 5.82552894E+00;
  COFLAM[70] = -4.38733313E-01;
  COFLAM[71] = 1.02209706E-02;
  COFLAM[72] = -9.20686918E+00;
  COFLAM[73] = 5.13028592E+00;
  COFLAM[74] = -4.67868864E-01;
  COFLAM[75] = 1.64674391E-02;
  COFLAM[76] = -1.36861284E+01;
  COFLAM[77] = 6.35261765E+00;
  COFLAM[78] = -5.53497079E-01;
  COFLAM[79] = 1.70958084E-02;
  COFLAM[80] = -9.55247973E+00;
  COFLAM[81] = 4.54180986E+00;
  COFLAM[82] = -3.09442995E-01;
  COFLAM[83] = 5.98150029E-03;
  COFLAM[84] = -5.31221736E-01;
  COFLAM[85] = 2.21998709E+00;
  COFLAM[86] = -1.07502114E-01;
  COFLAM[87] = 1.06755325E-03;
  COFLAM[88] = -7.51755710E+00;
  COFLAM[89] = 3.30311416E+00;
  COFLAM[90] = -8.47654431E-02;
  COFLAM[91] = -6.42328495E-03;
  COFLAM[92] = -6.27418168E+00;
  COFLAM[93] = 2.90468332E+00;
  COFLAM[94] = -4.35101898E-02;
  COFLAM[95] = -7.77942779E-03;
  COFLAM[96] = -1.05850100E+01;
  COFLAM[97] = 4.47082275E+00;
  COFLAM[98] = -2.26615128E-01;
  COFLAM[99] = -6.33818094E-04;
  COFLAM[100] = -1.32966495E+01;
  COFLAM[101] = 5.92584931E+00;
  COFLAM[102] = -4.64901250E-01;
  COFLAM[103] = 1.16662481E-02;
  COFLAM[104] = -1.54410715E+01;
  COFLAM[105] = 6.67114637E+00;
  COFLAM[106] = -5.37137469E-01;
  COFLAM[107] = 1.38051642E-02;
  COFLAM[108] = -2.26611354E+01;
  COFLAM[109] = 9.78565204E+00;
  COFLAM[110] = -9.94033333E-01;
  COFLAM[111] = 3.57950652E-02;
  COFLAM[112] = -1.59315237E+01;
  COFLAM[113] = 7.00975711E+00;
  COFLAM[114] = -6.12922914E-01;
  COFLAM[115] = 1.85439121E-02;
  COFLAM[116] = -1.90915918E+01;
  COFLAM[117] = 8.15677892E+00;
  COFLAM[118] = -7.46603997E-01;
  COFLAM[119] = 2.35743348E-02;
  COFLAM[120] = -1.96439078E+01;
  COFLAM[121] = 8.31169450E+00;
  COFLAM[122] = -7.56268460E-01;
  COFLAM[123] = 2.35727059E-02;
  COFLAM[124] = -1.83524545E+01;
  COFLAM[125] = 7.74571055E+00;
  COFLAM[126] = -6.83646771E-01;
  COFLAM[127] = 2.04759876E-02;
  COFLAM[128] = -1.28252766E+01;
  COFLAM[129] = 5.42009790E+00;
  COFLAM[130] = -3.70398013E-01;
  COFLAM[131] = 6.33888538E-03;
  COFLAM[132] = -8.05401691E+00;
  COFLAM[133] = 3.25439948E+00;
  COFLAM[134] = -4.49701163E-02;
  COFLAM[135] = -9.47699575E-03;
  COFLAM[136] = -8.75332708E+00;
  COFLAM[137] = 3.71600613E+00;
  COFLAM[138] = -1.33520622E-01;
  COFLAM[139] = -4.56692672E-03;
  COFLAM[140] = -2.13451466E+01;
  COFLAM[141] = 8.84739177E+00;
  COFLAM[142] = -8.23421308E-01;
  COFLAM[143] = 2.63782869E-02;
  COFLAM[144] = -1.98965301E+01;
  COFLAM[145] = 8.27532266E+00;
  COFLAM[146] = -7.46184801E-01;
  COFLAM[147] = 2.29240225E-02;
  COFLAM[148] = -1.43280913E+01;
  COFLAM[149] = 5.86486660E+00;
  COFLAM[150] = -4.04615244E-01;
  COFLAM[151] = 6.95849054E-03;
  COFLAM[152] = 5.28057238E+00;
  COFLAM[153] = -1.92758623E+00;
  COFLAM[154] = 6.29141050E-01;
  COFLAM[155] = -3.87203246E-02;
  COFLAM[156] = -5.85802646E+00;
  COFLAM[157] = 2.80606022E+00;
  COFLAM[158] = -2.49414854E-02;
  COFLAM[159] = -8.88253185E-03;
  COFLAM[160] = -1.55568365E+01;
  COFLAM[161] = 7.03099863E+00;
  COFLAM[162] = -6.44569091E-01;
  COFLAM[163] = 2.10086633E-02;
  COFLAM[164] = -1.74606040E+01;
  COFLAM[165] = 7.35775270E+00;
  COFLAM[166] = -6.45979211E-01;
  COFLAM[167] = 1.92967420E-02;
  COFLAM[168] = -1.68188828E+01;
  COFLAM[169] = 7.10377007E+00;
  COFLAM[170] = -6.04738409E-01;
  COFLAM[171] = 1.71995338E-02;
  COFLAM[172] = -2.44942316E+01;
  COFLAM[173] = 1.02251333E+01;
  COFLAM[174] = -1.02751074E+00;
  COFLAM[175] = 3.62760318E-02;
  COFLAM[176] = -1.40646258E+01;
  COFLAM[177] = 6.01680547E+00;
  COFLAM[178] = -4.55526564E-01;
  COFLAM[179] = 1.03088492E-02;
  COFLAM[180] = -1.41533490E+01;
  COFLAM[181] = 5.84938466E+00;
  COFLAM[182] = -4.08990282E-01;
  COFLAM[183] = 7.31206781E-03;
  COFLAM[184] = -1.04744466E+01;
  COFLAM[185] = 4.24091130E+00;
  COFLAM[186] = -1.78599049E-01;
  COFLAM[187] = -3.51607964E-03;
  COFLAM[188] = -2.08328607E+01;
  COFLAM[189] = 9.07593046E+00;
  COFLAM[190] = -8.93990666E-01;
  COFLAM[191] = 3.11142874E-02;
  COFLAM[192] = -9.95261135E+00;
  COFLAM[193] = 5.06627922E+00;
  COFLAM[194] = -4.15761496E-01;
  COFLAM[195] = 1.21197122E-02;
  COFLAM[196] = -2.41661632E+00;
  COFLAM[197] = 2.57272959E+00;
  COFLAM[198] = -1.49379630E-01;
  COFLAM[199] = 2.85759111E-03;
  COFLAM[200] = 1.83932405E+01;
  COFLAM[201] = -6.25754732E+00;
  COFLAM[202] = 1.09378559E+00;
  COFLAM[203] = -5.49435713E-02;
  COFLAM[204] = -1.29592613E+01;
  COFLAM[205] = 5.46914888E+00;
  COFLAM[206] = -3.82048210E-01;
  COFLAM[207] = 7.02202324E-03;
  COFLAM[208] = -1.07745488E+01;
  COFLAM[209] = 4.38864813E+00;
  COFLAM[210] = -2.01101441E-01;
  COFLAM[211] = -2.34730833E-03;
  COFLAM[212] = -8.85278944E+00;
  COFLAM[213] = 3.62976214E+00;
  COFLAM[214] = -1.04164193E-01;
  COFLAM[215] = -6.51233360E-03;
  COFLAM[216] = -1.21909692E+01;
  COFLAM[217] = 4.97614560E+00;
  COFLAM[218] = -2.90375869E-01;
  COFLAM[219] = 1.96299933E-03;
  COFLAM[220] = -1.32703245E+01;
  COFLAM[221] = 5.45124740E+00;
  COFLAM[222] = -3.53231889E-01;
  COFLAM[223] = 4.81046222E-03;
  COFLAM[224] = -1.27243553E+01;
  COFLAM[225] = 5.13586153E+00;
  COFLAM[226] = -3.04490547E-01;
  COFLAM[227] = 2.39134330E-03;
  COFLAM[228] = -1.10119236E+01;
  COFLAM[229] = 4.44880517E+00;
  COFLAM[230] = -2.14892686E-01;
  COFLAM[231] = -1.53815596E-03;
  COFLAM[232] = -1.79582385E+01;
  COFLAM[233] = 7.27686839E+00;
  COFLAM[234] = -5.88898376E-01;
  COFLAM[235] = 1.49980246E-02;
  COFLAM[236] = -1.71436693E+01;
  COFLAM[237] = 6.96464970E+00;
  COFLAM[238] = -5.50700045E-01;
  COFLAM[239] = 1.34286407E-02;
  COFLAM[240] = -1.72838458E+01;
  COFLAM[241] = 6.97737660E+00;
  COFLAM[242] = -5.47365549E-01;
  COFLAM[243] = 1.30795271E-02;
  COFLAM[244] = -1.72838458E+01;
  COFLAM[245] = 6.97737660E+00;
  COFLAM[246] = -5.47365549E-01;
  COFLAM[247] = 1.30795271E-02;
  COFLAM[248] = -1.72838458E+01;
  COFLAM[249] = 6.97737660E+00;
  COFLAM[250] = -5.47365549E-01;
  COFLAM[251] = 1.30795271E-02;
  COFLAM[252] = -1.82160100E+01;
  COFLAM[253] = 7.38714645E+00;
  COFLAM[254] = -6.06955545E-01;
  COFLAM[255] = 1.59329605E-02;
  COFLAM[256] = -1.94902815E+01;
  COFLAM[257] = 7.91791283E+00;
  COFLAM[258] = -6.80229152E-01;
  COFLAM[259] = 1.92900550E-02;
  COFLAM[260] = -1.12997621E+01;
  COFLAM[261] = 4.40458910E+00;
  COFLAM[262] = -1.88107491E-01;
  COFLAM[263] = -3.51985867E-03;
  COFLAM[264] = -1.28251863E+01;
  COFLAM[265] = 5.08977779E+00;
  COFLAM[266] = -2.88573191E-01;
  COFLAM[267] = 1.31442453E-03;
  COFLAM[268] = -1.28251863E+01;
  COFLAM[269] = 5.08977779E+00;
  COFLAM[270] = -2.88573191E-01;
  COFLAM[271] = 1.31442453E-03;
  COFLAM[272] = -1.28251863E+01;
  COFLAM[273] = 5.08977779E+00;
  COFLAM[274] = -2.88573191E-01;
  COFLAM[275] = 1.31442453E-03;
  COFLAM[276] = -1.39313371E+01;
  COFLAM[277] = 5.55834554E+00;
  COFLAM[278] = -3.54010733E-01;
  COFLAM[279] = 4.31472744E-03;
  COFLAM[280] = -1.38292702E+01;
  COFLAM[281] = 5.53764033E+00;
  COFLAM[282] = -3.53287299E-01;
  COFLAM[283] = 4.35406134E-03;
  COFLAM[284] = -1.38292702E+01;
  COFLAM[285] = 5.53764033E+00;
  COFLAM[286] = -3.53287299E-01;
  COFLAM[287] = 4.35406134E-03;
  COFLAM[288] = -1.38292702E+01;
  COFLAM[289] = 5.53764033E+00;
  COFLAM[290] = -3.53287299E-01;
  COFLAM[291] = 4.35406134E-03;
  COFLAM[292] = -1.38292702E+01;
  COFLAM[293] = 5.53764033E+00;
  COFLAM[294] = -3.53287299E-01;
  COFLAM[295] = 4.35406134E-03;
  COFLAM[296] = -1.38292702E+01;
  COFLAM[297] = 5.53764033E+00;
  COFLAM[298] = -3.53287299E-01;
  COFLAM[299] = 4.35406134E-03;
  COFLAM[300] = -1.38292702E+01;
  COFLAM[301] = 5.53764033E+00;
  COFLAM[302] = -3.53287299E-01;
  COFLAM[303] = 4.35406134E-03;
  COFLAM[304] = -1.38292702E+01;
  COFLAM[305] = 5.53764033E+00;
  COFLAM[306] = -3.53287299E-01;
  COFLAM[307] = 4.35406134E-03;
  COFLAM[308] = -1.18272731E+01;
  COFLAM[309] = 4.64263722E+00;
  COFLAM[310] = -2.37289412E-01;
  COFLAM[311] = -6.73108142E-04;
  COFLAM[312] = -1.28372755E+01;
  COFLAM[313] = 5.10718489E+00;
  COFLAM[314] = -3.06495375E-01;
  COFLAM[315] = 2.69402048E-03;
  COFLAM[316] = -1.28372755E+01;
  COFLAM[317] = 5.10718489E+00;
  COFLAM[318] = -3.06495375E-01;
  COFLAM[319] = 2.69402048E-03;
  COFLAM[320] = -1.28372755E+01;
  COFLAM[321] = 5.10718489E+00;
  COFLAM[322] = -3.06495375E-01;
  COFLAM[323] = 2.69402048E-03;
  COFLAM[324] = -2.36807700E+01;
  COFLAM[325] = 9.51724271E+00;
  COFLAM[326] = -8.87967190E-01;
  COFLAM[327] = 2.83073334E-02;
  COFLAM[328] = -2.39192047E+01;
  COFLAM[329] = 9.67463615E+00;
  COFLAM[330] = -9.16758594E-01;
  COFLAM[331] = 2.99126372E-02;
  COFLAM[332] = -1.15745454E+01;
  COFLAM[333] = 4.62413631E+00;
  COFLAM[334] = -2.35380221E-01;
  COFLAM[335] = -7.42157079E-04;
  COFLAM[336] = -1.21818154E+01;
  COFLAM[337] = 4.84440312E+00;
  COFLAM[338] = -2.61857060E-01;
  COFLAM[339] = 3.12067254E-04;
  COFLAM[340] = -1.21818154E+01;
  COFLAM[341] = 4.84440312E+00;
  COFLAM[342] = -2.61857060E-01;
  COFLAM[343] = 3.12067254E-04;
  COFLAM[344] = -1.07402083E+01;
  COFLAM[345] = 4.26725687E+00;
  COFLAM[346] = -1.85126981E-01;
  COFLAM[347] = -3.07722096E-03;
  COFLAM[348] = 1.29306421E+01;
  COFLAM[349] = -3.52818996E+00;
  COFLAM[350] = 6.45501344E-01;
  COFLAM[351] = -3.19376399E-02;
}

// Poly fits for the diffusion coefficients, dim NO*KK*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFD(amrex::Real* COFD)
{
  COFD[0] = -1.47968875E+01;
  COFD[1] = 4.23027636E+00;
  COFD[2] = -3.36139991E-01;
  COFD[3] = 1.46507621E-02;
  COFD[4] = -1.14366544E+01;
  COFD[5] = 2.78323501E+00;
  COFD[6] = -1.51214064E-01;
  COFD[7] = 6.75150012E-03;
  COFD[8] = -1.34230419E+01;
  COFD[9] = 3.48624238E+00;
  COFD[10] = -2.41554467E-01;
  COFD[11] = 1.06263545E-02;
  COFD[12] = -1.46550238E+01;
  COFD[13] = 3.83606243E+00;
  COFD[14] = -2.86076532E-01;
  COFD[15] = 1.25205829E-02;
  COFD[16] = -1.34248014E+01;
  COFD[17] = 3.48624238E+00;
  COFD[18] = -2.41554467E-01;
  COFD[19] = 1.06263545E-02;
  COFD[20] = -1.95739720E+01;
  COFD[21] = 5.61113230E+00;
  COFD[22] = -4.90190187E-01;
  COFD[23] = 2.03260675E-02;
  COFD[24] = -1.43151328E+01;
  COFD[25] = 3.68038508E+00;
  COFD[26] = -2.65779346E-01;
  COFD[27] = 1.16360771E-02;
  COFD[28] = -1.97544605E+01;
  COFD[29] = 5.56931926E+00;
  COFD[30] = -4.89105511E-01;
  COFD[31] = 2.04493129E-02;
  COFD[32] = -1.76147183E+01;
  COFD[33] = 4.86049500E+00;
  COFD[34] = -4.12200578E-01;
  COFD[35] = 1.77160971E-02;
  COFD[36] = -1.57995045E+01;
  COFD[37] = 4.22225052E+00;
  COFD[38] = -3.35156428E-01;
  COFD[39] = 1.46104855E-02;
  COFD[40] = -1.57199190E+01;
  COFD[41] = 4.19936335E+00;
  COFD[42] = -3.32311009E-01;
  COFD[43] = 1.44921003E-02;
  COFD[44] = -1.46554904E+01;
  COFD[45] = 3.83606243E+00;
  COFD[46] = -2.86076532E-01;
  COFD[47] = 1.25205829E-02;
  COFD[48] = -1.46559297E+01;
  COFD[49] = 3.83606243E+00;
  COFD[50] = -2.86076532E-01;
  COFD[51] = 1.25205829E-02;
  COFD[52] = -1.97550243E+01;
  COFD[53] = 5.56931926E+00;
  COFD[54] = -4.89105511E-01;
  COFD[55] = 2.04493129E-02;
  COFD[56] = -1.92718738E+01;
  COFD[57] = 5.41172124E+00;
  COFD[58] = -4.73213887E-01;
  COFD[59] = 1.99405473E-02;
  COFD[60] = -1.78637336E+01;
  COFD[61] = 4.88268692E+00;
  COFD[62] = -4.14917638E-01;
  COFD[63] = 1.78274298E-02;
  COFD[64] = -1.74408120E+01;
  COFD[65] = 4.83580036E+00;
  COFD[66] = -4.09383573E-01;
  COFD[67] = 1.76098175E-02;
  COFD[68] = -1.78631714E+01;
  COFD[69] = 4.88268692E+00;
  COFD[70] = -4.14917638E-01;
  COFD[71] = 1.78274298E-02;
  COFD[72] = -1.79310920E+01;
  COFD[73] = 4.98037650E+00;
  COFD[74] = -4.26676911E-01;
  COFD[75] = 1.83007231E-02;
  COFD[76] = -1.79317871E+01;
  COFD[77] = 4.98037650E+00;
  COFD[78] = -4.26676911E-01;
  COFD[79] = 1.83007231E-02;
  COFD[80] = -1.94688845E+01;
  COFD[81] = 5.43830787E+00;
  COFD[82] = -4.75472880E-01;
  COFD[83] = 1.99909996E-02;
  COFD[84] = -1.54460977E+01;
  COFD[85] = 4.26819983E+00;
  COFD[86] = -3.40766379E-01;
  COFD[87] = 1.48393361E-02;
  COFD[88] = -1.94691588E+01;
  COFD[89] = 5.43830787E+00;
  COFD[90] = -4.75472880E-01;
  COFD[91] = 1.99909996E-02;
  COFD[92] = -1.94691588E+01;
  COFD[93] = 5.43830787E+00;
  COFD[94] = -4.75472880E-01;
  COFD[95] = 1.99909996E-02;
  COFD[96] = -1.94694206E+01;
  COFD[97] = 5.43830787E+00;
  COFD[98] = -4.75472880E-01;
  COFD[99] = 1.99909996E-02;
  COFD[100] = -1.87648021E+01;
  COFD[101] = 5.19146813E+00;
  COFD[102] = -4.50340408E-01;
  COFD[103] = 1.91768178E-02;
  COFD[104] = -1.85748704E+01;
  COFD[105] = 5.14789919E+00;
  COFD[106] = -4.45930850E-01;
  COFD[107] = 1.90363341E-02;
  COFD[108] = -1.92784337E+01;
  COFD[109] = 5.32291505E+00;
  COFD[110] = -4.65883522E-01;
  COFD[111] = 1.97916109E-02;
  COFD[112] = -1.87481939E+01;
  COFD[113] = 5.13858656E+00;
  COFD[114] = -4.45075387E-01;
  COFD[115] = 1.90137309E-02;
  COFD[116] = -1.92360387E+01;
  COFD[117] = 5.31542554E+00;
  COFD[118] = -4.65003780E-01;
  COFD[119] = 1.97570185E-02;
  COFD[120] = -1.92362001E+01;
  COFD[121] = 5.31542554E+00;
  COFD[122] = -4.65003780E-01;
  COFD[123] = 1.97570185E-02;
  COFD[124] = -1.93693900E+01;
  COFD[125] = 5.30286598E+00;
  COFD[126] = -4.63495567E-01;
  COFD[127] = 1.96962203E-02;
  COFD[128] = -1.97429411E+01;
  COFD[129] = 5.43665790E+00;
  COFD[130] = -4.75279482E-01;
  COFD[131] = 1.99834095E-02;
  COFD[132] = -1.96820567E+01;
  COFD[133] = 5.43566453E+00;
  COFD[134] = -4.75162978E-01;
  COFD[135] = 1.99788342E-02;
  COFD[136] = -1.96658774E+01;
  COFD[137] = 5.41732785E+00;
  COFD[138] = -4.73401182E-01;
  COFD[139] = 1.99268853E-02;
  COFD[140] = -1.97252430E+01;
  COFD[141] = 5.38884098E+00;
  COFD[142] = -4.71627912E-01;
  COFD[143] = 1.99273178E-02;
  COFD[144] = -1.96804361E+01;
  COFD[145] = 5.37526595E+00;
  COFD[146] = -4.70621144E-01;
  COFD[147] = 1.99141073E-02;
  COFD[148] = -1.98806530E+01;
  COFD[149] = 5.52555673E+00;
  COFD[150] = -4.84999851E-01;
  COFD[151] = 2.03334931E-02;
  COFD[152] = -1.96915102E+01;
  COFD[153] = 5.54637286E+00;
  COFD[154] = -4.87070324E-01;
  COFD[155] = 2.03983467E-02;
  COFD[156] = -1.96917304E+01;
  COFD[157] = 5.54637286E+00;
  COFD[158] = -4.87070324E-01;
  COFD[159] = 2.03983467E-02;
  COFD[160] = -1.95803148E+01;
  COFD[161] = 5.45790068E+00;
  COFD[162] = -4.77666083E-01;
  COFD[163] = 2.00724628E-02;
  COFD[164] = -1.97202643E+01;
  COFD[165] = 5.42035603E+00;
  COFD[166] = -4.73505534E-01;
  COFD[167] = 1.99198699E-02;
  COFD[168] = -1.96115390E+01;
  COFD[169] = 5.40502814E+00;
  COFD[170] = -4.72746583E-01;
  COFD[171] = 1.99363615E-02;
  COFD[172] = -2.02578925E+01;
  COFD[173] = 5.56701235E+00;
  COFD[174] = -4.88925090E-01;
  COFD[175] = 2.04461948E-02;
  COFD[176] = -2.02607872E+01;
  COFD[177] = 5.56701235E+00;
  COFD[178] = -4.88925090E-01;
  COFD[179] = 2.04461948E-02;
  COFD[180] = -2.02593075E+01;
  COFD[181] = 5.56701235E+00;
  COFD[182] = -4.88925090E-01;
  COFD[183] = 2.04461948E-02;
  COFD[184] = -2.02593075E+01;
  COFD[185] = 5.56701235E+00;
  COFD[186] = -4.88925090E-01;
  COFD[187] = 2.04461948E-02;
  COFD[188] = -1.86493270E+01;
  COFD[189] = 5.16040659E+00;
  COFD[190] = -4.46843492E-01;
  COFD[191] = 1.90466181E-02;
  COFD[192] = -1.87644855E+01;
  COFD[193] = 5.19146813E+00;
  COFD[194] = -4.50340408E-01;
  COFD[195] = 1.91768178E-02;
  COFD[196] = -1.72291553E+01;
  COFD[197] = 4.69060745E+00;
  COFD[198] = -3.92369888E-01;
  COFD[199] = 1.69459661E-02;
  COFD[200] = -1.57972520E+01;
  COFD[201] = 4.22225052E+00;
  COFD[202] = -3.35156428E-01;
  COFD[203] = 1.46104855E-02;
  COFD[204] = -2.03044540E+01;
  COFD[205] = 5.53557319E+00;
  COFD[206] = -4.85990338E-01;
  COFD[207] = 2.03641963E-02;
  COFD[208] = -2.00200264E+01;
  COFD[209] = 5.51269088E+00;
  COFD[210] = -4.83693748E-01;
  COFD[211] = 2.02912448E-02;
  COFD[212] = -2.00199287E+01;
  COFD[213] = 5.51269088E+00;
  COFD[214] = -4.83693748E-01;
  COFD[215] = 2.02912448E-02;
  COFD[216] = -2.00523875E+01;
  COFD[217] = 5.48732025E+00;
  COFD[218] = -4.80942121E-01;
  COFD[219] = 2.01932766E-02;
  COFD[220] = -2.02667718E+01;
  COFD[221] = 5.55820929E+00;
  COFD[222] = -4.88194619E-01;
  COFD[223] = 2.04308557E-02;
  COFD[224] = -2.03034546E+01;
  COFD[225] = 5.53557319E+00;
  COFD[226] = -4.85990338E-01;
  COFD[227] = 2.03641963E-02;
  COFD[228] = -2.03033861E+01;
  COFD[229] = 5.53557319E+00;
  COFD[230] = -4.85990338E-01;
  COFD[231] = 2.03641963E-02;
  COFD[232] = -2.03114371E+01;
  COFD[233] = 5.50136606E+00;
  COFD[234] = -4.82461887E-01;
  COFD[235] = 2.02471523E-02;
  COFD[236] = -2.03113865E+01;
  COFD[237] = 5.50136606E+00;
  COFD[238] = -4.82461887E-01;
  COFD[239] = 2.02471523E-02;
  COFD[240] = -2.03113865E+01;
  COFD[241] = 5.50136606E+00;
  COFD[242] = -4.82461887E-01;
  COFD[243] = 2.02471523E-02;
  COFD[244] = -2.03113865E+01;
  COFD[245] = 5.50136606E+00;
  COFD[246] = -4.82461887E-01;
  COFD[247] = 2.02471523E-02;
  COFD[248] = -2.03113865E+01;
  COFD[249] = 5.50136606E+00;
  COFD[250] = -4.82461887E-01;
  COFD[251] = 2.02471523E-02;
  COFD[252] = -2.02780706E+01;
  COFD[253] = 5.49690496E+00;
  COFD[254] = -4.81980086E-01;
  COFD[255] = 2.02301138E-02;
  COFD[256] = -2.02780706E+01;
  COFD[257] = 5.49690496E+00;
  COFD[258] = -4.81980086E-01;
  COFD[259] = 2.02301138E-02;
  COFD[260] = -2.07558370E+01;
  COFD[261] = 5.61220925E+00;
  COFD[262] = -4.91040098E-01;
  COFD[263] = 2.03909682E-02;
  COFD[264] = -2.07558370E+01;
  COFD[265] = 5.61220925E+00;
  COFD[266] = -4.91040098E-01;
  COFD[267] = 2.03909682E-02;
  COFD[268] = -2.07558370E+01;
  COFD[269] = 5.61220925E+00;
  COFD[270] = -4.91040098E-01;
  COFD[271] = 2.03909682E-02;
  COFD[272] = -2.07558370E+01;
  COFD[273] = 5.61220925E+00;
  COFD[274] = -4.91040098E-01;
  COFD[275] = 2.03909682E-02;
  COFD[276] = -2.07558370E+01;
  COFD[277] = 5.61220925E+00;
  COFD[278] = -4.91040098E-01;
  COFD[279] = 2.03909682E-02;
  COFD[280] = -2.07558370E+01;
  COFD[281] = 5.61220925E+00;
  COFD[282] = -4.91040098E-01;
  COFD[283] = 2.03909682E-02;
  COFD[284] = -2.07558370E+01;
  COFD[285] = 5.61220925E+00;
  COFD[286] = -4.91040098E-01;
  COFD[287] = 2.03909682E-02;
  COFD[288] = -2.07558370E+01;
  COFD[289] = 5.61220925E+00;
  COFD[290] = -4.91040098E-01;
  COFD[291] = 2.03909682E-02;
  COFD[292] = -2.07558370E+01;
  COFD[293] = 5.61220925E+00;
  COFD[294] = -4.91040098E-01;
  COFD[295] = 2.03909682E-02;
  COFD[296] = -2.07558370E+01;
  COFD[297] = 5.61220925E+00;
  COFD[298] = -4.91040098E-01;
  COFD[299] = 2.03909682E-02;
  COFD[300] = -2.07558370E+01;
  COFD[301] = 5.61220925E+00;
  COFD[302] = -4.91040098E-01;
  COFD[303] = 2.03909682E-02;
  COFD[304] = -2.07558370E+01;
  COFD[305] = 5.61220925E+00;
  COFD[306] = -4.91040098E-01;
  COFD[307] = 2.03909682E-02;
  COFD[308] = -2.09747845E+01;
  COFD[309] = 5.59188965E+00;
  COFD[310] = -4.85691440E-01;
  COFD[311] = 2.00506276E-02;
  COFD[312] = -2.09747845E+01;
  COFD[313] = 5.59188965E+00;
  COFD[314] = -4.85691440E-01;
  COFD[315] = 2.00506276E-02;
  COFD[316] = -2.09747845E+01;
  COFD[317] = 5.59188965E+00;
  COFD[318] = -4.85691440E-01;
  COFD[319] = 2.00506276E-02;
  COFD[320] = -2.09747845E+01;
  COFD[321] = 5.59188965E+00;
  COFD[322] = -4.85691440E-01;
  COFD[323] = 2.00506276E-02;
  COFD[324] = -2.06159247E+01;
  COFD[325] = 5.58747782E+00;
  COFD[326] = -4.90741949E-01;
  COFD[327] = 2.04923081E-02;
  COFD[328] = -2.06159247E+01;
  COFD[329] = 5.58747782E+00;
  COFD[330] = -4.90741949E-01;
  COFD[331] = 2.04923081E-02;
  COFD[332] = -2.08170058E+01;
  COFD[333] = 5.60629422E+00;
  COFD[334] = -4.88952090E-01;
  COFD[335] = 2.02479944E-02;
  COFD[336] = -2.08170058E+01;
  COFD[337] = 5.60629422E+00;
  COFD[338] = -4.88952090E-01;
  COFD[339] = 2.02479944E-02;
  COFD[340] = -2.08170058E+01;
  COFD[341] = 5.60629422E+00;
  COFD[342] = -4.88952090E-01;
  COFD[343] = 2.02479944E-02;
  COFD[344] = -2.08170058E+01;
  COFD[345] = 5.60629422E+00;
  COFD[346] = -4.88952090E-01;
  COFD[347] = 2.02479944E-02;
  COFD[348] = -1.42894603E+01;
  COFD[349] = 3.67490723E+00;
  COFD[350] = -2.65114792E-01;
  COFD[351] = 1.16092671E-02;
  COFD[352] = -1.14366544E+01;
  COFD[353] = 2.78323501E+00;
  COFD[354] = -1.51214064E-01;
  COFD[355] = 6.75150012E-03;
  COFD[356] = -1.03270769E+01;
  COFD[357] = 2.19285409E+00;
  COFD[358] = -7.54492786E-02;
  COFD[359] = 3.51398213E-03;
  COFD[360] = -1.09595844E+01;
  COFD[361] = 2.30836460E+00;
  COFD[362] = -8.76339315E-02;
  COFD[363] = 3.90878445E-03;
  COFD[364] = -1.18989101E+01;
  COFD[365] = 2.57507000E+00;
  COFD[366] = -1.24033737E-01;
  COFD[367] = 5.56694959E-03;
  COFD[368] = -1.09629118E+01;
  COFD[369] = 2.30836460E+00;
  COFD[370] = -8.76339315E-02;
  COFD[371] = 3.90878445E-03;
  COFD[372] = -1.71983144E+01;
  COFD[373] = 4.63881440E+00;
  COFD[374] = -3.86139677E-01;
  COFD[375] = 1.66955099E-02;
  COFD[376] = -1.17159884E+01;
  COFD[377] = 2.48123210E+00;
  COFD[378] = -1.11322604E-01;
  COFD[379] = 4.99282389E-03;
  COFD[380] = -1.60517517E+01;
  COFD[381] = 4.11188603E+00;
  COFD[382] = -3.21540884E-01;
  COFD[383] = 1.40482564E-02;
  COFD[384] = -1.37794466E+01;
  COFD[385] = 3.23973858E+00;
  COFD[386] = -2.09989036E-01;
  COFD[387] = 9.27667906E-03;
  COFD[388] = -1.25141403E+01;
  COFD[389] = 2.77873601E+00;
  COFD[390] = -1.50637360E-01;
  COFD[391] = 6.72684281E-03;
  COFD[392] = -1.24693714E+01;
  COFD[393] = 2.76686648E+00;
  COFD[394] = -1.49120141E-01;
  COFD[395] = 6.66220432E-03;
  COFD[396] = -1.18998160E+01;
  COFD[397] = 2.57507000E+00;
  COFD[398] = -1.24033737E-01;
  COFD[399] = 5.56694959E-03;
  COFD[400] = -1.19006697E+01;
  COFD[401] = 2.57507000E+00;
  COFD[402] = -1.24033737E-01;
  COFD[403] = 5.56694959E-03;
  COFD[404] = -1.60528433E+01;
  COFD[405] = 4.11188603E+00;
  COFD[406] = -3.21540884E-01;
  COFD[407] = 1.40482564E-02;
  COFD[408] = -1.58456453E+01;
  COFD[409] = 4.02074796E+00;
  COFD[410] = -3.10018539E-01;
  COFD[411] = 1.35599559E-02;
  COFD[412] = -1.39659148E+01;
  COFD[413] = 3.24966086E+00;
  COFD[414] = -2.11199992E-01;
  COFD[415] = 9.32580661E-03;
  COFD[416] = -1.36336524E+01;
  COFD[417] = 3.22088176E+00;
  COFD[418] = -2.07623790E-01;
  COFD[419] = 9.17771542E-03;
  COFD[420] = -1.39648264E+01;
  COFD[421] = 3.24966086E+00;
  COFD[422] = -2.11199992E-01;
  COFD[423] = 9.32580661E-03;
  COFD[424] = -1.39315415E+01;
  COFD[425] = 3.30394764E+00;
  COFD[426] = -2.17920112E-01;
  COFD[427] = 9.60284243E-03;
  COFD[428] = -1.39328824E+01;
  COFD[429] = 3.30394764E+00;
  COFD[430] = -2.17920112E-01;
  COFD[431] = 9.60284243E-03;
  COFD[432] = -1.57035004E+01;
  COFD[433] = 3.93614244E+00;
  COFD[434] = -2.99111497E-01;
  COFD[435] = 1.30888229E-02;
  COFD[436] = -1.22004476E+01;
  COFD[437] = 2.80725489E+00;
  COFD[438] = -1.54291406E-01;
  COFD[439] = 6.88290911E-03;
  COFD[440] = -1.57040365E+01;
  COFD[441] = 3.93614244E+00;
  COFD[442] = -2.99111497E-01;
  COFD[443] = 1.30888229E-02;
  COFD[444] = -1.57040365E+01;
  COFD[445] = 3.93614244E+00;
  COFD[446] = -2.99111497E-01;
  COFD[447] = 1.30888229E-02;
  COFD[448] = -1.57045486E+01;
  COFD[449] = 3.93614244E+00;
  COFD[450] = -2.99111497E-01;
  COFD[451] = 1.30888229E-02;
  COFD[452] = -1.47725848E+01;
  COFD[453] = 3.55444478E+00;
  COFD[454] = -2.50272707E-01;
  COFD[455] = 1.09990787E-02;
  COFD[456] = -1.45715952E+01;
  COFD[457] = 3.49477850E+00;
  COFD[458] = -2.42635772E-01;
  COFD[459] = 1.06721490E-02;
  COFD[460] = -1.51448435E+01;
  COFD[461] = 3.64565939E+00;
  COFD[462] = -2.61726871E-01;
  COFD[463] = 1.14799244E-02;
  COFD[464] = -1.47138094E+01;
  COFD[465] = 3.48023191E+00;
  COFD[466] = -2.40800798E-01;
  COFD[467] = 1.05947990E-02;
  COFD[468] = -1.51160026E+01;
  COFD[469] = 3.64206330E+00;
  COFD[470] = -2.61313444E-01;
  COFD[471] = 1.14642754E-02;
  COFD[472] = -1.51163198E+01;
  COFD[473] = 3.64206330E+00;
  COFD[474] = -2.61313444E-01;
  COFD[475] = 1.14642754E-02;
  COFD[476] = -1.52503825E+01;
  COFD[477] = 3.63657318E+00;
  COFD[478] = -2.60678457E-01;
  COFD[479] = 1.14400550E-02;
  COFD[480] = -1.59478887E+01;
  COFD[481] = 3.93437653E+00;
  COFD[482] = -2.98882326E-01;
  COFD[483] = 1.30788644E-02;
  COFD[484] = -1.63590765E+01;
  COFD[485] = 4.10307699E+00;
  COFD[486] = -3.20458470E-01;
  COFD[487] = 1.40037527E-02;
  COFD[488] = -1.58351561E+01;
  COFD[489] = 3.89547138E+00;
  COFD[490] = -2.93835564E-01;
  COFD[491] = 1.28596498E-02;
  COFD[492] = -1.56919300E+01;
  COFD[493] = 3.77842689E+00;
  COFD[494] = -2.78523399E-01;
  COFD[495] = 1.21896111E-02;
  COFD[496] = -1.55782124E+01;
  COFD[497] = 3.73153794E+00;
  COFD[498] = -2.72372598E-01;
  COFD[499] = 1.19199668E-02;
  COFD[500] = -1.61116840E+01;
  COFD[501] = 4.04227735E+00;
  COFD[502] = -3.12745253E-01;
  COFD[503] = 1.36756977E-02;
  COFD[504] = -1.59632633E+01;
  COFD[505] = 4.07051484E+00;
  COFD[506] = -3.16303109E-01;
  COFD[507] = 1.38259377E-02;
  COFD[508] = -1.59636946E+01;
  COFD[509] = 4.07051484E+00;
  COFD[510] = -3.16303109E-01;
  COFD[511] = 1.38259377E-02;
  COFD[512] = -1.58184590E+01;
  COFD[513] = 3.96142647E+00;
  COFD[514] = -3.02397826E-01;
  COFD[515] = 1.32318833E-02;
  COFD[516] = -1.63673633E+01;
  COFD[517] = 4.07800294E+00;
  COFD[518] = -3.17258198E-01;
  COFD[519] = 1.38667979E-02;
  COFD[520] = -1.56932959E+01;
  COFD[521] = 3.84112355E+00;
  COFD[522] = -2.86739743E-01;
  COFD[523] = 1.25496520E-02;
  COFD[524] = -1.65021085E+01;
  COFD[525] = 4.10792536E+00;
  COFD[526] = -3.21060656E-01;
  COFD[527] = 1.40287900E-02;
  COFD[528] = -1.65078343E+01;
  COFD[529] = 4.10792536E+00;
  COFD[530] = -3.21060656E-01;
  COFD[531] = 1.40287900E-02;
  COFD[532] = -1.65049033E+01;
  COFD[533] = 4.10792536E+00;
  COFD[534] = -3.21060656E-01;
  COFD[535] = 1.40287900E-02;
  COFD[536] = -1.65049033E+01;
  COFD[537] = 4.10792536E+00;
  COFD[538] = -3.21060656E-01;
  COFD[539] = 1.40287900E-02;
  COFD[540] = -1.46719351E+01;
  COFD[541] = 3.52400594E+00;
  COFD[542] = -2.46379985E-01;
  COFD[543] = 1.08326032E-02;
  COFD[544] = -1.47719669E+01;
  COFD[545] = 3.55444478E+00;
  COFD[546] = -2.50272707E-01;
  COFD[547] = 1.09990787E-02;
  COFD[548] = -1.34824685E+01;
  COFD[549] = 3.09379603E+00;
  COFD[550] = -1.91268635E-01;
  COFD[551] = 8.47480224E-03;
  COFD[552] = -1.25099100E+01;
  COFD[553] = 2.77873601E+00;
  COFD[554] = -1.50637360E-01;
  COFD[555] = 6.72684281E-03;
  COFD[556] = -1.66999798E+01;
  COFD[557] = 4.12591961E+00;
  COFD[558] = -3.23243032E-01;
  COFD[559] = 1.41172864E-02;
  COFD[560] = -1.65341479E+01;
  COFD[561] = 4.13324388E+00;
  COFD[562] = -3.24130022E-01;
  COFD[563] = 1.41531866E-02;
  COFD[564] = -1.65339552E+01;
  COFD[565] = 4.13324388E+00;
  COFD[566] = -3.24130022E-01;
  COFD[567] = 1.41531866E-02;
  COFD[568] = -1.66468893E+01;
  COFD[569] = 4.13722102E+00;
  COFD[570] = -3.24608851E-01;
  COFD[571] = 1.41724276E-02;
  COFD[572] = -1.64926540E+01;
  COFD[573] = 4.09029455E+00;
  COFD[574] = -3.18833424E-01;
  COFD[575] = 1.39345071E-02;
  COFD[576] = -1.66980019E+01;
  COFD[577] = 4.12591961E+00;
  COFD[578] = -3.23243032E-01;
  COFD[579] = 1.41172864E-02;
  COFD[580] = -1.66978665E+01;
  COFD[581] = 4.12591961E+00;
  COFD[582] = -3.23243032E-01;
  COFD[583] = 1.41172864E-02;
  COFD[584] = -1.64899690E+01;
  COFD[585] = 4.01175649E+00;
  COFD[586] = -3.08860971E-01;
  COFD[587] = 1.35100076E-02;
  COFD[588] = -1.64898688E+01;
  COFD[589] = 4.01175649E+00;
  COFD[590] = -3.08860971E-01;
  COFD[591] = 1.35100076E-02;
  COFD[592] = -1.64898688E+01;
  COFD[593] = 4.01175649E+00;
  COFD[594] = -3.08860971E-01;
  COFD[595] = 1.35100076E-02;
  COFD[596] = -1.64898688E+01;
  COFD[597] = 4.01175649E+00;
  COFD[598] = -3.08860971E-01;
  COFD[599] = 1.35100076E-02;
  COFD[600] = -1.64898688E+01;
  COFD[601] = 4.01175649E+00;
  COFD[602] = -3.08860971E-01;
  COFD[603] = 1.35100076E-02;
  COFD[604] = -1.64601543E+01;
  COFD[605] = 4.00718952E+00;
  COFD[606] = -3.08273202E-01;
  COFD[607] = 1.34846532E-02;
  COFD[608] = -1.64601543E+01;
  COFD[609] = 4.00718952E+00;
  COFD[610] = -3.08273202E-01;
  COFD[611] = 1.34846532E-02;
  COFD[612] = -1.72085780E+01;
  COFD[613] = 4.26597898E+00;
  COFD[614] = -3.40497726E-01;
  COFD[615] = 1.48284962E-02;
  COFD[616] = -1.72085780E+01;
  COFD[617] = 4.26597898E+00;
  COFD[618] = -3.40497726E-01;
  COFD[619] = 1.48284962E-02;
  COFD[620] = -1.72085780E+01;
  COFD[621] = 4.26597898E+00;
  COFD[622] = -3.40497726E-01;
  COFD[623] = 1.48284962E-02;
  COFD[624] = -1.72085780E+01;
  COFD[625] = 4.26597898E+00;
  COFD[626] = -3.40497726E-01;
  COFD[627] = 1.48284962E-02;
  COFD[628] = -1.72085780E+01;
  COFD[629] = 4.26597898E+00;
  COFD[630] = -3.40497726E-01;
  COFD[631] = 1.48284962E-02;
  COFD[632] = -1.72085780E+01;
  COFD[633] = 4.26597898E+00;
  COFD[634] = -3.40497726E-01;
  COFD[635] = 1.48284962E-02;
  COFD[636] = -1.72085780E+01;
  COFD[637] = 4.26597898E+00;
  COFD[638] = -3.40497726E-01;
  COFD[639] = 1.48284962E-02;
  COFD[640] = -1.72085780E+01;
  COFD[641] = 4.26597898E+00;
  COFD[642] = -3.40497726E-01;
  COFD[643] = 1.48284962E-02;
  COFD[644] = -1.72085780E+01;
  COFD[645] = 4.26597898E+00;
  COFD[646] = -3.40497726E-01;
  COFD[647] = 1.48284962E-02;
  COFD[648] = -1.72085780E+01;
  COFD[649] = 4.26597898E+00;
  COFD[650] = -3.40497726E-01;
  COFD[651] = 1.48284962E-02;
  COFD[652] = -1.72085780E+01;
  COFD[653] = 4.26597898E+00;
  COFD[654] = -3.40497726E-01;
  COFD[655] = 1.48284962E-02;
  COFD[656] = -1.72085780E+01;
  COFD[657] = 4.26597898E+00;
  COFD[658] = -3.40497726E-01;
  COFD[659] = 1.48284962E-02;
  COFD[660] = -1.75957233E+01;
  COFD[661] = 4.33581289E+00;
  COFD[662] = -3.48934832E-01;
  COFD[663] = 1.51685329E-02;
  COFD[664] = -1.75957233E+01;
  COFD[665] = 4.33581289E+00;
  COFD[666] = -3.48934832E-01;
  COFD[667] = 1.51685329E-02;
  COFD[668] = -1.75957233E+01;
  COFD[669] = 4.33581289E+00;
  COFD[670] = -3.48934832E-01;
  COFD[671] = 1.51685329E-02;
  COFD[672] = -1.75957233E+01;
  COFD[673] = 4.33581289E+00;
  COFD[674] = -3.48934832E-01;
  COFD[675] = 1.51685329E-02;
  COFD[676] = -1.68463514E+01;
  COFD[677] = 4.13808127E+00;
  COFD[678] = -3.24712805E-01;
  COFD[679] = 1.41766221E-02;
  COFD[680] = -1.68463514E+01;
  COFD[681] = 4.13808127E+00;
  COFD[682] = -3.24712805E-01;
  COFD[683] = 1.41766221E-02;
  COFD[684] = -1.73598913E+01;
  COFD[685] = 4.30369076E+00;
  COFD[686] = -3.44934911E-01;
  COFD[687] = 1.50019519E-02;
  COFD[688] = -1.73598913E+01;
  COFD[689] = 4.30369076E+00;
  COFD[690] = -3.44934911E-01;
  COFD[691] = 1.50019519E-02;
  COFD[692] = -1.73598913E+01;
  COFD[693] = 4.30369076E+00;
  COFD[694] = -3.44934911E-01;
  COFD[695] = 1.50019519E-02;
  COFD[696] = -1.73598913E+01;
  COFD[697] = 4.30369076E+00;
  COFD[698] = -3.44934911E-01;
  COFD[699] = 1.50019519E-02;
  COFD[700] = -1.16906458E+01;
  COFD[701] = 2.47469981E+00;
  COFD[702] = -1.10436257E-01;
  COFD[703] = 4.95273813E-03;
  COFD[704] = -1.34230419E+01;
  COFD[705] = 3.48624238E+00;
  COFD[706] = -2.41554467E-01;
  COFD[707] = 1.06263545E-02;
  COFD[708] = -1.09595844E+01;
  COFD[709] = 2.30836460E+00;
  COFD[710] = -8.76339315E-02;
  COFD[711] = 3.90878445E-03;
  COFD[712] = -1.32093517E+01;
  COFD[713] = 2.90778936E+00;
  COFD[714] = -1.67388544E-01;
  COFD[715] = 7.45220609E-03;
  COFD[716] = -1.43139120E+01;
  COFD[717] = 3.17651319E+00;
  COFD[718] = -2.02028974E-01;
  COFD[719] = 8.94232502E-03;
  COFD[720] = -1.32243932E+01;
  COFD[721] = 2.90778936E+00;
  COFD[722] = -1.67388544E-01;
  COFD[723] = 7.45220609E-03;
  COFD[724] = -1.94093476E+01;
  COFD[725] = 5.16013126E+00;
  COFD[726] = -4.46824543E-01;
  COFD[727] = 1.90464887E-02;
  COFD[728] = -1.40998907E+01;
  COFD[729] = 3.08120012E+00;
  COFD[730] = -1.89629903E-01;
  COFD[731] = 8.40361952E-03;
  COFD[732] = -1.94313018E+01;
  COFD[733] = 5.02567894E+00;
  COFD[734] = -4.32045169E-01;
  COFD[735] = 1.85132214E-02;
  COFD[736] = -1.70534750E+01;
  COFD[737] = 4.14240922E+00;
  COFD[738] = -3.25239774E-01;
  COFD[739] = 1.41980687E-02;
  COFD[740] = -1.50766073E+01;
  COFD[741] = 3.47945612E+00;
  COFD[742] = -2.40703722E-01;
  COFD[743] = 1.05907441E-02;
  COFD[744] = -1.50270285E+01;
  COFD[745] = 3.46140064E+00;
  COFD[746] = -2.38440092E-01;
  COFD[747] = 1.04960087E-02;
  COFD[748] = -1.43190281E+01;
  COFD[749] = 3.17651319E+00;
  COFD[750] = -2.02028974E-01;
  COFD[751] = 8.94232502E-03;
  COFD[752] = -1.43238892E+01;
  COFD[753] = 3.17651319E+00;
  COFD[754] = -2.02028974E-01;
  COFD[755] = 8.94232502E-03;
  COFD[756] = -1.94373032E+01;
  COFD[757] = 5.02567894E+00;
  COFD[758] = -4.32045169E-01;
  COFD[759] = 1.85132214E-02;
  COFD[760] = -1.88179325E+01;
  COFD[761] = 4.79683898E+00;
  COFD[762] = -4.04829719E-01;
  COFD[763] = 1.74325475E-02;
  COFD[764] = -1.72112897E+01;
  COFD[765] = 4.15807461E+00;
  COFD[766] = -3.27178539E-01;
  COFD[767] = 1.42784349E-02;
  COFD[768] = -1.68343316E+01;
  COFD[769] = 4.11954900E+00;
  COFD[770] = -3.22470391E-01;
  COFD[771] = 1.40859564E-02;
  COFD[772] = -1.72053030E+01;
  COFD[773] = 4.15807461E+00;
  COFD[774] = -3.27178539E-01;
  COFD[775] = 1.42784349E-02;
  COFD[776] = -1.72285926E+01;
  COFD[777] = 4.24084025E+00;
  COFD[778] = -3.37428619E-01;
  COFD[779] = 1.47032793E-02;
  COFD[780] = -1.72357357E+01;
  COFD[781] = 4.24084025E+00;
  COFD[782] = -3.37428619E-01;
  COFD[783] = 1.47032793E-02;
  COFD[784] = -1.90883170E+01;
  COFD[785] = 4.84384483E+00;
  COFD[786] = -4.10265575E-01;
  COFD[787] = 1.76414287E-02;
  COFD[788] = -1.49500258E+01;
  COFD[789] = 3.52327209E+00;
  COFD[790] = -2.46286208E-01;
  COFD[791] = 1.08285963E-02;
  COFD[792] = -1.90915553E+01;
  COFD[793] = 4.84384483E+00;
  COFD[794] = -4.10265575E-01;
  COFD[795] = 1.76414287E-02;
  COFD[796] = -1.90915553E+01;
  COFD[797] = 4.84384483E+00;
  COFD[798] = -4.10265575E-01;
  COFD[799] = 1.76414287E-02;
  COFD[800] = -1.90946650E+01;
  COFD[801] = 4.84384483E+00;
  COFD[802] = -4.10265575E-01;
  COFD[803] = 1.76414287E-02;
  COFD[804] = -1.81499706E+01;
  COFD[805] = 4.48398491E+00;
  COFD[806] = -3.67097129E-01;
  COFD[807] = 1.59123634E-02;
  COFD[808] = -1.79361074E+01;
  COFD[809] = 4.42139452E+00;
  COFD[810] = -3.59567329E-01;
  COFD[811] = 1.56103969E-02;
  COFD[812] = -1.86652511E+01;
  COFD[813] = 4.61260432E+00;
  COFD[814] = -3.82854484E-01;
  COFD[815] = 1.65575163E-02;
  COFD[816] = -1.80724704E+01;
  COFD[817] = 4.40247898E+00;
  COFD[818] = -3.57238362E-01;
  COFD[819] = 1.55145651E-02;
  COFD[820] = -1.86234610E+01;
  COFD[821] = 4.60336076E+00;
  COFD[822] = -3.81691643E-01;
  COFD[823] = 1.65085234E-02;
  COFD[824] = -1.86254865E+01;
  COFD[825] = 4.60336076E+00;
  COFD[826] = -3.81691643E-01;
  COFD[827] = 1.65085234E-02;
  COFD[828] = -1.87433528E+01;
  COFD[829] = 4.58956960E+00;
  COFD[830] = -3.79964215E-01;
  COFD[831] = 1.64361138E-02;
  COFD[832] = -1.93716811E+01;
  COFD[833] = 4.84285787E+00;
  COFD[834] = -4.10159187E-01;
  COFD[835] = 1.76377079E-02;
  COFD[836] = -1.93190055E+01;
  COFD[837] = 4.84226417E+00;
  COFD[838] = -4.10095110E-01;
  COFD[839] = 1.76354623E-02;
  COFD[840] = -1.92835393E+01;
  COFD[841] = 4.81668879E+00;
  COFD[842] = -4.07151011E-01;
  COFD[843] = 1.75229488E-02;
  COFD[844] = -1.92404489E+01;
  COFD[845] = 4.73921581E+00;
  COFD[846] = -3.98017274E-01;
  COFD[847] = 1.71639614E-02;
  COFD[848] = -1.91632977E+01;
  COFD[849] = 4.70966098E+00;
  COFD[850] = -3.94551217E-01;
  COFD[851] = 1.70286289E-02;
  COFD[852] = -1.95314595E+01;
  COFD[853] = 4.95249173E+00;
  COFD[854] = -4.23376552E-01;
  COFD[855] = 1.81703714E-02;
  COFD[856] = -1.93925565E+01;
  COFD[857] = 4.98286777E+00;
  COFD[858] = -4.26970814E-01;
  COFD[859] = 1.83122917E-02;
  COFD[860] = -1.93952265E+01;
  COFD[861] = 4.98286777E+00;
  COFD[862] = -4.26970814E-01;
  COFD[863] = 1.83122917E-02;
  COFD[864] = -1.92241551E+01;
  COFD[865] = 4.86381280E+00;
  COFD[866] = -4.12606006E-01;
  COFD[867] = 1.77326718E-02;
  COFD[868] = -1.93502982E+01;
  COFD[869] = 4.82794365E+00;
  COFD[870] = -4.08478976E-01;
  COFD[871] = 1.75752177E-02;
  COFD[872] = -1.91805320E+01;
  COFD[873] = 4.78152337E+00;
  COFD[874] = -4.03052726E-01;
  COFD[875] = 1.73639773E-02;
  COFD[876] = -1.99880977E+01;
  COFD[877] = 5.02095434E+00;
  COFD[878] = -4.31496874E-01;
  COFD[879] = 1.84920392E-02;
  COFD[880] = -2.00275405E+01;
  COFD[881] = 5.02095434E+00;
  COFD[882] = -4.31496874E-01;
  COFD[883] = 1.84920392E-02;
  COFD[884] = -2.00070182E+01;
  COFD[885] = 5.02095434E+00;
  COFD[886] = -4.31496874E-01;
  COFD[887] = 1.84920392E-02;
  COFD[888] = -2.00070182E+01;
  COFD[889] = 5.02095434E+00;
  COFD[890] = -4.31496874E-01;
  COFD[891] = 1.84920392E-02;
  COFD[892] = -1.80480872E+01;
  COFD[893] = 4.45434023E+00;
  COFD[894] = -3.63584633E-01;
  COFD[895] = 1.57739270E-02;
  COFD[896] = -1.81463016E+01;
  COFD[897] = 4.48398491E+00;
  COFD[898] = -3.67097129E-01;
  COFD[899] = 1.59123634E-02;
  COFD[900] = -1.66128254E+01;
  COFD[901] = 3.95035840E+00;
  COFD[902] = -3.00959418E-01;
  COFD[903] = 1.31692593E-02;
  COFD[904] = -1.50584188E+01;
  COFD[905] = 3.47945612E+00;
  COFD[906] = -2.40703722E-01;
  COFD[907] = 1.05907441E-02;
  COFD[908] = -2.00037772E+01;
  COFD[909] = 4.96711761E+00;
  COFD[910] = -4.25105068E-01;
  COFD[911] = 1.82385315E-02;
  COFD[912] = -1.96931422E+01;
  COFD[913] = 4.93487070E+00;
  COFD[914] = -4.21288847E-01;
  COFD[915] = 1.80877783E-02;
  COFD[916] = -1.96918566E+01;
  COFD[917] = 4.93487070E+00;
  COFD[918] = -4.21288847E-01;
  COFD[919] = 1.80877783E-02;
  COFD[920] = -1.97011422E+01;
  COFD[921] = 4.90204310E+00;
  COFD[922] = -4.17305709E-01;
  COFD[923] = 1.79261320E-02;
  COFD[924] = -1.99875412E+01;
  COFD[925] = 5.00256652E+00;
  COFD[926] = -4.29312274E-01;
  COFD[927] = 1.84052987E-02;
  COFD[928] = -1.99900704E+01;
  COFD[929] = 4.96711761E+00;
  COFD[930] = -4.25105068E-01;
  COFD[931] = 1.82385315E-02;
  COFD[932] = -1.99891438E+01;
  COFD[933] = 4.96711761E+00;
  COFD[934] = -4.25105068E-01;
  COFD[935] = 1.82385315E-02;
  COFD[936] = -1.99792069E+01;
  COFD[937] = 4.92184026E+00;
  COFD[938] = -4.19745472E-01;
  COFD[939] = 1.80268154E-02;
  COFD[940] = -1.99785079E+01;
  COFD[941] = 4.92184026E+00;
  COFD[942] = -4.19745472E-01;
  COFD[943] = 1.80268154E-02;
  COFD[944] = -1.99785079E+01;
  COFD[945] = 4.92184026E+00;
  COFD[946] = -4.19745472E-01;
  COFD[947] = 1.80268154E-02;
  COFD[948] = -1.99785079E+01;
  COFD[949] = 4.92184026E+00;
  COFD[950] = -4.19745472E-01;
  COFD[951] = 1.80268154E-02;
  COFD[952] = -1.99785079E+01;
  COFD[953] = 4.92184026E+00;
  COFD[954] = -4.19745472E-01;
  COFD[955] = 1.80268154E-02;
  COFD[956] = -1.99424584E+01;
  COFD[957] = 4.91552193E+00;
  COFD[958] = -4.18967265E-01;
  COFD[959] = 1.79947205E-02;
  COFD[960] = -1.99424584E+01;
  COFD[961] = 4.91552193E+00;
  COFD[962] = -4.18967265E-01;
  COFD[963] = 1.79947205E-02;
  COFD[964] = -2.06859442E+01;
  COFD[965] = 5.15084743E+00;
  COFD[966] = -4.46166870E-01;
  COFD[967] = 1.90405241E-02;
  COFD[968] = -2.06859442E+01;
  COFD[969] = 5.15084743E+00;
  COFD[970] = -4.46166870E-01;
  COFD[971] = 1.90405241E-02;
  COFD[972] = -2.06859442E+01;
  COFD[973] = 5.15084743E+00;
  COFD[974] = -4.46166870E-01;
  COFD[975] = 1.90405241E-02;
  COFD[976] = -2.06859442E+01;
  COFD[977] = 5.15084743E+00;
  COFD[978] = -4.46166870E-01;
  COFD[979] = 1.90405241E-02;
  COFD[980] = -2.06859442E+01;
  COFD[981] = 5.15084743E+00;
  COFD[982] = -4.46166870E-01;
  COFD[983] = 1.90405241E-02;
  COFD[984] = -2.06859442E+01;
  COFD[985] = 5.15084743E+00;
  COFD[986] = -4.46166870E-01;
  COFD[987] = 1.90405241E-02;
  COFD[988] = -2.06859442E+01;
  COFD[989] = 5.15084743E+00;
  COFD[990] = -4.46166870E-01;
  COFD[991] = 1.90405241E-02;
  COFD[992] = -2.06859442E+01;
  COFD[993] = 5.15084743E+00;
  COFD[994] = -4.46166870E-01;
  COFD[995] = 1.90405241E-02;
  COFD[996] = -2.06859442E+01;
  COFD[997] = 5.15084743E+00;
  COFD[998] = -4.46166870E-01;
  COFD[999] = 1.90405241E-02;
  COFD[1000] = -2.06859442E+01;
  COFD[1001] = 5.15084743E+00;
  COFD[1002] = -4.46166870E-01;
  COFD[1003] = 1.90405241E-02;
  COFD[1004] = -2.06859442E+01;
  COFD[1005] = 5.15084743E+00;
  COFD[1006] = -4.46166870E-01;
  COFD[1007] = 1.90405241E-02;
  COFD[1008] = -2.06859442E+01;
  COFD[1009] = 5.15084743E+00;
  COFD[1010] = -4.46166870E-01;
  COFD[1011] = 1.90405241E-02;
  COFD[1012] = -2.10956639E+01;
  COFD[1013] = 5.21743360E+00;
  COFD[1014] = -4.53376932E-01;
  COFD[1015] = 1.92954013E-02;
  COFD[1016] = -2.10956639E+01;
  COFD[1017] = 5.21743360E+00;
  COFD[1018] = -4.53376932E-01;
  COFD[1019] = 1.92954013E-02;
  COFD[1020] = -2.10956639E+01;
  COFD[1021] = 5.21743360E+00;
  COFD[1022] = -4.53376932E-01;
  COFD[1023] = 1.92954013E-02;
  COFD[1024] = -2.10956639E+01;
  COFD[1025] = 5.21743360E+00;
  COFD[1026] = -4.53376932E-01;
  COFD[1027] = 1.92954013E-02;
  COFD[1028] = -2.03920152E+01;
  COFD[1029] = 5.05863192E+00;
  COFD[1030] = -4.35922417E-01;
  COFD[1031] = 1.86655574E-02;
  COFD[1032] = -2.03920152E+01;
  COFD[1033] = 5.05863192E+00;
  COFD[1034] = -4.35922417E-01;
  COFD[1035] = 1.86655574E-02;
  COFD[1036] = -2.08183453E+01;
  COFD[1037] = 5.17587280E+00;
  COFD[1038] = -4.48540980E-01;
  COFD[1039] = 1.91076775E-02;
  COFD[1040] = -2.08183453E+01;
  COFD[1041] = 5.17587280E+00;
  COFD[1042] = -4.48540980E-01;
  COFD[1043] = 1.91076775E-02;
  COFD[1044] = -2.08183453E+01;
  COFD[1045] = 5.17587280E+00;
  COFD[1046] = -4.48540980E-01;
  COFD[1047] = 1.91076775E-02;
  COFD[1048] = -2.08183453E+01;
  COFD[1049] = 5.17587280E+00;
  COFD[1050] = -4.48540980E-01;
  COFD[1051] = 1.91076775E-02;
  COFD[1052] = -1.40756909E+01;
  COFD[1053] = 3.07549274E+00;
  COFD[1054] = -1.88889344E-01;
  COFD[1055] = 8.37152866E-03;
  COFD[1056] = -1.46550238E+01;
  COFD[1057] = 3.83606243E+00;
  COFD[1058] = -2.86076532E-01;
  COFD[1059] = 1.25205829E-02;
  COFD[1060] = -1.18989101E+01;
  COFD[1061] = 2.57507000E+00;
  COFD[1062] = -1.24033737E-01;
  COFD[1063] = 5.56694959E-03;
  COFD[1064] = -1.43139120E+01;
  COFD[1065] = 3.17651319E+00;
  COFD[1066] = -2.02028974E-01;
  COFD[1067] = 8.94232502E-03;
  COFD[1068] = -1.55511233E+01;
  COFD[1069] = 3.48070094E+00;
  COFD[1070] = -2.40859499E-01;
  COFD[1071] = 1.05972514E-02;
  COFD[1072] = -1.43340695E+01;
  COFD[1073] = 3.17651319E+00;
  COFD[1074] = -2.02028974E-01;
  COFD[1075] = 8.94232502E-03;
  COFD[1076] = -2.12652444E+01;
  COFD[1077] = 5.59961822E+00;
  COFD[1078] = -4.91624856E-01;
  COFD[1079] = 2.05035546E-02;
  COFD[1080] = -1.52721010E+01;
  COFD[1081] = 3.36790500E+00;
  COFD[1082] = -2.26321740E-01;
  COFD[1083] = 9.97135055E-03;
  COFD[1084] = -2.08204356E+01;
  COFD[1085] = 5.35267674E+00;
  COFD[1086] = -4.69010505E-01;
  COFD[1087] = 1.98979152E-02;
  COFD[1088] = -1.84688303E+01;
  COFD[1089] = 4.49330851E+00;
  COFD[1090] = -3.68208715E-01;
  COFD[1091] = 1.59565402E-02;
  COFD[1092] = -1.63493305E+01;
  COFD[1093] = 3.82388595E+00;
  COFD[1094] = -2.84480724E-01;
  COFD[1095] = 1.24506311E-02;
  COFD[1096] = -1.62724429E+01;
  COFD[1097] = 3.79163564E+00;
  COFD[1098] = -2.80257365E-01;
  COFD[1099] = 1.22656902E-02;
  COFD[1100] = -1.55588172E+01;
  COFD[1101] = 3.48070094E+00;
  COFD[1102] = -2.40859499E-01;
  COFD[1103] = 1.05972514E-02;
  COFD[1104] = -1.55661647E+01;
  COFD[1105] = 3.48070094E+00;
  COFD[1106] = -2.40859499E-01;
  COFD[1107] = 1.05972514E-02;
  COFD[1108] = -2.08293167E+01;
  COFD[1109] = 5.35267674E+00;
  COFD[1110] = -4.69010505E-01;
  COFD[1111] = 1.98979152E-02;
  COFD[1112] = -2.04928875E+01;
  COFD[1113] = 5.22397941E+00;
  COFD[1114] = -4.54138181E-01;
  COFD[1115] = 1.93249289E-02;
  COFD[1116] = -1.85844631E+01;
  COFD[1117] = 4.51052425E+00;
  COFD[1118] = -3.70301627E-01;
  COFD[1119] = 1.60416153E-02;
  COFD[1120] = -1.82145292E+01;
  COFD[1121] = 4.46848269E+00;
  COFD[1122] = -3.65269718E-01;
  COFD[1123] = 1.58407652E-02;
  COFD[1124] = -1.85756017E+01;
  COFD[1125] = 4.51052425E+00;
  COFD[1126] = -3.70301627E-01;
  COFD[1127] = 1.60416153E-02;
  COFD[1128] = -1.86507146E+01;
  COFD[1129] = 4.60874797E+00;
  COFD[1130] = -3.82368716E-01;
  COFD[1131] = 1.65370164E-02;
  COFD[1132] = -1.86610959E+01;
  COFD[1133] = 4.60874797E+00;
  COFD[1134] = -3.82368716E-01;
  COFD[1135] = 1.65370164E-02;
  COFD[1136] = -2.05184780E+01;
  COFD[1137] = 5.18417470E+00;
  COFD[1138] = -4.49491573E-01;
  COFD[1139] = 1.91438508E-02;
  COFD[1140] = -1.64169341E+01;
  COFD[1141] = 3.89309916E+00;
  COFD[1142] = -2.93528188E-01;
  COFD[1143] = 1.28463177E-02;
  COFD[1144] = -2.05235643E+01;
  COFD[1145] = 5.18417470E+00;
  COFD[1146] = -4.49491573E-01;
  COFD[1147] = 1.91438508E-02;
  COFD[1148] = -2.05235643E+01;
  COFD[1149] = 5.18417470E+00;
  COFD[1150] = -4.49491573E-01;
  COFD[1151] = 1.91438508E-02;
  COFD[1152] = -2.05284666E+01;
  COFD[1153] = 5.18417470E+00;
  COFD[1154] = -4.49491573E-01;
  COFD[1155] = 1.91438508E-02;
  COFD[1156] = -1.95875902E+01;
  COFD[1157] = 4.84393038E+00;
  COFD[1158] = -4.10274737E-01;
  COFD[1159] = 1.76417458E-02;
  COFD[1160] = -1.93917227E+01;
  COFD[1161] = 4.78708023E+00;
  COFD[1162] = -4.03693144E-01;
  COFD[1163] = 1.73884817E-02;
  COFD[1164] = -2.01315523E+01;
  COFD[1165] = 4.97613338E+00;
  COFD[1166] = -4.26175206E-01;
  COFD[1167] = 1.82809270E-02;
  COFD[1168] = -1.95201761E+01;
  COFD[1169] = 4.77151544E+00;
  COFD[1170] = -4.01882811E-01;
  COFD[1171] = 1.73184814E-02;
  COFD[1172] = -2.00964587E+01;
  COFD[1173] = 4.96870443E+00;
  COFD[1174] = -4.25292447E-01;
  COFD[1175] = 1.82459096E-02;
  COFD[1176] = -2.00997697E+01;
  COFD[1177] = 4.96870443E+00;
  COFD[1178] = -4.25292447E-01;
  COFD[1179] = 1.82459096E-02;
  COFD[1180] = -2.02121587E+01;
  COFD[1181] = 4.95786261E+00;
  COFD[1182] = -4.24013131E-01;
  COFD[1183] = 1.81955669E-02;
  COFD[1184] = -2.08010726E+01;
  COFD[1185] = 5.18275931E+00;
  COFD[1186] = -4.49328195E-01;
  COFD[1187] = 1.91375697E-02;
  COFD[1188] = -2.11290378E+01;
  COFD[1189] = 5.30927166E+00;
  COFD[1190] = -4.64268857E-01;
  COFD[1191] = 1.97275654E-02;
  COFD[1192] = -2.07148889E+01;
  COFD[1193] = 5.15830988E+00;
  COFD[1194] = -4.46702918E-01;
  COFD[1195] = 1.90459497E-02;
  COFD[1196] = -2.07257190E+01;
  COFD[1197] = 5.10688723E+00;
  COFD[1198] = -4.41563971E-01;
  COFD[1199] = 1.88857198E-02;
  COFD[1200] = -2.06463061E+01;
  COFD[1201] = 5.07657482E+00;
  COFD[1202] = -4.38028805E-01;
  COFD[1203] = 1.87481371E-02;
  COFD[1204] = -2.09480967E+01;
  COFD[1205] = 5.28755355E+00;
  COFD[1206] = -4.61641920E-01;
  COFD[1207] = 1.96208961E-02;
  COFD[1208] = -2.08463112E+01;
  COFD[1209] = 5.32244593E+00;
  COFD[1210] = -4.65829403E-01;
  COFD[1211] = 1.97895274E-02;
  COFD[1212] = -2.08505769E+01;
  COFD[1213] = 5.32244593E+00;
  COFD[1214] = -4.65829403E-01;
  COFD[1215] = 1.97895274E-02;
  COFD[1216] = -2.06742792E+01;
  COFD[1217] = 5.20540788E+00;
  COFD[1218] = -4.51975238E-01;
  COFD[1219] = 1.92408880E-02;
  COFD[1220] = -2.11152381E+01;
  COFD[1221] = 5.28136553E+00;
  COFD[1222] = -4.60892932E-01;
  COFD[1223] = 1.95904904E-02;
  COFD[1224] = -2.06513233E+01;
  COFD[1225] = 5.14159226E+00;
  COFD[1226] = -4.45395793E-01;
  COFD[1227] = 1.90248052E-02;
  COFD[1228] = -2.14092253E+01;
  COFD[1229] = 5.35040988E+00;
  COFD[1230] = -4.68827063E-01;
  COFD[1231] = 1.98944407E-02;
  COFD[1232] = -2.14778034E+01;
  COFD[1233] = 5.35040988E+00;
  COFD[1234] = -4.68827063E-01;
  COFD[1235] = 1.98944407E-02;
  COFD[1236] = -2.14416242E+01;
  COFD[1237] = 5.35040988E+00;
  COFD[1238] = -4.68827063E-01;
  COFD[1239] = 1.98944407E-02;
  COFD[1240] = -2.14416242E+01;
  COFD[1241] = 5.35040988E+00;
  COFD[1242] = -4.68827063E-01;
  COFD[1243] = 1.98944407E-02;
  COFD[1244] = -1.94912078E+01;
  COFD[1245] = 4.81575071E+00;
  COFD[1246] = -4.07042139E-01;
  COFD[1247] = 1.75187504E-02;
  COFD[1248] = -1.95818930E+01;
  COFD[1249] = 4.84393038E+00;
  COFD[1250] = -4.10274737E-01;
  COFD[1251] = 1.76417458E-02;
  COFD[1252] = -1.79790942E+01;
  COFD[1253] = 4.29613154E+00;
  COFD[1254] = -3.44012526E-01;
  COFD[1255] = 1.49643715E-02;
  COFD[1256] = -1.63254645E+01;
  COFD[1257] = 3.82388595E+00;
  COFD[1258] = -2.84480724E-01;
  COFD[1259] = 1.24506311E-02;
  COFD[1260] = -2.15981916E+01;
  COFD[1261] = 5.35156265E+00;
  COFD[1262] = -4.68920349E-01;
  COFD[1263] = 1.98962075E-02;
  COFD[1264] = -2.13738245E+01;
  COFD[1265] = 5.35079942E+00;
  COFD[1266] = -4.68858587E-01;
  COFD[1267] = 1.98950377E-02;
  COFD[1268] = -2.13716505E+01;
  COFD[1269] = 5.35079942E+00;
  COFD[1270] = -4.68858587E-01;
  COFD[1271] = 1.98950377E-02;
  COFD[1272] = -2.14602192E+01;
  COFD[1273] = 5.34913044E+00;
  COFD[1274] = -4.68723517E-01;
  COFD[1275] = 1.98924792E-02;
  COFD[1276] = -2.14322077E+01;
  COFD[1277] = 5.33921751E+00;
  COFD[1278] = -4.67712601E-01;
  COFD[1279] = 1.98596515E-02;
  COFD[1280] = -2.15742484E+01;
  COFD[1281] = 5.35156265E+00;
  COFD[1282] = -4.68920349E-01;
  COFD[1283] = 1.98962075E-02;
  COFD[1284] = -2.15726472E+01;
  COFD[1285] = 5.35156265E+00;
  COFD[1286] = -4.68920349E-01;
  COFD[1287] = 1.98962075E-02;
  COFD[1288] = -2.13968193E+01;
  COFD[1289] = 5.25183817E+00;
  COFD[1290] = -4.57376333E-01;
  COFD[1291] = 1.94504429E-02;
  COFD[1292] = -2.13955911E+01;
  COFD[1293] = 5.25183817E+00;
  COFD[1294] = -4.57376333E-01;
  COFD[1295] = 1.94504429E-02;
  COFD[1296] = -2.13955911E+01;
  COFD[1297] = 5.25183817E+00;
  COFD[1298] = -4.57376333E-01;
  COFD[1299] = 1.94504429E-02;
  COFD[1300] = -2.13955911E+01;
  COFD[1301] = 5.25183817E+00;
  COFD[1302] = -4.57376333E-01;
  COFD[1303] = 1.94504429E-02;
  COFD[1304] = -2.13955911E+01;
  COFD[1305] = 5.25183817E+00;
  COFD[1306] = -4.57376333E-01;
  COFD[1307] = 1.94504429E-02;
  COFD[1308] = -2.13639423E+01;
  COFD[1309] = 5.24703101E+00;
  COFD[1310] = -4.56809732E-01;
  COFD[1311] = 1.94281325E-02;
  COFD[1312] = -2.13639423E+01;
  COFD[1313] = 5.24703101E+00;
  COFD[1314] = -4.56809732E-01;
  COFD[1315] = 1.94281325E-02;
  COFD[1316] = -2.19892992E+01;
  COFD[1317] = 5.41528536E+00;
  COFD[1318] = -4.73395924E-01;
  COFD[1319] = 1.99371023E-02;
  COFD[1320] = -2.19892992E+01;
  COFD[1321] = 5.41528536E+00;
  COFD[1322] = -4.73395924E-01;
  COFD[1323] = 1.99371023E-02;
  COFD[1324] = -2.19892992E+01;
  COFD[1325] = 5.41528536E+00;
  COFD[1326] = -4.73395924E-01;
  COFD[1327] = 1.99371023E-02;
  COFD[1328] = -2.19892992E+01;
  COFD[1329] = 5.41528536E+00;
  COFD[1330] = -4.73395924E-01;
  COFD[1331] = 1.99371023E-02;
  COFD[1332] = -2.19892992E+01;
  COFD[1333] = 5.41528536E+00;
  COFD[1334] = -4.73395924E-01;
  COFD[1335] = 1.99371023E-02;
  COFD[1336] = -2.19892992E+01;
  COFD[1337] = 5.41528536E+00;
  COFD[1338] = -4.73395924E-01;
  COFD[1339] = 1.99371023E-02;
  COFD[1340] = -2.19892992E+01;
  COFD[1341] = 5.41528536E+00;
  COFD[1342] = -4.73395924E-01;
  COFD[1343] = 1.99371023E-02;
  COFD[1344] = -2.19892992E+01;
  COFD[1345] = 5.41528536E+00;
  COFD[1346] = -4.73395924E-01;
  COFD[1347] = 1.99371023E-02;
  COFD[1348] = -2.19892992E+01;
  COFD[1349] = 5.41528536E+00;
  COFD[1350] = -4.73395924E-01;
  COFD[1351] = 1.99371023E-02;
  COFD[1352] = -2.19892992E+01;
  COFD[1353] = 5.41528536E+00;
  COFD[1354] = -4.73395924E-01;
  COFD[1355] = 1.99371023E-02;
  COFD[1356] = -2.19892992E+01;
  COFD[1357] = 5.41528536E+00;
  COFD[1358] = -4.73395924E-01;
  COFD[1359] = 1.99371023E-02;
  COFD[1360] = -2.19892992E+01;
  COFD[1361] = 5.41528536E+00;
  COFD[1362] = -4.73395924E-01;
  COFD[1363] = 1.99371023E-02;
  COFD[1364] = -2.23772023E+01;
  COFD[1365] = 5.47401767E+00;
  COFD[1366] = -4.79460651E-01;
  COFD[1367] = 2.01386224E-02;
  COFD[1368] = -2.23772023E+01;
  COFD[1369] = 5.47401767E+00;
  COFD[1370] = -4.79460651E-01;
  COFD[1371] = 2.01386224E-02;
  COFD[1372] = -2.23772023E+01;
  COFD[1373] = 5.47401767E+00;
  COFD[1374] = -4.79460651E-01;
  COFD[1375] = 2.01386224E-02;
  COFD[1376] = -2.23772023E+01;
  COFD[1377] = 5.47401767E+00;
  COFD[1378] = -4.79460651E-01;
  COFD[1379] = 2.01386224E-02;
  COFD[1380] = -2.17710971E+01;
  COFD[1381] = 5.36593635E+00;
  COFD[1382] = -4.69961498E-01;
  COFD[1383] = 1.99078595E-02;
  COFD[1384] = -2.17710971E+01;
  COFD[1385] = 5.36593635E+00;
  COFD[1386] = -4.69961498E-01;
  COFD[1387] = 1.99078595E-02;
  COFD[1388] = -2.21352015E+01;
  COFD[1389] = 5.44360767E+00;
  COFD[1390] = -4.76093122E-01;
  COFD[1391] = 2.00152977E-02;
  COFD[1392] = -2.21352015E+01;
  COFD[1393] = 5.44360767E+00;
  COFD[1394] = -4.76093122E-01;
  COFD[1395] = 2.00152977E-02;
  COFD[1396] = -2.21352015E+01;
  COFD[1397] = 5.44360767E+00;
  COFD[1398] = -4.76093122E-01;
  COFD[1399] = 2.00152977E-02;
  COFD[1400] = -2.21352015E+01;
  COFD[1401] = 5.44360767E+00;
  COFD[1402] = -4.76093122E-01;
  COFD[1403] = 2.00152977E-02;
  COFD[1404] = -1.52414498E+01;
  COFD[1405] = 3.35922578E+00;
  COFD[1406] = -2.25181399E-01;
  COFD[1407] = 9.92132878E-03;
  COFD[1408] = -1.34248014E+01;
  COFD[1409] = 3.48624238E+00;
  COFD[1410] = -2.41554467E-01;
  COFD[1411] = 1.06263545E-02;
  COFD[1412] = -1.09629118E+01;
  COFD[1413] = 2.30836460E+00;
  COFD[1414] = -8.76339315E-02;
  COFD[1415] = 3.90878445E-03;
  COFD[1416] = -1.32243932E+01;
  COFD[1417] = 2.90778936E+00;
  COFD[1418] = -1.67388544E-01;
  COFD[1419] = 7.45220609E-03;
  COFD[1420] = -1.43340695E+01;
  COFD[1421] = 3.17651319E+00;
  COFD[1422] = -2.02028974E-01;
  COFD[1423] = 8.94232502E-03;
  COFD[1424] = -1.32399011E+01;
  COFD[1425] = 2.90778936E+00;
  COFD[1426] = -1.67388544E-01;
  COFD[1427] = 7.45220609E-03;
  COFD[1428] = -1.94252948E+01;
  COFD[1429] = 5.16013126E+00;
  COFD[1430] = -4.46824543E-01;
  COFD[1431] = 1.90464887E-02;
  COFD[1432] = -1.41191170E+01;
  COFD[1433] = 3.08120012E+00;
  COFD[1434] = -1.89629903E-01;
  COFD[1435] = 8.40361952E-03;
  COFD[1436] = -1.94507789E+01;
  COFD[1437] = 5.02567894E+00;
  COFD[1438] = -4.32045169E-01;
  COFD[1439] = 1.85132214E-02;
  COFD[1440] = -1.70756953E+01;
  COFD[1441] = 4.14240922E+00;
  COFD[1442] = -3.25239774E-01;
  COFD[1443] = 1.41980687E-02;
  COFD[1444] = -1.50911746E+01;
  COFD[1445] = 3.47945612E+00;
  COFD[1446] = -2.40703722E-01;
  COFD[1447] = 1.05907441E-02;
  COFD[1448] = -1.50420909E+01;
  COFD[1449] = 3.46140064E+00;
  COFD[1450] = -2.38440092E-01;
  COFD[1451] = 1.04960087E-02;
  COFD[1452] = -1.43393972E+01;
  COFD[1453] = 3.17651319E+00;
  COFD[1454] = -2.02028974E-01;
  COFD[1455] = 8.94232502E-03;
  COFD[1456] = -1.43444614E+01;
  COFD[1457] = 3.17651319E+00;
  COFD[1458] = -2.02028974E-01;
  COFD[1459] = 8.94232502E-03;
  COFD[1460] = -1.94570202E+01;
  COFD[1461] = 5.02567894E+00;
  COFD[1462] = -4.32045169E-01;
  COFD[1463] = 1.85132214E-02;
  COFD[1464] = -1.88378792E+01;
  COFD[1465] = 4.79683898E+00;
  COFD[1466] = -4.04829719E-01;
  COFD[1467] = 1.74325475E-02;
  COFD[1468] = -1.72310169E+01;
  COFD[1469] = 4.15807461E+00;
  COFD[1470] = -3.27178539E-01;
  COFD[1471] = 1.42784349E-02;
  COFD[1472] = -1.68535691E+01;
  COFD[1473] = 4.11954900E+00;
  COFD[1474] = -3.22470391E-01;
  COFD[1475] = 1.40859564E-02;
  COFD[1476] = -1.72247908E+01;
  COFD[1477] = 4.15807461E+00;
  COFD[1478] = -3.27178539E-01;
  COFD[1479] = 1.42784349E-02;
  COFD[1480] = -1.72472941E+01;
  COFD[1481] = 4.24084025E+00;
  COFD[1482] = -3.37428619E-01;
  COFD[1483] = 1.47032793E-02;
  COFD[1484] = -1.72547115E+01;
  COFD[1485] = 4.24084025E+00;
  COFD[1486] = -3.37428619E-01;
  COFD[1487] = 1.47032793E-02;
  COFD[1488] = -1.91102567E+01;
  COFD[1489] = 4.84384483E+00;
  COFD[1490] = -4.10265575E-01;
  COFD[1491] = 1.76414287E-02;
  COFD[1492] = -1.49718147E+01;
  COFD[1493] = 3.52327209E+00;
  COFD[1494] = -2.46286208E-01;
  COFD[1495] = 1.08285963E-02;
  COFD[1496] = -1.91136407E+01;
  COFD[1497] = 4.84384483E+00;
  COFD[1498] = -4.10265575E-01;
  COFD[1499] = 1.76414287E-02;
  COFD[1500] = -1.91136407E+01;
  COFD[1501] = 4.84384483E+00;
  COFD[1502] = -4.10265575E-01;
  COFD[1503] = 1.76414287E-02;
  COFD[1504] = -1.91168913E+01;
  COFD[1505] = 4.84384483E+00;
  COFD[1506] = -4.10265575E-01;
  COFD[1507] = 1.76414287E-02;
  COFD[1508] = -1.81716102E+01;
  COFD[1509] = 4.48398491E+00;
  COFD[1510] = -3.67097129E-01;
  COFD[1511] = 1.59123634E-02;
  COFD[1512] = -1.79580536E+01;
  COFD[1513] = 4.42139452E+00;
  COFD[1514] = -3.59567329E-01;
  COFD[1515] = 1.56103969E-02;
  COFD[1516] = -1.86886611E+01;
  COFD[1517] = 4.61260432E+00;
  COFD[1518] = -3.82854484E-01;
  COFD[1519] = 1.65575163E-02;
  COFD[1520] = -1.80945621E+01;
  COFD[1521] = 4.40247898E+00;
  COFD[1522] = -3.57238362E-01;
  COFD[1523] = 1.55145651E-02;
  COFD[1524] = -1.86469715E+01;
  COFD[1525] = 4.60336076E+00;
  COFD[1526] = -3.81691643E-01;
  COFD[1527] = 1.65085234E-02;
  COFD[1528] = -1.86490947E+01;
  COFD[1529] = 4.60336076E+00;
  COFD[1530] = -3.81691643E-01;
  COFD[1531] = 1.65085234E-02;
  COFD[1532] = -1.87670561E+01;
  COFD[1533] = 4.58956960E+00;
  COFD[1534] = -3.79964215E-01;
  COFD[1535] = 1.64361138E-02;
  COFD[1536] = -1.93953802E+01;
  COFD[1537] = 4.84285787E+00;
  COFD[1538] = -4.10159187E-01;
  COFD[1539] = 1.76377079E-02;
  COFD[1540] = -1.93427972E+01;
  COFD[1541] = 4.84226417E+00;
  COFD[1542] = -4.10095110E-01;
  COFD[1543] = 1.76354623E-02;
  COFD[1544] = -1.93072384E+01;
  COFD[1545] = 4.81668879E+00;
  COFD[1546] = -4.07151011E-01;
  COFD[1547] = 1.75229488E-02;
  COFD[1548] = -1.92651124E+01;
  COFD[1549] = 4.73921581E+00;
  COFD[1550] = -3.98017274E-01;
  COFD[1551] = 1.71639614E-02;
  COFD[1552] = -1.91880298E+01;
  COFD[1553] = 4.70966098E+00;
  COFD[1554] = -3.94551217E-01;
  COFD[1555] = 1.70286289E-02;
  COFD[1556] = -1.95538221E+01;
  COFD[1557] = 4.95249173E+00;
  COFD[1558] = -4.23376552E-01;
  COFD[1559] = 1.81703714E-02;
  COFD[1560] = -1.94151732E+01;
  COFD[1561] = 4.98286777E+00;
  COFD[1562] = -4.26970814E-01;
  COFD[1563] = 1.83122917E-02;
  COFD[1564] = -1.94179671E+01;
  COFD[1565] = 4.98286777E+00;
  COFD[1566] = -4.26970814E-01;
  COFD[1567] = 1.83122917E-02;
  COFD[1568] = -1.92476613E+01;
  COFD[1569] = 4.86381280E+00;
  COFD[1570] = -4.12606006E-01;
  COFD[1571] = 1.77326718E-02;
  COFD[1572] = -1.93739022E+01;
  COFD[1573] = 4.82794365E+00;
  COFD[1574] = -4.08478976E-01;
  COFD[1575] = 1.75752177E-02;
  COFD[1576] = -1.92042311E+01;
  COFD[1577] = 4.78152337E+00;
  COFD[1578] = -4.03052726E-01;
  COFD[1579] = 1.73639773E-02;
  COFD[1580] = -2.00128937E+01;
  COFD[1581] = 5.02095434E+00;
  COFD[1582] = -4.31496874E-01;
  COFD[1583] = 1.84920392E-02;
  COFD[1584] = -2.00544275E+01;
  COFD[1585] = 5.02095434E+00;
  COFD[1586] = -4.31496874E-01;
  COFD[1587] = 1.84920392E-02;
  COFD[1588] = -2.00327957E+01;
  COFD[1589] = 5.02095434E+00;
  COFD[1590] = -4.31496874E-01;
  COFD[1591] = 1.84920392E-02;
  COFD[1592] = -2.00327957E+01;
  COFD[1593] = 5.02095434E+00;
  COFD[1594] = -4.31496874E-01;
  COFD[1595] = 1.84920392E-02;
  COFD[1596] = -1.80698827E+01;
  COFD[1597] = 4.45434023E+00;
  COFD[1598] = -3.63584633E-01;
  COFD[1599] = 1.57739270E-02;
  COFD[1600] = -1.81677795E+01;
  COFD[1601] = 4.48398491E+00;
  COFD[1602] = -3.67097129E-01;
  COFD[1603] = 1.59123634E-02;
  COFD[1604] = -1.66341357E+01;
  COFD[1605] = 3.95035840E+00;
  COFD[1606] = -3.00959418E-01;
  COFD[1607] = 1.31692593E-02;
  COFD[1608] = -1.50724583E+01;
  COFD[1609] = 3.47945612E+00;
  COFD[1610] = -2.40703722E-01;
  COFD[1611] = 1.05907441E-02;
  COFD[1612] = -2.00301477E+01;
  COFD[1613] = 4.96711761E+00;
  COFD[1614] = -4.25105068E-01;
  COFD[1615] = 1.82385315E-02;
  COFD[1616] = -1.97180037E+01;
  COFD[1617] = 4.93487070E+00;
  COFD[1618] = -4.21288847E-01;
  COFD[1619] = 1.80877783E-02;
  COFD[1620] = -1.97166527E+01;
  COFD[1621] = 4.93487070E+00;
  COFD[1622] = -4.21288847E-01;
  COFD[1623] = 1.80877783E-02;
  COFD[1624] = -1.97259382E+01;
  COFD[1625] = 4.90204310E+00;
  COFD[1626] = -4.17305709E-01;
  COFD[1627] = 1.79261320E-02;
  COFD[1628] = -2.00131313E+01;
  COFD[1629] = 5.00256652E+00;
  COFD[1630] = -4.29312274E-01;
  COFD[1631] = 1.84052987E-02;
  COFD[1632] = -2.00157092E+01;
  COFD[1633] = 4.96711761E+00;
  COFD[1634] = -4.25105068E-01;
  COFD[1635] = 1.82385315E-02;
  COFD[1636] = -2.00147339E+01;
  COFD[1637] = 4.96711761E+00;
  COFD[1638] = -4.25105068E-01;
  COFD[1639] = 1.82385315E-02;
  COFD[1640] = -2.00054378E+01;
  COFD[1641] = 4.92184026E+00;
  COFD[1642] = -4.19745472E-01;
  COFD[1643] = 1.80268154E-02;
  COFD[1644] = -2.00047011E+01;
  COFD[1645] = 4.92184026E+00;
  COFD[1646] = -4.19745472E-01;
  COFD[1647] = 1.80268154E-02;
  COFD[1648] = -2.00047011E+01;
  COFD[1649] = 4.92184026E+00;
  COFD[1650] = -4.19745472E-01;
  COFD[1651] = 1.80268154E-02;
  COFD[1652] = -2.00047011E+01;
  COFD[1653] = 4.92184026E+00;
  COFD[1654] = -4.19745472E-01;
  COFD[1655] = 1.80268154E-02;
  COFD[1656] = -2.00047011E+01;
  COFD[1657] = 4.92184026E+00;
  COFD[1658] = -4.19745472E-01;
  COFD[1659] = 1.80268154E-02;
  COFD[1660] = -1.99686134E+01;
  COFD[1661] = 4.91552193E+00;
  COFD[1662] = -4.18967265E-01;
  COFD[1663] = 1.79947205E-02;
  COFD[1664] = -1.99686134E+01;
  COFD[1665] = 4.91552193E+00;
  COFD[1666] = -4.18967265E-01;
  COFD[1667] = 1.79947205E-02;
  COFD[1668] = -2.07130812E+01;
  COFD[1669] = 5.15084743E+00;
  COFD[1670] = -4.46166870E-01;
  COFD[1671] = 1.90405241E-02;
  COFD[1672] = -2.07130812E+01;
  COFD[1673] = 5.15084743E+00;
  COFD[1674] = -4.46166870E-01;
  COFD[1675] = 1.90405241E-02;
  COFD[1676] = -2.07130812E+01;
  COFD[1677] = 5.15084743E+00;
  COFD[1678] = -4.46166870E-01;
  COFD[1679] = 1.90405241E-02;
  COFD[1680] = -2.07130812E+01;
  COFD[1681] = 5.15084743E+00;
  COFD[1682] = -4.46166870E-01;
  COFD[1683] = 1.90405241E-02;
  COFD[1684] = -2.07130812E+01;
  COFD[1685] = 5.15084743E+00;
  COFD[1686] = -4.46166870E-01;
  COFD[1687] = 1.90405241E-02;
  COFD[1688] = -2.07130812E+01;
  COFD[1689] = 5.15084743E+00;
  COFD[1690] = -4.46166870E-01;
  COFD[1691] = 1.90405241E-02;
  COFD[1692] = -2.07130812E+01;
  COFD[1693] = 5.15084743E+00;
  COFD[1694] = -4.46166870E-01;
  COFD[1695] = 1.90405241E-02;
  COFD[1696] = -2.07130812E+01;
  COFD[1697] = 5.15084743E+00;
  COFD[1698] = -4.46166870E-01;
  COFD[1699] = 1.90405241E-02;
  COFD[1700] = -2.07130812E+01;
  COFD[1701] = 5.15084743E+00;
  COFD[1702] = -4.46166870E-01;
  COFD[1703] = 1.90405241E-02;
  COFD[1704] = -2.07130812E+01;
  COFD[1705] = 5.15084743E+00;
  COFD[1706] = -4.46166870E-01;
  COFD[1707] = 1.90405241E-02;
  COFD[1708] = -2.07130812E+01;
  COFD[1709] = 5.15084743E+00;
  COFD[1710] = -4.46166870E-01;
  COFD[1711] = 1.90405241E-02;
  COFD[1712] = -2.07130812E+01;
  COFD[1713] = 5.15084743E+00;
  COFD[1714] = -4.46166870E-01;
  COFD[1715] = 1.90405241E-02;
  COFD[1716] = -2.11234086E+01;
  COFD[1717] = 5.21743360E+00;
  COFD[1718] = -4.53376932E-01;
  COFD[1719] = 1.92954013E-02;
  COFD[1720] = -2.11234086E+01;
  COFD[1721] = 5.21743360E+00;
  COFD[1722] = -4.53376932E-01;
  COFD[1723] = 1.92954013E-02;
  COFD[1724] = -2.11234086E+01;
  COFD[1725] = 5.21743360E+00;
  COFD[1726] = -4.53376932E-01;
  COFD[1727] = 1.92954013E-02;
  COFD[1728] = -2.11234086E+01;
  COFD[1729] = 5.21743360E+00;
  COFD[1730] = -4.53376932E-01;
  COFD[1731] = 1.92954013E-02;
  COFD[1732] = -2.04187082E+01;
  COFD[1733] = 5.05863192E+00;
  COFD[1734] = -4.35922417E-01;
  COFD[1735] = 1.86655574E-02;
  COFD[1736] = -2.04187082E+01;
  COFD[1737] = 5.05863192E+00;
  COFD[1738] = -4.35922417E-01;
  COFD[1739] = 1.86655574E-02;
  COFD[1740] = -2.08457967E+01;
  COFD[1741] = 5.17587280E+00;
  COFD[1742] = -4.48540980E-01;
  COFD[1743] = 1.91076775E-02;
  COFD[1744] = -2.08457967E+01;
  COFD[1745] = 5.17587280E+00;
  COFD[1746] = -4.48540980E-01;
  COFD[1747] = 1.91076775E-02;
  COFD[1748] = -2.08457967E+01;
  COFD[1749] = 5.17587280E+00;
  COFD[1750] = -4.48540980E-01;
  COFD[1751] = 1.91076775E-02;
  COFD[1752] = -2.08457967E+01;
  COFD[1753] = 5.17587280E+00;
  COFD[1754] = -4.48540980E-01;
  COFD[1755] = 1.91076775E-02;
  COFD[1756] = -1.40949183E+01;
  COFD[1757] = 3.07549274E+00;
  COFD[1758] = -1.88889344E-01;
  COFD[1759] = 8.37152866E-03;
  COFD[1760] = -1.95739720E+01;
  COFD[1761] = 5.61113230E+00;
  COFD[1762] = -4.90190187E-01;
  COFD[1763] = 2.03260675E-02;
  COFD[1764] = -1.71983144E+01;
  COFD[1765] = 4.63881440E+00;
  COFD[1766] = -3.86139677E-01;
  COFD[1767] = 1.66955099E-02;
  COFD[1768] = -1.94093476E+01;
  COFD[1769] = 5.16013126E+00;
  COFD[1770] = -4.46824543E-01;
  COFD[1771] = 1.90464887E-02;
  COFD[1772] = -2.12652444E+01;
  COFD[1773] = 5.59961822E+00;
  COFD[1774] = -4.91624856E-01;
  COFD[1775] = 2.05035546E-02;
  COFD[1776] = -1.94252948E+01;
  COFD[1777] = 5.16013126E+00;
  COFD[1778] = -4.46824543E-01;
  COFD[1779] = 1.90464887E-02;
  COFD[1780] = -1.19157788E+01;
  COFD[1781] = 9.28952533E-01;
  COFD[1782] = 2.42107483E-01;
  COFD[1783] = -1.59824150E-02;
  COFD[1784] = -2.11388255E+01;
  COFD[1785] = 5.55529689E+00;
  COFD[1786] = -4.87942530E-01;
  COFD[1787] = 2.04249057E-02;
  COFD[1788] = -1.77498465E+01;
  COFD[1789] = 3.57475686E+00;
  COFD[1790] = -1.56396297E-01;
  COFD[1791] = 3.12157721E-03;
  COFD[1792] = -2.07653629E+01;
  COFD[1793] = 5.01091988E+00;
  COFD[1794] = -3.77985581E-01;
  COFD[1795] = 1.40968617E-02;
  COFD[1796] = -2.12831283E+01;
  COFD[1797] = 5.61184117E+00;
  COFD[1798] = -4.90532156E-01;
  COFD[1799] = 2.03507922E-02;
  COFD[1800] = -2.14087360E+01;
  COFD[1801] = 5.57281993E+00;
  COFD[1802] = -4.76690860E-01;
  COFD[1803] = 1.94000702E-02;
  COFD[1804] = -2.06463656E+01;
  COFD[1805] = 5.41688482E+00;
  COFD[1806] = -4.73387188E-01;
  COFD[1807] = 1.99280175E-02;
  COFD[1808] = -2.06516251E+01;
  COFD[1809] = 5.41688482E+00;
  COFD[1810] = -4.73387188E-01;
  COFD[1811] = 1.99280175E-02;
  COFD[1812] = -1.77563175E+01;
  COFD[1813] = 3.57475686E+00;
  COFD[1814] = -1.56396297E-01;
  COFD[1815] = 3.12157721E-03;
  COFD[1816] = -1.65295191E+01;
  COFD[1817] = 2.97569077E+00;
  COFD[1818] = -6.75650795E-02;
  COFD[1819] = -1.08649440E-03;
  COFD[1820] = -2.13148834E+01;
  COFD[1821] = 5.27210469E+00;
  COFD[1822] = -4.21419216E-01;
  COFD[1823] = 1.63567178E-02;
  COFD[1824] = -2.11309141E+01;
  COFD[1825] = 5.32644193E+00;
  COFD[1826] = -4.30581064E-01;
  COFD[1827] = 1.68379725E-02;
  COFD[1828] = -2.13084280E+01;
  COFD[1829] = 5.27210469E+00;
  COFD[1830] = -4.21419216E-01;
  COFD[1831] = 1.63567178E-02;
  COFD[1832] = -2.09565855E+01;
  COFD[1833] = 5.18380539E+00;
  COFD[1834] = -4.06234719E-01;
  COFD[1835] = 1.55515345E-02;
  COFD[1836] = -2.09642647E+01;
  COFD[1837] = 5.18380539E+00;
  COFD[1838] = -4.06234719E-01;
  COFD[1839] = 1.55515345E-02;
  COFD[1840] = -1.87383877E+01;
  COFD[1841] = 3.96926341E+00;
  COFD[1842] = -2.16412264E-01;
  COFD[1843] = 6.06012078E-03;
  COFD[1844] = -2.10440599E+01;
  COFD[1845] = 5.59806282E+00;
  COFD[1846] = -4.87109535E-01;
  COFD[1847] = 2.01370226E-02;
  COFD[1848] = -1.87419126E+01;
  COFD[1849] = 3.96926341E+00;
  COFD[1850] = -2.16412264E-01;
  COFD[1851] = 6.06012078E-03;
  COFD[1852] = -1.87419126E+01;
  COFD[1853] = 3.96926341E+00;
  COFD[1854] = -2.16412264E-01;
  COFD[1855] = 6.06012078E-03;
  COFD[1856] = -1.87452995E+01;
  COFD[1857] = 3.96926341E+00;
  COFD[1858] = -2.16412264E-01;
  COFD[1859] = 6.06012078E-03;
  COFD[1860] = -2.04397387E+01;
  COFD[1861] = 4.77398686E+00;
  COFD[1862] = -3.40522956E-01;
  COFD[1863] = 1.22072846E-02;
  COFD[1864] = -2.06310242E+01;
  COFD[1865] = 4.89289496E+00;
  COFD[1866] = -3.59346263E-01;
  COFD[1867] = 1.31570901E-02;
  COFD[1868] = -2.02184850E+01;
  COFD[1869] = 4.57152878E+00;
  COFD[1870] = -3.08371263E-01;
  COFD[1871] = 1.05838559E-02;
  COFD[1872] = -2.08879106E+01;
  COFD[1873] = 4.92602269E+00;
  COFD[1874] = -3.64572914E-01;
  COFD[1875] = 1.34203681E-02;
  COFD[1876] = -2.02265492E+01;
  COFD[1877] = 4.58441724E+00;
  COFD[1878] = -3.10392854E-01;
  COFD[1879] = 1.06849990E-02;
  COFD[1880] = -2.02287674E+01;
  COFD[1881] = 4.58441724E+00;
  COFD[1882] = -3.10392854E-01;
  COFD[1883] = 1.06849990E-02;
  COFD[1884] = -2.04186359E+01;
  COFD[1885] = 4.60117690E+00;
  COFD[1886] = -3.13067257E-01;
  COFD[1887] = 1.08202310E-02;
  COFD[1888] = -1.90422605E+01;
  COFD[1889] = 3.97344878E+00;
  COFD[1890] = -2.17040023E-01;
  COFD[1891] = 6.09061787E-03;
  COFD[1892] = -1.65397062E+01;
  COFD[1893] = 2.80085983E+00;
  COFD[1894] = -4.16337706E-02;
  COFD[1895] = -2.33000347E-03;
  COFD[1896] = -1.92199932E+01;
  COFD[1897] = 4.06339374E+00;
  COFD[1898] = -2.30567519E-01;
  COFD[1899] = 6.74918680E-03;
  COFD[1900] = -1.98682684E+01;
  COFD[1901] = 4.28648872E+00;
  COFD[1902] = -2.64358750E-01;
  COFD[1903] = 8.40263071E-03;
  COFD[1904] = -1.98762733E+01;
  COFD[1905] = 4.29984423E+00;
  COFD[1906] = -2.67672368E-01;
  COFD[1907] = 8.61066086E-03;
  COFD[1908] = -1.84538298E+01;
  COFD[1909] = 3.75912079E+00;
  COFD[1910] = -1.84235105E-01;
  COFD[1911] = 4.47800951E-03;
  COFD[1912] = -1.80862788E+01;
  COFD[1913] = 3.69199168E+00;
  COFD[1914] = -1.74005516E-01;
  COFD[1915] = 3.97694372E-03;
  COFD[1916] = -1.80891927E+01;
  COFD[1917] = 3.69199168E+00;
  COFD[1918] = -1.74005516E-01;
  COFD[1919] = 3.97694372E-03;
  COFD[1920] = -1.87191996E+01;
  COFD[1921] = 3.91984174E+00;
  COFD[1922] = -2.08885909E-01;
  COFD[1923] = 5.69091666E-03;
  COFD[1924] = -1.68393852E+01;
  COFD[1925] = 2.91234675E+00;
  COFD[1926] = -5.86653221E-02;
  COFD[1927] = -1.50006104E-03;
  COFD[1928] = -1.94509960E+01;
  COFD[1929] = 4.17438087E+00;
  COFD[1930] = -2.47331309E-01;
  COFD[1931] = 7.56793055E-03;
  COFD[1932] = -1.83730994E+01;
  COFD[1933] = 3.59019527E+00;
  COFD[1934] = -1.58702132E-01;
  COFD[1935] = 3.23316765E-03;
  COFD[1936] = -1.84166853E+01;
  COFD[1937] = 3.59019527E+00;
  COFD[1938] = -1.58702132E-01;
  COFD[1939] = 3.23316765E-03;
  COFD[1940] = -1.83939624E+01;
  COFD[1941] = 3.59019527E+00;
  COFD[1942] = -1.58702132E-01;
  COFD[1943] = 3.23316765E-03;
  COFD[1944] = -1.83939624E+01;
  COFD[1945] = 3.59019527E+00;
  COFD[1946] = -1.58702132E-01;
  COFD[1947] = 3.23316765E-03;
  COFD[1948] = -2.05372348E+01;
  COFD[1949] = 4.83379373E+00;
  COFD[1950] = -3.50008083E-01;
  COFD[1951] = 1.26863426E-02;
  COFD[1952] = -2.04357521E+01;
  COFD[1953] = 4.77398686E+00;
  COFD[1954] = -3.40522956E-01;
  COFD[1955] = 1.22072846E-02;
  COFD[1956] = -2.15787007E+01;
  COFD[1957] = 5.46737673E+00;
  COFD[1958] = -4.55696085E-01;
  COFD[1959] = 1.81982625E-02;
  COFD[1960] = -2.12639169E+01;
  COFD[1961] = 5.61184117E+00;
  COFD[1962] = -4.90532156E-01;
  COFD[1963] = 2.03507922E-02;
  COFD[1964] = -1.74302854E+01;
  COFD[1965] = 3.09977040E+00;
  COFD[1966] = -8.94095036E-02;
  COFD[1967] = 4.57257649E-05;
  COFD[1968] = -1.67841298E+01;
  COFD[1969] = 2.88481046E+00;
  COFD[1970] = -5.62034443E-02;
  COFD[1971] = -1.57469795E-03;
  COFD[1972] = -1.67827148E+01;
  COFD[1973] = 2.88481046E+00;
  COFD[1974] = -5.62034443E-02;
  COFD[1975] = -1.57469795E-03;
  COFD[1976] = -1.67939908E+01;
  COFD[1977] = 2.83222799E+00;
  COFD[1978] = -4.76061746E-02;
  COFD[1979] = -2.00728754E-03;
  COFD[1980] = -1.85362616E+01;
  COFD[1981] = 3.64183946E+00;
  COFD[1982] = -1.66440255E-01;
  COFD[1983] = 3.60846347E-03;
  COFD[1984] = -1.74151283E+01;
  COFD[1985] = 3.09977040E+00;
  COFD[1986] = -8.94095036E-02;
  COFD[1987] = 4.57257649E-05;
  COFD[1988] = -1.74141053E+01;
  COFD[1989] = 3.09977040E+00;
  COFD[1990] = -8.94095036E-02;
  COFD[1991] = 4.57257649E-05;
  COFD[1992] = -1.91334458E+01;
  COFD[1993] = 3.82263611E+00;
  COFD[1994] = -1.93983472E-01;
  COFD[1995] = 4.95789388E-03;
  COFD[1996] = -1.91326722E+01;
  COFD[1997] = 3.82263611E+00;
  COFD[1998] = -1.93983472E-01;
  COFD[1999] = 4.95789388E-03;
  COFD[2000] = -1.91326722E+01;
  COFD[2001] = 3.82263611E+00;
  COFD[2002] = -1.93983472E-01;
  COFD[2003] = 4.95789388E-03;
  COFD[2004] = -1.91326722E+01;
  COFD[2005] = 3.82263611E+00;
  COFD[2006] = -1.93983472E-01;
  COFD[2007] = 4.95789388E-03;
  COFD[2008] = -1.91326722E+01;
  COFD[2009] = 3.82263611E+00;
  COFD[2010] = -1.93983472E-01;
  COFD[2011] = 4.95789388E-03;
  COFD[2012] = -1.90565582E+01;
  COFD[2013] = 3.80285449E+00;
  COFD[2014] = -1.91725874E-01;
  COFD[2015] = 4.87377268E-03;
  COFD[2016] = -1.90565582E+01;
  COFD[2017] = 3.80285449E+00;
  COFD[2018] = -1.91725874E-01;
  COFD[2019] = 4.87377268E-03;
  COFD[2020] = -1.72072974E+01;
  COFD[2021] = 2.92077981E+00;
  COFD[2022] = -6.20181094E-02;
  COFD[2023] = -1.31459730E-03;
  COFD[2024] = -1.72072974E+01;
  COFD[2025] = 2.92077981E+00;
  COFD[2026] = -6.20181094E-02;
  COFD[2027] = -1.31459730E-03;
  COFD[2028] = -1.72072974E+01;
  COFD[2029] = 2.92077981E+00;
  COFD[2030] = -6.20181094E-02;
  COFD[2031] = -1.31459730E-03;
  COFD[2032] = -1.72072974E+01;
  COFD[2033] = 2.92077981E+00;
  COFD[2034] = -6.20181094E-02;
  COFD[2035] = -1.31459730E-03;
  COFD[2036] = -1.72072974E+01;
  COFD[2037] = 2.92077981E+00;
  COFD[2038] = -6.20181094E-02;
  COFD[2039] = -1.31459730E-03;
  COFD[2040] = -1.72072974E+01;
  COFD[2041] = 2.92077981E+00;
  COFD[2042] = -6.20181094E-02;
  COFD[2043] = -1.31459730E-03;
  COFD[2044] = -1.72072974E+01;
  COFD[2045] = 2.92077981E+00;
  COFD[2046] = -6.20181094E-02;
  COFD[2047] = -1.31459730E-03;
  COFD[2048] = -1.72072974E+01;
  COFD[2049] = 2.92077981E+00;
  COFD[2050] = -6.20181094E-02;
  COFD[2051] = -1.31459730E-03;
  COFD[2052] = -1.72072974E+01;
  COFD[2053] = 2.92077981E+00;
  COFD[2054] = -6.20181094E-02;
  COFD[2055] = -1.31459730E-03;
  COFD[2056] = -1.72072974E+01;
  COFD[2057] = 2.92077981E+00;
  COFD[2058] = -6.20181094E-02;
  COFD[2059] = -1.31459730E-03;
  COFD[2060] = -1.72072974E+01;
  COFD[2061] = 2.92077981E+00;
  COFD[2062] = -6.20181094E-02;
  COFD[2063] = -1.31459730E-03;
  COFD[2064] = -1.72072974E+01;
  COFD[2065] = 2.92077981E+00;
  COFD[2066] = -6.20181094E-02;
  COFD[2067] = -1.31459730E-03;
  COFD[2068] = -1.68808736E+01;
  COFD[2069] = 2.67272133E+00;
  COFD[2070] = -2.52954928E-02;
  COFD[2071] = -3.08293290E-03;
  COFD[2072] = -1.68808736E+01;
  COFD[2073] = 2.67272133E+00;
  COFD[2074] = -2.52954928E-02;
  COFD[2075] = -3.08293290E-03;
  COFD[2076] = -1.68808736E+01;
  COFD[2077] = 2.67272133E+00;
  COFD[2078] = -2.52954928E-02;
  COFD[2079] = -3.08293290E-03;
  COFD[2080] = -1.68808736E+01;
  COFD[2081] = 2.67272133E+00;
  COFD[2082] = -2.52954928E-02;
  COFD[2083] = -3.08293290E-03;
  COFD[2084] = -1.84220094E+01;
  COFD[2085] = 3.47063126E+00;
  COFD[2086] = -1.40883982E-01;
  COFD[2087] = 2.37234167E-03;
  COFD[2088] = -1.84220094E+01;
  COFD[2089] = 3.47063126E+00;
  COFD[2090] = -1.40883982E-01;
  COFD[2091] = 2.37234167E-03;
  COFD[2092] = -1.68671380E+01;
  COFD[2093] = 2.74353481E+00;
  COFD[2094] = -3.62101811E-02;
  COFD[2095] = -2.53731692E-03;
  COFD[2096] = -1.68671380E+01;
  COFD[2097] = 2.74353481E+00;
  COFD[2098] = -3.62101811E-02;
  COFD[2099] = -2.53731692E-03;
  COFD[2100] = -1.68671380E+01;
  COFD[2101] = 2.74353481E+00;
  COFD[2102] = -3.62101811E-02;
  COFD[2103] = -2.53731692E-03;
  COFD[2104] = -1.68671380E+01;
  COFD[2105] = 2.74353481E+00;
  COFD[2106] = -3.62101811E-02;
  COFD[2107] = -2.53731692E-03;
  COFD[2108] = -2.10643264E+01;
  COFD[2109] = 5.53614864E+00;
  COFD[2110] = -4.86046753E-01;
  COFD[2111] = 2.03659193E-02;
  COFD[2112] = -1.43151328E+01;
  COFD[2113] = 3.68038508E+00;
  COFD[2114] = -2.65779346E-01;
  COFD[2115] = 1.16360771E-02;
  COFD[2116] = -1.17159884E+01;
  COFD[2117] = 2.48123210E+00;
  COFD[2118] = -1.11322604E-01;
  COFD[2119] = 4.99282389E-03;
  COFD[2120] = -1.40998907E+01;
  COFD[2121] = 3.08120012E+00;
  COFD[2122] = -1.89629903E-01;
  COFD[2123] = 8.40361952E-03;
  COFD[2124] = -1.52721010E+01;
  COFD[2125] = 3.36790500E+00;
  COFD[2126] = -2.26321740E-01;
  COFD[2127] = 9.97135055E-03;
  COFD[2128] = -1.41191170E+01;
  COFD[2129] = 3.08120012E+00;
  COFD[2130] = -1.89629903E-01;
  COFD[2131] = 8.40361952E-03;
  COFD[2132] = -2.11388255E+01;
  COFD[2133] = 5.55529689E+00;
  COFD[2134] = -4.87942530E-01;
  COFD[2135] = 2.04249057E-02;
  COFD[2136] = -1.50233391E+01;
  COFD[2137] = 3.26660767E+00;
  COFD[2138] = -2.13287177E-01;
  COFD[2139] = 9.41137857E-03;
  COFD[2140] = -2.05045498E+01;
  COFD[2141] = 5.23843909E+00;
  COFD[2142] = -4.55815614E-01;
  COFD[2143] = 1.93898040E-02;
  COFD[2144] = -1.81735675E+01;
  COFD[2145] = 4.38391495E+00;
  COFD[2146] = -3.54941287E-01;
  COFD[2147] = 1.54195107E-02;
  COFD[2148] = -1.59862997E+01;
  COFD[2149] = 3.67388294E+00;
  COFD[2150] = -2.64990709E-01;
  COFD[2151] = 1.16042706E-02;
  COFD[2152] = -1.59525075E+01;
  COFD[2153] = 3.66023858E+00;
  COFD[2154] = -2.63401043E-01;
  COFD[2155] = 1.15432000E-02;
  COFD[2156] = -1.52792799E+01;
  COFD[2157] = 3.36790500E+00;
  COFD[2158] = -2.26321740E-01;
  COFD[2159] = 9.97135055E-03;
  COFD[2160] = -1.52861287E+01;
  COFD[2161] = 3.36790500E+00;
  COFD[2162] = -2.26321740E-01;
  COFD[2163] = 9.97135055E-03;
  COFD[2164] = -2.05128629E+01;
  COFD[2165] = 5.23843909E+00;
  COFD[2166] = -4.55815614E-01;
  COFD[2167] = 1.93898040E-02;
  COFD[2168] = -2.02642156E+01;
  COFD[2169] = 5.14499744E+00;
  COFD[2170] = -4.45694433E-01;
  COFD[2171] = 1.90318647E-02;
  COFD[2172] = -1.82955206E+01;
  COFD[2173] = 4.40289649E+00;
  COFD[2174] = -3.57289765E-01;
  COFD[2175] = 1.55166804E-02;
  COFD[2176] = -1.79116480E+01;
  COFD[2177] = 4.35148286E+00;
  COFD[2178] = -3.50886647E-01;
  COFD[2179] = 1.52498573E-02;
  COFD[2180] = -1.82872262E+01;
  COFD[2181] = 4.40289649E+00;
  COFD[2182] = -3.57289765E-01;
  COFD[2183] = 1.55166804E-02;
  COFD[2184] = -1.83296908E+01;
  COFD[2185] = 4.48570999E+00;
  COFD[2186] = -3.67301524E-01;
  COFD[2187] = 1.59204254E-02;
  COFD[2188] = -1.83394427E+01;
  COFD[2189] = 4.48570999E+00;
  COFD[2190] = -3.67301524E-01;
  COFD[2191] = 1.59204254E-02;
  COFD[2192] = -2.02922626E+01;
  COFD[2193] = 5.11106992E+00;
  COFD[2194] = -4.42047129E-01;
  COFD[2195] = 1.89042990E-02;
  COFD[2196] = -1.60261598E+01;
  COFD[2197] = 3.73312045E+00;
  COFD[2198] = -2.72579779E-01;
  COFD[2199] = 1.19290272E-02;
  COFD[2200] = -2.02969667E+01;
  COFD[2201] = 5.11106992E+00;
  COFD[2202] = -4.42047129E-01;
  COFD[2203] = 1.89042990E-02;
  COFD[2204] = -2.02969667E+01;
  COFD[2205] = 5.11106992E+00;
  COFD[2206] = -4.42047129E-01;
  COFD[2207] = 1.89042990E-02;
  COFD[2208] = -2.03014971E+01;
  COFD[2209] = 5.11106992E+00;
  COFD[2210] = -4.42047129E-01;
  COFD[2211] = 1.89042990E-02;
  COFD[2212] = -1.93064155E+01;
  COFD[2213] = 4.74387793E+00;
  COFD[2214] = -3.98574972E-01;
  COFD[2215] = 1.71862289E-02;
  COFD[2216] = -1.91118387E+01;
  COFD[2217] = 4.68715685E+00;
  COFD[2218] = -3.91979493E-01;
  COFD[2219] = 1.69314004E-02;
  COFD[2220] = -1.97709539E+01;
  COFD[2221] = 4.84731557E+00;
  COFD[2222] = -4.10638352E-01;
  COFD[2223] = 1.76543886E-02;
  COFD[2224] = -1.92333972E+01;
  COFD[2225] = 4.67033934E+00;
  COFD[2226] = -3.89971551E-01;
  COFD[2227] = 1.68513441E-02;
  COFD[2228] = -1.97422146E+01;
  COFD[2229] = 4.84249900E+00;
  COFD[2230] = -4.10120448E-01;
  COFD[2231] = 1.76363500E-02;
  COFD[2232] = -1.97452512E+01;
  COFD[2233] = 4.84249900E+00;
  COFD[2234] = -4.10120448E-01;
  COFD[2235] = 1.76363500E-02;
  COFD[2236] = -1.98616053E+01;
  COFD[2237] = 4.83466791E+00;
  COFD[2238] = -4.09252052E-01;
  COFD[2239] = 1.76047341E-02;
  COFD[2240] = -2.05649581E+01;
  COFD[2241] = 5.10975100E+00;
  COFD[2242] = -4.41894797E-01;
  COFD[2243] = 1.88984423E-02;
  COFD[2244] = -2.07992757E+01;
  COFD[2245] = 5.19372707E+00;
  COFD[2246] = -4.50605289E-01;
  COFD[2247] = 1.91871986E-02;
  COFD[2248] = -2.04682083E+01;
  COFD[2249] = 5.07995245E+00;
  COFD[2250] = -4.38423992E-01;
  COFD[2251] = 1.87635861E-02;
  COFD[2252] = -2.03988256E+01;
  COFD[2253] = 4.99562188E+00;
  COFD[2254] = -4.28482025E-01;
  COFD[2255] = 1.83720948E-02;
  COFD[2256] = -2.03122830E+01;
  COFD[2257] = 4.96244824E+00;
  COFD[2258] = -4.24554495E-01;
  COFD[2259] = 1.82168885E-02;
  COFD[2260] = -2.06066370E+01;
  COFD[2261] = 5.16748146E+00;
  COFD[2262] = -4.47594939E-01;
  COFD[2263] = 1.90724110E-02;
  COFD[2264] = -2.04949292E+01;
  COFD[2265] = 5.19614628E+00;
  COFD[2266] = -4.50889164E-01;
  COFD[2267] = 1.91983328E-02;
  COFD[2268] = -2.04988604E+01;
  COFD[2269] = 5.19614628E+00;
  COFD[2270] = -4.50889164E-01;
  COFD[2271] = 1.91983328E-02;
  COFD[2272] = -2.04339608E+01;
  COFD[2273] = 5.12877694E+00;
  COFD[2274] = -4.44057978E-01;
  COFD[2275] = 1.89800196E-02;
  COFD[2276] = -2.07974150E+01;
  COFD[2277] = 5.17147715E+00;
  COFD[2278] = -4.48042686E-01;
  COFD[2279] = 1.90889629E-02;
  COFD[2280] = -2.03524955E+01;
  COFD[2281] = 5.04005588E+00;
  COFD[2282] = -4.33725091E-01;
  COFD[2283] = 1.85786663E-02;
  COFD[2284] = -2.10630467E+01;
  COFD[2285] = 5.23339224E+00;
  COFD[2286] = -4.55230780E-01;
  COFD[2287] = 1.93672146E-02;
  COFD[2288] = -2.11250956E+01;
  COFD[2289] = 5.23339224E+00;
  COFD[2290] = -4.55230780E-01;
  COFD[2291] = 1.93672146E-02;
  COFD[2292] = -2.10924618E+01;
  COFD[2293] = 5.23339224E+00;
  COFD[2294] = -4.55230780E-01;
  COFD[2295] = 1.93672146E-02;
  COFD[2296] = -2.10924618E+01;
  COFD[2297] = 5.23339224E+00;
  COFD[2298] = -4.55230780E-01;
  COFD[2299] = 1.93672146E-02;
  COFD[2300] = -1.92044433E+01;
  COFD[2301] = 4.71304783E+00;
  COFD[2302] = -3.94942083E-01;
  COFD[2303] = 1.70435959E-02;
  COFD[2304] = -1.93011339E+01;
  COFD[2305] = 4.74387793E+00;
  COFD[2306] = -3.98574972E-01;
  COFD[2307] = 1.71862289E-02;
  COFD[2308] = -1.77178793E+01;
  COFD[2309] = 4.19935698E+00;
  COFD[2310] = -3.32310212E-01;
  COFD[2311] = 1.44920670E-02;
  COFD[2312] = -1.59634493E+01;
  COFD[2313] = 3.67388294E+00;
  COFD[2314] = -2.64990709E-01;
  COFD[2315] = 1.16042706E-02;
  COFD[2316] = -2.12613076E+01;
  COFD[2317] = 5.24049689E+00;
  COFD[2318] = -4.56053883E-01;
  COFD[2319] = 1.93989985E-02;
  COFD[2320] = -2.10506001E+01;
  COFD[2321] = 5.24127050E+00;
  COFD[2322] = -4.56143428E-01;
  COFD[2323] = 1.94024526E-02;
  COFD[2324] = -2.10486208E+01;
  COFD[2325] = 5.24127050E+00;
  COFD[2326] = -4.56143428E-01;
  COFD[2327] = 1.94024526E-02;
  COFD[2328] = -2.11365291E+01;
  COFD[2329] = 5.23956053E+00;
  COFD[2330] = -4.55945477E-01;
  COFD[2331] = 1.93948159E-02;
  COFD[2332] = -2.10678949E+01;
  COFD[2333] = 5.21560307E+00;
  COFD[2334] = -4.53163835E-01;
  COFD[2335] = 1.92871258E-02;
  COFD[2336] = -2.12396657E+01;
  COFD[2337] = 5.24049689E+00;
  COFD[2338] = -4.56053883E-01;
  COFD[2339] = 1.93989985E-02;
  COFD[2340] = -2.12382149E+01;
  COFD[2341] = 5.24049689E+00;
  COFD[2342] = -4.56053883E-01;
  COFD[2343] = 1.93989985E-02;
  COFD[2344] = -2.10855030E+01;
  COFD[2345] = 5.15315713E+00;
  COFD[2346] = -4.46344043E-01;
  COFD[2347] = 1.90431546E-02;
  COFD[2348] = -2.10843943E+01;
  COFD[2349] = 5.15315713E+00;
  COFD[2350] = -4.46344043E-01;
  COFD[2351] = 1.90431546E-02;
  COFD[2352] = -2.10843943E+01;
  COFD[2353] = 5.15315713E+00;
  COFD[2354] = -4.46344043E-01;
  COFD[2355] = 1.90431546E-02;
  COFD[2356] = -2.10843943E+01;
  COFD[2357] = 5.15315713E+00;
  COFD[2358] = -4.46344043E-01;
  COFD[2359] = 1.90431546E-02;
  COFD[2360] = -2.10843943E+01;
  COFD[2361] = 5.15315713E+00;
  COFD[2362] = -4.46344043E-01;
  COFD[2363] = 1.90431546E-02;
  COFD[2364] = -2.10605134E+01;
  COFD[2365] = 5.15144037E+00;
  COFD[2366] = -4.46211810E-01;
  COFD[2367] = 1.90411531E-02;
  COFD[2368] = -2.10605134E+01;
  COFD[2369] = 5.15144037E+00;
  COFD[2370] = -4.46211810E-01;
  COFD[2371] = 1.90411531E-02;
  COFD[2372] = -2.18067293E+01;
  COFD[2373] = 5.37381914E+00;
  COFD[2374] = -4.70526306E-01;
  COFD[2375] = 1.99137622E-02;
  COFD[2376] = -2.18067293E+01;
  COFD[2377] = 5.37381914E+00;
  COFD[2378] = -4.70526306E-01;
  COFD[2379] = 1.99137622E-02;
  COFD[2380] = -2.18067293E+01;
  COFD[2381] = 5.37381914E+00;
  COFD[2382] = -4.70526306E-01;
  COFD[2383] = 1.99137622E-02;
  COFD[2384] = -2.18067293E+01;
  COFD[2385] = 5.37381914E+00;
  COFD[2386] = -4.70526306E-01;
  COFD[2387] = 1.99137622E-02;
  COFD[2388] = -2.18067293E+01;
  COFD[2389] = 5.37381914E+00;
  COFD[2390] = -4.70526306E-01;
  COFD[2391] = 1.99137622E-02;
  COFD[2392] = -2.18067293E+01;
  COFD[2393] = 5.37381914E+00;
  COFD[2394] = -4.70526306E-01;
  COFD[2395] = 1.99137622E-02;
  COFD[2396] = -2.18067293E+01;
  COFD[2397] = 5.37381914E+00;
  COFD[2398] = -4.70526306E-01;
  COFD[2399] = 1.99137622E-02;
  COFD[2400] = -2.18067293E+01;
  COFD[2401] = 5.37381914E+00;
  COFD[2402] = -4.70526306E-01;
  COFD[2403] = 1.99137622E-02;
  COFD[2404] = -2.18067293E+01;
  COFD[2405] = 5.37381914E+00;
  COFD[2406] = -4.70526306E-01;
  COFD[2407] = 1.99137622E-02;
  COFD[2408] = -2.18067293E+01;
  COFD[2409] = 5.37381914E+00;
  COFD[2410] = -4.70526306E-01;
  COFD[2411] = 1.99137622E-02;
  COFD[2412] = -2.18067293E+01;
  COFD[2413] = 5.37381914E+00;
  COFD[2414] = -4.70526306E-01;
  COFD[2415] = 1.99137622E-02;
  COFD[2416] = -2.18067293E+01;
  COFD[2417] = 5.37381914E+00;
  COFD[2418] = -4.70526306E-01;
  COFD[2419] = 1.99137622E-02;
  COFD[2420] = -2.21215074E+01;
  COFD[2421] = 5.40452789E+00;
  COFD[2422] = -4.72714156E-01;
  COFD[2423] = 1.99362566E-02;
  COFD[2424] = -2.21215074E+01;
  COFD[2425] = 5.40452789E+00;
  COFD[2426] = -4.72714156E-01;
  COFD[2427] = 1.99362566E-02;
  COFD[2428] = -2.21215074E+01;
  COFD[2429] = 5.40452789E+00;
  COFD[2430] = -4.72714156E-01;
  COFD[2431] = 1.99362566E-02;
  COFD[2432] = -2.21215074E+01;
  COFD[2433] = 5.40452789E+00;
  COFD[2434] = -4.72714156E-01;
  COFD[2435] = 1.99362566E-02;
  COFD[2436] = -2.14768586E+01;
  COFD[2437] = 5.27615342E+00;
  COFD[2438] = -4.60265034E-01;
  COFD[2439] = 1.95651457E-02;
  COFD[2440] = -2.14768586E+01;
  COFD[2441] = 5.27615342E+00;
  COFD[2442] = -4.60265034E-01;
  COFD[2443] = 1.95651457E-02;
  COFD[2444] = -2.19303974E+01;
  COFD[2445] = 5.39345912E+00;
  COFD[2446] = -4.71992292E-01;
  COFD[2447] = 1.99337081E-02;
  COFD[2448] = -2.19303974E+01;
  COFD[2449] = 5.39345912E+00;
  COFD[2450] = -4.71992292E-01;
  COFD[2451] = 1.99337081E-02;
  COFD[2452] = -2.19303974E+01;
  COFD[2453] = 5.39345912E+00;
  COFD[2454] = -4.71992292E-01;
  COFD[2455] = 1.99337081E-02;
  COFD[2456] = -2.19303974E+01;
  COFD[2457] = 5.39345912E+00;
  COFD[2458] = -4.71992292E-01;
  COFD[2459] = 1.99337081E-02;
  COFD[2460] = -1.50031706E+01;
  COFD[2461] = 3.26223357E+00;
  COFD[2462] = -2.12746642E-01;
  COFD[2463] = 9.38912883E-03;
  COFD[2464] = -1.97544605E+01;
  COFD[2465] = 5.56931926E+00;
  COFD[2466] = -4.89105511E-01;
  COFD[2467] = 2.04493129E-02;
  COFD[2468] = -1.60517517E+01;
  COFD[2469] = 4.11188603E+00;
  COFD[2470] = -3.21540884E-01;
  COFD[2471] = 1.40482564E-02;
  COFD[2472] = -1.94313018E+01;
  COFD[2473] = 5.02567894E+00;
  COFD[2474] = -4.32045169E-01;
  COFD[2475] = 1.85132214E-02;
  COFD[2476] = -2.08204356E+01;
  COFD[2477] = 5.35267674E+00;
  COFD[2478] = -4.69010505E-01;
  COFD[2479] = 1.98979152E-02;
  COFD[2480] = -1.94507789E+01;
  COFD[2481] = 5.02567894E+00;
  COFD[2482] = -4.32045169E-01;
  COFD[2483] = 1.85132214E-02;
  COFD[2484] = -1.77498465E+01;
  COFD[2485] = 3.57475686E+00;
  COFD[2486] = -1.56396297E-01;
  COFD[2487] = 3.12157721E-03;
  COFD[2488] = -2.05045498E+01;
  COFD[2489] = 5.23843909E+00;
  COFD[2490] = -4.55815614E-01;
  COFD[2491] = 1.93898040E-02;
  COFD[2492] = -1.90328637E+01;
  COFD[2493] = 3.99221757E+00;
  COFD[2494] = -2.19854880E-01;
  COFD[2495] = 6.22736279E-03;
  COFD[2496] = -2.19215472E+01;
  COFD[2497] = 5.45216133E+00;
  COFD[2498] = -4.52916925E-01;
  COFD[2499] = 1.80456400E-02;
  COFD[2500] = -2.14391914E+01;
  COFD[2501] = 5.56531152E+00;
  COFD[2502] = -4.88789821E-01;
  COFD[2503] = 2.04437116E-02;
  COFD[2504] = -2.14022312E+01;
  COFD[2505] = 5.55346617E+00;
  COFD[2506] = -4.87783156E-01;
  COFD[2507] = 2.04210886E-02;
  COFD[2508] = -2.08277510E+01;
  COFD[2509] = 5.35267674E+00;
  COFD[2510] = -4.69010505E-01;
  COFD[2511] = 1.98979152E-02;
  COFD[2512] = -2.08347318E+01;
  COFD[2513] = 5.35267674E+00;
  COFD[2514] = -4.69010505E-01;
  COFD[2515] = 1.98979152E-02;
  COFD[2516] = -1.90413276E+01;
  COFD[2517] = 3.99221757E+00;
  COFD[2518] = -2.19854880E-01;
  COFD[2519] = 6.22736279E-03;
  COFD[2520] = -2.01801599E+01;
  COFD[2521] = 4.53183330E+00;
  COFD[2522] = -3.02186760E-01;
  COFD[2523] = 1.02756490E-02;
  COFD[2524] = -2.19699976E+01;
  COFD[2525] = 5.43750833E+00;
  COFD[2526] = -4.50273329E-01;
  COFD[2527] = 1.79013718E-02;
  COFD[2528] = -2.17771908E+01;
  COFD[2529] = 5.47519298E+00;
  COFD[2530] = -4.57113040E-01;
  COFD[2531] = 1.82758312E-02;
  COFD[2532] = -2.19615526E+01;
  COFD[2533] = 5.43750833E+00;
  COFD[2534] = -4.50273329E-01;
  COFD[2535] = 1.79013718E-02;
  COFD[2536] = -2.16718195E+01;
  COFD[2537] = 5.36811769E+00;
  COFD[2538] = -4.37727086E-01;
  COFD[2539] = 1.72167686E-02;
  COFD[2540] = -2.16817390E+01;
  COFD[2541] = 5.36811769E+00;
  COFD[2542] = -4.37727086E-01;
  COFD[2543] = 1.72167686E-02;
  COFD[2544] = -2.00914970E+01;
  COFD[2545] = 4.41511629E+00;
  COFD[2546] = -2.84086963E-01;
  COFD[2547] = 9.37586971E-03;
  COFD[2548] = -2.14204113E+01;
  COFD[2549] = 5.59268435E+00;
  COFD[2550] = -4.91232974E-01;
  COFD[2551] = 2.05064746E-02;
  COFD[2552] = -2.00963017E+01;
  COFD[2553] = 4.41511629E+00;
  COFD[2554] = -2.84086963E-01;
  COFD[2555] = 9.37586971E-03;
  COFD[2556] = -2.00963017E+01;
  COFD[2557] = 4.41511629E+00;
  COFD[2558] = -2.84086963E-01;
  COFD[2559] = 9.37586971E-03;
  COFD[2560] = -2.01009300E+01;
  COFD[2561] = 4.41511629E+00;
  COFD[2562] = -2.84086963E-01;
  COFD[2563] = 9.37586971E-03;
  COFD[2564] = -2.14354798E+01;
  COFD[2565] = 5.07680397E+00;
  COFD[2566] = -3.88612087E-01;
  COFD[2567] = 1.46395101E-02;
  COFD[2568] = -2.15702394E+01;
  COFD[2569] = 5.16868516E+00;
  COFD[2570] = -4.03721581E-01;
  COFD[2571] = 1.54206640E-02;
  COFD[2572] = -2.12109166E+01;
  COFD[2573] = 4.87252053E+00;
  COFD[2574] = -3.56127804E-01;
  COFD[2575] = 1.29948788E-02;
  COFD[2576] = -2.17825494E+01;
  COFD[2577] = 5.19232842E+00;
  COFD[2578] = -4.07643284E-01;
  COFD[2579] = 1.56246434E-02;
  COFD[2580] = -2.12219671E+01;
  COFD[2581] = 4.88535789E+00;
  COFD[2582] = -3.58153894E-01;
  COFD[2583] = 1.30969624E-02;
  COFD[2584] = -2.12250755E+01;
  COFD[2585] = 4.88535789E+00;
  COFD[2586] = -3.58153894E-01;
  COFD[2587] = 1.30969624E-02;
  COFD[2588] = -2.14030252E+01;
  COFD[2589] = 4.90439970E+00;
  COFD[2590] = -3.61162615E-01;
  COFD[2591] = 1.32486109E-02;
  COFD[2592] = -2.03778329E+01;
  COFD[2593] = 4.41849584E+00;
  COFD[2594] = -2.84606486E-01;
  COFD[2595] = 9.40156753E-03;
  COFD[2596] = -2.03374453E+01;
  COFD[2597] = 4.42052429E+00;
  COFD[2598] = -2.84918346E-01;
  COFD[2599] = 9.41699476E-03;
  COFD[2600] = -2.05022787E+01;
  COFD[2601] = 4.48572337E+00;
  COFD[2602] = -2.95011367E-01;
  COFD[2603] = 9.91810091E-03;
  COFD[2604] = -2.09802324E+01;
  COFD[2605] = 4.64167142E+00;
  COFD[2606] = -3.19532110E-01;
  COFD[2607] = 1.11478359E-02;
  COFD[2608] = -2.11071930E+01;
  COFD[2609] = 4.70311989E+00;
  COFD[2610] = -3.29240106E-01;
  COFD[2611] = 1.16366808E-02;
  COFD[2612] = -1.97545845E+01;
  COFD[2613] = 4.18758010E+00;
  COFD[2614] = -2.49327776E-01;
  COFD[2615] = 7.66559103E-03;
  COFD[2616] = -1.93946871E+01;
  COFD[2617] = 4.10954793E+00;
  COFD[2618] = -2.37523329E-01;
  COFD[2619] = 7.08858141E-03;
  COFD[2620] = -1.93987062E+01;
  COFD[2621] = 4.10954793E+00;
  COFD[2622] = -2.37523329E-01;
  COFD[2623] = 7.08858141E-03;
  COFD[2624] = -2.00872430E+01;
  COFD[2625] = 4.36837296E+00;
  COFD[2626] = -2.76900721E-01;
  COFD[2627] = 9.02062809E-03;
  COFD[2628] = -2.04830966E+01;
  COFD[2629] = 4.46102735E+00;
  COFD[2630] = -2.91170400E-01;
  COFD[2631] = 9.72687095E-03;
  COFD[2632] = -2.06640437E+01;
  COFD[2633] = 4.56779427E+00;
  COFD[2634] = -3.07785839E-01;
  COFD[2635] = 1.05545767E-02;
  COFD[2636] = -1.96429896E+01;
  COFD[2637] = 4.00653795E+00;
  COFD[2638] = -2.22005804E-01;
  COFD[2639] = 6.33194910E-03;
  COFD[2640] = -1.97067298E+01;
  COFD[2641] = 4.00653795E+00;
  COFD[2642] = -2.22005804E-01;
  COFD[2643] = 6.33194910E-03;
  COFD[2644] = -1.96731796E+01;
  COFD[2645] = 4.00653795E+00;
  COFD[2646] = -2.22005804E-01;
  COFD[2647] = 6.33194910E-03;
  COFD[2648] = -1.96731796E+01;
  COFD[2649] = 4.00653795E+00;
  COFD[2650] = -2.22005804E-01;
  COFD[2651] = 6.33194910E-03;
  COFD[2652] = -2.15159177E+01;
  COFD[2653] = 5.12799307E+00;
  COFD[2654] = -3.96938732E-01;
  COFD[2655] = 1.50673195E-02;
  COFD[2656] = -2.14300886E+01;
  COFD[2657] = 5.07680397E+00;
  COFD[2658] = -3.88612087E-01;
  COFD[2659] = 1.46395101E-02;
  COFD[2660] = -2.20866182E+01;
  COFD[2661] = 5.55935694E+00;
  COFD[2662] = -4.74154740E-01;
  COFD[2663] = 1.92584304E-02;
  COFD[2664] = -2.14160667E+01;
  COFD[2665] = 5.56531152E+00;
  COFD[2666] = -4.88789821E-01;
  COFD[2667] = 2.04437116E-02;
  COFD[2668] = -2.01155775E+01;
  COFD[2669] = 4.14890473E+00;
  COFD[2670] = -2.43477935E-01;
  COFD[2671] = 7.37955243E-03;
  COFD[2672] = -2.00761061E+01;
  COFD[2673] = 4.23458126E+00;
  COFD[2674] = -2.56439402E-01;
  COFD[2675] = 8.01352157E-03;
  COFD[2676] = -2.00740761E+01;
  COFD[2677] = 4.23458126E+00;
  COFD[2678] = -2.56439402E-01;
  COFD[2679] = 8.01352157E-03;
  COFD[2680] = -2.02980796E+01;
  COFD[2681] = 4.29941846E+00;
  COFD[2682] = -2.66336231E-01;
  COFD[2683] = 8.49991686E-03;
  COFD[2684] = -1.98035328E+01;
  COFD[2685] = 4.05563529E+00;
  COFD[2686] = -2.29398386E-01;
  COFD[2687] = 6.69213921E-03;
  COFD[2688] = -2.00933398E+01;
  COFD[2689] = 4.14890473E+00;
  COFD[2690] = -2.43477935E-01;
  COFD[2691] = 7.37955243E-03;
  COFD[2692] = -2.00918501E+01;
  COFD[2693] = 4.14890473E+00;
  COFD[2694] = -2.43477935E-01;
  COFD[2695] = 7.37955243E-03;
  COFD[2696] = -2.04500269E+01;
  COFD[2697] = 4.26473557E+00;
  COFD[2698] = -2.61033037E-01;
  COFD[2699] = 8.23906412E-03;
  COFD[2700] = -2.04488873E+01;
  COFD[2701] = 4.26473557E+00;
  COFD[2702] = -2.61033037E-01;
  COFD[2703] = 8.23906412E-03;
  COFD[2704] = -2.04488873E+01;
  COFD[2705] = 4.26473557E+00;
  COFD[2706] = -2.61033037E-01;
  COFD[2707] = 8.23906412E-03;
  COFD[2708] = -2.04488873E+01;
  COFD[2709] = 4.26473557E+00;
  COFD[2710] = -2.61033037E-01;
  COFD[2711] = 8.23906412E-03;
  COFD[2712] = -2.04488873E+01;
  COFD[2713] = 4.26473557E+00;
  COFD[2714] = -2.61033037E-01;
  COFD[2715] = 8.23906412E-03;
  COFD[2716] = -2.04539740E+01;
  COFD[2717] = 4.27584524E+00;
  COFD[2718] = -2.62731338E-01;
  COFD[2719] = 8.32258301E-03;
  COFD[2720] = -2.04539740E+01;
  COFD[2721] = 4.27584524E+00;
  COFD[2722] = -2.62731338E-01;
  COFD[2723] = 8.32258301E-03;
  COFD[2724] = -1.92245436E+01;
  COFD[2725] = 3.64878687E+00;
  COFD[2726] = -1.67486742E-01;
  COFD[2727] = 3.65938254E-03;
  COFD[2728] = -1.92245436E+01;
  COFD[2729] = 3.64878687E+00;
  COFD[2730] = -1.67486742E-01;
  COFD[2731] = 3.65938254E-03;
  COFD[2732] = -1.92245436E+01;
  COFD[2733] = 3.64878687E+00;
  COFD[2734] = -1.67486742E-01;
  COFD[2735] = 3.65938254E-03;
  COFD[2736] = -1.92245436E+01;
  COFD[2737] = 3.64878687E+00;
  COFD[2738] = -1.67486742E-01;
  COFD[2739] = 3.65938254E-03;
  COFD[2740] = -1.92245436E+01;
  COFD[2741] = 3.64878687E+00;
  COFD[2742] = -1.67486742E-01;
  COFD[2743] = 3.65938254E-03;
  COFD[2744] = -1.92245436E+01;
  COFD[2745] = 3.64878687E+00;
  COFD[2746] = -1.67486742E-01;
  COFD[2747] = 3.65938254E-03;
  COFD[2748] = -1.92245436E+01;
  COFD[2749] = 3.64878687E+00;
  COFD[2750] = -1.67486742E-01;
  COFD[2751] = 3.65938254E-03;
  COFD[2752] = -1.92245436E+01;
  COFD[2753] = 3.64878687E+00;
  COFD[2754] = -1.67486742E-01;
  COFD[2755] = 3.65938254E-03;
  COFD[2756] = -1.92245436E+01;
  COFD[2757] = 3.64878687E+00;
  COFD[2758] = -1.67486742E-01;
  COFD[2759] = 3.65938254E-03;
  COFD[2760] = -1.92245436E+01;
  COFD[2761] = 3.64878687E+00;
  COFD[2762] = -1.67486742E-01;
  COFD[2763] = 3.65938254E-03;
  COFD[2764] = -1.92245436E+01;
  COFD[2765] = 3.64878687E+00;
  COFD[2766] = -1.67486742E-01;
  COFD[2767] = 3.65938254E-03;
  COFD[2768] = -1.92245436E+01;
  COFD[2769] = 3.64878687E+00;
  COFD[2770] = -1.67486742E-01;
  COFD[2771] = 3.65938254E-03;
  COFD[2772] = -1.88807933E+01;
  COFD[2773] = 3.39465864E+00;
  COFD[2774] = -1.29587884E-01;
  COFD[2775] = 1.82868116E-03;
  COFD[2776] = -1.88807933E+01;
  COFD[2777] = 3.39465864E+00;
  COFD[2778] = -1.29587884E-01;
  COFD[2779] = 1.82868116E-03;
  COFD[2780] = -1.88807933E+01;
  COFD[2781] = 3.39465864E+00;
  COFD[2782] = -1.29587884E-01;
  COFD[2783] = 1.82868116E-03;
  COFD[2784] = -1.88807933E+01;
  COFD[2785] = 3.39465864E+00;
  COFD[2786] = -1.29587884E-01;
  COFD[2787] = 1.82868116E-03;
  COFD[2788] = -1.97330355E+01;
  COFD[2789] = 3.90822244E+00;
  COFD[2790] = -2.07112689E-01;
  COFD[2791] = 5.60389321E-03;
  COFD[2792] = -1.97330355E+01;
  COFD[2793] = 3.90822244E+00;
  COFD[2794] = -2.07112689E-01;
  COFD[2795] = 5.60389321E-03;
  COFD[2796] = -1.89866169E+01;
  COFD[2797] = 3.51383700E+00;
  COFD[2798] = -1.47311797E-01;
  COFD[2799] = 2.68227514E-03;
  COFD[2800] = -1.89866169E+01;
  COFD[2801] = 3.51383700E+00;
  COFD[2802] = -1.47311797E-01;
  COFD[2803] = 2.68227514E-03;
  COFD[2804] = -1.89866169E+01;
  COFD[2805] = 3.51383700E+00;
  COFD[2806] = -1.47311797E-01;
  COFD[2807] = 2.68227514E-03;
  COFD[2808] = -1.89866169E+01;
  COFD[2809] = 3.51383700E+00;
  COFD[2810] = -1.47311797E-01;
  COFD[2811] = 2.68227514E-03;
  COFD[2812] = -2.04750606E+01;
  COFD[2813] = 5.23112374E+00;
  COFD[2814] = -4.54967682E-01;
  COFD[2815] = 1.93570423E-02;
  COFD[2816] = -1.76147183E+01;
  COFD[2817] = 4.86049500E+00;
  COFD[2818] = -4.12200578E-01;
  COFD[2819] = 1.77160971E-02;
  COFD[2820] = -1.37794466E+01;
  COFD[2821] = 3.23973858E+00;
  COFD[2822] = -2.09989036E-01;
  COFD[2823] = 9.27667906E-03;
  COFD[2824] = -1.70534750E+01;
  COFD[2825] = 4.14240922E+00;
  COFD[2826] = -3.25239774E-01;
  COFD[2827] = 1.41980687E-02;
  COFD[2828] = -1.84688303E+01;
  COFD[2829] = 4.49330851E+00;
  COFD[2830] = -3.68208715E-01;
  COFD[2831] = 1.59565402E-02;
  COFD[2832] = -1.70756953E+01;
  COFD[2833] = 4.14240922E+00;
  COFD[2834] = -3.25239774E-01;
  COFD[2835] = 1.41980687E-02;
  COFD[2836] = -2.07653629E+01;
  COFD[2837] = 5.01091988E+00;
  COFD[2838] = -3.77985581E-01;
  COFD[2839] = 1.40968617E-02;
  COFD[2840] = -1.81735675E+01;
  COFD[2841] = 4.38391495E+00;
  COFD[2842] = -3.54941287E-01;
  COFD[2843] = 1.54195107E-02;
  COFD[2844] = -2.19215472E+01;
  COFD[2845] = 5.45216133E+00;
  COFD[2846] = -4.52916925E-01;
  COFD[2847] = 1.80456400E-02;
  COFD[2848] = -2.13425604E+01;
  COFD[2849] = 5.40460130E+00;
  COFD[2850] = -4.72718910E-01;
  COFD[2851] = 1.99362717E-02;
  COFD[2852] = -1.93276406E+01;
  COFD[2853] = 4.85015581E+00;
  COFD[2854] = -4.10945109E-01;
  COFD[2855] = 1.76651398E-02;
  COFD[2856] = -1.92867532E+01;
  COFD[2857] = 4.83375900E+00;
  COFD[2858] = -4.09146560E-01;
  COFD[2859] = 1.76006599E-02;
  COFD[2860] = -1.84777509E+01;
  COFD[2861] = 4.49330851E+00;
  COFD[2862] = -3.68208715E-01;
  COFD[2863] = 1.59565402E-02;
  COFD[2864] = -1.84862906E+01;
  COFD[2865] = 4.49330851E+00;
  COFD[2866] = -3.68208715E-01;
  COFD[2867] = 1.59565402E-02;
  COFD[2868] = -2.19317665E+01;
  COFD[2869] = 5.45216133E+00;
  COFD[2870] = -4.52916925E-01;
  COFD[2871] = 1.80456400E-02;
  COFD[2872] = -2.20420967E+01;
  COFD[2873] = 5.52708328E+00;
  COFD[2874] = -4.68000799E-01;
  COFD[2875] = 1.89131903E-02;
  COFD[2876] = -2.14151478E+01;
  COFD[2877] = 5.41122754E+00;
  COFD[2878] = -4.73185889E-01;
  COFD[2879] = 1.99407905E-02;
  COFD[2880] = -2.11031095E+01;
  COFD[2881] = 5.39439999E+00;
  COFD[2882] = -4.72050184E-01;
  COFD[2883] = 1.99336257E-02;
  COFD[2884] = -2.14049498E+01;
  COFD[2885] = 5.41122754E+00;
  COFD[2886] = -4.73185889E-01;
  COFD[2887] = 1.99407905E-02;
  COFD[2888] = -2.13961359E+01;
  COFD[2889] = 5.46685775E+00;
  COFD[2890] = -4.78665416E-01;
  COFD[2891] = 2.01093915E-02;
  COFD[2892] = -2.14079831E+01;
  COFD[2893] = 5.46685775E+00;
  COFD[2894] = -4.78665416E-01;
  COFD[2895] = 2.01093915E-02;
  COFD[2896] = -2.22116629E+01;
  COFD[2897] = 5.54251230E+00;
  COFD[2898] = -4.70946314E-01;
  COFD[2899] = 1.90785869E-02;
  COFD[2900] = -1.94485902E+01;
  COFD[2901] = 4.91446566E+00;
  COFD[2902] = -4.18837152E-01;
  COFD[2903] = 1.79893537E-02;
  COFD[2904] = -2.22176875E+01;
  COFD[2905] = 5.54251230E+00;
  COFD[2906] = -4.70946314E-01;
  COFD[2907] = 1.90785869E-02;
  COFD[2908] = -2.22176875E+01;
  COFD[2909] = 5.54251230E+00;
  COFD[2910] = -4.70946314E-01;
  COFD[2911] = 1.90785869E-02;
  COFD[2912] = -2.22235050E+01;
  COFD[2913] = 5.54251230E+00;
  COFD[2914] = -4.70946314E-01;
  COFD[2915] = 1.90785869E-02;
  COFD[2916] = -2.21697345E+01;
  COFD[2917] = 5.60807471E+00;
  COFD[2918] = -4.91339309E-01;
  COFD[2919] = 2.04365761E-02;
  COFD[2920] = -2.20725828E+01;
  COFD[2921] = 5.59642965E+00;
  COFD[2922] = -4.91577716E-01;
  COFD[2923] = 2.05159582E-02;
  COFD[2924] = -2.23890254E+01;
  COFD[2925] = 5.59178974E+00;
  COFD[2926] = -4.85668031E-01;
  COFD[2927] = 2.00491907E-02;
  COFD[2928] = -2.22051951E+01;
  COFD[2929] = 5.58604166E+00;
  COFD[2930] = -4.90602184E-01;
  COFD[2931] = 2.04880352E-02;
  COFD[2932] = -2.23772618E+01;
  COFD[2933] = 5.59425354E+00;
  COFD[2934] = -4.86232980E-01;
  COFD[2935] = 2.00835981E-02;
  COFD[2936] = -2.23812666E+01;
  COFD[2937] = 5.59425354E+00;
  COFD[2938] = -4.86232980E-01;
  COFD[2939] = 2.00835981E-02;
  COFD[2940] = -2.25216553E+01;
  COFD[2941] = 5.59792043E+00;
  COFD[2942] = -4.87076900E-01;
  COFD[2943] = 2.01350364E-02;
  COFD[2944] = -2.25029995E+01;
  COFD[2945] = 5.54343040E+00;
  COFD[2946] = -4.71119709E-01;
  COFD[2947] = 1.90882654E-02;
  COFD[2948] = -2.24358781E+01;
  COFD[2949] = 5.49898884E+00;
  COFD[2950] = -4.61772331E-01;
  COFD[2951] = 1.85402241E-02;
  COFD[2952] = -2.25171676E+01;
  COFD[2953] = 5.56329531E+00;
  COFD[2954] = -4.74889573E-01;
  COFD[2955] = 1.92992655E-02;
  COFD[2956] = -2.26897123E+01;
  COFD[2957] = 5.58518389E+00;
  COFD[2958] = -4.80570209E-01;
  COFD[2959] = 1.96586179E-02;
  COFD[2960] = -2.26749928E+01;
  COFD[2961] = 5.58486459E+00;
  COFD[2962] = -4.81517134E-01;
  COFD[2963] = 1.97388064E-02;
  COFD[2964] = -2.23098102E+01;
  COFD[2965] = 5.49916900E+00;
  COFD[2966] = -4.61818485E-01;
  COFD[2967] = 1.85431163E-02;
  COFD[2968] = -2.21082949E+01;
  COFD[2969] = 5.48540187E+00;
  COFD[2970] = -4.58962148E-01;
  COFD[2971] = 1.83770355E-02;
  COFD[2972] = -2.21133921E+01;
  COFD[2973] = 5.48540187E+00;
  COFD[2974] = -4.58962148E-01;
  COFD[2975] = 1.83770355E-02;
  COFD[2976] = -2.22996973E+01;
  COFD[2977] = 5.52974749E+00;
  COFD[2978] = -4.68512662E-01;
  COFD[2979] = 1.89420259E-02;
  COFD[2980] = -2.24903354E+01;
  COFD[2981] = 5.50307951E+00;
  COFD[2982] = -4.63028460E-01;
  COFD[2983] = 1.86232487E-02;
  COFD[2984] = -2.25320678E+01;
  COFD[2985] = 5.58240011E+00;
  COFD[2986] = -4.78844918E-01;
  COFD[2987] = 1.95298191E-02;
  COFD[2988] = -2.25435817E+01;
  COFD[2989] = 5.45615714E+00;
  COFD[2990] = -4.53643844E-01;
  COFD[2991] = 1.80854821E-02;
  COFD[2992] = -2.26294991E+01;
  COFD[2993] = 5.45615714E+00;
  COFD[2994] = -4.53643844E-01;
  COFD[2995] = 1.80854821E-02;
  COFD[2996] = -2.25838020E+01;
  COFD[2997] = 5.45615714E+00;
  COFD[2998] = -4.53643844E-01;
  COFD[2999] = 1.80854821E-02;
  COFD[3000] = -2.25838020E+01;
  COFD[3001] = 5.45615714E+00;
  COFD[3002] = -4.53643844E-01;
  COFD[3003] = 1.80854821E-02;
  COFD[3004] = -2.21216771E+01;
  COFD[3005] = 5.60203389E+00;
  COFD[3006] = -4.91444416E-01;
  COFD[3007] = 2.04761886E-02;
  COFD[3008] = -2.21630250E+01;
  COFD[3009] = 5.60807471E+00;
  COFD[3010] = -4.91339309E-01;
  COFD[3011] = 2.04365761E-02;
  COFD[3012] = -2.10296520E+01;
  COFD[3013] = 5.30153901E+00;
  COFD[3014] = -4.63335119E-01;
  COFD[3015] = 1.96897053E-02;
  COFD[3016] = -1.93015519E+01;
  COFD[3017] = 4.85015581E+00;
  COFD[3018] = -4.10945109E-01;
  COFD[3019] = 1.76651398E-02;
  COFD[3020] = -2.27416960E+01;
  COFD[3021] = 5.46024138E+00;
  COFD[3022] = -4.54393167E-01;
  COFD[3023] = 1.81267166E-02;
  COFD[3024] = -2.25194147E+01;
  COFD[3025] = 5.46478750E+00;
  COFD[3026] = -4.55228918E-01;
  COFD[3027] = 1.81727509E-02;
  COFD[3028] = -2.25167352E+01;
  COFD[3029] = 5.46478750E+00;
  COFD[3030] = -4.55228918E-01;
  COFD[3031] = 1.81727509E-02;
  COFD[3032] = -2.26165691E+01;
  COFD[3033] = 5.47076861E+00;
  COFD[3034] = -4.56309725E-01;
  COFD[3035] = 1.82318198E-02;
  COFD[3036] = -2.26275900E+01;
  COFD[3037] = 5.46993660E+00;
  COFD[3038] = -4.56159027E-01;
  COFD[3039] = 1.82235738E-02;
  COFD[3040] = -2.27116223E+01;
  COFD[3041] = 5.46024138E+00;
  COFD[3042] = -4.54393167E-01;
  COFD[3043] = 1.81267166E-02;
  COFD[3044] = -2.27096242E+01;
  COFD[3045] = 5.46024138E+00;
  COFD[3046] = -4.54393167E-01;
  COFD[3047] = 1.81267166E-02;
  COFD[3048] = -2.28671163E+01;
  COFD[3049] = 5.50522401E+00;
  COFD[3050] = -4.63604304E-01;
  COFD[3051] = 1.86600785E-02;
  COFD[3052] = -2.28655682E+01;
  COFD[3053] = 5.50522401E+00;
  COFD[3054] = -4.63604304E-01;
  COFD[3055] = 1.86600785E-02;
  COFD[3056] = -2.28655682E+01;
  COFD[3057] = 5.50522401E+00;
  COFD[3058] = -4.63604304E-01;
  COFD[3059] = 1.86600785E-02;
  COFD[3060] = -2.28655682E+01;
  COFD[3061] = 5.50522401E+00;
  COFD[3062] = -4.63604304E-01;
  COFD[3063] = 1.86600785E-02;
  COFD[3064] = -2.28655682E+01;
  COFD[3065] = 5.50522401E+00;
  COFD[3066] = -4.63604304E-01;
  COFD[3067] = 1.86600785E-02;
  COFD[3068] = -2.28480783E+01;
  COFD[3069] = 5.50671804E+00;
  COFD[3070] = -4.63960340E-01;
  COFD[3071] = 1.86820220E-02;
  COFD[3072] = -2.28480783E+01;
  COFD[3073] = 5.50671804E+00;
  COFD[3074] = -4.63960340E-01;
  COFD[3075] = 1.86820220E-02;
  COFD[3076] = -2.26542292E+01;
  COFD[3077] = 5.30716061E+00;
  COFD[3078] = -4.27308091E-01;
  COFD[3079] = 1.66655289E-02;
  COFD[3080] = -2.26542292E+01;
  COFD[3081] = 5.30716061E+00;
  COFD[3082] = -4.27308091E-01;
  COFD[3083] = 1.66655289E-02;
  COFD[3084] = -2.26542292E+01;
  COFD[3085] = 5.30716061E+00;
  COFD[3086] = -4.27308091E-01;
  COFD[3087] = 1.66655289E-02;
  COFD[3088] = -2.26542292E+01;
  COFD[3089] = 5.30716061E+00;
  COFD[3090] = -4.27308091E-01;
  COFD[3091] = 1.66655289E-02;
  COFD[3092] = -2.26542292E+01;
  COFD[3093] = 5.30716061E+00;
  COFD[3094] = -4.27308091E-01;
  COFD[3095] = 1.66655289E-02;
  COFD[3096] = -2.26542292E+01;
  COFD[3097] = 5.30716061E+00;
  COFD[3098] = -4.27308091E-01;
  COFD[3099] = 1.66655289E-02;
  COFD[3100] = -2.26542292E+01;
  COFD[3101] = 5.30716061E+00;
  COFD[3102] = -4.27308091E-01;
  COFD[3103] = 1.66655289E-02;
  COFD[3104] = -2.26542292E+01;
  COFD[3105] = 5.30716061E+00;
  COFD[3106] = -4.27308091E-01;
  COFD[3107] = 1.66655289E-02;
  COFD[3108] = -2.26542292E+01;
  COFD[3109] = 5.30716061E+00;
  COFD[3110] = -4.27308091E-01;
  COFD[3111] = 1.66655289E-02;
  COFD[3112] = -2.26542292E+01;
  COFD[3113] = 5.30716061E+00;
  COFD[3114] = -4.27308091E-01;
  COFD[3115] = 1.66655289E-02;
  COFD[3116] = -2.26542292E+01;
  COFD[3117] = 5.30716061E+00;
  COFD[3118] = -4.27308091E-01;
  COFD[3119] = 1.66655289E-02;
  COFD[3120] = -2.26542292E+01;
  COFD[3121] = 5.30716061E+00;
  COFD[3122] = -4.27308091E-01;
  COFD[3123] = 1.66655289E-02;
  COFD[3124] = -2.27195552E+01;
  COFD[3125] = 5.22366642E+00;
  COFD[3126] = -4.12932500E-01;
  COFD[3127] = 1.59020143E-02;
  COFD[3128] = -2.27195552E+01;
  COFD[3129] = 5.22366642E+00;
  COFD[3130] = -4.12932500E-01;
  COFD[3131] = 1.59020143E-02;
  COFD[3132] = -2.27195552E+01;
  COFD[3133] = 5.22366642E+00;
  COFD[3134] = -4.12932500E-01;
  COFD[3135] = 1.59020143E-02;
  COFD[3136] = -2.27195552E+01;
  COFD[3137] = 5.22366642E+00;
  COFD[3138] = -4.12932500E-01;
  COFD[3139] = 1.59020143E-02;
  COFD[3140] = -2.28084120E+01;
  COFD[3141] = 5.42479071E+00;
  COFD[3142] = -4.47980674E-01;
  COFD[3143] = 1.77763922E-02;
  COFD[3144] = -2.28084120E+01;
  COFD[3145] = 5.42479071E+00;
  COFD[3146] = -4.47980674E-01;
  COFD[3147] = 1.77763922E-02;
  COFD[3148] = -2.26171653E+01;
  COFD[3149] = 5.25394583E+00;
  COFD[3150] = -4.18252204E-01;
  COFD[3151] = 1.61873245E-02;
  COFD[3152] = -2.26171653E+01;
  COFD[3153] = 5.25394583E+00;
  COFD[3154] = -4.18252204E-01;
  COFD[3155] = 1.61873245E-02;
  COFD[3156] = -2.26171653E+01;
  COFD[3157] = 5.25394583E+00;
  COFD[3158] = -4.18252204E-01;
  COFD[3159] = 1.61873245E-02;
  COFD[3160] = -2.26171653E+01;
  COFD[3161] = 5.25394583E+00;
  COFD[3162] = -4.18252204E-01;
  COFD[3163] = 1.61873245E-02;
  COFD[3164] = -1.81432499E+01;
  COFD[3165] = 4.37565431E+00;
  COFD[3166] = -3.53906025E-01;
  COFD[3167] = 1.53760786E-02;
  COFD[3168] = -1.57995045E+01;
  COFD[3169] = 4.22225052E+00;
  COFD[3170] = -3.35156428E-01;
  COFD[3171] = 1.46104855E-02;
  COFD[3172] = -1.25141403E+01;
  COFD[3173] = 2.77873601E+00;
  COFD[3174] = -1.50637360E-01;
  COFD[3175] = 6.72684281E-03;
  COFD[3176] = -1.50766073E+01;
  COFD[3177] = 3.47945612E+00;
  COFD[3178] = -2.40703722E-01;
  COFD[3179] = 1.05907441E-02;
  COFD[3180] = -1.63493305E+01;
  COFD[3181] = 3.82388595E+00;
  COFD[3182] = -2.84480724E-01;
  COFD[3183] = 1.24506311E-02;
  COFD[3184] = -1.50911746E+01;
  COFD[3185] = 3.47945612E+00;
  COFD[3186] = -2.40703722E-01;
  COFD[3187] = 1.05907441E-02;
  COFD[3188] = -2.12831283E+01;
  COFD[3189] = 5.61184117E+00;
  COFD[3190] = -4.90532156E-01;
  COFD[3191] = 2.03507922E-02;
  COFD[3192] = -1.59862997E+01;
  COFD[3193] = 3.67388294E+00;
  COFD[3194] = -2.64990709E-01;
  COFD[3195] = 1.16042706E-02;
  COFD[3196] = -2.14391914E+01;
  COFD[3197] = 5.56531152E+00;
  COFD[3198] = -4.88789821E-01;
  COFD[3199] = 2.04437116E-02;
  COFD[3200] = -1.93276406E+01;
  COFD[3201] = 4.85015581E+00;
  COFD[3202] = -4.10945109E-01;
  COFD[3203] = 1.76651398E-02;
  COFD[3204] = -1.73374523E+01;
  COFD[3205] = 4.21416723E+00;
  COFD[3206] = -3.34163932E-01;
  COFD[3207] = 1.45697432E-02;
  COFD[3208] = -1.72738845E+01;
  COFD[3209] = 4.19029808E+00;
  COFD[3210] = -3.31177076E-01;
  COFD[3211] = 1.44446234E-02;
  COFD[3212] = -1.63542358E+01;
  COFD[3213] = 3.82388595E+00;
  COFD[3214] = -2.84480724E-01;
  COFD[3215] = 1.24506311E-02;
  COFD[3216] = -1.63588948E+01;
  COFD[3217] = 3.82388595E+00;
  COFD[3218] = -2.84480724E-01;
  COFD[3219] = 1.24506311E-02;
  COFD[3220] = -2.14449532E+01;
  COFD[3221] = 5.56531152E+00;
  COFD[3222] = -4.88789821E-01;
  COFD[3223] = 2.04437116E-02;
  COFD[3224] = -2.09612533E+01;
  COFD[3225] = 5.40870099E+00;
  COFD[3226] = -4.73017610E-01;
  COFD[3227] = 1.99399066E-02;
  COFD[3228] = -1.94819074E+01;
  COFD[3229] = 4.87180830E+00;
  COFD[3230] = -4.13582958E-01;
  COFD[3231] = 1.77726094E-02;
  COFD[3232] = -1.91225404E+01;
  COFD[3233] = 4.82869066E+00;
  COFD[3234] = -4.08564514E-01;
  COFD[3235] = 1.75784675E-02;
  COFD[3236] = -1.94761598E+01;
  COFD[3237] = 4.87180830E+00;
  COFD[3238] = -4.13582958E-01;
  COFD[3239] = 1.77726094E-02;
  COFD[3240] = -1.95770952E+01;
  COFD[3241] = 4.97133070E+00;
  COFD[3242] = -4.25604177E-01;
  COFD[3243] = 1.82582594E-02;
  COFD[3244] = -1.95839636E+01;
  COFD[3245] = 4.97133070E+00;
  COFD[3246] = -4.25604177E-01;
  COFD[3247] = 1.82582594E-02;
  COFD[3248] = -2.11606942E+01;
  COFD[3249] = 5.42846112E+00;
  COFD[3250] = -4.74321870E-01;
  COFD[3251] = 1.99459749E-02;
  COFD[3252] = -1.72828280E+01;
  COFD[3253] = 4.26063341E+00;
  COFD[3254] = -3.39848064E-01;
  COFD[3255] = 1.48021313E-02;
  COFD[3256] = -2.11637883E+01;
  COFD[3257] = 5.42846112E+00;
  COFD[3258] = -4.74321870E-01;
  COFD[3259] = 1.99459749E-02;
  COFD[3260] = -2.11637883E+01;
  COFD[3261] = 5.42846112E+00;
  COFD[3262] = -4.74321870E-01;
  COFD[3263] = 1.99459749E-02;
  COFD[3264] = -2.11667588E+01;
  COFD[3265] = 5.42846112E+00;
  COFD[3266] = -4.74321870E-01;
  COFD[3267] = 1.99459749E-02;
  COFD[3268] = -2.04309546E+01;
  COFD[3269] = 5.18271974E+00;
  COFD[3270] = -4.49323627E-01;
  COFD[3271] = 1.91373940E-02;
  COFD[3272] = -2.02692375E+01;
  COFD[3273] = 5.14418672E+00;
  COFD[3274] = -4.45631004E-01;
  COFD[3275] = 1.90308403E-02;
  COFD[3276] = -2.09490538E+01;
  COFD[3277] = 5.31360223E+00;
  COFD[3278] = -4.64787000E-01;
  COFD[3279] = 1.97483720E-02;
  COFD[3280] = -2.03971282E+01;
  COFD[3281] = 5.13279789E+00;
  COFD[3282] = -4.44474174E-01;
  COFD[3283] = 1.89937678E-02;
  COFD[3284] = -2.09108252E+01;
  COFD[3285] = 5.30526648E+00;
  COFD[3286] = -4.63785596E-01;
  COFD[3287] = 1.97079873E-02;
  COFD[3288] = -2.09127545E+01;
  COFD[3289] = 5.30526648E+00;
  COFD[3290] = -4.63785596E-01;
  COFD[3291] = 1.97079873E-02;
  COFD[3292] = -2.10124397E+01;
  COFD[3293] = 5.29210705E+00;
  COFD[3294] = -4.62193217E-01;
  COFD[3295] = 1.96432872E-02;
  COFD[3296] = -2.14088071E+01;
  COFD[3297] = 5.42683934E+00;
  COFD[3298] = -4.74132648E-01;
  COFD[3299] = 1.99385896E-02;
  COFD[3300] = -2.13615086E+01;
  COFD[3301] = 5.42586215E+00;
  COFD[3302] = -4.74018491E-01;
  COFD[3303] = 1.99341267E-02;
  COFD[3304] = -2.13531209E+01;
  COFD[3305] = 5.41551978E+00;
  COFD[3306] = -4.73373960E-01;
  COFD[3307] = 1.99340216E-02;
  COFD[3308] = -2.13903523E+01;
  COFD[3309] = 5.38519776E+00;
  COFD[3310] = -4.71344997E-01;
  COFD[3311] = 1.99226932E-02;
  COFD[3312] = -2.13459120E+01;
  COFD[3313] = 5.37197338E+00;
  COFD[3314] = -4.70392872E-01;
  COFD[3315] = 1.99122802E-02;
  COFD[3316] = -2.15588743E+01;
  COFD[3317] = 5.51982454E+00;
  COFD[3318] = -4.84452039E-01;
  COFD[3319] = 2.03175522E-02;
  COFD[3320] = -2.14314067E+01;
  COFD[3321] = 5.54007827E+00;
  COFD[3322] = -4.86434511E-01;
  COFD[3323] = 2.03779006E-02;
  COFD[3324] = -2.14339544E+01;
  COFD[3325] = 5.54007827E+00;
  COFD[3326] = -4.86434511E-01;
  COFD[3327] = 2.03779006E-02;
  COFD[3328] = -2.12967438E+01;
  COFD[3329] = 5.45075440E+00;
  COFD[3330] = -4.76902219E-01;
  COFD[3331] = 2.00457833E-02;
  COFD[3332] = -2.13969981E+01;
  COFD[3333] = 5.41821077E+00;
  COFD[3334] = -4.73430049E-01;
  COFD[3335] = 1.99247102E-02;
  COFD[3336] = -2.12960885E+01;
  COFD[3337] = 5.40206122E+00;
  COFD[3338] = -4.72555229E-01;
  COFD[3339] = 1.99358199E-02;
  COFD[3340] = -2.19369086E+01;
  COFD[3341] = 5.56282156E+00;
  COFD[3342] = -4.88585679E-01;
  COFD[3343] = 2.04395879E-02;
  COFD[3344] = -2.19743144E+01;
  COFD[3345] = 5.56282156E+00;
  COFD[3346] = -4.88585679E-01;
  COFD[3347] = 2.04395879E-02;
  COFD[3348] = -2.19548710E+01;
  COFD[3349] = 5.56282156E+00;
  COFD[3350] = -4.88585679E-01;
  COFD[3351] = 2.04395879E-02;
  COFD[3352] = -2.19548710E+01;
  COFD[3353] = 5.56282156E+00;
  COFD[3354] = -4.88585679E-01;
  COFD[3355] = 2.04395879E-02;
  COFD[3356] = -2.03367551E+01;
  COFD[3357] = 5.15740122E+00;
  COFD[3358] = -4.46644818E-01;
  COFD[3359] = 1.90459001E-02;
  COFD[3360] = -2.04274458E+01;
  COFD[3361] = 5.18271974E+00;
  COFD[3362] = -4.49323627E-01;
  COFD[3363] = 1.91373940E-02;
  COFD[3364] = -1.89077767E+01;
  COFD[3365] = 4.68393046E+00;
  COFD[3366] = -3.91610863E-01;
  COFD[3367] = 1.69174645E-02;
  COFD[3368] = -1.73198022E+01;
  COFD[3369] = 4.21416723E+00;
  COFD[3370] = -3.34163932E-01;
  COFD[3371] = 1.45697432E-02;
  COFD[3372] = -2.19764230E+01;
  COFD[3373] = 5.52955285E+00;
  COFD[3374] = -4.85397307E-01;
  COFD[3375] = 2.03459361E-02;
  COFD[3376] = -2.17022317E+01;
  COFD[3377] = 5.50491679E+00;
  COFD[3378] = -4.82850225E-01;
  COFD[3379] = 2.02611393E-02;
  COFD[3380] = -2.17010102E+01;
  COFD[3381] = 5.50491679E+00;
  COFD[3382] = -4.82850225E-01;
  COFD[3383] = 2.02611393E-02;
  COFD[3384] = -2.17103564E+01;
  COFD[3385] = 5.47889399E+00;
  COFD[3386] = -4.80005330E-01;
  COFD[3387] = 2.01587979E-02;
  COFD[3388] = -2.19503744E+01;
  COFD[3389] = 5.55357103E+00;
  COFD[3390] = -4.87792313E-01;
  COFD[3391] = 2.04213096E-02;
  COFD[3392] = -2.19634285E+01;
  COFD[3393] = 5.52955285E+00;
  COFD[3394] = -4.85397307E-01;
  COFD[3395] = 2.03459361E-02;
  COFD[3396] = -2.19625494E+01;
  COFD[3397] = 5.52955285E+00;
  COFD[3398] = -4.85397307E-01;
  COFD[3399] = 2.03459361E-02;
  COFD[3400] = -2.19557524E+01;
  COFD[3401] = 5.49350509E+00;
  COFD[3402] = -4.81613405E-01;
  COFD[3403] = 2.02171734E-02;
  COFD[3404] = -2.19550900E+01;
  COFD[3405] = 5.49350509E+00;
  COFD[3406] = -4.81613405E-01;
  COFD[3407] = 2.02171734E-02;
  COFD[3408] = -2.19550900E+01;
  COFD[3409] = 5.49350509E+00;
  COFD[3410] = -4.81613405E-01;
  COFD[3411] = 2.02171734E-02;
  COFD[3412] = -2.19550900E+01;
  COFD[3413] = 5.49350509E+00;
  COFD[3414] = -4.81613405E-01;
  COFD[3415] = 2.02171734E-02;
  COFD[3416] = -2.19550900E+01;
  COFD[3417] = 5.49350509E+00;
  COFD[3418] = -4.81613405E-01;
  COFD[3419] = 2.02171734E-02;
  COFD[3420] = -2.19243664E+01;
  COFD[3421] = 5.48897495E+00;
  COFD[3422] = -4.81122233E-01;
  COFD[3423] = 2.01997134E-02;
  COFD[3424] = -2.19243664E+01;
  COFD[3425] = 5.48897495E+00;
  COFD[3426] = -4.81122233E-01;
  COFD[3427] = 2.01997134E-02;
  COFD[3428] = -2.24310667E+01;
  COFD[3429] = 5.61234798E+00;
  COFD[3430] = -4.91297356E-01;
  COFD[3431] = 2.04115425E-02;
  COFD[3432] = -2.24310667E+01;
  COFD[3433] = 5.61234798E+00;
  COFD[3434] = -4.91297356E-01;
  COFD[3435] = 2.04115425E-02;
  COFD[3436] = -2.24310667E+01;
  COFD[3437] = 5.61234798E+00;
  COFD[3438] = -4.91297356E-01;
  COFD[3439] = 2.04115425E-02;
  COFD[3440] = -2.24310667E+01;
  COFD[3441] = 5.61234798E+00;
  COFD[3442] = -4.91297356E-01;
  COFD[3443] = 2.04115425E-02;
  COFD[3444] = -2.24310667E+01;
  COFD[3445] = 5.61234798E+00;
  COFD[3446] = -4.91297356E-01;
  COFD[3447] = 2.04115425E-02;
  COFD[3448] = -2.24310667E+01;
  COFD[3449] = 5.61234798E+00;
  COFD[3450] = -4.91297356E-01;
  COFD[3451] = 2.04115425E-02;
  COFD[3452] = -2.24310667E+01;
  COFD[3453] = 5.61234798E+00;
  COFD[3454] = -4.91297356E-01;
  COFD[3455] = 2.04115425E-02;
  COFD[3456] = -2.24310667E+01;
  COFD[3457] = 5.61234798E+00;
  COFD[3458] = -4.91297356E-01;
  COFD[3459] = 2.04115425E-02;
  COFD[3460] = -2.24310667E+01;
  COFD[3461] = 5.61234798E+00;
  COFD[3462] = -4.91297356E-01;
  COFD[3463] = 2.04115425E-02;
  COFD[3464] = -2.24310667E+01;
  COFD[3465] = 5.61234798E+00;
  COFD[3466] = -4.91297356E-01;
  COFD[3467] = 2.04115425E-02;
  COFD[3468] = -2.24310667E+01;
  COFD[3469] = 5.61234798E+00;
  COFD[3470] = -4.91297356E-01;
  COFD[3471] = 2.04115425E-02;
  COFD[3472] = -2.24310667E+01;
  COFD[3473] = 5.61234798E+00;
  COFD[3474] = -4.91297356E-01;
  COFD[3475] = 2.04115425E-02;
  COFD[3476] = -2.26313826E+01;
  COFD[3477] = 5.59491496E+00;
  COFD[3478] = -4.86385698E-01;
  COFD[3479] = 2.00929177E-02;
  COFD[3480] = -2.26313826E+01;
  COFD[3481] = 5.59491496E+00;
  COFD[3482] = -4.86385698E-01;
  COFD[3483] = 2.00929177E-02;
  COFD[3484] = -2.26313826E+01;
  COFD[3485] = 5.59491496E+00;
  COFD[3486] = -4.86385698E-01;
  COFD[3487] = 2.00929177E-02;
  COFD[3488] = -2.26313826E+01;
  COFD[3489] = 5.59491496E+00;
  COFD[3490] = -4.86385698E-01;
  COFD[3491] = 2.00929177E-02;
  COFD[3492] = -2.22722098E+01;
  COFD[3493] = 5.58214764E+00;
  COFD[3494] = -4.90223617E-01;
  COFD[3495] = 2.04764777E-02;
  COFD[3496] = -2.22722098E+01;
  COFD[3497] = 5.58214764E+00;
  COFD[3498] = -4.90223617E-01;
  COFD[3499] = 2.04764777E-02;
  COFD[3500] = -2.24943326E+01;
  COFD[3501] = 5.60859334E+00;
  COFD[3502] = -4.89526797E-01;
  COFD[3503] = 2.02839728E-02;
  COFD[3504] = -2.24943326E+01;
  COFD[3505] = 5.60859334E+00;
  COFD[3506] = -4.89526797E-01;
  COFD[3507] = 2.02839728E-02;
  COFD[3508] = -2.24943326E+01;
  COFD[3509] = 5.60859334E+00;
  COFD[3510] = -4.89526797E-01;
  COFD[3511] = 2.02839728E-02;
  COFD[3512] = -2.24943326E+01;
  COFD[3513] = 5.60859334E+00;
  COFD[3514] = -4.89526797E-01;
  COFD[3515] = 2.02839728E-02;
  COFD[3516] = -1.59633426E+01;
  COFD[3517] = 3.66853818E+00;
  COFD[3518] = -2.64346221E-01;
  COFD[3519] = 1.15784613E-02;
  COFD[3520] = -1.57199190E+01;
  COFD[3521] = 4.19936335E+00;
  COFD[3522] = -3.32311009E-01;
  COFD[3523] = 1.44921003E-02;
  COFD[3524] = -1.24693714E+01;
  COFD[3525] = 2.76686648E+00;
  COFD[3526] = -1.49120141E-01;
  COFD[3527] = 6.66220432E-03;
  COFD[3528] = -1.50270285E+01;
  COFD[3529] = 3.46140064E+00;
  COFD[3530] = -2.38440092E-01;
  COFD[3531] = 1.04960087E-02;
  COFD[3532] = -1.62724429E+01;
  COFD[3533] = 3.79163564E+00;
  COFD[3534] = -2.80257365E-01;
  COFD[3535] = 1.22656902E-02;
  COFD[3536] = -1.50420909E+01;
  COFD[3537] = 3.46140064E+00;
  COFD[3538] = -2.38440092E-01;
  COFD[3539] = 1.04960087E-02;
  COFD[3540] = -2.14087360E+01;
  COFD[3541] = 5.57281993E+00;
  COFD[3542] = -4.76690860E-01;
  COFD[3543] = 1.94000702E-02;
  COFD[3544] = -1.59525075E+01;
  COFD[3545] = 3.66023858E+00;
  COFD[3546] = -2.63401043E-01;
  COFD[3547] = 1.15432000E-02;
  COFD[3548] = -2.14022312E+01;
  COFD[3549] = 5.55346617E+00;
  COFD[3550] = -4.87783156E-01;
  COFD[3551] = 2.04210886E-02;
  COFD[3552] = -1.92867532E+01;
  COFD[3553] = 4.83375900E+00;
  COFD[3554] = -4.09146560E-01;
  COFD[3555] = 1.76006599E-02;
  COFD[3556] = -1.72738845E+01;
  COFD[3557] = 4.19029808E+00;
  COFD[3558] = -3.31177076E-01;
  COFD[3559] = 1.44446234E-02;
  COFD[3560] = -1.72167712E+01;
  COFD[3561] = 4.16886779E+00;
  COFD[3562] = -3.28518156E-01;
  COFD[3563] = 1.43341626E-02;
  COFD[3564] = -1.62775683E+01;
  COFD[3565] = 3.79163564E+00;
  COFD[3566] = -2.80257365E-01;
  COFD[3567] = 1.22656902E-02;
  COFD[3568] = -1.62824385E+01;
  COFD[3569] = 3.79163564E+00;
  COFD[3570] = -2.80257365E-01;
  COFD[3571] = 1.22656902E-02;
  COFD[3572] = -2.14082433E+01;
  COFD[3573] = 5.55346617E+00;
  COFD[3574] = -4.87783156E-01;
  COFD[3575] = 2.04210886E-02;
  COFD[3576] = -2.11381493E+01;
  COFD[3577] = 5.45574448E+00;
  COFD[3578] = -4.77436163E-01;
  COFD[3579] = 2.00644599E-02;
  COFD[3580] = -1.94186548E+01;
  COFD[3581] = 4.84669430E+00;
  COFD[3582] = -4.10571455E-01;
  COFD[3583] = 1.76520543E-02;
  COFD[3584] = -1.90692591E+01;
  COFD[3585] = 4.80830699E+00;
  COFD[3586] = -4.06171933E-01;
  COFD[3587] = 1.74848791E-02;
  COFD[3588] = -1.94126574E+01;
  COFD[3589] = 4.84669430E+00;
  COFD[3590] = -4.10571455E-01;
  COFD[3591] = 1.76520543E-02;
  COFD[3592] = -1.95154070E+01;
  COFD[3593] = 4.94787350E+00;
  COFD[3594] = -4.22829292E-01;
  COFD[3595] = 1.81487163E-02;
  COFD[3596] = -1.95225623E+01;
  COFD[3597] = 4.94787350E+00;
  COFD[3598] = -4.22829292E-01;
  COFD[3599] = 1.81487163E-02;
  COFD[3600] = -2.11309194E+01;
  COFD[3601] = 5.41773516E+00;
  COFD[3602] = -4.73414338E-01;
  COFD[3603] = 1.99258685E-02;
  COFD[3604] = -1.72316133E+01;
  COFD[3605] = 4.24011069E+00;
  COFD[3606] = -3.37339810E-01;
  COFD[3607] = 1.46996679E-02;
  COFD[3608] = -2.11341641E+01;
  COFD[3609] = 5.41773516E+00;
  COFD[3610] = -4.73414338E-01;
  COFD[3611] = 1.99258685E-02;
  COFD[3612] = -2.11341641E+01;
  COFD[3613] = 5.41773516E+00;
  COFD[3614] = -4.73414338E-01;
  COFD[3615] = 1.99258685E-02;
  COFD[3616] = -2.11372801E+01;
  COFD[3617] = 5.41773516E+00;
  COFD[3618] = -4.73414338E-01;
  COFD[3619] = 1.99258685E-02;
  COFD[3620] = -2.03775647E+01;
  COFD[3621] = 5.16159436E+00;
  COFD[3622] = -4.46935283E-01;
  COFD[3623] = 1.90480297E-02;
  COFD[3624] = -2.02318656E+01;
  COFD[3625] = 5.12963391E+00;
  COFD[3626] = -4.44146826E-01;
  COFD[3627] = 1.89829640E-02;
  COFD[3628] = -2.08822485E+01;
  COFD[3629] = 5.28557747E+00;
  COFD[3630] = -4.61402384E-01;
  COFD[3631] = 1.96111546E-02;
  COFD[3632] = -2.03526104E+01;
  COFD[3633] = 5.11453301E+00;
  COFD[3634] = -4.42447016E-01;
  COFD[3635] = 1.89196698E-02;
  COFD[3636] = -2.08427676E+01;
  COFD[3637] = 5.27674330E+00;
  COFD[3638] = -4.60336155E-01;
  COFD[3639] = 1.95680191E-02;
  COFD[3640] = -2.08447974E+01;
  COFD[3641] = 5.27674330E+00;
  COFD[3642] = -4.60336155E-01;
  COFD[3643] = 1.95680191E-02;
  COFD[3644] = -2.09461019E+01;
  COFD[3645] = 5.26396793E+00;
  COFD[3646] = -4.58812213E-01;
  COFD[3647] = 1.95072180E-02;
  COFD[3648] = -2.13853200E+01;
  COFD[3649] = 5.41738973E+00;
  COFD[3650] = -4.73403163E-01;
  COFD[3651] = 1.99267294E-02;
  COFD[3652] = -2.16869196E+01;
  COFD[3653] = 5.52492676E+00;
  COFD[3654] = -4.84939862E-01;
  COFD[3655] = 2.03317591E-02;
  COFD[3656] = -2.13355255E+01;
  COFD[3657] = 5.40862298E+00;
  COFD[3658] = -4.73011816E-01;
  COFD[3659] = 1.99398284E-02;
  COFD[3660] = -2.13695648E+01;
  COFD[3661] = 5.37614538E+00;
  COFD[3662] = -4.70679659E-01;
  COFD[3663] = 1.99143937E-02;
  COFD[3664] = -2.13282916E+01;
  COFD[3665] = 5.36375915E+00;
  COFD[3666] = -4.69808196E-01;
  COFD[3667] = 1.99064589E-02;
  COFD[3668] = -2.15067572E+01;
  COFD[3669] = 5.49964831E+00;
  COFD[3670] = -4.82275380E-01;
  COFD[3671] = 2.02405072E-02;
  COFD[3672] = -2.13881929E+01;
  COFD[3673] = 5.52422470E+00;
  COFD[3674] = -4.84872944E-01;
  COFD[3675] = 2.03298213E-02;
  COFD[3676] = -2.13908684E+01;
  COFD[3677] = 5.52422470E+00;
  COFD[3678] = -4.84872944E-01;
  COFD[3679] = 2.03298213E-02;
  COFD[3680] = -2.12351065E+01;
  COFD[3681] = 5.42585491E+00;
  COFD[3682] = -4.74017644E-01;
  COFD[3683] = 1.99340936E-02;
  COFD[3684] = -2.16936316E+01;
  COFD[3685] = 5.50680139E+00;
  COFD[3686] = -4.83057036E-01;
  COFD[3687] = 2.02686296E-02;
  COFD[3688] = -2.12758585E+01;
  COFD[3689] = 5.39400772E+00;
  COFD[3690] = -4.72026046E-01;
  COFD[3691] = 1.99336599E-02;
  COFD[3692] = -2.19054913E+01;
  COFD[3693] = 5.54986547E+00;
  COFD[3694] = -4.87420926E-01;
  COFD[3695] = 2.04095097E-02;
  COFD[3696] = -2.19450262E+01;
  COFD[3697] = 5.54986547E+00;
  COFD[3698] = -4.87420926E-01;
  COFD[3699] = 2.04095097E-02;
  COFD[3700] = -2.19244552E+01;
  COFD[3701] = 5.54986547E+00;
  COFD[3702] = -4.87420926E-01;
  COFD[3703] = 2.04095097E-02;
  COFD[3704] = -2.19244552E+01;
  COFD[3705] = 5.54986547E+00;
  COFD[3706] = -4.87420926E-01;
  COFD[3707] = 2.04095097E-02;
  COFD[3708] = -2.03123537E+01;
  COFD[3709] = 5.14854169E+00;
  COFD[3710] = -4.45984343E-01;
  COFD[3711] = 1.90374217E-02;
  COFD[3712] = -2.03738885E+01;
  COFD[3713] = 5.16159436E+00;
  COFD[3714] = -4.46935283E-01;
  COFD[3715] = 1.90480297E-02;
  COFD[3716] = -1.88538428E+01;
  COFD[3717] = 4.66162351E+00;
  COFD[3718] = -3.88920477E-01;
  COFD[3719] = 1.68089648E-02;
  COFD[3720] = -1.72556722E+01;
  COFD[3721] = 4.19029808E+00;
  COFD[3722] = -3.31177076E-01;
  COFD[3723] = 1.44446234E-02;
  COFD[3724] = -2.20837914E+01;
  COFD[3725] = 5.55543391E+00;
  COFD[3726] = -4.87954417E-01;
  COFD[3727] = 2.04251880E-02;
  COFD[3728] = -2.18920141E+01;
  COFD[3729] = 5.55631108E+00;
  COFD[3730] = -4.88030373E-01;
  COFD[3731] = 2.04269830E-02;
  COFD[3732] = -2.18907256E+01;
  COFD[3733] = 5.55631108E+00;
  COFD[3734] = -4.88030373E-01;
  COFD[3735] = 2.04269830E-02;
  COFD[3736] = -2.19807702E+01;
  COFD[3737] = 5.55577026E+00;
  COFD[3738] = -4.87983571E-01;
  COFD[3739] = 2.04258787E-02;
  COFD[3740] = -2.19120962E+01;
  COFD[3741] = 5.53726725E+00;
  COFD[3742] = -4.86156279E-01;
  COFD[3743] = 2.03692571E-02;
  COFD[3744] = -2.20700524E+01;
  COFD[3745] = 5.55543391E+00;
  COFD[3746] = -4.87954417E-01;
  COFD[3747] = 2.04251880E-02;
  COFD[3748] = -2.20691237E+01;
  COFD[3749] = 5.55543391E+00;
  COFD[3750] = -4.87954417E-01;
  COFD[3751] = 2.04251880E-02;
  COFD[3752] = -2.19060849E+01;
  COFD[3753] = 5.47162499E+00;
  COFD[3754] = -4.79195552E-01;
  COFD[3755] = 2.01289088E-02;
  COFD[3756] = -2.19053842E+01;
  COFD[3757] = 5.47162499E+00;
  COFD[3758] = -4.79195552E-01;
  COFD[3759] = 2.01289088E-02;
  COFD[3760] = -2.19053842E+01;
  COFD[3761] = 5.47162499E+00;
  COFD[3762] = -4.79195552E-01;
  COFD[3763] = 2.01289088E-02;
  COFD[3764] = -2.19053842E+01;
  COFD[3765] = 5.47162499E+00;
  COFD[3766] = -4.79195552E-01;
  COFD[3767] = 2.01289088E-02;
  COFD[3768] = -2.19053842E+01;
  COFD[3769] = 5.47162499E+00;
  COFD[3770] = -4.79195552E-01;
  COFD[3771] = 2.01289088E-02;
  COFD[3772] = -2.18761165E+01;
  COFD[3773] = 5.46751241E+00;
  COFD[3774] = -4.78738367E-01;
  COFD[3775] = 2.01120843E-02;
  COFD[3776] = -2.18761165E+01;
  COFD[3777] = 5.46751241E+00;
  COFD[3778] = -4.78738367E-01;
  COFD[3779] = 2.01120843E-02;
  COFD[3780] = -2.24475415E+01;
  COFD[3781] = 5.61233595E+00;
  COFD[3782] = -4.91420667E-01;
  COFD[3783] = 2.04217927E-02;
  COFD[3784] = -2.24475415E+01;
  COFD[3785] = 5.61233595E+00;
  COFD[3786] = -4.91420667E-01;
  COFD[3787] = 2.04217927E-02;
  COFD[3788] = -2.24475415E+01;
  COFD[3789] = 5.61233595E+00;
  COFD[3790] = -4.91420667E-01;
  COFD[3791] = 2.04217927E-02;
  COFD[3792] = -2.24475415E+01;
  COFD[3793] = 5.61233595E+00;
  COFD[3794] = -4.91420667E-01;
  COFD[3795] = 2.04217927E-02;
  COFD[3796] = -2.24475415E+01;
  COFD[3797] = 5.61233595E+00;
  COFD[3798] = -4.91420667E-01;
  COFD[3799] = 2.04217927E-02;
  COFD[3800] = -2.24475415E+01;
  COFD[3801] = 5.61233595E+00;
  COFD[3802] = -4.91420667E-01;
  COFD[3803] = 2.04217927E-02;
  COFD[3804] = -2.24475415E+01;
  COFD[3805] = 5.61233595E+00;
  COFD[3806] = -4.91420667E-01;
  COFD[3807] = 2.04217927E-02;
  COFD[3808] = -2.24475415E+01;
  COFD[3809] = 5.61233595E+00;
  COFD[3810] = -4.91420667E-01;
  COFD[3811] = 2.04217927E-02;
  COFD[3812] = -2.24475415E+01;
  COFD[3813] = 5.61233595E+00;
  COFD[3814] = -4.91420667E-01;
  COFD[3815] = 2.04217927E-02;
  COFD[3816] = -2.24475415E+01;
  COFD[3817] = 5.61233595E+00;
  COFD[3818] = -4.91420667E-01;
  COFD[3819] = 2.04217927E-02;
  COFD[3820] = -2.24475415E+01;
  COFD[3821] = 5.61233595E+00;
  COFD[3822] = -4.91420667E-01;
  COFD[3823] = 2.04217927E-02;
  COFD[3824] = -2.24475415E+01;
  COFD[3825] = 5.61233595E+00;
  COFD[3826] = -4.91420667E-01;
  COFD[3827] = 2.04217927E-02;
  COFD[3828] = -2.26529259E+01;
  COFD[3829] = 5.59823763E+00;
  COFD[3830] = -4.87149903E-01;
  COFD[3831] = 2.01394827E-02;
  COFD[3832] = -2.26529259E+01;
  COFD[3833] = 5.59823763E+00;
  COFD[3834] = -4.87149903E-01;
  COFD[3835] = 2.01394827E-02;
  COFD[3836] = -2.26529259E+01;
  COFD[3837] = 5.59823763E+00;
  COFD[3838] = -4.87149903E-01;
  COFD[3839] = 2.01394827E-02;
  COFD[3840] = -2.26529259E+01;
  COFD[3841] = 5.59823763E+00;
  COFD[3842] = -4.87149903E-01;
  COFD[3843] = 2.01394827E-02;
  COFD[3844] = -2.22469367E+01;
  COFD[3845] = 5.57022782E+00;
  COFD[3846] = -4.89175812E-01;
  COFD[3847] = 2.04504780E-02;
  COFD[3848] = -2.22469367E+01;
  COFD[3849] = 5.57022782E+00;
  COFD[3850] = -4.89175812E-01;
  COFD[3851] = 2.04504780E-02;
  COFD[3852] = -2.25146548E+01;
  COFD[3853] = 5.60863009E+00;
  COFD[3854] = -4.89536007E-01;
  COFD[3855] = 2.02845498E-02;
  COFD[3856] = -2.25146548E+01;
  COFD[3857] = 5.60863009E+00;
  COFD[3858] = -4.89536007E-01;
  COFD[3859] = 2.02845498E-02;
  COFD[3860] = -2.25146548E+01;
  COFD[3861] = 5.60863009E+00;
  COFD[3862] = -4.89536007E-01;
  COFD[3863] = 2.02845498E-02;
  COFD[3864] = -2.25146548E+01;
  COFD[3865] = 5.60863009E+00;
  COFD[3866] = -4.89536007E-01;
  COFD[3867] = 2.02845498E-02;
  COFD[3868] = -1.59327344E+01;
  COFD[3869] = 3.65620899E+00;
  COFD[3870] = -2.62933804E-01;
  COFD[3871] = 1.15253223E-02;
  COFD[3872] = -1.46554904E+01;
  COFD[3873] = 3.83606243E+00;
  COFD[3874] = -2.86076532E-01;
  COFD[3875] = 1.25205829E-02;
  COFD[3876] = -1.18998160E+01;
  COFD[3877] = 2.57507000E+00;
  COFD[3878] = -1.24033737E-01;
  COFD[3879] = 5.56694959E-03;
  COFD[3880] = -1.43190281E+01;
  COFD[3881] = 3.17651319E+00;
  COFD[3882] = -2.02028974E-01;
  COFD[3883] = 8.94232502E-03;
  COFD[3884] = -1.55588172E+01;
  COFD[3885] = 3.48070094E+00;
  COFD[3886] = -2.40859499E-01;
  COFD[3887] = 1.05972514E-02;
  COFD[3888] = -1.43393972E+01;
  COFD[3889] = 3.17651319E+00;
  COFD[3890] = -2.02028974E-01;
  COFD[3891] = 8.94232502E-03;
  COFD[3892] = -2.06463656E+01;
  COFD[3893] = 5.41688482E+00;
  COFD[3894] = -4.73387188E-01;
  COFD[3895] = 1.99280175E-02;
  COFD[3896] = -1.52792799E+01;
  COFD[3897] = 3.36790500E+00;
  COFD[3898] = -2.26321740E-01;
  COFD[3899] = 9.97135055E-03;
  COFD[3900] = -2.08277510E+01;
  COFD[3901] = 5.35267674E+00;
  COFD[3902] = -4.69010505E-01;
  COFD[3903] = 1.98979152E-02;
  COFD[3904] = -1.84777509E+01;
  COFD[3905] = 4.49330851E+00;
  COFD[3906] = -3.68208715E-01;
  COFD[3907] = 1.59565402E-02;
  COFD[3908] = -1.63542358E+01;
  COFD[3909] = 3.82388595E+00;
  COFD[3910] = -2.84480724E-01;
  COFD[3911] = 1.24506311E-02;
  COFD[3912] = -1.62775683E+01;
  COFD[3913] = 3.79163564E+00;
  COFD[3914] = -2.80257365E-01;
  COFD[3915] = 1.22656902E-02;
  COFD[3916] = -1.55666313E+01;
  COFD[3917] = 3.48070094E+00;
  COFD[3918] = -2.40859499E-01;
  COFD[3919] = 1.05972514E-02;
  COFD[3920] = -1.55740954E+01;
  COFD[3921] = 3.48070094E+00;
  COFD[3922] = -2.40859499E-01;
  COFD[3923] = 1.05972514E-02;
  COFD[3924] = -2.08367641E+01;
  COFD[3925] = 5.35267674E+00;
  COFD[3926] = -4.69010505E-01;
  COFD[3927] = 1.98979152E-02;
  COFD[3928] = -2.02637913E+01;
  COFD[3929] = 5.14984081E+00;
  COFD[3930] = -4.46093018E-01;
  COFD[3931] = 1.90396647E-02;
  COFD[3932] = -1.85919162E+01;
  COFD[3933] = 4.51052425E+00;
  COFD[3934] = -3.70301627E-01;
  COFD[3935] = 1.60416153E-02;
  COFD[3936] = -1.82217141E+01;
  COFD[3937] = 4.46848269E+00;
  COFD[3938] = -3.65269718E-01;
  COFD[3939] = 1.58407652E-02;
  COFD[3940] = -1.85829229E+01;
  COFD[3941] = 4.51052425E+00;
  COFD[3942] = -3.70301627E-01;
  COFD[3943] = 1.60416153E-02;
  COFD[3944] = -1.86576128E+01;
  COFD[3945] = 4.60874797E+00;
  COFD[3946] = -3.82368716E-01;
  COFD[3947] = 1.65370164E-02;
  COFD[3948] = -1.86681399E+01;
  COFD[3949] = 4.60874797E+00;
  COFD[3950] = -3.82368716E-01;
  COFD[3951] = 1.65370164E-02;
  COFD[3952] = -2.05272244E+01;
  COFD[3953] = 5.18417470E+00;
  COFD[3954] = -4.49491573E-01;
  COFD[3955] = 1.91438508E-02;
  COFD[3956] = -1.64255877E+01;
  COFD[3957] = 3.89309916E+00;
  COFD[3958] = -2.93528188E-01;
  COFD[3959] = 1.28463177E-02;
  COFD[3960] = -2.05324009E+01;
  COFD[3961] = 5.18417470E+00;
  COFD[3962] = -4.49491573E-01;
  COFD[3963] = 1.91438508E-02;
  COFD[3964] = -2.05324009E+01;
  COFD[3965] = 5.18417470E+00;
  COFD[3966] = -4.49491573E-01;
  COFD[3967] = 1.91438508E-02;
  COFD[3968] = -2.05373910E+01;
  COFD[3969] = 5.18417470E+00;
  COFD[3970] = -4.49491573E-01;
  COFD[3971] = 1.91438508E-02;
  COFD[3972] = -1.95961528E+01;
  COFD[3973] = 4.84393038E+00;
  COFD[3974] = -4.10274737E-01;
  COFD[3975] = 1.76417458E-02;
  COFD[3976] = -1.94004730E+01;
  COFD[3977] = 4.78708023E+00;
  COFD[3978] = -4.03693144E-01;
  COFD[3979] = 1.73884817E-02;
  COFD[3980] = -2.01412400E+01;
  COFD[3981] = 4.97613338E+00;
  COFD[3982] = -4.26175206E-01;
  COFD[3983] = 1.82809270E-02;
  COFD[3984] = -1.95290165E+01;
  COFD[3985] = 4.77151544E+00;
  COFD[3986] = -4.01882811E-01;
  COFD[3987] = 1.73184814E-02;
  COFD[3988] = -2.01062134E+01;
  COFD[3989] = 4.96870443E+00;
  COFD[3990] = -4.25292447E-01;
  COFD[3991] = 1.82459096E-02;
  COFD[3992] = -2.01095898E+01;
  COFD[3993] = 4.96870443E+00;
  COFD[3994] = -4.25292447E-01;
  COFD[3995] = 1.82459096E-02;
  COFD[3996] = -2.02220428E+01;
  COFD[3997] = 4.95786261E+00;
  COFD[3998] = -4.24013131E-01;
  COFD[3999] = 1.81955669E-02;
  COFD[4000] = -2.08109539E+01;
  COFD[4001] = 5.18275931E+00;
  COFD[4002] = -4.49328195E-01;
  COFD[4003] = 1.91375697E-02;
  COFD[4004] = -2.07634519E+01;
  COFD[4005] = 5.18190887E+00;
  COFD[4006] = -4.49230019E-01;
  COFD[4007] = 1.91337948E-02;
  COFD[4008] = -2.07247702E+01;
  COFD[4009] = 5.15830988E+00;
  COFD[4010] = -4.46702918E-01;
  COFD[4011] = 1.90459497E-02;
  COFD[4012] = -2.07362677E+01;
  COFD[4013] = 5.10688723E+00;
  COFD[4014] = -4.41563971E-01;
  COFD[4015] = 1.88857198E-02;
  COFD[4016] = -2.06522432E+01;
  COFD[4017] = 5.07501764E+00;
  COFD[4018] = -4.37846596E-01;
  COFD[4019] = 1.87410133E-02;
  COFD[4020] = -2.09571067E+01;
  COFD[4021] = 5.28755355E+00;
  COFD[4022] = -4.61641920E-01;
  COFD[4023] = 1.96208961E-02;
  COFD[4024] = -2.08554822E+01;
  COFD[4025] = 5.32244593E+00;
  COFD[4026] = -4.65829403E-01;
  COFD[4027] = 1.97895274E-02;
  COFD[4028] = -2.08598273E+01;
  COFD[4029] = 5.32244593E+00;
  COFD[4030] = -4.65829403E-01;
  COFD[4031] = 1.97895274E-02;
  COFD[4032] = -2.06840309E+01;
  COFD[4033] = 5.20540788E+00;
  COFD[4034] = -4.51975238E-01;
  COFD[4035] = 1.92408880E-02;
  COFD[4036] = -2.07770166E+01;
  COFD[4037] = 5.16471086E+00;
  COFD[4038] = -4.47284488E-01;
  COFD[4039] = 1.90609361E-02;
  COFD[4040] = -2.06612046E+01;
  COFD[4041] = 5.14159226E+00;
  COFD[4042] = -4.45395793E-01;
  COFD[4043] = 1.90248052E-02;
  COFD[4044] = -2.14198684E+01;
  COFD[4045] = 5.35040988E+00;
  COFD[4046] = -4.68827063E-01;
  COFD[4047] = 1.98944407E-02;
  COFD[4048] = -2.14900304E+01;
  COFD[4049] = 5.35040988E+00;
  COFD[4050] = -4.68827063E-01;
  COFD[4051] = 1.98944407E-02;
  COFD[4052] = -2.14529879E+01;
  COFD[4053] = 5.35040988E+00;
  COFD[4054] = -4.68827063E-01;
  COFD[4055] = 1.98944407E-02;
  COFD[4056] = -2.14529879E+01;
  COFD[4057] = 5.35040988E+00;
  COFD[4058] = -4.68827063E-01;
  COFD[4059] = 1.98944407E-02;
  COFD[4060] = -1.94998656E+01;
  COFD[4061] = 4.81575071E+00;
  COFD[4062] = -4.07042139E-01;
  COFD[4063] = 1.75187504E-02;
  COFD[4064] = -1.95903577E+01;
  COFD[4065] = 4.84393038E+00;
  COFD[4066] = -4.10274737E-01;
  COFD[4067] = 1.76417458E-02;
  COFD[4068] = -1.79874583E+01;
  COFD[4069] = 4.29613154E+00;
  COFD[4070] = -3.44012526E-01;
  COFD[4071] = 1.49643715E-02;
  COFD[4072] = -1.63301401E+01;
  COFD[4073] = 3.82388595E+00;
  COFD[4074] = -2.84480724E-01;
  COFD[4075] = 1.24506311E-02;
  COFD[4076] = -2.14650082E+01;
  COFD[4077] = 5.30533825E+00;
  COFD[4078] = -4.63794263E-01;
  COFD[4079] = 1.97083387E-02;
  COFD[4080] = -2.11301347E+01;
  COFD[4081] = 5.26639700E+00;
  COFD[4082] = -4.59100217E-01;
  COFD[4083] = 1.95186257E-02;
  COFD[4084] = -2.11279138E+01;
  COFD[4085] = 5.26639700E+00;
  COFD[4086] = -4.59100217E-01;
  COFD[4087] = 1.95186257E-02;
  COFD[4088] = -2.11329867E+01;
  COFD[4089] = 5.23602118E+00;
  COFD[4090] = -4.55535508E-01;
  COFD[4091] = 1.93789887E-02;
  COFD[4092] = -2.14434310E+01;
  COFD[4093] = 5.33921751E+00;
  COFD[4094] = -4.67712601E-01;
  COFD[4095] = 1.98596515E-02;
  COFD[4096] = -2.14405061E+01;
  COFD[4097] = 5.30533825E+00;
  COFD[4098] = -4.63794263E-01;
  COFD[4099] = 1.97083387E-02;
  COFD[4100] = -2.14388686E+01;
  COFD[4101] = 5.30533825E+00;
  COFD[4102] = -4.63794263E-01;
  COFD[4103] = 1.97083387E-02;
  COFD[4104] = -2.14085295E+01;
  COFD[4105] = 5.25183817E+00;
  COFD[4106] = -4.57376333E-01;
  COFD[4107] = 1.94504429E-02;
  COFD[4108] = -2.14072722E+01;
  COFD[4109] = 5.25183817E+00;
  COFD[4110] = -4.57376333E-01;
  COFD[4111] = 1.94504429E-02;
  COFD[4112] = -2.14072722E+01;
  COFD[4113] = 5.25183817E+00;
  COFD[4114] = -4.57376333E-01;
  COFD[4115] = 1.94504429E-02;
  COFD[4116] = -2.14072722E+01;
  COFD[4117] = 5.25183817E+00;
  COFD[4118] = -4.57376333E-01;
  COFD[4119] = 1.94504429E-02;
  COFD[4120] = -2.14072722E+01;
  COFD[4121] = 5.25183817E+00;
  COFD[4122] = -4.57376333E-01;
  COFD[4123] = 1.94504429E-02;
  COFD[4124] = -2.13737824E+01;
  COFD[4125] = 5.24642975E+00;
  COFD[4126] = -4.56740225E-01;
  COFD[4127] = 1.94254554E-02;
  COFD[4128] = -2.13737824E+01;
  COFD[4129] = 5.24642975E+00;
  COFD[4130] = -4.56740225E-01;
  COFD[4131] = 1.94254554E-02;
  COFD[4132] = -2.19786716E+01;
  COFD[4133] = 5.41031792E+00;
  COFD[4134] = -4.73134636E-01;
  COFD[4135] = 1.99412666E-02;
  COFD[4136] = -2.19786716E+01;
  COFD[4137] = 5.41031792E+00;
  COFD[4138] = -4.73134636E-01;
  COFD[4139] = 1.99412666E-02;
  COFD[4140] = -2.19786716E+01;
  COFD[4141] = 5.41031792E+00;
  COFD[4142] = -4.73134636E-01;
  COFD[4143] = 1.99412666E-02;
  COFD[4144] = -2.19786716E+01;
  COFD[4145] = 5.41031792E+00;
  COFD[4146] = -4.73134636E-01;
  COFD[4147] = 1.99412666E-02;
  COFD[4148] = -2.19786716E+01;
  COFD[4149] = 5.41031792E+00;
  COFD[4150] = -4.73134636E-01;
  COFD[4151] = 1.99412666E-02;
  COFD[4152] = -2.19786716E+01;
  COFD[4153] = 5.41031792E+00;
  COFD[4154] = -4.73134636E-01;
  COFD[4155] = 1.99412666E-02;
  COFD[4156] = -2.19786716E+01;
  COFD[4157] = 5.41031792E+00;
  COFD[4158] = -4.73134636E-01;
  COFD[4159] = 1.99412666E-02;
  COFD[4160] = -2.19786716E+01;
  COFD[4161] = 5.41031792E+00;
  COFD[4162] = -4.73134636E-01;
  COFD[4163] = 1.99412666E-02;
  COFD[4164] = -2.19786716E+01;
  COFD[4165] = 5.41031792E+00;
  COFD[4166] = -4.73134636E-01;
  COFD[4167] = 1.99412666E-02;
  COFD[4168] = -2.19786716E+01;
  COFD[4169] = 5.41031792E+00;
  COFD[4170] = -4.73134636E-01;
  COFD[4171] = 1.99412666E-02;
  COFD[4172] = -2.19786716E+01;
  COFD[4173] = 5.41031792E+00;
  COFD[4174] = -4.73134636E-01;
  COFD[4175] = 1.99412666E-02;
  COFD[4176] = -2.19786716E+01;
  COFD[4177] = 5.41031792E+00;
  COFD[4178] = -4.73134636E-01;
  COFD[4179] = 1.99412666E-02;
  COFD[4180] = -2.23541327E+01;
  COFD[4181] = 5.46244183E+00;
  COFD[4182] = -4.78171258E-01;
  COFD[4183] = 2.00910572E-02;
  COFD[4184] = -2.23541327E+01;
  COFD[4185] = 5.46244183E+00;
  COFD[4186] = -4.78171258E-01;
  COFD[4187] = 2.00910572E-02;
  COFD[4188] = -2.23541327E+01;
  COFD[4189] = 5.46244183E+00;
  COFD[4190] = -4.78171258E-01;
  COFD[4191] = 2.00910572E-02;
  COFD[4192] = -2.23541327E+01;
  COFD[4193] = 5.46244183E+00;
  COFD[4194] = -4.78171258E-01;
  COFD[4195] = 2.00910572E-02;
  COFD[4196] = -2.17831693E+01;
  COFD[4197] = 5.36593635E+00;
  COFD[4198] = -4.69961498E-01;
  COFD[4199] = 1.99078595E-02;
  COFD[4200] = -2.17831693E+01;
  COFD[4201] = 5.36593635E+00;
  COFD[4202] = -4.69961498E-01;
  COFD[4203] = 1.99078595E-02;
  COFD[4204] = -2.20818748E+01;
  COFD[4205] = 5.42166606E+00;
  COFD[4206] = -4.73555282E-01;
  COFD[4207] = 1.99172179E-02;
  COFD[4208] = -2.20818748E+01;
  COFD[4209] = 5.42166606E+00;
  COFD[4210] = -4.73555282E-01;
  COFD[4211] = 1.99172179E-02;
  COFD[4212] = -2.20818748E+01;
  COFD[4213] = 5.42166606E+00;
  COFD[4214] = -4.73555282E-01;
  COFD[4215] = 1.99172179E-02;
  COFD[4216] = -2.20818748E+01;
  COFD[4217] = 5.42166606E+00;
  COFD[4218] = -4.73555282E-01;
  COFD[4219] = 1.99172179E-02;
  COFD[4220] = -1.52486292E+01;
  COFD[4221] = 3.35922578E+00;
  COFD[4222] = -2.25181399E-01;
  COFD[4223] = 9.92132878E-03;
  COFD[4224] = -1.46559297E+01;
  COFD[4225] = 3.83606243E+00;
  COFD[4226] = -2.86076532E-01;
  COFD[4227] = 1.25205829E-02;
  COFD[4228] = -1.19006697E+01;
  COFD[4229] = 2.57507000E+00;
  COFD[4230] = -1.24033737E-01;
  COFD[4231] = 5.56694959E-03;
  COFD[4232] = -1.43238892E+01;
  COFD[4233] = 3.17651319E+00;
  COFD[4234] = -2.02028974E-01;
  COFD[4235] = 8.94232502E-03;
  COFD[4236] = -1.55661647E+01;
  COFD[4237] = 3.48070094E+00;
  COFD[4238] = -2.40859499E-01;
  COFD[4239] = 1.05972514E-02;
  COFD[4240] = -1.43444614E+01;
  COFD[4241] = 3.17651319E+00;
  COFD[4242] = -2.02028974E-01;
  COFD[4243] = 8.94232502E-03;
  COFD[4244] = -2.06516251E+01;
  COFD[4245] = 5.41688482E+00;
  COFD[4246] = -4.73387188E-01;
  COFD[4247] = 1.99280175E-02;
  COFD[4248] = -1.52861287E+01;
  COFD[4249] = 3.36790500E+00;
  COFD[4250] = -2.26321740E-01;
  COFD[4251] = 9.97135055E-03;
  COFD[4252] = -2.08347318E+01;
  COFD[4253] = 5.35267674E+00;
  COFD[4254] = -4.69010505E-01;
  COFD[4255] = 1.98979152E-02;
  COFD[4256] = -1.84862906E+01;
  COFD[4257] = 4.49330851E+00;
  COFD[4258] = -3.68208715E-01;
  COFD[4259] = 1.59565402E-02;
  COFD[4260] = -1.63588948E+01;
  COFD[4261] = 3.82388595E+00;
  COFD[4262] = -2.84480724E-01;
  COFD[4263] = 1.24506311E-02;
  COFD[4264] = -1.62824385E+01;
  COFD[4265] = 3.79163564E+00;
  COFD[4266] = -2.80257365E-01;
  COFD[4267] = 1.22656902E-02;
  COFD[4268] = -1.55740954E+01;
  COFD[4269] = 3.48070094E+00;
  COFD[4270] = -2.40859499E-01;
  COFD[4271] = 1.05972514E-02;
  COFD[4272] = -1.55816727E+01;
  COFD[4273] = 3.48070094E+00;
  COFD[4274] = -2.40859499E-01;
  COFD[4275] = 1.05972514E-02;
  COFD[4276] = -2.08438728E+01;
  COFD[4277] = 5.35267674E+00;
  COFD[4278] = -4.69010505E-01;
  COFD[4279] = 1.98979152E-02;
  COFD[4280] = -2.02710239E+01;
  COFD[4281] = 5.14984081E+00;
  COFD[4282] = -4.46093018E-01;
  COFD[4283] = 1.90396647E-02;
  COFD[4284] = -1.85990305E+01;
  COFD[4285] = 4.51052425E+00;
  COFD[4286] = -3.70301627E-01;
  COFD[4287] = 1.60416153E-02;
  COFD[4288] = -1.82285687E+01;
  COFD[4289] = 4.46848269E+00;
  COFD[4290] = -3.65269718E-01;
  COFD[4291] = 1.58407652E-02;
  COFD[4292] = -1.85899094E+01;
  COFD[4293] = 4.51052425E+00;
  COFD[4294] = -3.70301627E-01;
  COFD[4295] = 1.60416153E-02;
  COFD[4296] = -1.86641903E+01;
  COFD[4297] = 4.60874797E+00;
  COFD[4298] = -3.82368716E-01;
  COFD[4299] = 1.65370164E-02;
  COFD[4300] = -1.86748583E+01;
  COFD[4301] = 4.60874797E+00;
  COFD[4302] = -3.82368716E-01;
  COFD[4303] = 1.65370164E-02;
  COFD[4304] = -2.05355943E+01;
  COFD[4305] = 5.18417470E+00;
  COFD[4306] = -4.49491573E-01;
  COFD[4307] = 1.91438508E-02;
  COFD[4308] = -1.64338675E+01;
  COFD[4309] = 3.89309916E+00;
  COFD[4310] = -2.93528188E-01;
  COFD[4311] = 1.28463177E-02;
  COFD[4312] = -2.05408587E+01;
  COFD[4313] = 5.18417470E+00;
  COFD[4314] = -4.49491573E-01;
  COFD[4315] = 1.91438508E-02;
  COFD[4316] = -2.05408587E+01;
  COFD[4317] = 5.18417470E+00;
  COFD[4318] = -4.49491573E-01;
  COFD[4319] = 1.91438508E-02;
  COFD[4320] = -2.05459343E+01;
  COFD[4321] = 5.18417470E+00;
  COFD[4322] = -4.49491573E-01;
  COFD[4323] = 1.91438508E-02;
  COFD[4324] = -1.96043439E+01;
  COFD[4325] = 4.84393038E+00;
  COFD[4326] = -4.10274737E-01;
  COFD[4327] = 1.76417458E-02;
  COFD[4328] = -1.94088469E+01;
  COFD[4329] = 4.78708023E+00;
  COFD[4330] = -4.03693144E-01;
  COFD[4331] = 1.73884817E-02;
  COFD[4332] = -2.01505280E+01;
  COFD[4333] = 4.97613338E+00;
  COFD[4334] = -4.26175206E-01;
  COFD[4335] = 1.82809270E-02;
  COFD[4336] = -1.95374781E+01;
  COFD[4337] = 4.77151544E+00;
  COFD[4338] = -4.01882811E-01;
  COFD[4339] = 1.73184814E-02;
  COFD[4340] = -2.01155669E+01;
  COFD[4341] = 4.96870443E+00;
  COFD[4342] = -4.25292447E-01;
  COFD[4343] = 1.82459096E-02;
  COFD[4344] = -2.01190073E+01;
  COFD[4345] = 4.96870443E+00;
  COFD[4346] = -4.25292447E-01;
  COFD[4347] = 1.82459096E-02;
  COFD[4348] = -2.02315228E+01;
  COFD[4349] = 4.95786261E+00;
  COFD[4350] = -4.24013131E-01;
  COFD[4351] = 1.81955669E-02;
  COFD[4352] = -2.08204313E+01;
  COFD[4353] = 5.18275931E+00;
  COFD[4354] = -4.49328195E-01;
  COFD[4355] = 1.91375697E-02;
  COFD[4356] = -2.07729904E+01;
  COFD[4357] = 5.18190887E+00;
  COFD[4358] = -4.49230019E-01;
  COFD[4359] = 1.91337948E-02;
  COFD[4360] = -2.07342476E+01;
  COFD[4361] = 5.15830988E+00;
  COFD[4362] = -4.46702918E-01;
  COFD[4363] = 1.90459497E-02;
  COFD[4364] = -2.07463986E+01;
  COFD[4365] = 5.10688723E+00;
  COFD[4366] = -4.41563971E-01;
  COFD[4367] = 1.88857198E-02;
  COFD[4368] = -2.06624219E+01;
  COFD[4369] = 5.07501764E+00;
  COFD[4370] = -4.37846596E-01;
  COFD[4371] = 1.87410133E-02;
  COFD[4372] = -2.09657334E+01;
  COFD[4373] = 5.28755355E+00;
  COFD[4374] = -4.61641920E-01;
  COFD[4375] = 1.96208961E-02;
  COFD[4376] = -2.08642660E+01;
  COFD[4377] = 5.32244593E+00;
  COFD[4378] = -4.65829403E-01;
  COFD[4379] = 1.97895274E-02;
  COFD[4380] = -2.08686884E+01;
  COFD[4381] = 5.32244593E+00;
  COFD[4382] = -4.65829403E-01;
  COFD[4383] = 1.97895274E-02;
  COFD[4384] = -2.06933816E+01;
  COFD[4385] = 5.20540788E+00;
  COFD[4386] = -4.51975238E-01;
  COFD[4387] = 1.92408880E-02;
  COFD[4388] = -2.07864314E+01;
  COFD[4389] = 5.16471086E+00;
  COFD[4390] = -4.47284488E-01;
  COFD[4391] = 1.90609361E-02;
  COFD[4392] = -2.06706819E+01;
  COFD[4393] = 5.14159226E+00;
  COFD[4394] = -4.45395793E-01;
  COFD[4395] = 1.90248052E-02;
  COFD[4396] = -2.14300919E+01;
  COFD[4397] = 5.35040988E+00;
  COFD[4398] = -4.68827063E-01;
  COFD[4399] = 1.98944407E-02;
  COFD[4400] = -2.15018122E+01;
  COFD[4401] = 5.35040988E+00;
  COFD[4402] = -4.68827063E-01;
  COFD[4403] = 1.98944407E-02;
  COFD[4404] = -2.14639192E+01;
  COFD[4405] = 5.35040988E+00;
  COFD[4406] = -4.68827063E-01;
  COFD[4407] = 1.98944407E-02;
  COFD[4408] = -2.14639192E+01;
  COFD[4409] = 5.35040988E+00;
  COFD[4410] = -4.68827063E-01;
  COFD[4411] = 1.98944407E-02;
  COFD[4412] = -1.95081493E+01;
  COFD[4413] = 4.81575071E+00;
  COFD[4414] = -4.07042139E-01;
  COFD[4415] = 1.75187504E-02;
  COFD[4416] = -1.95984537E+01;
  COFD[4417] = 4.84393038E+00;
  COFD[4418] = -4.10274737E-01;
  COFD[4419] = 1.76417458E-02;
  COFD[4420] = -1.79954565E+01;
  COFD[4421] = 4.29613154E+00;
  COFD[4422] = -3.44012526E-01;
  COFD[4423] = 1.49643715E-02;
  COFD[4424] = -1.63345789E+01;
  COFD[4425] = 3.82388595E+00;
  COFD[4426] = -2.84480724E-01;
  COFD[4427] = 1.24506311E-02;
  COFD[4428] = -2.14763872E+01;
  COFD[4429] = 5.30533825E+00;
  COFD[4430] = -4.63794263E-01;
  COFD[4431] = 1.97083387E-02;
  COFD[4432] = -2.11404042E+01;
  COFD[4433] = 5.26639700E+00;
  COFD[4434] = -4.59100217E-01;
  COFD[4435] = 1.95186257E-02;
  COFD[4436] = -2.11381372E+01;
  COFD[4437] = 5.26639700E+00;
  COFD[4438] = -4.59100217E-01;
  COFD[4439] = 1.95186257E-02;
  COFD[4440] = -2.11432101E+01;
  COFD[4441] = 5.23602118E+00;
  COFD[4442] = -4.55535508E-01;
  COFD[4443] = 1.93789887E-02;
  COFD[4444] = -2.14542241E+01;
  COFD[4445] = 5.33921751E+00;
  COFD[4446] = -4.67712601E-01;
  COFD[4447] = 1.98596515E-02;
  COFD[4448] = -2.14513350E+01;
  COFD[4449] = 5.30533825E+00;
  COFD[4450] = -4.63794263E-01;
  COFD[4451] = 1.97083387E-02;
  COFD[4452] = -2.14496617E+01;
  COFD[4453] = 5.30533825E+00;
  COFD[4454] = -4.63794263E-01;
  COFD[4455] = 1.97083387E-02;
  COFD[4456] = -2.14198017E+01;
  COFD[4457] = 5.25183817E+00;
  COFD[4458] = -4.57376333E-01;
  COFD[4459] = 1.94504429E-02;
  COFD[4460] = -2.14185157E+01;
  COFD[4461] = 5.25183817E+00;
  COFD[4462] = -4.57376333E-01;
  COFD[4463] = 1.94504429E-02;
  COFD[4464] = -2.14185157E+01;
  COFD[4465] = 5.25183817E+00;
  COFD[4466] = -4.57376333E-01;
  COFD[4467] = 1.94504429E-02;
  COFD[4468] = -2.14185157E+01;
  COFD[4469] = 5.25183817E+00;
  COFD[4470] = -4.57376333E-01;
  COFD[4471] = 1.94504429E-02;
  COFD[4472] = -2.14185157E+01;
  COFD[4473] = 5.25183817E+00;
  COFD[4474] = -4.57376333E-01;
  COFD[4475] = 1.94504429E-02;
  COFD[4476] = -2.13849969E+01;
  COFD[4477] = 5.24642975E+00;
  COFD[4478] = -4.56740225E-01;
  COFD[4479] = 1.94254554E-02;
  COFD[4480] = -2.13849969E+01;
  COFD[4481] = 5.24642975E+00;
  COFD[4482] = -4.56740225E-01;
  COFD[4483] = 1.94254554E-02;
  COFD[4484] = -2.19906530E+01;
  COFD[4485] = 5.41031792E+00;
  COFD[4486] = -4.73134636E-01;
  COFD[4487] = 1.99412666E-02;
  COFD[4488] = -2.19906530E+01;
  COFD[4489] = 5.41031792E+00;
  COFD[4490] = -4.73134636E-01;
  COFD[4491] = 1.99412666E-02;
  COFD[4492] = -2.19906530E+01;
  COFD[4493] = 5.41031792E+00;
  COFD[4494] = -4.73134636E-01;
  COFD[4495] = 1.99412666E-02;
  COFD[4496] = -2.19906530E+01;
  COFD[4497] = 5.41031792E+00;
  COFD[4498] = -4.73134636E-01;
  COFD[4499] = 1.99412666E-02;
  COFD[4500] = -2.19906530E+01;
  COFD[4501] = 5.41031792E+00;
  COFD[4502] = -4.73134636E-01;
  COFD[4503] = 1.99412666E-02;
  COFD[4504] = -2.19906530E+01;
  COFD[4505] = 5.41031792E+00;
  COFD[4506] = -4.73134636E-01;
  COFD[4507] = 1.99412666E-02;
  COFD[4508] = -2.19906530E+01;
  COFD[4509] = 5.41031792E+00;
  COFD[4510] = -4.73134636E-01;
  COFD[4511] = 1.99412666E-02;
  COFD[4512] = -2.19906530E+01;
  COFD[4513] = 5.41031792E+00;
  COFD[4514] = -4.73134636E-01;
  COFD[4515] = 1.99412666E-02;
  COFD[4516] = -2.19906530E+01;
  COFD[4517] = 5.41031792E+00;
  COFD[4518] = -4.73134636E-01;
  COFD[4519] = 1.99412666E-02;
  COFD[4520] = -2.19906530E+01;
  COFD[4521] = 5.41031792E+00;
  COFD[4522] = -4.73134636E-01;
  COFD[4523] = 1.99412666E-02;
  COFD[4524] = -2.19906530E+01;
  COFD[4525] = 5.41031792E+00;
  COFD[4526] = -4.73134636E-01;
  COFD[4527] = 1.99412666E-02;
  COFD[4528] = -2.19906530E+01;
  COFD[4529] = 5.41031792E+00;
  COFD[4530] = -4.73134636E-01;
  COFD[4531] = 1.99412666E-02;
  COFD[4532] = -2.23666119E+01;
  COFD[4533] = 5.46244183E+00;
  COFD[4534] = -4.78171258E-01;
  COFD[4535] = 2.00910572E-02;
  COFD[4536] = -2.23666119E+01;
  COFD[4537] = 5.46244183E+00;
  COFD[4538] = -4.78171258E-01;
  COFD[4539] = 2.00910572E-02;
  COFD[4540] = -2.23666119E+01;
  COFD[4541] = 5.46244183E+00;
  COFD[4542] = -4.78171258E-01;
  COFD[4543] = 2.00910572E-02;
  COFD[4544] = -2.23666119E+01;
  COFD[4545] = 5.46244183E+00;
  COFD[4546] = -4.78171258E-01;
  COFD[4547] = 2.00910572E-02;
  COFD[4548] = -2.17947983E+01;
  COFD[4549] = 5.36593635E+00;
  COFD[4550] = -4.69961498E-01;
  COFD[4551] = 1.99078595E-02;
  COFD[4552] = -2.17947983E+01;
  COFD[4553] = 5.36593635E+00;
  COFD[4554] = -4.69961498E-01;
  COFD[4555] = 1.99078595E-02;
  COFD[4556] = -2.20941115E+01;
  COFD[4557] = 5.42166606E+00;
  COFD[4558] = -4.73555282E-01;
  COFD[4559] = 1.99172179E-02;
  COFD[4560] = -2.20941115E+01;
  COFD[4561] = 5.42166606E+00;
  COFD[4562] = -4.73555282E-01;
  COFD[4563] = 1.99172179E-02;
  COFD[4564] = -2.20941115E+01;
  COFD[4565] = 5.42166606E+00;
  COFD[4566] = -4.73555282E-01;
  COFD[4567] = 1.99172179E-02;
  COFD[4568] = -2.20941115E+01;
  COFD[4569] = 5.42166606E+00;
  COFD[4570] = -4.73555282E-01;
  COFD[4571] = 1.99172179E-02;
  COFD[4572] = -1.52554785E+01;
  COFD[4573] = 3.35922578E+00;
  COFD[4574] = -2.25181399E-01;
  COFD[4575] = 9.92132878E-03;
  COFD[4576] = -1.97550243E+01;
  COFD[4577] = 5.56931926E+00;
  COFD[4578] = -4.89105511E-01;
  COFD[4579] = 2.04493129E-02;
  COFD[4580] = -1.60528433E+01;
  COFD[4581] = 4.11188603E+00;
  COFD[4582] = -3.21540884E-01;
  COFD[4583] = 1.40482564E-02;
  COFD[4584] = -1.94373032E+01;
  COFD[4585] = 5.02567894E+00;
  COFD[4586] = -4.32045169E-01;
  COFD[4587] = 1.85132214E-02;
  COFD[4588] = -2.08293167E+01;
  COFD[4589] = 5.35267674E+00;
  COFD[4590] = -4.69010505E-01;
  COFD[4591] = 1.98979152E-02;
  COFD[4592] = -1.94570202E+01;
  COFD[4593] = 5.02567894E+00;
  COFD[4594] = -4.32045169E-01;
  COFD[4595] = 1.85132214E-02;
  COFD[4596] = -1.77563175E+01;
  COFD[4597] = 3.57475686E+00;
  COFD[4598] = -1.56396297E-01;
  COFD[4599] = 3.12157721E-03;
  COFD[4600] = -2.05128629E+01;
  COFD[4601] = 5.23843909E+00;
  COFD[4602] = -4.55815614E-01;
  COFD[4603] = 1.93898040E-02;
  COFD[4604] = -1.90413276E+01;
  COFD[4605] = 3.99221757E+00;
  COFD[4606] = -2.19854880E-01;
  COFD[4607] = 6.22736279E-03;
  COFD[4608] = -2.19317665E+01;
  COFD[4609] = 5.45216133E+00;
  COFD[4610] = -4.52916925E-01;
  COFD[4611] = 1.80456400E-02;
  COFD[4612] = -2.14449532E+01;
  COFD[4613] = 5.56531152E+00;
  COFD[4614] = -4.88789821E-01;
  COFD[4615] = 2.04437116E-02;
  COFD[4616] = -2.14082433E+01;
  COFD[4617] = 5.55346617E+00;
  COFD[4618] = -4.87783156E-01;
  COFD[4619] = 2.04210886E-02;
  COFD[4620] = -2.08367641E+01;
  COFD[4621] = 5.35267674E+00;
  COFD[4622] = -4.69010505E-01;
  COFD[4623] = 1.98979152E-02;
  COFD[4624] = -2.08438728E+01;
  COFD[4625] = 5.35267674E+00;
  COFD[4626] = -4.69010505E-01;
  COFD[4627] = 1.98979152E-02;
  COFD[4628] = -1.90499374E+01;
  COFD[4629] = 3.99221757E+00;
  COFD[4630] = -2.19854880E-01;
  COFD[4631] = 6.22736279E-03;
  COFD[4632] = -2.01889105E+01;
  COFD[4633] = 4.53183330E+00;
  COFD[4634] = -3.02186760E-01;
  COFD[4635] = 1.02756490E-02;
  COFD[4636] = -2.19786136E+01;
  COFD[4637] = 5.43750833E+00;
  COFD[4638] = -4.50273329E-01;
  COFD[4639] = 1.79013718E-02;
  COFD[4640] = -2.17855106E+01;
  COFD[4641] = 5.47519298E+00;
  COFD[4642] = -4.57113040E-01;
  COFD[4643] = 1.82758312E-02;
  COFD[4644] = -2.19700230E+01;
  COFD[4645] = 5.43750833E+00;
  COFD[4646] = -4.50273329E-01;
  COFD[4647] = 1.79013718E-02;
  COFD[4648] = -2.16798216E+01;
  COFD[4649] = 5.36811769E+00;
  COFD[4650] = -4.37727086E-01;
  COFD[4651] = 1.72167686E-02;
  COFD[4652] = -2.16899028E+01;
  COFD[4653] = 5.36811769E+00;
  COFD[4654] = -4.37727086E-01;
  COFD[4655] = 1.72167686E-02;
  COFD[4656] = -2.01015275E+01;
  COFD[4657] = 4.41511629E+00;
  COFD[4658] = -2.84086963E-01;
  COFD[4659] = 9.37586971E-03;
  COFD[4660] = -2.14303411E+01;
  COFD[4661] = 5.59268435E+00;
  COFD[4662] = -4.91232974E-01;
  COFD[4663] = 2.05064746E-02;
  COFD[4664] = -2.01064300E+01;
  COFD[4665] = 4.41511629E+00;
  COFD[4666] = -2.84086963E-01;
  COFD[4667] = 9.37586971E-03;
  COFD[4668] = -2.01064300E+01;
  COFD[4669] = 4.41511629E+00;
  COFD[4670] = -2.84086963E-01;
  COFD[4671] = 9.37586971E-03;
  COFD[4672] = -2.01111534E+01;
  COFD[4673] = 4.41511629E+00;
  COFD[4674] = -2.84086963E-01;
  COFD[4675] = 9.37586971E-03;
  COFD[4676] = -2.14453106E+01;
  COFD[4677] = 5.07680397E+00;
  COFD[4678] = -3.88612087E-01;
  COFD[4679] = 1.46395101E-02;
  COFD[4680] = -2.15802742E+01;
  COFD[4681] = 5.16868516E+00;
  COFD[4682] = -4.03721581E-01;
  COFD[4683] = 1.54206640E-02;
  COFD[4684] = -2.12219625E+01;
  COFD[4685] = 4.87252053E+00;
  COFD[4686] = -3.56127804E-01;
  COFD[4687] = 1.29948788E-02;
  COFD[4688] = -2.17926818E+01;
  COFD[4689] = 5.19232842E+00;
  COFD[4690] = -4.07643284E-01;
  COFD[4691] = 1.56246434E-02;
  COFD[4692] = -2.12330848E+01;
  COFD[4693] = 4.88535789E+00;
  COFD[4694] = -3.58153894E-01;
  COFD[4695] = 1.30969624E-02;
  COFD[4696] = -2.12362633E+01;
  COFD[4697] = 4.88535789E+00;
  COFD[4698] = -3.58153894E-01;
  COFD[4699] = 1.30969624E-02;
  COFD[4700] = -2.14142815E+01;
  COFD[4701] = 4.90439970E+00;
  COFD[4702] = -3.61162615E-01;
  COFD[4703] = 1.32486109E-02;
  COFD[4704] = -2.03890862E+01;
  COFD[4705] = 4.41849584E+00;
  COFD[4706] = -2.84606486E-01;
  COFD[4707] = 9.40156753E-03;
  COFD[4708] = -2.03487656E+01;
  COFD[4709] = 4.42052429E+00;
  COFD[4710] = -2.84918346E-01;
  COFD[4711] = 9.41699476E-03;
  COFD[4712] = -2.05135320E+01;
  COFD[4713] = 4.48572337E+00;
  COFD[4714] = -2.95011367E-01;
  COFD[4715] = 9.91810091E-03;
  COFD[4716] = -2.09921970E+01;
  COFD[4717] = 4.64167142E+00;
  COFD[4718] = -3.19532110E-01;
  COFD[4719] = 1.11478359E-02;
  COFD[4720] = -2.11192092E+01;
  COFD[4721] = 4.70311989E+00;
  COFD[4722] = -3.29240106E-01;
  COFD[4723] = 1.16366808E-02;
  COFD[4724] = -1.97649005E+01;
  COFD[4725] = 4.18758010E+00;
  COFD[4726] = -2.49327776E-01;
  COFD[4727] = 7.66559103E-03;
  COFD[4728] = -1.94051772E+01;
  COFD[4729] = 4.10954793E+00;
  COFD[4730] = -2.37523329E-01;
  COFD[4731] = 7.08858141E-03;
  COFD[4732] = -1.94092818E+01;
  COFD[4733] = 4.10954793E+00;
  COFD[4734] = -2.37523329E-01;
  COFD[4735] = 7.08858141E-03;
  COFD[4736] = -2.00983576E+01;
  COFD[4737] = 4.36837296E+00;
  COFD[4738] = -2.76900721E-01;
  COFD[4739] = 9.02062809E-03;
  COFD[4740] = -2.04942814E+01;
  COFD[4741] = 4.46102735E+00;
  COFD[4742] = -2.91170400E-01;
  COFD[4743] = 9.72687095E-03;
  COFD[4744] = -2.06752970E+01;
  COFD[4745] = 4.56779427E+00;
  COFD[4746] = -3.07785839E-01;
  COFD[4747] = 1.05545767E-02;
  COFD[4748] = -1.96550543E+01;
  COFD[4749] = 4.00653795E+00;
  COFD[4750] = -2.22005804E-01;
  COFD[4751] = 6.33194910E-03;
  COFD[4752] = -1.97204576E+01;
  COFD[4753] = 4.00653795E+00;
  COFD[4754] = -2.22005804E-01;
  COFD[4755] = 6.33194910E-03;
  COFD[4756] = -1.96860050E+01;
  COFD[4757] = 4.00653795E+00;
  COFD[4758] = -2.22005804E-01;
  COFD[4759] = 6.33194910E-03;
  COFD[4760] = -1.96860050E+01;
  COFD[4761] = 4.00653795E+00;
  COFD[4762] = -2.22005804E-01;
  COFD[4763] = 6.33194910E-03;
  COFD[4764] = -2.15258520E+01;
  COFD[4765] = 5.12799307E+00;
  COFD[4766] = -3.96938732E-01;
  COFD[4767] = 1.50673195E-02;
  COFD[4768] = -2.14398130E+01;
  COFD[4769] = 5.07680397E+00;
  COFD[4770] = -3.88612087E-01;
  COFD[4771] = 1.46395101E-02;
  COFD[4772] = -2.20962329E+01;
  COFD[4773] = 5.55935694E+00;
  COFD[4774] = -4.74154740E-01;
  COFD[4775] = 1.92584304E-02;
  COFD[4776] = -2.14215667E+01;
  COFD[4777] = 5.56531152E+00;
  COFD[4778] = -4.88789821E-01;
  COFD[4779] = 2.04437116E-02;
  COFD[4780] = -2.01288794E+01;
  COFD[4781] = 4.14890473E+00;
  COFD[4782] = -2.43477935E-01;
  COFD[4783] = 7.37955243E-03;
  COFD[4784] = -2.00882205E+01;
  COFD[4785] = 4.23458126E+00;
  COFD[4786] = -2.56439402E-01;
  COFD[4787] = 8.01352157E-03;
  COFD[4788] = -2.00861408E+01;
  COFD[4789] = 4.23458126E+00;
  COFD[4790] = -2.56439402E-01;
  COFD[4791] = 8.01352157E-03;
  COFD[4792] = -2.03101444E+01;
  COFD[4793] = 4.29941846E+00;
  COFD[4794] = -2.66336231E-01;
  COFD[4795] = 8.49991686E-03;
  COFD[4796] = -1.98162104E+01;
  COFD[4797] = 4.05563529E+00;
  COFD[4798] = -2.29398386E-01;
  COFD[4799] = 6.69213921E-03;
  COFD[4800] = -2.01060557E+01;
  COFD[4801] = 4.14890473E+00;
  COFD[4802] = -2.43477935E-01;
  COFD[4803] = 7.37955243E-03;
  COFD[4804] = -2.01045276E+01;
  COFD[4805] = 4.14890473E+00;
  COFD[4806] = -2.43477935E-01;
  COFD[4807] = 7.37955243E-03;
  COFD[4808] = -2.04632155E+01;
  COFD[4809] = 4.26473557E+00;
  COFD[4810] = -2.61033037E-01;
  COFD[4811] = 8.23906412E-03;
  COFD[4812] = -2.04620454E+01;
  COFD[4813] = 4.26473557E+00;
  COFD[4814] = -2.61033037E-01;
  COFD[4815] = 8.23906412E-03;
  COFD[4816] = -2.04620454E+01;
  COFD[4817] = 4.26473557E+00;
  COFD[4818] = -2.61033037E-01;
  COFD[4819] = 8.23906412E-03;
  COFD[4820] = -2.04620454E+01;
  COFD[4821] = 4.26473557E+00;
  COFD[4822] = -2.61033037E-01;
  COFD[4823] = 8.23906412E-03;
  COFD[4824] = -2.04620454E+01;
  COFD[4825] = 4.26473557E+00;
  COFD[4826] = -2.61033037E-01;
  COFD[4827] = 8.23906412E-03;
  COFD[4828] = -2.04671013E+01;
  COFD[4829] = 4.27584524E+00;
  COFD[4830] = -2.62731338E-01;
  COFD[4831] = 8.32258301E-03;
  COFD[4832] = -2.04671013E+01;
  COFD[4833] = 4.27584524E+00;
  COFD[4834] = -2.62731338E-01;
  COFD[4835] = 8.32258301E-03;
  COFD[4836] = -1.92384813E+01;
  COFD[4837] = 3.64878687E+00;
  COFD[4838] = -1.67486742E-01;
  COFD[4839] = 3.65938254E-03;
  COFD[4840] = -1.92384813E+01;
  COFD[4841] = 3.64878687E+00;
  COFD[4842] = -1.67486742E-01;
  COFD[4843] = 3.65938254E-03;
  COFD[4844] = -1.92384813E+01;
  COFD[4845] = 3.64878687E+00;
  COFD[4846] = -1.67486742E-01;
  COFD[4847] = 3.65938254E-03;
  COFD[4848] = -1.92384813E+01;
  COFD[4849] = 3.64878687E+00;
  COFD[4850] = -1.67486742E-01;
  COFD[4851] = 3.65938254E-03;
  COFD[4852] = -1.92384813E+01;
  COFD[4853] = 3.64878687E+00;
  COFD[4854] = -1.67486742E-01;
  COFD[4855] = 3.65938254E-03;
  COFD[4856] = -1.92384813E+01;
  COFD[4857] = 3.64878687E+00;
  COFD[4858] = -1.67486742E-01;
  COFD[4859] = 3.65938254E-03;
  COFD[4860] = -1.92384813E+01;
  COFD[4861] = 3.64878687E+00;
  COFD[4862] = -1.67486742E-01;
  COFD[4863] = 3.65938254E-03;
  COFD[4864] = -1.92384813E+01;
  COFD[4865] = 3.64878687E+00;
  COFD[4866] = -1.67486742E-01;
  COFD[4867] = 3.65938254E-03;
  COFD[4868] = -1.92384813E+01;
  COFD[4869] = 3.64878687E+00;
  COFD[4870] = -1.67486742E-01;
  COFD[4871] = 3.65938254E-03;
  COFD[4872] = -1.92384813E+01;
  COFD[4873] = 3.64878687E+00;
  COFD[4874] = -1.67486742E-01;
  COFD[4875] = 3.65938254E-03;
  COFD[4876] = -1.92384813E+01;
  COFD[4877] = 3.64878687E+00;
  COFD[4878] = -1.67486742E-01;
  COFD[4879] = 3.65938254E-03;
  COFD[4880] = -1.92384813E+01;
  COFD[4881] = 3.64878687E+00;
  COFD[4882] = -1.67486742E-01;
  COFD[4883] = 3.65938254E-03;
  COFD[4884] = -1.88952517E+01;
  COFD[4885] = 3.39465864E+00;
  COFD[4886] = -1.29587884E-01;
  COFD[4887] = 1.82868116E-03;
  COFD[4888] = -1.88952517E+01;
  COFD[4889] = 3.39465864E+00;
  COFD[4890] = -1.29587884E-01;
  COFD[4891] = 1.82868116E-03;
  COFD[4892] = -1.88952517E+01;
  COFD[4893] = 3.39465864E+00;
  COFD[4894] = -1.29587884E-01;
  COFD[4895] = 1.82868116E-03;
  COFD[4896] = -1.88952517E+01;
  COFD[4897] = 3.39465864E+00;
  COFD[4898] = -1.29587884E-01;
  COFD[4899] = 1.82868116E-03;
  COFD[4900] = -1.97466021E+01;
  COFD[4901] = 3.90822244E+00;
  COFD[4902] = -2.07112689E-01;
  COFD[4903] = 5.60389321E-03;
  COFD[4904] = -1.97466021E+01;
  COFD[4905] = 3.90822244E+00;
  COFD[4906] = -2.07112689E-01;
  COFD[4907] = 5.60389321E-03;
  COFD[4908] = -1.90008222E+01;
  COFD[4909] = 3.51383700E+00;
  COFD[4910] = -1.47311797E-01;
  COFD[4911] = 2.68227514E-03;
  COFD[4912] = -1.90008222E+01;
  COFD[4913] = 3.51383700E+00;
  COFD[4914] = -1.47311797E-01;
  COFD[4915] = 2.68227514E-03;
  COFD[4916] = -1.90008222E+01;
  COFD[4917] = 3.51383700E+00;
  COFD[4918] = -1.47311797E-01;
  COFD[4919] = 2.68227514E-03;
  COFD[4920] = -1.90008222E+01;
  COFD[4921] = 3.51383700E+00;
  COFD[4922] = -1.47311797E-01;
  COFD[4923] = 2.68227514E-03;
  COFD[4924] = -2.04833743E+01;
  COFD[4925] = 5.23112374E+00;
  COFD[4926] = -4.54967682E-01;
  COFD[4927] = 1.93570423E-02;
  COFD[4928] = -1.92718738E+01;
  COFD[4929] = 5.41172124E+00;
  COFD[4930] = -4.73213887E-01;
  COFD[4931] = 1.99405473E-02;
  COFD[4932] = -1.58456453E+01;
  COFD[4933] = 4.02074796E+00;
  COFD[4934] = -3.10018539E-01;
  COFD[4935] = 1.35599559E-02;
  COFD[4936] = -1.88179325E+01;
  COFD[4937] = 4.79683898E+00;
  COFD[4938] = -4.04829719E-01;
  COFD[4939] = 1.74325475E-02;
  COFD[4940] = -2.04928875E+01;
  COFD[4941] = 5.22397941E+00;
  COFD[4942] = -4.54138181E-01;
  COFD[4943] = 1.93249289E-02;
  COFD[4944] = -1.88378792E+01;
  COFD[4945] = 4.79683898E+00;
  COFD[4946] = -4.04829719E-01;
  COFD[4947] = 1.74325475E-02;
  COFD[4948] = -1.65295191E+01;
  COFD[4949] = 2.97569077E+00;
  COFD[4950] = -6.75650795E-02;
  COFD[4951] = -1.08649440E-03;
  COFD[4952] = -2.02642156E+01;
  COFD[4953] = 5.14499744E+00;
  COFD[4954] = -4.45694433E-01;
  COFD[4955] = 1.90318647E-02;
  COFD[4956] = -2.01801599E+01;
  COFD[4957] = 4.53183330E+00;
  COFD[4958] = -3.02186760E-01;
  COFD[4959] = 1.02756490E-02;
  COFD[4960] = -2.20420967E+01;
  COFD[4961] = 5.52708328E+00;
  COFD[4962] = -4.68000799E-01;
  COFD[4963] = 1.89131903E-02;
  COFD[4964] = -2.09612533E+01;
  COFD[4965] = 5.40870099E+00;
  COFD[4966] = -4.73017610E-01;
  COFD[4967] = 1.99399066E-02;
  COFD[4968] = -2.11381493E+01;
  COFD[4969] = 5.45574448E+00;
  COFD[4970] = -4.77436163E-01;
  COFD[4971] = 2.00644599E-02;
  COFD[4972] = -2.02637913E+01;
  COFD[4973] = 5.14984081E+00;
  COFD[4974] = -4.46093018E-01;
  COFD[4975] = 1.90396647E-02;
  COFD[4976] = -2.02710239E+01;
  COFD[4977] = 5.14984081E+00;
  COFD[4978] = -4.46093018E-01;
  COFD[4979] = 1.90396647E-02;
  COFD[4980] = -2.01889105E+01;
  COFD[4981] = 4.53183330E+00;
  COFD[4982] = -3.02186760E-01;
  COFD[4983] = 1.02756490E-02;
  COFD[4984] = -1.95876943E+01;
  COFD[4985] = 4.27642977E+00;
  COFD[4986] = -2.68040785E-01;
  COFD[4987] = 8.77649540E-03;
  COFD[4988] = -2.21472082E+01;
  COFD[4989] = 5.56656297E+00;
  COFD[4990] = -4.75500048E-01;
  COFD[4991] = 1.93332291E-02;
  COFD[4992] = -2.19136804E+01;
  COFD[4993] = 5.58503445E+00;
  COFD[4994] = -4.79552117E-01;
  COFD[4995] = 1.95750393E-02;
  COFD[4996] = -2.21384769E+01;
  COFD[4997] = 5.56656297E+00;
  COFD[4998] = -4.75500048E-01;
  COFD[4999] = 1.93332291E-02;
  COFD[5000] = -2.18848092E+01;
  COFD[5001] = 5.51302074E+00;
  COFD[5002] = -4.65263979E-01;
  COFD[5003] = 1.87580679E-02;
  COFD[5004] = -2.18950463E+01;
  COFD[5005] = 5.51302074E+00;
  COFD[5006] = -4.65263979E-01;
  COFD[5007] = 1.87580679E-02;
  COFD[5008] = -2.09222393E+01;
  COFD[5009] = 4.82184721E+00;
  COFD[5010] = -3.48128875E-01;
  COFD[5011] = 1.25918978E-02;
  COFD[5012] = -2.09241584E+01;
  COFD[5013] = 5.42316225E+00;
  COFD[5014] = -4.73702801E-01;
  COFD[5015] = 1.99217718E-02;
  COFD[5016] = -2.09272370E+01;
  COFD[5017] = 4.82184721E+00;
  COFD[5018] = -3.48128875E-01;
  COFD[5019] = 1.25918978E-02;
  COFD[5020] = -2.09272370E+01;
  COFD[5021] = 4.82184721E+00;
  COFD[5022] = -3.48128875E-01;
  COFD[5023] = 1.25918978E-02;
  COFD[5024] = -2.09320530E+01;
  COFD[5025] = 4.82184721E+00;
  COFD[5026] = -3.48128875E-01;
  COFD[5027] = 1.25918978E-02;
  COFD[5028] = -2.19160916E+01;
  COFD[5029] = 5.33587903E+00;
  COFD[5030] = -4.32204887E-01;
  COFD[5031] = 1.69242106E-02;
  COFD[5032] = -2.19873490E+01;
  COFD[5033] = 5.39977369E+00;
  COFD[5034] = -4.43340854E-01;
  COFD[5035] = 1.75199613E-02;
  COFD[5036] = -2.18851152E+01;
  COFD[5037] = 5.21365421E+00;
  COFD[5038] = -4.11227771E-01;
  COFD[5039] = 1.58122118E-02;
  COFD[5040] = -2.21713895E+01;
  COFD[5041] = 5.41196486E+00;
  COFD[5042] = -4.45632422E-01;
  COFD[5043] = 1.76474237E-02;
  COFD[5044] = -2.18837817E+01;
  COFD[5045] = 5.22103227E+00;
  COFD[5046] = -4.12481899E-01;
  COFD[5047] = 1.58782021E-02;
  COFD[5048] = -2.18870287E+01;
  COFD[5049] = 5.22103227E+00;
  COFD[5050] = -4.12481899E-01;
  COFD[5051] = 1.58782021E-02;
  COFD[5052] = -2.20425987E+01;
  COFD[5053] = 5.23117744E+00;
  COFD[5054] = -4.14243780E-01;
  COFD[5055] = 1.59721173E-02;
  COFD[5056] = -2.12066622E+01;
  COFD[5057] = 4.82454930E+00;
  COFD[5058] = -3.48553261E-01;
  COFD[5059] = 1.26132056E-02;
  COFD[5060] = -1.96248709E+01;
  COFD[5061] = 4.10302144E+00;
  COFD[5062] = -2.41111487E-01;
  COFD[5063] = 7.44051119E-03;
  COFD[5064] = -2.13079713E+01;
  COFD[5065] = 4.88198265E+00;
  COFD[5066] = -3.57620372E-01;
  COFD[5067] = 1.30700667E-02;
  COFD[5068] = -2.17771659E+01;
  COFD[5069] = 5.03453866E+00;
  COFD[5070] = -3.81762947E-01;
  COFD[5071] = 1.42886762E-02;
  COFD[5072] = -2.17567671E+01;
  COFD[5073] = 5.03450659E+00;
  COFD[5074] = -3.83012468E-01;
  COFD[5075] = 1.43925677E-02;
  COFD[5076] = -2.07356051E+01;
  COFD[5077] = 4.65728078E+00;
  COFD[5078] = -3.22002062E-01;
  COFD[5079] = 1.12723316E-02;
  COFD[5080] = -2.04451868E+01;
  COFD[5081] = 4.60682543E+00;
  COFD[5082] = -3.13971634E-01;
  COFD[5083] = 1.08661011E-02;
  COFD[5084] = -2.04493748E+01;
  COFD[5085] = 4.60682543E+00;
  COFD[5086] = -3.13971634E-01;
  COFD[5087] = 1.08661011E-02;
  COFD[5088] = -2.09444485E+01;
  COFD[5089] = 4.78554869E+00;
  COFD[5090] = -3.42381150E-01;
  COFD[5091] = 1.23018278E-02;
  COFD[5092] = -1.98074819E+01;
  COFD[5093] = 4.16363821E+00;
  COFD[5094] = -2.50546620E-01;
  COFD[5095] = 7.90900768E-03;
  COFD[5096] = -2.14535680E+01;
  COFD[5097] = 4.95733546E+00;
  COFD[5098] = -3.69505821E-01;
  COFD[5099] = 1.36687047E-02;
  COFD[5100] = -2.07826724E+01;
  COFD[5101] = 4.54213239E+00;
  COFD[5102] = -3.03786739E-01;
  COFD[5103] = 1.03552672E-02;
  COFD[5104] = -2.08497113E+01;
  COFD[5105] = 4.54213239E+00;
  COFD[5106] = -3.03786739E-01;
  COFD[5107] = 1.03552672E-02;
  COFD[5108] = -2.08143698E+01;
  COFD[5109] = 4.54213239E+00;
  COFD[5110] = -3.03786739E-01;
  COFD[5111] = 1.03552672E-02;
  COFD[5112] = -2.08143698E+01;
  COFD[5113] = 4.54213239E+00;
  COFD[5114] = -3.03786739E-01;
  COFD[5115] = 1.03552672E-02;
  COFD[5116] = -2.19617933E+01;
  COFD[5117] = 5.37170913E+00;
  COFD[5118] = -4.38338667E-01;
  COFD[5119] = 1.72490835E-02;
  COFD[5120] = -2.19104906E+01;
  COFD[5121] = 5.33587903E+00;
  COFD[5122] = -4.32204887E-01;
  COFD[5123] = 1.69242106E-02;
  COFD[5124] = -2.20433279E+01;
  COFD[5125] = 5.59157589E+00;
  COFD[5126] = -4.85617912E-01;
  COFD[5127] = 2.00461138E-02;
  COFD[5128] = -2.09376165E+01;
  COFD[5129] = 5.40870099E+00;
  COFD[5130] = -4.73017610E-01;
  COFD[5131] = 1.99399066E-02;
  COFD[5132] = -2.02110547E+01;
  COFD[5133] = 4.22261576E+00;
  COFD[5134] = -2.59143284E-01;
  COFD[5135] = 8.30812312E-03;
  COFD[5136] = -1.97333659E+01;
  COFD[5137] = 4.10038316E+00;
  COFD[5138] = -2.40891523E-01;
  COFD[5139] = 7.43019548E-03;
  COFD[5140] = -1.97312375E+01;
  COFD[5141] = 4.10038316E+00;
  COFD[5142] = -2.40891523E-01;
  COFD[5143] = 7.43019548E-03;
  COFD[5144] = -1.97461985E+01;
  COFD[5145] = 4.06383709E+00;
  COFD[5146] = -2.35340873E-01;
  COFD[5147] = 7.16143347E-03;
  COFD[5148] = -2.09077409E+01;
  COFD[5149] = 4.57602170E+00;
  COFD[5150] = -3.09075782E-01;
  COFD[5151] = 1.06190976E-02;
  COFD[5152] = -2.01876544E+01;
  COFD[5153] = 4.22261576E+00;
  COFD[5154] = -2.59143284E-01;
  COFD[5155] = 8.30812312E-03;
  COFD[5156] = -2.01860887E+01;
  COFD[5157] = 4.22261576E+00;
  COFD[5158] = -2.59143284E-01;
  COFD[5159] = 8.30812312E-03;
  COFD[5160] = -2.13757653E+01;
  COFD[5161] = 4.71094320E+00;
  COFD[5162] = -3.30478653E-01;
  COFD[5163] = 1.16991305E-02;
  COFD[5164] = -2.13745653E+01;
  COFD[5165] = 4.71094320E+00;
  COFD[5166] = -3.30478653E-01;
  COFD[5167] = 1.16991305E-02;
  COFD[5168] = -2.13745653E+01;
  COFD[5169] = 4.71094320E+00;
  COFD[5170] = -3.30478653E-01;
  COFD[5171] = 1.16991305E-02;
  COFD[5172] = -2.13745653E+01;
  COFD[5173] = 4.71094320E+00;
  COFD[5174] = -3.30478653E-01;
  COFD[5175] = 1.16991305E-02;
  COFD[5176] = -2.13745653E+01;
  COFD[5177] = 4.71094320E+00;
  COFD[5178] = -3.30478653E-01;
  COFD[5179] = 1.16991305E-02;
  COFD[5180] = -2.13099039E+01;
  COFD[5181] = 4.69402988E+00;
  COFD[5182] = -3.28451241E-01;
  COFD[5183] = 1.16182817E-02;
  COFD[5184] = -2.13099039E+01;
  COFD[5185] = 4.69402988E+00;
  COFD[5186] = -3.28451241E-01;
  COFD[5187] = 1.16182817E-02;
  COFD[5188] = -2.00260065E+01;
  COFD[5189] = 4.04058640E+00;
  COFD[5190] = -2.29270334E-01;
  COFD[5191] = 6.76606770E-03;
  COFD[5192] = -2.00260065E+01;
  COFD[5193] = 4.04058640E+00;
  COFD[5194] = -2.29270334E-01;
  COFD[5195] = 6.76606770E-03;
  COFD[5196] = -2.00260065E+01;
  COFD[5197] = 4.04058640E+00;
  COFD[5198] = -2.29270334E-01;
  COFD[5199] = 6.76606770E-03;
  COFD[5200] = -2.00260065E+01;
  COFD[5201] = 4.04058640E+00;
  COFD[5202] = -2.29270334E-01;
  COFD[5203] = 6.76606770E-03;
  COFD[5204] = -2.00260065E+01;
  COFD[5205] = 4.04058640E+00;
  COFD[5206] = -2.29270334E-01;
  COFD[5207] = 6.76606770E-03;
  COFD[5208] = -2.00260065E+01;
  COFD[5209] = 4.04058640E+00;
  COFD[5210] = -2.29270334E-01;
  COFD[5211] = 6.76606770E-03;
  COFD[5212] = -2.00260065E+01;
  COFD[5213] = 4.04058640E+00;
  COFD[5214] = -2.29270334E-01;
  COFD[5215] = 6.76606770E-03;
  COFD[5216] = -2.00260065E+01;
  COFD[5217] = 4.04058640E+00;
  COFD[5218] = -2.29270334E-01;
  COFD[5219] = 6.76606770E-03;
  COFD[5220] = -2.00260065E+01;
  COFD[5221] = 4.04058640E+00;
  COFD[5222] = -2.29270334E-01;
  COFD[5223] = 6.76606770E-03;
  COFD[5224] = -2.00260065E+01;
  COFD[5225] = 4.04058640E+00;
  COFD[5226] = -2.29270334E-01;
  COFD[5227] = 6.76606770E-03;
  COFD[5228] = -2.00260065E+01;
  COFD[5229] = 4.04058640E+00;
  COFD[5230] = -2.29270334E-01;
  COFD[5231] = 6.76606770E-03;
  COFD[5232] = -2.00260065E+01;
  COFD[5233] = 4.04058640E+00;
  COFD[5234] = -2.29270334E-01;
  COFD[5235] = 6.76606770E-03;
  COFD[5236] = -1.98201172E+01;
  COFD[5237] = 3.84591155E+00;
  COFD[5238] = -1.99613395E-01;
  COFD[5239] = 5.30794307E-03;
  COFD[5240] = -1.98201172E+01;
  COFD[5241] = 3.84591155E+00;
  COFD[5242] = -1.99613395E-01;
  COFD[5243] = 5.30794307E-03;
  COFD[5244] = -1.98201172E+01;
  COFD[5245] = 3.84591155E+00;
  COFD[5246] = -1.99613395E-01;
  COFD[5247] = 5.30794307E-03;
  COFD[5248] = -1.98201172E+01;
  COFD[5249] = 3.84591155E+00;
  COFD[5250] = -1.99613395E-01;
  COFD[5251] = 5.30794307E-03;
  COFD[5252] = -2.09218607E+01;
  COFD[5253] = 4.46389660E+00;
  COFD[5254] = -2.91616684E-01;
  COFD[5255] = 9.74908497E-03;
  COFD[5256] = -2.09218607E+01;
  COFD[5257] = 4.46389660E+00;
  COFD[5258] = -2.91616684E-01;
  COFD[5259] = 9.74908497E-03;
  COFD[5260] = -1.97858016E+01;
  COFD[5261] = 3.90424489E+00;
  COFD[5262] = -2.08873997E-01;
  COFD[5263] = 5.77813510E-03;
  COFD[5264] = -1.97858016E+01;
  COFD[5265] = 3.90424489E+00;
  COFD[5266] = -2.08873997E-01;
  COFD[5267] = 5.77813510E-03;
  COFD[5268] = -1.97858016E+01;
  COFD[5269] = 3.90424489E+00;
  COFD[5270] = -2.08873997E-01;
  COFD[5271] = 5.77813510E-03;
  COFD[5272] = -1.97858016E+01;
  COFD[5273] = 3.90424489E+00;
  COFD[5274] = -2.08873997E-01;
  COFD[5275] = 5.77813510E-03;
  COFD[5276] = -2.02268939E+01;
  COFD[5277] = 5.13632099E+00;
  COFD[5278] = -4.44839130E-01;
  COFD[5279] = 1.90058356E-02;
  COFD[5280] = -1.78637336E+01;
  COFD[5281] = 4.88268692E+00;
  COFD[5282] = -4.14917638E-01;
  COFD[5283] = 1.78274298E-02;
  COFD[5284] = -1.39659148E+01;
  COFD[5285] = 3.24966086E+00;
  COFD[5286] = -2.11199992E-01;
  COFD[5287] = 9.32580661E-03;
  COFD[5288] = -1.72112897E+01;
  COFD[5289] = 4.15807461E+00;
  COFD[5290] = -3.27178539E-01;
  COFD[5291] = 1.42784349E-02;
  COFD[5292] = -1.85844631E+01;
  COFD[5293] = 4.51052425E+00;
  COFD[5294] = -3.70301627E-01;
  COFD[5295] = 1.60416153E-02;
  COFD[5296] = -1.72310169E+01;
  COFD[5297] = 4.15807461E+00;
  COFD[5298] = -3.27178539E-01;
  COFD[5299] = 1.42784349E-02;
  COFD[5300] = -2.13148834E+01;
  COFD[5301] = 5.27210469E+00;
  COFD[5302] = -4.21419216E-01;
  COFD[5303] = 1.63567178E-02;
  COFD[5304] = -1.82955206E+01;
  COFD[5305] = 4.40289649E+00;
  COFD[5306] = -3.57289765E-01;
  COFD[5307] = 1.55166804E-02;
  COFD[5308] = -2.19699976E+01;
  COFD[5309] = 5.43750833E+00;
  COFD[5310] = -4.50273329E-01;
  COFD[5311] = 1.79013718E-02;
  COFD[5312] = -2.14151478E+01;
  COFD[5313] = 5.41122754E+00;
  COFD[5314] = -4.73185889E-01;
  COFD[5315] = 1.99407905E-02;
  COFD[5316] = -1.94819074E+01;
  COFD[5317] = 4.87180830E+00;
  COFD[5318] = -4.13582958E-01;
  COFD[5319] = 1.77726094E-02;
  COFD[5320] = -1.94186548E+01;
  COFD[5321] = 4.84669430E+00;
  COFD[5322] = -4.10571455E-01;
  COFD[5323] = 1.76520543E-02;
  COFD[5324] = -1.85919162E+01;
  COFD[5325] = 4.51052425E+00;
  COFD[5326] = -3.70301627E-01;
  COFD[5327] = 1.60416153E-02;
  COFD[5328] = -1.85990305E+01;
  COFD[5329] = 4.51052425E+00;
  COFD[5330] = -3.70301627E-01;
  COFD[5331] = 1.60416153E-02;
  COFD[5332] = -2.19786136E+01;
  COFD[5333] = 5.43750833E+00;
  COFD[5334] = -4.50273329E-01;
  COFD[5335] = 1.79013718E-02;
  COFD[5336] = -2.21472082E+01;
  COFD[5337] = 5.56656297E+00;
  COFD[5338] = -4.75500048E-01;
  COFD[5339] = 1.93332291E-02;
  COFD[5340] = -2.14907776E+01;
  COFD[5341] = 5.41585806E+00;
  COFD[5342] = -4.73359323E-01;
  COFD[5343] = 1.99310239E-02;
  COFD[5344] = -2.12014174E+01;
  COFD[5345] = 5.40060531E+00;
  COFD[5346] = -4.72449699E-01;
  COFD[5347] = 1.99345817E-02;
  COFD[5348] = -2.14821808E+01;
  COFD[5349] = 5.41585806E+00;
  COFD[5350] = -4.73359323E-01;
  COFD[5351] = 1.99310239E-02;
  COFD[5352] = -2.15206127E+01;
  COFD[5353] = 5.48426911E+00;
  COFD[5354] = -4.80606512E-01;
  COFD[5355] = 2.01811046E-02;
  COFD[5356] = -2.15307008E+01;
  COFD[5357] = 5.48426911E+00;
  COFD[5358] = -4.80606512E-01;
  COFD[5359] = 2.01811046E-02;
  COFD[5360] = -2.22429785E+01;
  COFD[5361] = 5.53139819E+00;
  COFD[5362] = -4.68828555E-01;
  COFD[5363] = 1.89597887E-02;
  COFD[5364] = -1.95836362E+01;
  COFD[5365] = 4.93449043E+00;
  COFD[5366] = -4.21243802E-01;
  COFD[5367] = 1.80859966E-02;
  COFD[5368] = -2.22478853E+01;
  COFD[5369] = 5.53139819E+00;
  COFD[5370] = -4.68828555E-01;
  COFD[5371] = 1.89597887E-02;
  COFD[5372] = -2.22478853E+01;
  COFD[5373] = 5.53139819E+00;
  COFD[5374] = -4.68828555E-01;
  COFD[5375] = 1.89597887E-02;
  COFD[5376] = -2.22526128E+01;
  COFD[5377] = 5.53139819E+00;
  COFD[5378] = -4.68828555E-01;
  COFD[5379] = 1.89597887E-02;
  COFD[5380] = -2.22317167E+01;
  COFD[5381] = 5.61211818E+00;
  COFD[5382] = -4.91432482E-01;
  COFD[5383] = 2.04238731E-02;
  COFD[5384] = -2.21343012E+01;
  COFD[5385] = 5.60010742E+00;
  COFD[5386] = -4.91597429E-01;
  COFD[5387] = 2.04987718E-02;
  COFD[5388] = -2.24120402E+01;
  COFD[5389] = 5.58744076E+00;
  COFD[5390] = -4.84489462E-01;
  COFD[5391] = 1.99733042E-02;
  COFD[5392] = -2.22701944E+01;
  COFD[5393] = 5.59632316E+00;
  COFD[5394] = -4.91568011E-01;
  COFD[5395] = 2.05156966E-02;
  COFD[5396] = -2.23993824E+01;
  COFD[5397] = 5.58952429E+00;
  COFD[5398] = -4.85012530E-01;
  COFD[5399] = 2.00062142E-02;
  COFD[5400] = -2.24025639E+01;
  COFD[5401] = 5.58952429E+00;
  COFD[5402] = -4.85012530E-01;
  COFD[5403] = 2.00062142E-02;
  COFD[5404] = -2.25300725E+01;
  COFD[5405] = 5.59173268E+00;
  COFD[5406] = -4.85654660E-01;
  COFD[5407] = 2.00483698E-02;
  COFD[5408] = -2.25054565E+01;
  COFD[5409] = 5.53229206E+00;
  COFD[5410] = -4.68999235E-01;
  COFD[5411] = 1.89693762E-02;
  COFD[5412] = -2.24656217E+01;
  COFD[5413] = 5.53283133E+00;
  COFD[5414] = -4.69102080E-01;
  COFD[5415] = 1.89751498E-02;
  COFD[5416] = -2.25189218E+01;
  COFD[5417] = 5.55162937E+00;
  COFD[5418] = -4.72696103E-01;
  COFD[5419] = 1.91769779E-02;
  COFD[5420] = -2.27001888E+01;
  COFD[5421] = 5.58468914E+00;
  COFD[5422] = -4.79958407E-01;
  COFD[5423] = 1.96104043E-02;
  COFD[5424] = -2.26853903E+01;
  COFD[5425] = 5.58521030E+00;
  COFD[5426] = -4.81061650E-01;
  COFD[5427] = 1.96992215E-02;
  COFD[5428] = -2.23404253E+01;
  COFD[5429] = 5.49239750E+00;
  COFD[5430] = -4.60320987E-01;
  COFD[5431] = 1.84538922E-02;
  COFD[5432] = -2.21333788E+01;
  COFD[5433] = 5.47072190E+00;
  COFD[5434] = -4.56301261E-01;
  COFD[5435] = 1.82313566E-02;
  COFD[5436] = -2.21374872E+01;
  COFD[5437] = 5.47072190E+00;
  COFD[5438] = -4.56301261E-01;
  COFD[5439] = 1.82313566E-02;
  COFD[5440] = -2.23172222E+01;
  COFD[5441] = 5.51921482E+00;
  COFD[5442] = -4.66472603E-01;
  COFD[5443] = 1.88266656E-02;
  COFD[5444] = -2.25377697E+01;
  COFD[5445] = 5.54444384E+00;
  COFD[5446] = -4.71310910E-01;
  COFD[5447] = 1.90989323E-02;
  COFD[5448] = -2.25487717E+01;
  COFD[5449] = 5.57713269E+00;
  COFD[5450] = -4.77555529E-01;
  COFD[5451] = 1.94497781E-02;
  COFD[5452] = -2.25243350E+01;
  COFD[5453] = 5.44166443E+00;
  COFD[5454] = -4.51021243E-01;
  COFD[5455] = 1.79421190E-02;
  COFD[5456] = -2.25898102E+01;
  COFD[5457] = 5.44166443E+00;
  COFD[5458] = -4.51021243E-01;
  COFD[5459] = 1.79421190E-02;
  COFD[5460] = -2.25553185E+01;
  COFD[5461] = 5.44166443E+00;
  COFD[5462] = -4.51021243E-01;
  COFD[5463] = 1.79421190E-02;
  COFD[5464] = -2.25553185E+01;
  COFD[5465] = 5.44166443E+00;
  COFD[5466] = -4.51021243E-01;
  COFD[5467] = 1.79421190E-02;
  COFD[5468] = -2.21793313E+01;
  COFD[5469] = 5.60403905E+00;
  COFD[5470] = -4.91221691E-01;
  COFD[5471] = 2.04473483E-02;
  COFD[5472] = -2.22262145E+01;
  COFD[5473] = 5.61211818E+00;
  COFD[5474] = -4.91432482E-01;
  COFD[5475] = 2.04238731E-02;
  COFD[5476] = -2.11349417E+01;
  COFD[5477] = 5.32202066E+00;
  COFD[5478] = -4.65780334E-01;
  COFD[5479] = 1.97876377E-02;
  COFD[5480] = -1.94585097E+01;
  COFD[5481] = 4.87180830E+00;
  COFD[5482] = -4.13582958E-01;
  COFD[5483] = 1.77726094E-02;
  COFD[5484] = -2.27486828E+01;
  COFD[5485] = 5.48315713E+00;
  COFD[5486] = -4.58556646E-01;
  COFD[5487] = 1.83548689E-02;
  COFD[5488] = -2.25568869E+01;
  COFD[5489] = 5.49898805E+00;
  COFD[5490] = -4.61772128E-01;
  COFD[5491] = 1.85402114E-02;
  COFD[5492] = -2.25548051E+01;
  COFD[5493] = 5.49898805E+00;
  COFD[5494] = -4.61772128E-01;
  COFD[5495] = 1.85402114E-02;
  COFD[5496] = -2.26313519E+01;
  COFD[5497] = 5.50447320E+00;
  COFD[5498] = -4.63417030E-01;
  COFD[5499] = 1.86483622E-02;
  COFD[5500] = -2.26001564E+01;
  COFD[5501] = 5.45595972E+00;
  COFD[5502] = -4.53607854E-01;
  COFD[5503] = 1.80835073E-02;
  COFD[5504] = -2.27258337E+01;
  COFD[5505] = 5.48315713E+00;
  COFD[5506] = -4.58556646E-01;
  COFD[5507] = 1.83548689E-02;
  COFD[5508] = -2.27243040E+01;
  COFD[5509] = 5.48315713E+00;
  COFD[5510] = -4.58556646E-01;
  COFD[5511] = 1.83548689E-02;
  COFD[5512] = -2.28458372E+01;
  COFD[5513] = 5.50134401E+00;
  COFD[5514] = -4.62488197E-01;
  COFD[5515] = 1.85873697E-02;
  COFD[5516] = -2.28446658E+01;
  COFD[5517] = 5.50134401E+00;
  COFD[5518] = -4.62488197E-01;
  COFD[5519] = 1.85873697E-02;
  COFD[5520] = -2.28446658E+01;
  COFD[5521] = 5.50134401E+00;
  COFD[5522] = -4.62488197E-01;
  COFD[5523] = 1.85873697E-02;
  COFD[5524] = -2.28446658E+01;
  COFD[5525] = 5.50134401E+00;
  COFD[5526] = -4.62488197E-01;
  COFD[5527] = 1.85873697E-02;
  COFD[5528] = -2.28446658E+01;
  COFD[5529] = 5.50134401E+00;
  COFD[5530] = -4.62488197E-01;
  COFD[5531] = 1.85873697E-02;
  COFD[5532] = -2.28266250E+01;
  COFD[5533] = 5.50218539E+00;
  COFD[5534] = -4.62760343E-01;
  COFD[5535] = 1.86055939E-02;
  COFD[5536] = -2.28266250E+01;
  COFD[5537] = 5.50218539E+00;
  COFD[5538] = -4.62760343E-01;
  COFD[5539] = 1.86055939E-02;
  COFD[5540] = -2.26084502E+01;
  COFD[5541] = 5.30201231E+00;
  COFD[5542] = -4.26456960E-01;
  COFD[5543] = 1.66213106E-02;
  COFD[5544] = -2.26084502E+01;
  COFD[5545] = 5.30201231E+00;
  COFD[5546] = -4.26456960E-01;
  COFD[5547] = 1.66213106E-02;
  COFD[5548] = -2.26084502E+01;
  COFD[5549] = 5.30201231E+00;
  COFD[5550] = -4.26456960E-01;
  COFD[5551] = 1.66213106E-02;
  COFD[5552] = -2.26084502E+01;
  COFD[5553] = 5.30201231E+00;
  COFD[5554] = -4.26456960E-01;
  COFD[5555] = 1.66213106E-02;
  COFD[5556] = -2.26084502E+01;
  COFD[5557] = 5.30201231E+00;
  COFD[5558] = -4.26456960E-01;
  COFD[5559] = 1.66213106E-02;
  COFD[5560] = -2.26084502E+01;
  COFD[5561] = 5.30201231E+00;
  COFD[5562] = -4.26456960E-01;
  COFD[5563] = 1.66213106E-02;
  COFD[5564] = -2.26084502E+01;
  COFD[5565] = 5.30201231E+00;
  COFD[5566] = -4.26456960E-01;
  COFD[5567] = 1.66213106E-02;
  COFD[5568] = -2.26084502E+01;
  COFD[5569] = 5.30201231E+00;
  COFD[5570] = -4.26456960E-01;
  COFD[5571] = 1.66213106E-02;
  COFD[5572] = -2.26084502E+01;
  COFD[5573] = 5.30201231E+00;
  COFD[5574] = -4.26456960E-01;
  COFD[5575] = 1.66213106E-02;
  COFD[5576] = -2.26084502E+01;
  COFD[5577] = 5.30201231E+00;
  COFD[5578] = -4.26456960E-01;
  COFD[5579] = 1.66213106E-02;
  COFD[5580] = -2.26084502E+01;
  COFD[5581] = 5.30201231E+00;
  COFD[5582] = -4.26456960E-01;
  COFD[5583] = 1.66213106E-02;
  COFD[5584] = -2.26084502E+01;
  COFD[5585] = 5.30201231E+00;
  COFD[5586] = -4.26456960E-01;
  COFD[5587] = 1.66213106E-02;
  COFD[5588] = -2.26542273E+01;
  COFD[5589] = 5.21560335E+00;
  COFD[5590] = -4.11558964E-01;
  COFD[5591] = 1.58296343E-02;
  COFD[5592] = -2.26542273E+01;
  COFD[5593] = 5.21560335E+00;
  COFD[5594] = -4.11558964E-01;
  COFD[5595] = 1.58296343E-02;
  COFD[5596] = -2.26542273E+01;
  COFD[5597] = 5.21560335E+00;
  COFD[5598] = -4.11558964E-01;
  COFD[5599] = 1.58296343E-02;
  COFD[5600] = -2.26542273E+01;
  COFD[5601] = 5.21560335E+00;
  COFD[5602] = -4.11558964E-01;
  COFD[5603] = 1.58296343E-02;
  COFD[5604] = -2.27597439E+01;
  COFD[5605] = 5.41143598E+00;
  COFD[5606] = -4.45532807E-01;
  COFD[5607] = 1.76418728E-02;
  COFD[5608] = -2.27597439E+01;
  COFD[5609] = 5.41143598E+00;
  COFD[5610] = -4.45532807E-01;
  COFD[5611] = 1.76418728E-02;
  COFD[5612] = -2.25741250E+01;
  COFD[5613] = 5.25350038E+00;
  COFD[5614] = -4.18174534E-01;
  COFD[5615] = 1.61831733E-02;
  COFD[5616] = -2.25741250E+01;
  COFD[5617] = 5.25350038E+00;
  COFD[5618] = -4.18174534E-01;
  COFD[5619] = 1.61831733E-02;
  COFD[5620] = -2.25741250E+01;
  COFD[5621] = 5.25350038E+00;
  COFD[5622] = -4.18174534E-01;
  COFD[5623] = 1.61831733E-02;
  COFD[5624] = -2.25741250E+01;
  COFD[5625] = 5.25350038E+00;
  COFD[5626] = -4.18174534E-01;
  COFD[5627] = 1.61831733E-02;
  COFD[5628] = -1.82673830E+01;
  COFD[5629] = 4.39538102E+00;
  COFD[5630] = -3.56367230E-01;
  COFD[5631] = 1.54788461E-02;
  COFD[5632] = -1.74408120E+01;
  COFD[5633] = 4.83580036E+00;
  COFD[5634] = -4.09383573E-01;
  COFD[5635] = 1.76098175E-02;
  COFD[5636] = -1.36336524E+01;
  COFD[5637] = 3.22088176E+00;
  COFD[5638] = -2.07623790E-01;
  COFD[5639] = 9.17771542E-03;
  COFD[5640] = -1.68343316E+01;
  COFD[5641] = 4.11954900E+00;
  COFD[5642] = -3.22470391E-01;
  COFD[5643] = 1.40859564E-02;
  COFD[5644] = -1.82145292E+01;
  COFD[5645] = 4.46848269E+00;
  COFD[5646] = -3.65269718E-01;
  COFD[5647] = 1.58407652E-02;
  COFD[5648] = -1.68535691E+01;
  COFD[5649] = 4.11954900E+00;
  COFD[5650] = -3.22470391E-01;
  COFD[5651] = 1.40859564E-02;
  COFD[5652] = -2.11309141E+01;
  COFD[5653] = 5.32644193E+00;
  COFD[5654] = -4.30581064E-01;
  COFD[5655] = 1.68379725E-02;
  COFD[5656] = -1.79116480E+01;
  COFD[5657] = 4.35148286E+00;
  COFD[5658] = -3.50886647E-01;
  COFD[5659] = 1.52498573E-02;
  COFD[5660] = -2.17771908E+01;
  COFD[5661] = 5.47519298E+00;
  COFD[5662] = -4.57113040E-01;
  COFD[5663] = 1.82758312E-02;
  COFD[5664] = -2.11031095E+01;
  COFD[5665] = 5.39439999E+00;
  COFD[5666] = -4.72050184E-01;
  COFD[5667] = 1.99336257E-02;
  COFD[5668] = -1.91225404E+01;
  COFD[5669] = 4.82869066E+00;
  COFD[5670] = -4.08564514E-01;
  COFD[5671] = 1.75784675E-02;
  COFD[5672] = -1.90692591E+01;
  COFD[5673] = 4.80830699E+00;
  COFD[5674] = -4.06171933E-01;
  COFD[5675] = 1.74848791E-02;
  COFD[5676] = -1.82217141E+01;
  COFD[5677] = 4.46848269E+00;
  COFD[5678] = -3.65269718E-01;
  COFD[5679] = 1.58407652E-02;
  COFD[5680] = -1.82285687E+01;
  COFD[5681] = 4.46848269E+00;
  COFD[5682] = -3.65269718E-01;
  COFD[5683] = 1.58407652E-02;
  COFD[5684] = -2.17855106E+01;
  COFD[5685] = 5.47519298E+00;
  COFD[5686] = -4.57113040E-01;
  COFD[5687] = 1.82758312E-02;
  COFD[5688] = -2.19136804E+01;
  COFD[5689] = 5.58503445E+00;
  COFD[5690] = -4.79552117E-01;
  COFD[5691] = 1.95750393E-02;
  COFD[5692] = -2.12014174E+01;
  COFD[5693] = 5.40060531E+00;
  COFD[5694] = -4.72449699E-01;
  COFD[5695] = 1.99345817E-02;
  COFD[5696] = -2.08820879E+01;
  COFD[5697] = 5.38250415E+00;
  COFD[5698] = -4.71144140E-01;
  COFD[5699] = 1.99199779E-02;
  COFD[5700] = -2.11931163E+01;
  COFD[5701] = 5.40060531E+00;
  COFD[5702] = -4.72449699E-01;
  COFD[5703] = 1.99345817E-02;
  COFD[5704] = -2.11427719E+01;
  COFD[5705] = 5.43893233E+00;
  COFD[5706] = -4.75546039E-01;
  COFD[5707] = 1.99938690E-02;
  COFD[5708] = -2.11525312E+01;
  COFD[5709] = 5.43893233E+00;
  COFD[5710] = -4.75546039E-01;
  COFD[5711] = 1.99938690E-02;
  COFD[5712] = -2.20398293E+01;
  COFD[5713] = 5.56049839E+00;
  COFD[5714] = -4.74367872E-01;
  COFD[5715] = 1.92702787E-02;
  COFD[5716] = -1.91366985E+01;
  COFD[5717] = 4.87703209E+00;
  COFD[5718] = -4.14222202E-01;
  COFD[5719] = 1.77987878E-02;
  COFD[5720] = -2.20445378E+01;
  COFD[5721] = 5.56049839E+00;
  COFD[5722] = -4.74367872E-01;
  COFD[5723] = 1.92702787E-02;
  COFD[5724] = -2.20445378E+01;
  COFD[5725] = 5.56049839E+00;
  COFD[5726] = -4.74367872E-01;
  COFD[5727] = 1.92702787E-02;
  COFD[5728] = -2.20490726E+01;
  COFD[5729] = 5.56049839E+00;
  COFD[5730] = -4.74367872E-01;
  COFD[5731] = 1.92702787E-02;
  COFD[5732] = -2.19501274E+01;
  COFD[5733] = 5.60255148E+00;
  COFD[5734] = -4.91366572E-01;
  COFD[5735] = 2.04670553E-02;
  COFD[5736] = -2.18222678E+01;
  COFD[5737] = 5.57940140E+00;
  COFD[5738] = -4.89964112E-01;
  COFD[5739] = 2.04689539E-02;
  COFD[5740] = -2.21913373E+01;
  COFD[5741] = 5.60175327E+00;
  COFD[5742] = -4.87953216E-01;
  COFD[5743] = 2.01882171E-02;
  COFD[5744] = -2.19617242E+01;
  COFD[5745] = 5.57026255E+00;
  COFD[5746] = -4.89178491E-01;
  COFD[5747] = 2.04505218E-02;
  COFD[5748] = -2.21792046E+01;
  COFD[5749] = 5.60465338E+00;
  COFD[5750] = -4.88572478E-01;
  COFD[5751] = 2.02248525E-02;
  COFD[5752] = -2.21822443E+01;
  COFD[5753] = 5.60465338E+00;
  COFD[5754] = -4.88572478E-01;
  COFD[5755] = 2.02248525E-02;
  COFD[5756] = -2.23250342E+01;
  COFD[5757] = 5.60776666E+00;
  COFD[5758] = -4.89319792E-01;
  COFD[5759] = 2.02710069E-02;
  COFD[5760] = -2.23220188E+01;
  COFD[5761] = 5.56147622E+00;
  COFD[5762] = -4.74550352E-01;
  COFD[5763] = 1.92804201E-02;
  COFD[5764] = -2.22776696E+01;
  COFD[5765] = 5.56206434E+00;
  COFD[5766] = -4.74660059E-01;
  COFD[5767] = 1.92865159E-02;
  COFD[5768] = -2.23319290E+01;
  COFD[5769] = 5.57975926E+00;
  COFD[5770] = -4.78115332E-01;
  COFD[5771] = 1.94827982E-02;
  COFD[5772] = -2.24603291E+01;
  COFD[5773] = 5.58501539E+00;
  COFD[5774] = -4.81433860E-01;
  COFD[5775] = 1.97311245E-02;
  COFD[5776] = -2.24423526E+01;
  COFD[5777] = 5.58416166E+00;
  COFD[5778] = -4.82369720E-01;
  COFD[5779] = 1.98133127E-02;
  COFD[5780] = -2.21089304E+01;
  COFD[5781] = 5.50506115E+00;
  COFD[5782] = -4.63563533E-01;
  COFD[5783] = 1.86575247E-02;
  COFD[5784] = -2.19162320E+01;
  COFD[5785] = 5.49906960E+00;
  COFD[5786] = -4.61793001E-01;
  COFD[5787] = 1.85415189E-02;
  COFD[5788] = -2.19201671E+01;
  COFD[5789] = 5.49906960E+00;
  COFD[5790] = -4.61793001E-01;
  COFD[5791] = 1.85415189E-02;
  COFD[5792] = -2.21147671E+01;
  COFD[5793] = 5.54793364E+00;
  COFD[5794] = -4.71971857E-01;
  COFD[5795] = 1.91358707E-02;
  COFD[5796] = -2.23573842E+01;
  COFD[5797] = 5.57398439E+00;
  COFD[5798] = -4.76920046E-01;
  COFD[5799] = 1.94131406E-02;
  COFD[5800] = -2.23144023E+01;
  COFD[5801] = 5.58484440E+00;
  COFD[5802] = -4.80068319E-01;
  COFD[5803] = 1.96187346E-02;
  COFD[5804] = -2.23640982E+01;
  COFD[5805] = 5.47922490E+00;
  COFD[5806] = -4.57847893E-01;
  COFD[5807] = 1.83161707E-02;
  COFD[5808] = -2.24262216E+01;
  COFD[5809] = 5.47922490E+00;
  COFD[5810] = -4.57847893E-01;
  COFD[5811] = 1.83161707E-02;
  COFD[5812] = -2.23935474E+01;
  COFD[5813] = 5.47922490E+00;
  COFD[5814] = -4.57847893E-01;
  COFD[5815] = 1.83161707E-02;
  COFD[5816] = -2.23935474E+01;
  COFD[5817] = 5.47922490E+00;
  COFD[5818] = -4.57847893E-01;
  COFD[5819] = 1.83161707E-02;
  COFD[5820] = -2.19032541E+01;
  COFD[5821] = 5.59794138E+00;
  COFD[5822] = -4.91684532E-01;
  COFD[5823] = 2.05170953E-02;
  COFD[5824] = -2.19448410E+01;
  COFD[5825] = 5.60255148E+00;
  COFD[5826] = -4.91366572E-01;
  COFD[5827] = 2.04670553E-02;
  COFD[5828] = -2.07415192E+01;
  COFD[5829] = 5.26552592E+00;
  COFD[5830] = -4.58996898E-01;
  COFD[5831] = 1.95145314E-02;
  COFD[5832] = -1.90996777E+01;
  COFD[5833] = 4.82869066E+00;
  COFD[5834] = -4.08564514E-01;
  COFD[5835] = 1.75784675E-02;
  COFD[5836] = -2.25541218E+01;
  COFD[5837] = 5.50183692E+00;
  COFD[5838] = -4.62651175E-01;
  COFD[5839] = 1.85983343E-02;
  COFD[5840] = -2.23374279E+01;
  COFD[5841] = 5.51274249E+00;
  COFD[5842] = -4.65211755E-01;
  COFD[5843] = 1.87551544E-02;
  COFD[5844] = -2.23354464E+01;
  COFD[5845] = 5.51274249E+00;
  COFD[5846] = -4.65211755E-01;
  COFD[5847] = 1.87551544E-02;
  COFD[5848] = -2.24459414E+01;
  COFD[5849] = 5.52908983E+00;
  COFD[5850] = -4.68386544E-01;
  COFD[5851] = 1.89349273E-02;
  COFD[5852] = -2.24371965E+01;
  COFD[5853] = 5.49163497E+00;
  COFD[5854] = -4.60172524E-01;
  COFD[5855] = 1.84455001E-02;
  COFD[5856] = -2.25324537E+01;
  COFD[5857] = 5.50183692E+00;
  COFD[5858] = -4.62651175E-01;
  COFD[5859] = 1.85983343E-02;
  COFD[5860] = -2.25310012E+01;
  COFD[5861] = 5.50183692E+00;
  COFD[5862] = -4.62651175E-01;
  COFD[5863] = 1.85983343E-02;
  COFD[5864] = -2.26591021E+01;
  COFD[5865] = 5.52001624E+00;
  COFD[5866] = -4.66629503E-01;
  COFD[5867] = 1.88355817E-02;
  COFD[5868] = -2.26579920E+01;
  COFD[5869] = 5.52001624E+00;
  COFD[5870] = -4.66629503E-01;
  COFD[5871] = 1.88355817E-02;
  COFD[5872] = -2.26579920E+01;
  COFD[5873] = 5.52001624E+00;
  COFD[5874] = -4.66629503E-01;
  COFD[5875] = 1.88355817E-02;
  COFD[5876] = -2.26579920E+01;
  COFD[5877] = 5.52001624E+00;
  COFD[5878] = -4.66629503E-01;
  COFD[5879] = 1.88355817E-02;
  COFD[5880] = -2.26579920E+01;
  COFD[5881] = 5.52001624E+00;
  COFD[5882] = -4.66629503E-01;
  COFD[5883] = 1.88355817E-02;
  COFD[5884] = -2.26433974E+01;
  COFD[5885] = 5.52285313E+00;
  COFD[5886] = -4.67182516E-01;
  COFD[5887] = 1.88669459E-02;
  COFD[5888] = -2.26433974E+01;
  COFD[5889] = 5.52285313E+00;
  COFD[5890] = -4.67182516E-01;
  COFD[5891] = 1.88669459E-02;
  COFD[5892] = -2.24952591E+01;
  COFD[5893] = 5.35215936E+00;
  COFD[5894] = -4.34996256E-01;
  COFD[5895] = 1.70721706E-02;
  COFD[5896] = -2.24952591E+01;
  COFD[5897] = 5.35215936E+00;
  COFD[5898] = -4.34996256E-01;
  COFD[5899] = 1.70721706E-02;
  COFD[5900] = -2.24952591E+01;
  COFD[5901] = 5.35215936E+00;
  COFD[5902] = -4.34996256E-01;
  COFD[5903] = 1.70721706E-02;
  COFD[5904] = -2.24952591E+01;
  COFD[5905] = 5.35215936E+00;
  COFD[5906] = -4.34996256E-01;
  COFD[5907] = 1.70721706E-02;
  COFD[5908] = -2.24952591E+01;
  COFD[5909] = 5.35215936E+00;
  COFD[5910] = -4.34996256E-01;
  COFD[5911] = 1.70721706E-02;
  COFD[5912] = -2.24952591E+01;
  COFD[5913] = 5.35215936E+00;
  COFD[5914] = -4.34996256E-01;
  COFD[5915] = 1.70721706E-02;
  COFD[5916] = -2.24952591E+01;
  COFD[5917] = 5.35215936E+00;
  COFD[5918] = -4.34996256E-01;
  COFD[5919] = 1.70721706E-02;
  COFD[5920] = -2.24952591E+01;
  COFD[5921] = 5.35215936E+00;
  COFD[5922] = -4.34996256E-01;
  COFD[5923] = 1.70721706E-02;
  COFD[5924] = -2.24952591E+01;
  COFD[5925] = 5.35215936E+00;
  COFD[5926] = -4.34996256E-01;
  COFD[5927] = 1.70721706E-02;
  COFD[5928] = -2.24952591E+01;
  COFD[5929] = 5.35215936E+00;
  COFD[5930] = -4.34996256E-01;
  COFD[5931] = 1.70721706E-02;
  COFD[5932] = -2.24952591E+01;
  COFD[5933] = 5.35215936E+00;
  COFD[5934] = -4.34996256E-01;
  COFD[5935] = 1.70721706E-02;
  COFD[5936] = -2.24952591E+01;
  COFD[5937] = 5.35215936E+00;
  COFD[5938] = -4.34996256E-01;
  COFD[5939] = 1.70721706E-02;
  COFD[5940] = -2.25379937E+01;
  COFD[5941] = 5.25915537E+00;
  COFD[5942] = -4.19162661E-01;
  COFD[5943] = 1.62360462E-02;
  COFD[5944] = -2.25379937E+01;
  COFD[5945] = 5.25915537E+00;
  COFD[5946] = -4.19162661E-01;
  COFD[5947] = 1.62360462E-02;
  COFD[5948] = -2.25379937E+01;
  COFD[5949] = 5.25915537E+00;
  COFD[5950] = -4.19162661E-01;
  COFD[5951] = 1.62360462E-02;
  COFD[5952] = -2.25379937E+01;
  COFD[5953] = 5.25915537E+00;
  COFD[5954] = -4.19162661E-01;
  COFD[5955] = 1.62360462E-02;
  COFD[5956] = -2.26161862E+01;
  COFD[5957] = 5.44859148E+00;
  COFD[5958] = -4.52270178E-01;
  COFD[5959] = 1.80102671E-02;
  COFD[5960] = -2.26161862E+01;
  COFD[5961] = 5.44859148E+00;
  COFD[5962] = -4.52270178E-01;
  COFD[5963] = 1.80102671E-02;
  COFD[5964] = -2.24660218E+01;
  COFD[5965] = 5.30519385E+00;
  COFD[5966] = -4.26982994E-01;
  COFD[5967] = 1.66486409E-02;
  COFD[5968] = -2.24660218E+01;
  COFD[5969] = 5.30519385E+00;
  COFD[5970] = -4.26982994E-01;
  COFD[5971] = 1.66486409E-02;
  COFD[5972] = -2.24660218E+01;
  COFD[5973] = 5.30519385E+00;
  COFD[5974] = -4.26982994E-01;
  COFD[5975] = 1.66486409E-02;
  COFD[5976] = -2.24660218E+01;
  COFD[5977] = 5.30519385E+00;
  COFD[5978] = -4.26982994E-01;
  COFD[5979] = 1.66486409E-02;
  COFD[5980] = -1.78815941E+01;
  COFD[5981] = 4.34347890E+00;
  COFD[5982] = -3.49890003E-01;
  COFD[5983] = 1.52083459E-02;
  COFD[5984] = -1.78631714E+01;
  COFD[5985] = 4.88268692E+00;
  COFD[5986] = -4.14917638E-01;
  COFD[5987] = 1.78274298E-02;
  COFD[5988] = -1.39648264E+01;
  COFD[5989] = 3.24966086E+00;
  COFD[5990] = -2.11199992E-01;
  COFD[5991] = 9.32580661E-03;
  COFD[5992] = -1.72053030E+01;
  COFD[5993] = 4.15807461E+00;
  COFD[5994] = -3.27178539E-01;
  COFD[5995] = 1.42784349E-02;
  COFD[5996] = -1.85756017E+01;
  COFD[5997] = 4.51052425E+00;
  COFD[5998] = -3.70301627E-01;
  COFD[5999] = 1.60416153E-02;
  COFD[6000] = -1.72247908E+01;
  COFD[6001] = 4.15807461E+00;
  COFD[6002] = -3.27178539E-01;
  COFD[6003] = 1.42784349E-02;
  COFD[6004] = -2.13084280E+01;
  COFD[6005] = 5.27210469E+00;
  COFD[6006] = -4.21419216E-01;
  COFD[6007] = 1.63567178E-02;
  COFD[6008] = -1.82872262E+01;
  COFD[6009] = 4.40289649E+00;
  COFD[6010] = -3.57289765E-01;
  COFD[6011] = 1.55166804E-02;
  COFD[6012] = -2.19615526E+01;
  COFD[6013] = 5.43750833E+00;
  COFD[6014] = -4.50273329E-01;
  COFD[6015] = 1.79013718E-02;
  COFD[6016] = -2.14049498E+01;
  COFD[6017] = 5.41122754E+00;
  COFD[6018] = -4.73185889E-01;
  COFD[6019] = 1.99407905E-02;
  COFD[6020] = -1.94761598E+01;
  COFD[6021] = 4.87180830E+00;
  COFD[6022] = -4.13582958E-01;
  COFD[6023] = 1.77726094E-02;
  COFD[6024] = -1.94126574E+01;
  COFD[6025] = 4.84669430E+00;
  COFD[6026] = -4.10571455E-01;
  COFD[6027] = 1.76520543E-02;
  COFD[6028] = -1.85829229E+01;
  COFD[6029] = 4.51052425E+00;
  COFD[6030] = -3.70301627E-01;
  COFD[6031] = 1.60416153E-02;
  COFD[6032] = -1.85899094E+01;
  COFD[6033] = 4.51052425E+00;
  COFD[6034] = -3.70301627E-01;
  COFD[6035] = 1.60416153E-02;
  COFD[6036] = -2.19700230E+01;
  COFD[6037] = 5.43750833E+00;
  COFD[6038] = -4.50273329E-01;
  COFD[6039] = 1.79013718E-02;
  COFD[6040] = -2.21384769E+01;
  COFD[6041] = 5.56656297E+00;
  COFD[6042] = -4.75500048E-01;
  COFD[6043] = 1.93332291E-02;
  COFD[6044] = -2.14821808E+01;
  COFD[6045] = 5.41585806E+00;
  COFD[6046] = -4.73359323E-01;
  COFD[6047] = 1.99310239E-02;
  COFD[6048] = -2.11931163E+01;
  COFD[6049] = 5.40060531E+00;
  COFD[6050] = -4.72449699E-01;
  COFD[6051] = 1.99345817E-02;
  COFD[6052] = -2.14737294E+01;
  COFD[6053] = 5.41585806E+00;
  COFD[6054] = -4.73359323E-01;
  COFD[6055] = 1.99310239E-02;
  COFD[6056] = -2.15126287E+01;
  COFD[6057] = 5.48426911E+00;
  COFD[6058] = -4.80606512E-01;
  COFD[6059] = 2.01811046E-02;
  COFD[6060] = -2.15225554E+01;
  COFD[6061] = 5.48426911E+00;
  COFD[6062] = -4.80606512E-01;
  COFD[6063] = 2.01811046E-02;
  COFD[6064] = -2.22329692E+01;
  COFD[6065] = 5.53139819E+00;
  COFD[6066] = -4.68828555E-01;
  COFD[6067] = 1.89597887E-02;
  COFD[6068] = -1.95737273E+01;
  COFD[6069] = 4.93449043E+00;
  COFD[6070] = -4.21243802E-01;
  COFD[6071] = 1.80859966E-02;
  COFD[6072] = -2.22377782E+01;
  COFD[6073] = 5.53139819E+00;
  COFD[6074] = -4.68828555E-01;
  COFD[6075] = 1.89597887E-02;
  COFD[6076] = -2.22377782E+01;
  COFD[6077] = 5.53139819E+00;
  COFD[6078] = -4.68828555E-01;
  COFD[6079] = 1.89597887E-02;
  COFD[6080] = -2.22424107E+01;
  COFD[6081] = 5.53139819E+00;
  COFD[6082] = -4.68828555E-01;
  COFD[6083] = 1.89597887E-02;
  COFD[6084] = -2.22219067E+01;
  COFD[6085] = 5.61211818E+00;
  COFD[6086] = -4.91432482E-01;
  COFD[6087] = 2.04238731E-02;
  COFD[6088] = -2.21242875E+01;
  COFD[6089] = 5.60010742E+00;
  COFD[6090] = -4.91597429E-01;
  COFD[6091] = 2.04987718E-02;
  COFD[6092] = -2.24010166E+01;
  COFD[6093] = 5.58744076E+00;
  COFD[6094] = -4.84489462E-01;
  COFD[6095] = 1.99733042E-02;
  COFD[6096] = -2.22600832E+01;
  COFD[6097] = 5.59632316E+00;
  COFD[6098] = -4.91568011E-01;
  COFD[6099] = 2.05156966E-02;
  COFD[6100] = -2.23882871E+01;
  COFD[6101] = 5.58952429E+00;
  COFD[6102] = -4.85012530E-01;
  COFD[6103] = 2.00062142E-02;
  COFD[6104] = -2.23913985E+01;
  COFD[6105] = 5.58952429E+00;
  COFD[6106] = -4.85012530E-01;
  COFD[6107] = 2.00062142E-02;
  COFD[6108] = -2.25188386E+01;
  COFD[6109] = 5.59173268E+00;
  COFD[6110] = -4.85654660E-01;
  COFD[6111] = 2.00483698E-02;
  COFD[6112] = -2.24942256E+01;
  COFD[6113] = 5.53229206E+00;
  COFD[6114] = -4.68999235E-01;
  COFD[6115] = 1.89693762E-02;
  COFD[6116] = -2.24543239E+01;
  COFD[6117] = 5.53283133E+00;
  COFD[6118] = -4.69102080E-01;
  COFD[6119] = 1.89751498E-02;
  COFD[6120] = -2.25076910E+01;
  COFD[6121] = 5.55162937E+00;
  COFD[6122] = -4.72696103E-01;
  COFD[6123] = 1.91769779E-02;
  COFD[6124] = -2.26882474E+01;
  COFD[6125] = 5.58468914E+00;
  COFD[6126] = -4.79958407E-01;
  COFD[6127] = 1.96104043E-02;
  COFD[6128] = -2.26733971E+01;
  COFD[6129] = 5.58521030E+00;
  COFD[6130] = -4.81061650E-01;
  COFD[6131] = 1.96992215E-02;
  COFD[6132] = -2.23301307E+01;
  COFD[6133] = 5.49239750E+00;
  COFD[6134] = -4.60320987E-01;
  COFD[6135] = 1.84538922E-02;
  COFD[6136] = -2.21229104E+01;
  COFD[6137] = 5.47072190E+00;
  COFD[6138] = -4.56301261E-01;
  COFD[6139] = 1.82313566E-02;
  COFD[6140] = -2.21269333E+01;
  COFD[6141] = 5.47072190E+00;
  COFD[6142] = -4.56301261E-01;
  COFD[6143] = 1.82313566E-02;
  COFD[6144] = -2.23061299E+01;
  COFD[6145] = 5.51921482E+00;
  COFD[6146] = -4.66472603E-01;
  COFD[6147] = 1.88266656E-02;
  COFD[6148] = -2.25266073E+01;
  COFD[6149] = 5.54444384E+00;
  COFD[6150] = -4.71310910E-01;
  COFD[6151] = 1.90989323E-02;
  COFD[6152] = -2.25375408E+01;
  COFD[6153] = 5.57713269E+00;
  COFD[6154] = -4.77555529E-01;
  COFD[6155] = 1.94497781E-02;
  COFD[6156] = -2.25122934E+01;
  COFD[6157] = 5.44166443E+00;
  COFD[6158] = -4.51021243E-01;
  COFD[6159] = 1.79421190E-02;
  COFD[6160] = -2.25761068E+01;
  COFD[6161] = 5.44166443E+00;
  COFD[6162] = -4.51021243E-01;
  COFD[6163] = 1.79421190E-02;
  COFD[6164] = -2.25425170E+01;
  COFD[6165] = 5.44166443E+00;
  COFD[6166] = -4.51021243E-01;
  COFD[6167] = 1.79421190E-02;
  COFD[6168] = -2.25425170E+01;
  COFD[6169] = 5.44166443E+00;
  COFD[6170] = -4.51021243E-01;
  COFD[6171] = 1.79421190E-02;
  COFD[6172] = -2.21694180E+01;
  COFD[6173] = 5.60403905E+00;
  COFD[6174] = -4.91221691E-01;
  COFD[6175] = 2.04473483E-02;
  COFD[6176] = -2.22165108E+01;
  COFD[6177] = 5.61211818E+00;
  COFD[6178] = -4.91432482E-01;
  COFD[6179] = 2.04238731E-02;
  COFD[6180] = -2.11253475E+01;
  COFD[6181] = 5.32202066E+00;
  COFD[6182] = -4.65780334E-01;
  COFD[6183] = 1.97876377E-02;
  COFD[6184] = -1.94530234E+01;
  COFD[6185] = 4.87180830E+00;
  COFD[6186] = -4.13582958E-01;
  COFD[6187] = 1.77726094E-02;
  COFD[6188] = -2.27354050E+01;
  COFD[6189] = 5.48315713E+00;
  COFD[6190] = -4.58556646E-01;
  COFD[6191] = 1.83548689E-02;
  COFD[6192] = -2.25447958E+01;
  COFD[6193] = 5.49898805E+00;
  COFD[6194] = -4.61772128E-01;
  COFD[6195] = 1.85402114E-02;
  COFD[6196] = -2.25427636E+01;
  COFD[6197] = 5.49898805E+00;
  COFD[6198] = -4.61772128E-01;
  COFD[6199] = 1.85402114E-02;
  COFD[6200] = -2.26193104E+01;
  COFD[6201] = 5.50447320E+00;
  COFD[6202] = -4.63417030E-01;
  COFD[6203] = 1.86483622E-02;
  COFD[6204] = -2.25875026E+01;
  COFD[6205] = 5.45595972E+00;
  COFD[6206] = -4.53607854E-01;
  COFD[6207] = 1.80835073E-02;
  COFD[6208] = -2.27131416E+01;
  COFD[6209] = 5.48315713E+00;
  COFD[6210] = -4.58556646E-01;
  COFD[6211] = 1.83548689E-02;
  COFD[6212] = -2.27116502E+01;
  COFD[6213] = 5.48315713E+00;
  COFD[6214] = -4.58556646E-01;
  COFD[6215] = 1.83548689E-02;
  COFD[6216] = -2.28326727E+01;
  COFD[6217] = 5.50134401E+00;
  COFD[6218] = -4.62488197E-01;
  COFD[6219] = 1.85873697E-02;
  COFD[6220] = -2.28315318E+01;
  COFD[6221] = 5.50134401E+00;
  COFD[6222] = -4.62488197E-01;
  COFD[6223] = 1.85873697E-02;
  COFD[6224] = -2.28315318E+01;
  COFD[6225] = 5.50134401E+00;
  COFD[6226] = -4.62488197E-01;
  COFD[6227] = 1.85873697E-02;
  COFD[6228] = -2.28315318E+01;
  COFD[6229] = 5.50134401E+00;
  COFD[6230] = -4.62488197E-01;
  COFD[6231] = 1.85873697E-02;
  COFD[6232] = -2.28315318E+01;
  COFD[6233] = 5.50134401E+00;
  COFD[6234] = -4.62488197E-01;
  COFD[6235] = 1.85873697E-02;
  COFD[6236] = -2.28135218E+01;
  COFD[6237] = 5.50218539E+00;
  COFD[6238] = -4.62760343E-01;
  COFD[6239] = 1.86055939E-02;
  COFD[6240] = -2.28135218E+01;
  COFD[6241] = 5.50218539E+00;
  COFD[6242] = -4.62760343E-01;
  COFD[6243] = 1.86055939E-02;
  COFD[6244] = -2.25945370E+01;
  COFD[6245] = 5.30201231E+00;
  COFD[6246] = -4.26456960E-01;
  COFD[6247] = 1.66213106E-02;
  COFD[6248] = -2.25945370E+01;
  COFD[6249] = 5.30201231E+00;
  COFD[6250] = -4.26456960E-01;
  COFD[6251] = 1.66213106E-02;
  COFD[6252] = -2.25945370E+01;
  COFD[6253] = 5.30201231E+00;
  COFD[6254] = -4.26456960E-01;
  COFD[6255] = 1.66213106E-02;
  COFD[6256] = -2.25945370E+01;
  COFD[6257] = 5.30201231E+00;
  COFD[6258] = -4.26456960E-01;
  COFD[6259] = 1.66213106E-02;
  COFD[6260] = -2.25945370E+01;
  COFD[6261] = 5.30201231E+00;
  COFD[6262] = -4.26456960E-01;
  COFD[6263] = 1.66213106E-02;
  COFD[6264] = -2.25945370E+01;
  COFD[6265] = 5.30201231E+00;
  COFD[6266] = -4.26456960E-01;
  COFD[6267] = 1.66213106E-02;
  COFD[6268] = -2.25945370E+01;
  COFD[6269] = 5.30201231E+00;
  COFD[6270] = -4.26456960E-01;
  COFD[6271] = 1.66213106E-02;
  COFD[6272] = -2.25945370E+01;
  COFD[6273] = 5.30201231E+00;
  COFD[6274] = -4.26456960E-01;
  COFD[6275] = 1.66213106E-02;
  COFD[6276] = -2.25945370E+01;
  COFD[6277] = 5.30201231E+00;
  COFD[6278] = -4.26456960E-01;
  COFD[6279] = 1.66213106E-02;
  COFD[6280] = -2.25945370E+01;
  COFD[6281] = 5.30201231E+00;
  COFD[6282] = -4.26456960E-01;
  COFD[6283] = 1.66213106E-02;
  COFD[6284] = -2.25945370E+01;
  COFD[6285] = 5.30201231E+00;
  COFD[6286] = -4.26456960E-01;
  COFD[6287] = 1.66213106E-02;
  COFD[6288] = -2.25945370E+01;
  COFD[6289] = 5.30201231E+00;
  COFD[6290] = -4.26456960E-01;
  COFD[6291] = 1.66213106E-02;
  COFD[6292] = -2.26397937E+01;
  COFD[6293] = 5.21560335E+00;
  COFD[6294] = -4.11558964E-01;
  COFD[6295] = 1.58296343E-02;
  COFD[6296] = -2.26397937E+01;
  COFD[6297] = 5.21560335E+00;
  COFD[6298] = -4.11558964E-01;
  COFD[6299] = 1.58296343E-02;
  COFD[6300] = -2.26397937E+01;
  COFD[6301] = 5.21560335E+00;
  COFD[6302] = -4.11558964E-01;
  COFD[6303] = 1.58296343E-02;
  COFD[6304] = -2.26397937E+01;
  COFD[6305] = 5.21560335E+00;
  COFD[6306] = -4.11558964E-01;
  COFD[6307] = 1.58296343E-02;
  COFD[6308] = -2.27462017E+01;
  COFD[6309] = 5.41143598E+00;
  COFD[6310] = -4.45532807E-01;
  COFD[6311] = 1.76418728E-02;
  COFD[6312] = -2.27462017E+01;
  COFD[6313] = 5.41143598E+00;
  COFD[6314] = -4.45532807E-01;
  COFD[6315] = 1.76418728E-02;
  COFD[6316] = -2.25599444E+01;
  COFD[6317] = 5.25350038E+00;
  COFD[6318] = -4.18174534E-01;
  COFD[6319] = 1.61831733E-02;
  COFD[6320] = -2.25599444E+01;
  COFD[6321] = 5.25350038E+00;
  COFD[6322] = -4.18174534E-01;
  COFD[6323] = 1.61831733E-02;
  COFD[6324] = -2.25599444E+01;
  COFD[6325] = 5.25350038E+00;
  COFD[6326] = -4.18174534E-01;
  COFD[6327] = 1.61831733E-02;
  COFD[6328] = -2.25599444E+01;
  COFD[6329] = 5.25350038E+00;
  COFD[6330] = -4.18174534E-01;
  COFD[6331] = 1.61831733E-02;
  COFD[6332] = -1.82590880E+01;
  COFD[6333] = 4.39538102E+00;
  COFD[6334] = -3.56367230E-01;
  COFD[6335] = 1.54788461E-02;
  COFD[6336] = -1.79310920E+01;
  COFD[6337] = 4.98037650E+00;
  COFD[6338] = -4.26676911E-01;
  COFD[6339] = 1.83007231E-02;
  COFD[6340] = -1.39315415E+01;
  COFD[6341] = 3.30394764E+00;
  COFD[6342] = -2.17920112E-01;
  COFD[6343] = 9.60284243E-03;
  COFD[6344] = -1.72285926E+01;
  COFD[6345] = 4.24084025E+00;
  COFD[6346] = -3.37428619E-01;
  COFD[6347] = 1.47032793E-02;
  COFD[6348] = -1.86507146E+01;
  COFD[6349] = 4.60874797E+00;
  COFD[6350] = -3.82368716E-01;
  COFD[6351] = 1.65370164E-02;
  COFD[6352] = -1.72472941E+01;
  COFD[6353] = 4.24084025E+00;
  COFD[6354] = -3.37428619E-01;
  COFD[6355] = 1.47032793E-02;
  COFD[6356] = -2.09565855E+01;
  COFD[6357] = 5.18380539E+00;
  COFD[6358] = -4.06234719E-01;
  COFD[6359] = 1.55515345E-02;
  COFD[6360] = -1.83296908E+01;
  COFD[6361] = 4.48570999E+00;
  COFD[6362] = -3.67301524E-01;
  COFD[6363] = 1.59204254E-02;
  COFD[6364] = -2.16718195E+01;
  COFD[6365] = 5.36811769E+00;
  COFD[6366] = -4.37727086E-01;
  COFD[6367] = 1.72167686E-02;
  COFD[6368] = -2.13961359E+01;
  COFD[6369] = 5.46685775E+00;
  COFD[6370] = -4.78665416E-01;
  COFD[6371] = 2.01093915E-02;
  COFD[6372] = -1.95770952E+01;
  COFD[6373] = 4.97133070E+00;
  COFD[6374] = -4.25604177E-01;
  COFD[6375] = 1.82582594E-02;
  COFD[6376] = -1.95154070E+01;
  COFD[6377] = 4.94787350E+00;
  COFD[6378] = -4.22829292E-01;
  COFD[6379] = 1.81487163E-02;
  COFD[6380] = -1.86576128E+01;
  COFD[6381] = 4.60874797E+00;
  COFD[6382] = -3.82368716E-01;
  COFD[6383] = 1.65370164E-02;
  COFD[6384] = -1.86641903E+01;
  COFD[6385] = 4.60874797E+00;
  COFD[6386] = -3.82368716E-01;
  COFD[6387] = 1.65370164E-02;
  COFD[6388] = -2.16798216E+01;
  COFD[6389] = 5.36811769E+00;
  COFD[6390] = -4.37727086E-01;
  COFD[6391] = 1.72167686E-02;
  COFD[6392] = -2.18848092E+01;
  COFD[6393] = 5.51302074E+00;
  COFD[6394] = -4.65263979E-01;
  COFD[6395] = 1.87580679E-02;
  COFD[6396] = -2.15206127E+01;
  COFD[6397] = 5.48426911E+00;
  COFD[6398] = -4.80606512E-01;
  COFD[6399] = 2.01811046E-02;
  COFD[6400] = -2.11427719E+01;
  COFD[6401] = 5.43893233E+00;
  COFD[6402] = -4.75546039E-01;
  COFD[6403] = 1.99938690E-02;
  COFD[6404] = -2.15126287E+01;
  COFD[6405] = 5.48426911E+00;
  COFD[6406] = -4.80606512E-01;
  COFD[6407] = 2.01811046E-02;
  COFD[6408] = -2.15453644E+01;
  COFD[6409] = 5.55313619E+00;
  COFD[6410] = -4.87753729E-01;
  COFD[6411] = 2.04203421E-02;
  COFD[6412] = -2.15547698E+01;
  COFD[6413] = 5.55313619E+00;
  COFD[6414] = -4.87753729E-01;
  COFD[6415] = 2.04203421E-02;
  COFD[6416] = -2.20262750E+01;
  COFD[6417] = 5.49663315E+00;
  COFD[6418] = -4.61182837E-01;
  COFD[6419] = 1.85035558E-02;
  COFD[6420] = -1.96068540E+01;
  COFD[6421] = 5.02434088E+00;
  COFD[6422] = -4.31889635E-01;
  COFD[6423] = 1.85072024E-02;
  COFD[6424] = -2.20307736E+01;
  COFD[6425] = 5.49663315E+00;
  COFD[6426] = -4.61182837E-01;
  COFD[6427] = 1.85035558E-02;
  COFD[6428] = -2.20307736E+01;
  COFD[6429] = 5.49663315E+00;
  COFD[6430] = -4.61182837E-01;
  COFD[6431] = 1.85035558E-02;
  COFD[6432] = -2.20351044E+01;
  COFD[6433] = 5.49663315E+00;
  COFD[6434] = -4.61182837E-01;
  COFD[6435] = 1.85035558E-02;
  COFD[6436] = -2.20606520E+01;
  COFD[6437] = 5.59649805E+00;
  COFD[6438] = -4.86750336E-01;
  COFD[6439] = 2.01151498E-02;
  COFD[6440] = -2.20228316E+01;
  COFD[6441] = 5.61211028E+00;
  COFD[6442] = -4.90893171E-01;
  COFD[6443] = 2.03793118E-02;
  COFD[6444] = -2.22801140E+01;
  COFD[6445] = 5.58507108E+00;
  COFD[6446] = -4.81395065E-01;
  COFD[6447] = 1.97276199E-02;
  COFD[6448] = -2.21795337E+01;
  COFD[6449] = 5.61233637E+00;
  COFD[6450] = -4.91419253E-01;
  COFD[6451] = 2.04216738E-02;
  COFD[6452] = -2.22609228E+01;
  COFD[6453] = 5.58490856E+00;
  COFD[6454] = -4.81588720E-01;
  COFD[6455] = 1.97445317E-02;
  COFD[6456] = -2.22638138E+01;
  COFD[6457] = 5.58490856E+00;
  COFD[6458] = -4.81588720E-01;
  COFD[6459] = 1.97445317E-02;
  COFD[6460] = -2.23950486E+01;
  COFD[6461] = 5.58492366E+00;
  COFD[6462] = -4.81921868E-01;
  COFD[6463] = 1.97721534E-02;
  COFD[6464] = -2.22982973E+01;
  COFD[6465] = 5.49704793E+00;
  COFD[6466] = -4.61284891E-01;
  COFD[6467] = 1.85098693E-02;
  COFD[6468] = -2.22542781E+01;
  COFD[6469] = 5.49729386E+00;
  COFD[6470] = -4.61345729E-01;
  COFD[6471] = 1.85136397E-02;
  COFD[6472] = -2.22807530E+01;
  COFD[6473] = 5.50361708E+00;
  COFD[6474] = -4.63194534E-01;
  COFD[6475] = 1.86342677E-02;
  COFD[6476] = -2.24990689E+01;
  COFD[6477] = 5.55026833E+00;
  COFD[6478] = -4.72437808E-01;
  COFD[6479] = 1.91625195E-02;
  COFD[6480] = -2.25347499E+01;
  COFD[6481] = 5.57238332E+00;
  COFD[6482] = -4.76605097E-01;
  COFD[6483] = 1.93951822E-02;
  COFD[6484] = -2.20547355E+01;
  COFD[6485] = 5.42445100E+00;
  COFD[6486] = -4.47918761E-01;
  COFD[6487] = 1.77729995E-02;
  COFD[6488] = -2.18318230E+01;
  COFD[6489] = 5.40298848E+00;
  COFD[6490] = -4.43954594E-01;
  COFD[6491] = 1.75542998E-02;
  COFD[6492] = -2.18355754E+01;
  COFD[6493] = 5.40298848E+00;
  COFD[6494] = -4.43954594E-01;
  COFD[6495] = 1.75542998E-02;
  COFD[6496] = -2.21009576E+01;
  COFD[6497] = 5.48520755E+00;
  COFD[6498] = -4.58927017E-01;
  COFD[6499] = 1.83751144E-02;
  COFD[6500] = -2.23139080E+01;
  COFD[6501] = 5.50132609E+00;
  COFD[6502] = -4.62482369E-01;
  COFD[6503] = 1.85869791E-02;
  COFD[6504] = -2.22964837E+01;
  COFD[6505] = 5.52353335E+00;
  COFD[6506] = -4.67314589E-01;
  COFD[6507] = 1.88744228E-02;
  COFD[6508] = -2.22430829E+01;
  COFD[6509] = 5.37360713E+00;
  COFD[6510] = -4.38661889E-01;
  COFD[6511] = 1.72661628E-02;
  COFD[6512] = -2.23017391E+01;
  COFD[6513] = 5.37360713E+00;
  COFD[6514] = -4.38661889E-01;
  COFD[6515] = 1.72661628E-02;
  COFD[6516] = -2.22709392E+01;
  COFD[6517] = 5.37360713E+00;
  COFD[6518] = -4.38661889E-01;
  COFD[6519] = 1.72661628E-02;
  COFD[6520] = -2.22709392E+01;
  COFD[6521] = 5.37360713E+00;
  COFD[6522] = -4.38661889E-01;
  COFD[6523] = 1.72661628E-02;
  COFD[6524] = -2.20511242E+01;
  COFD[6525] = 5.60809037E+00;
  COFD[6526] = -4.89400803E-01;
  COFD[6527] = 2.02760802E-02;
  COFD[6528] = -2.20555947E+01;
  COFD[6529] = 5.59649805E+00;
  COFD[6530] = -4.86750336E-01;
  COFD[6531] = 2.01151498E-02;
  COFD[6532] = -2.11069990E+01;
  COFD[6533] = 5.37047121E+00;
  COFD[6534] = -4.70282612E-01;
  COFD[6535] = 1.99109322E-02;
  COFD[6536] = -1.95548207E+01;
  COFD[6537] = 4.97133070E+00;
  COFD[6538] = -4.25604177E-01;
  COFD[6539] = 1.82582594E-02;
  COFD[6540] = -2.24673902E+01;
  COFD[6541] = 5.41354468E+00;
  COFD[6542] = -4.45930303E-01;
  COFD[6543] = 1.76640316E-02;
  COFD[6544] = -2.22903185E+01;
  COFD[6545] = 5.43835755E+00;
  COFD[6546] = -4.50426465E-01;
  COFD[6547] = 1.79097218E-02;
  COFD[6548] = -2.22884414E+01;
  COFD[6549] = 5.43835755E+00;
  COFD[6550] = -4.50426465E-01;
  COFD[6551] = 1.79097218E-02;
  COFD[6552] = -2.24098687E+01;
  COFD[6553] = 5.46069497E+00;
  COFD[6554] = -4.54477116E-01;
  COFD[6555] = 1.81313545E-02;
  COFD[6556] = -2.23240583E+01;
  COFD[6557] = 5.39023977E+00;
  COFD[6558] = -4.41572292E-01;
  COFD[6559] = 1.74223141E-02;
  COFD[6560] = -2.24469425E+01;
  COFD[6561] = 5.41354468E+00;
  COFD[6562] = -4.45930303E-01;
  COFD[6563] = 1.76640316E-02;
  COFD[6564] = -2.24455701E+01;
  COFD[6565] = 5.41354468E+00;
  COFD[6566] = -4.45930303E-01;
  COFD[6567] = 1.76640316E-02;
  COFD[6568] = -2.26099871E+01;
  COFD[6569] = 5.44867280E+00;
  COFD[6570] = -4.52284883E-01;
  COFD[6571] = 1.80110706E-02;
  COFD[6572] = -2.26089403E+01;
  COFD[6573] = 5.44867280E+00;
  COFD[6574] = -4.52284883E-01;
  COFD[6575] = 1.80110706E-02;
  COFD[6576] = -2.26089403E+01;
  COFD[6577] = 5.44867280E+00;
  COFD[6578] = -4.52284883E-01;
  COFD[6579] = 1.80110706E-02;
  COFD[6580] = -2.26089403E+01;
  COFD[6581] = 5.44867280E+00;
  COFD[6582] = -4.52284883E-01;
  COFD[6583] = 1.80110706E-02;
  COFD[6584] = -2.26089403E+01;
  COFD[6585] = 5.44867280E+00;
  COFD[6586] = -4.52284883E-01;
  COFD[6587] = 1.80110706E-02;
  COFD[6588] = -2.25972736E+01;
  COFD[6589] = 5.45263672E+00;
  COFD[6590] = -4.53003240E-01;
  COFD[6591] = 1.80503662E-02;
  COFD[6592] = -2.25972736E+01;
  COFD[6593] = 5.45263672E+00;
  COFD[6594] = -4.53003240E-01;
  COFD[6595] = 1.80503662E-02;
  COFD[6596] = -2.22879818E+01;
  COFD[6597] = 5.21396996E+00;
  COFD[6598] = -4.11281412E-01;
  COFD[6599] = 1.58150334E-02;
  COFD[6600] = -2.22879818E+01;
  COFD[6601] = 5.21396996E+00;
  COFD[6602] = -4.11281412E-01;
  COFD[6603] = 1.58150334E-02;
  COFD[6604] = -2.22879818E+01;
  COFD[6605] = 5.21396996E+00;
  COFD[6606] = -4.11281412E-01;
  COFD[6607] = 1.58150334E-02;
  COFD[6608] = -2.22879818E+01;
  COFD[6609] = 5.21396996E+00;
  COFD[6610] = -4.11281412E-01;
  COFD[6611] = 1.58150334E-02;
  COFD[6612] = -2.22879818E+01;
  COFD[6613] = 5.21396996E+00;
  COFD[6614] = -4.11281412E-01;
  COFD[6615] = 1.58150334E-02;
  COFD[6616] = -2.22879818E+01;
  COFD[6617] = 5.21396996E+00;
  COFD[6618] = -4.11281412E-01;
  COFD[6619] = 1.58150334E-02;
  COFD[6620] = -2.22879818E+01;
  COFD[6621] = 5.21396996E+00;
  COFD[6622] = -4.11281412E-01;
  COFD[6623] = 1.58150334E-02;
  COFD[6624] = -2.22879818E+01;
  COFD[6625] = 5.21396996E+00;
  COFD[6626] = -4.11281412E-01;
  COFD[6627] = 1.58150334E-02;
  COFD[6628] = -2.22879818E+01;
  COFD[6629] = 5.21396996E+00;
  COFD[6630] = -4.11281412E-01;
  COFD[6631] = 1.58150334E-02;
  COFD[6632] = -2.22879818E+01;
  COFD[6633] = 5.21396996E+00;
  COFD[6634] = -4.11281412E-01;
  COFD[6635] = 1.58150334E-02;
  COFD[6636] = -2.22879818E+01;
  COFD[6637] = 5.21396996E+00;
  COFD[6638] = -4.11281412E-01;
  COFD[6639] = 1.58150334E-02;
  COFD[6640] = -2.22879818E+01;
  COFD[6641] = 5.21396996E+00;
  COFD[6642] = -4.11281412E-01;
  COFD[6643] = 1.58150334E-02;
  COFD[6644] = -2.22901478E+01;
  COFD[6645] = 5.10542661E+00;
  COFD[6646] = -3.93251553E-01;
  COFD[6647] = 1.48773548E-02;
  COFD[6648] = -2.22901478E+01;
  COFD[6649] = 5.10542661E+00;
  COFD[6650] = -3.93251553E-01;
  COFD[6651] = 1.48773548E-02;
  COFD[6652] = -2.22901478E+01;
  COFD[6653] = 5.10542661E+00;
  COFD[6654] = -3.93251553E-01;
  COFD[6655] = 1.48773548E-02;
  COFD[6656] = -2.22901478E+01;
  COFD[6657] = 5.10542661E+00;
  COFD[6658] = -3.93251553E-01;
  COFD[6659] = 1.48773548E-02;
  COFD[6660] = -2.24630663E+01;
  COFD[6661] = 5.33329512E+00;
  COFD[6662] = -4.31764538E-01;
  COFD[6663] = 1.69009348E-02;
  COFD[6664] = -2.24630663E+01;
  COFD[6665] = 5.33329512E+00;
  COFD[6666] = -4.31764538E-01;
  COFD[6667] = 1.69009348E-02;
  COFD[6668] = -2.22410835E+01;
  COFD[6669] = 5.15974104E+00;
  COFD[6670] = -4.02219303E-01;
  COFD[6671] = 1.53420433E-02;
  COFD[6672] = -2.22410835E+01;
  COFD[6673] = 5.15974104E+00;
  COFD[6674] = -4.02219303E-01;
  COFD[6675] = 1.53420433E-02;
  COFD[6676] = -2.22410835E+01;
  COFD[6677] = 5.15974104E+00;
  COFD[6678] = -4.02219303E-01;
  COFD[6679] = 1.53420433E-02;
  COFD[6680] = -2.22410835E+01;
  COFD[6681] = 5.15974104E+00;
  COFD[6682] = -4.02219303E-01;
  COFD[6683] = 1.53420433E-02;
  COFD[6684] = -1.83039660E+01;
  COFD[6685] = 4.47952077E+00;
  COFD[6686] = -3.66569471E-01;
  COFD[6687] = 1.58916129E-02;
  COFD[6688] = -1.79317871E+01;
  COFD[6689] = 4.98037650E+00;
  COFD[6690] = -4.26676911E-01;
  COFD[6691] = 1.83007231E-02;
  COFD[6692] = -1.39328824E+01;
  COFD[6693] = 3.30394764E+00;
  COFD[6694] = -2.17920112E-01;
  COFD[6695] = 9.60284243E-03;
  COFD[6696] = -1.72357357E+01;
  COFD[6697] = 4.24084025E+00;
  COFD[6698] = -3.37428619E-01;
  COFD[6699] = 1.47032793E-02;
  COFD[6700] = -1.86610959E+01;
  COFD[6701] = 4.60874797E+00;
  COFD[6702] = -3.82368716E-01;
  COFD[6703] = 1.65370164E-02;
  COFD[6704] = -1.72547115E+01;
  COFD[6705] = 4.24084025E+00;
  COFD[6706] = -3.37428619E-01;
  COFD[6707] = 1.47032793E-02;
  COFD[6708] = -2.09642647E+01;
  COFD[6709] = 5.18380539E+00;
  COFD[6710] = -4.06234719E-01;
  COFD[6711] = 1.55515345E-02;
  COFD[6712] = -1.83394427E+01;
  COFD[6713] = 4.48570999E+00;
  COFD[6714] = -3.67301524E-01;
  COFD[6715] = 1.59204254E-02;
  COFD[6716] = -2.16817390E+01;
  COFD[6717] = 5.36811769E+00;
  COFD[6718] = -4.37727086E-01;
  COFD[6719] = 1.72167686E-02;
  COFD[6720] = -2.14079831E+01;
  COFD[6721] = 5.46685775E+00;
  COFD[6722] = -4.78665416E-01;
  COFD[6723] = 2.01093915E-02;
  COFD[6724] = -1.95839636E+01;
  COFD[6725] = 4.97133070E+00;
  COFD[6726] = -4.25604177E-01;
  COFD[6727] = 1.82582594E-02;
  COFD[6728] = -1.95225623E+01;
  COFD[6729] = 4.94787350E+00;
  COFD[6730] = -4.22829292E-01;
  COFD[6731] = 1.81487163E-02;
  COFD[6732] = -1.86681399E+01;
  COFD[6733] = 4.60874797E+00;
  COFD[6734] = -3.82368716E-01;
  COFD[6735] = 1.65370164E-02;
  COFD[6736] = -1.86748583E+01;
  COFD[6737] = 4.60874797E+00;
  COFD[6738] = -3.82368716E-01;
  COFD[6739] = 1.65370164E-02;
  COFD[6740] = -2.16899028E+01;
  COFD[6741] = 5.36811769E+00;
  COFD[6742] = -4.37727086E-01;
  COFD[6743] = 1.72167686E-02;
  COFD[6744] = -2.18950463E+01;
  COFD[6745] = 5.51302074E+00;
  COFD[6746] = -4.65263979E-01;
  COFD[6747] = 1.87580679E-02;
  COFD[6748] = -2.15307008E+01;
  COFD[6749] = 5.48426911E+00;
  COFD[6750] = -4.80606512E-01;
  COFD[6751] = 2.01811046E-02;
  COFD[6752] = -2.11525312E+01;
  COFD[6753] = 5.43893233E+00;
  COFD[6754] = -4.75546039E-01;
  COFD[6755] = 1.99938690E-02;
  COFD[6756] = -2.15225554E+01;
  COFD[6757] = 5.48426911E+00;
  COFD[6758] = -4.80606512E-01;
  COFD[6759] = 2.01811046E-02;
  COFD[6760] = -2.15547698E+01;
  COFD[6761] = 5.55313619E+00;
  COFD[6762] = -4.87753729E-01;
  COFD[6763] = 2.04203421E-02;
  COFD[6764] = -2.15643555E+01;
  COFD[6765] = 5.55313619E+00;
  COFD[6766] = -4.87753729E-01;
  COFD[6767] = 2.04203421E-02;
  COFD[6768] = -2.20379167E+01;
  COFD[6769] = 5.49663315E+00;
  COFD[6770] = -4.61182837E-01;
  COFD[6771] = 1.85035558E-02;
  COFD[6772] = -1.96183861E+01;
  COFD[6773] = 5.02434088E+00;
  COFD[6774] = -4.31889635E-01;
  COFD[6775] = 1.85072024E-02;
  COFD[6776] = -2.20425218E+01;
  COFD[6777] = 5.49663315E+00;
  COFD[6778] = -4.61182837E-01;
  COFD[6779] = 1.85035558E-02;
  COFD[6780] = -2.20425218E+01;
  COFD[6781] = 5.49663315E+00;
  COFD[6782] = -4.61182837E-01;
  COFD[6783] = 1.85035558E-02;
  COFD[6784] = -2.20469560E+01;
  COFD[6785] = 5.49663315E+00;
  COFD[6786] = -4.61182837E-01;
  COFD[6787] = 1.85035558E-02;
  COFD[6788] = -2.20720762E+01;
  COFD[6789] = 5.59649805E+00;
  COFD[6790] = -4.86750336E-01;
  COFD[6791] = 2.01151498E-02;
  COFD[6792] = -2.20344781E+01;
  COFD[6793] = 5.61211028E+00;
  COFD[6794] = -4.90893171E-01;
  COFD[6795] = 2.03793118E-02;
  COFD[6796] = -2.22928545E+01;
  COFD[6797] = 5.58507108E+00;
  COFD[6798] = -4.81395065E-01;
  COFD[6799] = 1.97276199E-02;
  COFD[6800] = -2.21912865E+01;
  COFD[6801] = 5.61233637E+00;
  COFD[6802] = -4.91419253E-01;
  COFD[6803] = 2.04216738E-02;
  COFD[6804] = -2.22737405E+01;
  COFD[6805] = 5.58490856E+00;
  COFD[6806] = -4.81588720E-01;
  COFD[6807] = 1.97445317E-02;
  COFD[6808] = -2.22767067E+01;
  COFD[6809] = 5.58490856E+00;
  COFD[6810] = -4.81588720E-01;
  COFD[6811] = 1.97445317E-02;
  COFD[6812] = -2.24080151E+01;
  COFD[6813] = 5.58492366E+00;
  COFD[6814] = -4.81921868E-01;
  COFD[6815] = 1.97721534E-02;
  COFD[6816] = -2.23112606E+01;
  COFD[6817] = 5.49704793E+00;
  COFD[6818] = -4.61284891E-01;
  COFD[6819] = 1.85098693E-02;
  COFD[6820] = -2.22673132E+01;
  COFD[6821] = 5.49729386E+00;
  COFD[6822] = -4.61345729E-01;
  COFD[6823] = 1.85136397E-02;
  COFD[6824] = -2.22937162E+01;
  COFD[6825] = 5.50361708E+00;
  COFD[6826] = -4.63194534E-01;
  COFD[6827] = 1.86342677E-02;
  COFD[6828] = -2.25127917E+01;
  COFD[6829] = 5.55026833E+00;
  COFD[6830] = -4.72437808E-01;
  COFD[6831] = 1.91625195E-02;
  COFD[6832] = -2.25485276E+01;
  COFD[6833] = 5.57238332E+00;
  COFD[6834] = -4.76605097E-01;
  COFD[6835] = 1.93951822E-02;
  COFD[6836] = -2.20666876E+01;
  COFD[6837] = 5.42445100E+00;
  COFD[6838] = -4.47918761E-01;
  COFD[6839] = 1.77729995E-02;
  COFD[6840] = -2.18439638E+01;
  COFD[6841] = 5.40298848E+00;
  COFD[6842] = -4.43954594E-01;
  COFD[6843] = 1.75542998E-02;
  COFD[6844] = -2.18478087E+01;
  COFD[6845] = 5.40298848E+00;
  COFD[6846] = -4.43954594E-01;
  COFD[6847] = 1.75542998E-02;
  COFD[6848] = -2.21137719E+01;
  COFD[6849] = 5.48520755E+00;
  COFD[6850] = -4.58927017E-01;
  COFD[6851] = 1.83751144E-02;
  COFD[6852] = -2.23267977E+01;
  COFD[6853] = 5.50132609E+00;
  COFD[6854] = -4.62482369E-01;
  COFD[6855] = 1.85869791E-02;
  COFD[6856] = -2.23094470E+01;
  COFD[6857] = 5.52353335E+00;
  COFD[6858] = -4.67314589E-01;
  COFD[6859] = 1.88744228E-02;
  COFD[6860] = -2.22569121E+01;
  COFD[6861] = 5.37360713E+00;
  COFD[6862] = -4.38661889E-01;
  COFD[6863] = 1.72661628E-02;
  COFD[6864] = -2.23173167E+01;
  COFD[6865] = 5.37360713E+00;
  COFD[6866] = -4.38661889E-01;
  COFD[6867] = 1.72661628E-02;
  COFD[6868] = -2.22855724E+01;
  COFD[6869] = 5.37360713E+00;
  COFD[6870] = -4.38661889E-01;
  COFD[6871] = 1.72661628E-02;
  COFD[6872] = -2.22855724E+01;
  COFD[6873] = 5.37360713E+00;
  COFD[6874] = -4.38661889E-01;
  COFD[6875] = 1.72661628E-02;
  COFD[6876] = -2.20626612E+01;
  COFD[6877] = 5.60809037E+00;
  COFD[6878] = -4.89400803E-01;
  COFD[6879] = 2.02760802E-02;
  COFD[6880] = -2.20669026E+01;
  COFD[6881] = 5.59649805E+00;
  COFD[6882] = -4.86750336E-01;
  COFD[6883] = 2.01151498E-02;
  COFD[6884] = -2.11181869E+01;
  COFD[6885] = 5.37047121E+00;
  COFD[6886] = -4.70282612E-01;
  COFD[6887] = 1.99109322E-02;
  COFD[6888] = -1.95613879E+01;
  COFD[6889] = 4.97133070E+00;
  COFD[6890] = -4.25604177E-01;
  COFD[6891] = 1.82582594E-02;
  COFD[6892] = -2.24825235E+01;
  COFD[6893] = 5.41354468E+00;
  COFD[6894] = -4.45930303E-01;
  COFD[6895] = 1.76640316E-02;
  COFD[6896] = -2.23042005E+01;
  COFD[6897] = 5.43835755E+00;
  COFD[6898] = -4.50426465E-01;
  COFD[6899] = 1.79097218E-02;
  COFD[6900] = -2.23022706E+01;
  COFD[6901] = 5.43835755E+00;
  COFD[6902] = -4.50426465E-01;
  COFD[6903] = 1.79097218E-02;
  COFD[6904] = -2.24236979E+01;
  COFD[6905] = 5.46069497E+00;
  COFD[6906] = -4.54477116E-01;
  COFD[6907] = 1.81313545E-02;
  COFD[6908] = -2.23385360E+01;
  COFD[6909] = 5.39023977E+00;
  COFD[6910] = -4.41572292E-01;
  COFD[6911] = 1.74223141E-02;
  COFD[6912] = -2.24614605E+01;
  COFD[6913] = 5.41354468E+00;
  COFD[6914] = -4.45930303E-01;
  COFD[6915] = 1.76640316E-02;
  COFD[6916] = -2.24600477E+01;
  COFD[6917] = 5.41354468E+00;
  COFD[6918] = -4.45930303E-01;
  COFD[6919] = 1.76640316E-02;
  COFD[6920] = -2.26250017E+01;
  COFD[6921] = 5.44867280E+00;
  COFD[6922] = -4.52284883E-01;
  COFD[6923] = 1.80110706E-02;
  COFD[6924] = -2.26239230E+01;
  COFD[6925] = 5.44867280E+00;
  COFD[6926] = -4.52284883E-01;
  COFD[6927] = 1.80110706E-02;
  COFD[6928] = -2.26239230E+01;
  COFD[6929] = 5.44867280E+00;
  COFD[6930] = -4.52284883E-01;
  COFD[6931] = 1.80110706E-02;
  COFD[6932] = -2.26239230E+01;
  COFD[6933] = 5.44867280E+00;
  COFD[6934] = -4.52284883E-01;
  COFD[6935] = 1.80110706E-02;
  COFD[6936] = -2.26239230E+01;
  COFD[6937] = 5.44867280E+00;
  COFD[6938] = -4.52284883E-01;
  COFD[6939] = 1.80110706E-02;
  COFD[6940] = -2.26122239E+01;
  COFD[6941] = 5.45263672E+00;
  COFD[6942] = -4.53003240E-01;
  COFD[6943] = 1.80503662E-02;
  COFD[6944] = -2.26122239E+01;
  COFD[6945] = 5.45263672E+00;
  COFD[6946] = -4.53003240E-01;
  COFD[6947] = 1.80503662E-02;
  COFD[6948] = -2.23037777E+01;
  COFD[6949] = 5.21396996E+00;
  COFD[6950] = -4.11281412E-01;
  COFD[6951] = 1.58150334E-02;
  COFD[6952] = -2.23037777E+01;
  COFD[6953] = 5.21396996E+00;
  COFD[6954] = -4.11281412E-01;
  COFD[6955] = 1.58150334E-02;
  COFD[6956] = -2.23037777E+01;
  COFD[6957] = 5.21396996E+00;
  COFD[6958] = -4.11281412E-01;
  COFD[6959] = 1.58150334E-02;
  COFD[6960] = -2.23037777E+01;
  COFD[6961] = 5.21396996E+00;
  COFD[6962] = -4.11281412E-01;
  COFD[6963] = 1.58150334E-02;
  COFD[6964] = -2.23037777E+01;
  COFD[6965] = 5.21396996E+00;
  COFD[6966] = -4.11281412E-01;
  COFD[6967] = 1.58150334E-02;
  COFD[6968] = -2.23037777E+01;
  COFD[6969] = 5.21396996E+00;
  COFD[6970] = -4.11281412E-01;
  COFD[6971] = 1.58150334E-02;
  COFD[6972] = -2.23037777E+01;
  COFD[6973] = 5.21396996E+00;
  COFD[6974] = -4.11281412E-01;
  COFD[6975] = 1.58150334E-02;
  COFD[6976] = -2.23037777E+01;
  COFD[6977] = 5.21396996E+00;
  COFD[6978] = -4.11281412E-01;
  COFD[6979] = 1.58150334E-02;
  COFD[6980] = -2.23037777E+01;
  COFD[6981] = 5.21396996E+00;
  COFD[6982] = -4.11281412E-01;
  COFD[6983] = 1.58150334E-02;
  COFD[6984] = -2.23037777E+01;
  COFD[6985] = 5.21396996E+00;
  COFD[6986] = -4.11281412E-01;
  COFD[6987] = 1.58150334E-02;
  COFD[6988] = -2.23037777E+01;
  COFD[6989] = 5.21396996E+00;
  COFD[6990] = -4.11281412E-01;
  COFD[6991] = 1.58150334E-02;
  COFD[6992] = -2.23037777E+01;
  COFD[6993] = 5.21396996E+00;
  COFD[6994] = -4.11281412E-01;
  COFD[6995] = 1.58150334E-02;
  COFD[6996] = -2.23064825E+01;
  COFD[6997] = 5.10542661E+00;
  COFD[6998] = -3.93251553E-01;
  COFD[6999] = 1.48773548E-02;
  COFD[7000] = -2.23064825E+01;
  COFD[7001] = 5.10542661E+00;
  COFD[7002] = -3.93251553E-01;
  COFD[7003] = 1.48773548E-02;
  COFD[7004] = -2.23064825E+01;
  COFD[7005] = 5.10542661E+00;
  COFD[7006] = -3.93251553E-01;
  COFD[7007] = 1.48773548E-02;
  COFD[7008] = -2.23064825E+01;
  COFD[7009] = 5.10542661E+00;
  COFD[7010] = -3.93251553E-01;
  COFD[7011] = 1.48773548E-02;
  COFD[7012] = -2.24784761E+01;
  COFD[7013] = 5.33329512E+00;
  COFD[7014] = -4.31764538E-01;
  COFD[7015] = 1.69009348E-02;
  COFD[7016] = -2.24784761E+01;
  COFD[7017] = 5.33329512E+00;
  COFD[7018] = -4.31764538E-01;
  COFD[7019] = 1.69009348E-02;
  COFD[7020] = -2.22571566E+01;
  COFD[7021] = 5.15974104E+00;
  COFD[7022] = -4.02219303E-01;
  COFD[7023] = 1.53420433E-02;
  COFD[7024] = -2.22571566E+01;
  COFD[7025] = 5.15974104E+00;
  COFD[7026] = -4.02219303E-01;
  COFD[7027] = 1.53420433E-02;
  COFD[7028] = -2.22571566E+01;
  COFD[7029] = 5.15974104E+00;
  COFD[7030] = -4.02219303E-01;
  COFD[7031] = 1.53420433E-02;
  COFD[7032] = -2.22571566E+01;
  COFD[7033] = 5.15974104E+00;
  COFD[7034] = -4.02219303E-01;
  COFD[7035] = 1.53420433E-02;
  COFD[7036] = -1.83137186E+01;
  COFD[7037] = 4.47952077E+00;
  COFD[7038] = -3.66569471E-01;
  COFD[7039] = 1.58916129E-02;
  COFD[7040] = -1.94688845E+01;
  COFD[7041] = 5.43830787E+00;
  COFD[7042] = -4.75472880E-01;
  COFD[7043] = 1.99909996E-02;
  COFD[7044] = -1.57035004E+01;
  COFD[7045] = 3.93614244E+00;
  COFD[7046] = -2.99111497E-01;
  COFD[7047] = 1.30888229E-02;
  COFD[7048] = -1.90883170E+01;
  COFD[7049] = 4.84384483E+00;
  COFD[7050] = -4.10265575E-01;
  COFD[7051] = 1.76414287E-02;
  COFD[7052] = -2.05184780E+01;
  COFD[7053] = 5.18417470E+00;
  COFD[7054] = -4.49491573E-01;
  COFD[7055] = 1.91438508E-02;
  COFD[7056] = -1.91102567E+01;
  COFD[7057] = 4.84384483E+00;
  COFD[7058] = -4.10265575E-01;
  COFD[7059] = 1.76414287E-02;
  COFD[7060] = -1.87383877E+01;
  COFD[7061] = 3.96926341E+00;
  COFD[7062] = -2.16412264E-01;
  COFD[7063] = 6.06012078E-03;
  COFD[7064] = -2.02922626E+01;
  COFD[7065] = 5.11106992E+00;
  COFD[7066] = -4.42047129E-01;
  COFD[7067] = 1.89042990E-02;
  COFD[7068] = -2.00914970E+01;
  COFD[7069] = 4.41511629E+00;
  COFD[7070] = -2.84086963E-01;
  COFD[7071] = 9.37586971E-03;
  COFD[7072] = -2.22116629E+01;
  COFD[7073] = 5.54251230E+00;
  COFD[7074] = -4.70946314E-01;
  COFD[7075] = 1.90785869E-02;
  COFD[7076] = -2.11606942E+01;
  COFD[7077] = 5.42846112E+00;
  COFD[7078] = -4.74321870E-01;
  COFD[7079] = 1.99459749E-02;
  COFD[7080] = -2.11309194E+01;
  COFD[7081] = 5.41773516E+00;
  COFD[7082] = -4.73414338E-01;
  COFD[7083] = 1.99258685E-02;
  COFD[7084] = -2.05272244E+01;
  COFD[7085] = 5.18417470E+00;
  COFD[7086] = -4.49491573E-01;
  COFD[7087] = 1.91438508E-02;
  COFD[7088] = -2.05355943E+01;
  COFD[7089] = 5.18417470E+00;
  COFD[7090] = -4.49491573E-01;
  COFD[7091] = 1.91438508E-02;
  COFD[7092] = -2.01015275E+01;
  COFD[7093] = 4.41511629E+00;
  COFD[7094] = -2.84086963E-01;
  COFD[7095] = 9.37586971E-03;
  COFD[7096] = -2.09222393E+01;
  COFD[7097] = 4.82184721E+00;
  COFD[7098] = -3.48128875E-01;
  COFD[7099] = 1.25918978E-02;
  COFD[7100] = -2.22429785E+01;
  COFD[7101] = 5.53139819E+00;
  COFD[7102] = -4.68828555E-01;
  COFD[7103] = 1.89597887E-02;
  COFD[7104] = -2.20398293E+01;
  COFD[7105] = 5.56049839E+00;
  COFD[7106] = -4.74367872E-01;
  COFD[7107] = 1.92702787E-02;
  COFD[7108] = -2.22329692E+01;
  COFD[7109] = 5.53139819E+00;
  COFD[7110] = -4.68828555E-01;
  COFD[7111] = 1.89597887E-02;
  COFD[7112] = -2.20262750E+01;
  COFD[7113] = 5.49663315E+00;
  COFD[7114] = -4.61182837E-01;
  COFD[7115] = 1.85035558E-02;
  COFD[7116] = -2.20379167E+01;
  COFD[7117] = 5.49663315E+00;
  COFD[7118] = -4.61182837E-01;
  COFD[7119] = 1.85035558E-02;
  COFD[7120] = -2.09002680E+01;
  COFD[7121] = 4.72895031E+00;
  COFD[7122] = -3.33332771E-01;
  COFD[7123] = 1.18431478E-02;
  COFD[7124] = -2.12621849E+01;
  COFD[7125] = 5.47935225E+00;
  COFD[7126] = -4.80056796E-01;
  COFD[7127] = 2.01607180E-02;
  COFD[7128] = -2.09061569E+01;
  COFD[7129] = 4.72895031E+00;
  COFD[7130] = -3.33332771E-01;
  COFD[7131] = 1.18431478E-02;
  COFD[7132] = -2.09061569E+01;
  COFD[7133] = 4.72895031E+00;
  COFD[7134] = -3.33332771E-01;
  COFD[7135] = 1.18431478E-02;
  COFD[7136] = -2.09118417E+01;
  COFD[7137] = 4.72895031E+00;
  COFD[7138] = -3.33332771E-01;
  COFD[7139] = 1.18431478E-02;
  COFD[7140] = -2.19592081E+01;
  COFD[7141] = 5.27258289E+00;
  COFD[7142] = -4.21502790E-01;
  COFD[7143] = 1.63611949E-02;
  COFD[7144] = -2.20597265E+01;
  COFD[7145] = 5.34774760E+00;
  COFD[7146] = -4.34239753E-01;
  COFD[7147] = 1.70320676E-02;
  COFD[7148] = -2.19253045E+01;
  COFD[7149] = 5.14570932E+00;
  COFD[7150] = -3.99877142E-01;
  COFD[7151] = 1.52199557E-02;
  COFD[7152] = -2.22545318E+01;
  COFD[7153] = 5.36643605E+00;
  COFD[7154] = -4.37440735E-01;
  COFD[7155] = 1.72016388E-02;
  COFD[7156] = -2.19282935E+01;
  COFD[7157] = 5.15446948E+00;
  COFD[7158] = -4.01332769E-01;
  COFD[7159] = 1.52956262E-02;
  COFD[7160] = -2.19321960E+01;
  COFD[7161] = 5.15446948E+00;
  COFD[7162] = -4.01332769E-01;
  COFD[7163] = 1.52956262E-02;
  COFD[7164] = -2.20891280E+01;
  COFD[7165] = 5.16679492E+00;
  COFD[7166] = -4.03405751E-01;
  COFD[7167] = 1.54041741E-02;
  COFD[7168] = -2.11881608E+01;
  COFD[7169] = 4.73146525E+00;
  COFD[7170] = -3.33731759E-01;
  COFD[7171] = 1.18632925E-02;
  COFD[7172] = -2.11493307E+01;
  COFD[7173] = 4.73295595E+00;
  COFD[7174] = -3.33968375E-01;
  COFD[7175] = 1.18752387E-02;
  COFD[7176] = -2.12740022E+01;
  COFD[7177] = 4.78222428E+00;
  COFD[7178] = -3.41846868E-01;
  COFD[7179] = 1.22746304E-02;
  COFD[7180] = -2.17463721E+01;
  COFD[7181] = 4.93496210E+00;
  COFD[7182] = -3.65981745E-01;
  COFD[7183] = 1.34912948E-02;
  COFD[7184] = -2.18797306E+01;
  COFD[7185] = 4.99907484E+00;
  COFD[7186] = -3.76094627E-01;
  COFD[7187] = 1.40009262E-02;
  COFD[7188] = -2.07072091E+01;
  COFD[7189] = 4.56211059E+00;
  COFD[7190] = -3.06895158E-01;
  COFD[7191] = 1.05100393E-02;
  COFD[7192] = -2.04033902E+01;
  COFD[7193] = 4.50250781E+00;
  COFD[7194] = -2.97622106E-01;
  COFD[7195] = 1.00481473E-02;
  COFD[7196] = -2.04083662E+01;
  COFD[7197] = 4.50250781E+00;
  COFD[7198] = -2.97622106E-01;
  COFD[7199] = 1.00481473E-02;
  COFD[7200] = -2.09310875E+01;
  COFD[7201] = 4.69256593E+00;
  COFD[7202] = -3.27570630E-01;
  COFD[7203] = 1.15525471E-02;
  COFD[7204] = -2.12664526E+01;
  COFD[7205] = 4.76335355E+00;
  COFD[7206] = -3.38814362E-01;
  COFD[7207] = 1.21204360E-02;
  COFD[7208] = -2.14121942E+01;
  COFD[7209] = 4.85433278E+00;
  COFD[7210] = -3.53258974E-01;
  COFD[7211] = 1.28503760E-02;
  COFD[7212] = -2.07167473E+01;
  COFD[7213] = 4.42680848E+00;
  COFD[7214] = -2.85885288E-01;
  COFD[7215] = 9.46483934E-03;
  COFD[7216] = -2.08000319E+01;
  COFD[7217] = 4.42680848E+00;
  COFD[7218] = -2.85885288E-01;
  COFD[7219] = 9.46483934E-03;
  COFD[7220] = -2.07557895E+01;
  COFD[7221] = 4.42680848E+00;
  COFD[7222] = -2.85885288E-01;
  COFD[7223] = 9.46483934E-03;
  COFD[7224] = -2.07557895E+01;
  COFD[7225] = 4.42680848E+00;
  COFD[7226] = -2.85885288E-01;
  COFD[7227] = 9.46483934E-03;
  COFD[7228] = -2.20192310E+01;
  COFD[7229] = 5.31412694E+00;
  COFD[7230] = -4.28473898E-01;
  COFD[7231] = 1.67264841E-02;
  COFD[7232] = -2.19526443E+01;
  COFD[7233] = 5.27258289E+00;
  COFD[7234] = -4.21502790E-01;
  COFD[7235] = 1.63611949E-02;
  COFD[7236] = -2.22149397E+01;
  COFD[7237] = 5.58360799E+00;
  COFD[7238] = -4.82701436E-01;
  COFD[7239] = 1.98437922E-02;
  COFD[7240] = -2.11349057E+01;
  COFD[7241] = 5.42846112E+00;
  COFD[7242] = -4.74321870E-01;
  COFD[7243] = 1.99459749E-02;
  COFD[7244] = -2.11129919E+01;
  COFD[7245] = 4.53343919E+00;
  COFD[7246] = -3.02436183E-01;
  COFD[7247] = 1.02880591E-02;
  COFD[7248] = -2.10038979E+01;
  COFD[7249] = 4.59262341E+00;
  COFD[7250] = -3.11696702E-01;
  COFD[7251] = 1.07507612E-02;
  COFD[7252] = -2.10012941E+01;
  COFD[7253] = 4.59262341E+00;
  COFD[7254] = -3.11696702E-01;
  COFD[7255] = 1.07507612E-02;
  COFD[7256] = -2.11743372E+01;
  COFD[7257] = 4.63801001E+00;
  COFD[7258] = -3.18948840E-01;
  COFD[7259] = 1.11183139E-02;
  COFD[7260] = -2.08557176E+01;
  COFD[7261] = 4.46453406E+00;
  COFD[7262] = -2.91715850E-01;
  COFD[7263] = 9.75402150E-03;
  COFD[7264] = -2.10838507E+01;
  COFD[7265] = 4.53343919E+00;
  COFD[7266] = -3.02436183E-01;
  COFD[7267] = 1.02880591E-02;
  COFD[7268] = -2.10819126E+01;
  COFD[7269] = 4.53343919E+00;
  COFD[7270] = -3.02436183E-01;
  COFD[7271] = 1.02880591E-02;
  COFD[7272] = -2.13539484E+01;
  COFD[7273] = 4.61201872E+00;
  COFD[7274] = -3.14803338E-01;
  COFD[7275] = 1.09082984E-02;
  COFD[7276] = -2.13524491E+01;
  COFD[7277] = 4.61201872E+00;
  COFD[7278] = -3.14803338E-01;
  COFD[7279] = 1.09082984E-02;
  COFD[7280] = -2.13524491E+01;
  COFD[7281] = 4.61201872E+00;
  COFD[7282] = -3.14803338E-01;
  COFD[7283] = 1.09082984E-02;
  COFD[7284] = -2.13524491E+01;
  COFD[7285] = 4.61201872E+00;
  COFD[7286] = -3.14803338E-01;
  COFD[7287] = 1.09082984E-02;
  COFD[7288] = -2.13524491E+01;
  COFD[7289] = 4.61201872E+00;
  COFD[7290] = -3.14803338E-01;
  COFD[7291] = 1.09082984E-02;
  COFD[7292] = -2.13502154E+01;
  COFD[7293] = 4.62003574E+00;
  COFD[7294] = -3.16085261E-01;
  COFD[7295] = 1.09733113E-02;
  COFD[7296] = -2.13502154E+01;
  COFD[7297] = 4.62003574E+00;
  COFD[7298] = -3.16085261E-01;
  COFD[7299] = 1.09733113E-02;
  COFD[7300] = -2.02458098E+01;
  COFD[7301] = 4.04040564E+00;
  COFD[7302] = -2.27103382E-01;
  COFD[7303] = 6.58016011E-03;
  COFD[7304] = -2.02458098E+01;
  COFD[7305] = 4.04040564E+00;
  COFD[7306] = -2.27103382E-01;
  COFD[7307] = 6.58016011E-03;
  COFD[7308] = -2.02458098E+01;
  COFD[7309] = 4.04040564E+00;
  COFD[7310] = -2.27103382E-01;
  COFD[7311] = 6.58016011E-03;
  COFD[7312] = -2.02458098E+01;
  COFD[7313] = 4.04040564E+00;
  COFD[7314] = -2.27103382E-01;
  COFD[7315] = 6.58016011E-03;
  COFD[7316] = -2.02458098E+01;
  COFD[7317] = 4.04040564E+00;
  COFD[7318] = -2.27103382E-01;
  COFD[7319] = 6.58016011E-03;
  COFD[7320] = -2.02458098E+01;
  COFD[7321] = 4.04040564E+00;
  COFD[7322] = -2.27103382E-01;
  COFD[7323] = 6.58016011E-03;
  COFD[7324] = -2.02458098E+01;
  COFD[7325] = 4.04040564E+00;
  COFD[7326] = -2.27103382E-01;
  COFD[7327] = 6.58016011E-03;
  COFD[7328] = -2.02458098E+01;
  COFD[7329] = 4.04040564E+00;
  COFD[7330] = -2.27103382E-01;
  COFD[7331] = 6.58016011E-03;
  COFD[7332] = -2.02458098E+01;
  COFD[7333] = 4.04040564E+00;
  COFD[7334] = -2.27103382E-01;
  COFD[7335] = 6.58016011E-03;
  COFD[7336] = -2.02458098E+01;
  COFD[7337] = 4.04040564E+00;
  COFD[7338] = -2.27103382E-01;
  COFD[7339] = 6.58016011E-03;
  COFD[7340] = -2.02458098E+01;
  COFD[7341] = 4.04040564E+00;
  COFD[7342] = -2.27103382E-01;
  COFD[7343] = 6.58016011E-03;
  COFD[7344] = -2.02458098E+01;
  COFD[7345] = 4.04040564E+00;
  COFD[7346] = -2.27103382E-01;
  COFD[7347] = 6.58016011E-03;
  COFD[7348] = -2.00185312E+01;
  COFD[7349] = 3.83478342E+00;
  COFD[7350] = -1.95849899E-01;
  COFD[7351] = 5.04983054E-03;
  COFD[7352] = -2.00185312E+01;
  COFD[7353] = 3.83478342E+00;
  COFD[7354] = -1.95849899E-01;
  COFD[7355] = 5.04983054E-03;
  COFD[7356] = -2.00185312E+01;
  COFD[7357] = 3.83478342E+00;
  COFD[7358] = -1.95849899E-01;
  COFD[7359] = 5.04983054E-03;
  COFD[7360] = -2.00185312E+01;
  COFD[7361] = 3.83478342E+00;
  COFD[7362] = -1.95849899E-01;
  COFD[7363] = 5.04983054E-03;
  COFD[7364] = -2.08412837E+01;
  COFD[7365] = 4.33912386E+00;
  COFD[7366] = -2.72408316E-01;
  COFD[7367] = 8.79879099E-03;
  COFD[7368] = -2.08412837E+01;
  COFD[7369] = 4.33912386E+00;
  COFD[7370] = -2.72408316E-01;
  COFD[7371] = 8.79879099E-03;
  COFD[7372] = -2.00502279E+01;
  COFD[7373] = 3.92262843E+00;
  COFD[7374] = -2.09310993E-01;
  COFD[7375] = 5.71178653E-03;
  COFD[7376] = -2.00502279E+01;
  COFD[7377] = 3.92262843E+00;
  COFD[7378] = -2.09310993E-01;
  COFD[7379] = 5.71178653E-03;
  COFD[7380] = -2.00502279E+01;
  COFD[7381] = 3.92262843E+00;
  COFD[7382] = -2.09310993E-01;
  COFD[7383] = 5.71178653E-03;
  COFD[7384] = -2.00502279E+01;
  COFD[7385] = 3.92262843E+00;
  COFD[7386] = -2.09310993E-01;
  COFD[7387] = 5.71178653E-03;
  COFD[7388] = -2.02646659E+01;
  COFD[7389] = 5.10426133E+00;
  COFD[7390] = -4.41256919E-01;
  COFD[7391] = 1.88737290E-02;
  COFD[7392] = -1.54460977E+01;
  COFD[7393] = 4.26819983E+00;
  COFD[7394] = -3.40766379E-01;
  COFD[7395] = 1.48393361E-02;
  COFD[7396] = -1.22004476E+01;
  COFD[7397] = 2.80725489E+00;
  COFD[7398] = -1.54291406E-01;
  COFD[7399] = 6.88290911E-03;
  COFD[7400] = -1.49500258E+01;
  COFD[7401] = 3.52327209E+00;
  COFD[7402] = -2.46286208E-01;
  COFD[7403] = 1.08285963E-02;
  COFD[7404] = -1.64169341E+01;
  COFD[7405] = 3.89309916E+00;
  COFD[7406] = -2.93528188E-01;
  COFD[7407] = 1.28463177E-02;
  COFD[7408] = -1.49718147E+01;
  COFD[7409] = 3.52327209E+00;
  COFD[7410] = -2.46286208E-01;
  COFD[7411] = 1.08285963E-02;
  COFD[7412] = -2.10440599E+01;
  COFD[7413] = 5.59806282E+00;
  COFD[7414] = -4.87109535E-01;
  COFD[7415] = 2.01370226E-02;
  COFD[7416] = -1.60261598E+01;
  COFD[7417] = 3.73312045E+00;
  COFD[7418] = -2.72579779E-01;
  COFD[7419] = 1.19290272E-02;
  COFD[7420] = -2.14204113E+01;
  COFD[7421] = 5.59268435E+00;
  COFD[7422] = -4.91232974E-01;
  COFD[7423] = 2.05064746E-02;
  COFD[7424] = -1.94485902E+01;
  COFD[7425] = 4.91446566E+00;
  COFD[7426] = -4.18837152E-01;
  COFD[7427] = 1.79893537E-02;
  COFD[7428] = -1.72828280E+01;
  COFD[7429] = 4.26063341E+00;
  COFD[7430] = -3.39848064E-01;
  COFD[7431] = 1.48021313E-02;
  COFD[7432] = -1.72316133E+01;
  COFD[7433] = 4.24011069E+00;
  COFD[7434] = -3.37339810E-01;
  COFD[7435] = 1.46996679E-02;
  COFD[7436] = -1.64255877E+01;
  COFD[7437] = 3.89309916E+00;
  COFD[7438] = -2.93528188E-01;
  COFD[7439] = 1.28463177E-02;
  COFD[7440] = -1.64338675E+01;
  COFD[7441] = 3.89309916E+00;
  COFD[7442] = -2.93528188E-01;
  COFD[7443] = 1.28463177E-02;
  COFD[7444] = -2.14303411E+01;
  COFD[7445] = 5.59268435E+00;
  COFD[7446] = -4.91232974E-01;
  COFD[7447] = 2.05064746E-02;
  COFD[7448] = -2.09241584E+01;
  COFD[7449] = 5.42316225E+00;
  COFD[7450] = -4.73702801E-01;
  COFD[7451] = 1.99217718E-02;
  COFD[7452] = -1.95836362E+01;
  COFD[7453] = 4.93449043E+00;
  COFD[7454] = -4.21243802E-01;
  COFD[7455] = 1.80859966E-02;
  COFD[7456] = -1.91366985E+01;
  COFD[7457] = 4.87703209E+00;
  COFD[7458] = -4.14222202E-01;
  COFD[7459] = 1.77987878E-02;
  COFD[7460] = -1.95737273E+01;
  COFD[7461] = 4.93449043E+00;
  COFD[7462] = -4.21243802E-01;
  COFD[7463] = 1.80859966E-02;
  COFD[7464] = -1.96068540E+01;
  COFD[7465] = 5.02434088E+00;
  COFD[7466] = -4.31889635E-01;
  COFD[7467] = 1.85072024E-02;
  COFD[7468] = -1.96183861E+01;
  COFD[7469] = 5.02434088E+00;
  COFD[7470] = -4.31889635E-01;
  COFD[7471] = 1.85072024E-02;
  COFD[7472] = -2.12621849E+01;
  COFD[7473] = 5.47935225E+00;
  COFD[7474] = -4.80056796E-01;
  COFD[7475] = 2.01607180E-02;
  COFD[7476] = -1.72414795E+01;
  COFD[7477] = 4.29808578E+00;
  COFD[7478] = -3.44235570E-01;
  COFD[7479] = 1.49727727E-02;
  COFD[7480] = -2.12680019E+01;
  COFD[7481] = 5.47935225E+00;
  COFD[7482] = -4.80056796E-01;
  COFD[7483] = 2.01607180E-02;
  COFD[7484] = -2.12680019E+01;
  COFD[7485] = 5.47935225E+00;
  COFD[7486] = -4.80056796E-01;
  COFD[7487] = 2.01607180E-02;
  COFD[7488] = -2.12736166E+01;
  COFD[7489] = 5.47935225E+00;
  COFD[7490] = -4.80056796E-01;
  COFD[7491] = 2.01607180E-02;
  COFD[7492] = -2.05422229E+01;
  COFD[7493] = 5.23500188E+00;
  COFD[7494] = -4.55417380E-01;
  COFD[7495] = 1.93744255E-02;
  COFD[7496] = -2.03116223E+01;
  COFD[7497] = 5.16758304E+00;
  COFD[7498] = -4.47606321E-01;
  COFD[7499] = 1.90728318E-02;
  COFD[7500] = -2.10848951E+01;
  COFD[7501] = 5.35335833E+00;
  COFD[7502] = -4.69065665E-01;
  COFD[7503] = 1.98989604E-02;
  COFD[7504] = -2.04750296E+01;
  COFD[7505] = 5.15745622E+00;
  COFD[7506] = -4.46648283E-01;
  COFD[7507] = 1.90458987E-02;
  COFD[7508] = -2.10575035E+01;
  COFD[7509] = 5.35019396E+00;
  COFD[7510] = -4.68809590E-01;
  COFD[7511] = 1.98941097E-02;
  COFD[7512] = -2.10613522E+01;
  COFD[7513] = 5.35019396E+00;
  COFD[7514] = -4.68809590E-01;
  COFD[7515] = 1.98941097E-02;
  COFD[7516] = -2.12027414E+01;
  COFD[7517] = 5.34410059E+00;
  COFD[7518] = -4.68233157E-01;
  COFD[7519] = 1.98777314E-02;
  COFD[7520] = -2.15853161E+01;
  COFD[7521] = 5.47791699E+00;
  COFD[7522] = -4.79895525E-01;
  COFD[7523] = 2.01546976E-02;
  COFD[7524] = -2.15318041E+01;
  COFD[7525] = 5.47705133E+00;
  COFD[7526] = -4.79798142E-01;
  COFD[7527] = 2.01510569E-02;
  COFD[7528] = -2.14842795E+01;
  COFD[7529] = 5.44861022E+00;
  COFD[7530] = -4.76672017E-01;
  COFD[7531] = 2.00376930E-02;
  COFD[7532] = -2.15322483E+01;
  COFD[7533] = 5.40448560E+00;
  COFD[7534] = -4.72711417E-01;
  COFD[7535] = 1.99362480E-02;
  COFD[7536] = -2.14935935E+01;
  COFD[7537] = 5.39257286E+00;
  COFD[7538] = -4.71929831E-01;
  COFD[7539] = 1.99331101E-02;
  COFD[7540] = -2.16544310E+01;
  COFD[7541] = 5.55511977E+00;
  COFD[7542] = -4.87927156E-01;
  COFD[7543] = 2.04245402E-02;
  COFD[7544] = -2.14782205E+01;
  COFD[7545] = 5.56978987E+00;
  COFD[7546] = -4.89141980E-01;
  COFD[7547] = 2.04499210E-02;
  COFD[7548] = -2.14831325E+01;
  COFD[7549] = 5.56978987E+00;
  COFD[7550] = -4.89141980E-01;
  COFD[7551] = 2.04499210E-02;
  COFD[7552] = -2.14294414E+01;
  COFD[7553] = 5.49857681E+00;
  COFD[7554] = -4.82159755E-01;
  COFD[7555] = 2.02364231E-02;
  COFD[7556] = -2.15499433E+01;
  COFD[7557] = 5.45879073E+00;
  COFD[7558] = -4.77760848E-01;
  COFD[7559] = 2.00757542E-02;
  COFD[7560] = -2.13858351E+01;
  COFD[7561] = 5.41773320E+00;
  COFD[7562] = -4.73414274E-01;
  COFD[7563] = 1.99258733E-02;
  COFD[7564] = -2.20923265E+01;
  COFD[7565] = 5.58979675E+00;
  COFD[7566] = -4.90962731E-01;
  COFD[7567] = 2.04987927E-02;
  COFD[7568] = -2.21742351E+01;
  COFD[7569] = 5.58979675E+00;
  COFD[7570] = -4.90962731E-01;
  COFD[7571] = 2.04987927E-02;
  COFD[7572] = -2.21307517E+01;
  COFD[7573] = 5.58979675E+00;
  COFD[7574] = -4.90962731E-01;
  COFD[7575] = 2.04987927E-02;
  COFD[7576] = -2.21307517E+01;
  COFD[7577] = 5.58979675E+00;
  COFD[7578] = -4.90962731E-01;
  COFD[7579] = 2.04987927E-02;
  COFD[7580] = -2.04250978E+01;
  COFD[7581] = 5.19993608E+00;
  COFD[7582] = -4.51334924E-01;
  COFD[7583] = 1.92158646E-02;
  COFD[7584] = -2.05357363E+01;
  COFD[7585] = 5.23500188E+00;
  COFD[7586] = -4.55417380E-01;
  COFD[7587] = 1.93744255E-02;
  COFD[7588] = -1.89718901E+01;
  COFD[7589] = 4.72476764E+00;
  COFD[7590] = -3.96306836E-01;
  COFD[7591] = 1.70964541E-02;
  COFD[7592] = -1.72572011E+01;
  COFD[7593] = 4.26063341E+00;
  COFD[7594] = -3.39848064E-01;
  COFD[7595] = 1.48021313E-02;
  COFD[7596] = -2.22006166E+01;
  COFD[7597] = 5.56261157E+00;
  COFD[7598] = -4.88568348E-01;
  COFD[7599] = 2.04392305E-02;
  COFD[7600] = -2.18798991E+01;
  COFD[7601] = 5.54338024E+00;
  COFD[7602] = -4.86768787E-01;
  COFD[7603] = 2.03886883E-02;
  COFD[7604] = -2.18773350E+01;
  COFD[7605] = 5.54338024E+00;
  COFD[7606] = -4.86768787E-01;
  COFD[7607] = 2.03886883E-02;
  COFD[7608] = -2.19171985E+01;
  COFD[7609] = 5.52390371E+00;
  COFD[7610] = -4.84842326E-01;
  COFD[7611] = 2.03289335E-02;
  COFD[7612] = -2.21252663E+01;
  COFD[7613] = 5.57923992E+00;
  COFD[7614] = -4.89949222E-01;
  COFD[7615] = 2.04685426E-02;
  COFD[7616] = -2.21719626E+01;
  COFD[7617] = 5.56261157E+00;
  COFD[7618] = -4.88568348E-01;
  COFD[7619] = 2.04392305E-02;
  COFD[7620] = -2.21700560E+01;
  COFD[7621] = 5.56261157E+00;
  COFD[7622] = -4.88568348E-01;
  COFD[7623] = 2.04392305E-02;
  COFD[7624] = -2.22108556E+01;
  COFD[7625] = 5.53457356E+00;
  COFD[7626] = -4.85892223E-01;
  COFD[7627] = 2.03611937E-02;
  COFD[7628] = -2.22093818E+01;
  COFD[7629] = 5.53457356E+00;
  COFD[7630] = -4.85892223E-01;
  COFD[7631] = 2.03611937E-02;
  COFD[7632] = -2.22093818E+01;
  COFD[7633] = 5.53457356E+00;
  COFD[7634] = -4.85892223E-01;
  COFD[7635] = 2.03611937E-02;
  COFD[7636] = -2.22093818E+01;
  COFD[7637] = 5.53457356E+00;
  COFD[7638] = -4.85892223E-01;
  COFD[7639] = 2.03611937E-02;
  COFD[7640] = -2.22093818E+01;
  COFD[7641] = 5.53457356E+00;
  COFD[7642] = -4.85892223E-01;
  COFD[7643] = 2.03611937E-02;
  COFD[7644] = -2.21781137E+01;
  COFD[7645] = 5.53116350E+00;
  COFD[7646] = -4.85556457E-01;
  COFD[7647] = 2.03508624E-02;
  COFD[7648] = -2.21781137E+01;
  COFD[7649] = 5.53116350E+00;
  COFD[7650] = -4.85556457E-01;
  COFD[7651] = 2.03508624E-02;
  COFD[7652] = -2.25975141E+01;
  COFD[7653] = 5.60684388E+00;
  COFD[7654] = -4.89089198E-01;
  COFD[7655] = 2.02565724E-02;
  COFD[7656] = -2.25975141E+01;
  COFD[7657] = 5.60684388E+00;
  COFD[7658] = -4.89089198E-01;
  COFD[7659] = 2.02565724E-02;
  COFD[7660] = -2.25975141E+01;
  COFD[7661] = 5.60684388E+00;
  COFD[7662] = -4.89089198E-01;
  COFD[7663] = 2.02565724E-02;
  COFD[7664] = -2.25975141E+01;
  COFD[7665] = 5.60684388E+00;
  COFD[7666] = -4.89089198E-01;
  COFD[7667] = 2.02565724E-02;
  COFD[7668] = -2.25975141E+01;
  COFD[7669] = 5.60684388E+00;
  COFD[7670] = -4.89089198E-01;
  COFD[7671] = 2.02565724E-02;
  COFD[7672] = -2.25975141E+01;
  COFD[7673] = 5.60684388E+00;
  COFD[7674] = -4.89089198E-01;
  COFD[7675] = 2.02565724E-02;
  COFD[7676] = -2.25975141E+01;
  COFD[7677] = 5.60684388E+00;
  COFD[7678] = -4.89089198E-01;
  COFD[7679] = 2.02565724E-02;
  COFD[7680] = -2.25975141E+01;
  COFD[7681] = 5.60684388E+00;
  COFD[7682] = -4.89089198E-01;
  COFD[7683] = 2.02565724E-02;
  COFD[7684] = -2.25975141E+01;
  COFD[7685] = 5.60684388E+00;
  COFD[7686] = -4.89089198E-01;
  COFD[7687] = 2.02565724E-02;
  COFD[7688] = -2.25975141E+01;
  COFD[7689] = 5.60684388E+00;
  COFD[7690] = -4.89089198E-01;
  COFD[7691] = 2.02565724E-02;
  COFD[7692] = -2.25975141E+01;
  COFD[7693] = 5.60684388E+00;
  COFD[7694] = -4.89089198E-01;
  COFD[7695] = 2.02565724E-02;
  COFD[7696] = -2.25975141E+01;
  COFD[7697] = 5.60684388E+00;
  COFD[7698] = -4.89089198E-01;
  COFD[7699] = 2.02565724E-02;
  COFD[7700] = -2.28223102E+01;
  COFD[7701] = 5.58209631E+00;
  COFD[7702] = -4.82952924E-01;
  COFD[7703] = 1.98726667E-02;
  COFD[7704] = -2.28223102E+01;
  COFD[7705] = 5.58209631E+00;
  COFD[7706] = -4.82952924E-01;
  COFD[7707] = 1.98726667E-02;
  COFD[7708] = -2.28223102E+01;
  COFD[7709] = 5.58209631E+00;
  COFD[7710] = -4.82952924E-01;
  COFD[7711] = 1.98726667E-02;
  COFD[7712] = -2.28223102E+01;
  COFD[7713] = 5.58209631E+00;
  COFD[7714] = -4.82952924E-01;
  COFD[7715] = 1.98726667E-02;
  COFD[7716] = -2.24855696E+01;
  COFD[7717] = 5.60129058E+00;
  COFD[7718] = -4.91513454E-01;
  COFD[7719] = 2.04857350E-02;
  COFD[7720] = -2.24855696E+01;
  COFD[7721] = 5.60129058E+00;
  COFD[7722] = -4.91513454E-01;
  COFD[7723] = 2.04857350E-02;
  COFD[7724] = -2.26475227E+01;
  COFD[7725] = 5.59137662E+00;
  COFD[7726] = -4.85571189E-01;
  COFD[7727] = 2.00432448E-02;
  COFD[7728] = -2.26475227E+01;
  COFD[7729] = 5.59137662E+00;
  COFD[7730] = -4.85571189E-01;
  COFD[7731] = 2.00432448E-02;
  COFD[7732] = -2.26475227E+01;
  COFD[7733] = 5.59137662E+00;
  COFD[7734] = -4.85571189E-01;
  COFD[7735] = 2.00432448E-02;
  COFD[7736] = -2.26475227E+01;
  COFD[7737] = 5.59137662E+00;
  COFD[7738] = -4.85571189E-01;
  COFD[7739] = 2.00432448E-02;
  COFD[7740] = -1.59884349E+01;
  COFD[7741] = 3.72220402E+00;
  COFD[7742] = -2.71150591E-01;
  COFD[7743] = 1.18665265E-02;
  COFD[7744] = -1.94691588E+01;
  COFD[7745] = 5.43830787E+00;
  COFD[7746] = -4.75472880E-01;
  COFD[7747] = 1.99909996E-02;
  COFD[7748] = -1.57040365E+01;
  COFD[7749] = 3.93614244E+00;
  COFD[7750] = -2.99111497E-01;
  COFD[7751] = 1.30888229E-02;
  COFD[7752] = -1.90915553E+01;
  COFD[7753] = 4.84384483E+00;
  COFD[7754] = -4.10265575E-01;
  COFD[7755] = 1.76414287E-02;
  COFD[7756] = -2.05235643E+01;
  COFD[7757] = 5.18417470E+00;
  COFD[7758] = -4.49491573E-01;
  COFD[7759] = 1.91438508E-02;
  COFD[7760] = -1.91136407E+01;
  COFD[7761] = 4.84384483E+00;
  COFD[7762] = -4.10265575E-01;
  COFD[7763] = 1.76414287E-02;
  COFD[7764] = -1.87419126E+01;
  COFD[7765] = 3.96926341E+00;
  COFD[7766] = -2.16412264E-01;
  COFD[7767] = 6.06012078E-03;
  COFD[7768] = -2.02969667E+01;
  COFD[7769] = 5.11106992E+00;
  COFD[7770] = -4.42047129E-01;
  COFD[7771] = 1.89042990E-02;
  COFD[7772] = -2.00963017E+01;
  COFD[7773] = 4.41511629E+00;
  COFD[7774] = -2.84086963E-01;
  COFD[7775] = 9.37586971E-03;
  COFD[7776] = -2.22176875E+01;
  COFD[7777] = 5.54251230E+00;
  COFD[7778] = -4.70946314E-01;
  COFD[7779] = 1.90785869E-02;
  COFD[7780] = -2.11637883E+01;
  COFD[7781] = 5.42846112E+00;
  COFD[7782] = -4.74321870E-01;
  COFD[7783] = 1.99459749E-02;
  COFD[7784] = -2.11341641E+01;
  COFD[7785] = 5.41773516E+00;
  COFD[7786] = -4.73414338E-01;
  COFD[7787] = 1.99258685E-02;
  COFD[7788] = -2.05324009E+01;
  COFD[7789] = 5.18417470E+00;
  COFD[7790] = -4.49491573E-01;
  COFD[7791] = 1.91438508E-02;
  COFD[7792] = -2.05408587E+01;
  COFD[7793] = 5.18417470E+00;
  COFD[7794] = -4.49491573E-01;
  COFD[7795] = 1.91438508E-02;
  COFD[7796] = -2.01064300E+01;
  COFD[7797] = 4.41511629E+00;
  COFD[7798] = -2.84086963E-01;
  COFD[7799] = 9.37586971E-03;
  COFD[7800] = -2.09272370E+01;
  COFD[7801] = 4.82184721E+00;
  COFD[7802] = -3.48128875E-01;
  COFD[7803] = 1.25918978E-02;
  COFD[7804] = -2.22478853E+01;
  COFD[7805] = 5.53139819E+00;
  COFD[7806] = -4.68828555E-01;
  COFD[7807] = 1.89597887E-02;
  COFD[7808] = -2.20445378E+01;
  COFD[7809] = 5.56049839E+00;
  COFD[7810] = -4.74367872E-01;
  COFD[7811] = 1.92702787E-02;
  COFD[7812] = -2.22377782E+01;
  COFD[7813] = 5.53139819E+00;
  COFD[7814] = -4.68828555E-01;
  COFD[7815] = 1.89597887E-02;
  COFD[7816] = -2.20307736E+01;
  COFD[7817] = 5.49663315E+00;
  COFD[7818] = -4.61182837E-01;
  COFD[7819] = 1.85035558E-02;
  COFD[7820] = -2.20425218E+01;
  COFD[7821] = 5.49663315E+00;
  COFD[7822] = -4.61182837E-01;
  COFD[7823] = 1.85035558E-02;
  COFD[7824] = -2.09061569E+01;
  COFD[7825] = 4.72895031E+00;
  COFD[7826] = -3.33332771E-01;
  COFD[7827] = 1.18431478E-02;
  COFD[7828] = -2.12680019E+01;
  COFD[7829] = 5.47935225E+00;
  COFD[7830] = -4.80056796E-01;
  COFD[7831] = 2.01607180E-02;
  COFD[7832] = -2.09121160E+01;
  COFD[7833] = 4.72895031E+00;
  COFD[7834] = -3.33332771E-01;
  COFD[7835] = 1.18431478E-02;
  COFD[7836] = -2.09121160E+01;
  COFD[7837] = 4.72895031E+00;
  COFD[7838] = -3.33332771E-01;
  COFD[7839] = 1.18431478E-02;
  COFD[7840] = -2.09178693E+01;
  COFD[7841] = 4.72895031E+00;
  COFD[7842] = -3.33332771E-01;
  COFD[7843] = 1.18431478E-02;
  COFD[7844] = -2.19649547E+01;
  COFD[7845] = 5.27258289E+00;
  COFD[7846] = -4.21502790E-01;
  COFD[7847] = 1.63611949E-02;
  COFD[7848] = -2.20656185E+01;
  COFD[7849] = 5.34774760E+00;
  COFD[7850] = -4.34239753E-01;
  COFD[7851] = 1.70320676E-02;
  COFD[7852] = -2.19319368E+01;
  COFD[7853] = 5.14570932E+00;
  COFD[7854] = -3.99877142E-01;
  COFD[7855] = 1.52199557E-02;
  COFD[7856] = -2.22604939E+01;
  COFD[7857] = 5.36643605E+00;
  COFD[7858] = -4.37440735E-01;
  COFD[7859] = 1.72016388E-02;
  COFD[7860] = -2.19349796E+01;
  COFD[7861] = 5.15446948E+00;
  COFD[7862] = -4.01332769E-01;
  COFD[7863] = 1.52956262E-02;
  COFD[7864] = -2.19389349E+01;
  COFD[7865] = 5.15446948E+00;
  COFD[7866] = -4.01332769E-01;
  COFD[7867] = 1.52956262E-02;
  COFD[7868] = -2.20959186E+01;
  COFD[7869] = 5.16679492E+00;
  COFD[7870] = -4.03405751E-01;
  COFD[7871] = 1.54041741E-02;
  COFD[7872] = -2.11949491E+01;
  COFD[7873] = 4.73146525E+00;
  COFD[7874] = -3.33731759E-01;
  COFD[7875] = 1.18632925E-02;
  COFD[7876] = -2.11561697E+01;
  COFD[7877] = 4.73295595E+00;
  COFD[7878] = -3.33968375E-01;
  COFD[7879] = 1.18752387E-02;
  COFD[7880] = -2.12807905E+01;
  COFD[7881] = 4.78222428E+00;
  COFD[7882] = -3.41846868E-01;
  COFD[7883] = 1.22746304E-02;
  COFD[7884] = -2.17537066E+01;
  COFD[7885] = 4.93496210E+00;
  COFD[7886] = -3.65981745E-01;
  COFD[7887] = 1.34912948E-02;
  COFD[7888] = -2.18871055E+01;
  COFD[7889] = 4.99907484E+00;
  COFD[7890] = -3.76094627E-01;
  COFD[7891] = 1.40009262E-02;
  COFD[7892] = -2.07133037E+01;
  COFD[7893] = 4.56211059E+00;
  COFD[7894] = -3.06895158E-01;
  COFD[7895] = 1.05100393E-02;
  COFD[7896] = -2.04096115E+01;
  COFD[7897] = 4.50250781E+00;
  COFD[7898] = -2.97622106E-01;
  COFD[7899] = 1.00481473E-02;
  COFD[7900] = -2.04146501E+01;
  COFD[7901] = 4.50250781E+00;
  COFD[7902] = -2.97622106E-01;
  COFD[7903] = 1.00481473E-02;
  COFD[7904] = -2.09377713E+01;
  COFD[7905] = 4.69256593E+00;
  COFD[7906] = -3.27570630E-01;
  COFD[7907] = 1.15525471E-02;
  COFD[7908] = -2.12731892E+01;
  COFD[7909] = 4.76335355E+00;
  COFD[7910] = -3.38814362E-01;
  COFD[7911] = 1.21204360E-02;
  COFD[7912] = -2.14189826E+01;
  COFD[7913] = 4.85433278E+00;
  COFD[7914] = -3.53258974E-01;
  COFD[7915] = 1.28503760E-02;
  COFD[7916] = -2.07241602E+01;
  COFD[7917] = 4.42680848E+00;
  COFD[7918] = -2.85885288E-01;
  COFD[7919] = 9.46483934E-03;
  COFD[7920] = -2.08088002E+01;
  COFD[7921] = 4.42680848E+00;
  COFD[7922] = -2.85885288E-01;
  COFD[7923] = 9.46483934E-03;
  COFD[7924] = -2.07638093E+01;
  COFD[7925] = 4.42680848E+00;
  COFD[7926] = -2.85885288E-01;
  COFD[7927] = 9.46483934E-03;
  COFD[7928] = -2.07638093E+01;
  COFD[7929] = 4.42680848E+00;
  COFD[7930] = -2.85885288E-01;
  COFD[7931] = 9.46483934E-03;
  COFD[7932] = -2.20250512E+01;
  COFD[7933] = 5.31412694E+00;
  COFD[7934] = -4.28473898E-01;
  COFD[7935] = 1.67264841E-02;
  COFD[7936] = -2.19583156E+01;
  COFD[7937] = 5.27258289E+00;
  COFD[7938] = -4.21502790E-01;
  COFD[7939] = 1.63611949E-02;
  COFD[7940] = -2.22205337E+01;
  COFD[7941] = 5.58360799E+00;
  COFD[7942] = -4.82701436E-01;
  COFD[7943] = 1.98437922E-02;
  COFD[7944] = -2.11378438E+01;
  COFD[7945] = 5.42846112E+00;
  COFD[7946] = -4.74321870E-01;
  COFD[7947] = 1.99459749E-02;
  COFD[7948] = -2.11214030E+01;
  COFD[7949] = 4.53343919E+00;
  COFD[7950] = -3.02436183E-01;
  COFD[7951] = 1.02880591E-02;
  COFD[7952] = -2.10113498E+01;
  COFD[7953] = 4.59262341E+00;
  COFD[7954] = -3.11696702E-01;
  COFD[7955] = 1.07507612E-02;
  COFD[7956] = -2.10087069E+01;
  COFD[7957] = 4.59262341E+00;
  COFD[7958] = -3.11696702E-01;
  COFD[7959] = 1.07507612E-02;
  COFD[7960] = -2.11817501E+01;
  COFD[7961] = 4.63801001E+00;
  COFD[7962] = -3.18948840E-01;
  COFD[7963] = 1.11183139E-02;
  COFD[7964] = -2.08636178E+01;
  COFD[7965] = 4.46453406E+00;
  COFD[7966] = -2.91715850E-01;
  COFD[7967] = 9.75402150E-03;
  COFD[7968] = -2.10917818E+01;
  COFD[7969] = 4.53343919E+00;
  COFD[7970] = -3.02436183E-01;
  COFD[7971] = 1.02880591E-02;
  COFD[7972] = -2.10898128E+01;
  COFD[7973] = 4.53343919E+00;
  COFD[7974] = -3.02436183E-01;
  COFD[7975] = 1.02880591E-02;
  COFD[7976] = -2.13622656E+01;
  COFD[7977] = 4.61201872E+00;
  COFD[7978] = -3.14803338E-01;
  COFD[7979] = 1.09082984E-02;
  COFD[7980] = -2.13607412E+01;
  COFD[7981] = 4.61201872E+00;
  COFD[7982] = -3.14803338E-01;
  COFD[7983] = 1.09082984E-02;
  COFD[7984] = -2.13607412E+01;
  COFD[7985] = 4.61201872E+00;
  COFD[7986] = -3.14803338E-01;
  COFD[7987] = 1.09082984E-02;
  COFD[7988] = -2.13607412E+01;
  COFD[7989] = 4.61201872E+00;
  COFD[7990] = -3.14803338E-01;
  COFD[7991] = 1.09082984E-02;
  COFD[7992] = -2.13607412E+01;
  COFD[7993] = 4.61201872E+00;
  COFD[7994] = -3.14803338E-01;
  COFD[7995] = 1.09082984E-02;
  COFD[7996] = -2.13584820E+01;
  COFD[7997] = 4.62003574E+00;
  COFD[7998] = -3.16085261E-01;
  COFD[7999] = 1.09733113E-02;
  COFD[8000] = -2.13584820E+01;
  COFD[8001] = 4.62003574E+00;
  COFD[8002] = -3.16085261E-01;
  COFD[8003] = 1.09733113E-02;
  COFD[8004] = -2.02547568E+01;
  COFD[8005] = 4.04040564E+00;
  COFD[8006] = -2.27103382E-01;
  COFD[8007] = 6.58016011E-03;
  COFD[8008] = -2.02547568E+01;
  COFD[8009] = 4.04040564E+00;
  COFD[8010] = -2.27103382E-01;
  COFD[8011] = 6.58016011E-03;
  COFD[8012] = -2.02547568E+01;
  COFD[8013] = 4.04040564E+00;
  COFD[8014] = -2.27103382E-01;
  COFD[8015] = 6.58016011E-03;
  COFD[8016] = -2.02547568E+01;
  COFD[8017] = 4.04040564E+00;
  COFD[8018] = -2.27103382E-01;
  COFD[8019] = 6.58016011E-03;
  COFD[8020] = -2.02547568E+01;
  COFD[8021] = 4.04040564E+00;
  COFD[8022] = -2.27103382E-01;
  COFD[8023] = 6.58016011E-03;
  COFD[8024] = -2.02547568E+01;
  COFD[8025] = 4.04040564E+00;
  COFD[8026] = -2.27103382E-01;
  COFD[8027] = 6.58016011E-03;
  COFD[8028] = -2.02547568E+01;
  COFD[8029] = 4.04040564E+00;
  COFD[8030] = -2.27103382E-01;
  COFD[8031] = 6.58016011E-03;
  COFD[8032] = -2.02547568E+01;
  COFD[8033] = 4.04040564E+00;
  COFD[8034] = -2.27103382E-01;
  COFD[8035] = 6.58016011E-03;
  COFD[8036] = -2.02547568E+01;
  COFD[8037] = 4.04040564E+00;
  COFD[8038] = -2.27103382E-01;
  COFD[8039] = 6.58016011E-03;
  COFD[8040] = -2.02547568E+01;
  COFD[8041] = 4.04040564E+00;
  COFD[8042] = -2.27103382E-01;
  COFD[8043] = 6.58016011E-03;
  COFD[8044] = -2.02547568E+01;
  COFD[8045] = 4.04040564E+00;
  COFD[8046] = -2.27103382E-01;
  COFD[8047] = 6.58016011E-03;
  COFD[8048] = -2.02547568E+01;
  COFD[8049] = 4.04040564E+00;
  COFD[8050] = -2.27103382E-01;
  COFD[8051] = 6.58016011E-03;
  COFD[8052] = -2.00279293E+01;
  COFD[8053] = 3.83478342E+00;
  COFD[8054] = -1.95849899E-01;
  COFD[8055] = 5.04983054E-03;
  COFD[8056] = -2.00279293E+01;
  COFD[8057] = 3.83478342E+00;
  COFD[8058] = -1.95849899E-01;
  COFD[8059] = 5.04983054E-03;
  COFD[8060] = -2.00279293E+01;
  COFD[8061] = 3.83478342E+00;
  COFD[8062] = -1.95849899E-01;
  COFD[8063] = 5.04983054E-03;
  COFD[8064] = -2.00279293E+01;
  COFD[8065] = 3.83478342E+00;
  COFD[8066] = -1.95849899E-01;
  COFD[8067] = 5.04983054E-03;
  COFD[8068] = -2.08499159E+01;
  COFD[8069] = 4.33912386E+00;
  COFD[8070] = -2.72408316E-01;
  COFD[8071] = 8.79879099E-03;
  COFD[8072] = -2.08499159E+01;
  COFD[8073] = 4.33912386E+00;
  COFD[8074] = -2.72408316E-01;
  COFD[8075] = 8.79879099E-03;
  COFD[8076] = -2.00594053E+01;
  COFD[8077] = 3.92262843E+00;
  COFD[8078] = -2.09310993E-01;
  COFD[8079] = 5.71178653E-03;
  COFD[8080] = -2.00594053E+01;
  COFD[8081] = 3.92262843E+00;
  COFD[8082] = -2.09310993E-01;
  COFD[8083] = 5.71178653E-03;
  COFD[8084] = -2.00594053E+01;
  COFD[8085] = 3.92262843E+00;
  COFD[8086] = -2.09310993E-01;
  COFD[8087] = 5.71178653E-03;
  COFD[8088] = -2.00594053E+01;
  COFD[8089] = 3.92262843E+00;
  COFD[8090] = -2.09310993E-01;
  COFD[8091] = 5.71178653E-03;
  COFD[8092] = -2.02693704E+01;
  COFD[8093] = 5.10426133E+00;
  COFD[8094] = -4.41256919E-01;
  COFD[8095] = 1.88737290E-02;
  COFD[8096] = -1.94691588E+01;
  COFD[8097] = 5.43830787E+00;
  COFD[8098] = -4.75472880E-01;
  COFD[8099] = 1.99909996E-02;
  COFD[8100] = -1.57040365E+01;
  COFD[8101] = 3.93614244E+00;
  COFD[8102] = -2.99111497E-01;
  COFD[8103] = 1.30888229E-02;
  COFD[8104] = -1.90915553E+01;
  COFD[8105] = 4.84384483E+00;
  COFD[8106] = -4.10265575E-01;
  COFD[8107] = 1.76414287E-02;
  COFD[8108] = -2.05235643E+01;
  COFD[8109] = 5.18417470E+00;
  COFD[8110] = -4.49491573E-01;
  COFD[8111] = 1.91438508E-02;
  COFD[8112] = -1.91136407E+01;
  COFD[8113] = 4.84384483E+00;
  COFD[8114] = -4.10265575E-01;
  COFD[8115] = 1.76414287E-02;
  COFD[8116] = -1.87419126E+01;
  COFD[8117] = 3.96926341E+00;
  COFD[8118] = -2.16412264E-01;
  COFD[8119] = 6.06012078E-03;
  COFD[8120] = -2.02969667E+01;
  COFD[8121] = 5.11106992E+00;
  COFD[8122] = -4.42047129E-01;
  COFD[8123] = 1.89042990E-02;
  COFD[8124] = -2.00963017E+01;
  COFD[8125] = 4.41511629E+00;
  COFD[8126] = -2.84086963E-01;
  COFD[8127] = 9.37586971E-03;
  COFD[8128] = -2.22176875E+01;
  COFD[8129] = 5.54251230E+00;
  COFD[8130] = -4.70946314E-01;
  COFD[8131] = 1.90785869E-02;
  COFD[8132] = -2.11637883E+01;
  COFD[8133] = 5.42846112E+00;
  COFD[8134] = -4.74321870E-01;
  COFD[8135] = 1.99459749E-02;
  COFD[8136] = -2.11341641E+01;
  COFD[8137] = 5.41773516E+00;
  COFD[8138] = -4.73414338E-01;
  COFD[8139] = 1.99258685E-02;
  COFD[8140] = -2.05324009E+01;
  COFD[8141] = 5.18417470E+00;
  COFD[8142] = -4.49491573E-01;
  COFD[8143] = 1.91438508E-02;
  COFD[8144] = -2.05408587E+01;
  COFD[8145] = 5.18417470E+00;
  COFD[8146] = -4.49491573E-01;
  COFD[8147] = 1.91438508E-02;
  COFD[8148] = -2.01064300E+01;
  COFD[8149] = 4.41511629E+00;
  COFD[8150] = -2.84086963E-01;
  COFD[8151] = 9.37586971E-03;
  COFD[8152] = -2.09272370E+01;
  COFD[8153] = 4.82184721E+00;
  COFD[8154] = -3.48128875E-01;
  COFD[8155] = 1.25918978E-02;
  COFD[8156] = -2.22478853E+01;
  COFD[8157] = 5.53139819E+00;
  COFD[8158] = -4.68828555E-01;
  COFD[8159] = 1.89597887E-02;
  COFD[8160] = -2.20445378E+01;
  COFD[8161] = 5.56049839E+00;
  COFD[8162] = -4.74367872E-01;
  COFD[8163] = 1.92702787E-02;
  COFD[8164] = -2.22377782E+01;
  COFD[8165] = 5.53139819E+00;
  COFD[8166] = -4.68828555E-01;
  COFD[8167] = 1.89597887E-02;
  COFD[8168] = -2.20307736E+01;
  COFD[8169] = 5.49663315E+00;
  COFD[8170] = -4.61182837E-01;
  COFD[8171] = 1.85035558E-02;
  COFD[8172] = -2.20425218E+01;
  COFD[8173] = 5.49663315E+00;
  COFD[8174] = -4.61182837E-01;
  COFD[8175] = 1.85035558E-02;
  COFD[8176] = -2.09061569E+01;
  COFD[8177] = 4.72895031E+00;
  COFD[8178] = -3.33332771E-01;
  COFD[8179] = 1.18431478E-02;
  COFD[8180] = -2.12680019E+01;
  COFD[8181] = 5.47935225E+00;
  COFD[8182] = -4.80056796E-01;
  COFD[8183] = 2.01607180E-02;
  COFD[8184] = -2.09121160E+01;
  COFD[8185] = 4.72895031E+00;
  COFD[8186] = -3.33332771E-01;
  COFD[8187] = 1.18431478E-02;
  COFD[8188] = -2.09121160E+01;
  COFD[8189] = 4.72895031E+00;
  COFD[8190] = -3.33332771E-01;
  COFD[8191] = 1.18431478E-02;
  COFD[8192] = -2.09178693E+01;
  COFD[8193] = 4.72895031E+00;
  COFD[8194] = -3.33332771E-01;
  COFD[8195] = 1.18431478E-02;
  COFD[8196] = -2.19649547E+01;
  COFD[8197] = 5.27258289E+00;
  COFD[8198] = -4.21502790E-01;
  COFD[8199] = 1.63611949E-02;
  COFD[8200] = -2.20656185E+01;
  COFD[8201] = 5.34774760E+00;
  COFD[8202] = -4.34239753E-01;
  COFD[8203] = 1.70320676E-02;
  COFD[8204] = -2.19319368E+01;
  COFD[8205] = 5.14570932E+00;
  COFD[8206] = -3.99877142E-01;
  COFD[8207] = 1.52199557E-02;
  COFD[8208] = -2.22604939E+01;
  COFD[8209] = 5.36643605E+00;
  COFD[8210] = -4.37440735E-01;
  COFD[8211] = 1.72016388E-02;
  COFD[8212] = -2.19349796E+01;
  COFD[8213] = 5.15446948E+00;
  COFD[8214] = -4.01332769E-01;
  COFD[8215] = 1.52956262E-02;
  COFD[8216] = -2.19389349E+01;
  COFD[8217] = 5.15446948E+00;
  COFD[8218] = -4.01332769E-01;
  COFD[8219] = 1.52956262E-02;
  COFD[8220] = -2.20959186E+01;
  COFD[8221] = 5.16679492E+00;
  COFD[8222] = -4.03405751E-01;
  COFD[8223] = 1.54041741E-02;
  COFD[8224] = -2.11949491E+01;
  COFD[8225] = 4.73146525E+00;
  COFD[8226] = -3.33731759E-01;
  COFD[8227] = 1.18632925E-02;
  COFD[8228] = -2.11561697E+01;
  COFD[8229] = 4.73295595E+00;
  COFD[8230] = -3.33968375E-01;
  COFD[8231] = 1.18752387E-02;
  COFD[8232] = -2.12807905E+01;
  COFD[8233] = 4.78222428E+00;
  COFD[8234] = -3.41846868E-01;
  COFD[8235] = 1.22746304E-02;
  COFD[8236] = -2.17537066E+01;
  COFD[8237] = 4.93496210E+00;
  COFD[8238] = -3.65981745E-01;
  COFD[8239] = 1.34912948E-02;
  COFD[8240] = -2.18871055E+01;
  COFD[8241] = 4.99907484E+00;
  COFD[8242] = -3.76094627E-01;
  COFD[8243] = 1.40009262E-02;
  COFD[8244] = -2.07133037E+01;
  COFD[8245] = 4.56211059E+00;
  COFD[8246] = -3.06895158E-01;
  COFD[8247] = 1.05100393E-02;
  COFD[8248] = -2.04096115E+01;
  COFD[8249] = 4.50250781E+00;
  COFD[8250] = -2.97622106E-01;
  COFD[8251] = 1.00481473E-02;
  COFD[8252] = -2.04146501E+01;
  COFD[8253] = 4.50250781E+00;
  COFD[8254] = -2.97622106E-01;
  COFD[8255] = 1.00481473E-02;
  COFD[8256] = -2.09377713E+01;
  COFD[8257] = 4.69256593E+00;
  COFD[8258] = -3.27570630E-01;
  COFD[8259] = 1.15525471E-02;
  COFD[8260] = -2.12731892E+01;
  COFD[8261] = 4.76335355E+00;
  COFD[8262] = -3.38814362E-01;
  COFD[8263] = 1.21204360E-02;
  COFD[8264] = -2.14189826E+01;
  COFD[8265] = 4.85433278E+00;
  COFD[8266] = -3.53258974E-01;
  COFD[8267] = 1.28503760E-02;
  COFD[8268] = -2.07241602E+01;
  COFD[8269] = 4.42680848E+00;
  COFD[8270] = -2.85885288E-01;
  COFD[8271] = 9.46483934E-03;
  COFD[8272] = -2.08088002E+01;
  COFD[8273] = 4.42680848E+00;
  COFD[8274] = -2.85885288E-01;
  COFD[8275] = 9.46483934E-03;
  COFD[8276] = -2.07638093E+01;
  COFD[8277] = 4.42680848E+00;
  COFD[8278] = -2.85885288E-01;
  COFD[8279] = 9.46483934E-03;
  COFD[8280] = -2.07638093E+01;
  COFD[8281] = 4.42680848E+00;
  COFD[8282] = -2.85885288E-01;
  COFD[8283] = 9.46483934E-03;
  COFD[8284] = -2.20250512E+01;
  COFD[8285] = 5.31412694E+00;
  COFD[8286] = -4.28473898E-01;
  COFD[8287] = 1.67264841E-02;
  COFD[8288] = -2.19583156E+01;
  COFD[8289] = 5.27258289E+00;
  COFD[8290] = -4.21502790E-01;
  COFD[8291] = 1.63611949E-02;
  COFD[8292] = -2.22205337E+01;
  COFD[8293] = 5.58360799E+00;
  COFD[8294] = -4.82701436E-01;
  COFD[8295] = 1.98437922E-02;
  COFD[8296] = -2.11378438E+01;
  COFD[8297] = 5.42846112E+00;
  COFD[8298] = -4.74321870E-01;
  COFD[8299] = 1.99459749E-02;
  COFD[8300] = -2.11214030E+01;
  COFD[8301] = 4.53343919E+00;
  COFD[8302] = -3.02436183E-01;
  COFD[8303] = 1.02880591E-02;
  COFD[8304] = -2.10113498E+01;
  COFD[8305] = 4.59262341E+00;
  COFD[8306] = -3.11696702E-01;
  COFD[8307] = 1.07507612E-02;
  COFD[8308] = -2.10087069E+01;
  COFD[8309] = 4.59262341E+00;
  COFD[8310] = -3.11696702E-01;
  COFD[8311] = 1.07507612E-02;
  COFD[8312] = -2.11817501E+01;
  COFD[8313] = 4.63801001E+00;
  COFD[8314] = -3.18948840E-01;
  COFD[8315] = 1.11183139E-02;
  COFD[8316] = -2.08636178E+01;
  COFD[8317] = 4.46453406E+00;
  COFD[8318] = -2.91715850E-01;
  COFD[8319] = 9.75402150E-03;
  COFD[8320] = -2.10917818E+01;
  COFD[8321] = 4.53343919E+00;
  COFD[8322] = -3.02436183E-01;
  COFD[8323] = 1.02880591E-02;
  COFD[8324] = -2.10898128E+01;
  COFD[8325] = 4.53343919E+00;
  COFD[8326] = -3.02436183E-01;
  COFD[8327] = 1.02880591E-02;
  COFD[8328] = -2.13622656E+01;
  COFD[8329] = 4.61201872E+00;
  COFD[8330] = -3.14803338E-01;
  COFD[8331] = 1.09082984E-02;
  COFD[8332] = -2.13607412E+01;
  COFD[8333] = 4.61201872E+00;
  COFD[8334] = -3.14803338E-01;
  COFD[8335] = 1.09082984E-02;
  COFD[8336] = -2.13607412E+01;
  COFD[8337] = 4.61201872E+00;
  COFD[8338] = -3.14803338E-01;
  COFD[8339] = 1.09082984E-02;
  COFD[8340] = -2.13607412E+01;
  COFD[8341] = 4.61201872E+00;
  COFD[8342] = -3.14803338E-01;
  COFD[8343] = 1.09082984E-02;
  COFD[8344] = -2.13607412E+01;
  COFD[8345] = 4.61201872E+00;
  COFD[8346] = -3.14803338E-01;
  COFD[8347] = 1.09082984E-02;
  COFD[8348] = -2.13584820E+01;
  COFD[8349] = 4.62003574E+00;
  COFD[8350] = -3.16085261E-01;
  COFD[8351] = 1.09733113E-02;
  COFD[8352] = -2.13584820E+01;
  COFD[8353] = 4.62003574E+00;
  COFD[8354] = -3.16085261E-01;
  COFD[8355] = 1.09733113E-02;
  COFD[8356] = -2.02547568E+01;
  COFD[8357] = 4.04040564E+00;
  COFD[8358] = -2.27103382E-01;
  COFD[8359] = 6.58016011E-03;
  COFD[8360] = -2.02547568E+01;
  COFD[8361] = 4.04040564E+00;
  COFD[8362] = -2.27103382E-01;
  COFD[8363] = 6.58016011E-03;
  COFD[8364] = -2.02547568E+01;
  COFD[8365] = 4.04040564E+00;
  COFD[8366] = -2.27103382E-01;
  COFD[8367] = 6.58016011E-03;
  COFD[8368] = -2.02547568E+01;
  COFD[8369] = 4.04040564E+00;
  COFD[8370] = -2.27103382E-01;
  COFD[8371] = 6.58016011E-03;
  COFD[8372] = -2.02547568E+01;
  COFD[8373] = 4.04040564E+00;
  COFD[8374] = -2.27103382E-01;
  COFD[8375] = 6.58016011E-03;
  COFD[8376] = -2.02547568E+01;
  COFD[8377] = 4.04040564E+00;
  COFD[8378] = -2.27103382E-01;
  COFD[8379] = 6.58016011E-03;
  COFD[8380] = -2.02547568E+01;
  COFD[8381] = 4.04040564E+00;
  COFD[8382] = -2.27103382E-01;
  COFD[8383] = 6.58016011E-03;
  COFD[8384] = -2.02547568E+01;
  COFD[8385] = 4.04040564E+00;
  COFD[8386] = -2.27103382E-01;
  COFD[8387] = 6.58016011E-03;
  COFD[8388] = -2.02547568E+01;
  COFD[8389] = 4.04040564E+00;
  COFD[8390] = -2.27103382E-01;
  COFD[8391] = 6.58016011E-03;
  COFD[8392] = -2.02547568E+01;
  COFD[8393] = 4.04040564E+00;
  COFD[8394] = -2.27103382E-01;
  COFD[8395] = 6.58016011E-03;
  COFD[8396] = -2.02547568E+01;
  COFD[8397] = 4.04040564E+00;
  COFD[8398] = -2.27103382E-01;
  COFD[8399] = 6.58016011E-03;
  COFD[8400] = -2.02547568E+01;
  COFD[8401] = 4.04040564E+00;
  COFD[8402] = -2.27103382E-01;
  COFD[8403] = 6.58016011E-03;
  COFD[8404] = -2.00279293E+01;
  COFD[8405] = 3.83478342E+00;
  COFD[8406] = -1.95849899E-01;
  COFD[8407] = 5.04983054E-03;
  COFD[8408] = -2.00279293E+01;
  COFD[8409] = 3.83478342E+00;
  COFD[8410] = -1.95849899E-01;
  COFD[8411] = 5.04983054E-03;
  COFD[8412] = -2.00279293E+01;
  COFD[8413] = 3.83478342E+00;
  COFD[8414] = -1.95849899E-01;
  COFD[8415] = 5.04983054E-03;
  COFD[8416] = -2.00279293E+01;
  COFD[8417] = 3.83478342E+00;
  COFD[8418] = -1.95849899E-01;
  COFD[8419] = 5.04983054E-03;
  COFD[8420] = -2.08499159E+01;
  COFD[8421] = 4.33912386E+00;
  COFD[8422] = -2.72408316E-01;
  COFD[8423] = 8.79879099E-03;
  COFD[8424] = -2.08499159E+01;
  COFD[8425] = 4.33912386E+00;
  COFD[8426] = -2.72408316E-01;
  COFD[8427] = 8.79879099E-03;
  COFD[8428] = -2.00594053E+01;
  COFD[8429] = 3.92262843E+00;
  COFD[8430] = -2.09310993E-01;
  COFD[8431] = 5.71178653E-03;
  COFD[8432] = -2.00594053E+01;
  COFD[8433] = 3.92262843E+00;
  COFD[8434] = -2.09310993E-01;
  COFD[8435] = 5.71178653E-03;
  COFD[8436] = -2.00594053E+01;
  COFD[8437] = 3.92262843E+00;
  COFD[8438] = -2.09310993E-01;
  COFD[8439] = 5.71178653E-03;
  COFD[8440] = -2.00594053E+01;
  COFD[8441] = 3.92262843E+00;
  COFD[8442] = -2.09310993E-01;
  COFD[8443] = 5.71178653E-03;
  COFD[8444] = -2.02693704E+01;
  COFD[8445] = 5.10426133E+00;
  COFD[8446] = -4.41256919E-01;
  COFD[8447] = 1.88737290E-02;
  COFD[8448] = -1.94694206E+01;
  COFD[8449] = 5.43830787E+00;
  COFD[8450] = -4.75472880E-01;
  COFD[8451] = 1.99909996E-02;
  COFD[8452] = -1.57045486E+01;
  COFD[8453] = 3.93614244E+00;
  COFD[8454] = -2.99111497E-01;
  COFD[8455] = 1.30888229E-02;
  COFD[8456] = -1.90946650E+01;
  COFD[8457] = 4.84384483E+00;
  COFD[8458] = -4.10265575E-01;
  COFD[8459] = 1.76414287E-02;
  COFD[8460] = -2.05284666E+01;
  COFD[8461] = 5.18417470E+00;
  COFD[8462] = -4.49491573E-01;
  COFD[8463] = 1.91438508E-02;
  COFD[8464] = -1.91168913E+01;
  COFD[8465] = 4.84384483E+00;
  COFD[8466] = -4.10265575E-01;
  COFD[8467] = 1.76414287E-02;
  COFD[8468] = -1.87452995E+01;
  COFD[8469] = 3.96926341E+00;
  COFD[8470] = -2.16412264E-01;
  COFD[8471] = 6.06012078E-03;
  COFD[8472] = -2.03014971E+01;
  COFD[8473] = 5.11106992E+00;
  COFD[8474] = -4.42047129E-01;
  COFD[8475] = 1.89042990E-02;
  COFD[8476] = -2.01009300E+01;
  COFD[8477] = 4.41511629E+00;
  COFD[8478] = -2.84086963E-01;
  COFD[8479] = 9.37586971E-03;
  COFD[8480] = -2.22235050E+01;
  COFD[8481] = 5.54251230E+00;
  COFD[8482] = -4.70946314E-01;
  COFD[8483] = 1.90785869E-02;
  COFD[8484] = -2.11667588E+01;
  COFD[8485] = 5.42846112E+00;
  COFD[8486] = -4.74321870E-01;
  COFD[8487] = 1.99459749E-02;
  COFD[8488] = -2.11372801E+01;
  COFD[8489] = 5.41773516E+00;
  COFD[8490] = -4.73414338E-01;
  COFD[8491] = 1.99258685E-02;
  COFD[8492] = -2.05373910E+01;
  COFD[8493] = 5.18417470E+00;
  COFD[8494] = -4.49491573E-01;
  COFD[8495] = 1.91438508E-02;
  COFD[8496] = -2.05459343E+01;
  COFD[8497] = 5.18417470E+00;
  COFD[8498] = -4.49491573E-01;
  COFD[8499] = 1.91438508E-02;
  COFD[8500] = -2.01111534E+01;
  COFD[8501] = 4.41511629E+00;
  COFD[8502] = -2.84086963E-01;
  COFD[8503] = 9.37586971E-03;
  COFD[8504] = -2.09320530E+01;
  COFD[8505] = 4.82184721E+00;
  COFD[8506] = -3.48128875E-01;
  COFD[8507] = 1.25918978E-02;
  COFD[8508] = -2.22526128E+01;
  COFD[8509] = 5.53139819E+00;
  COFD[8510] = -4.68828555E-01;
  COFD[8511] = 1.89597887E-02;
  COFD[8512] = -2.20490726E+01;
  COFD[8513] = 5.56049839E+00;
  COFD[8514] = -4.74367872E-01;
  COFD[8515] = 1.92702787E-02;
  COFD[8516] = -2.22424107E+01;
  COFD[8517] = 5.53139819E+00;
  COFD[8518] = -4.68828555E-01;
  COFD[8519] = 1.89597887E-02;
  COFD[8520] = -2.20351044E+01;
  COFD[8521] = 5.49663315E+00;
  COFD[8522] = -4.61182837E-01;
  COFD[8523] = 1.85035558E-02;
  COFD[8524] = -2.20469560E+01;
  COFD[8525] = 5.49663315E+00;
  COFD[8526] = -4.61182837E-01;
  COFD[8527] = 1.85035558E-02;
  COFD[8528] = -2.09118417E+01;
  COFD[8529] = 4.72895031E+00;
  COFD[8530] = -3.33332771E-01;
  COFD[8531] = 1.18431478E-02;
  COFD[8532] = -2.12736166E+01;
  COFD[8533] = 5.47935225E+00;
  COFD[8534] = -4.80056796E-01;
  COFD[8535] = 2.01607180E-02;
  COFD[8536] = -2.09178693E+01;
  COFD[8537] = 4.72895031E+00;
  COFD[8538] = -3.33332771E-01;
  COFD[8539] = 1.18431478E-02;
  COFD[8540] = -2.09178693E+01;
  COFD[8541] = 4.72895031E+00;
  COFD[8542] = -3.33332771E-01;
  COFD[8543] = 1.18431478E-02;
  COFD[8544] = -2.09236897E+01;
  COFD[8545] = 4.72895031E+00;
  COFD[8546] = -3.33332771E-01;
  COFD[8547] = 1.18431478E-02;
  COFD[8548] = -2.19705007E+01;
  COFD[8549] = 5.27258289E+00;
  COFD[8550] = -4.21502790E-01;
  COFD[8551] = 1.63611949E-02;
  COFD[8552] = -2.20713063E+01;
  COFD[8553] = 5.34774760E+00;
  COFD[8554] = -4.34239753E-01;
  COFD[8555] = 1.70320676E-02;
  COFD[8556] = -2.19383487E+01;
  COFD[8557] = 5.14570932E+00;
  COFD[8558] = -3.99877142E-01;
  COFD[8559] = 1.52199557E-02;
  COFD[8560] = -2.22662502E+01;
  COFD[8561] = 5.36643605E+00;
  COFD[8562] = -4.37440735E-01;
  COFD[8563] = 1.72016388E-02;
  COFD[8564] = -2.19414442E+01;
  COFD[8565] = 5.15446948E+00;
  COFD[8566] = -4.01332769E-01;
  COFD[8567] = 1.52956262E-02;
  COFD[8568] = -2.19454512E+01;
  COFD[8569] = 5.15446948E+00;
  COFD[8570] = -4.01332769E-01;
  COFD[8571] = 1.52956262E-02;
  COFD[8572] = -2.21024855E+01;
  COFD[8573] = 5.16679492E+00;
  COFD[8574] = -4.03405751E-01;
  COFD[8575] = 1.54041741E-02;
  COFD[8576] = -2.12015139E+01;
  COFD[8577] = 4.73146525E+00;
  COFD[8578] = -3.33731759E-01;
  COFD[8579] = 1.18632925E-02;
  COFD[8580] = -2.11627842E+01;
  COFD[8581] = 4.73295595E+00;
  COFD[8582] = -3.33968375E-01;
  COFD[8583] = 1.18752387E-02;
  COFD[8584] = -2.12873553E+01;
  COFD[8585] = 4.78222428E+00;
  COFD[8586] = -3.41846868E-01;
  COFD[8587] = 1.22746304E-02;
  COFD[8588] = -2.17608073E+01;
  COFD[8589] = 4.93496210E+00;
  COFD[8590] = -3.65981745E-01;
  COFD[8591] = 1.34912948E-02;
  COFD[8592] = -2.18942458E+01;
  COFD[8593] = 4.99907484E+00;
  COFD[8594] = -3.76094627E-01;
  COFD[8595] = 1.40009262E-02;
  COFD[8596] = -2.07191894E+01;
  COFD[8597] = 4.56211059E+00;
  COFD[8598] = -3.06895158E-01;
  COFD[8599] = 1.05100393E-02;
  COFD[8600] = -2.04156211E+01;
  COFD[8601] = 4.50250781E+00;
  COFD[8602] = -2.97622106E-01;
  COFD[8603] = 1.00481473E-02;
  COFD[8604] = -2.04207209E+01;
  COFD[8605] = 4.50250781E+00;
  COFD[8606] = -2.97622106E-01;
  COFD[8607] = 1.00481473E-02;
  COFD[8608] = -2.09442336E+01;
  COFD[8609] = 4.69256593E+00;
  COFD[8610] = -3.27570630E-01;
  COFD[8611] = 1.15525471E-02;
  COFD[8612] = -2.12797032E+01;
  COFD[8613] = 4.76335355E+00;
  COFD[8614] = -3.38814362E-01;
  COFD[8615] = 1.21204360E-02;
  COFD[8616] = -2.14255473E+01;
  COFD[8617] = 4.85433278E+00;
  COFD[8618] = -3.53258974E-01;
  COFD[8619] = 1.28503760E-02;
  COFD[8620] = -2.07313378E+01;
  COFD[8621] = 4.42680848E+00;
  COFD[8622] = -2.85885288E-01;
  COFD[8623] = 9.46483934E-03;
  COFD[8624] = -2.08173130E+01;
  COFD[8625] = 4.42680848E+00;
  COFD[8626] = -2.85885288E-01;
  COFD[8627] = 9.46483934E-03;
  COFD[8628] = -2.07715839E+01;
  COFD[8629] = 4.42680848E+00;
  COFD[8630] = -2.85885288E-01;
  COFD[8631] = 9.46483934E-03;
  COFD[8632] = -2.07715839E+01;
  COFD[8633] = 4.42680848E+00;
  COFD[8634] = -2.85885288E-01;
  COFD[8635] = 9.46483934E-03;
  COFD[8636] = -2.20306689E+01;
  COFD[8637] = 5.31412694E+00;
  COFD[8638] = -4.28473898E-01;
  COFD[8639] = 1.67264841E-02;
  COFD[8640] = -2.19637879E+01;
  COFD[8641] = 5.27258289E+00;
  COFD[8642] = -4.21502790E-01;
  COFD[8643] = 1.63611949E-02;
  COFD[8644] = -2.22259307E+01;
  COFD[8645] = 5.58360799E+00;
  COFD[8646] = -4.82701436E-01;
  COFD[8647] = 1.98437922E-02;
  COFD[8648] = -2.11406636E+01;
  COFD[8649] = 5.42846112E+00;
  COFD[8650] = -4.74321870E-01;
  COFD[8651] = 1.99459749E-02;
  COFD[8652] = -2.11295633E+01;
  COFD[8653] = 4.53343919E+00;
  COFD[8654] = -3.02436183E-01;
  COFD[8655] = 1.02880591E-02;
  COFD[8656] = -2.10185657E+01;
  COFD[8657] = 4.59262341E+00;
  COFD[8658] = -3.11696702E-01;
  COFD[8659] = 1.07507612E-02;
  COFD[8660] = -2.10158845E+01;
  COFD[8661] = 4.59262341E+00;
  COFD[8662] = -3.11696702E-01;
  COFD[8663] = 1.07507612E-02;
  COFD[8664] = -2.11889277E+01;
  COFD[8665] = 4.63801001E+00;
  COFD[8666] = -3.18948840E-01;
  COFD[8667] = 1.11183139E-02;
  COFD[8668] = -2.08712746E+01;
  COFD[8669] = 4.46453406E+00;
  COFD[8670] = -2.91715850E-01;
  COFD[8671] = 9.75402150E-03;
  COFD[8672] = -2.10994691E+01;
  COFD[8673] = 4.53343919E+00;
  COFD[8674] = -3.02436183E-01;
  COFD[8675] = 1.02880591E-02;
  COFD[8676] = -2.10974696E+01;
  COFD[8677] = 4.53343919E+00;
  COFD[8678] = -3.02436183E-01;
  COFD[8679] = 1.02880591E-02;
  COFD[8680] = -2.13703333E+01;
  COFD[8681] = 4.61201872E+00;
  COFD[8682] = -3.14803338E-01;
  COFD[8683] = 1.09082984E-02;
  COFD[8684] = -2.13687841E+01;
  COFD[8685] = 4.61201872E+00;
  COFD[8686] = -3.14803338E-01;
  COFD[8687] = 1.09082984E-02;
  COFD[8688] = -2.13687841E+01;
  COFD[8689] = 4.61201872E+00;
  COFD[8690] = -3.14803338E-01;
  COFD[8691] = 1.09082984E-02;
  COFD[8692] = -2.13687841E+01;
  COFD[8693] = 4.61201872E+00;
  COFD[8694] = -3.14803338E-01;
  COFD[8695] = 1.09082984E-02;
  COFD[8696] = -2.13687841E+01;
  COFD[8697] = 4.61201872E+00;
  COFD[8698] = -3.14803338E-01;
  COFD[8699] = 1.09082984E-02;
  COFD[8700] = -2.13664998E+01;
  COFD[8701] = 4.62003574E+00;
  COFD[8702] = -3.16085261E-01;
  COFD[8703] = 1.09733113E-02;
  COFD[8704] = -2.13664998E+01;
  COFD[8705] = 4.62003574E+00;
  COFD[8706] = -3.16085261E-01;
  COFD[8707] = 1.09733113E-02;
  COFD[8708] = -2.02634463E+01;
  COFD[8709] = 4.04040564E+00;
  COFD[8710] = -2.27103382E-01;
  COFD[8711] = 6.58016011E-03;
  COFD[8712] = -2.02634463E+01;
  COFD[8713] = 4.04040564E+00;
  COFD[8714] = -2.27103382E-01;
  COFD[8715] = 6.58016011E-03;
  COFD[8716] = -2.02634463E+01;
  COFD[8717] = 4.04040564E+00;
  COFD[8718] = -2.27103382E-01;
  COFD[8719] = 6.58016011E-03;
  COFD[8720] = -2.02634463E+01;
  COFD[8721] = 4.04040564E+00;
  COFD[8722] = -2.27103382E-01;
  COFD[8723] = 6.58016011E-03;
  COFD[8724] = -2.02634463E+01;
  COFD[8725] = 4.04040564E+00;
  COFD[8726] = -2.27103382E-01;
  COFD[8727] = 6.58016011E-03;
  COFD[8728] = -2.02634463E+01;
  COFD[8729] = 4.04040564E+00;
  COFD[8730] = -2.27103382E-01;
  COFD[8731] = 6.58016011E-03;
  COFD[8732] = -2.02634463E+01;
  COFD[8733] = 4.04040564E+00;
  COFD[8734] = -2.27103382E-01;
  COFD[8735] = 6.58016011E-03;
  COFD[8736] = -2.02634463E+01;
  COFD[8737] = 4.04040564E+00;
  COFD[8738] = -2.27103382E-01;
  COFD[8739] = 6.58016011E-03;
  COFD[8740] = -2.02634463E+01;
  COFD[8741] = 4.04040564E+00;
  COFD[8742] = -2.27103382E-01;
  COFD[8743] = 6.58016011E-03;
  COFD[8744] = -2.02634463E+01;
  COFD[8745] = 4.04040564E+00;
  COFD[8746] = -2.27103382E-01;
  COFD[8747] = 6.58016011E-03;
  COFD[8748] = -2.02634463E+01;
  COFD[8749] = 4.04040564E+00;
  COFD[8750] = -2.27103382E-01;
  COFD[8751] = 6.58016011E-03;
  COFD[8752] = -2.02634463E+01;
  COFD[8753] = 4.04040564E+00;
  COFD[8754] = -2.27103382E-01;
  COFD[8755] = 6.58016011E-03;
  COFD[8756] = -2.00370652E+01;
  COFD[8757] = 3.83478342E+00;
  COFD[8758] = -1.95849899E-01;
  COFD[8759] = 5.04983054E-03;
  COFD[8760] = -2.00370652E+01;
  COFD[8761] = 3.83478342E+00;
  COFD[8762] = -1.95849899E-01;
  COFD[8763] = 5.04983054E-03;
  COFD[8764] = -2.00370652E+01;
  COFD[8765] = 3.83478342E+00;
  COFD[8766] = -1.95849899E-01;
  COFD[8767] = 5.04983054E-03;
  COFD[8768] = -2.00370652E+01;
  COFD[8769] = 3.83478342E+00;
  COFD[8770] = -1.95849899E-01;
  COFD[8771] = 5.04983054E-03;
  COFD[8772] = -2.08582944E+01;
  COFD[8773] = 4.33912386E+00;
  COFD[8774] = -2.72408316E-01;
  COFD[8775] = 8.79879099E-03;
  COFD[8776] = -2.08582944E+01;
  COFD[8777] = 4.33912386E+00;
  COFD[8778] = -2.72408316E-01;
  COFD[8779] = 8.79879099E-03;
  COFD[8780] = -2.00683227E+01;
  COFD[8781] = 3.92262843E+00;
  COFD[8782] = -2.09310993E-01;
  COFD[8783] = 5.71178653E-03;
  COFD[8784] = -2.00683227E+01;
  COFD[8785] = 3.92262843E+00;
  COFD[8786] = -2.09310993E-01;
  COFD[8787] = 5.71178653E-03;
  COFD[8788] = -2.00683227E+01;
  COFD[8789] = 3.92262843E+00;
  COFD[8790] = -2.09310993E-01;
  COFD[8791] = 5.71178653E-03;
  COFD[8792] = -2.00683227E+01;
  COFD[8793] = 3.92262843E+00;
  COFD[8794] = -2.09310993E-01;
  COFD[8795] = 5.71178653E-03;
  COFD[8796] = -2.02739012E+01;
  COFD[8797] = 5.10426133E+00;
  COFD[8798] = -4.41256919E-01;
  COFD[8799] = 1.88737290E-02;
  COFD[8800] = -1.87648021E+01;
  COFD[8801] = 5.19146813E+00;
  COFD[8802] = -4.50340408E-01;
  COFD[8803] = 1.91768178E-02;
  COFD[8804] = -1.47725848E+01;
  COFD[8805] = 3.55444478E+00;
  COFD[8806] = -2.50272707E-01;
  COFD[8807] = 1.09990787E-02;
  COFD[8808] = -1.81499706E+01;
  COFD[8809] = 4.48398491E+00;
  COFD[8810] = -3.67097129E-01;
  COFD[8811] = 1.59123634E-02;
  COFD[8812] = -1.95875902E+01;
  COFD[8813] = 4.84393038E+00;
  COFD[8814] = -4.10274737E-01;
  COFD[8815] = 1.76417458E-02;
  COFD[8816] = -1.81716102E+01;
  COFD[8817] = 4.48398491E+00;
  COFD[8818] = -3.67097129E-01;
  COFD[8819] = 1.59123634E-02;
  COFD[8820] = -2.04397387E+01;
  COFD[8821] = 4.77398686E+00;
  COFD[8822] = -3.40522956E-01;
  COFD[8823] = 1.22072846E-02;
  COFD[8824] = -1.93064155E+01;
  COFD[8825] = 4.74387793E+00;
  COFD[8826] = -3.98574972E-01;
  COFD[8827] = 1.71862289E-02;
  COFD[8828] = -2.14354798E+01;
  COFD[8829] = 5.07680397E+00;
  COFD[8830] = -3.88612087E-01;
  COFD[8831] = 1.46395101E-02;
  COFD[8832] = -2.21697345E+01;
  COFD[8833] = 5.60807471E+00;
  COFD[8834] = -4.91339309E-01;
  COFD[8835] = 2.04365761E-02;
  COFD[8836] = -2.04309546E+01;
  COFD[8837] = 5.18271974E+00;
  COFD[8838] = -4.49323627E-01;
  COFD[8839] = 1.91373940E-02;
  COFD[8840] = -2.03775647E+01;
  COFD[8841] = 5.16159436E+00;
  COFD[8842] = -4.46935283E-01;
  COFD[8843] = 1.90480297E-02;
  COFD[8844] = -1.95961528E+01;
  COFD[8845] = 4.84393038E+00;
  COFD[8846] = -4.10274737E-01;
  COFD[8847] = 1.76417458E-02;
  COFD[8848] = -1.96043439E+01;
  COFD[8849] = 4.84393038E+00;
  COFD[8850] = -4.10274737E-01;
  COFD[8851] = 1.76417458E-02;
  COFD[8852] = -2.14453106E+01;
  COFD[8853] = 5.07680397E+00;
  COFD[8854] = -3.88612087E-01;
  COFD[8855] = 1.46395101E-02;
  COFD[8856] = -2.19160916E+01;
  COFD[8857] = 5.33587903E+00;
  COFD[8858] = -4.32204887E-01;
  COFD[8859] = 1.69242106E-02;
  COFD[8860] = -2.22317167E+01;
  COFD[8861] = 5.61211818E+00;
  COFD[8862] = -4.91432482E-01;
  COFD[8863] = 2.04238731E-02;
  COFD[8864] = -2.19501274E+01;
  COFD[8865] = 5.60255148E+00;
  COFD[8866] = -4.91366572E-01;
  COFD[8867] = 2.04670553E-02;
  COFD[8868] = -2.22219067E+01;
  COFD[8869] = 5.61211818E+00;
  COFD[8870] = -4.91432482E-01;
  COFD[8871] = 2.04238731E-02;
  COFD[8872] = -2.20606520E+01;
  COFD[8873] = 5.59649805E+00;
  COFD[8874] = -4.86750336E-01;
  COFD[8875] = 2.01151498E-02;
  COFD[8876] = -2.20720762E+01;
  COFD[8877] = 5.59649805E+00;
  COFD[8878] = -4.86750336E-01;
  COFD[8879] = 2.01151498E-02;
  COFD[8880] = -2.19592081E+01;
  COFD[8881] = 5.27258289E+00;
  COFD[8882] = -4.21502790E-01;
  COFD[8883] = 1.63611949E-02;
  COFD[8884] = -2.05422229E+01;
  COFD[8885] = 5.23500188E+00;
  COFD[8886] = -4.55417380E-01;
  COFD[8887] = 1.93744255E-02;
  COFD[8888] = -2.19649547E+01;
  COFD[8889] = 5.27258289E+00;
  COFD[8890] = -4.21502790E-01;
  COFD[8891] = 1.63611949E-02;
  COFD[8892] = -2.19649547E+01;
  COFD[8893] = 5.27258289E+00;
  COFD[8894] = -4.21502790E-01;
  COFD[8895] = 1.63611949E-02;
  COFD[8896] = -2.19705007E+01;
  COFD[8897] = 5.27258289E+00;
  COFD[8898] = -4.21502790E-01;
  COFD[8899] = 1.63611949E-02;
  COFD[8900] = -2.23915371E+01;
  COFD[8901] = 5.54890339E+00;
  COFD[8902] = -4.72166228E-01;
  COFD[8903] = 1.91470071E-02;
  COFD[8904] = -2.23996814E+01;
  COFD[8905] = 5.58325398E+00;
  COFD[8906] = -4.79084067E-01;
  COFD[8907] = 1.95452935E-02;
  COFD[8908] = -2.25218978E+01;
  COFD[8909] = 5.49554403E+00;
  COFD[8910] = -4.60936491E-01;
  COFD[8911] = 1.84887572E-02;
  COFD[8912] = -2.25490805E+01;
  COFD[8913] = 5.58482894E+00;
  COFD[8914] = -4.79850522E-01;
  COFD[8915] = 1.96007690E-02;
  COFD[8916] = -2.25102540E+01;
  COFD[8917] = 5.49776513E+00;
  COFD[8918] = -4.61463030E-01;
  COFD[8919] = 1.85209236E-02;
  COFD[8920] = -2.25140502E+01;
  COFD[8921] = 5.49776513E+00;
  COFD[8922] = -4.61463030E-01;
  COFD[8923] = 1.85209236E-02;
  COFD[8924] = -2.26435356E+01;
  COFD[8925] = 5.50023958E+00;
  COFD[8926] = -4.62136179E-01;
  COFD[8927] = 1.85639061E-02;
  COFD[8928] = -2.22347770E+01;
  COFD[8929] = 5.27396115E+00;
  COFD[8930] = -4.21743832E-01;
  COFD[8931] = 1.63741124E-02;
  COFD[8932] = -2.21958736E+01;
  COFD[8933] = 5.27478556E+00;
  COFD[8934] = -4.21888131E-01;
  COFD[8935] = 1.63818487E-02;
  COFD[8936] = -2.22922989E+01;
  COFD[8937] = 5.31274238E+00;
  COFD[8938] = -4.28240794E-01;
  COFD[8939] = 1.67142592E-02;
  COFD[8940] = -2.25972030E+01;
  COFD[8941] = 5.39655717E+00;
  COFD[8942] = -4.42728390E-01;
  COFD[8943] = 1.74857336E-02;
  COFD[8944] = -2.26354540E+01;
  COFD[8945] = 5.42002683E+00;
  COFD[8946] = -4.47111163E-01;
  COFD[8947] = 1.77287360E-02;
  COFD[8948] = -2.19196211E+01;
  COFD[8949] = 5.17305355E+00;
  COFD[8950] = -4.04451717E-01;
  COFD[8951] = 1.54587933E-02;
  COFD[8952] = -2.16791463E+01;
  COFD[8953] = 5.13708607E+00;
  COFD[8954] = -3.98445708E-01;
  COFD[8955] = 1.51455626E-02;
  COFD[8956] = -2.16839956E+01;
  COFD[8957] = 5.13708607E+00;
  COFD[8958] = -3.98445708E-01;
  COFD[8959] = 1.51455626E-02;
  COFD[8960] = -2.20261329E+01;
  COFD[8961] = 5.25283972E+00;
  COFD[8962] = -4.18059393E-01;
  COFD[8963] = 1.61770209E-02;
  COFD[8964] = -2.22910823E+01;
  COFD[8965] = 5.29692971E+00;
  COFD[8966] = -4.25616224E-01;
  COFD[8967] = 1.65776192E-02;
  COFD[8968] = -2.23595988E+01;
  COFD[8969] = 5.35454862E+00;
  COFD[8970] = -4.35406212E-01;
  COFD[8971] = 1.70939045E-02;
  COFD[8972] = -2.20309308E+01;
  COFD[8973] = 5.08417640E+00;
  COFD[8974] = -3.89810534E-01;
  COFD[8975] = 1.47010214E-02;
  COFD[8976] = -2.21115037E+01;
  COFD[8977] = 5.08417640E+00;
  COFD[8978] = -3.89810534E-01;
  COFD[8979] = 1.47010214E-02;
  COFD[8980] = -2.20687562E+01;
  COFD[8981] = 5.08417640E+00;
  COFD[8982] = -3.89810534E-01;
  COFD[8983] = 1.47010214E-02;
  COFD[8984] = -2.20687562E+01;
  COFD[8985] = 5.08417640E+00;
  COFD[8986] = -3.89810534E-01;
  COFD[8987] = 1.47010214E-02;
  COFD[8988] = -2.24083138E+01;
  COFD[8989] = 5.57115285E+00;
  COFD[8990] = -4.76363416E-01;
  COFD[8991] = 1.93814080E-02;
  COFD[8992] = -2.23851263E+01;
  COFD[8993] = 5.54890339E+00;
  COFD[8994] = -4.72166228E-01;
  COFD[8995] = 1.91470071E-02;
  COFD[8996] = -2.18815126E+01;
  COFD[8997] = 5.52126150E+00;
  COFD[8998] = -4.84589774E-01;
  COFD[8999] = 2.03215822E-02;
  COFD[9000] = -2.04054879E+01;
  COFD[9001] = 5.18271974E+00;
  COFD[9002] = -4.49323627E-01;
  COFD[9003] = 1.91373940E-02;
  COFD[9004] = -2.23382846E+01;
  COFD[9005] = 5.15611601E+00;
  COFD[9006] = -4.01609601E-01;
  COFD[9007] = 1.53101184E-02;
  COFD[9008] = -2.21898778E+01;
  COFD[9009] = 5.19585793E+00;
  COFD[9010] = -4.08227614E-01;
  COFD[9011] = 1.56549949E-02;
  COFD[9012] = -2.21873523E+01;
  COFD[9013] = 5.19585793E+00;
  COFD[9014] = -4.08227614E-01;
  COFD[9015] = 1.56549949E-02;
  COFD[9016] = -2.23217083E+01;
  COFD[9017] = 5.22583604E+00;
  COFD[9018] = -4.13310911E-01;
  COFD[9019] = 1.59222338E-02;
  COFD[9020] = -2.21424076E+01;
  COFD[9021] = 5.11134594E+00;
  COFD[9022] = -3.94210281E-01;
  COFD[9023] = 1.49264980E-02;
  COFD[9024] = -2.23101033E+01;
  COFD[9025] = 5.15611601E+00;
  COFD[9026] = -4.01609601E-01;
  COFD[9027] = 1.53101184E-02;
  COFD[9028] = -2.23082271E+01;
  COFD[9029] = 5.15611601E+00;
  COFD[9030] = -4.01609601E-01;
  COFD[9031] = 1.53101184E-02;
  COFD[9032] = -2.25175283E+01;
  COFD[9033] = 5.21003123E+00;
  COFD[9034] = -4.10612564E-01;
  COFD[9035] = 1.57798598E-02;
  COFD[9036] = -2.25160792E+01;
  COFD[9037] = 5.21003123E+00;
  COFD[9038] = -4.10612564E-01;
  COFD[9039] = 1.57798598E-02;
  COFD[9040] = -2.25160792E+01;
  COFD[9041] = 5.21003123E+00;
  COFD[9042] = -4.10612564E-01;
  COFD[9043] = 1.57798598E-02;
  COFD[9044] = -2.25160792E+01;
  COFD[9045] = 5.21003123E+00;
  COFD[9046] = -4.10612564E-01;
  COFD[9047] = 1.57798598E-02;
  COFD[9048] = -2.25160792E+01;
  COFD[9049] = 5.21003123E+00;
  COFD[9050] = -4.10612564E-01;
  COFD[9051] = 1.57798598E-02;
  COFD[9052] = -2.25078311E+01;
  COFD[9053] = 5.21520631E+00;
  COFD[9054] = -4.11491487E-01;
  COFD[9055] = 1.58260843E-02;
  COFD[9056] = -2.25078311E+01;
  COFD[9057] = 5.21520631E+00;
  COFD[9058] = -4.11491487E-01;
  COFD[9059] = 1.58260843E-02;
  COFD[9060] = -2.18339999E+01;
  COFD[9061] = 4.81663452E+00;
  COFD[9062] = -3.47310112E-01;
  COFD[9063] = 1.25507777E-02;
  COFD[9064] = -2.18339999E+01;
  COFD[9065] = 4.81663452E+00;
  COFD[9066] = -3.47310112E-01;
  COFD[9067] = 1.25507777E-02;
  COFD[9068] = -2.18339999E+01;
  COFD[9069] = 4.81663452E+00;
  COFD[9070] = -3.47310112E-01;
  COFD[9071] = 1.25507777E-02;
  COFD[9072] = -2.18339999E+01;
  COFD[9073] = 4.81663452E+00;
  COFD[9074] = -3.47310112E-01;
  COFD[9075] = 1.25507777E-02;
  COFD[9076] = -2.18339999E+01;
  COFD[9077] = 4.81663452E+00;
  COFD[9078] = -3.47310112E-01;
  COFD[9079] = 1.25507777E-02;
  COFD[9080] = -2.18339999E+01;
  COFD[9081] = 4.81663452E+00;
  COFD[9082] = -3.47310112E-01;
  COFD[9083] = 1.25507777E-02;
  COFD[9084] = -2.18339999E+01;
  COFD[9085] = 4.81663452E+00;
  COFD[9086] = -3.47310112E-01;
  COFD[9087] = 1.25507777E-02;
  COFD[9088] = -2.18339999E+01;
  COFD[9089] = 4.81663452E+00;
  COFD[9090] = -3.47310112E-01;
  COFD[9091] = 1.25507777E-02;
  COFD[9092] = -2.18339999E+01;
  COFD[9093] = 4.81663452E+00;
  COFD[9094] = -3.47310112E-01;
  COFD[9095] = 1.25507777E-02;
  COFD[9096] = -2.18339999E+01;
  COFD[9097] = 4.81663452E+00;
  COFD[9098] = -3.47310112E-01;
  COFD[9099] = 1.25507777E-02;
  COFD[9100] = -2.18339999E+01;
  COFD[9101] = 4.81663452E+00;
  COFD[9102] = -3.47310112E-01;
  COFD[9103] = 1.25507777E-02;
  COFD[9104] = -2.18339999E+01;
  COFD[9105] = 4.81663452E+00;
  COFD[9106] = -3.47310112E-01;
  COFD[9107] = 1.25507777E-02;
  COFD[9108] = -2.17464159E+01;
  COFD[9109] = 4.67107646E+00;
  COFD[9110] = -3.24176152E-01;
  COFD[9111] = 1.13816368E-02;
  COFD[9112] = -2.17464159E+01;
  COFD[9113] = 4.67107646E+00;
  COFD[9114] = -3.24176152E-01;
  COFD[9115] = 1.13816368E-02;
  COFD[9116] = -2.17464159E+01;
  COFD[9117] = 4.67107646E+00;
  COFD[9118] = -3.24176152E-01;
  COFD[9119] = 1.13816368E-02;
  COFD[9120] = -2.17464159E+01;
  COFD[9121] = 4.67107646E+00;
  COFD[9122] = -3.24176152E-01;
  COFD[9123] = 1.13816368E-02;
  COFD[9124] = -2.22169741E+01;
  COFD[9125] = 5.02646284E+00;
  COFD[9126] = -3.80470432E-01;
  COFD[9127] = 1.42230195E-02;
  COFD[9128] = -2.22169741E+01;
  COFD[9129] = 5.02646284E+00;
  COFD[9130] = -3.80470432E-01;
  COFD[9131] = 1.42230195E-02;
  COFD[9132] = -2.17442970E+01;
  COFD[9133] = 4.74371045E+00;
  COFD[9134] = -3.35675372E-01;
  COFD[9135] = 1.19614146E-02;
  COFD[9136] = -2.17442970E+01;
  COFD[9137] = 4.74371045E+00;
  COFD[9138] = -3.35675372E-01;
  COFD[9139] = 1.19614146E-02;
  COFD[9140] = -2.17442970E+01;
  COFD[9141] = 4.74371045E+00;
  COFD[9142] = -3.35675372E-01;
  COFD[9143] = 1.19614146E-02;
  COFD[9144] = -2.17442970E+01;
  COFD[9145] = 4.74371045E+00;
  COFD[9146] = -3.35675372E-01;
  COFD[9147] = 1.19614146E-02;
  COFD[9148] = -1.92783945E+01;
  COFD[9149] = 4.73660584E+00;
  COFD[9150] = -3.97704978E-01;
  COFD[9151] = 1.71514887E-02;
  COFD[9152] = -1.85748704E+01;
  COFD[9153] = 5.14789919E+00;
  COFD[9154] = -4.45930850E-01;
  COFD[9155] = 1.90363341E-02;
  COFD[9156] = -1.45715952E+01;
  COFD[9157] = 3.49477850E+00;
  COFD[9158] = -2.42635772E-01;
  COFD[9159] = 1.06721490E-02;
  COFD[9160] = -1.79361074E+01;
  COFD[9161] = 4.42139452E+00;
  COFD[9162] = -3.59567329E-01;
  COFD[9163] = 1.56103969E-02;
  COFD[9164] = -1.93917227E+01;
  COFD[9165] = 4.78708023E+00;
  COFD[9166] = -4.03693144E-01;
  COFD[9167] = 1.73884817E-02;
  COFD[9168] = -1.79580536E+01;
  COFD[9169] = 4.42139452E+00;
  COFD[9170] = -3.59567329E-01;
  COFD[9171] = 1.56103969E-02;
  COFD[9172] = -2.06310242E+01;
  COFD[9173] = 4.89289496E+00;
  COFD[9174] = -3.59346263E-01;
  COFD[9175] = 1.31570901E-02;
  COFD[9176] = -1.91118387E+01;
  COFD[9177] = 4.68715685E+00;
  COFD[9178] = -3.91979493E-01;
  COFD[9179] = 1.69314004E-02;
  COFD[9180] = -2.15702394E+01;
  COFD[9181] = 5.16868516E+00;
  COFD[9182] = -4.03721581E-01;
  COFD[9183] = 1.54206640E-02;
  COFD[9184] = -2.20725828E+01;
  COFD[9185] = 5.59642965E+00;
  COFD[9186] = -4.91577716E-01;
  COFD[9187] = 2.05159582E-02;
  COFD[9188] = -2.02692375E+01;
  COFD[9189] = 5.14418672E+00;
  COFD[9190] = -4.45631004E-01;
  COFD[9191] = 1.90308403E-02;
  COFD[9192] = -2.02318656E+01;
  COFD[9193] = 5.12963391E+00;
  COFD[9194] = -4.44146826E-01;
  COFD[9195] = 1.89829640E-02;
  COFD[9196] = -1.94004730E+01;
  COFD[9197] = 4.78708023E+00;
  COFD[9198] = -4.03693144E-01;
  COFD[9199] = 1.73884817E-02;
  COFD[9200] = -1.94088469E+01;
  COFD[9201] = 4.78708023E+00;
  COFD[9202] = -4.03693144E-01;
  COFD[9203] = 1.73884817E-02;
  COFD[9204] = -2.15802742E+01;
  COFD[9205] = 5.16868516E+00;
  COFD[9206] = -4.03721581E-01;
  COFD[9207] = 1.54206640E-02;
  COFD[9208] = -2.19873490E+01;
  COFD[9209] = 5.39977369E+00;
  COFD[9210] = -4.43340854E-01;
  COFD[9211] = 1.75199613E-02;
  COFD[9212] = -2.21343012E+01;
  COFD[9213] = 5.60010742E+00;
  COFD[9214] = -4.91597429E-01;
  COFD[9215] = 2.04987718E-02;
  COFD[9216] = -2.18222678E+01;
  COFD[9217] = 5.57940140E+00;
  COFD[9218] = -4.89964112E-01;
  COFD[9219] = 2.04689539E-02;
  COFD[9220] = -2.21242875E+01;
  COFD[9221] = 5.60010742E+00;
  COFD[9222] = -4.91597429E-01;
  COFD[9223] = 2.04987718E-02;
  COFD[9224] = -2.20228316E+01;
  COFD[9225] = 5.61211028E+00;
  COFD[9226] = -4.90893171E-01;
  COFD[9227] = 2.03793118E-02;
  COFD[9228] = -2.20344781E+01;
  COFD[9229] = 5.61211028E+00;
  COFD[9230] = -4.90893171E-01;
  COFD[9231] = 2.03793118E-02;
  COFD[9232] = -2.20597265E+01;
  COFD[9233] = 5.34774760E+00;
  COFD[9234] = -4.34239753E-01;
  COFD[9235] = 1.70320676E-02;
  COFD[9236] = -2.03116223E+01;
  COFD[9237] = 5.16758304E+00;
  COFD[9238] = -4.47606321E-01;
  COFD[9239] = 1.90728318E-02;
  COFD[9240] = -2.20656185E+01;
  COFD[9241] = 5.34774760E+00;
  COFD[9242] = -4.34239753E-01;
  COFD[9243] = 1.70320676E-02;
  COFD[9244] = -2.20656185E+01;
  COFD[9245] = 5.34774760E+00;
  COFD[9246] = -4.34239753E-01;
  COFD[9247] = 1.70320676E-02;
  COFD[9248] = -2.20713063E+01;
  COFD[9249] = 5.34774760E+00;
  COFD[9250] = -4.34239753E-01;
  COFD[9251] = 1.70320676E-02;
  COFD[9252] = -2.23996814E+01;
  COFD[9253] = 5.58325398E+00;
  COFD[9254] = -4.79084067E-01;
  COFD[9255] = 1.95452935E-02;
  COFD[9256] = -2.23318332E+01;
  COFD[9257] = 5.58508387E+00;
  COFD[9258] = -4.81385216E-01;
  COFD[9259] = 1.97267369E-02;
  COFD[9260] = -2.25041713E+01;
  COFD[9261] = 5.51797622E+00;
  COFD[9262] = -4.66229499E-01;
  COFD[9263] = 1.88128348E-02;
  COFD[9264] = -2.24797356E+01;
  COFD[9265] = 5.58492389E+00;
  COFD[9266] = -4.81921515E-01;
  COFD[9267] = 1.97721229E-02;
  COFD[9268] = -2.24965266E+01;
  COFD[9269] = 5.52198915E+00;
  COFD[9270] = -4.67014474E-01;
  COFD[9271] = 1.88574253E-02;
  COFD[9272] = -2.25004315E+01;
  COFD[9273] = 5.52198915E+00;
  COFD[9274] = -4.67014474E-01;
  COFD[9275] = 1.88574253E-02;
  COFD[9276] = -2.26410997E+01;
  COFD[9277] = 5.52830072E+00;
  COFD[9278] = -4.68235018E-01;
  COFD[9279] = 1.89263933E-02;
  COFD[9280] = -2.23410217E+01;
  COFD[9281] = 5.34922714E+00;
  COFD[9282] = -4.34493448E-01;
  COFD[9283] = 1.70455159E-02;
  COFD[9284] = -2.23016572E+01;
  COFD[9285] = 5.35011565E+00;
  COFD[9286] = -4.34645805E-01;
  COFD[9287] = 1.70535925E-02;
  COFD[9288] = -2.23848040E+01;
  COFD[9289] = 5.38201882E+00;
  COFD[9290] = -4.40123984E-01;
  COFD[9291] = 1.73443386E-02;
  COFD[9292] = -2.26485292E+01;
  COFD[9293] = 5.44696782E+00;
  COFD[9294] = -4.51976837E-01;
  COFD[9295] = 1.79942461E-02;
  COFD[9296] = -2.26946847E+01;
  COFD[9297] = 5.47392239E+00;
  COFD[9298] = -4.56882004E-01;
  COFD[9299] = 1.82631638E-02;
  COFD[9300] = -2.20174582E+01;
  COFD[9301] = 5.24609974E+00;
  COFD[9302] = -4.16866354E-01;
  COFD[9303] = 1.61128051E-02;
  COFD[9304] = -2.17934534E+01;
  COFD[9305] = 5.21869603E+00;
  COFD[9306] = -4.12084772E-01;
  COFD[9307] = 1.58573035E-02;
  COFD[9308] = -2.17984322E+01;
  COFD[9309] = 5.21869603E+00;
  COFD[9310] = -4.12084772E-01;
  COFD[9311] = 1.58573035E-02;
  COFD[9312] = -2.21257487E+01;
  COFD[9313] = 5.32681378E+00;
  COFD[9314] = -4.30645652E-01;
  COFD[9315] = 1.68414172E-02;
  COFD[9316] = -2.23917155E+01;
  COFD[9317] = 5.36950965E+00;
  COFD[9318] = -4.37964117E-01;
  COFD[9319] = 1.72292927E-02;
  COFD[9320] = -2.24242060E+01;
  COFD[9321] = 5.41204570E+00;
  COFD[9322] = -4.45647651E-01;
  COFD[9323] = 1.76482725E-02;
  COFD[9324] = -2.21748779E+01;
  COFD[9325] = 5.17488844E+00;
  COFD[9326] = -4.04758505E-01;
  COFD[9327] = 1.54748177E-02;
  COFD[9328] = -2.22582221E+01;
  COFD[9329] = 5.17488844E+00;
  COFD[9330] = -4.04758505E-01;
  COFD[9331] = 1.54748177E-02;
  COFD[9332] = -2.22139468E+01;
  COFD[9333] = 5.17488844E+00;
  COFD[9334] = -4.04758505E-01;
  COFD[9335] = 1.54748177E-02;
  COFD[9336] = -2.22139468E+01;
  COFD[9337] = 5.17488844E+00;
  COFD[9338] = -4.04758505E-01;
  COFD[9339] = 1.54748177E-02;
  COFD[9340] = -2.23689607E+01;
  COFD[9341] = 5.58513878E+00;
  COFD[9342] = -4.80389524E-01;
  COFD[9343] = 1.96438689E-02;
  COFD[9344] = -2.23931143E+01;
  COFD[9345] = 5.58325398E+00;
  COFD[9346] = -4.79084067E-01;
  COFD[9347] = 1.95452935E-02;
  COFD[9348] = -2.16647394E+01;
  COFD[9349] = 5.45895254E+00;
  COFD[9350] = -4.77778067E-01;
  COFD[9351] = 2.00763518E-02;
  COFD[9352] = -2.02434420E+01;
  COFD[9353] = 5.14418672E+00;
  COFD[9354] = -4.45631004E-01;
  COFD[9355] = 1.90308403E-02;
  COFD[9356] = -2.24552144E+01;
  COFD[9357] = 5.23331650E+00;
  COFD[9358] = -4.14617872E-01;
  COFD[9359] = 1.59921364E-02;
  COFD[9360] = -2.22761083E+01;
  COFD[9361] = 5.26163797E+00;
  COFD[9362] = -4.19597053E-01;
  COFD[9363] = 1.62593107E-02;
  COFD[9364] = -2.22735028E+01;
  COFD[9365] = 5.26163797E+00;
  COFD[9366] = -4.19597053E-01;
  COFD[9367] = 1.62593107E-02;
  COFD[9368] = -2.24078619E+01;
  COFD[9369] = 5.29135926E+00;
  COFD[9370] = -4.24694811E-01;
  COFD[9371] = 1.65297258E-02;
  COFD[9372] = -2.22792376E+01;
  COFD[9373] = 5.19841133E+00;
  COFD[9374] = -4.08650438E-01;
  COFD[9375] = 1.56769604E-02;
  COFD[9376] = -2.24260521E+01;
  COFD[9377] = 5.23331650E+00;
  COFD[9378] = -4.14617872E-01;
  COFD[9379] = 1.59921364E-02;
  COFD[9380] = -2.24241127E+01;
  COFD[9381] = 5.23331650E+00;
  COFD[9382] = -4.14617872E-01;
  COFD[9383] = 1.59921364E-02;
  COFD[9384] = -2.26044872E+01;
  COFD[9385] = 5.27383847E+00;
  COFD[9386] = -4.21722368E-01;
  COFD[9387] = 1.63729618E-02;
  COFD[9388] = -2.26029868E+01;
  COFD[9389] = 5.27383847E+00;
  COFD[9390] = -4.21722368E-01;
  COFD[9391] = 1.63729618E-02;
  COFD[9392] = -2.26029868E+01;
  COFD[9393] = 5.27383847E+00;
  COFD[9394] = -4.21722368E-01;
  COFD[9395] = 1.63729618E-02;
  COFD[9396] = -2.26029868E+01;
  COFD[9397] = 5.27383847E+00;
  COFD[9398] = -4.21722368E-01;
  COFD[9399] = 1.63729618E-02;
  COFD[9400] = -2.26029868E+01;
  COFD[9401] = 5.27383847E+00;
  COFD[9402] = -4.21722368E-01;
  COFD[9403] = 1.63729618E-02;
  COFD[9404] = -2.25930781E+01;
  COFD[9405] = 5.27849762E+00;
  COFD[9406] = -4.22539748E-01;
  COFD[9407] = 1.64168474E-02;
  COFD[9408] = -2.25930781E+01;
  COFD[9409] = 5.27849762E+00;
  COFD[9410] = -4.22539748E-01;
  COFD[9411] = 1.64168474E-02;
  COFD[9412] = -2.20612721E+01;
  COFD[9413] = 4.93948492E+00;
  COFD[9414] = -3.66694137E-01;
  COFD[9415] = 1.35271560E-02;
  COFD[9416] = -2.20612721E+01;
  COFD[9417] = 4.93948492E+00;
  COFD[9418] = -3.66694137E-01;
  COFD[9419] = 1.35271560E-02;
  COFD[9420] = -2.20612721E+01;
  COFD[9421] = 4.93948492E+00;
  COFD[9422] = -3.66694137E-01;
  COFD[9423] = 1.35271560E-02;
  COFD[9424] = -2.20612721E+01;
  COFD[9425] = 4.93948492E+00;
  COFD[9426] = -3.66694137E-01;
  COFD[9427] = 1.35271560E-02;
  COFD[9428] = -2.20612721E+01;
  COFD[9429] = 4.93948492E+00;
  COFD[9430] = -3.66694137E-01;
  COFD[9431] = 1.35271560E-02;
  COFD[9432] = -2.20612721E+01;
  COFD[9433] = 4.93948492E+00;
  COFD[9434] = -3.66694137E-01;
  COFD[9435] = 1.35271560E-02;
  COFD[9436] = -2.20612721E+01;
  COFD[9437] = 4.93948492E+00;
  COFD[9438] = -3.66694137E-01;
  COFD[9439] = 1.35271560E-02;
  COFD[9440] = -2.20612721E+01;
  COFD[9441] = 4.93948492E+00;
  COFD[9442] = -3.66694137E-01;
  COFD[9443] = 1.35271560E-02;
  COFD[9444] = -2.20612721E+01;
  COFD[9445] = 4.93948492E+00;
  COFD[9446] = -3.66694137E-01;
  COFD[9447] = 1.35271560E-02;
  COFD[9448] = -2.20612721E+01;
  COFD[9449] = 4.93948492E+00;
  COFD[9450] = -3.66694137E-01;
  COFD[9451] = 1.35271560E-02;
  COFD[9452] = -2.20612721E+01;
  COFD[9453] = 4.93948492E+00;
  COFD[9454] = -3.66694137E-01;
  COFD[9455] = 1.35271560E-02;
  COFD[9456] = -2.20612721E+01;
  COFD[9457] = 4.93948492E+00;
  COFD[9458] = -3.66694137E-01;
  COFD[9459] = 1.35271560E-02;
  COFD[9460] = -2.19554952E+01;
  COFD[9461] = 4.78501176E+00;
  COFD[9462] = -3.42294843E-01;
  COFD[9463] = 1.22974338E-02;
  COFD[9464] = -2.19554952E+01;
  COFD[9465] = 4.78501176E+00;
  COFD[9466] = -3.42294843E-01;
  COFD[9467] = 1.22974338E-02;
  COFD[9468] = -2.19554952E+01;
  COFD[9469] = 4.78501176E+00;
  COFD[9470] = -3.42294843E-01;
  COFD[9471] = 1.22974338E-02;
  COFD[9472] = -2.19554952E+01;
  COFD[9473] = 4.78501176E+00;
  COFD[9474] = -3.42294843E-01;
  COFD[9475] = 1.22974338E-02;
  COFD[9476] = -2.23907179E+01;
  COFD[9477] = 5.12724909E+00;
  COFD[9478] = -3.96815577E-01;
  COFD[9479] = 1.50609297E-02;
  COFD[9480] = -2.23907179E+01;
  COFD[9481] = 5.12724909E+00;
  COFD[9482] = -3.96815577E-01;
  COFD[9483] = 1.50609297E-02;
  COFD[9484] = -2.19520650E+01;
  COFD[9485] = 4.85782498E+00;
  COFD[9486] = -3.53809801E-01;
  COFD[9487] = 1.28781197E-02;
  COFD[9488] = -2.19520650E+01;
  COFD[9489] = 4.85782498E+00;
  COFD[9490] = -3.53809801E-01;
  COFD[9491] = 1.28781197E-02;
  COFD[9492] = -2.19520650E+01;
  COFD[9493] = 4.85782498E+00;
  COFD[9494] = -3.53809801E-01;
  COFD[9495] = 1.28781197E-02;
  COFD[9496] = -2.19520650E+01;
  COFD[9497] = 4.85782498E+00;
  COFD[9498] = -3.53809801E-01;
  COFD[9499] = 1.28781197E-02;
  COFD[9500] = -1.90859348E+01;
  COFD[9501] = 4.68079396E+00;
  COFD[9502] = -3.91231550E-01;
  COFD[9503] = 1.69021170E-02;
  COFD[9504] = -1.92784337E+01;
  COFD[9505] = 5.32291505E+00;
  COFD[9506] = -4.65883522E-01;
  COFD[9507] = 1.97916109E-02;
  COFD[9508] = -1.51448435E+01;
  COFD[9509] = 3.64565939E+00;
  COFD[9510] = -2.61726871E-01;
  COFD[9511] = 1.14799244E-02;
  COFD[9512] = -1.86652511E+01;
  COFD[9513] = 4.61260432E+00;
  COFD[9514] = -3.82854484E-01;
  COFD[9515] = 1.65575163E-02;
  COFD[9516] = -2.01315523E+01;
  COFD[9517] = 4.97613338E+00;
  COFD[9518] = -4.26175206E-01;
  COFD[9519] = 1.82809270E-02;
  COFD[9520] = -1.86886611E+01;
  COFD[9521] = 4.61260432E+00;
  COFD[9522] = -3.82854484E-01;
  COFD[9523] = 1.65575163E-02;
  COFD[9524] = -2.02184850E+01;
  COFD[9525] = 4.57152878E+00;
  COFD[9526] = -3.08371263E-01;
  COFD[9527] = 1.05838559E-02;
  COFD[9528] = -1.97709539E+01;
  COFD[9529] = 4.84731557E+00;
  COFD[9530] = -4.10638352E-01;
  COFD[9531] = 1.76543886E-02;
  COFD[9532] = -2.12109166E+01;
  COFD[9533] = 4.87252053E+00;
  COFD[9534] = -3.56127804E-01;
  COFD[9535] = 1.29948788E-02;
  COFD[9536] = -2.23890254E+01;
  COFD[9537] = 5.59178974E+00;
  COFD[9538] = -4.85668031E-01;
  COFD[9539] = 2.00491907E-02;
  COFD[9540] = -2.09490538E+01;
  COFD[9541] = 5.31360223E+00;
  COFD[9542] = -4.64787000E-01;
  COFD[9543] = 1.97483720E-02;
  COFD[9544] = -2.08822485E+01;
  COFD[9545] = 5.28557747E+00;
  COFD[9546] = -4.61402384E-01;
  COFD[9547] = 1.96111546E-02;
  COFD[9548] = -2.01412400E+01;
  COFD[9549] = 4.97613338E+00;
  COFD[9550] = -4.26175206E-01;
  COFD[9551] = 1.82809270E-02;
  COFD[9552] = -2.01505280E+01;
  COFD[9553] = 4.97613338E+00;
  COFD[9554] = -4.26175206E-01;
  COFD[9555] = 1.82809270E-02;
  COFD[9556] = -2.12219625E+01;
  COFD[9557] = 4.87252053E+00;
  COFD[9558] = -3.56127804E-01;
  COFD[9559] = 1.29948788E-02;
  COFD[9560] = -2.18851152E+01;
  COFD[9561] = 5.21365421E+00;
  COFD[9562] = -4.11227771E-01;
  COFD[9563] = 1.58122118E-02;
  COFD[9564] = -2.24120402E+01;
  COFD[9565] = 5.58744076E+00;
  COFD[9566] = -4.84489462E-01;
  COFD[9567] = 1.99733042E-02;
  COFD[9568] = -2.21913373E+01;
  COFD[9569] = 5.60175327E+00;
  COFD[9570] = -4.87953216E-01;
  COFD[9571] = 2.01882171E-02;
  COFD[9572] = -2.24010166E+01;
  COFD[9573] = 5.58744076E+00;
  COFD[9574] = -4.84489462E-01;
  COFD[9575] = 1.99733042E-02;
  COFD[9576] = -2.22801140E+01;
  COFD[9577] = 5.58507108E+00;
  COFD[9578] = -4.81395065E-01;
  COFD[9579] = 1.97276199E-02;
  COFD[9580] = -2.22928545E+01;
  COFD[9581] = 5.58507108E+00;
  COFD[9582] = -4.81395065E-01;
  COFD[9583] = 1.97276199E-02;
  COFD[9584] = -2.19253045E+01;
  COFD[9585] = 5.14570932E+00;
  COFD[9586] = -3.99877142E-01;
  COFD[9587] = 1.52199557E-02;
  COFD[9588] = -2.10848951E+01;
  COFD[9589] = 5.35335833E+00;
  COFD[9590] = -4.69065665E-01;
  COFD[9591] = 1.98989604E-02;
  COFD[9592] = -2.19319368E+01;
  COFD[9593] = 5.14570932E+00;
  COFD[9594] = -3.99877142E-01;
  COFD[9595] = 1.52199557E-02;
  COFD[9596] = -2.19319368E+01;
  COFD[9597] = 5.14570932E+00;
  COFD[9598] = -3.99877142E-01;
  COFD[9599] = 1.52199557E-02;
  COFD[9600] = -2.19383487E+01;
  COFD[9601] = 5.14570932E+00;
  COFD[9602] = -3.99877142E-01;
  COFD[9603] = 1.52199557E-02;
  COFD[9604] = -2.25218978E+01;
  COFD[9605] = 5.49554403E+00;
  COFD[9606] = -4.60936491E-01;
  COFD[9607] = 1.84887572E-02;
  COFD[9608] = -2.25041713E+01;
  COFD[9609] = 5.51797622E+00;
  COFD[9610] = -4.66229499E-01;
  COFD[9611] = 1.88128348E-02;
  COFD[9612] = -2.25758592E+01;
  COFD[9613] = 5.40563818E+00;
  COFD[9614] = -4.44444322E-01;
  COFD[9615] = 1.75813146E-02;
  COFD[9616] = -2.26679851E+01;
  COFD[9617] = 5.52852425E+00;
  COFD[9618] = -4.68277964E-01;
  COFD[9619] = 1.89288127E-02;
  COFD[9620] = -2.25715510E+01;
  COFD[9621] = 5.41049872E+00;
  COFD[9622] = -4.45356411E-01;
  COFD[9623] = 1.76320470E-02;
  COFD[9624] = -2.25760208E+01;
  COFD[9625] = 5.41049872E+00;
  COFD[9626] = -4.45356411E-01;
  COFD[9627] = 1.76320470E-02;
  COFD[9628] = -2.27125809E+01;
  COFD[9629] = 5.41826700E+00;
  COFD[9630] = -4.46792049E-01;
  COFD[9631] = 1.77112976E-02;
  COFD[9632] = -2.22041600E+01;
  COFD[9633] = 5.14772649E+00;
  COFD[9634] = -4.00206922E-01;
  COFD[9635] = 1.52369404E-02;
  COFD[9636] = -2.21688071E+01;
  COFD[9637] = 5.14893821E+00;
  COFD[9638] = -4.00405017E-01;
  COFD[9639] = 1.52471428E-02;
  COFD[9640] = -2.22630625E+01;
  COFD[9641] = 5.18692405E+00;
  COFD[9642] = -4.06749330E-01;
  COFD[9643] = 1.55782279E-02;
  COFD[9644] = -2.25720206E+01;
  COFD[9645] = 5.27220175E+00;
  COFD[9646] = -4.21436175E-01;
  COFD[9647] = 1.63576263E-02;
  COFD[9648] = -2.26508814E+01;
  COFD[9649] = 5.31312101E+00;
  COFD[9650] = -4.28304541E-01;
  COFD[9651] = 1.67176023E-02;
  COFD[9652] = -2.17842747E+01;
  COFD[9653] = 5.00373919E+00;
  COFD[9654] = -3.76839143E-01;
  COFD[9655] = 1.40386989E-02;
  COFD[9656] = -2.15102185E+01;
  COFD[9657] = 4.94878244E+00;
  COFD[9658] = -3.68158605E-01;
  COFD[9659] = 1.36008797E-02;
  COFD[9660] = -2.15158620E+01;
  COFD[9661] = 4.94878244E+00;
  COFD[9662] = -3.68158605E-01;
  COFD[9663] = 1.36008797E-02;
  COFD[9664] = -2.19840437E+01;
  COFD[9665] = 5.11887453E+00;
  COFD[9666] = -3.95434196E-01;
  COFD[9667] = 1.49893721E-02;
  COFD[9668] = -2.22591535E+01;
  COFD[9669] = 5.17072863E+00;
  COFD[9670] = -4.04063085E-01;
  COFD[9671] = 1.54384967E-02;
  COFD[9672] = -2.23368701E+01;
  COFD[9673] = 5.23162732E+00;
  COFD[9674] = -4.14322433E-01;
  COFD[9675] = 1.59763256E-02;
  COFD[9676] = -2.18262770E+01;
  COFD[9677] = 4.88180276E+00;
  COFD[9678] = -3.57591995E-01;
  COFD[9679] = 1.30686372E-02;
  COFD[9680] = -2.19245430E+01;
  COFD[9681] = 4.88180276E+00;
  COFD[9682] = -3.57591995E-01;
  COFD[9683] = 1.30686372E-02;
  COFD[9684] = -2.18719768E+01;
  COFD[9685] = 4.88180276E+00;
  COFD[9686] = -3.57591995E-01;
  COFD[9687] = 1.30686372E-02;
  COFD[9688] = -2.18719768E+01;
  COFD[9689] = 4.88180276E+00;
  COFD[9690] = -3.57591995E-01;
  COFD[9691] = 1.30686372E-02;
  COFD[9692] = -2.25060089E+01;
  COFD[9693] = 5.50327119E+00;
  COFD[9694] = -4.63087223E-01;
  COFD[9695] = 1.86271401E-02;
  COFD[9696] = -2.25145389E+01;
  COFD[9697] = 5.49554403E+00;
  COFD[9698] = -4.60936491E-01;
  COFD[9699] = 1.84887572E-02;
  COFD[9700] = -2.22948665E+01;
  COFD[9701] = 5.59185582E+00;
  COFD[9702] = -4.91155812E-01;
  COFD[9703] = 2.05043018E-02;
  COFD[9704] = -2.09217000E+01;
  COFD[9705] = 5.31360223E+00;
  COFD[9706] = -4.64787000E-01;
  COFD[9707] = 1.97483720E-02;
  COFD[9708] = -2.21987648E+01;
  COFD[9709] = 4.97774822E+00;
  COFD[9710] = -3.72720294E-01;
  COFD[9711] = 1.38305040E-02;
  COFD[9712] = -2.20779623E+01;
  COFD[9713] = 5.03148314E+00;
  COFD[9714] = -3.81273736E-01;
  COFD[9715] = 1.42638198E-02;
  COFD[9716] = -2.20749331E+01;
  COFD[9717] = 5.03148314E+00;
  COFD[9718] = -3.81273736E-01;
  COFD[9719] = 1.42638198E-02;
  COFD[9720] = -2.22327276E+01;
  COFD[9721] = 5.07316145E+00;
  COFD[9722] = -3.88019113E-01;
  COFD[9723] = 1.46090553E-02;
  COFD[9724] = -2.19540024E+01;
  COFD[9725] = 4.91357102E+00;
  COFD[9726] = -3.62609215E-01;
  COFD[9727] = 1.33214766E-02;
  COFD[9728] = -2.21643098E+01;
  COFD[9729] = 4.97774822E+00;
  COFD[9730] = -3.72720294E-01;
  COFD[9731] = 1.38305040E-02;
  COFD[9732] = -2.21620311E+01;
  COFD[9733] = 4.97774822E+00;
  COFD[9734] = -3.72720294E-01;
  COFD[9735] = 1.38305040E-02;
  COFD[9736] = -2.24179738E+01;
  COFD[9737] = 5.05061421E+00;
  COFD[9738] = -3.84359196E-01;
  COFD[9739] = 1.44214004E-02;
  COFD[9740] = -2.24161958E+01;
  COFD[9741] = 5.05061421E+00;
  COFD[9742] = -3.84359196E-01;
  COFD[9743] = 1.44214004E-02;
  COFD[9744] = -2.24161958E+01;
  COFD[9745] = 5.05061421E+00;
  COFD[9746] = -3.84359196E-01;
  COFD[9747] = 1.44214004E-02;
  COFD[9748] = -2.24161958E+01;
  COFD[9749] = 5.05061421E+00;
  COFD[9750] = -3.84359196E-01;
  COFD[9751] = 1.44214004E-02;
  COFD[9752] = -2.24161958E+01;
  COFD[9753] = 5.05061421E+00;
  COFD[9754] = -3.84359196E-01;
  COFD[9755] = 1.44214004E-02;
  COFD[9756] = -2.24131659E+01;
  COFD[9757] = 5.05794346E+00;
  COFD[9758] = -3.85546664E-01;
  COFD[9759] = 1.44822215E-02;
  COFD[9760] = -2.24131659E+01;
  COFD[9761] = 5.05794346E+00;
  COFD[9762] = -3.85546664E-01;
  COFD[9763] = 1.44822215E-02;
  COFD[9764] = -2.16378415E+01;
  COFD[9765] = 4.61311728E+00;
  COFD[9766] = -3.14979067E-01;
  COFD[9767] = 1.09172113E-02;
  COFD[9768] = -2.16378415E+01;
  COFD[9769] = 4.61311728E+00;
  COFD[9770] = -3.14979067E-01;
  COFD[9771] = 1.09172113E-02;
  COFD[9772] = -2.16378415E+01;
  COFD[9773] = 4.61311728E+00;
  COFD[9774] = -3.14979067E-01;
  COFD[9775] = 1.09172113E-02;
  COFD[9776] = -2.16378415E+01;
  COFD[9777] = 4.61311728E+00;
  COFD[9778] = -3.14979067E-01;
  COFD[9779] = 1.09172113E-02;
  COFD[9780] = -2.16378415E+01;
  COFD[9781] = 4.61311728E+00;
  COFD[9782] = -3.14979067E-01;
  COFD[9783] = 1.09172113E-02;
  COFD[9784] = -2.16378415E+01;
  COFD[9785] = 4.61311728E+00;
  COFD[9786] = -3.14979067E-01;
  COFD[9787] = 1.09172113E-02;
  COFD[9788] = -2.16378415E+01;
  COFD[9789] = 4.61311728E+00;
  COFD[9790] = -3.14979067E-01;
  COFD[9791] = 1.09172113E-02;
  COFD[9792] = -2.16378415E+01;
  COFD[9793] = 4.61311728E+00;
  COFD[9794] = -3.14979067E-01;
  COFD[9795] = 1.09172113E-02;
  COFD[9796] = -2.16378415E+01;
  COFD[9797] = 4.61311728E+00;
  COFD[9798] = -3.14979067E-01;
  COFD[9799] = 1.09172113E-02;
  COFD[9800] = -2.16378415E+01;
  COFD[9801] = 4.61311728E+00;
  COFD[9802] = -3.14979067E-01;
  COFD[9803] = 1.09172113E-02;
  COFD[9804] = -2.16378415E+01;
  COFD[9805] = 4.61311728E+00;
  COFD[9806] = -3.14979067E-01;
  COFD[9807] = 1.09172113E-02;
  COFD[9808] = -2.16378415E+01;
  COFD[9809] = 4.61311728E+00;
  COFD[9810] = -3.14979067E-01;
  COFD[9811] = 1.09172113E-02;
  COFD[9812] = -2.15096786E+01;
  COFD[9813] = 4.45083355E+00;
  COFD[9814] = -2.89586321E-01;
  COFD[9815] = 9.64806882E-03;
  COFD[9816] = -2.15096786E+01;
  COFD[9817] = 4.45083355E+00;
  COFD[9818] = -2.89586321E-01;
  COFD[9819] = 9.64806882E-03;
  COFD[9820] = -2.15096786E+01;
  COFD[9821] = 4.45083355E+00;
  COFD[9822] = -2.89586321E-01;
  COFD[9823] = 9.64806882E-03;
  COFD[9824] = -2.15096786E+01;
  COFD[9825] = 4.45083355E+00;
  COFD[9826] = -2.89586321E-01;
  COFD[9827] = 9.64806882E-03;
  COFD[9828] = -2.19893626E+01;
  COFD[9829] = 4.81152934E+00;
  COFD[9830] = -3.46508214E-01;
  COFD[9831] = 1.25105009E-02;
  COFD[9832] = -2.19893626E+01;
  COFD[9833] = 4.81152934E+00;
  COFD[9834] = -3.46508214E-01;
  COFD[9835] = 1.25105009E-02;
  COFD[9836] = -2.15338676E+01;
  COFD[9837] = 4.53358618E+00;
  COFD[9838] = -3.02459014E-01;
  COFD[9839] = 1.02891951E-02;
  COFD[9840] = -2.15338676E+01;
  COFD[9841] = 4.53358618E+00;
  COFD[9842] = -3.02459014E-01;
  COFD[9843] = 1.02891951E-02;
  COFD[9844] = -2.15338676E+01;
  COFD[9845] = 4.53358618E+00;
  COFD[9846] = -3.02459014E-01;
  COFD[9847] = 1.02891951E-02;
  COFD[9848] = -2.15338676E+01;
  COFD[9849] = 4.53358618E+00;
  COFD[9850] = -3.02459014E-01;
  COFD[9851] = 1.02891951E-02;
  COFD[9852] = -1.97484237E+01;
  COFD[9853] = 4.84231878E+00;
  COFD[9854] = -4.10101001E-01;
  COFD[9855] = 1.76356687E-02;
  COFD[9856] = -1.87481939E+01;
  COFD[9857] = 5.13858656E+00;
  COFD[9858] = -4.45075387E-01;
  COFD[9859] = 1.90137309E-02;
  COFD[9860] = -1.47138094E+01;
  COFD[9861] = 3.48023191E+00;
  COFD[9862] = -2.40800798E-01;
  COFD[9863] = 1.05947990E-02;
  COFD[9864] = -1.80724704E+01;
  COFD[9865] = 4.40247898E+00;
  COFD[9866] = -3.57238362E-01;
  COFD[9867] = 1.55145651E-02;
  COFD[9868] = -1.95201761E+01;
  COFD[9869] = 4.77151544E+00;
  COFD[9870] = -4.01882811E-01;
  COFD[9871] = 1.73184814E-02;
  COFD[9872] = -1.80945621E+01;
  COFD[9873] = 4.40247898E+00;
  COFD[9874] = -3.57238362E-01;
  COFD[9875] = 1.55145651E-02;
  COFD[9876] = -2.08879106E+01;
  COFD[9877] = 4.92602269E+00;
  COFD[9878] = -3.64572914E-01;
  COFD[9879] = 1.34203681E-02;
  COFD[9880] = -1.92333972E+01;
  COFD[9881] = 4.67033934E+00;
  COFD[9882] = -3.89971551E-01;
  COFD[9883] = 1.68513441E-02;
  COFD[9884] = -2.17825494E+01;
  COFD[9885] = 5.19232842E+00;
  COFD[9886] = -4.07643284E-01;
  COFD[9887] = 1.56246434E-02;
  COFD[9888] = -2.22051951E+01;
  COFD[9889] = 5.58604166E+00;
  COFD[9890] = -4.90602184E-01;
  COFD[9891] = 2.04880352E-02;
  COFD[9892] = -2.03971282E+01;
  COFD[9893] = 5.13279789E+00;
  COFD[9894] = -4.44474174E-01;
  COFD[9895] = 1.89937678E-02;
  COFD[9896] = -2.03526104E+01;
  COFD[9897] = 5.11453301E+00;
  COFD[9898] = -4.42447016E-01;
  COFD[9899] = 1.89196698E-02;
  COFD[9900] = -1.95290165E+01;
  COFD[9901] = 4.77151544E+00;
  COFD[9902] = -4.01882811E-01;
  COFD[9903] = 1.73184814E-02;
  COFD[9904] = -1.95374781E+01;
  COFD[9905] = 4.77151544E+00;
  COFD[9906] = -4.01882811E-01;
  COFD[9907] = 1.73184814E-02;
  COFD[9908] = -2.17926818E+01;
  COFD[9909] = 5.19232842E+00;
  COFD[9910] = -4.07643284E-01;
  COFD[9911] = 1.56246434E-02;
  COFD[9912] = -2.21713895E+01;
  COFD[9913] = 5.41196486E+00;
  COFD[9914] = -4.45632422E-01;
  COFD[9915] = 1.76474237E-02;
  COFD[9916] = -2.22701944E+01;
  COFD[9917] = 5.59632316E+00;
  COFD[9918] = -4.91568011E-01;
  COFD[9919] = 2.05156966E-02;
  COFD[9920] = -2.19617242E+01;
  COFD[9921] = 5.57026255E+00;
  COFD[9922] = -4.89178491E-01;
  COFD[9923] = 2.04505218E-02;
  COFD[9924] = -2.22600832E+01;
  COFD[9925] = 5.59632316E+00;
  COFD[9926] = -4.91568011E-01;
  COFD[9927] = 2.05156966E-02;
  COFD[9928] = -2.21795337E+01;
  COFD[9929] = 5.61233637E+00;
  COFD[9930] = -4.91419253E-01;
  COFD[9931] = 2.04216738E-02;
  COFD[9932] = -2.21912865E+01;
  COFD[9933] = 5.61233637E+00;
  COFD[9934] = -4.91419253E-01;
  COFD[9935] = 2.04216738E-02;
  COFD[9936] = -2.22545318E+01;
  COFD[9937] = 5.36643605E+00;
  COFD[9938] = -4.37440735E-01;
  COFD[9939] = 1.72016388E-02;
  COFD[9940] = -2.04750296E+01;
  COFD[9941] = 5.15745622E+00;
  COFD[9942] = -4.46648283E-01;
  COFD[9943] = 1.90458987E-02;
  COFD[9944] = -2.22604939E+01;
  COFD[9945] = 5.36643605E+00;
  COFD[9946] = -4.37440735E-01;
  COFD[9947] = 1.72016388E-02;
  COFD[9948] = -2.22604939E+01;
  COFD[9949] = 5.36643605E+00;
  COFD[9950] = -4.37440735E-01;
  COFD[9951] = 1.72016388E-02;
  COFD[9952] = -2.22662502E+01;
  COFD[9953] = 5.36643605E+00;
  COFD[9954] = -4.37440735E-01;
  COFD[9955] = 1.72016388E-02;
  COFD[9956] = -2.25490805E+01;
  COFD[9957] = 5.58482894E+00;
  COFD[9958] = -4.79850522E-01;
  COFD[9959] = 1.96007690E-02;
  COFD[9960] = -2.24797356E+01;
  COFD[9961] = 5.58492389E+00;
  COFD[9962] = -4.81921515E-01;
  COFD[9963] = 1.97721229E-02;
  COFD[9964] = -2.26679851E+01;
  COFD[9965] = 5.52852425E+00;
  COFD[9966] = -4.68277964E-01;
  COFD[9967] = 1.89288127E-02;
  COFD[9968] = -2.26149331E+01;
  COFD[9969] = 5.58414475E+00;
  COFD[9970] = -4.82375215E-01;
  COFD[9971] = 1.98138565E-02;
  COFD[9972] = -2.26623017E+01;
  COFD[9973] = 5.53286772E+00;
  COFD[9974] = -4.69109018E-01;
  COFD[9975] = 1.89755392E-02;
  COFD[9976] = -2.26662593E+01;
  COFD[9977] = 5.53286772E+00;
  COFD[9978] = -4.69109018E-01;
  COFD[9979] = 1.89755392E-02;
  COFD[9980] = -2.27989616E+01;
  COFD[9981] = 5.53955653E+00;
  COFD[9982] = -4.70381353E-01;
  COFD[9983] = 1.90468698E-02;
  COFD[9984] = -2.25217644E+01;
  COFD[9985] = 5.36800104E+00;
  COFD[9986] = -4.37707223E-01;
  COFD[9987] = 1.72157190E-02;
  COFD[9988] = -2.24856787E+01;
  COFD[9989] = 5.36894095E+00;
  COFD[9990] = -4.37867275E-01;
  COFD[9991] = 1.72241757E-02;
  COFD[9992] = -2.25569803E+01;
  COFD[9993] = 5.39690645E+00;
  COFD[9994] = -4.42794764E-01;
  COFD[9995] = 1.74894394E-02;
  COFD[9996] = -2.28101215E+01;
  COFD[9997] = 5.46112592E+00;
  COFD[9998] = -4.54556926E-01;
  COFD[9999] = 1.81357650E-02;
  COFD[10000] = -2.28554011E+01;
  COFD[10001] = 5.48796011E+00;
  COFD[10002] = -4.59457942E-01;
  COFD[10003] = 1.84050728E-02;
  COFD[10004] = -2.21991186E+01;
  COFD[10005] = 5.26251942E+00;
  COFD[10006] = -4.19749995E-01;
  COFD[10007] = 1.62674716E-02;
  COFD[10008] = -2.19919420E+01;
  COFD[10009] = 5.23595129E+00;
  COFD[10010] = -4.15079064E-01;
  COFD[10011] = 1.60168286E-02;
  COFD[10012] = -2.19969833E+01;
  COFD[10013] = 5.23595129E+00;
  COFD[10014] = -4.15079064E-01;
  COFD[10015] = 1.60168286E-02;
  COFD[10016] = -2.23178750E+01;
  COFD[10017] = 5.34519349E+00;
  COFD[10018] = -4.33801819E-01;
  COFD[10019] = 1.70088536E-02;
  COFD[10020] = -2.25683318E+01;
  COFD[10021] = 5.38726551E+00;
  COFD[10022] = -4.41046938E-01;
  COFD[10023] = 1.73939950E-02;
  COFD[10024] = -2.25933772E+01;
  COFD[10025] = 5.42562555E+00;
  COFD[10026] = -4.48132861E-01;
  COFD[10027] = 1.77847329E-02;
  COFD[10028] = -2.23631758E+01;
  COFD[10029] = 5.19900179E+00;
  COFD[10030] = -4.08748226E-01;
  COFD[10031] = 1.56820407E-02;
  COFD[10032] = -2.24478745E+01;
  COFD[10033] = 5.19900179E+00;
  COFD[10034] = -4.08748226E-01;
  COFD[10035] = 1.56820407E-02;
  COFD[10036] = -2.24028512E+01;
  COFD[10037] = 5.19900179E+00;
  COFD[10038] = -4.08748226E-01;
  COFD[10039] = 1.56820407E-02;
  COFD[10040] = -2.24028512E+01;
  COFD[10041] = 5.19900179E+00;
  COFD[10042] = -4.08748226E-01;
  COFD[10043] = 1.56820407E-02;
  COFD[10044] = -2.25161193E+01;
  COFD[10045] = 5.58521783E+00;
  COFD[10046] = -4.80947522E-01;
  COFD[10047] = 1.96897222E-02;
  COFD[10048] = -2.25424381E+01;
  COFD[10049] = 5.58482894E+00;
  COFD[10050] = -4.79850522E-01;
  COFD[10051] = 1.96007690E-02;
  COFD[10052] = -2.17764608E+01;
  COFD[10053] = 5.44261208E+00;
  COFD[10054] = -4.75976721E-01;
  COFD[10055] = 2.00107428E-02;
  COFD[10056] = -2.03711770E+01;
  COFD[10057] = 5.13279789E+00;
  COFD[10058] = -4.44474174E-01;
  COFD[10059] = 1.89937678E-02;
  COFD[10060] = -2.26181100E+01;
  COFD[10061] = 5.24929289E+00;
  COFD[10062] = -4.17432640E-01;
  COFD[10063] = 1.61433104E-02;
  COFD[10064] = -2.24517389E+01;
  COFD[10065] = 5.27910031E+00;
  COFD[10066] = -4.22646180E-01;
  COFD[10067] = 1.64225872E-02;
  COFD[10068] = -2.24490944E+01;
  COFD[10069] = 5.27910031E+00;
  COFD[10070] = -4.22646180E-01;
  COFD[10071] = 1.64225872E-02;
  COFD[10072] = -2.25911259E+01;
  COFD[10073] = 5.31446172E+00;
  COFD[10074] = -4.28530261E-01;
  COFD[10075] = 1.67294400E-02;
  COFD[10076] = -2.24557537E+01;
  COFD[10077] = 5.21790203E+00;
  COFD[10078] = -4.11949741E-01;
  COFD[10079] = 1.58501968E-02;
  COFD[10080] = -2.25884680E+01;
  COFD[10081] = 5.24929289E+00;
  COFD[10082] = -4.17432640E-01;
  COFD[10083] = 1.61433104E-02;
  COFD[10084] = -2.25864977E+01;
  COFD[10085] = 5.24929289E+00;
  COFD[10086] = -4.17432640E-01;
  COFD[10087] = 1.61433104E-02;
  COFD[10088] = -2.27731123E+01;
  COFD[10089] = 5.29493402E+00;
  COFD[10090] = -4.25285978E-01;
  COFD[10091] = 1.65604533E-02;
  COFD[10092] = -2.27715868E+01;
  COFD[10093] = 5.29493402E+00;
  COFD[10094] = -4.25285978E-01;
  COFD[10095] = 1.65604533E-02;
  COFD[10096] = -2.27715868E+01;
  COFD[10097] = 5.29493402E+00;
  COFD[10098] = -4.25285978E-01;
  COFD[10099] = 1.65604533E-02;
  COFD[10100] = -2.27715868E+01;
  COFD[10101] = 5.29493402E+00;
  COFD[10102] = -4.25285978E-01;
  COFD[10103] = 1.65604533E-02;
  COFD[10104] = -2.27715868E+01;
  COFD[10105] = 5.29493402E+00;
  COFD[10106] = -4.25285978E-01;
  COFD[10107] = 1.65604533E-02;
  COFD[10108] = -2.27669407E+01;
  COFD[10109] = 5.30142662E+00;
  COFD[10110] = -4.26360102E-01;
  COFD[10111] = 1.66162777E-02;
  COFD[10112] = -2.27669407E+01;
  COFD[10113] = 5.30142662E+00;
  COFD[10114] = -4.26360102E-01;
  COFD[10115] = 1.66162777E-02;
  COFD[10116] = -2.22609630E+01;
  COFD[10117] = 4.97379817E+00;
  COFD[10118] = -3.72099307E-01;
  COFD[10119] = 1.37992814E-02;
  COFD[10120] = -2.22609630E+01;
  COFD[10121] = 4.97379817E+00;
  COFD[10122] = -3.72099307E-01;
  COFD[10123] = 1.37992814E-02;
  COFD[10124] = -2.22609630E+01;
  COFD[10125] = 4.97379817E+00;
  COFD[10126] = -3.72099307E-01;
  COFD[10127] = 1.37992814E-02;
  COFD[10128] = -2.22609630E+01;
  COFD[10129] = 4.97379817E+00;
  COFD[10130] = -3.72099307E-01;
  COFD[10131] = 1.37992814E-02;
  COFD[10132] = -2.22609630E+01;
  COFD[10133] = 4.97379817E+00;
  COFD[10134] = -3.72099307E-01;
  COFD[10135] = 1.37992814E-02;
  COFD[10136] = -2.22609630E+01;
  COFD[10137] = 4.97379817E+00;
  COFD[10138] = -3.72099307E-01;
  COFD[10139] = 1.37992814E-02;
  COFD[10140] = -2.22609630E+01;
  COFD[10141] = 4.97379817E+00;
  COFD[10142] = -3.72099307E-01;
  COFD[10143] = 1.37992814E-02;
  COFD[10144] = -2.22609630E+01;
  COFD[10145] = 4.97379817E+00;
  COFD[10146] = -3.72099307E-01;
  COFD[10147] = 1.37992814E-02;
  COFD[10148] = -2.22609630E+01;
  COFD[10149] = 4.97379817E+00;
  COFD[10150] = -3.72099307E-01;
  COFD[10151] = 1.37992814E-02;
  COFD[10152] = -2.22609630E+01;
  COFD[10153] = 4.97379817E+00;
  COFD[10154] = -3.72099307E-01;
  COFD[10155] = 1.37992814E-02;
  COFD[10156] = -2.22609630E+01;
  COFD[10157] = 4.97379817E+00;
  COFD[10158] = -3.72099307E-01;
  COFD[10159] = 1.37992814E-02;
  COFD[10160] = -2.22609630E+01;
  COFD[10161] = 4.97379817E+00;
  COFD[10162] = -3.72099307E-01;
  COFD[10163] = 1.37992814E-02;
  COFD[10164] = -2.21395163E+01;
  COFD[10165] = 4.81651424E+00;
  COFD[10166] = -3.47291219E-01;
  COFD[10167] = 1.25498287E-02;
  COFD[10168] = -2.21395163E+01;
  COFD[10169] = 4.81651424E+00;
  COFD[10170] = -3.47291219E-01;
  COFD[10171] = 1.25498287E-02;
  COFD[10172] = -2.21395163E+01;
  COFD[10173] = 4.81651424E+00;
  COFD[10174] = -3.47291219E-01;
  COFD[10175] = 1.25498287E-02;
  COFD[10176] = -2.21395163E+01;
  COFD[10177] = 4.81651424E+00;
  COFD[10178] = -3.47291219E-01;
  COFD[10179] = 1.25498287E-02;
  COFD[10180] = -2.25645728E+01;
  COFD[10181] = 5.15063090E+00;
  COFD[10182] = -4.00687742E-01;
  COFD[10183] = 1.52618741E-02;
  COFD[10184] = -2.25645728E+01;
  COFD[10185] = 5.15063090E+00;
  COFD[10186] = -4.00687742E-01;
  COFD[10187] = 1.52618741E-02;
  COFD[10188] = -2.21465586E+01;
  COFD[10189] = 4.89062970E+00;
  COFD[10190] = -3.58987885E-01;
  COFD[10191] = 1.31390176E-02;
  COFD[10192] = -2.21465586E+01;
  COFD[10193] = 4.89062970E+00;
  COFD[10194] = -3.58987885E-01;
  COFD[10195] = 1.31390176E-02;
  COFD[10196] = -2.21465586E+01;
  COFD[10197] = 4.89062970E+00;
  COFD[10198] = -3.58987885E-01;
  COFD[10199] = 1.31390176E-02;
  COFD[10200] = -2.21465586E+01;
  COFD[10201] = 4.89062970E+00;
  COFD[10202] = -3.58987885E-01;
  COFD[10203] = 1.31390176E-02;
  COFD[10204] = -1.92062965E+01;
  COFD[10205] = 4.66318669E+00;
  COFD[10206] = -3.89108667E-01;
  COFD[10207] = 1.68165377E-02;
  COFD[10208] = -1.92360387E+01;
  COFD[10209] = 5.31542554E+00;
  COFD[10210] = -4.65003780E-01;
  COFD[10211] = 1.97570185E-02;
  COFD[10212] = -1.51160026E+01;
  COFD[10213] = 3.64206330E+00;
  COFD[10214] = -2.61313444E-01;
  COFD[10215] = 1.14642754E-02;
  COFD[10216] = -1.86234610E+01;
  COFD[10217] = 4.60336076E+00;
  COFD[10218] = -3.81691643E-01;
  COFD[10219] = 1.65085234E-02;
  COFD[10220] = -2.00964587E+01;
  COFD[10221] = 4.96870443E+00;
  COFD[10222] = -4.25292447E-01;
  COFD[10223] = 1.82459096E-02;
  COFD[10224] = -1.86469715E+01;
  COFD[10225] = 4.60336076E+00;
  COFD[10226] = -3.81691643E-01;
  COFD[10227] = 1.65085234E-02;
  COFD[10228] = -2.02265492E+01;
  COFD[10229] = 4.58441724E+00;
  COFD[10230] = -3.10392854E-01;
  COFD[10231] = 1.06849990E-02;
  COFD[10232] = -1.97422146E+01;
  COFD[10233] = 4.84249900E+00;
  COFD[10234] = -4.10120448E-01;
  COFD[10235] = 1.76363500E-02;
  COFD[10236] = -2.12219671E+01;
  COFD[10237] = 4.88535789E+00;
  COFD[10238] = -3.58153894E-01;
  COFD[10239] = 1.30969624E-02;
  COFD[10240] = -2.23772618E+01;
  COFD[10241] = 5.59425354E+00;
  COFD[10242] = -4.86232980E-01;
  COFD[10243] = 2.00835981E-02;
  COFD[10244] = -2.09108252E+01;
  COFD[10245] = 5.30526648E+00;
  COFD[10246] = -4.63785596E-01;
  COFD[10247] = 1.97079873E-02;
  COFD[10248] = -2.08427676E+01;
  COFD[10249] = 5.27674330E+00;
  COFD[10250] = -4.60336155E-01;
  COFD[10251] = 1.95680191E-02;
  COFD[10252] = -2.01062134E+01;
  COFD[10253] = 4.96870443E+00;
  COFD[10254] = -4.25292447E-01;
  COFD[10255] = 1.82459096E-02;
  COFD[10256] = -2.01155669E+01;
  COFD[10257] = 4.96870443E+00;
  COFD[10258] = -4.25292447E-01;
  COFD[10259] = 1.82459096E-02;
  COFD[10260] = -2.12330848E+01;
  COFD[10261] = 4.88535789E+00;
  COFD[10262] = -3.58153894E-01;
  COFD[10263] = 1.30969624E-02;
  COFD[10264] = -2.18837817E+01;
  COFD[10265] = 5.22103227E+00;
  COFD[10266] = -4.12481899E-01;
  COFD[10267] = 1.58782021E-02;
  COFD[10268] = -2.23993824E+01;
  COFD[10269] = 5.58952429E+00;
  COFD[10270] = -4.85012530E-01;
  COFD[10271] = 2.00062142E-02;
  COFD[10272] = -2.21792046E+01;
  COFD[10273] = 5.60465338E+00;
  COFD[10274] = -4.88572478E-01;
  COFD[10275] = 2.02248525E-02;
  COFD[10276] = -2.23882871E+01;
  COFD[10277] = 5.58952429E+00;
  COFD[10278] = -4.85012530E-01;
  COFD[10279] = 2.00062142E-02;
  COFD[10280] = -2.22609228E+01;
  COFD[10281] = 5.58490856E+00;
  COFD[10282] = -4.81588720E-01;
  COFD[10283] = 1.97445317E-02;
  COFD[10284] = -2.22737405E+01;
  COFD[10285] = 5.58490856E+00;
  COFD[10286] = -4.81588720E-01;
  COFD[10287] = 1.97445317E-02;
  COFD[10288] = -2.19282935E+01;
  COFD[10289] = 5.15446948E+00;
  COFD[10290] = -4.01332769E-01;
  COFD[10291] = 1.52956262E-02;
  COFD[10292] = -2.10575035E+01;
  COFD[10293] = 5.35019396E+00;
  COFD[10294] = -4.68809590E-01;
  COFD[10295] = 1.98941097E-02;
  COFD[10296] = -2.19349796E+01;
  COFD[10297] = 5.15446948E+00;
  COFD[10298] = -4.01332769E-01;
  COFD[10299] = 1.52956262E-02;
  COFD[10300] = -2.19349796E+01;
  COFD[10301] = 5.15446948E+00;
  COFD[10302] = -4.01332769E-01;
  COFD[10303] = 1.52956262E-02;
  COFD[10304] = -2.19414442E+01;
  COFD[10305] = 5.15446948E+00;
  COFD[10306] = -4.01332769E-01;
  COFD[10307] = 1.52956262E-02;
  COFD[10308] = -2.25102540E+01;
  COFD[10309] = 5.49776513E+00;
  COFD[10310] = -4.61463030E-01;
  COFD[10311] = 1.85209236E-02;
  COFD[10312] = -2.24965266E+01;
  COFD[10313] = 5.52198915E+00;
  COFD[10314] = -4.67014474E-01;
  COFD[10315] = 1.88574253E-02;
  COFD[10316] = -2.25715510E+01;
  COFD[10317] = 5.41049872E+00;
  COFD[10318] = -4.45356411E-01;
  COFD[10319] = 1.76320470E-02;
  COFD[10320] = -2.26623017E+01;
  COFD[10321] = 5.53286772E+00;
  COFD[10322] = -4.69109018E-01;
  COFD[10323] = 1.89755392E-02;
  COFD[10324] = -2.25671983E+01;
  COFD[10325] = 5.41536807E+00;
  COFD[10326] = -4.46269562E-01;
  COFD[10327] = 1.76828228E-02;
  COFD[10328] = -2.25717100E+01;
  COFD[10329] = 5.41536807E+00;
  COFD[10330] = -4.46269562E-01;
  COFD[10331] = 1.76828228E-02;
  COFD[10332] = -2.27104599E+01;
  COFD[10333] = 5.42362435E+00;
  COFD[10334] = -4.47767764E-01;
  COFD[10335] = 1.77647205E-02;
  COFD[10336] = -2.22085445E+01;
  COFD[10337] = 5.15613762E+00;
  COFD[10338] = -4.01613235E-01;
  COFD[10339] = 1.53103087E-02;
  COFD[10340] = -2.21724286E+01;
  COFD[10341] = 5.15713826E+00;
  COFD[10342] = -4.01781504E-01;
  COFD[10343] = 1.53191186E-02;
  COFD[10344] = -2.22694808E+01;
  COFD[10345] = 5.19628863E+00;
  COFD[10346] = -4.08298930E-01;
  COFD[10347] = 1.56586995E-02;
  COFD[10348] = -2.25735359E+01;
  COFD[10349] = 5.27888680E+00;
  COFD[10350] = -4.22608469E-01;
  COFD[10351] = 1.64205533E-02;
  COFD[10352] = -2.26553449E+01;
  COFD[10353] = 5.32093606E+00;
  COFD[10354] = -4.29624801E-01;
  COFD[10355] = 1.67869730E-02;
  COFD[10356] = -2.17946665E+01;
  COFD[10357] = 5.01521891E+00;
  COFD[10358] = -3.78672535E-01;
  COFD[10359] = 1.41317315E-02;
  COFD[10360] = -2.15236594E+01;
  COFD[10361] = 4.96219227E+00;
  COFD[10362] = -3.70270843E-01;
  COFD[10363] = 1.37072211E-02;
  COFD[10364] = -2.15293515E+01;
  COFD[10365] = 4.96219227E+00;
  COFD[10366] = -3.70270843E-01;
  COFD[10367] = 1.37072211E-02;
  COFD[10368] = -2.19894262E+01;
  COFD[10369] = 5.12832498E+00;
  COFD[10370] = -3.96993683E-01;
  COFD[10371] = 1.50701708E-02;
  COFD[10372] = -2.22648935E+01;
  COFD[10373] = 5.17972529E+00;
  COFD[10374] = -4.05560157E-01;
  COFD[10375] = 1.55165032E-02;
  COFD[10376] = -2.23366684E+01;
  COFD[10377] = 5.23809740E+00;
  COFD[10378] = -4.15455052E-01;
  COFD[10379] = 1.60369690E-02;
  COFD[10380] = -2.18411213E+01;
  COFD[10381] = 4.89420156E+00;
  COFD[10382] = -3.59552981E-01;
  COFD[10383] = 1.31675149E-02;
  COFD[10384] = -2.19405286E+01;
  COFD[10385] = 4.89420156E+00;
  COFD[10386] = -3.59552981E-01;
  COFD[10387] = 1.31675149E-02;
  COFD[10388] = -2.18873237E+01;
  COFD[10389] = 4.89420156E+00;
  COFD[10390] = -3.59552981E-01;
  COFD[10391] = 1.31675149E-02;
  COFD[10392] = -2.18873237E+01;
  COFD[10393] = 4.89420156E+00;
  COFD[10394] = -3.59552981E-01;
  COFD[10395] = 1.31675149E-02;
  COFD[10396] = -2.24931464E+01;
  COFD[10397] = 5.50509817E+00;
  COFD[10398] = -4.63572794E-01;
  COFD[10399] = 1.86581046E-02;
  COFD[10400] = -2.25028378E+01;
  COFD[10401] = 5.49776513E+00;
  COFD[10402] = -4.61463030E-01;
  COFD[10403] = 1.85209236E-02;
  COFD[10404] = -2.22685190E+01;
  COFD[10405] = 5.58776204E+00;
  COFD[10406] = -4.90769522E-01;
  COFD[10407] = 2.04931464E-02;
  COFD[10408] = -2.08833651E+01;
  COFD[10409] = 5.30526648E+00;
  COFD[10410] = -4.63785596E-01;
  COFD[10411] = 1.97079873E-02;
  COFD[10412] = -2.22184945E+01;
  COFD[10413] = 4.99165077E+00;
  COFD[10414] = -3.74908997E-01;
  COFD[10415] = 1.39407338E-02;
  COFD[10416] = -2.20888012E+01;
  COFD[10417] = 5.04229982E+00;
  COFD[10418] = -3.83015371E-01;
  COFD[10419] = 1.43526474E-02;
  COFD[10420] = -2.20857401E+01;
  COFD[10421] = 5.04229982E+00;
  COFD[10422] = -3.83015371E-01;
  COFD[10423] = 1.43526474E-02;
  COFD[10424] = -2.22425642E+01;
  COFD[10425] = 5.08335116E+00;
  COFD[10426] = -3.89676987E-01;
  COFD[10427] = 1.46941827E-02;
  COFD[10428] = -2.19708012E+01;
  COFD[10429] = 4.92657345E+00;
  COFD[10430] = -3.64659759E-01;
  COFD[10431] = 1.34247408E-02;
  COFD[10432] = -2.21836339E+01;
  COFD[10433] = 4.99165077E+00;
  COFD[10434] = -3.74908997E-01;
  COFD[10435] = 1.39407338E-02;
  COFD[10436] = -2.21813294E+01;
  COFD[10437] = 4.99165077E+00;
  COFD[10438] = -3.74908997E-01;
  COFD[10439] = 1.39407338E-02;
  COFD[10440] = -2.24302537E+01;
  COFD[10441] = 5.06106414E+00;
  COFD[10442] = -3.86053039E-01;
  COFD[10443] = 1.45081784E-02;
  COFD[10444] = -2.24284544E+01;
  COFD[10445] = 5.06106414E+00;
  COFD[10446] = -3.86053039E-01;
  COFD[10447] = 1.45081784E-02;
  COFD[10448] = -2.24284544E+01;
  COFD[10449] = 5.06106414E+00;
  COFD[10450] = -3.86053039E-01;
  COFD[10451] = 1.45081784E-02;
  COFD[10452] = -2.24284544E+01;
  COFD[10453] = 5.06106414E+00;
  COFD[10454] = -3.86053039E-01;
  COFD[10455] = 1.45081784E-02;
  COFD[10456] = -2.24284544E+01;
  COFD[10457] = 5.06106414E+00;
  COFD[10458] = -3.86053039E-01;
  COFD[10459] = 1.45081784E-02;
  COFD[10460] = -2.24249478E+01;
  COFD[10461] = 5.06823837E+00;
  COFD[10462] = -3.87218404E-01;
  COFD[10463] = 1.45679535E-02;
  COFD[10464] = -2.24249478E+01;
  COFD[10465] = 5.06823837E+00;
  COFD[10466] = -3.87218404E-01;
  COFD[10467] = 1.45679535E-02;
  COFD[10468] = -2.16535499E+01;
  COFD[10469] = 4.62479073E+00;
  COFD[10470] = -3.16843576E-01;
  COFD[10471] = 1.10117295E-02;
  COFD[10472] = -2.16535499E+01;
  COFD[10473] = 4.62479073E+00;
  COFD[10474] = -3.16843576E-01;
  COFD[10475] = 1.10117295E-02;
  COFD[10476] = -2.16535499E+01;
  COFD[10477] = 4.62479073E+00;
  COFD[10478] = -3.16843576E-01;
  COFD[10479] = 1.10117295E-02;
  COFD[10480] = -2.16535499E+01;
  COFD[10481] = 4.62479073E+00;
  COFD[10482] = -3.16843576E-01;
  COFD[10483] = 1.10117295E-02;
  COFD[10484] = -2.16535499E+01;
  COFD[10485] = 4.62479073E+00;
  COFD[10486] = -3.16843576E-01;
  COFD[10487] = 1.10117295E-02;
  COFD[10488] = -2.16535499E+01;
  COFD[10489] = 4.62479073E+00;
  COFD[10490] = -3.16843576E-01;
  COFD[10491] = 1.10117295E-02;
  COFD[10492] = -2.16535499E+01;
  COFD[10493] = 4.62479073E+00;
  COFD[10494] = -3.16843576E-01;
  COFD[10495] = 1.10117295E-02;
  COFD[10496] = -2.16535499E+01;
  COFD[10497] = 4.62479073E+00;
  COFD[10498] = -3.16843576E-01;
  COFD[10499] = 1.10117295E-02;
  COFD[10500] = -2.16535499E+01;
  COFD[10501] = 4.62479073E+00;
  COFD[10502] = -3.16843576E-01;
  COFD[10503] = 1.10117295E-02;
  COFD[10504] = -2.16535499E+01;
  COFD[10505] = 4.62479073E+00;
  COFD[10506] = -3.16843576E-01;
  COFD[10507] = 1.10117295E-02;
  COFD[10508] = -2.16535499E+01;
  COFD[10509] = 4.62479073E+00;
  COFD[10510] = -3.16843576E-01;
  COFD[10511] = 1.10117295E-02;
  COFD[10512] = -2.16535499E+01;
  COFD[10513] = 4.62479073E+00;
  COFD[10514] = -3.16843576E-01;
  COFD[10515] = 1.10117295E-02;
  COFD[10516] = -2.15325140E+01;
  COFD[10517] = 4.46485491E+00;
  COFD[10518] = -2.91765766E-01;
  COFD[10519] = 9.75650640E-03;
  COFD[10520] = -2.15325140E+01;
  COFD[10521] = 4.46485491E+00;
  COFD[10522] = -2.91765766E-01;
  COFD[10523] = 9.75650640E-03;
  COFD[10524] = -2.15325140E+01;
  COFD[10525] = 4.46485491E+00;
  COFD[10526] = -2.91765766E-01;
  COFD[10527] = 9.75650640E-03;
  COFD[10528] = -2.15325140E+01;
  COFD[10529] = 4.46485491E+00;
  COFD[10530] = -2.91765766E-01;
  COFD[10531] = 9.75650640E-03;
  COFD[10532] = -2.20087295E+01;
  COFD[10533] = 4.82482166E+00;
  COFD[10534] = -3.48596038E-01;
  COFD[10535] = 1.26153533E-02;
  COFD[10536] = -2.20087295E+01;
  COFD[10537] = 4.82482166E+00;
  COFD[10538] = -3.48596038E-01;
  COFD[10539] = 1.26153533E-02;
  COFD[10540] = -2.15564632E+01;
  COFD[10541] = 4.54793947E+00;
  COFD[10542] = -3.04689240E-01;
  COFD[10543] = 1.04001889E-02;
  COFD[10544] = -2.15564632E+01;
  COFD[10545] = 4.54793947E+00;
  COFD[10546] = -3.04689240E-01;
  COFD[10547] = 1.04001889E-02;
  COFD[10548] = -2.15564632E+01;
  COFD[10549] = 4.54793947E+00;
  COFD[10550] = -3.04689240E-01;
  COFD[10551] = 1.04001889E-02;
  COFD[10552] = -2.15564632E+01;
  COFD[10553] = 4.54793947E+00;
  COFD[10554] = -3.04689240E-01;
  COFD[10555] = 1.04001889E-02;
  COFD[10556] = -1.97196563E+01;
  COFD[10557] = 4.83750266E+00;
  COFD[10558] = -4.09581452E-01;
  COFD[10559] = 1.76174739E-02;
  COFD[10560] = -1.92362001E+01;
  COFD[10561] = 5.31542554E+00;
  COFD[10562] = -4.65003780E-01;
  COFD[10563] = 1.97570185E-02;
  COFD[10564] = -1.51163198E+01;
  COFD[10565] = 3.64206330E+00;
  COFD[10566] = -2.61313444E-01;
  COFD[10567] = 1.14642754E-02;
  COFD[10568] = -1.86254865E+01;
  COFD[10569] = 4.60336076E+00;
  COFD[10570] = -3.81691643E-01;
  COFD[10571] = 1.65085234E-02;
  COFD[10572] = -2.00997697E+01;
  COFD[10573] = 4.96870443E+00;
  COFD[10574] = -4.25292447E-01;
  COFD[10575] = 1.82459096E-02;
  COFD[10576] = -1.86490947E+01;
  COFD[10577] = 4.60336076E+00;
  COFD[10578] = -3.81691643E-01;
  COFD[10579] = 1.65085234E-02;
  COFD[10580] = -2.02287674E+01;
  COFD[10581] = 4.58441724E+00;
  COFD[10582] = -3.10392854E-01;
  COFD[10583] = 1.06849990E-02;
  COFD[10584] = -1.97452512E+01;
  COFD[10585] = 4.84249900E+00;
  COFD[10586] = -4.10120448E-01;
  COFD[10587] = 1.76363500E-02;
  COFD[10588] = -2.12250755E+01;
  COFD[10589] = 4.88535789E+00;
  COFD[10590] = -3.58153894E-01;
  COFD[10591] = 1.30969624E-02;
  COFD[10592] = -2.23812666E+01;
  COFD[10593] = 5.59425354E+00;
  COFD[10594] = -4.86232980E-01;
  COFD[10595] = 2.00835981E-02;
  COFD[10596] = -2.09127545E+01;
  COFD[10597] = 5.30526648E+00;
  COFD[10598] = -4.63785596E-01;
  COFD[10599] = 1.97079873E-02;
  COFD[10600] = -2.08447974E+01;
  COFD[10601] = 5.27674330E+00;
  COFD[10602] = -4.60336155E-01;
  COFD[10603] = 1.95680191E-02;
  COFD[10604] = -2.01095898E+01;
  COFD[10605] = 4.96870443E+00;
  COFD[10606] = -4.25292447E-01;
  COFD[10607] = 1.82459096E-02;
  COFD[10608] = -2.01190073E+01;
  COFD[10609] = 4.96870443E+00;
  COFD[10610] = -4.25292447E-01;
  COFD[10611] = 1.82459096E-02;
  COFD[10612] = -2.12362633E+01;
  COFD[10613] = 4.88535789E+00;
  COFD[10614] = -3.58153894E-01;
  COFD[10615] = 1.30969624E-02;
  COFD[10616] = -2.18870287E+01;
  COFD[10617] = 5.22103227E+00;
  COFD[10618] = -4.12481899E-01;
  COFD[10619] = 1.58782021E-02;
  COFD[10620] = -2.24025639E+01;
  COFD[10621] = 5.58952429E+00;
  COFD[10622] = -4.85012530E-01;
  COFD[10623] = 2.00062142E-02;
  COFD[10624] = -2.21822443E+01;
  COFD[10625] = 5.60465338E+00;
  COFD[10626] = -4.88572478E-01;
  COFD[10627] = 2.02248525E-02;
  COFD[10628] = -2.23913985E+01;
  COFD[10629] = 5.58952429E+00;
  COFD[10630] = -4.85012530E-01;
  COFD[10631] = 2.00062142E-02;
  COFD[10632] = -2.22638138E+01;
  COFD[10633] = 5.58490856E+00;
  COFD[10634] = -4.81588720E-01;
  COFD[10635] = 1.97445317E-02;
  COFD[10636] = -2.22767067E+01;
  COFD[10637] = 5.58490856E+00;
  COFD[10638] = -4.81588720E-01;
  COFD[10639] = 1.97445317E-02;
  COFD[10640] = -2.19321960E+01;
  COFD[10641] = 5.15446948E+00;
  COFD[10642] = -4.01332769E-01;
  COFD[10643] = 1.52956262E-02;
  COFD[10644] = -2.10613522E+01;
  COFD[10645] = 5.35019396E+00;
  COFD[10646] = -4.68809590E-01;
  COFD[10647] = 1.98941097E-02;
  COFD[10648] = -2.19389349E+01;
  COFD[10649] = 5.15446948E+00;
  COFD[10650] = -4.01332769E-01;
  COFD[10651] = 1.52956262E-02;
  COFD[10652] = -2.19389349E+01;
  COFD[10653] = 5.15446948E+00;
  COFD[10654] = -4.01332769E-01;
  COFD[10655] = 1.52956262E-02;
  COFD[10656] = -2.19454512E+01;
  COFD[10657] = 5.15446948E+00;
  COFD[10658] = -4.01332769E-01;
  COFD[10659] = 1.52956262E-02;
  COFD[10660] = -2.25140502E+01;
  COFD[10661] = 5.49776513E+00;
  COFD[10662] = -4.61463030E-01;
  COFD[10663] = 1.85209236E-02;
  COFD[10664] = -2.25004315E+01;
  COFD[10665] = 5.52198915E+00;
  COFD[10666] = -4.67014474E-01;
  COFD[10667] = 1.88574253E-02;
  COFD[10668] = -2.25760208E+01;
  COFD[10669] = 5.41049872E+00;
  COFD[10670] = -4.45356411E-01;
  COFD[10671] = 1.76320470E-02;
  COFD[10672] = -2.26662593E+01;
  COFD[10673] = 5.53286772E+00;
  COFD[10674] = -4.69109018E-01;
  COFD[10675] = 1.89755392E-02;
  COFD[10676] = -2.25717100E+01;
  COFD[10677] = 5.41536807E+00;
  COFD[10678] = -4.46269562E-01;
  COFD[10679] = 1.76828228E-02;
  COFD[10680] = -2.25762627E+01;
  COFD[10681] = 5.41536807E+00;
  COFD[10682] = -4.46269562E-01;
  COFD[10683] = 1.76828228E-02;
  COFD[10684] = -2.27150529E+01;
  COFD[10685] = 5.42362435E+00;
  COFD[10686] = -4.47767764E-01;
  COFD[10687] = 1.77647205E-02;
  COFD[10688] = -2.22131358E+01;
  COFD[10689] = 5.15613762E+00;
  COFD[10690] = -4.01613235E-01;
  COFD[10691] = 1.53103087E-02;
  COFD[10692] = -2.21770596E+01;
  COFD[10693] = 5.15713826E+00;
  COFD[10694] = -4.01781504E-01;
  COFD[10695] = 1.53191186E-02;
  COFD[10696] = -2.22740721E+01;
  COFD[10697] = 5.19628863E+00;
  COFD[10698] = -4.08298930E-01;
  COFD[10699] = 1.56586995E-02;
  COFD[10700] = -2.25785595E+01;
  COFD[10701] = 5.27888680E+00;
  COFD[10702] = -4.22608469E-01;
  COFD[10703] = 1.64205533E-02;
  COFD[10704] = -2.26604009E+01;
  COFD[10705] = 5.32093606E+00;
  COFD[10706] = -4.29624801E-01;
  COFD[10707] = 1.67869730E-02;
  COFD[10708] = -2.17987241E+01;
  COFD[10709] = 5.01521891E+00;
  COFD[10710] = -3.78672535E-01;
  COFD[10711] = 1.41317315E-02;
  COFD[10712] = -2.15278132E+01;
  COFD[10713] = 4.96219227E+00;
  COFD[10714] = -3.70270843E-01;
  COFD[10715] = 1.37072211E-02;
  COFD[10716] = -2.15335531E+01;
  COFD[10717] = 4.96219227E+00;
  COFD[10718] = -3.70270843E-01;
  COFD[10719] = 1.37072211E-02;
  COFD[10720] = -2.19939360E+01;
  COFD[10721] = 5.12832498E+00;
  COFD[10722] = -3.96993683E-01;
  COFD[10723] = 1.50701708E-02;
  COFD[10724] = -2.22694444E+01;
  COFD[10725] = 5.17972529E+00;
  COFD[10726] = -4.05560157E-01;
  COFD[10727] = 1.55165032E-02;
  COFD[10728] = -2.23412597E+01;
  COFD[10729] = 5.23809740E+00;
  COFD[10730] = -4.15455052E-01;
  COFD[10731] = 1.60369690E-02;
  COFD[10732] = -2.18462078E+01;
  COFD[10733] = 4.89420156E+00;
  COFD[10734] = -3.59552981E-01;
  COFD[10735] = 1.31675149E-02;
  COFD[10736] = -2.19467409E+01;
  COFD[10737] = 4.89420156E+00;
  COFD[10738] = -3.59552981E-01;
  COFD[10739] = 1.31675149E-02;
  COFD[10740] = -2.18929054E+01;
  COFD[10741] = 4.89420156E+00;
  COFD[10742] = -3.59552981E-01;
  COFD[10743] = 1.31675149E-02;
  COFD[10744] = -2.18929054E+01;
  COFD[10745] = 4.89420156E+00;
  COFD[10746] = -3.59552981E-01;
  COFD[10747] = 1.31675149E-02;
  COFD[10748] = -2.24969974E+01;
  COFD[10749] = 5.50509817E+00;
  COFD[10750] = -4.63572794E-01;
  COFD[10751] = 1.86581046E-02;
  COFD[10752] = -2.25065779E+01;
  COFD[10753] = 5.49776513E+00;
  COFD[10754] = -4.61463030E-01;
  COFD[10755] = 1.85209236E-02;
  COFD[10756] = -2.22722017E+01;
  COFD[10757] = 5.58776204E+00;
  COFD[10758] = -4.90769522E-01;
  COFD[10759] = 2.04931464E-02;
  COFD[10760] = -2.08851911E+01;
  COFD[10761] = 5.30526648E+00;
  COFD[10762] = -4.63785596E-01;
  COFD[10763] = 1.97079873E-02;
  COFD[10764] = -2.22244031E+01;
  COFD[10765] = 4.99165077E+00;
  COFD[10766] = -3.74908997E-01;
  COFD[10767] = 1.39407338E-02;
  COFD[10768] = -2.20939191E+01;
  COFD[10769] = 5.04229982E+00;
  COFD[10770] = -3.83015371E-01;
  COFD[10771] = 1.43526474E-02;
  COFD[10772] = -2.20908266E+01;
  COFD[10773] = 5.04229982E+00;
  COFD[10774] = -3.83015371E-01;
  COFD[10775] = 1.43526474E-02;
  COFD[10776] = -2.22476507E+01;
  COFD[10777] = 5.08335116E+00;
  COFD[10778] = -3.89676987E-01;
  COFD[10779] = 1.46941827E-02;
  COFD[10780] = -2.19762842E+01;
  COFD[10781] = 4.92657345E+00;
  COFD[10782] = -3.64659759E-01;
  COFD[10783] = 1.34247408E-02;
  COFD[10784] = -2.21891424E+01;
  COFD[10785] = 4.99165077E+00;
  COFD[10786] = -3.74908997E-01;
  COFD[10787] = 1.39407338E-02;
  COFD[10788] = -2.21868124E+01;
  COFD[10789] = 4.99165077E+00;
  COFD[10790] = -3.74908997E-01;
  COFD[10791] = 1.39407338E-02;
  COFD[10792] = -2.24360833E+01;
  COFD[10793] = 5.06106414E+00;
  COFD[10794] = -3.86053039E-01;
  COFD[10795] = 1.45081784E-02;
  COFD[10796] = -2.24342629E+01;
  COFD[10797] = 5.06106414E+00;
  COFD[10798] = -3.86053039E-01;
  COFD[10799] = 1.45081784E-02;
  COFD[10800] = -2.24342629E+01;
  COFD[10801] = 5.06106414E+00;
  COFD[10802] = -3.86053039E-01;
  COFD[10803] = 1.45081784E-02;
  COFD[10804] = -2.24342629E+01;
  COFD[10805] = 5.06106414E+00;
  COFD[10806] = -3.86053039E-01;
  COFD[10807] = 1.45081784E-02;
  COFD[10808] = -2.24342629E+01;
  COFD[10809] = 5.06106414E+00;
  COFD[10810] = -3.86053039E-01;
  COFD[10811] = 1.45081784E-02;
  COFD[10812] = -2.24307350E+01;
  COFD[10813] = 5.06823837E+00;
  COFD[10814] = -3.87218404E-01;
  COFD[10815] = 1.45679535E-02;
  COFD[10816] = -2.24307350E+01;
  COFD[10817] = 5.06823837E+00;
  COFD[10818] = -3.87218404E-01;
  COFD[10819] = 1.45679535E-02;
  COFD[10820] = -2.16599161E+01;
  COFD[10821] = 4.62479073E+00;
  COFD[10822] = -3.16843576E-01;
  COFD[10823] = 1.10117295E-02;
  COFD[10824] = -2.16599161E+01;
  COFD[10825] = 4.62479073E+00;
  COFD[10826] = -3.16843576E-01;
  COFD[10827] = 1.10117295E-02;
  COFD[10828] = -2.16599161E+01;
  COFD[10829] = 4.62479073E+00;
  COFD[10830] = -3.16843576E-01;
  COFD[10831] = 1.10117295E-02;
  COFD[10832] = -2.16599161E+01;
  COFD[10833] = 4.62479073E+00;
  COFD[10834] = -3.16843576E-01;
  COFD[10835] = 1.10117295E-02;
  COFD[10836] = -2.16599161E+01;
  COFD[10837] = 4.62479073E+00;
  COFD[10838] = -3.16843576E-01;
  COFD[10839] = 1.10117295E-02;
  COFD[10840] = -2.16599161E+01;
  COFD[10841] = 4.62479073E+00;
  COFD[10842] = -3.16843576E-01;
  COFD[10843] = 1.10117295E-02;
  COFD[10844] = -2.16599161E+01;
  COFD[10845] = 4.62479073E+00;
  COFD[10846] = -3.16843576E-01;
  COFD[10847] = 1.10117295E-02;
  COFD[10848] = -2.16599161E+01;
  COFD[10849] = 4.62479073E+00;
  COFD[10850] = -3.16843576E-01;
  COFD[10851] = 1.10117295E-02;
  COFD[10852] = -2.16599161E+01;
  COFD[10853] = 4.62479073E+00;
  COFD[10854] = -3.16843576E-01;
  COFD[10855] = 1.10117295E-02;
  COFD[10856] = -2.16599161E+01;
  COFD[10857] = 4.62479073E+00;
  COFD[10858] = -3.16843576E-01;
  COFD[10859] = 1.10117295E-02;
  COFD[10860] = -2.16599161E+01;
  COFD[10861] = 4.62479073E+00;
  COFD[10862] = -3.16843576E-01;
  COFD[10863] = 1.10117295E-02;
  COFD[10864] = -2.16599161E+01;
  COFD[10865] = 4.62479073E+00;
  COFD[10866] = -3.16843576E-01;
  COFD[10867] = 1.10117295E-02;
  COFD[10868] = -2.15392748E+01;
  COFD[10869] = 4.46485491E+00;
  COFD[10870] = -2.91765766E-01;
  COFD[10871] = 9.75650640E-03;
  COFD[10872] = -2.15392748E+01;
  COFD[10873] = 4.46485491E+00;
  COFD[10874] = -2.91765766E-01;
  COFD[10875] = 9.75650640E-03;
  COFD[10876] = -2.15392748E+01;
  COFD[10877] = 4.46485491E+00;
  COFD[10878] = -2.91765766E-01;
  COFD[10879] = 9.75650640E-03;
  COFD[10880] = -2.15392748E+01;
  COFD[10881] = 4.46485491E+00;
  COFD[10882] = -2.91765766E-01;
  COFD[10883] = 9.75650640E-03;
  COFD[10884] = -2.20148255E+01;
  COFD[10885] = 4.82482166E+00;
  COFD[10886] = -3.48596038E-01;
  COFD[10887] = 1.26153533E-02;
  COFD[10888] = -2.20148255E+01;
  COFD[10889] = 4.82482166E+00;
  COFD[10890] = -3.48596038E-01;
  COFD[10891] = 1.26153533E-02;
  COFD[10892] = -2.15630299E+01;
  COFD[10893] = 4.54793947E+00;
  COFD[10894] = -3.04689240E-01;
  COFD[10895] = 1.04001889E-02;
  COFD[10896] = -2.15630299E+01;
  COFD[10897] = 4.54793947E+00;
  COFD[10898] = -3.04689240E-01;
  COFD[10899] = 1.04001889E-02;
  COFD[10900] = -2.15630299E+01;
  COFD[10901] = 4.54793947E+00;
  COFD[10902] = -3.04689240E-01;
  COFD[10903] = 1.04001889E-02;
  COFD[10904] = -2.15630299E+01;
  COFD[10905] = 4.54793947E+00;
  COFD[10906] = -3.04689240E-01;
  COFD[10907] = 1.04001889E-02;
  COFD[10908] = -1.97226931E+01;
  COFD[10909] = 4.83750266E+00;
  COFD[10910] = -4.09581452E-01;
  COFD[10911] = 1.76174739E-02;
  COFD[10912] = -1.93693900E+01;
  COFD[10913] = 5.30286598E+00;
  COFD[10914] = -4.63495567E-01;
  COFD[10915] = 1.96962203E-02;
  COFD[10916] = -1.52503825E+01;
  COFD[10917] = 3.63657318E+00;
  COFD[10918] = -2.60678457E-01;
  COFD[10919] = 1.14400550E-02;
  COFD[10920] = -1.87433528E+01;
  COFD[10921] = 4.58956960E+00;
  COFD[10922] = -3.79964215E-01;
  COFD[10923] = 1.64361138E-02;
  COFD[10924] = -2.02121587E+01;
  COFD[10925] = 4.95786261E+00;
  COFD[10926] = -4.24013131E-01;
  COFD[10927] = 1.81955669E-02;
  COFD[10928] = -1.87670561E+01;
  COFD[10929] = 4.58956960E+00;
  COFD[10930] = -3.79964215E-01;
  COFD[10931] = 1.64361138E-02;
  COFD[10932] = -2.04186359E+01;
  COFD[10933] = 4.60117690E+00;
  COFD[10934] = -3.13067257E-01;
  COFD[10935] = 1.08202310E-02;
  COFD[10936] = -1.98616053E+01;
  COFD[10937] = 4.83466791E+00;
  COFD[10938] = -4.09252052E-01;
  COFD[10939] = 1.76047341E-02;
  COFD[10940] = -2.14030252E+01;
  COFD[10941] = 4.90439970E+00;
  COFD[10942] = -3.61162615E-01;
  COFD[10943] = 1.32486109E-02;
  COFD[10944] = -2.25216553E+01;
  COFD[10945] = 5.59792043E+00;
  COFD[10946] = -4.87076900E-01;
  COFD[10947] = 2.01350364E-02;
  COFD[10948] = -2.10124397E+01;
  COFD[10949] = 5.29210705E+00;
  COFD[10950] = -4.62193217E-01;
  COFD[10951] = 1.96432872E-02;
  COFD[10952] = -2.09461019E+01;
  COFD[10953] = 5.26396793E+00;
  COFD[10954] = -4.58812213E-01;
  COFD[10955] = 1.95072180E-02;
  COFD[10956] = -2.02220428E+01;
  COFD[10957] = 4.95786261E+00;
  COFD[10958] = -4.24013131E-01;
  COFD[10959] = 1.81955669E-02;
  COFD[10960] = -2.02315228E+01;
  COFD[10961] = 4.95786261E+00;
  COFD[10962] = -4.24013131E-01;
  COFD[10963] = 1.81955669E-02;
  COFD[10964] = -2.14142815E+01;
  COFD[10965] = 4.90439970E+00;
  COFD[10966] = -3.61162615E-01;
  COFD[10967] = 1.32486109E-02;
  COFD[10968] = -2.20425987E+01;
  COFD[10969] = 5.23117744E+00;
  COFD[10970] = -4.14243780E-01;
  COFD[10971] = 1.59721173E-02;
  COFD[10972] = -2.25300725E+01;
  COFD[10973] = 5.59173268E+00;
  COFD[10974] = -4.85654660E-01;
  COFD[10975] = 2.00483698E-02;
  COFD[10976] = -2.23250342E+01;
  COFD[10977] = 5.60776666E+00;
  COFD[10978] = -4.89319792E-01;
  COFD[10979] = 2.02710069E-02;
  COFD[10980] = -2.25188386E+01;
  COFD[10981] = 5.59173268E+00;
  COFD[10982] = -4.85654660E-01;
  COFD[10983] = 2.00483698E-02;
  COFD[10984] = -2.23950486E+01;
  COFD[10985] = 5.58492366E+00;
  COFD[10986] = -4.81921868E-01;
  COFD[10987] = 1.97721534E-02;
  COFD[10988] = -2.24080151E+01;
  COFD[10989] = 5.58492366E+00;
  COFD[10990] = -4.81921868E-01;
  COFD[10991] = 1.97721534E-02;
  COFD[10992] = -2.20891280E+01;
  COFD[10993] = 5.16679492E+00;
  COFD[10994] = -4.03405751E-01;
  COFD[10995] = 1.54041741E-02;
  COFD[10996] = -2.12027414E+01;
  COFD[10997] = 5.34410059E+00;
  COFD[10998] = -4.68233157E-01;
  COFD[10999] = 1.98777314E-02;
  COFD[11000] = -2.20959186E+01;
  COFD[11001] = 5.16679492E+00;
  COFD[11002] = -4.03405751E-01;
  COFD[11003] = 1.54041741E-02;
  COFD[11004] = -2.20959186E+01;
  COFD[11005] = 5.16679492E+00;
  COFD[11006] = -4.03405751E-01;
  COFD[11007] = 1.54041741E-02;
  COFD[11008] = -2.21024855E+01;
  COFD[11009] = 5.16679492E+00;
  COFD[11010] = -4.03405751E-01;
  COFD[11011] = 1.54041741E-02;
  COFD[11012] = -2.26435356E+01;
  COFD[11013] = 5.50023958E+00;
  COFD[11014] = -4.62136179E-01;
  COFD[11015] = 1.85639061E-02;
  COFD[11016] = -2.26410997E+01;
  COFD[11017] = 5.52830072E+00;
  COFD[11018] = -4.68235018E-01;
  COFD[11019] = 1.89263933E-02;
  COFD[11020] = -2.27125809E+01;
  COFD[11021] = 5.41826700E+00;
  COFD[11022] = -4.46792049E-01;
  COFD[11023] = 1.77112976E-02;
  COFD[11024] = -2.27989616E+01;
  COFD[11025] = 5.53955653E+00;
  COFD[11026] = -4.70381353E-01;
  COFD[11027] = 1.90468698E-02;
  COFD[11028] = -2.27104599E+01;
  COFD[11029] = 5.42362435E+00;
  COFD[11030] = -4.47767764E-01;
  COFD[11031] = 1.77647205E-02;
  COFD[11032] = -2.27150529E+01;
  COFD[11033] = 5.42362435E+00;
  COFD[11034] = -4.47767764E-01;
  COFD[11035] = 1.77647205E-02;
  COFD[11036] = -2.28473171E+01;
  COFD[11037] = 5.43214736E+00;
  COFD[11038] = -4.49307302E-01;
  COFD[11039] = 1.78487187E-02;
  COFD[11040] = -2.23589485E+01;
  COFD[11041] = 5.16856828E+00;
  COFD[11042] = -4.03702050E-01;
  COFD[11043] = 1.54196442E-02;
  COFD[11044] = -2.23255332E+01;
  COFD[11045] = 5.16963232E+00;
  COFD[11046] = -4.03879860E-01;
  COFD[11047] = 1.54289288E-02;
  COFD[11048] = -2.24198058E+01;
  COFD[11049] = 5.20842429E+00;
  COFD[11050] = -4.10339858E-01;
  COFD[11051] = 1.57655236E-02;
  COFD[11052] = -2.27197569E+01;
  COFD[11053] = 5.29216864E+00;
  COFD[11054] = -4.24828662E-01;
  COFD[11055] = 1.65366835E-02;
  COFD[11056] = -2.27940504E+01;
  COFD[11057] = 5.33097599E+00;
  COFD[11058] = -4.31367349E-01;
  COFD[11059] = 1.68798869E-02;
  COFD[11060] = -2.19609032E+01;
  COFD[11061] = 5.03230486E+00;
  COFD[11062] = -3.81405277E-01;
  COFD[11063] = 1.42705027E-02;
  COFD[11064] = -2.17094661E+01;
  COFD[11065] = 4.98271982E+00;
  COFD[11066] = -3.73502341E-01;
  COFD[11067] = 1.38698700E-02;
  COFD[11068] = -2.17152528E+01;
  COFD[11069] = 4.98271982E+00;
  COFD[11070] = -3.73502341E-01;
  COFD[11071] = 1.38698700E-02;
  COFD[11072] = -2.21524199E+01;
  COFD[11073] = 5.14204836E+00;
  COFD[11074] = -3.99269495E-01;
  COFD[11075] = 1.51883773E-02;
  COFD[11076] = -2.24182492E+01;
  COFD[11077] = 5.19403876E+00;
  COFD[11078] = -4.07926421E-01;
  COFD[11079] = 1.56393496E-02;
  COFD[11080] = -2.24804061E+01;
  COFD[11081] = 5.24742561E+00;
  COFD[11082] = -4.17101230E-01;
  COFD[11083] = 1.61254505E-02;
  COFD[11084] = -2.20051847E+01;
  COFD[11085] = 4.91371677E+00;
  COFD[11086] = -3.62632206E-01;
  COFD[11087] = 1.33226347E-02;
  COFD[11088] = -2.21068284E+01;
  COFD[11089] = 4.91371677E+00;
  COFD[11090] = -3.62632206E-01;
  COFD[11091] = 1.33226347E-02;
  COFD[11092] = -2.20523702E+01;
  COFD[11093] = 4.91371677E+00;
  COFD[11094] = -3.62632206E-01;
  COFD[11095] = 1.33226347E-02;
  COFD[11096] = -2.20523702E+01;
  COFD[11097] = 4.91371677E+00;
  COFD[11098] = -3.62632206E-01;
  COFD[11099] = 1.33226347E-02;
  COFD[11100] = -2.26299917E+01;
  COFD[11101] = 5.50881574E+00;
  COFD[11102] = -4.64448886E-01;
  COFD[11103] = 1.87118881E-02;
  COFD[11104] = -2.26360083E+01;
  COFD[11105] = 5.50023958E+00;
  COFD[11106] = -4.62136179E-01;
  COFD[11107] = 1.85639061E-02;
  COFD[11108] = -2.23840649E+01;
  COFD[11109] = 5.58123742E+00;
  COFD[11110] = -4.90135630E-01;
  COFD[11111] = 2.04738180E-02;
  COFD[11112] = -2.09847759E+01;
  COFD[11113] = 5.29210705E+00;
  COFD[11114] = -4.62193217E-01;
  COFD[11115] = 1.96432872E-02;
  COFD[11116] = -2.23734546E+01;
  COFD[11117] = 5.00926723E+00;
  COFD[11118] = -3.77721617E-01;
  COFD[11119] = 1.40834666E-02;
  COFD[11120] = -2.22469530E+01;
  COFD[11121] = 5.05835241E+00;
  COFD[11122] = -3.85613003E-01;
  COFD[11123] = 1.44856215E-02;
  COFD[11124] = -2.22438296E+01;
  COFD[11125] = 5.05835241E+00;
  COFD[11126] = -3.85613003E-01;
  COFD[11127] = 1.44856215E-02;
  COFD[11128] = -2.23966635E+01;
  COFD[11129] = 5.09973420E+00;
  COFD[11130] = -3.92329291E-01;
  COFD[11131] = 1.48300692E-02;
  COFD[11132] = -2.21351892E+01;
  COFD[11133] = 4.94663705E+00;
  COFD[11134] = -3.67820680E-01;
  COFD[11135] = 1.35838676E-02;
  COFD[11136] = -2.23377991E+01;
  COFD[11137] = 5.00926723E+00;
  COFD[11138] = -3.77721617E-01;
  COFD[11139] = 1.40834666E-02;
  COFD[11140] = -2.23354440E+01;
  COFD[11141] = 5.00926723E+00;
  COFD[11142] = -3.77721617E-01;
  COFD[11143] = 1.40834666E-02;
  COFD[11144] = -2.25751735E+01;
  COFD[11145] = 5.07648425E+00;
  COFD[11146] = -3.88560019E-01;
  COFD[11147] = 1.46368353E-02;
  COFD[11148] = -2.25733323E+01;
  COFD[11149] = 5.07648425E+00;
  COFD[11150] = -3.88560019E-01;
  COFD[11151] = 1.46368353E-02;
  COFD[11152] = -2.25733323E+01;
  COFD[11153] = 5.07648425E+00;
  COFD[11154] = -3.88560019E-01;
  COFD[11155] = 1.46368353E-02;
  COFD[11156] = -2.25733323E+01;
  COFD[11157] = 5.07648425E+00;
  COFD[11158] = -3.88560019E-01;
  COFD[11159] = 1.46368353E-02;
  COFD[11160] = -2.25733323E+01;
  COFD[11161] = 5.07648425E+00;
  COFD[11162] = -3.88560019E-01;
  COFD[11163] = 1.46368353E-02;
  COFD[11164] = -2.25704868E+01;
  COFD[11165] = 5.08364219E+00;
  COFD[11166] = -3.89724082E-01;
  COFD[11167] = 1.46965943E-02;
  COFD[11168] = -2.25704868E+01;
  COFD[11169] = 5.08364219E+00;
  COFD[11170] = -3.89724082E-01;
  COFD[11171] = 1.46965943E-02;
  COFD[11172] = -2.18056042E+01;
  COFD[11173] = 4.64312709E+00;
  COFD[11174] = -3.19764076E-01;
  COFD[11175] = 1.11595790E-02;
  COFD[11176] = -2.18056042E+01;
  COFD[11177] = 4.64312709E+00;
  COFD[11178] = -3.19764076E-01;
  COFD[11179] = 1.11595790E-02;
  COFD[11180] = -2.18056042E+01;
  COFD[11181] = 4.64312709E+00;
  COFD[11182] = -3.19764076E-01;
  COFD[11183] = 1.11595790E-02;
  COFD[11184] = -2.18056042E+01;
  COFD[11185] = 4.64312709E+00;
  COFD[11186] = -3.19764076E-01;
  COFD[11187] = 1.11595790E-02;
  COFD[11188] = -2.18056042E+01;
  COFD[11189] = 4.64312709E+00;
  COFD[11190] = -3.19764076E-01;
  COFD[11191] = 1.11595790E-02;
  COFD[11192] = -2.18056042E+01;
  COFD[11193] = 4.64312709E+00;
  COFD[11194] = -3.19764076E-01;
  COFD[11195] = 1.11595790E-02;
  COFD[11196] = -2.18056042E+01;
  COFD[11197] = 4.64312709E+00;
  COFD[11198] = -3.19764076E-01;
  COFD[11199] = 1.11595790E-02;
  COFD[11200] = -2.18056042E+01;
  COFD[11201] = 4.64312709E+00;
  COFD[11202] = -3.19764076E-01;
  COFD[11203] = 1.11595790E-02;
  COFD[11204] = -2.18056042E+01;
  COFD[11205] = 4.64312709E+00;
  COFD[11206] = -3.19764076E-01;
  COFD[11207] = 1.11595790E-02;
  COFD[11208] = -2.18056042E+01;
  COFD[11209] = 4.64312709E+00;
  COFD[11210] = -3.19764076E-01;
  COFD[11211] = 1.11595790E-02;
  COFD[11212] = -2.18056042E+01;
  COFD[11213] = 4.64312709E+00;
  COFD[11214] = -3.19764076E-01;
  COFD[11215] = 1.11595790E-02;
  COFD[11216] = -2.18056042E+01;
  COFD[11217] = 4.64312709E+00;
  COFD[11218] = -3.19764076E-01;
  COFD[11219] = 1.11595790E-02;
  COFD[11220] = -2.16849507E+01;
  COFD[11221] = 4.48620336E+00;
  COFD[11222] = -2.95085982E-01;
  COFD[11223] = 9.92181611E-03;
  COFD[11224] = -2.16849507E+01;
  COFD[11225] = 4.48620336E+00;
  COFD[11226] = -2.95085982E-01;
  COFD[11227] = 9.92181611E-03;
  COFD[11228] = -2.16849507E+01;
  COFD[11229] = 4.48620336E+00;
  COFD[11230] = -2.95085982E-01;
  COFD[11231] = 9.92181611E-03;
  COFD[11232] = -2.16849507E+01;
  COFD[11233] = 4.48620336E+00;
  COFD[11234] = -2.95085982E-01;
  COFD[11235] = 9.92181611E-03;
  COFD[11236] = -2.21622935E+01;
  COFD[11237] = 4.84380276E+00;
  COFD[11238] = -3.51593537E-01;
  COFD[11239] = 1.27663725E-02;
  COFD[11240] = -2.21622935E+01;
  COFD[11241] = 4.84380276E+00;
  COFD[11242] = -3.51593537E-01;
  COFD[11243] = 1.27663725E-02;
  COFD[11244] = -2.17127658E+01;
  COFD[11245] = 4.56847552E+00;
  COFD[11246] = -3.07892621E-01;
  COFD[11247] = 1.05599169E-02;
  COFD[11248] = -2.17127658E+01;
  COFD[11249] = 4.56847552E+00;
  COFD[11250] = -3.07892621E-01;
  COFD[11251] = 1.05599169E-02;
  COFD[11252] = -2.17127658E+01;
  COFD[11253] = 4.56847552E+00;
  COFD[11254] = -3.07892621E-01;
  COFD[11255] = 1.05599169E-02;
  COFD[11256] = -2.17127658E+01;
  COFD[11257] = 4.56847552E+00;
  COFD[11258] = -3.07892621E-01;
  COFD[11259] = 1.05599169E-02;
  COFD[11260] = -1.98374731E+01;
  COFD[11261] = 4.82871870E+00;
  COFD[11262] = -4.08567726E-01;
  COFD[11263] = 1.75785896E-02;
  COFD[11264] = -1.97429411E+01;
  COFD[11265] = 5.43665790E+00;
  COFD[11266] = -4.75279482E-01;
  COFD[11267] = 1.99834095E-02;
  COFD[11268] = -1.59478887E+01;
  COFD[11269] = 3.93437653E+00;
  COFD[11270] = -2.98882326E-01;
  COFD[11271] = 1.30788644E-02;
  COFD[11272] = -1.93716811E+01;
  COFD[11273] = 4.84285787E+00;
  COFD[11274] = -4.10159187E-01;
  COFD[11275] = 1.76377079E-02;
  COFD[11276] = -2.08010726E+01;
  COFD[11277] = 5.18275931E+00;
  COFD[11278] = -4.49328195E-01;
  COFD[11279] = 1.91375697E-02;
  COFD[11280] = -1.93953802E+01;
  COFD[11281] = 4.84285787E+00;
  COFD[11282] = -4.10159187E-01;
  COFD[11283] = 1.76377079E-02;
  COFD[11284] = -1.90422605E+01;
  COFD[11285] = 3.97344878E+00;
  COFD[11286] = -2.17040023E-01;
  COFD[11287] = 6.09061787E-03;
  COFD[11288] = -2.05649581E+01;
  COFD[11289] = 5.10975100E+00;
  COFD[11290] = -4.41894797E-01;
  COFD[11291] = 1.88984423E-02;
  COFD[11292] = -2.03778329E+01;
  COFD[11293] = 4.41849584E+00;
  COFD[11294] = -2.84606486E-01;
  COFD[11295] = 9.40156753E-03;
  COFD[11296] = -2.25029995E+01;
  COFD[11297] = 5.54343040E+00;
  COFD[11298] = -4.71119709E-01;
  COFD[11299] = 1.90882654E-02;
  COFD[11300] = -2.14088071E+01;
  COFD[11301] = 5.42683934E+00;
  COFD[11302] = -4.74132648E-01;
  COFD[11303] = 1.99385896E-02;
  COFD[11304] = -2.13853200E+01;
  COFD[11305] = 5.41738973E+00;
  COFD[11306] = -4.73403163E-01;
  COFD[11307] = 1.99267294E-02;
  COFD[11308] = -2.08109539E+01;
  COFD[11309] = 5.18275931E+00;
  COFD[11310] = -4.49328195E-01;
  COFD[11311] = 1.91375697E-02;
  COFD[11312] = -2.08204313E+01;
  COFD[11313] = 5.18275931E+00;
  COFD[11314] = -4.49328195E-01;
  COFD[11315] = 1.91375697E-02;
  COFD[11316] = -2.03890862E+01;
  COFD[11317] = 4.41849584E+00;
  COFD[11318] = -2.84606486E-01;
  COFD[11319] = 9.40156753E-03;
  COFD[11320] = -2.12066622E+01;
  COFD[11321] = 4.82454930E+00;
  COFD[11322] = -3.48553261E-01;
  COFD[11323] = 1.26132056E-02;
  COFD[11324] = -2.25054565E+01;
  COFD[11325] = 5.53229206E+00;
  COFD[11326] = -4.68999235E-01;
  COFD[11327] = 1.89693762E-02;
  COFD[11328] = -2.23220188E+01;
  COFD[11329] = 5.56147622E+00;
  COFD[11330] = -4.74550352E-01;
  COFD[11331] = 1.92804201E-02;
  COFD[11332] = -2.24942256E+01;
  COFD[11333] = 5.53229206E+00;
  COFD[11334] = -4.68999235E-01;
  COFD[11335] = 1.89693762E-02;
  COFD[11336] = -2.22982973E+01;
  COFD[11337] = 5.49704793E+00;
  COFD[11338] = -4.61284891E-01;
  COFD[11339] = 1.85098693E-02;
  COFD[11340] = -2.23112606E+01;
  COFD[11341] = 5.49704793E+00;
  COFD[11342] = -4.61284891E-01;
  COFD[11343] = 1.85098693E-02;
  COFD[11344] = -2.11881608E+01;
  COFD[11345] = 4.73146525E+00;
  COFD[11346] = -3.33731759E-01;
  COFD[11347] = 1.18632925E-02;
  COFD[11348] = -2.15853161E+01;
  COFD[11349] = 5.47791699E+00;
  COFD[11350] = -4.79895525E-01;
  COFD[11351] = 2.01546976E-02;
  COFD[11352] = -2.11949491E+01;
  COFD[11353] = 4.73146525E+00;
  COFD[11354] = -3.33731759E-01;
  COFD[11355] = 1.18632925E-02;
  COFD[11356] = -2.11949491E+01;
  COFD[11357] = 4.73146525E+00;
  COFD[11358] = -3.33731759E-01;
  COFD[11359] = 1.18632925E-02;
  COFD[11360] = -2.12015139E+01;
  COFD[11361] = 4.73146525E+00;
  COFD[11362] = -3.33731759E-01;
  COFD[11363] = 1.18632925E-02;
  COFD[11364] = -2.22347770E+01;
  COFD[11365] = 5.27396115E+00;
  COFD[11366] = -4.21743832E-01;
  COFD[11367] = 1.63741124E-02;
  COFD[11368] = -2.23410217E+01;
  COFD[11369] = 5.34922714E+00;
  COFD[11370] = -4.34493448E-01;
  COFD[11371] = 1.70455159E-02;
  COFD[11372] = -2.22041600E+01;
  COFD[11373] = 5.14772649E+00;
  COFD[11374] = -4.00206922E-01;
  COFD[11375] = 1.52369404E-02;
  COFD[11376] = -2.25217644E+01;
  COFD[11377] = 5.36800104E+00;
  COFD[11378] = -4.37707223E-01;
  COFD[11379] = 1.72157190E-02;
  COFD[11380] = -2.22085445E+01;
  COFD[11381] = 5.15613762E+00;
  COFD[11382] = -4.01613235E-01;
  COFD[11383] = 1.53103087E-02;
  COFD[11384] = -2.22131358E+01;
  COFD[11385] = 5.15613762E+00;
  COFD[11386] = -4.01613235E-01;
  COFD[11387] = 1.53103087E-02;
  COFD[11388] = -2.23589485E+01;
  COFD[11389] = 5.16856828E+00;
  COFD[11390] = -4.03702050E-01;
  COFD[11391] = 1.54196442E-02;
  COFD[11392] = -2.14671912E+01;
  COFD[11393] = 4.73394293E+00;
  COFD[11394] = -3.34125072E-01;
  COFD[11395] = 1.18831501E-02;
  COFD[11396] = -2.14332025E+01;
  COFD[11397] = 4.73542546E+00;
  COFD[11398] = -3.34360471E-01;
  COFD[11399] = 1.18950360E-02;
  COFD[11400] = -2.15533663E+01;
  COFD[11401] = 4.78449249E+00;
  COFD[11402] = -3.42211379E-01;
  COFD[11403] = 1.22931848E-02;
  COFD[11404] = -2.20215253E+01;
  COFD[11405] = 4.93768790E+00;
  COFD[11406] = -3.66411087E-01;
  COFD[11407] = 1.35129074E-02;
  COFD[11408] = -2.21540631E+01;
  COFD[11409] = 5.00145975E+00;
  COFD[11410] = -3.76475472E-01;
  COFD[11411] = 1.40202564E-02;
  COFD[11412] = -2.09874998E+01;
  COFD[11413] = 4.56476701E+00;
  COFD[11414] = -3.07311397E-01;
  COFD[11415] = 1.05308515E-02;
  COFD[11416] = -2.07056218E+01;
  COFD[11417] = 4.50542210E+00;
  COFD[11418] = -2.98075745E-01;
  COFD[11419] = 1.00707554E-02;
  COFD[11420] = -2.07114065E+01;
  COFD[11421] = 4.50542210E+00;
  COFD[11422] = -2.98075745E-01;
  COFD[11423] = 1.00707554E-02;
  COFD[11424] = -2.12256698E+01;
  COFD[11425] = 4.69514557E+00;
  COFD[11426] = -3.27978545E-01;
  COFD[11427] = 1.15730994E-02;
  COFD[11428] = -2.15420303E+01;
  COFD[11429] = 4.76549381E+00;
  COFD[11430] = -3.39158641E-01;
  COFD[11431] = 1.21379400E-02;
  COFD[11432] = -2.16924481E+01;
  COFD[11433] = 4.85697191E+00;
  COFD[11434] = -3.53675246E-01;
  COFD[11435] = 1.28713424E-02;
  COFD[11436] = -2.09989881E+01;
  COFD[11437] = 4.43003196E+00;
  COFD[11438] = -2.86381684E-01;
  COFD[11439] = 9.48940749E-03;
  COFD[11440] = -2.11005836E+01;
  COFD[11441] = 4.43003196E+00;
  COFD[11442] = -2.86381684E-01;
  COFD[11443] = 9.48940749E-03;
  COFD[11444] = -2.10461524E+01;
  COFD[11445] = 4.43003196E+00;
  COFD[11446] = -2.86381684E-01;
  COFD[11447] = 9.48940749E-03;
  COFD[11448] = -2.10461524E+01;
  COFD[11449] = 4.43003196E+00;
  COFD[11450] = -2.86381684E-01;
  COFD[11451] = 9.48940749E-03;
  COFD[11452] = -2.22980406E+01;
  COFD[11453] = 5.31576033E+00;
  COFD[11454] = -4.28748885E-01;
  COFD[11455] = 1.67409052E-02;
  COFD[11456] = -2.22272521E+01;
  COFD[11457] = 5.27396115E+00;
  COFD[11458] = -4.21743832E-01;
  COFD[11459] = 1.63741124E-02;
  COFD[11460] = -2.24896461E+01;
  COFD[11461] = 5.58348195E+00;
  COFD[11462] = -4.82730334E-01;
  COFD[11463] = 1.98468625E-02;
  COFD[11464] = -2.13811476E+01;
  COFD[11465] = 5.42683934E+00;
  COFD[11466] = -4.74132648E-01;
  COFD[11467] = 1.99385896E-02;
  COFD[11468] = -2.13974684E+01;
  COFD[11469] = 4.53637868E+00;
  COFD[11470] = -3.02892791E-01;
  COFD[11471] = 1.03107793E-02;
  COFD[11472] = -2.12879819E+01;
  COFD[11473] = 4.59480819E+00;
  COFD[11474] = -3.12046645E-01;
  COFD[11475] = 1.07684926E-02;
  COFD[11476] = -2.12848599E+01;
  COFD[11477] = 4.59480819E+00;
  COFD[11478] = -3.12046645E-01;
  COFD[11479] = 1.07684926E-02;
  COFD[11480] = -2.14507236E+01;
  COFD[11481] = 4.64047311E+00;
  COFD[11482] = -3.19341184E-01;
  COFD[11483] = 1.11381713E-02;
  COFD[11484] = -2.11407644E+01;
  COFD[11485] = 4.46737362E+00;
  COFD[11486] = -2.92157651E-01;
  COFD[11487] = 9.77601677E-03;
  COFD[11488] = -2.13618300E+01;
  COFD[11489] = 4.53637868E+00;
  COFD[11490] = -3.02892791E-01;
  COFD[11491] = 1.03107793E-02;
  COFD[11492] = -2.13594760E+01;
  COFD[11493] = 4.53637868E+00;
  COFD[11494] = -3.02892791E-01;
  COFD[11495] = 1.03107793E-02;
  COFD[11496] = -2.16278847E+01;
  COFD[11497] = 4.61434262E+00;
  COFD[11498] = -3.15175110E-01;
  COFD[11499] = 1.09271555E-02;
  COFD[11500] = -2.16260444E+01;
  COFD[11501] = 4.61434262E+00;
  COFD[11502] = -3.15175110E-01;
  COFD[11503] = 1.09271555E-02;
  COFD[11504] = -2.16260444E+01;
  COFD[11505] = 4.61434262E+00;
  COFD[11506] = -3.15175110E-01;
  COFD[11507] = 1.09271555E-02;
  COFD[11508] = -2.16260444E+01;
  COFD[11509] = 4.61434262E+00;
  COFD[11510] = -3.15175110E-01;
  COFD[11511] = 1.09271555E-02;
  COFD[11512] = -2.16260444E+01;
  COFD[11513] = 4.61434262E+00;
  COFD[11514] = -3.15175110E-01;
  COFD[11515] = 1.09271555E-02;
  COFD[11516] = -2.16249903E+01;
  COFD[11517] = 4.62247812E+00;
  COFD[11518] = -3.16474710E-01;
  COFD[11519] = 1.09930399E-02;
  COFD[11520] = -2.16249903E+01;
  COFD[11521] = 4.62247812E+00;
  COFD[11522] = -3.16474710E-01;
  COFD[11523] = 1.09930399E-02;
  COFD[11524] = -2.05316670E+01;
  COFD[11525] = 4.04453292E+00;
  COFD[11526] = -2.27725339E-01;
  COFD[11527] = 6.61050628E-03;
  COFD[11528] = -2.05316670E+01;
  COFD[11529] = 4.04453292E+00;
  COFD[11530] = -2.27725339E-01;
  COFD[11531] = 6.61050628E-03;
  COFD[11532] = -2.05316670E+01;
  COFD[11533] = 4.04453292E+00;
  COFD[11534] = -2.27725339E-01;
  COFD[11535] = 6.61050628E-03;
  COFD[11536] = -2.05316670E+01;
  COFD[11537] = 4.04453292E+00;
  COFD[11538] = -2.27725339E-01;
  COFD[11539] = 6.61050628E-03;
  COFD[11540] = -2.05316670E+01;
  COFD[11541] = 4.04453292E+00;
  COFD[11542] = -2.27725339E-01;
  COFD[11543] = 6.61050628E-03;
  COFD[11544] = -2.05316670E+01;
  COFD[11545] = 4.04453292E+00;
  COFD[11546] = -2.27725339E-01;
  COFD[11547] = 6.61050628E-03;
  COFD[11548] = -2.05316670E+01;
  COFD[11549] = 4.04453292E+00;
  COFD[11550] = -2.27725339E-01;
  COFD[11551] = 6.61050628E-03;
  COFD[11552] = -2.05316670E+01;
  COFD[11553] = 4.04453292E+00;
  COFD[11554] = -2.27725339E-01;
  COFD[11555] = 6.61050628E-03;
  COFD[11556] = -2.05316670E+01;
  COFD[11557] = 4.04453292E+00;
  COFD[11558] = -2.27725339E-01;
  COFD[11559] = 6.61050628E-03;
  COFD[11560] = -2.05316670E+01;
  COFD[11561] = 4.04453292E+00;
  COFD[11562] = -2.27725339E-01;
  COFD[11563] = 6.61050628E-03;
  COFD[11564] = -2.05316670E+01;
  COFD[11565] = 4.04453292E+00;
  COFD[11566] = -2.27725339E-01;
  COFD[11567] = 6.61050628E-03;
  COFD[11568] = -2.05316670E+01;
  COFD[11569] = 4.04453292E+00;
  COFD[11570] = -2.27725339E-01;
  COFD[11571] = 6.61050628E-03;
  COFD[11572] = -2.02949225E+01;
  COFD[11573] = 3.83774024E+00;
  COFD[11574] = -1.96304162E-01;
  COFD[11575] = 5.07218951E-03;
  COFD[11576] = -2.02949225E+01;
  COFD[11577] = 3.83774024E+00;
  COFD[11578] = -1.96304162E-01;
  COFD[11579] = 5.07218951E-03;
  COFD[11580] = -2.02949225E+01;
  COFD[11581] = 3.83774024E+00;
  COFD[11582] = -1.96304162E-01;
  COFD[11583] = 5.07218951E-03;
  COFD[11584] = -2.02949225E+01;
  COFD[11585] = 3.83774024E+00;
  COFD[11586] = -1.96304162E-01;
  COFD[11587] = 5.07218951E-03;
  COFD[11588] = -2.11210653E+01;
  COFD[11589] = 4.34237792E+00;
  COFD[11590] = -2.72907766E-01;
  COFD[11591] = 8.82344210E-03;
  COFD[11592] = -2.11210653E+01;
  COFD[11593] = 4.34237792E+00;
  COFD[11594] = -2.72907766E-01;
  COFD[11595] = 8.82344210E-03;
  COFD[11596] = -2.03345575E+01;
  COFD[11597] = 3.92596644E+00;
  COFD[11598] = -2.09820551E-01;
  COFD[11599] = 5.73681575E-03;
  COFD[11600] = -2.03345575E+01;
  COFD[11601] = 3.92596644E+00;
  COFD[11602] = -2.09820551E-01;
  COFD[11603] = 5.73681575E-03;
  COFD[11604] = -2.03345575E+01;
  COFD[11605] = 3.92596644E+00;
  COFD[11606] = -2.09820551E-01;
  COFD[11607] = 5.73681575E-03;
  COFD[11608] = -2.03345575E+01;
  COFD[11609] = 3.92596644E+00;
  COFD[11610] = -2.09820551E-01;
  COFD[11611] = 5.73681575E-03;
  COFD[11612] = -2.05380740E+01;
  COFD[11613] = 5.10290119E+00;
  COFD[11614] = -4.41098416E-01;
  COFD[11615] = 1.88675651E-02;
  COFD[11616] = -1.96820567E+01;
  COFD[11617] = 5.43566453E+00;
  COFD[11618] = -4.75162978E-01;
  COFD[11619] = 1.99788342E-02;
  COFD[11620] = -1.63590765E+01;
  COFD[11621] = 4.10307699E+00;
  COFD[11622] = -3.20458470E-01;
  COFD[11623] = 1.40037527E-02;
  COFD[11624] = -1.93190055E+01;
  COFD[11625] = 4.84226417E+00;
  COFD[11626] = -4.10095110E-01;
  COFD[11627] = 1.76354623E-02;
  COFD[11628] = -2.11290378E+01;
  COFD[11629] = 5.30927166E+00;
  COFD[11630] = -4.64268857E-01;
  COFD[11631] = 1.97275654E-02;
  COFD[11632] = -1.93427972E+01;
  COFD[11633] = 4.84226417E+00;
  COFD[11634] = -4.10095110E-01;
  COFD[11635] = 1.76354623E-02;
  COFD[11636] = -1.65397062E+01;
  COFD[11637] = 2.80085983E+00;
  COFD[11638] = -4.16337706E-02;
  COFD[11639] = -2.33000347E-03;
  COFD[11640] = -2.07992757E+01;
  COFD[11641] = 5.19372707E+00;
  COFD[11642] = -4.50605289E-01;
  COFD[11643] = 1.91871986E-02;
  COFD[11644] = -2.03374453E+01;
  COFD[11645] = 4.42052429E+00;
  COFD[11646] = -2.84918346E-01;
  COFD[11647] = 9.41699476E-03;
  COFD[11648] = -2.24358781E+01;
  COFD[11649] = 5.49898884E+00;
  COFD[11650] = -4.61772331E-01;
  COFD[11651] = 1.85402241E-02;
  COFD[11652] = -2.13615086E+01;
  COFD[11653] = 5.42586215E+00;
  COFD[11654] = -4.74018491E-01;
  COFD[11655] = 1.99341267E-02;
  COFD[11656] = -2.16869196E+01;
  COFD[11657] = 5.52492676E+00;
  COFD[11658] = -4.84939862E-01;
  COFD[11659] = 2.03317591E-02;
  COFD[11660] = -2.07634519E+01;
  COFD[11661] = 5.18190887E+00;
  COFD[11662] = -4.49230019E-01;
  COFD[11663] = 1.91337948E-02;
  COFD[11664] = -2.07729904E+01;
  COFD[11665] = 5.18190887E+00;
  COFD[11666] = -4.49230019E-01;
  COFD[11667] = 1.91337948E-02;
  COFD[11668] = -2.03487656E+01;
  COFD[11669] = 4.42052429E+00;
  COFD[11670] = -2.84918346E-01;
  COFD[11671] = 9.41699476E-03;
  COFD[11672] = -1.96248709E+01;
  COFD[11673] = 4.10302144E+00;
  COFD[11674] = -2.41111487E-01;
  COFD[11675] = 7.44051119E-03;
  COFD[11676] = -2.24656217E+01;
  COFD[11677] = 5.53283133E+00;
  COFD[11678] = -4.69102080E-01;
  COFD[11679] = 1.89751498E-02;
  COFD[11680] = -2.22776696E+01;
  COFD[11681] = 5.56206434E+00;
  COFD[11682] = -4.74660059E-01;
  COFD[11683] = 1.92865159E-02;
  COFD[11684] = -2.24543239E+01;
  COFD[11685] = 5.53283133E+00;
  COFD[11686] = -4.69102080E-01;
  COFD[11687] = 1.89751498E-02;
  COFD[11688] = -2.22542781E+01;
  COFD[11689] = 5.49729386E+00;
  COFD[11690] = -4.61345729E-01;
  COFD[11691] = 1.85136397E-02;
  COFD[11692] = -2.22673132E+01;
  COFD[11693] = 5.49729386E+00;
  COFD[11694] = -4.61345729E-01;
  COFD[11695] = 1.85136397E-02;
  COFD[11696] = -2.11493307E+01;
  COFD[11697] = 4.73295595E+00;
  COFD[11698] = -3.33968375E-01;
  COFD[11699] = 1.18752387E-02;
  COFD[11700] = -2.15318041E+01;
  COFD[11701] = 5.47705133E+00;
  COFD[11702] = -4.79798142E-01;
  COFD[11703] = 2.01510569E-02;
  COFD[11704] = -2.11561697E+01;
  COFD[11705] = 4.73295595E+00;
  COFD[11706] = -3.33968375E-01;
  COFD[11707] = 1.18752387E-02;
  COFD[11708] = -2.11561697E+01;
  COFD[11709] = 4.73295595E+00;
  COFD[11710] = -3.33968375E-01;
  COFD[11711] = 1.18752387E-02;
  COFD[11712] = -2.11627842E+01;
  COFD[11713] = 4.73295595E+00;
  COFD[11714] = -3.33968375E-01;
  COFD[11715] = 1.18752387E-02;
  COFD[11716] = -2.21958736E+01;
  COFD[11717] = 5.27478556E+00;
  COFD[11718] = -4.21888131E-01;
  COFD[11719] = 1.63818487E-02;
  COFD[11720] = -2.23016572E+01;
  COFD[11721] = 5.35011565E+00;
  COFD[11722] = -4.34645805E-01;
  COFD[11723] = 1.70535925E-02;
  COFD[11724] = -2.21688071E+01;
  COFD[11725] = 5.14893821E+00;
  COFD[11726] = -4.00405017E-01;
  COFD[11727] = 1.52471428E-02;
  COFD[11728] = -2.24856787E+01;
  COFD[11729] = 5.36894095E+00;
  COFD[11730] = -4.37867275E-01;
  COFD[11731] = 1.72241757E-02;
  COFD[11732] = -2.21724286E+01;
  COFD[11733] = 5.15713826E+00;
  COFD[11734] = -4.01781504E-01;
  COFD[11735] = 1.53191186E-02;
  COFD[11736] = -2.21770596E+01;
  COFD[11737] = 5.15713826E+00;
  COFD[11738] = -4.01781504E-01;
  COFD[11739] = 1.53191186E-02;
  COFD[11740] = -2.23255332E+01;
  COFD[11741] = 5.16963232E+00;
  COFD[11742] = -4.03879860E-01;
  COFD[11743] = 1.54289288E-02;
  COFD[11744] = -2.14332025E+01;
  COFD[11745] = 4.73542546E+00;
  COFD[11746] = -3.34360471E-01;
  COFD[11747] = 1.18950360E-02;
  COFD[11748] = -1.96415623E+01;
  COFD[11749] = 3.90212358E+00;
  COFD[11750] = -2.09451392E-01;
  COFD[11751] = 5.85996726E-03;
  COFD[11752] = -2.15189135E+01;
  COFD[11753] = 4.78585279E+00;
  COFD[11754] = -3.42430035E-01;
  COFD[11755] = 1.23043166E-02;
  COFD[11756] = -2.19907254E+01;
  COFD[11757] = 4.93932577E+00;
  COFD[11758] = -3.66669069E-01;
  COFD[11759] = 1.35258941E-02;
  COFD[11760] = -2.19879567E+01;
  COFD[11761] = 4.94697136E+00;
  COFD[11762] = -3.69053717E-01;
  COFD[11763] = 1.36853428E-02;
  COFD[11764] = -2.09512550E+01;
  COFD[11765] = 4.56636018E+00;
  COFD[11766] = -3.07561072E-01;
  COFD[11767] = 1.05433365E-02;
  COFD[11768] = -2.06657857E+01;
  COFD[11769] = 4.50717028E+00;
  COFD[11770] = -2.98347915E-01;
  COFD[11771] = 1.00843213E-02;
  COFD[11772] = -2.06716164E+01;
  COFD[11773] = 4.50717028E+00;
  COFD[11774] = -2.98347915E-01;
  COFD[11775] = 1.00843213E-02;
  COFD[11776] = -2.11883212E+01;
  COFD[11777] = 4.69669248E+00;
  COFD[11778] = -3.28223200E-01;
  COFD[11779] = 1.15854275E-02;
  COFD[11780] = -1.97896836E+01;
  COFD[11781] = 3.95090789E+00;
  COFD[11782] = -2.17072293E-01;
  COFD[11783] = 6.23827684E-03;
  COFD[11784] = -2.16585352E+01;
  COFD[11785] = 4.85855728E+00;
  COFD[11786] = -3.53925308E-01;
  COFD[11787] = 1.28839376E-02;
  COFD[11788] = -2.09679598E+01;
  COFD[11789] = 4.43196605E+00;
  COFD[11790] = -2.86679561E-01;
  COFD[11791] = 9.50415164E-03;
  COFD[11792] = -2.10706516E+01;
  COFD[11793] = 4.43196605E+00;
  COFD[11794] = -2.86679561E-01;
  COFD[11795] = 9.50415164E-03;
  COFD[11796] = -2.10156052E+01;
  COFD[11797] = 4.43196605E+00;
  COFD[11798] = -2.86679561E-01;
  COFD[11799] = 9.50415164E-03;
  COFD[11800] = -2.10156052E+01;
  COFD[11801] = 4.43196605E+00;
  COFD[11802] = -2.86679561E-01;
  COFD[11803] = 9.50415164E-03;
  COFD[11804] = -2.22592409E+01;
  COFD[11805] = 5.31674131E+00;
  COFD[11806] = -4.28914033E-01;
  COFD[11807] = 1.67495659E-02;
  COFD[11808] = -2.21882949E+01;
  COFD[11809] = 5.27478556E+00;
  COFD[11810] = -4.21888131E-01;
  COFD[11811] = 1.63818487E-02;
  COFD[11812] = -2.24475991E+01;
  COFD[11813] = 5.58340344E+00;
  COFD[11814] = -4.82747296E-01;
  COFD[11815] = 1.98486881E-02;
  COFD[11816] = -2.13337515E+01;
  COFD[11817] = 5.42586215E+00;
  COFD[11818] = -4.74018491E-01;
  COFD[11819] = 1.99341267E-02;
  COFD[11820] = -2.02348873E+01;
  COFD[11821] = 4.02839336E+00;
  COFD[11822] = -2.29443606E-01;
  COFD[11823] = 6.85128471E-03;
  COFD[11824] = -1.97447437E+01;
  COFD[11825] = 3.90103244E+00;
  COFD[11826] = -2.10127153E-01;
  COFD[11827] = 5.91275235E-03;
  COFD[11828] = -1.97415912E+01;
  COFD[11829] = 3.90103244E+00;
  COFD[11830] = -2.10127153E-01;
  COFD[11831] = 5.91275235E-03;
  COFD[11832] = -1.97177022E+01;
  COFD[11833] = 3.84305966E+00;
  COFD[11834] = -2.00754696E-01;
  COFD[11835] = 5.44148974E-03;
  COFD[11836] = -2.11101650E+01;
  COFD[11837] = 4.46907648E+00;
  COFD[11838] = -2.92422647E-01;
  COFD[11839] = 9.78921148E-03;
  COFD[11840] = -2.01988591E+01;
  COFD[11841] = 4.02839336E+00;
  COFD[11842] = -2.29443606E-01;
  COFD[11843] = 6.85128471E-03;
  COFD[11844] = -2.01964803E+01;
  COFD[11845] = 4.02839336E+00;
  COFD[11846] = -2.29443606E-01;
  COFD[11847] = 6.85128471E-03;
  COFD[11848] = -2.16000912E+01;
  COFD[11849] = 4.61573576E+00;
  COFD[11850] = -3.15398040E-01;
  COFD[11851] = 1.09384650E-02;
  COFD[11852] = -2.15982303E+01;
  COFD[11853] = 4.61573576E+00;
  COFD[11854] = -3.15398040E-01;
  COFD[11855] = 1.09384650E-02;
  COFD[11856] = -2.15982303E+01;
  COFD[11857] = 4.61573576E+00;
  COFD[11858] = -3.15398040E-01;
  COFD[11859] = 1.09384650E-02;
  COFD[11860] = -2.15982303E+01;
  COFD[11861] = 4.61573576E+00;
  COFD[11862] = -3.15398040E-01;
  COFD[11863] = 1.09384650E-02;
  COFD[11864] = -2.15982303E+01;
  COFD[11865] = 4.61573576E+00;
  COFD[11866] = -3.15398040E-01;
  COFD[11867] = 1.09384650E-02;
  COFD[11868] = -2.15272794E+01;
  COFD[11869] = 4.59621415E+00;
  COFD[11870] = -3.13058965E-01;
  COFD[11871] = 1.08456156E-02;
  COFD[11872] = -2.15272794E+01;
  COFD[11873] = 4.59621415E+00;
  COFD[11874] = -3.13058965E-01;
  COFD[11875] = 1.08456156E-02;
  COFD[11876] = -2.00647907E+01;
  COFD[11877] = 3.86026424E+00;
  COFD[11878] = -2.02407333E-01;
  COFD[11879] = 5.46907954E-03;
  COFD[11880] = -2.00647907E+01;
  COFD[11881] = 3.86026424E+00;
  COFD[11882] = -2.02407333E-01;
  COFD[11883] = 5.46907954E-03;
  COFD[11884] = -2.00647907E+01;
  COFD[11885] = 3.86026424E+00;
  COFD[11886] = -2.02407333E-01;
  COFD[11887] = 5.46907954E-03;
  COFD[11888] = -2.00647907E+01;
  COFD[11889] = 3.86026424E+00;
  COFD[11890] = -2.02407333E-01;
  COFD[11891] = 5.46907954E-03;
  COFD[11892] = -2.00647907E+01;
  COFD[11893] = 3.86026424E+00;
  COFD[11894] = -2.02407333E-01;
  COFD[11895] = 5.46907954E-03;
  COFD[11896] = -2.00647907E+01;
  COFD[11897] = 3.86026424E+00;
  COFD[11898] = -2.02407333E-01;
  COFD[11899] = 5.46907954E-03;
  COFD[11900] = -2.00647907E+01;
  COFD[11901] = 3.86026424E+00;
  COFD[11902] = -2.02407333E-01;
  COFD[11903] = 5.46907954E-03;
  COFD[11904] = -2.00647907E+01;
  COFD[11905] = 3.86026424E+00;
  COFD[11906] = -2.02407333E-01;
  COFD[11907] = 5.46907954E-03;
  COFD[11908] = -2.00647907E+01;
  COFD[11909] = 3.86026424E+00;
  COFD[11910] = -2.02407333E-01;
  COFD[11911] = 5.46907954E-03;
  COFD[11912] = -2.00647907E+01;
  COFD[11913] = 3.86026424E+00;
  COFD[11914] = -2.02407333E-01;
  COFD[11915] = 5.46907954E-03;
  COFD[11916] = -2.00647907E+01;
  COFD[11917] = 3.86026424E+00;
  COFD[11918] = -2.02407333E-01;
  COFD[11919] = 5.46907954E-03;
  COFD[11920] = -2.00647907E+01;
  COFD[11921] = 3.86026424E+00;
  COFD[11922] = -2.02407333E-01;
  COFD[11923] = 5.46907954E-03;
  COFD[11924] = -1.99255285E+01;
  COFD[11925] = 3.69583436E+00;
  COFD[11926] = -1.77091672E-01;
  COFD[11927] = 4.21695685E-03;
  COFD[11928] = -1.99255285E+01;
  COFD[11929] = 3.69583436E+00;
  COFD[11930] = -1.77091672E-01;
  COFD[11931] = 4.21695685E-03;
  COFD[11932] = -1.99255285E+01;
  COFD[11933] = 3.69583436E+00;
  COFD[11934] = -1.77091672E-01;
  COFD[11935] = 4.21695685E-03;
  COFD[11936] = -1.99255285E+01;
  COFD[11937] = 3.69583436E+00;
  COFD[11938] = -1.77091672E-01;
  COFD[11939] = 4.21695685E-03;
  COFD[11940] = -2.10950181E+01;
  COFD[11941] = 4.34433003E+00;
  COFD[11942] = -2.73207428E-01;
  COFD[11943] = 8.83823384E-03;
  COFD[11944] = -2.10950181E+01;
  COFD[11945] = 4.34433003E+00;
  COFD[11946] = -2.73207428E-01;
  COFD[11947] = 8.83823384E-03;
  COFD[11948] = -1.98067360E+01;
  COFD[11949] = 3.71493056E+00;
  COFD[11950] = -1.80752425E-01;
  COFD[11951] = 4.42380779E-03;
  COFD[11952] = -1.98067360E+01;
  COFD[11953] = 3.71493056E+00;
  COFD[11954] = -1.80752425E-01;
  COFD[11955] = 4.42380779E-03;
  COFD[11956] = -1.98067360E+01;
  COFD[11957] = 3.71493056E+00;
  COFD[11958] = -1.80752425E-01;
  COFD[11959] = 4.42380779E-03;
  COFD[11960] = -1.98067360E+01;
  COFD[11961] = 3.71493056E+00;
  COFD[11962] = -1.80752425E-01;
  COFD[11963] = 4.42380779E-03;
  COFD[11964] = -2.07438908E+01;
  COFD[11965] = 5.17746061E+00;
  COFD[11966] = -4.48721337E-01;
  COFD[11967] = 1.91144697E-02;
  COFD[11968] = -1.96658774E+01;
  COFD[11969] = 5.41732785E+00;
  COFD[11970] = -4.73401182E-01;
  COFD[11971] = 1.99268853E-02;
  COFD[11972] = -1.58351561E+01;
  COFD[11973] = 3.89547138E+00;
  COFD[11974] = -2.93835564E-01;
  COFD[11975] = 1.28596498E-02;
  COFD[11976] = -1.92835393E+01;
  COFD[11977] = 4.81668879E+00;
  COFD[11978] = -4.07151011E-01;
  COFD[11979] = 1.75229488E-02;
  COFD[11980] = -2.07148889E+01;
  COFD[11981] = 5.15830988E+00;
  COFD[11982] = -4.46702918E-01;
  COFD[11983] = 1.90459497E-02;
  COFD[11984] = -1.93072384E+01;
  COFD[11985] = 4.81668879E+00;
  COFD[11986] = -4.07151011E-01;
  COFD[11987] = 1.75229488E-02;
  COFD[11988] = -1.92199932E+01;
  COFD[11989] = 4.06339374E+00;
  COFD[11990] = -2.30567519E-01;
  COFD[11991] = 6.74918680E-03;
  COFD[11992] = -2.04682083E+01;
  COFD[11993] = 5.07995245E+00;
  COFD[11994] = -4.38423992E-01;
  COFD[11995] = 1.87635861E-02;
  COFD[11996] = -2.05022787E+01;
  COFD[11997] = 4.48572337E+00;
  COFD[11998] = -2.95011367E-01;
  COFD[11999] = 9.91810091E-03;
  COFD[12000] = -2.25171676E+01;
  COFD[12001] = 5.56329531E+00;
  COFD[12002] = -4.74889573E-01;
  COFD[12003] = 1.92992655E-02;
  COFD[12004] = -2.13531209E+01;
  COFD[12005] = 5.41551978E+00;
  COFD[12006] = -4.73373960E-01;
  COFD[12007] = 1.99340216E-02;
  COFD[12008] = -2.13355255E+01;
  COFD[12009] = 5.40862298E+00;
  COFD[12010] = -4.73011816E-01;
  COFD[12011] = 1.99398284E-02;
  COFD[12012] = -2.07247702E+01;
  COFD[12013] = 5.15830988E+00;
  COFD[12014] = -4.46702918E-01;
  COFD[12015] = 1.90459497E-02;
  COFD[12016] = -2.07342476E+01;
  COFD[12017] = 5.15830988E+00;
  COFD[12018] = -4.46702918E-01;
  COFD[12019] = 1.90459497E-02;
  COFD[12020] = -2.05135320E+01;
  COFD[12021] = 4.48572337E+00;
  COFD[12022] = -2.95011367E-01;
  COFD[12023] = 9.91810091E-03;
  COFD[12024] = -2.13079713E+01;
  COFD[12025] = 4.88198265E+00;
  COFD[12026] = -3.57620372E-01;
  COFD[12027] = 1.30700667E-02;
  COFD[12028] = -2.25189218E+01;
  COFD[12029] = 5.55162937E+00;
  COFD[12030] = -4.72696103E-01;
  COFD[12031] = 1.91769779E-02;
  COFD[12032] = -2.23319290E+01;
  COFD[12033] = 5.57975926E+00;
  COFD[12034] = -4.78115332E-01;
  COFD[12035] = 1.94827982E-02;
  COFD[12036] = -2.25076910E+01;
  COFD[12037] = 5.55162937E+00;
  COFD[12038] = -4.72696103E-01;
  COFD[12039] = 1.91769779E-02;
  COFD[12040] = -2.22807530E+01;
  COFD[12041] = 5.50361708E+00;
  COFD[12042] = -4.63194534E-01;
  COFD[12043] = 1.86342677E-02;
  COFD[12044] = -2.22937162E+01;
  COFD[12045] = 5.50361708E+00;
  COFD[12046] = -4.63194534E-01;
  COFD[12047] = 1.86342677E-02;
  COFD[12048] = -2.12740022E+01;
  COFD[12049] = 4.78222428E+00;
  COFD[12050] = -3.41846868E-01;
  COFD[12051] = 1.22746304E-02;
  COFD[12052] = -2.14842795E+01;
  COFD[12053] = 5.44861022E+00;
  COFD[12054] = -4.76672017E-01;
  COFD[12055] = 2.00376930E-02;
  COFD[12056] = -2.12807905E+01;
  COFD[12057] = 4.78222428E+00;
  COFD[12058] = -3.41846868E-01;
  COFD[12059] = 1.22746304E-02;
  COFD[12060] = -2.12807905E+01;
  COFD[12061] = 4.78222428E+00;
  COFD[12062] = -3.41846868E-01;
  COFD[12063] = 1.22746304E-02;
  COFD[12064] = -2.12873553E+01;
  COFD[12065] = 4.78222428E+00;
  COFD[12066] = -3.41846868E-01;
  COFD[12067] = 1.22746304E-02;
  COFD[12068] = -2.22922989E+01;
  COFD[12069] = 5.31274238E+00;
  COFD[12070] = -4.28240794E-01;
  COFD[12071] = 1.67142592E-02;
  COFD[12072] = -2.23848040E+01;
  COFD[12073] = 5.38201882E+00;
  COFD[12074] = -4.40123984E-01;
  COFD[12075] = 1.73443386E-02;
  COFD[12076] = -2.22630625E+01;
  COFD[12077] = 5.18692405E+00;
  COFD[12078] = -4.06749330E-01;
  COFD[12079] = 1.55782279E-02;
  COFD[12080] = -2.25569803E+01;
  COFD[12081] = 5.39690645E+00;
  COFD[12082] = -4.42794764E-01;
  COFD[12083] = 1.74894394E-02;
  COFD[12084] = -2.22694808E+01;
  COFD[12085] = 5.19628863E+00;
  COFD[12086] = -4.08298930E-01;
  COFD[12087] = 1.56586995E-02;
  COFD[12088] = -2.22740721E+01;
  COFD[12089] = 5.19628863E+00;
  COFD[12090] = -4.08298930E-01;
  COFD[12091] = 1.56586995E-02;
  COFD[12092] = -2.24198058E+01;
  COFD[12093] = 5.20842429E+00;
  COFD[12094] = -4.10339858E-01;
  COFD[12095] = 1.57655236E-02;
  COFD[12096] = -2.15533663E+01;
  COFD[12097] = 4.78449249E+00;
  COFD[12098] = -3.42211379E-01;
  COFD[12099] = 1.22931848E-02;
  COFD[12100] = -2.15189135E+01;
  COFD[12101] = 4.78585279E+00;
  COFD[12102] = -3.42430035E-01;
  COFD[12103] = 1.23043166E-02;
  COFD[12104] = -2.16533778E+01;
  COFD[12105] = 4.84093894E+00;
  COFD[12106] = -3.51139888E-01;
  COFD[12107] = 1.27434726E-02;
  COFD[12108] = -2.21302453E+01;
  COFD[12109] = 4.99785750E+00;
  COFD[12110] = -3.75900124E-01;
  COFD[12111] = 1.39910487E-02;
  COFD[12112] = -2.22401881E+01;
  COFD[12113] = 5.05175676E+00;
  COFD[12114] = -3.84543744E-01;
  COFD[12115] = 1.44308407E-02;
  COFD[12116] = -2.10792310E+01;
  COFD[12117] = 4.61776665E+00;
  COFD[12118] = -3.15723106E-01;
  COFD[12119] = 1.09549586E-02;
  COFD[12120] = -2.08213639E+01;
  COFD[12121] = 4.56898662E+00;
  COFD[12122] = -3.07972737E-01;
  COFD[12123] = 1.05639236E-02;
  COFD[12124] = -2.08271486E+01;
  COFD[12125] = 4.56898662E+00;
  COFD[12126] = -3.07972737E-01;
  COFD[12127] = 1.05639236E-02;
  COFD[12128] = -2.13235651E+01;
  COFD[12129] = 4.75112312E+00;
  COFD[12130] = -3.36848705E-01;
  COFD[12131] = 1.20205650E-02;
  COFD[12132] = -2.16340062E+01;
  COFD[12133] = 4.81851414E+00;
  COFD[12134] = -3.47605356E-01;
  COFD[12135] = 1.25656072E-02;
  COFD[12136] = -2.17956834E+01;
  COFD[12137] = 4.91479685E+00;
  COFD[12138] = -3.62802576E-01;
  COFD[12139] = 1.33312167E-02;
  COFD[12140] = -2.11220157E+01;
  COFD[12141] = 4.49601080E+00;
  COFD[12142] = -2.96611137E-01;
  COFD[12143] = 9.99777546E-03;
  COFD[12144] = -2.12236112E+01;
  COFD[12145] = 4.49601080E+00;
  COFD[12146] = -2.96611137E-01;
  COFD[12147] = 9.99777546E-03;
  COFD[12148] = -2.11691800E+01;
  COFD[12149] = 4.49601080E+00;
  COFD[12150] = -2.96611137E-01;
  COFD[12151] = 9.99777546E-03;
  COFD[12152] = -2.11691800E+01;
  COFD[12153] = 4.49601080E+00;
  COFD[12154] = -2.96611137E-01;
  COFD[12155] = 9.99777546E-03;
  COFD[12156] = -2.23409162E+01;
  COFD[12157] = 5.34800897E+00;
  COFD[12158] = -4.34284570E-01;
  COFD[12159] = 1.70344433E-02;
  COFD[12160] = -2.22847741E+01;
  COFD[12161] = 5.31274238E+00;
  COFD[12162] = -4.28240794E-01;
  COFD[12163] = 1.67142592E-02;
  COFD[12164] = -2.24622995E+01;
  COFD[12165] = 5.58582857E+00;
  COFD[12166] = -4.84085296E-01;
  COFD[12167] = 1.99478862E-02;
  COFD[12168] = -2.13254615E+01;
  COFD[12169] = 5.41551978E+00;
  COFD[12170] = -4.73373960E-01;
  COFD[12171] = 1.99340216E-02;
  COFD[12172] = -2.15043501E+01;
  COFD[12173] = 4.59527345E+00;
  COFD[12174] = -3.12121188E-01;
  COFD[12175] = 1.07722703E-02;
  COFD[12176] = -2.13781001E+01;
  COFD[12177] = 4.64716064E+00;
  COFD[12178] = -3.20407039E-01;
  COFD[12179] = 1.11921352E-02;
  COFD[12180] = -2.13749780E+01;
  COFD[12181] = 4.64716064E+00;
  COFD[12182] = -3.20407039E-01;
  COFD[12183] = 1.11921352E-02;
  COFD[12184] = -2.15533687E+01;
  COFD[12185] = 4.69799782E+00;
  COFD[12186] = -3.28429676E-01;
  COFD[12187] = 1.15958326E-02;
  COFD[12188] = -2.12601304E+01;
  COFD[12189] = 4.53184484E+00;
  COFD[12190] = -3.02188552E-01;
  COFD[12191] = 1.02757382E-02;
  COFD[12192] = -2.14687118E+01;
  COFD[12193] = 4.59527345E+00;
  COFD[12194] = -3.12121188E-01;
  COFD[12195] = 1.07722703E-02;
  COFD[12196] = -2.14663577E+01;
  COFD[12197] = 4.59527345E+00;
  COFD[12198] = -3.12121188E-01;
  COFD[12199] = 1.07722703E-02;
  COFD[12200] = -2.17271133E+01;
  COFD[12201] = 4.67024106E+00;
  COFD[12202] = -3.24044321E-01;
  COFD[12203] = 1.13750034E-02;
  COFD[12204] = -2.17252730E+01;
  COFD[12205] = 4.67024106E+00;
  COFD[12206] = -3.24044321E-01;
  COFD[12207] = 1.13750034E-02;
  COFD[12208] = -2.17252730E+01;
  COFD[12209] = 4.67024106E+00;
  COFD[12210] = -3.24044321E-01;
  COFD[12211] = 1.13750034E-02;
  COFD[12212] = -2.17252730E+01;
  COFD[12213] = 4.67024106E+00;
  COFD[12214] = -3.24044321E-01;
  COFD[12215] = 1.13750034E-02;
  COFD[12216] = -2.17252730E+01;
  COFD[12217] = 4.67024106E+00;
  COFD[12218] = -3.24044321E-01;
  COFD[12219] = 1.13750034E-02;
  COFD[12220] = -2.17261041E+01;
  COFD[12221] = 4.67918739E+00;
  COFD[12222] = -3.25456598E-01;
  COFD[12223] = 1.14460824E-02;
  COFD[12224] = -2.17261041E+01;
  COFD[12225] = 4.67918739E+00;
  COFD[12226] = -3.25456598E-01;
  COFD[12227] = 1.14460824E-02;
  COFD[12228] = -2.07088264E+01;
  COFD[12229] = 4.13288186E+00;
  COFD[12230] = -2.41054643E-01;
  COFD[12231] = 7.26113993E-03;
  COFD[12232] = -2.07088264E+01;
  COFD[12233] = 4.13288186E+00;
  COFD[12234] = -2.41054643E-01;
  COFD[12235] = 7.26113993E-03;
  COFD[12236] = -2.07088264E+01;
  COFD[12237] = 4.13288186E+00;
  COFD[12238] = -2.41054643E-01;
  COFD[12239] = 7.26113993E-03;
  COFD[12240] = -2.07088264E+01;
  COFD[12241] = 4.13288186E+00;
  COFD[12242] = -2.41054643E-01;
  COFD[12243] = 7.26113993E-03;
  COFD[12244] = -2.07088264E+01;
  COFD[12245] = 4.13288186E+00;
  COFD[12246] = -2.41054643E-01;
  COFD[12247] = 7.26113993E-03;
  COFD[12248] = -2.07088264E+01;
  COFD[12249] = 4.13288186E+00;
  COFD[12250] = -2.41054643E-01;
  COFD[12251] = 7.26113993E-03;
  COFD[12252] = -2.07088264E+01;
  COFD[12253] = 4.13288186E+00;
  COFD[12254] = -2.41054643E-01;
  COFD[12255] = 7.26113993E-03;
  COFD[12256] = -2.07088264E+01;
  COFD[12257] = 4.13288186E+00;
  COFD[12258] = -2.41054643E-01;
  COFD[12259] = 7.26113993E-03;
  COFD[12260] = -2.07088264E+01;
  COFD[12261] = 4.13288186E+00;
  COFD[12262] = -2.41054643E-01;
  COFD[12263] = 7.26113993E-03;
  COFD[12264] = -2.07088264E+01;
  COFD[12265] = 4.13288186E+00;
  COFD[12266] = -2.41054643E-01;
  COFD[12267] = 7.26113993E-03;
  COFD[12268] = -2.07088264E+01;
  COFD[12269] = 4.13288186E+00;
  COFD[12270] = -2.41054643E-01;
  COFD[12271] = 7.26113993E-03;
  COFD[12272] = -2.07088264E+01;
  COFD[12273] = 4.13288186E+00;
  COFD[12274] = -2.41054643E-01;
  COFD[12275] = 7.26113993E-03;
  COFD[12276] = -2.04236450E+01;
  COFD[12277] = 3.90507827E+00;
  COFD[12278] = -2.06632747E-01;
  COFD[12279] = 5.58034687E-03;
  COFD[12280] = -2.04236450E+01;
  COFD[12281] = 3.90507827E+00;
  COFD[12282] = -2.06632747E-01;
  COFD[12283] = 5.58034687E-03;
  COFD[12284] = -2.04236450E+01;
  COFD[12285] = 3.90507827E+00;
  COFD[12286] = -2.06632747E-01;
  COFD[12287] = 5.58034687E-03;
  COFD[12288] = -2.04236450E+01;
  COFD[12289] = 3.90507827E+00;
  COFD[12290] = -2.06632747E-01;
  COFD[12291] = 5.58034687E-03;
  COFD[12292] = -2.12591815E+01;
  COFD[12293] = 4.41437136E+00;
  COFD[12294] = -2.83972458E-01;
  COFD[12295] = 9.37020617E-03;
  COFD[12296] = -2.12591815E+01;
  COFD[12297] = 4.41437136E+00;
  COFD[12298] = -2.83972458E-01;
  COFD[12299] = 9.37020617E-03;
  COFD[12300] = -2.04999495E+01;
  COFD[12301] = 4.00914737E+00;
  COFD[12302] = -2.22398560E-01;
  COFD[12303] = 6.35106995E-03;
  COFD[12304] = -2.04999495E+01;
  COFD[12305] = 4.00914737E+00;
  COFD[12306] = -2.22398560E-01;
  COFD[12307] = 6.35106995E-03;
  COFD[12308] = -2.04999495E+01;
  COFD[12309] = 4.00914737E+00;
  COFD[12310] = -2.22398560E-01;
  COFD[12311] = 6.35106995E-03;
  COFD[12312] = -2.04999495E+01;
  COFD[12313] = 4.00914737E+00;
  COFD[12314] = -2.22398560E-01;
  COFD[12315] = 6.35106995E-03;
  COFD[12316] = -2.04414817E+01;
  COFD[12317] = 5.07313588E+00;
  COFD[12318] = -4.37626390E-01;
  COFD[12319] = 1.87324032E-02;
  COFD[12320] = -1.97252430E+01;
  COFD[12321] = 5.38884098E+00;
  COFD[12322] = -4.71627912E-01;
  COFD[12323] = 1.99273178E-02;
  COFD[12324] = -1.56919300E+01;
  COFD[12325] = 3.77842689E+00;
  COFD[12326] = -2.78523399E-01;
  COFD[12327] = 1.21896111E-02;
  COFD[12328] = -1.92404489E+01;
  COFD[12329] = 4.73921581E+00;
  COFD[12330] = -3.98017274E-01;
  COFD[12331] = 1.71639614E-02;
  COFD[12332] = -2.07257190E+01;
  COFD[12333] = 5.10688723E+00;
  COFD[12334] = -4.41563971E-01;
  COFD[12335] = 1.88857198E-02;
  COFD[12336] = -1.92651124E+01;
  COFD[12337] = 4.73921581E+00;
  COFD[12338] = -3.98017274E-01;
  COFD[12339] = 1.71639614E-02;
  COFD[12340] = -1.98682684E+01;
  COFD[12341] = 4.28648872E+00;
  COFD[12342] = -2.64358750E-01;
  COFD[12343] = 8.40263071E-03;
  COFD[12344] = -2.03988256E+01;
  COFD[12345] = 4.99562188E+00;
  COFD[12346] = -4.28482025E-01;
  COFD[12347] = 1.83720948E-02;
  COFD[12348] = -2.09802324E+01;
  COFD[12349] = 4.64167142E+00;
  COFD[12350] = -3.19532110E-01;
  COFD[12351] = 1.11478359E-02;
  COFD[12352] = -2.26897123E+01;
  COFD[12353] = 5.58518389E+00;
  COFD[12354] = -4.80570209E-01;
  COFD[12355] = 1.96586179E-02;
  COFD[12356] = -2.13903523E+01;
  COFD[12357] = 5.38519776E+00;
  COFD[12358] = -4.71344997E-01;
  COFD[12359] = 1.99226932E-02;
  COFD[12360] = -2.13695648E+01;
  COFD[12361] = 5.37614538E+00;
  COFD[12362] = -4.70679659E-01;
  COFD[12363] = 1.99143937E-02;
  COFD[12364] = -2.07362677E+01;
  COFD[12365] = 5.10688723E+00;
  COFD[12366] = -4.41563971E-01;
  COFD[12367] = 1.88857198E-02;
  COFD[12368] = -2.07463986E+01;
  COFD[12369] = 5.10688723E+00;
  COFD[12370] = -4.41563971E-01;
  COFD[12371] = 1.88857198E-02;
  COFD[12372] = -2.09921970E+01;
  COFD[12373] = 4.64167142E+00;
  COFD[12374] = -3.19532110E-01;
  COFD[12375] = 1.11478359E-02;
  COFD[12376] = -2.17771659E+01;
  COFD[12377] = 5.03453866E+00;
  COFD[12378] = -3.81762947E-01;
  COFD[12379] = 1.42886762E-02;
  COFD[12380] = -2.27001888E+01;
  COFD[12381] = 5.58468914E+00;
  COFD[12382] = -4.79958407E-01;
  COFD[12383] = 1.96104043E-02;
  COFD[12384] = -2.24603291E+01;
  COFD[12385] = 5.58501539E+00;
  COFD[12386] = -4.81433860E-01;
  COFD[12387] = 1.97311245E-02;
  COFD[12388] = -2.26882474E+01;
  COFD[12389] = 5.58468914E+00;
  COFD[12390] = -4.79958407E-01;
  COFD[12391] = 1.96104043E-02;
  COFD[12392] = -2.24990689E+01;
  COFD[12393] = 5.55026833E+00;
  COFD[12394] = -4.72437808E-01;
  COFD[12395] = 1.91625195E-02;
  COFD[12396] = -2.25127917E+01;
  COFD[12397] = 5.55026833E+00;
  COFD[12398] = -4.72437808E-01;
  COFD[12399] = 1.91625195E-02;
  COFD[12400] = -2.17463721E+01;
  COFD[12401] = 4.93496210E+00;
  COFD[12402] = -3.65981745E-01;
  COFD[12403] = 1.34912948E-02;
  COFD[12404] = -2.15322483E+01;
  COFD[12405] = 5.40448560E+00;
  COFD[12406] = -4.72711417E-01;
  COFD[12407] = 1.99362480E-02;
  COFD[12408] = -2.17537066E+01;
  COFD[12409] = 4.93496210E+00;
  COFD[12410] = -3.65981745E-01;
  COFD[12411] = 1.34912948E-02;
  COFD[12412] = -2.17537066E+01;
  COFD[12413] = 4.93496210E+00;
  COFD[12414] = -3.65981745E-01;
  COFD[12415] = 1.34912948E-02;
  COFD[12416] = -2.17608073E+01;
  COFD[12417] = 4.93496210E+00;
  COFD[12418] = -3.65981745E-01;
  COFD[12419] = 1.34912948E-02;
  COFD[12420] = -2.25972030E+01;
  COFD[12421] = 5.39655717E+00;
  COFD[12422] = -4.42728390E-01;
  COFD[12423] = 1.74857336E-02;
  COFD[12424] = -2.26485292E+01;
  COFD[12425] = 5.44696782E+00;
  COFD[12426] = -4.51976837E-01;
  COFD[12427] = 1.79942461E-02;
  COFD[12428] = -2.25720206E+01;
  COFD[12429] = 5.27220175E+00;
  COFD[12430] = -4.21436175E-01;
  COFD[12431] = 1.63576263E-02;
  COFD[12432] = -2.28101215E+01;
  COFD[12433] = 5.46112592E+00;
  COFD[12434] = -4.54556926E-01;
  COFD[12435] = 1.81357650E-02;
  COFD[12436] = -2.25735359E+01;
  COFD[12437] = 5.27888680E+00;
  COFD[12438] = -4.22608469E-01;
  COFD[12439] = 1.64205533E-02;
  COFD[12440] = -2.25785595E+01;
  COFD[12441] = 5.27888680E+00;
  COFD[12442] = -4.22608469E-01;
  COFD[12443] = 1.64205533E-02;
  COFD[12444] = -2.27197569E+01;
  COFD[12445] = 5.29216864E+00;
  COFD[12446] = -4.24828662E-01;
  COFD[12447] = 1.65366835E-02;
  COFD[12448] = -2.20215253E+01;
  COFD[12449] = 4.93768790E+00;
  COFD[12450] = -3.66411087E-01;
  COFD[12451] = 1.35129074E-02;
  COFD[12452] = -2.19907254E+01;
  COFD[12453] = 4.93932577E+00;
  COFD[12454] = -3.66669069E-01;
  COFD[12455] = 1.35258941E-02;
  COFD[12456] = -2.21302453E+01;
  COFD[12457] = 4.99785750E+00;
  COFD[12458] = -3.75900124E-01;
  COFD[12459] = 1.39910487E-02;
  COFD[12460] = -2.25387388E+01;
  COFD[12461] = 5.12713969E+00;
  COFD[12462] = -3.96797470E-01;
  COFD[12463] = 1.50599903E-02;
  COFD[12464] = -2.26201326E+01;
  COFD[12465] = 5.16909062E+00;
  COFD[12466] = -4.03789335E-01;
  COFD[12467] = 1.54242019E-02;
  COFD[12468] = -2.15342924E+01;
  COFD[12469] = 4.76557679E+00;
  COFD[12470] = -3.39171992E-01;
  COFD[12471] = 1.21386188E-02;
  COFD[12472] = -2.12888348E+01;
  COFD[12473] = 4.71644372E+00;
  COFD[12474] = -3.31349990E-01;
  COFD[12475] = 1.17430818E-02;
  COFD[12476] = -2.12951174E+01;
  COFD[12477] = 4.71644372E+00;
  COFD[12478] = -3.31349990E-01;
  COFD[12479] = 1.17430818E-02;
  COFD[12480] = -2.17839644E+01;
  COFD[12481] = 4.89694310E+00;
  COFD[12482] = -3.59986570E-01;
  COFD[12483] = 1.31893778E-02;
  COFD[12484] = -2.21072261E+01;
  COFD[12485] = 4.97465065E+00;
  COFD[12486] = -3.72233321E-01;
  COFD[12487] = 1.38060190E-02;
  COFD[12488] = -2.22494020E+01;
  COFD[12489] = 5.06188845E+00;
  COFD[12490] = -3.86186850E-01;
  COFD[12491] = 1.45150393E-02;
  COFD[12492] = -2.15941797E+01;
  COFD[12493] = 4.65048212E+00;
  COFD[12494] = -3.20931552E-01;
  COFD[12495] = 1.12185393E-02;
  COFD[12496] = -2.17079881E+01;
  COFD[12497] = 4.65048212E+00;
  COFD[12498] = -3.20931552E-01;
  COFD[12499] = 1.12185393E-02;
  COFD[12500] = -2.16466694E+01;
  COFD[12501] = 4.65048212E+00;
  COFD[12502] = -3.20931552E-01;
  COFD[12503] = 1.12185393E-02;
  COFD[12504] = -2.16466694E+01;
  COFD[12505] = 4.65048212E+00;
  COFD[12506] = -3.20931552E-01;
  COFD[12507] = 1.12185393E-02;
  COFD[12508] = -2.26203739E+01;
  COFD[12509] = 5.42039607E+00;
  COFD[12510] = -4.47178505E-01;
  COFD[12511] = 1.77324253E-02;
  COFD[12512] = -2.25890996E+01;
  COFD[12513] = 5.39655717E+00;
  COFD[12514] = -4.42728390E-01;
  COFD[12515] = 1.74857336E-02;
  COFD[12516] = -2.26361359E+01;
  COFD[12517] = 5.61137362E+00;
  COFD[12518] = -4.90253090E-01;
  COFD[12519] = 2.03300559E-02;
  COFD[12520] = -2.13616785E+01;
  COFD[12521] = 5.38519776E+00;
  COFD[12522] = -4.71344997E-01;
  COFD[12523] = 1.99226932E-02;
  COFD[12524] = -2.19617978E+01;
  COFD[12525] = 4.74287111E+00;
  COFD[12526] = -3.35542558E-01;
  COFD[12527] = 1.19547206E-02;
  COFD[12528] = -2.18301654E+01;
  COFD[12529] = 4.79216198E+00;
  COFD[12530] = -3.43444669E-01;
  COFD[12531] = 1.23559878E-02;
  COFD[12532] = -2.18267078E+01;
  COFD[12533] = 4.79216198E+00;
  COFD[12534] = -3.43444669E-01;
  COFD[12535] = 1.23559878E-02;
  COFD[12536] = -2.19997166E+01;
  COFD[12537] = 4.84260436E+00;
  COFD[12538] = -3.51403701E-01;
  COFD[12539] = 1.27567896E-02;
  COFD[12540] = -2.17265142E+01;
  COFD[12541] = 4.68284841E+00;
  COFD[12542] = -3.26034852E-01;
  COFD[12543] = 1.14751958E-02;
  COFD[12544] = -2.19218120E+01;
  COFD[12545] = 4.74287111E+00;
  COFD[12546] = -3.35542558E-01;
  COFD[12547] = 1.19547206E-02;
  COFD[12548] = -2.19191828E+01;
  COFD[12549] = 4.74287111E+00;
  COFD[12550] = -3.35542558E-01;
  COFD[12551] = 1.19547206E-02;
  COFD[12552] = -2.21717144E+01;
  COFD[12553] = 4.81459861E+00;
  COFD[12554] = -3.46990321E-01;
  COFD[12555] = 1.25347154E-02;
  COFD[12556] = -2.21696445E+01;
  COFD[12557] = 4.81459861E+00;
  COFD[12558] = -3.46990321E-01;
  COFD[12559] = 1.25347154E-02;
  COFD[12560] = -2.21696445E+01;
  COFD[12561] = 4.81459861E+00;
  COFD[12562] = -3.46990321E-01;
  COFD[12563] = 1.25347154E-02;
  COFD[12564] = -2.21696445E+01;
  COFD[12565] = 4.81459861E+00;
  COFD[12566] = -3.46990321E-01;
  COFD[12567] = 1.25347154E-02;
  COFD[12568] = -2.21696445E+01;
  COFD[12569] = 4.81459861E+00;
  COFD[12570] = -3.46990321E-01;
  COFD[12571] = 1.25347154E-02;
  COFD[12572] = -2.21718968E+01;
  COFD[12573] = 4.82388101E+00;
  COFD[12574] = -3.48448300E-01;
  COFD[12575] = 1.26079356E-02;
  COFD[12576] = -2.21718968E+01;
  COFD[12577] = 4.82388101E+00;
  COFD[12578] = -3.48448300E-01;
  COFD[12579] = 1.26079356E-02;
  COFD[12580] = -2.13196973E+01;
  COFD[12581] = 4.34433003E+00;
  COFD[12582] = -2.73207428E-01;
  COFD[12583] = 8.83823384E-03;
  COFD[12584] = -2.13196973E+01;
  COFD[12585] = 4.34433003E+00;
  COFD[12586] = -2.73207428E-01;
  COFD[12587] = 8.83823384E-03;
  COFD[12588] = -2.13196973E+01;
  COFD[12589] = 4.34433003E+00;
  COFD[12590] = -2.73207428E-01;
  COFD[12591] = 8.83823384E-03;
  COFD[12592] = -2.13196973E+01;
  COFD[12593] = 4.34433003E+00;
  COFD[12594] = -2.73207428E-01;
  COFD[12595] = 8.83823384E-03;
  COFD[12596] = -2.13196973E+01;
  COFD[12597] = 4.34433003E+00;
  COFD[12598] = -2.73207428E-01;
  COFD[12599] = 8.83823384E-03;
  COFD[12600] = -2.13196973E+01;
  COFD[12601] = 4.34433003E+00;
  COFD[12602] = -2.73207428E-01;
  COFD[12603] = 8.83823384E-03;
  COFD[12604] = -2.13196973E+01;
  COFD[12605] = 4.34433003E+00;
  COFD[12606] = -2.73207428E-01;
  COFD[12607] = 8.83823384E-03;
  COFD[12608] = -2.13196973E+01;
  COFD[12609] = 4.34433003E+00;
  COFD[12610] = -2.73207428E-01;
  COFD[12611] = 8.83823384E-03;
  COFD[12612] = -2.13196973E+01;
  COFD[12613] = 4.34433003E+00;
  COFD[12614] = -2.73207428E-01;
  COFD[12615] = 8.83823384E-03;
  COFD[12616] = -2.13196973E+01;
  COFD[12617] = 4.34433003E+00;
  COFD[12618] = -2.73207428E-01;
  COFD[12619] = 8.83823384E-03;
  COFD[12620] = -2.13196973E+01;
  COFD[12621] = 4.34433003E+00;
  COFD[12622] = -2.73207428E-01;
  COFD[12623] = 8.83823384E-03;
  COFD[12624] = -2.13196973E+01;
  COFD[12625] = 4.34433003E+00;
  COFD[12626] = -2.73207428E-01;
  COFD[12627] = 8.83823384E-03;
  COFD[12628] = -2.10658698E+01;
  COFD[12629] = 4.13125320E+00;
  COFD[12630] = -2.40808345E-01;
  COFD[12631] = 7.24910567E-03;
  COFD[12632] = -2.10658698E+01;
  COFD[12633] = 4.13125320E+00;
  COFD[12634] = -2.40808345E-01;
  COFD[12635] = 7.24910567E-03;
  COFD[12636] = -2.10658698E+01;
  COFD[12637] = 4.13125320E+00;
  COFD[12638] = -2.40808345E-01;
  COFD[12639] = 7.24910567E-03;
  COFD[12640] = -2.10658698E+01;
  COFD[12641] = 4.13125320E+00;
  COFD[12642] = -2.40808345E-01;
  COFD[12643] = 7.24910567E-03;
  COFD[12644] = -2.17740356E+01;
  COFD[12645] = 4.58709764E+00;
  COFD[12646] = -3.10814145E-01;
  COFD[12647] = 1.07061117E-02;
  COFD[12648] = -2.17740356E+01;
  COFD[12649] = 4.58709764E+00;
  COFD[12650] = -3.10814145E-01;
  COFD[12651] = 1.07061117E-02;
  COFD[12652] = -2.11611573E+01;
  COFD[12653] = 4.24185230E+00;
  COFD[12654] = -2.57542334E-01;
  COFD[12655] = 8.06755240E-03;
  COFD[12656] = -2.11611573E+01;
  COFD[12657] = 4.24185230E+00;
  COFD[12658] = -2.57542334E-01;
  COFD[12659] = 8.06755240E-03;
  COFD[12660] = -2.11611573E+01;
  COFD[12661] = 4.24185230E+00;
  COFD[12662] = -2.57542334E-01;
  COFD[12663] = 8.06755240E-03;
  COFD[12664] = -2.11611573E+01;
  COFD[12665] = 4.24185230E+00;
  COFD[12666] = -2.57542334E-01;
  COFD[12667] = 8.06755240E-03;
  COFD[12668] = -2.03706833E+01;
  COFD[12669] = 4.98803076E+00;
  COFD[12670] = -4.27580621E-01;
  COFD[12671] = 1.83363274E-02;
  COFD[12672] = -1.96804361E+01;
  COFD[12673] = 5.37526595E+00;
  COFD[12674] = -4.70621144E-01;
  COFD[12675] = 1.99141073E-02;
  COFD[12676] = -1.55782124E+01;
  COFD[12677] = 3.73153794E+00;
  COFD[12678] = -2.72372598E-01;
  COFD[12679] = 1.19199668E-02;
  COFD[12680] = -1.91632977E+01;
  COFD[12681] = 4.70966098E+00;
  COFD[12682] = -3.94551217E-01;
  COFD[12683] = 1.70286289E-02;
  COFD[12684] = -2.06463061E+01;
  COFD[12685] = 5.07657482E+00;
  COFD[12686] = -4.38028805E-01;
  COFD[12687] = 1.87481371E-02;
  COFD[12688] = -1.91880298E+01;
  COFD[12689] = 4.70966098E+00;
  COFD[12690] = -3.94551217E-01;
  COFD[12691] = 1.70286289E-02;
  COFD[12692] = -1.98762733E+01;
  COFD[12693] = 4.29984423E+00;
  COFD[12694] = -2.67672368E-01;
  COFD[12695] = 8.61066086E-03;
  COFD[12696] = -2.03122830E+01;
  COFD[12697] = 4.96244824E+00;
  COFD[12698] = -4.24554495E-01;
  COFD[12699] = 1.82168885E-02;
  COFD[12700] = -2.11071930E+01;
  COFD[12701] = 4.70311989E+00;
  COFD[12702] = -3.29240106E-01;
  COFD[12703] = 1.16366808E-02;
  COFD[12704] = -2.26749928E+01;
  COFD[12705] = 5.58486459E+00;
  COFD[12706] = -4.81517134E-01;
  COFD[12707] = 1.97388064E-02;
  COFD[12708] = -2.13459120E+01;
  COFD[12709] = 5.37197338E+00;
  COFD[12710] = -4.70392872E-01;
  COFD[12711] = 1.99122802E-02;
  COFD[12712] = -2.13282916E+01;
  COFD[12713] = 5.36375915E+00;
  COFD[12714] = -4.69808196E-01;
  COFD[12715] = 1.99064589E-02;
  COFD[12716] = -2.06522432E+01;
  COFD[12717] = 5.07501764E+00;
  COFD[12718] = -4.37846596E-01;
  COFD[12719] = 1.87410133E-02;
  COFD[12720] = -2.06624219E+01;
  COFD[12721] = 5.07501764E+00;
  COFD[12722] = -4.37846596E-01;
  COFD[12723] = 1.87410133E-02;
  COFD[12724] = -2.11192092E+01;
  COFD[12725] = 4.70311989E+00;
  COFD[12726] = -3.29240106E-01;
  COFD[12727] = 1.16366808E-02;
  COFD[12728] = -2.17567671E+01;
  COFD[12729] = 5.03450659E+00;
  COFD[12730] = -3.83012468E-01;
  COFD[12731] = 1.43925677E-02;
  COFD[12732] = -2.26853903E+01;
  COFD[12733] = 5.58521030E+00;
  COFD[12734] = -4.81061650E-01;
  COFD[12735] = 1.96992215E-02;
  COFD[12736] = -2.24423526E+01;
  COFD[12737] = 5.58416166E+00;
  COFD[12738] = -4.82369720E-01;
  COFD[12739] = 1.98133127E-02;
  COFD[12740] = -2.26733971E+01;
  COFD[12741] = 5.58521030E+00;
  COFD[12742] = -4.81061650E-01;
  COFD[12743] = 1.96992215E-02;
  COFD[12744] = -2.25347499E+01;
  COFD[12745] = 5.57238332E+00;
  COFD[12746] = -4.76605097E-01;
  COFD[12747] = 1.93951822E-02;
  COFD[12748] = -2.25485276E+01;
  COFD[12749] = 5.57238332E+00;
  COFD[12750] = -4.76605097E-01;
  COFD[12751] = 1.93951822E-02;
  COFD[12752] = -2.18797306E+01;
  COFD[12753] = 4.99907484E+00;
  COFD[12754] = -3.76094627E-01;
  COFD[12755] = 1.40009262E-02;
  COFD[12756] = -2.14935935E+01;
  COFD[12757] = 5.39257286E+00;
  COFD[12758] = -4.71929831E-01;
  COFD[12759] = 1.99331101E-02;
  COFD[12760] = -2.18871055E+01;
  COFD[12761] = 4.99907484E+00;
  COFD[12762] = -3.76094627E-01;
  COFD[12763] = 1.40009262E-02;
  COFD[12764] = -2.18871055E+01;
  COFD[12765] = 4.99907484E+00;
  COFD[12766] = -3.76094627E-01;
  COFD[12767] = 1.40009262E-02;
  COFD[12768] = -2.18942458E+01;
  COFD[12769] = 4.99907484E+00;
  COFD[12770] = -3.76094627E-01;
  COFD[12771] = 1.40009262E-02;
  COFD[12772] = -2.26354540E+01;
  COFD[12773] = 5.42002683E+00;
  COFD[12774] = -4.47111163E-01;
  COFD[12775] = 1.77287360E-02;
  COFD[12776] = -2.26946847E+01;
  COFD[12777] = 5.47392239E+00;
  COFD[12778] = -4.56882004E-01;
  COFD[12779] = 1.82631638E-02;
  COFD[12780] = -2.26508814E+01;
  COFD[12781] = 5.31312101E+00;
  COFD[12782] = -4.28304541E-01;
  COFD[12783] = 1.67176023E-02;
  COFD[12784] = -2.28554011E+01;
  COFD[12785] = 5.48796011E+00;
  COFD[12786] = -4.59457942E-01;
  COFD[12787] = 1.84050728E-02;
  COFD[12788] = -2.26553449E+01;
  COFD[12789] = 5.32093606E+00;
  COFD[12790] = -4.29624801E-01;
  COFD[12791] = 1.67869730E-02;
  COFD[12792] = -2.26604009E+01;
  COFD[12793] = 5.32093606E+00;
  COFD[12794] = -4.29624801E-01;
  COFD[12795] = 1.67869730E-02;
  COFD[12796] = -2.27940504E+01;
  COFD[12797] = 5.33097599E+00;
  COFD[12798] = -4.31367349E-01;
  COFD[12799] = 1.68798869E-02;
  COFD[12800] = -2.21540631E+01;
  COFD[12801] = 5.00145975E+00;
  COFD[12802] = -3.76475472E-01;
  COFD[12803] = 1.40202564E-02;
  COFD[12804] = -2.19879567E+01;
  COFD[12805] = 4.94697136E+00;
  COFD[12806] = -3.69053717E-01;
  COFD[12807] = 1.36853428E-02;
  COFD[12808] = -2.22401881E+01;
  COFD[12809] = 5.05175676E+00;
  COFD[12810] = -3.84543744E-01;
  COFD[12811] = 1.44308407E-02;
  COFD[12812] = -2.26201326E+01;
  COFD[12813] = 5.16909062E+00;
  COFD[12814] = -4.03789335E-01;
  COFD[12815] = 1.54242019E-02;
  COFD[12816] = -2.26855808E+01;
  COFD[12817] = 5.20461425E+00;
  COFD[12818] = -4.09923837E-01;
  COFD[12819] = 1.57504726E-02;
  COFD[12820] = -2.16515542E+01;
  COFD[12821] = 4.82270577E+00;
  COFD[12822] = -3.48263719E-01;
  COFD[12823] = 1.25986681E-02;
  COFD[12824] = -2.14039176E+01;
  COFD[12825] = 4.77238689E+00;
  COFD[12826] = -3.40265855E-01;
  COFD[12827] = 1.21942137E-02;
  COFD[12828] = -2.14102372E+01;
  COFD[12829] = 4.77238689E+00;
  COFD[12830] = -3.40265855E-01;
  COFD[12831] = 1.21942137E-02;
  COFD[12832] = -2.19165610E+01;
  COFD[12833] = 4.96044814E+00;
  COFD[12834] = -3.69996115E-01;
  COFD[12835] = 1.36933893E-02;
  COFD[12836] = -2.20910006E+01;
  COFD[12837] = 4.97640888E+00;
  COFD[12838] = -3.73754329E-01;
  COFD[12839] = 1.39236464E-02;
  COFD[12840] = -2.23519181E+01;
  COFD[12841] = 5.11289208E+00;
  COFD[12842] = -3.94460699E-01;
  COFD[12843] = 1.49393336E-02;
  COFD[12844] = -2.17220256E+01;
  COFD[12845] = 4.71207875E+00;
  COFD[12846] = -3.30658500E-01;
  COFD[12847] = 1.17082011E-02;
  COFD[12848] = -2.18367730E+01;
  COFD[12849] = 4.71207875E+00;
  COFD[12850] = -3.30658500E-01;
  COFD[12851] = 1.17082011E-02;
  COFD[12852] = -2.17749217E+01;
  COFD[12853] = 4.71207875E+00;
  COFD[12854] = -3.30658500E-01;
  COFD[12855] = 1.17082011E-02;
  COFD[12856] = -2.17749217E+01;
  COFD[12857] = 4.71207875E+00;
  COFD[12858] = -3.30658500E-01;
  COFD[12859] = 1.17082011E-02;
  COFD[12860] = -2.26677732E+01;
  COFD[12861] = 5.44777353E+00;
  COFD[12862] = -4.52122340E-01;
  COFD[12863] = 1.80021910E-02;
  COFD[12864] = -2.26273081E+01;
  COFD[12865] = 5.42002683E+00;
  COFD[12866] = -4.47111163E-01;
  COFD[12867] = 1.77287360E-02;
  COFD[12868] = -2.26249622E+01;
  COFD[12869] = 5.61234946E+00;
  COFD[12870] = -4.91326412E-01;
  COFD[12871] = 2.04139363E-02;
  COFD[12872] = -2.13171664E+01;
  COFD[12873] = 5.37197338E+00;
  COFD[12874] = -4.70392872E-01;
  COFD[12875] = 1.99122802E-02;
  COFD[12876] = -2.19766215E+01;
  COFD[12877] = 4.75781977E+00;
  COFD[12878] = -3.38914787E-01;
  COFD[12879] = 1.21572192E-02;
  COFD[12880] = -2.18400822E+01;
  COFD[12881] = 4.80509391E+00;
  COFD[12882] = -3.46553069E-01;
  COFD[12883] = 1.25478648E-02;
  COFD[12884] = -2.18365992E+01;
  COFD[12885] = 4.80509391E+00;
  COFD[12886] = -3.46553069E-01;
  COFD[12887] = 1.25478648E-02;
  COFD[12888] = -2.19934089E+01;
  COFD[12889] = 4.84869143E+00;
  COFD[12890] = -3.53554556E-01;
  COFD[12891] = 1.29046231E-02;
  COFD[12892] = -2.18506815E+01;
  COFD[12893] = 4.74278260E+00;
  COFD[12894] = -3.35528552E-01;
  COFD[12895] = 1.19540147E-02;
  COFD[12896] = -2.19363010E+01;
  COFD[12897] = 4.75781977E+00;
  COFD[12898] = -3.38914787E-01;
  COFD[12899] = 1.21572192E-02;
  COFD[12900] = -2.19336508E+01;
  COFD[12901] = 4.75781977E+00;
  COFD[12902] = -3.38914787E-01;
  COFD[12903] = 1.21572192E-02;
  COFD[12904] = -2.23002787E+01;
  COFD[12905] = 4.87626494E+00;
  COFD[12906] = -3.56718447E-01;
  COFD[12907] = 1.30246317E-02;
  COFD[12908] = -2.22981911E+01;
  COFD[12909] = 4.87626494E+00;
  COFD[12910] = -3.56718447E-01;
  COFD[12911] = 1.30246317E-02;
  COFD[12912] = -2.22981911E+01;
  COFD[12913] = 4.87626494E+00;
  COFD[12914] = -3.56718447E-01;
  COFD[12915] = 1.30246317E-02;
  COFD[12916] = -2.22981911E+01;
  COFD[12917] = 4.87626494E+00;
  COFD[12918] = -3.56718447E-01;
  COFD[12919] = 1.30246317E-02;
  COFD[12920] = -2.22981911E+01;
  COFD[12921] = 4.87626494E+00;
  COFD[12922] = -3.56718447E-01;
  COFD[12923] = 1.30246317E-02;
  COFD[12924] = -2.22907060E+01;
  COFD[12925] = 4.88168684E+00;
  COFD[12926] = -3.57667686E-01;
  COFD[12927] = 1.30755175E-02;
  COFD[12928] = -2.22907060E+01;
  COFD[12929] = 4.88168684E+00;
  COFD[12930] = -3.57667686E-01;
  COFD[12931] = 1.30755175E-02;
  COFD[12932] = -2.14443150E+01;
  COFD[12933] = 4.40560301E+00;
  COFD[12934] = -2.83033303E-01;
  COFD[12935] = 9.33807331E-03;
  COFD[12936] = -2.14443150E+01;
  COFD[12937] = 4.40560301E+00;
  COFD[12938] = -2.83033303E-01;
  COFD[12939] = 9.33807331E-03;
  COFD[12940] = -2.14443150E+01;
  COFD[12941] = 4.40560301E+00;
  COFD[12942] = -2.83033303E-01;
  COFD[12943] = 9.33807331E-03;
  COFD[12944] = -2.14443150E+01;
  COFD[12945] = 4.40560301E+00;
  COFD[12946] = -2.83033303E-01;
  COFD[12947] = 9.33807331E-03;
  COFD[12948] = -2.14443150E+01;
  COFD[12949] = 4.40560301E+00;
  COFD[12950] = -2.83033303E-01;
  COFD[12951] = 9.33807331E-03;
  COFD[12952] = -2.14443150E+01;
  COFD[12953] = 4.40560301E+00;
  COFD[12954] = -2.83033303E-01;
  COFD[12955] = 9.33807331E-03;
  COFD[12956] = -2.14443150E+01;
  COFD[12957] = 4.40560301E+00;
  COFD[12958] = -2.83033303E-01;
  COFD[12959] = 9.33807331E-03;
  COFD[12960] = -2.14443150E+01;
  COFD[12961] = 4.40560301E+00;
  COFD[12962] = -2.83033303E-01;
  COFD[12963] = 9.33807331E-03;
  COFD[12964] = -2.14443150E+01;
  COFD[12965] = 4.40560301E+00;
  COFD[12966] = -2.83033303E-01;
  COFD[12967] = 9.33807331E-03;
  COFD[12968] = -2.14443150E+01;
  COFD[12969] = 4.40560301E+00;
  COFD[12970] = -2.83033303E-01;
  COFD[12971] = 9.33807331E-03;
  COFD[12972] = -2.14443150E+01;
  COFD[12973] = 4.40560301E+00;
  COFD[12974] = -2.83033303E-01;
  COFD[12975] = 9.33807331E-03;
  COFD[12976] = -2.14443150E+01;
  COFD[12977] = 4.40560301E+00;
  COFD[12978] = -2.83033303E-01;
  COFD[12979] = 9.33807331E-03;
  COFD[12980] = -2.12339765E+01;
  COFD[12981] = 4.21068803E+00;
  COFD[12982] = -2.53139632E-01;
  COFD[12983] = 7.86344405E-03;
  COFD[12984] = -2.12339765E+01;
  COFD[12985] = 4.21068803E+00;
  COFD[12986] = -2.53139632E-01;
  COFD[12987] = 7.86344405E-03;
  COFD[12988] = -2.12339765E+01;
  COFD[12989] = 4.21068803E+00;
  COFD[12990] = -2.53139632E-01;
  COFD[12991] = 7.86344405E-03;
  COFD[12992] = -2.12339765E+01;
  COFD[12993] = 4.21068803E+00;
  COFD[12994] = -2.53139632E-01;
  COFD[12995] = 7.86344405E-03;
  COFD[12996] = -2.18873821E+01;
  COFD[12997] = 4.64237658E+00;
  COFD[12998] = -3.19644475E-01;
  COFD[12999] = 1.11535241E-02;
  COFD[13000] = -2.18873821E+01;
  COFD[13001] = 4.64237658E+00;
  COFD[13002] = -3.19644475E-01;
  COFD[13003] = 1.11535241E-02;
  COFD[13004] = -2.12838916E+01;
  COFD[13005] = 4.30205261E+00;
  COFD[13006] = -2.67181974E-01;
  COFD[13007] = 8.55702247E-03;
  COFD[13008] = -2.12838916E+01;
  COFD[13009] = 4.30205261E+00;
  COFD[13010] = -2.67181974E-01;
  COFD[13011] = 8.55702247E-03;
  COFD[13012] = -2.12838916E+01;
  COFD[13013] = 4.30205261E+00;
  COFD[13014] = -2.67181974E-01;
  COFD[13015] = 8.55702247E-03;
  COFD[13016] = -2.12838916E+01;
  COFD[13017] = 4.30205261E+00;
  COFD[13018] = -2.67181974E-01;
  COFD[13019] = 8.55702247E-03;
  COFD[13020] = -2.02840316E+01;
  COFD[13021] = 4.95484018E+00;
  COFD[13022] = -4.23654881E-01;
  COFD[13023] = 1.81813866E-02;
  COFD[13024] = -1.98806530E+01;
  COFD[13025] = 5.52555673E+00;
  COFD[13026] = -4.84999851E-01;
  COFD[13027] = 2.03334931E-02;
  COFD[13028] = -1.61116840E+01;
  COFD[13029] = 4.04227735E+00;
  COFD[13030] = -3.12745253E-01;
  COFD[13031] = 1.36756977E-02;
  COFD[13032] = -1.95314595E+01;
  COFD[13033] = 4.95249173E+00;
  COFD[13034] = -4.23376552E-01;
  COFD[13035] = 1.81703714E-02;
  COFD[13036] = -2.09480967E+01;
  COFD[13037] = 5.28755355E+00;
  COFD[13038] = -4.61641920E-01;
  COFD[13039] = 1.96208961E-02;
  COFD[13040] = -1.95538221E+01;
  COFD[13041] = 4.95249173E+00;
  COFD[13042] = -4.23376552E-01;
  COFD[13043] = 1.81703714E-02;
  COFD[13044] = -1.84538298E+01;
  COFD[13045] = 3.75912079E+00;
  COFD[13046] = -1.84235105E-01;
  COFD[13047] = 4.47800951E-03;
  COFD[13048] = -2.06066370E+01;
  COFD[13049] = 5.16748146E+00;
  COFD[13050] = -4.47594939E-01;
  COFD[13051] = 1.90724110E-02;
  COFD[13052] = -1.97545845E+01;
  COFD[13053] = 4.18758010E+00;
  COFD[13054] = -2.49327776E-01;
  COFD[13055] = 7.66559103E-03;
  COFD[13056] = -2.23098102E+01;
  COFD[13057] = 5.49916900E+00;
  COFD[13058] = -4.61818485E-01;
  COFD[13059] = 1.85431163E-02;
  COFD[13060] = -2.15588743E+01;
  COFD[13061] = 5.51982454E+00;
  COFD[13062] = -4.84452039E-01;
  COFD[13063] = 2.03175522E-02;
  COFD[13064] = -2.15067572E+01;
  COFD[13065] = 5.49964831E+00;
  COFD[13066] = -4.82275380E-01;
  COFD[13067] = 2.02405072E-02;
  COFD[13068] = -2.09571067E+01;
  COFD[13069] = 5.28755355E+00;
  COFD[13070] = -4.61641920E-01;
  COFD[13071] = 1.96208961E-02;
  COFD[13072] = -2.09657334E+01;
  COFD[13073] = 5.28755355E+00;
  COFD[13074] = -4.61641920E-01;
  COFD[13075] = 1.96208961E-02;
  COFD[13076] = -1.97649005E+01;
  COFD[13077] = 4.18758010E+00;
  COFD[13078] = -2.49327776E-01;
  COFD[13079] = 7.66559103E-03;
  COFD[13080] = -2.07356051E+01;
  COFD[13081] = 4.65728078E+00;
  COFD[13082] = -3.22002062E-01;
  COFD[13083] = 1.12723316E-02;
  COFD[13084] = -2.23404253E+01;
  COFD[13085] = 5.49239750E+00;
  COFD[13086] = -4.60320987E-01;
  COFD[13087] = 1.84538922E-02;
  COFD[13088] = -2.21089304E+01;
  COFD[13089] = 5.50506115E+00;
  COFD[13090] = -4.63563533E-01;
  COFD[13091] = 1.86575247E-02;
  COFD[13092] = -2.23301307E+01;
  COFD[13093] = 5.49239750E+00;
  COFD[13094] = -4.60320987E-01;
  COFD[13095] = 1.84538922E-02;
  COFD[13096] = -2.20547355E+01;
  COFD[13097] = 5.42445100E+00;
  COFD[13098] = -4.47918761E-01;
  COFD[13099] = 1.77729995E-02;
  COFD[13100] = -2.20666876E+01;
  COFD[13101] = 5.42445100E+00;
  COFD[13102] = -4.47918761E-01;
  COFD[13103] = 1.77729995E-02;
  COFD[13104] = -2.07072091E+01;
  COFD[13105] = 4.56211059E+00;
  COFD[13106] = -3.06895158E-01;
  COFD[13107] = 1.05100393E-02;
  COFD[13108] = -2.16544310E+01;
  COFD[13109] = 5.55511977E+00;
  COFD[13110] = -4.87927156E-01;
  COFD[13111] = 2.04245402E-02;
  COFD[13112] = -2.07133037E+01;
  COFD[13113] = 4.56211059E+00;
  COFD[13114] = -3.06895158E-01;
  COFD[13115] = 1.05100393E-02;
  COFD[13116] = -2.07133037E+01;
  COFD[13117] = 4.56211059E+00;
  COFD[13118] = -3.06895158E-01;
  COFD[13119] = 1.05100393E-02;
  COFD[13120] = -2.07191894E+01;
  COFD[13121] = 4.56211059E+00;
  COFD[13122] = -3.06895158E-01;
  COFD[13123] = 1.05100393E-02;
  COFD[13124] = -2.19196211E+01;
  COFD[13125] = 5.17305355E+00;
  COFD[13126] = -4.04451717E-01;
  COFD[13127] = 1.54587933E-02;
  COFD[13128] = -2.20174582E+01;
  COFD[13129] = 5.24609974E+00;
  COFD[13130] = -4.16866354E-01;
  COFD[13131] = 1.61128051E-02;
  COFD[13132] = -2.17842747E+01;
  COFD[13133] = 5.00373919E+00;
  COFD[13134] = -3.76839143E-01;
  COFD[13135] = 1.40386989E-02;
  COFD[13136] = -2.21991186E+01;
  COFD[13137] = 5.26251942E+00;
  COFD[13138] = -4.19749995E-01;
  COFD[13139] = 1.62674716E-02;
  COFD[13140] = -2.17946665E+01;
  COFD[13141] = 5.01521891E+00;
  COFD[13142] = -3.78672535E-01;
  COFD[13143] = 1.41317315E-02;
  COFD[13144] = -2.17987241E+01;
  COFD[13145] = 5.01521891E+00;
  COFD[13146] = -3.78672535E-01;
  COFD[13147] = 1.41317315E-02;
  COFD[13148] = -2.19609032E+01;
  COFD[13149] = 5.03230486E+00;
  COFD[13150] = -3.81405277E-01;
  COFD[13151] = 1.42705027E-02;
  COFD[13152] = -2.09874998E+01;
  COFD[13153] = 4.56476701E+00;
  COFD[13154] = -3.07311397E-01;
  COFD[13155] = 1.05308515E-02;
  COFD[13156] = -2.09512550E+01;
  COFD[13157] = 4.56636018E+00;
  COFD[13158] = -3.07561072E-01;
  COFD[13159] = 1.05433365E-02;
  COFD[13160] = -2.10792310E+01;
  COFD[13161] = 4.61776665E+00;
  COFD[13162] = -3.15723106E-01;
  COFD[13163] = 1.09549586E-02;
  COFD[13164] = -2.15342924E+01;
  COFD[13165] = 4.76557679E+00;
  COFD[13166] = -3.39171992E-01;
  COFD[13167] = 1.21386188E-02;
  COFD[13168] = -2.16515542E+01;
  COFD[13169] = 4.82270577E+00;
  COFD[13170] = -3.48263719E-01;
  COFD[13171] = 1.25986681E-02;
  COFD[13172] = -2.04221528E+01;
  COFD[13173] = 4.35883159E+00;
  COFD[13174] = -2.75434484E-01;
  COFD[13175] = 8.94819804E-03;
  COFD[13176] = -2.01097317E+01;
  COFD[13177] = 4.29138907E+00;
  COFD[13178] = -2.65108149E-01;
  COFD[13179] = 8.43949637E-03;
  COFD[13180] = -2.01148914E+01;
  COFD[13181] = 4.29138907E+00;
  COFD[13182] = -2.65108149E-01;
  COFD[13183] = 8.43949637E-03;
  COFD[13184] = -2.07259814E+01;
  COFD[13185] = 4.52059311E+00;
  COFD[13186] = -3.00438699E-01;
  COFD[13187] = 1.01885687E-02;
  COFD[13188] = -2.10685859E+01;
  COFD[13189] = 4.59824100E+00;
  COFD[13190] = -3.12596804E-01;
  COFD[13191] = 1.07963780E-02;
  COFD[13192] = -2.12181081E+01;
  COFD[13193] = 4.69045288E+00;
  COFD[13194] = -3.27236567E-01;
  COFD[13195] = 1.15357180E-02;
  COFD[13196] = -2.03733944E+01;
  COFD[13197] = 4.20149142E+00;
  COFD[13198] = -2.51432163E-01;
  COFD[13199] = 7.76854246E-03;
  COFD[13200] = -2.04606852E+01;
  COFD[13201] = 4.20149142E+00;
  COFD[13202] = -2.51432163E-01;
  COFD[13203] = 7.76854246E-03;
  COFD[13204] = -2.04142278E+01;
  COFD[13205] = 4.20149142E+00;
  COFD[13206] = -2.51432163E-01;
  COFD[13207] = 7.76854246E-03;
  COFD[13208] = -2.04142278E+01;
  COFD[13209] = 4.20149142E+00;
  COFD[13210] = -2.51432163E-01;
  COFD[13211] = 7.76854246E-03;
  COFD[13212] = -2.19819762E+01;
  COFD[13213] = 5.21506351E+00;
  COFD[13214] = -4.11467220E-01;
  COFD[13215] = 1.58248077E-02;
  COFD[13216] = -2.19128366E+01;
  COFD[13217] = 5.17305355E+00;
  COFD[13218] = -4.04451717E-01;
  COFD[13219] = 1.54587933E-02;
  COFD[13220] = -2.24098565E+01;
  COFD[13221] = 5.58471203E+00;
  COFD[13222] = -4.79905311E-01;
  COFD[13223] = 1.96058913E-02;
  COFD[13224] = -2.15326336E+01;
  COFD[13225] = 5.51982454E+00;
  COFD[13226] = -4.84452039E-01;
  COFD[13227] = 2.03175522E-02;
  COFD[13228] = -2.08111776E+01;
  COFD[13229] = 4.32618735E+00;
  COFD[13230] = -2.70428378E-01;
  COFD[13231] = 8.70125036E-03;
  COFD[13232] = -2.07347095E+01;
  COFD[13233] = 4.39718561E+00;
  COFD[13234] = -2.81331762E-01;
  COFD[13235] = 9.23963405E-03;
  COFD[13236] = -2.07319906E+01;
  COFD[13237] = 4.39718561E+00;
  COFD[13238] = -2.81331762E-01;
  COFD[13239] = 9.23963405E-03;
  COFD[13240] = -2.09417974E+01;
  COFD[13241] = 4.45974841E+00;
  COFD[13242] = -2.90971508E-01;
  COFD[13243] = 9.71697223E-03;
  COFD[13244] = -2.05351753E+01;
  COFD[13245] = 4.24884553E+00;
  COFD[13246] = -2.58604390E-01;
  COFD[13247] = 8.11962573E-03;
  COFD[13248] = -2.07806172E+01;
  COFD[13249] = 4.32618735E+00;
  COFD[13250] = -2.70428378E-01;
  COFD[13251] = 8.70125036E-03;
  COFD[13252] = -2.07785878E+01;
  COFD[13253] = 4.32618735E+00;
  COFD[13254] = -2.70428378E-01;
  COFD[13255] = 8.70125036E-03;
  COFD[13256] = -2.10989194E+01;
  COFD[13257] = 4.42639566E+00;
  COFD[13258] = -2.85821723E-01;
  COFD[13259] = 9.46169352E-03;
  COFD[13260] = -2.10973459E+01;
  COFD[13261] = 4.42639566E+00;
  COFD[13262] = -2.85821723E-01;
  COFD[13263] = 9.46169352E-03;
  COFD[13264] = -2.10973459E+01;
  COFD[13265] = 4.42639566E+00;
  COFD[13266] = -2.85821723E-01;
  COFD[13267] = 9.46169352E-03;
  COFD[13268] = -2.10973459E+01;
  COFD[13269] = 4.42639566E+00;
  COFD[13270] = -2.85821723E-01;
  COFD[13271] = 9.46169352E-03;
  COFD[13272] = -2.10973459E+01;
  COFD[13273] = 4.42639566E+00;
  COFD[13274] = -2.85821723E-01;
  COFD[13275] = 9.46169352E-03;
  COFD[13276] = -2.11028328E+01;
  COFD[13277] = 4.43740603E+00;
  COFD[13278] = -2.87517545E-01;
  COFD[13279] = 9.54563513E-03;
  COFD[13280] = -2.11028328E+01;
  COFD[13281] = 4.43740603E+00;
  COFD[13282] = -2.87517545E-01;
  COFD[13283] = 9.54563513E-03;
  COFD[13284] = -1.98908327E+01;
  COFD[13285] = 3.81317728E+00;
  COFD[13286] = -1.92528490E-01;
  COFD[13287] = 4.88612928E-03;
  COFD[13288] = -1.98908327E+01;
  COFD[13289] = 3.81317728E+00;
  COFD[13290] = -1.92528490E-01;
  COFD[13291] = 4.88612928E-03;
  COFD[13292] = -1.98908327E+01;
  COFD[13293] = 3.81317728E+00;
  COFD[13294] = -1.92528490E-01;
  COFD[13295] = 4.88612928E-03;
  COFD[13296] = -1.98908327E+01;
  COFD[13297] = 3.81317728E+00;
  COFD[13298] = -1.92528490E-01;
  COFD[13299] = 4.88612928E-03;
  COFD[13300] = -1.98908327E+01;
  COFD[13301] = 3.81317728E+00;
  COFD[13302] = -1.92528490E-01;
  COFD[13303] = 4.88612928E-03;
  COFD[13304] = -1.98908327E+01;
  COFD[13305] = 3.81317728E+00;
  COFD[13306] = -1.92528490E-01;
  COFD[13307] = 4.88612928E-03;
  COFD[13308] = -1.98908327E+01;
  COFD[13309] = 3.81317728E+00;
  COFD[13310] = -1.92528490E-01;
  COFD[13311] = 4.88612928E-03;
  COFD[13312] = -1.98908327E+01;
  COFD[13313] = 3.81317728E+00;
  COFD[13314] = -1.92528490E-01;
  COFD[13315] = 4.88612928E-03;
  COFD[13316] = -1.98908327E+01;
  COFD[13317] = 3.81317728E+00;
  COFD[13318] = -1.92528490E-01;
  COFD[13319] = 4.88612928E-03;
  COFD[13320] = -1.98908327E+01;
  COFD[13321] = 3.81317728E+00;
  COFD[13322] = -1.92528490E-01;
  COFD[13323] = 4.88612928E-03;
  COFD[13324] = -1.98908327E+01;
  COFD[13325] = 3.81317728E+00;
  COFD[13326] = -1.92528490E-01;
  COFD[13327] = 4.88612928E-03;
  COFD[13328] = -1.98908327E+01;
  COFD[13329] = 3.81317728E+00;
  COFD[13330] = -1.92528490E-01;
  COFD[13331] = 4.88612928E-03;
  COFD[13332] = -1.96575366E+01;
  COFD[13333] = 3.60715849E+00;
  COFD[13334] = -1.61238254E-01;
  COFD[13335] = 3.35598772E-03;
  COFD[13336] = -1.96575366E+01;
  COFD[13337] = 3.60715849E+00;
  COFD[13338] = -1.61238254E-01;
  COFD[13339] = 3.35598772E-03;
  COFD[13340] = -1.96575366E+01;
  COFD[13341] = 3.60715849E+00;
  COFD[13342] = -1.61238254E-01;
  COFD[13343] = 3.35598772E-03;
  COFD[13344] = -1.96575366E+01;
  COFD[13345] = 3.60715849E+00;
  COFD[13346] = -1.61238254E-01;
  COFD[13347] = 3.35598772E-03;
  COFD[13348] = -2.04542455E+01;
  COFD[13349] = 4.09822461E+00;
  COFD[13350] = -2.35816306E-01;
  COFD[13351] = 7.00531241E-03;
  COFD[13352] = -2.04542455E+01;
  COFD[13353] = 4.09822461E+00;
  COFD[13354] = -2.35816306E-01;
  COFD[13355] = 7.00531241E-03;
  COFD[13356] = -1.97411863E+01;
  COFD[13357] = 3.71520828E+00;
  COFD[13358] = -1.77538797E-01;
  COFD[13359] = 4.14984571E-03;
  COFD[13360] = -1.97411863E+01;
  COFD[13361] = 3.71520828E+00;
  COFD[13362] = -1.77538797E-01;
  COFD[13363] = 4.14984571E-03;
  COFD[13364] = -1.97411863E+01;
  COFD[13365] = 3.71520828E+00;
  COFD[13366] = -1.77538797E-01;
  COFD[13367] = 4.14984571E-03;
  COFD[13368] = -1.97411863E+01;
  COFD[13369] = 3.71520828E+00;
  COFD[13370] = -1.77538797E-01;
  COFD[13371] = 4.14984571E-03;
  COFD[13372] = -2.05802353E+01;
  COFD[13373] = 5.16117916E+00;
  COFD[13374] = -4.46897404E-01;
  COFD[13375] = 1.90470443E-02;
  COFD[13376] = -1.96915102E+01;
  COFD[13377] = 5.54637286E+00;
  COFD[13378] = -4.87070324E-01;
  COFD[13379] = 2.03983467E-02;
  COFD[13380] = -1.59632633E+01;
  COFD[13381] = 4.07051484E+00;
  COFD[13382] = -3.16303109E-01;
  COFD[13383] = 1.38259377E-02;
  COFD[13384] = -1.93925565E+01;
  COFD[13385] = 4.98286777E+00;
  COFD[13386] = -4.26970814E-01;
  COFD[13387] = 1.83122917E-02;
  COFD[13388] = -2.08463112E+01;
  COFD[13389] = 5.32244593E+00;
  COFD[13390] = -4.65829403E-01;
  COFD[13391] = 1.97895274E-02;
  COFD[13392] = -1.94151732E+01;
  COFD[13393] = 4.98286777E+00;
  COFD[13394] = -4.26970814E-01;
  COFD[13395] = 1.83122917E-02;
  COFD[13396] = -1.80862788E+01;
  COFD[13397] = 3.69199168E+00;
  COFD[13398] = -1.74005516E-01;
  COFD[13399] = 3.97694372E-03;
  COFD[13400] = -2.04949292E+01;
  COFD[13401] = 5.19614628E+00;
  COFD[13402] = -4.50889164E-01;
  COFD[13403] = 1.91983328E-02;
  COFD[13404] = -1.93946871E+01;
  COFD[13405] = 4.10954793E+00;
  COFD[13406] = -2.37523329E-01;
  COFD[13407] = 7.08858141E-03;
  COFD[13408] = -2.21082949E+01;
  COFD[13409] = 5.48540187E+00;
  COFD[13410] = -4.58962148E-01;
  COFD[13411] = 1.83770355E-02;
  COFD[13412] = -2.14314067E+01;
  COFD[13413] = 5.54007827E+00;
  COFD[13414] = -4.86434511E-01;
  COFD[13415] = 2.03779006E-02;
  COFD[13416] = -2.13881929E+01;
  COFD[13417] = 5.52422470E+00;
  COFD[13418] = -4.84872944E-01;
  COFD[13419] = 2.03298213E-02;
  COFD[13420] = -2.08554822E+01;
  COFD[13421] = 5.32244593E+00;
  COFD[13422] = -4.65829403E-01;
  COFD[13423] = 1.97895274E-02;
  COFD[13424] = -2.08642660E+01;
  COFD[13425] = 5.32244593E+00;
  COFD[13426] = -4.65829403E-01;
  COFD[13427] = 1.97895274E-02;
  COFD[13428] = -1.94051772E+01;
  COFD[13429] = 4.10954793E+00;
  COFD[13430] = -2.37523329E-01;
  COFD[13431] = 7.08858141E-03;
  COFD[13432] = -2.04451868E+01;
  COFD[13433] = 4.60682543E+00;
  COFD[13434] = -3.13971634E-01;
  COFD[13435] = 1.08661011E-02;
  COFD[13436] = -2.21333788E+01;
  COFD[13437] = 5.47072190E+00;
  COFD[13438] = -4.56301261E-01;
  COFD[13439] = 1.82313566E-02;
  COFD[13440] = -2.19162320E+01;
  COFD[13441] = 5.49906960E+00;
  COFD[13442] = -4.61793001E-01;
  COFD[13443] = 1.85415189E-02;
  COFD[13444] = -2.21229104E+01;
  COFD[13445] = 5.47072190E+00;
  COFD[13446] = -4.56301261E-01;
  COFD[13447] = 1.82313566E-02;
  COFD[13448] = -2.18318230E+01;
  COFD[13449] = 5.40298848E+00;
  COFD[13450] = -4.43954594E-01;
  COFD[13451] = 1.75542998E-02;
  COFD[13452] = -2.18439638E+01;
  COFD[13453] = 5.40298848E+00;
  COFD[13454] = -4.43954594E-01;
  COFD[13455] = 1.75542998E-02;
  COFD[13456] = -2.04033902E+01;
  COFD[13457] = 4.50250781E+00;
  COFD[13458] = -2.97622106E-01;
  COFD[13459] = 1.00481473E-02;
  COFD[13460] = -2.14782205E+01;
  COFD[13461] = 5.56978987E+00;
  COFD[13462] = -4.89141980E-01;
  COFD[13463] = 2.04499210E-02;
  COFD[13464] = -2.04096115E+01;
  COFD[13465] = 4.50250781E+00;
  COFD[13466] = -2.97622106E-01;
  COFD[13467] = 1.00481473E-02;
  COFD[13468] = -2.04096115E+01;
  COFD[13469] = 4.50250781E+00;
  COFD[13470] = -2.97622106E-01;
  COFD[13471] = 1.00481473E-02;
  COFD[13472] = -2.04156211E+01;
  COFD[13473] = 4.50250781E+00;
  COFD[13474] = -2.97622106E-01;
  COFD[13475] = 1.00481473E-02;
  COFD[13476] = -2.16791463E+01;
  COFD[13477] = 5.13708607E+00;
  COFD[13478] = -3.98445708E-01;
  COFD[13479] = 1.51455626E-02;
  COFD[13480] = -2.17934534E+01;
  COFD[13481] = 5.21869603E+00;
  COFD[13482] = -4.12084772E-01;
  COFD[13483] = 1.58573035E-02;
  COFD[13484] = -2.15102185E+01;
  COFD[13485] = 4.94878244E+00;
  COFD[13486] = -3.68158605E-01;
  COFD[13487] = 1.36008797E-02;
  COFD[13488] = -2.19919420E+01;
  COFD[13489] = 5.23595129E+00;
  COFD[13490] = -4.15079064E-01;
  COFD[13491] = 1.60168286E-02;
  COFD[13492] = -2.15236594E+01;
  COFD[13493] = 4.96219227E+00;
  COFD[13494] = -3.70270843E-01;
  COFD[13495] = 1.37072211E-02;
  COFD[13496] = -2.15278132E+01;
  COFD[13497] = 4.96219227E+00;
  COFD[13498] = -3.70270843E-01;
  COFD[13499] = 1.37072211E-02;
  COFD[13500] = -2.17094661E+01;
  COFD[13501] = 4.98271982E+00;
  COFD[13502] = -3.73502341E-01;
  COFD[13503] = 1.38698700E-02;
  COFD[13504] = -2.07056218E+01;
  COFD[13505] = 4.50542210E+00;
  COFD[13506] = -2.98075745E-01;
  COFD[13507] = 1.00707554E-02;
  COFD[13508] = -2.06657857E+01;
  COFD[13509] = 4.50717028E+00;
  COFD[13510] = -2.98347915E-01;
  COFD[13511] = 1.00843213E-02;
  COFD[13512] = -2.08213639E+01;
  COFD[13513] = 4.56898662E+00;
  COFD[13514] = -3.07972737E-01;
  COFD[13515] = 1.05639236E-02;
  COFD[13516] = -2.12888348E+01;
  COFD[13517] = 4.71644372E+00;
  COFD[13518] = -3.31349990E-01;
  COFD[13519] = 1.17430818E-02;
  COFD[13520] = -2.14039176E+01;
  COFD[13521] = 4.77238689E+00;
  COFD[13522] = -3.40265855E-01;
  COFD[13523] = 1.21942137E-02;
  COFD[13524] = -2.01097317E+01;
  COFD[13525] = 4.29138907E+00;
  COFD[13526] = -2.65108149E-01;
  COFD[13527] = 8.43949637E-03;
  COFD[13528] = -1.97704101E+01;
  COFD[13529] = 4.22062499E+00;
  COFD[13530] = -2.54326872E-01;
  COFD[13531] = 7.91017784E-03;
  COFD[13532] = -1.97756833E+01;
  COFD[13533] = 4.22062499E+00;
  COFD[13534] = -2.54326872E-01;
  COFD[13535] = 7.91017784E-03;
  COFD[13536] = -2.04275334E+01;
  COFD[13537] = 4.46112779E+00;
  COFD[13538] = -2.91186020E-01;
  COFD[13539] = 9.72764840E-03;
  COFD[13540] = -2.08027775E+01;
  COFD[13541] = 4.54504742E+00;
  COFD[13542] = -3.04239742E-01;
  COFD[13543] = 1.03778143E-02;
  COFD[13544] = -2.09501952E+01;
  COFD[13545] = 4.63716925E+00;
  COFD[13546] = -3.18815070E-01;
  COFD[13547] = 1.11115446E-02;
  COFD[13548] = -2.00520806E+01;
  COFD[13549] = 4.12245214E+00;
  COFD[13550] = -2.39476227E-01;
  COFD[13551] = 7.18400558E-03;
  COFD[13552] = -2.01418898E+01;
  COFD[13553] = 4.12245214E+00;
  COFD[13554] = -2.39476227E-01;
  COFD[13555] = 7.18400558E-03;
  COFD[13556] = -2.00940359E+01;
  COFD[13557] = 4.12245214E+00;
  COFD[13558] = -2.39476227E-01;
  COFD[13559] = 7.18400558E-03;
  COFD[13560] = -2.00940359E+01;
  COFD[13561] = 4.12245214E+00;
  COFD[13562] = -2.39476227E-01;
  COFD[13563] = 7.18400558E-03;
  COFD[13564] = -2.17407371E+01;
  COFD[13565] = 5.17945041E+00;
  COFD[13566] = -4.05514689E-01;
  COFD[13567] = 1.55141412E-02;
  COFD[13568] = -2.16722261E+01;
  COFD[13569] = 5.13708607E+00;
  COFD[13570] = -3.98445708E-01;
  COFD[13571] = 1.51455626E-02;
  COFD[13572] = -2.22394909E+01;
  COFD[13573] = 5.58129885E+00;
  COFD[13574] = -4.78532921E-01;
  COFD[13575] = 1.95095699E-02;
  COFD[13576] = -2.14048951E+01;
  COFD[13577] = 5.54007827E+00;
  COFD[13578] = -4.86434511E-01;
  COFD[13579] = 2.03779006E-02;
  COFD[13580] = -2.05295926E+01;
  COFD[13581] = 4.25911525E+00;
  COFD[13582] = -2.60173761E-01;
  COFD[13583] = 8.19680272E-03;
  COFD[13584] = -2.04400444E+01;
  COFD[13585] = 4.33083619E+00;
  COFD[13586] = -2.71138753E-01;
  COFD[13587] = 8.73620166E-03;
  COFD[13588] = -2.04372538E+01;
  COFD[13589] = 4.33083619E+00;
  COFD[13590] = -2.71138753E-01;
  COFD[13591] = 8.73620166E-03;
  COFD[13592] = -2.06551821E+01;
  COFD[13593] = 4.39349519E+00;
  COFD[13594] = -2.80764635E-01;
  COFD[13595] = 9.21161648E-03;
  COFD[13596] = -2.02152972E+01;
  COFD[13597] = 4.16874996E+00;
  COFD[13598] = -2.46479660E-01;
  COFD[13599] = 7.52627408E-03;
  COFD[13600] = -2.04981394E+01;
  COFD[13601] = 4.25911525E+00;
  COFD[13602] = -2.60173761E-01;
  COFD[13603] = 8.19680272E-03;
  COFD[13604] = -2.04960526E+01;
  COFD[13605] = 4.25911525E+00;
  COFD[13606] = -2.60173761E-01;
  COFD[13607] = 8.19680272E-03;
  COFD[13608] = -2.08252513E+01;
  COFD[13609] = 4.35920123E+00;
  COFD[13610] = -2.75491273E-01;
  COFD[13611] = 8.95100289E-03;
  COFD[13612] = -2.08236309E+01;
  COFD[13613] = 4.35920123E+00;
  COFD[13614] = -2.75491273E-01;
  COFD[13615] = 8.95100289E-03;
  COFD[13616] = -2.08236309E+01;
  COFD[13617] = 4.35920123E+00;
  COFD[13618] = -2.75491273E-01;
  COFD[13619] = 8.95100289E-03;
  COFD[13620] = -2.08236309E+01;
  COFD[13621] = 4.35920123E+00;
  COFD[13622] = -2.75491273E-01;
  COFD[13623] = 8.95100289E-03;
  COFD[13624] = -2.08236309E+01;
  COFD[13625] = 4.35920123E+00;
  COFD[13626] = -2.75491273E-01;
  COFD[13627] = 8.95100289E-03;
  COFD[13628] = -2.08279516E+01;
  COFD[13629] = 4.37022252E+00;
  COFD[13630] = -2.77185031E-01;
  COFD[13631] = 9.03467556E-03;
  COFD[13632] = -2.08279516E+01;
  COFD[13633] = 4.37022252E+00;
  COFD[13634] = -2.77185031E-01;
  COFD[13635] = 9.03467556E-03;
  COFD[13636] = -1.96275498E+01;
  COFD[13637] = 3.74985445E+00;
  COFD[13638] = -1.82818055E-01;
  COFD[13639] = 4.40846246E-03;
  COFD[13640] = -1.96275498E+01;
  COFD[13641] = 3.74985445E+00;
  COFD[13642] = -1.82818055E-01;
  COFD[13643] = 4.40846246E-03;
  COFD[13644] = -1.96275498E+01;
  COFD[13645] = 3.74985445E+00;
  COFD[13646] = -1.82818055E-01;
  COFD[13647] = 4.40846246E-03;
  COFD[13648] = -1.96275498E+01;
  COFD[13649] = 3.74985445E+00;
  COFD[13650] = -1.82818055E-01;
  COFD[13651] = 4.40846246E-03;
  COFD[13652] = -1.96275498E+01;
  COFD[13653] = 3.74985445E+00;
  COFD[13654] = -1.82818055E-01;
  COFD[13655] = 4.40846246E-03;
  COFD[13656] = -1.96275498E+01;
  COFD[13657] = 3.74985445E+00;
  COFD[13658] = -1.82818055E-01;
  COFD[13659] = 4.40846246E-03;
  COFD[13660] = -1.96275498E+01;
  COFD[13661] = 3.74985445E+00;
  COFD[13662] = -1.82818055E-01;
  COFD[13663] = 4.40846246E-03;
  COFD[13664] = -1.96275498E+01;
  COFD[13665] = 3.74985445E+00;
  COFD[13666] = -1.82818055E-01;
  COFD[13667] = 4.40846246E-03;
  COFD[13668] = -1.96275498E+01;
  COFD[13669] = 3.74985445E+00;
  COFD[13670] = -1.82818055E-01;
  COFD[13671] = 4.40846246E-03;
  COFD[13672] = -1.96275498E+01;
  COFD[13673] = 3.74985445E+00;
  COFD[13674] = -1.82818055E-01;
  COFD[13675] = 4.40846246E-03;
  COFD[13676] = -1.96275498E+01;
  COFD[13677] = 3.74985445E+00;
  COFD[13678] = -1.82818055E-01;
  COFD[13679] = 4.40846246E-03;
  COFD[13680] = -1.96275498E+01;
  COFD[13681] = 3.74985445E+00;
  COFD[13682] = -1.82818055E-01;
  COFD[13683] = 4.40846246E-03;
  COFD[13684] = -1.93404036E+01;
  COFD[13685] = 3.51545358E+00;
  COFD[13686] = -1.47552581E-01;
  COFD[13687] = 2.69390634E-03;
  COFD[13688] = -1.93404036E+01;
  COFD[13689] = 3.51545358E+00;
  COFD[13690] = -1.47552581E-01;
  COFD[13691] = 2.69390634E-03;
  COFD[13692] = -1.93404036E+01;
  COFD[13693] = 3.51545358E+00;
  COFD[13694] = -1.47552581E-01;
  COFD[13695] = 2.69390634E-03;
  COFD[13696] = -1.93404036E+01;
  COFD[13697] = 3.51545358E+00;
  COFD[13698] = -1.47552581E-01;
  COFD[13699] = 2.69390634E-03;
  COFD[13700] = -2.01420779E+01;
  COFD[13701] = 4.01441923E+00;
  COFD[13702] = -2.23192049E-01;
  COFD[13703] = 6.38970048E-03;
  COFD[13704] = -2.01420779E+01;
  COFD[13705] = 4.01441923E+00;
  COFD[13706] = -2.23192049E-01;
  COFD[13707] = 6.38970048E-03;
  COFD[13708] = -1.94537340E+01;
  COFD[13709] = 3.64033093E+00;
  COFD[13710] = -1.66213611E-01;
  COFD[13711] = 3.59745099E-03;
  COFD[13712] = -1.94537340E+01;
  COFD[13713] = 3.64033093E+00;
  COFD[13714] = -1.66213611E-01;
  COFD[13715] = 3.59745099E-03;
  COFD[13716] = -1.94537340E+01;
  COFD[13717] = 3.64033093E+00;
  COFD[13718] = -1.66213611E-01;
  COFD[13719] = 3.59745099E-03;
  COFD[13720] = -1.94537340E+01;
  COFD[13721] = 3.64033093E+00;
  COFD[13722] = -1.66213611E-01;
  COFD[13723] = 3.59745099E-03;
  COFD[13724] = -2.04649116E+01;
  COFD[13725] = 5.18856872E+00;
  COFD[13726] = -4.50001829E-01;
  COFD[13727] = 1.91636142E-02;
  COFD[13728] = -1.96917304E+01;
  COFD[13729] = 5.54637286E+00;
  COFD[13730] = -4.87070324E-01;
  COFD[13731] = 2.03983467E-02;
  COFD[13732] = -1.59636946E+01;
  COFD[13733] = 4.07051484E+00;
  COFD[13734] = -3.16303109E-01;
  COFD[13735] = 1.38259377E-02;
  COFD[13736] = -1.93952265E+01;
  COFD[13737] = 4.98286777E+00;
  COFD[13738] = -4.26970814E-01;
  COFD[13739] = 1.83122917E-02;
  COFD[13740] = -2.08505769E+01;
  COFD[13741] = 5.32244593E+00;
  COFD[13742] = -4.65829403E-01;
  COFD[13743] = 1.97895274E-02;
  COFD[13744] = -1.94179671E+01;
  COFD[13745] = 4.98286777E+00;
  COFD[13746] = -4.26970814E-01;
  COFD[13747] = 1.83122917E-02;
  COFD[13748] = -1.80891927E+01;
  COFD[13749] = 3.69199168E+00;
  COFD[13750] = -1.74005516E-01;
  COFD[13751] = 3.97694372E-03;
  COFD[13752] = -2.04988604E+01;
  COFD[13753] = 5.19614628E+00;
  COFD[13754] = -4.50889164E-01;
  COFD[13755] = 1.91983328E-02;
  COFD[13756] = -1.93987062E+01;
  COFD[13757] = 4.10954793E+00;
  COFD[13758] = -2.37523329E-01;
  COFD[13759] = 7.08858141E-03;
  COFD[13760] = -2.21133921E+01;
  COFD[13761] = 5.48540187E+00;
  COFD[13762] = -4.58962148E-01;
  COFD[13763] = 1.83770355E-02;
  COFD[13764] = -2.14339544E+01;
  COFD[13765] = 5.54007827E+00;
  COFD[13766] = -4.86434511E-01;
  COFD[13767] = 2.03779006E-02;
  COFD[13768] = -2.13908684E+01;
  COFD[13769] = 5.52422470E+00;
  COFD[13770] = -4.84872944E-01;
  COFD[13771] = 2.03298213E-02;
  COFD[13772] = -2.08598273E+01;
  COFD[13773] = 5.32244593E+00;
  COFD[13774] = -4.65829403E-01;
  COFD[13775] = 1.97895274E-02;
  COFD[13776] = -2.08686884E+01;
  COFD[13777] = 5.32244593E+00;
  COFD[13778] = -4.65829403E-01;
  COFD[13779] = 1.97895274E-02;
  COFD[13780] = -1.94092818E+01;
  COFD[13781] = 4.10954793E+00;
  COFD[13782] = -2.37523329E-01;
  COFD[13783] = 7.08858141E-03;
  COFD[13784] = -2.04493748E+01;
  COFD[13785] = 4.60682543E+00;
  COFD[13786] = -3.13971634E-01;
  COFD[13787] = 1.08661011E-02;
  COFD[13788] = -2.21374872E+01;
  COFD[13789] = 5.47072190E+00;
  COFD[13790] = -4.56301261E-01;
  COFD[13791] = 1.82313566E-02;
  COFD[13792] = -2.19201671E+01;
  COFD[13793] = 5.49906960E+00;
  COFD[13794] = -4.61793001E-01;
  COFD[13795] = 1.85415189E-02;
  COFD[13796] = -2.21269333E+01;
  COFD[13797] = 5.47072190E+00;
  COFD[13798] = -4.56301261E-01;
  COFD[13799] = 1.82313566E-02;
  COFD[13800] = -2.18355754E+01;
  COFD[13801] = 5.40298848E+00;
  COFD[13802] = -4.43954594E-01;
  COFD[13803] = 1.75542998E-02;
  COFD[13804] = -2.18478087E+01;
  COFD[13805] = 5.40298848E+00;
  COFD[13806] = -4.43954594E-01;
  COFD[13807] = 1.75542998E-02;
  COFD[13808] = -2.04083662E+01;
  COFD[13809] = 4.50250781E+00;
  COFD[13810] = -2.97622106E-01;
  COFD[13811] = 1.00481473E-02;
  COFD[13812] = -2.14831325E+01;
  COFD[13813] = 5.56978987E+00;
  COFD[13814] = -4.89141980E-01;
  COFD[13815] = 2.04499210E-02;
  COFD[13816] = -2.04146501E+01;
  COFD[13817] = 4.50250781E+00;
  COFD[13818] = -2.97622106E-01;
  COFD[13819] = 1.00481473E-02;
  COFD[13820] = -2.04146501E+01;
  COFD[13821] = 4.50250781E+00;
  COFD[13822] = -2.97622106E-01;
  COFD[13823] = 1.00481473E-02;
  COFD[13824] = -2.04207209E+01;
  COFD[13825] = 4.50250781E+00;
  COFD[13826] = -2.97622106E-01;
  COFD[13827] = 1.00481473E-02;
  COFD[13828] = -2.16839956E+01;
  COFD[13829] = 5.13708607E+00;
  COFD[13830] = -3.98445708E-01;
  COFD[13831] = 1.51455626E-02;
  COFD[13832] = -2.17984322E+01;
  COFD[13833] = 5.21869603E+00;
  COFD[13834] = -4.12084772E-01;
  COFD[13835] = 1.58573035E-02;
  COFD[13836] = -2.15158620E+01;
  COFD[13837] = 4.94878244E+00;
  COFD[13838] = -3.68158605E-01;
  COFD[13839] = 1.36008797E-02;
  COFD[13840] = -2.19969833E+01;
  COFD[13841] = 5.23595129E+00;
  COFD[13842] = -4.15079064E-01;
  COFD[13843] = 1.60168286E-02;
  COFD[13844] = -2.15293515E+01;
  COFD[13845] = 4.96219227E+00;
  COFD[13846] = -3.70270843E-01;
  COFD[13847] = 1.37072211E-02;
  COFD[13848] = -2.15335531E+01;
  COFD[13849] = 4.96219227E+00;
  COFD[13850] = -3.70270843E-01;
  COFD[13851] = 1.37072211E-02;
  COFD[13852] = -2.17152528E+01;
  COFD[13853] = 4.98271982E+00;
  COFD[13854] = -3.73502341E-01;
  COFD[13855] = 1.38698700E-02;
  COFD[13856] = -2.07114065E+01;
  COFD[13857] = 4.50542210E+00;
  COFD[13858] = -2.98075745E-01;
  COFD[13859] = 1.00707554E-02;
  COFD[13860] = -2.06716164E+01;
  COFD[13861] = 4.50717028E+00;
  COFD[13862] = -2.98347915E-01;
  COFD[13863] = 1.00843213E-02;
  COFD[13864] = -2.08271486E+01;
  COFD[13865] = 4.56898662E+00;
  COFD[13866] = -3.07972737E-01;
  COFD[13867] = 1.05639236E-02;
  COFD[13868] = -2.12951174E+01;
  COFD[13869] = 4.71644372E+00;
  COFD[13870] = -3.31349990E-01;
  COFD[13871] = 1.17430818E-02;
  COFD[13872] = -2.14102372E+01;
  COFD[13873] = 4.77238689E+00;
  COFD[13874] = -3.40265855E-01;
  COFD[13875] = 1.21942137E-02;
  COFD[13876] = -2.01148914E+01;
  COFD[13877] = 4.29138907E+00;
  COFD[13878] = -2.65108149E-01;
  COFD[13879] = 8.43949637E-03;
  COFD[13880] = -1.97756833E+01;
  COFD[13881] = 4.22062499E+00;
  COFD[13882] = -2.54326872E-01;
  COFD[13883] = 7.91017784E-03;
  COFD[13884] = -1.97810128E+01;
  COFD[13885] = 4.22062499E+00;
  COFD[13886] = -2.54326872E-01;
  COFD[13887] = 7.91017784E-03;
  COFD[13888] = -2.04332234E+01;
  COFD[13889] = 4.46112779E+00;
  COFD[13890] = -2.91186020E-01;
  COFD[13891] = 9.72764840E-03;
  COFD[13892] = -2.08085153E+01;
  COFD[13893] = 4.54504742E+00;
  COFD[13894] = -3.04239742E-01;
  COFD[13895] = 1.03778143E-02;
  COFD[13896] = -2.09559798E+01;
  COFD[13897] = 4.63716925E+00;
  COFD[13898] = -3.18815070E-01;
  COFD[13899] = 1.11115446E-02;
  COFD[13900] = -2.00584349E+01;
  COFD[13901] = 4.12245214E+00;
  COFD[13902] = -2.39476227E-01;
  COFD[13903] = 7.18400558E-03;
  COFD[13904] = -2.01495040E+01;
  COFD[13905] = 4.12245214E+00;
  COFD[13906] = -2.39476227E-01;
  COFD[13907] = 7.18400558E-03;
  COFD[13908] = -2.01009503E+01;
  COFD[13909] = 4.12245214E+00;
  COFD[13910] = -2.39476227E-01;
  COFD[13911] = 7.18400558E-03;
  COFD[13912] = -2.01009503E+01;
  COFD[13913] = 4.12245214E+00;
  COFD[13914] = -2.39476227E-01;
  COFD[13915] = 7.18400558E-03;
  COFD[13916] = -2.17456518E+01;
  COFD[13917] = 5.17945041E+00;
  COFD[13918] = -4.05514689E-01;
  COFD[13919] = 1.55141412E-02;
  COFD[13920] = -2.16770084E+01;
  COFD[13921] = 5.13708607E+00;
  COFD[13922] = -3.98445708E-01;
  COFD[13923] = 1.51455626E-02;
  COFD[13924] = -2.22442047E+01;
  COFD[13925] = 5.58129885E+00;
  COFD[13926] = -4.78532921E-01;
  COFD[13927] = 1.95095699E-02;
  COFD[13928] = -2.14073109E+01;
  COFD[13929] = 5.54007827E+00;
  COFD[13930] = -4.86434511E-01;
  COFD[13931] = 2.03779006E-02;
  COFD[13932] = -2.05368716E+01;
  COFD[13933] = 4.25911525E+00;
  COFD[13934] = -2.60173761E-01;
  COFD[13935] = 8.19680272E-03;
  COFD[13936] = -2.04464346E+01;
  COFD[13937] = 4.33083619E+00;
  COFD[13938] = -2.71138753E-01;
  COFD[13939] = 8.73620166E-03;
  COFD[13940] = -2.04436082E+01;
  COFD[13941] = 4.33083619E+00;
  COFD[13942] = -2.71138753E-01;
  COFD[13943] = 8.73620166E-03;
  COFD[13944] = -2.06615364E+01;
  COFD[13945] = 4.39349519E+00;
  COFD[13946] = -2.80764635E-01;
  COFD[13947] = 9.21161648E-03;
  COFD[13948] = -2.02221008E+01;
  COFD[13949] = 4.16874996E+00;
  COFD[13950] = -2.46479660E-01;
  COFD[13951] = 7.52627408E-03;
  COFD[13952] = -2.05049716E+01;
  COFD[13953] = 4.25911525E+00;
  COFD[13954] = -2.60173761E-01;
  COFD[13955] = 8.19680272E-03;
  COFD[13956] = -2.05028562E+01;
  COFD[13957] = 4.25911525E+00;
  COFD[13958] = -2.60173761E-01;
  COFD[13959] = 8.19680272E-03;
  COFD[13960] = -2.08324426E+01;
  COFD[13961] = 4.35920123E+00;
  COFD[13962] = -2.75491273E-01;
  COFD[13963] = 8.95100289E-03;
  COFD[13964] = -2.08307988E+01;
  COFD[13965] = 4.35920123E+00;
  COFD[13966] = -2.75491273E-01;
  COFD[13967] = 8.95100289E-03;
  COFD[13968] = -2.08307988E+01;
  COFD[13969] = 4.35920123E+00;
  COFD[13970] = -2.75491273E-01;
  COFD[13971] = 8.95100289E-03;
  COFD[13972] = -2.08307988E+01;
  COFD[13973] = 4.35920123E+00;
  COFD[13974] = -2.75491273E-01;
  COFD[13975] = 8.95100289E-03;
  COFD[13976] = -2.08307988E+01;
  COFD[13977] = 4.35920123E+00;
  COFD[13978] = -2.75491273E-01;
  COFD[13979] = 8.95100289E-03;
  COFD[13980] = -2.08350957E+01;
  COFD[13981] = 4.37022252E+00;
  COFD[13982] = -2.77185031E-01;
  COFD[13983] = 9.03467556E-03;
  COFD[13984] = -2.08350957E+01;
  COFD[13985] = 4.37022252E+00;
  COFD[13986] = -2.77185031E-01;
  COFD[13987] = 9.03467556E-03;
  COFD[13988] = -1.96353326E+01;
  COFD[13989] = 3.74985445E+00;
  COFD[13990] = -1.82818055E-01;
  COFD[13991] = 4.40846246E-03;
  COFD[13992] = -1.96353326E+01;
  COFD[13993] = 3.74985445E+00;
  COFD[13994] = -1.82818055E-01;
  COFD[13995] = 4.40846246E-03;
  COFD[13996] = -1.96353326E+01;
  COFD[13997] = 3.74985445E+00;
  COFD[13998] = -1.82818055E-01;
  COFD[13999] = 4.40846246E-03;
  COFD[14000] = -1.96353326E+01;
  COFD[14001] = 3.74985445E+00;
  COFD[14002] = -1.82818055E-01;
  COFD[14003] = 4.40846246E-03;
  COFD[14004] = -1.96353326E+01;
  COFD[14005] = 3.74985445E+00;
  COFD[14006] = -1.82818055E-01;
  COFD[14007] = 4.40846246E-03;
  COFD[14008] = -1.96353326E+01;
  COFD[14009] = 3.74985445E+00;
  COFD[14010] = -1.82818055E-01;
  COFD[14011] = 4.40846246E-03;
  COFD[14012] = -1.96353326E+01;
  COFD[14013] = 3.74985445E+00;
  COFD[14014] = -1.82818055E-01;
  COFD[14015] = 4.40846246E-03;
  COFD[14016] = -1.96353326E+01;
  COFD[14017] = 3.74985445E+00;
  COFD[14018] = -1.82818055E-01;
  COFD[14019] = 4.40846246E-03;
  COFD[14020] = -1.96353326E+01;
  COFD[14021] = 3.74985445E+00;
  COFD[14022] = -1.82818055E-01;
  COFD[14023] = 4.40846246E-03;
  COFD[14024] = -1.96353326E+01;
  COFD[14025] = 3.74985445E+00;
  COFD[14026] = -1.82818055E-01;
  COFD[14027] = 4.40846246E-03;
  COFD[14028] = -1.96353326E+01;
  COFD[14029] = 3.74985445E+00;
  COFD[14030] = -1.82818055E-01;
  COFD[14031] = 4.40846246E-03;
  COFD[14032] = -1.96353326E+01;
  COFD[14033] = 3.74985445E+00;
  COFD[14034] = -1.82818055E-01;
  COFD[14035] = 4.40846246E-03;
  COFD[14036] = -1.93486146E+01;
  COFD[14037] = 3.51545358E+00;
  COFD[14038] = -1.47552581E-01;
  COFD[14039] = 2.69390634E-03;
  COFD[14040] = -1.93486146E+01;
  COFD[14041] = 3.51545358E+00;
  COFD[14042] = -1.47552581E-01;
  COFD[14043] = 2.69390634E-03;
  COFD[14044] = -1.93486146E+01;
  COFD[14045] = 3.51545358E+00;
  COFD[14046] = -1.47552581E-01;
  COFD[14047] = 2.69390634E-03;
  COFD[14048] = -1.93486146E+01;
  COFD[14049] = 3.51545358E+00;
  COFD[14050] = -1.47552581E-01;
  COFD[14051] = 2.69390634E-03;
  COFD[14052] = -2.01495642E+01;
  COFD[14053] = 4.01441923E+00;
  COFD[14054] = -2.23192049E-01;
  COFD[14055] = 6.38970048E-03;
  COFD[14056] = -2.01495642E+01;
  COFD[14057] = 4.01441923E+00;
  COFD[14058] = -2.23192049E-01;
  COFD[14059] = 6.38970048E-03;
  COFD[14060] = -1.94617350E+01;
  COFD[14061] = 3.64033093E+00;
  COFD[14062] = -1.66213611E-01;
  COFD[14063] = 3.59745099E-03;
  COFD[14064] = -1.94617350E+01;
  COFD[14065] = 3.64033093E+00;
  COFD[14066] = -1.66213611E-01;
  COFD[14067] = 3.59745099E-03;
  COFD[14068] = -1.94617350E+01;
  COFD[14069] = 3.64033093E+00;
  COFD[14070] = -1.66213611E-01;
  COFD[14071] = 3.59745099E-03;
  COFD[14072] = -1.94617350E+01;
  COFD[14073] = 3.64033093E+00;
  COFD[14074] = -1.66213611E-01;
  COFD[14075] = 3.59745099E-03;
  COFD[14076] = -2.04688432E+01;
  COFD[14077] = 5.18856872E+00;
  COFD[14078] = -4.50001829E-01;
  COFD[14079] = 1.91636142E-02;
  COFD[14080] = -1.95803148E+01;
  COFD[14081] = 5.45790068E+00;
  COFD[14082] = -4.77666083E-01;
  COFD[14083] = 2.00724628E-02;
  COFD[14084] = -1.58184590E+01;
  COFD[14085] = 3.96142647E+00;
  COFD[14086] = -3.02397826E-01;
  COFD[14087] = 1.32318833E-02;
  COFD[14088] = -1.92241551E+01;
  COFD[14089] = 4.86381280E+00;
  COFD[14090] = -4.12606006E-01;
  COFD[14091] = 1.77326718E-02;
  COFD[14092] = -2.06742792E+01;
  COFD[14093] = 5.20540788E+00;
  COFD[14094] = -4.51975238E-01;
  COFD[14095] = 1.92408880E-02;
  COFD[14096] = -1.92476613E+01;
  COFD[14097] = 4.86381280E+00;
  COFD[14098] = -4.12606006E-01;
  COFD[14099] = 1.77326718E-02;
  COFD[14100] = -1.87191996E+01;
  COFD[14101] = 3.91984174E+00;
  COFD[14102] = -2.08885909E-01;
  COFD[14103] = 5.69091666E-03;
  COFD[14104] = -2.04339608E+01;
  COFD[14105] = 5.12877694E+00;
  COFD[14106] = -4.44057978E-01;
  COFD[14107] = 1.89800196E-02;
  COFD[14108] = -2.00872430E+01;
  COFD[14109] = 4.36837296E+00;
  COFD[14110] = -2.76900721E-01;
  COFD[14111] = 9.02062809E-03;
  COFD[14112] = -2.22996973E+01;
  COFD[14113] = 5.52974749E+00;
  COFD[14114] = -4.68512662E-01;
  COFD[14115] = 1.89420259E-02;
  COFD[14116] = -2.12967438E+01;
  COFD[14117] = 5.45075440E+00;
  COFD[14118] = -4.76902219E-01;
  COFD[14119] = 2.00457833E-02;
  COFD[14120] = -2.12351065E+01;
  COFD[14121] = 5.42585491E+00;
  COFD[14122] = -4.74017644E-01;
  COFD[14123] = 1.99340936E-02;
  COFD[14124] = -2.06840309E+01;
  COFD[14125] = 5.20540788E+00;
  COFD[14126] = -4.51975238E-01;
  COFD[14127] = 1.92408880E-02;
  COFD[14128] = -2.06933816E+01;
  COFD[14129] = 5.20540788E+00;
  COFD[14130] = -4.51975238E-01;
  COFD[14131] = 1.92408880E-02;
  COFD[14132] = -2.00983576E+01;
  COFD[14133] = 4.36837296E+00;
  COFD[14134] = -2.76900721E-01;
  COFD[14135] = 9.02062809E-03;
  COFD[14136] = -2.09444485E+01;
  COFD[14137] = 4.78554869E+00;
  COFD[14138] = -3.42381150E-01;
  COFD[14139] = 1.23018278E-02;
  COFD[14140] = -2.23172222E+01;
  COFD[14141] = 5.51921482E+00;
  COFD[14142] = -4.66472603E-01;
  COFD[14143] = 1.88266656E-02;
  COFD[14144] = -2.21147671E+01;
  COFD[14145] = 5.54793364E+00;
  COFD[14146] = -4.71971857E-01;
  COFD[14147] = 1.91358707E-02;
  COFD[14148] = -2.23061299E+01;
  COFD[14149] = 5.51921482E+00;
  COFD[14150] = -4.66472603E-01;
  COFD[14151] = 1.88266656E-02;
  COFD[14152] = -2.21009576E+01;
  COFD[14153] = 5.48520755E+00;
  COFD[14154] = -4.58927017E-01;
  COFD[14155] = 1.83751144E-02;
  COFD[14156] = -2.21137719E+01;
  COFD[14157] = 5.48520755E+00;
  COFD[14158] = -4.58927017E-01;
  COFD[14159] = 1.83751144E-02;
  COFD[14160] = -2.09310875E+01;
  COFD[14161] = 4.69256593E+00;
  COFD[14162] = -3.27570630E-01;
  COFD[14163] = 1.15525471E-02;
  COFD[14164] = -2.14294414E+01;
  COFD[14165] = 5.49857681E+00;
  COFD[14166] = -4.82159755E-01;
  COFD[14167] = 2.02364231E-02;
  COFD[14168] = -2.09377713E+01;
  COFD[14169] = 4.69256593E+00;
  COFD[14170] = -3.27570630E-01;
  COFD[14171] = 1.15525471E-02;
  COFD[14172] = -2.09377713E+01;
  COFD[14173] = 4.69256593E+00;
  COFD[14174] = -3.27570630E-01;
  COFD[14175] = 1.15525471E-02;
  COFD[14176] = -2.09442336E+01;
  COFD[14177] = 4.69256593E+00;
  COFD[14178] = -3.27570630E-01;
  COFD[14179] = 1.15525471E-02;
  COFD[14180] = -2.20261329E+01;
  COFD[14181] = 5.25283972E+00;
  COFD[14182] = -4.18059393E-01;
  COFD[14183] = 1.61770209E-02;
  COFD[14184] = -2.21257487E+01;
  COFD[14185] = 5.32681378E+00;
  COFD[14186] = -4.30645652E-01;
  COFD[14187] = 1.68414172E-02;
  COFD[14188] = -2.19840437E+01;
  COFD[14189] = 5.11887453E+00;
  COFD[14190] = -3.95434196E-01;
  COFD[14191] = 1.49893721E-02;
  COFD[14192] = -2.23178750E+01;
  COFD[14193] = 5.34519349E+00;
  COFD[14194] = -4.33801819E-01;
  COFD[14195] = 1.70088536E-02;
  COFD[14196] = -2.19894262E+01;
  COFD[14197] = 5.12832498E+00;
  COFD[14198] = -3.96993683E-01;
  COFD[14199] = 1.50701708E-02;
  COFD[14200] = -2.19939360E+01;
  COFD[14201] = 5.12832498E+00;
  COFD[14202] = -3.96993683E-01;
  COFD[14203] = 1.50701708E-02;
  COFD[14204] = -2.21524199E+01;
  COFD[14205] = 5.14204836E+00;
  COFD[14206] = -3.99269495E-01;
  COFD[14207] = 1.51883773E-02;
  COFD[14208] = -2.12256698E+01;
  COFD[14209] = 4.69514557E+00;
  COFD[14210] = -3.27978545E-01;
  COFD[14211] = 1.15730994E-02;
  COFD[14212] = -2.11883212E+01;
  COFD[14213] = 4.69669248E+00;
  COFD[14214] = -3.28223200E-01;
  COFD[14215] = 1.15854275E-02;
  COFD[14216] = -2.13235651E+01;
  COFD[14217] = 4.75112312E+00;
  COFD[14218] = -3.36848705E-01;
  COFD[14219] = 1.20205650E-02;
  COFD[14220] = -2.17839644E+01;
  COFD[14221] = 4.89694310E+00;
  COFD[14222] = -3.59986570E-01;
  COFD[14223] = 1.31893778E-02;
  COFD[14224] = -2.19165610E+01;
  COFD[14225] = 4.96044814E+00;
  COFD[14226] = -3.69996115E-01;
  COFD[14227] = 1.36933893E-02;
  COFD[14228] = -2.07259814E+01;
  COFD[14229] = 4.52059311E+00;
  COFD[14230] = -3.00438699E-01;
  COFD[14231] = 1.01885687E-02;
  COFD[14232] = -2.04275334E+01;
  COFD[14233] = 4.46112779E+00;
  COFD[14234] = -2.91186020E-01;
  COFD[14235] = 9.72764840E-03;
  COFD[14236] = -2.04332234E+01;
  COFD[14237] = 4.46112779E+00;
  COFD[14238] = -2.91186020E-01;
  COFD[14239] = 9.72764840E-03;
  COFD[14240] = -2.09676475E+01;
  COFD[14241] = 4.65507001E+00;
  COFD[14242] = -3.21653943E-01;
  COFD[14243] = 1.12548383E-02;
  COFD[14244] = -2.13087041E+01;
  COFD[14245] = 4.72954849E+00;
  COFD[14246] = -3.33427661E-01;
  COFD[14247] = 1.18479385E-02;
  COFD[14248] = -2.14480118E+01;
  COFD[14249] = 4.81738448E+00;
  COFD[14250] = -3.47427913E-01;
  COFD[14251] = 1.25566946E-02;
  COFD[14252] = -2.07343997E+01;
  COFD[14253] = 4.37963462E+00;
  COFD[14254] = -2.78632270E-01;
  COFD[14255] = 9.10619715E-03;
  COFD[14256] = -2.08337575E+01;
  COFD[14257] = 4.37963462E+00;
  COFD[14258] = -2.78632270E-01;
  COFD[14259] = 9.10619715E-03;
  COFD[14260] = -2.07805804E+01;
  COFD[14261] = 4.37963462E+00;
  COFD[14262] = -2.78632270E-01;
  COFD[14263] = 9.10619715E-03;
  COFD[14264] = -2.07805804E+01;
  COFD[14265] = 4.37963462E+00;
  COFD[14266] = -2.78632270E-01;
  COFD[14267] = 9.10619715E-03;
  COFD[14268] = -2.20714225E+01;
  COFD[14269] = 5.28765993E+00;
  COFD[14270] = -4.24082865E-01;
  COFD[14271] = 1.64979120E-02;
  COFD[14272] = -2.20187192E+01;
  COFD[14273] = 5.25283972E+00;
  COFD[14274] = -4.18059393E-01;
  COFD[14275] = 1.61770209E-02;
  COFD[14276] = -2.23289013E+01;
  COFD[14277] = 5.58459109E+00;
  COFD[14278] = -4.82193396E-01;
  COFD[14279] = 1.97964436E-02;
  COFD[14280] = -2.12692883E+01;
  COFD[14281] = 5.45075440E+00;
  COFD[14282] = -4.76902219E-01;
  COFD[14283] = 2.00457833E-02;
  COFD[14284] = -2.11532747E+01;
  COFD[14285] = 4.49163175E+00;
  COFD[14286] = -2.95930012E-01;
  COFD[14287] = 9.96384770E-03;
  COFD[14288] = -2.10462723E+01;
  COFD[14289] = 4.55554257E+00;
  COFD[14290] = -3.05871928E-01;
  COFD[14291] = 1.04590633E-02;
  COFD[14292] = -2.10432126E+01;
  COFD[14293] = 4.55554257E+00;
  COFD[14294] = -3.05871928E-01;
  COFD[14295] = 1.04590633E-02;
  COFD[14296] = -2.12223236E+01;
  COFD[14297] = 4.60385596E+00;
  COFD[14298] = -3.13496085E-01;
  COFD[14299] = 1.08419777E-02;
  COFD[14300] = -2.08848984E+01;
  COFD[14301] = 4.42008395E+00;
  COFD[14302] = -2.84850644E-01;
  COFD[14303] = 9.41364557E-03;
  COFD[14304] = -2.11184317E+01;
  COFD[14305] = 4.49163175E+00;
  COFD[14306] = -2.95930012E-01;
  COFD[14307] = 9.96384770E-03;
  COFD[14308] = -2.11161283E+01;
  COFD[14309] = 4.49163175E+00;
  COFD[14310] = -2.95930012E-01;
  COFD[14311] = 9.96384770E-03;
  COFD[14312] = -2.14119125E+01;
  COFD[14313] = 4.57887376E+00;
  COFD[14314] = -3.09523118E-01;
  COFD[14315] = 1.06414780E-02;
  COFD[14316] = -2.14101140E+01;
  COFD[14317] = 4.57887376E+00;
  COFD[14318] = -3.09523118E-01;
  COFD[14319] = 1.06414780E-02;
  COFD[14320] = -2.14101140E+01;
  COFD[14321] = 4.57887376E+00;
  COFD[14322] = -3.09523118E-01;
  COFD[14323] = 1.06414780E-02;
  COFD[14324] = -2.14101140E+01;
  COFD[14325] = 4.57887376E+00;
  COFD[14326] = -3.09523118E-01;
  COFD[14327] = 1.06414780E-02;
  COFD[14328] = -2.14101140E+01;
  COFD[14329] = 4.57887376E+00;
  COFD[14330] = -3.09523118E-01;
  COFD[14331] = 1.06414780E-02;
  COFD[14332] = -2.14101439E+01;
  COFD[14333] = 4.58783887E+00;
  COFD[14334] = -3.10930961E-01;
  COFD[14335] = 1.07119795E-02;
  COFD[14336] = -2.14101439E+01;
  COFD[14337] = 4.58783887E+00;
  COFD[14338] = -3.10930961E-01;
  COFD[14339] = 1.07119795E-02;
  COFD[14340] = -2.02529779E+01;
  COFD[14341] = 3.98291296E+00;
  COFD[14342] = -2.18459468E-01;
  COFD[14343] = 6.15957476E-03;
  COFD[14344] = -2.02529779E+01;
  COFD[14345] = 3.98291296E+00;
  COFD[14346] = -2.18459468E-01;
  COFD[14347] = 6.15957476E-03;
  COFD[14348] = -2.02529779E+01;
  COFD[14349] = 3.98291296E+00;
  COFD[14350] = -2.18459468E-01;
  COFD[14351] = 6.15957476E-03;
  COFD[14352] = -2.02529779E+01;
  COFD[14353] = 3.98291296E+00;
  COFD[14354] = -2.18459468E-01;
  COFD[14355] = 6.15957476E-03;
  COFD[14356] = -2.02529779E+01;
  COFD[14357] = 3.98291296E+00;
  COFD[14358] = -2.18459468E-01;
  COFD[14359] = 6.15957476E-03;
  COFD[14360] = -2.02529779E+01;
  COFD[14361] = 3.98291296E+00;
  COFD[14362] = -2.18459468E-01;
  COFD[14363] = 6.15957476E-03;
  COFD[14364] = -2.02529779E+01;
  COFD[14365] = 3.98291296E+00;
  COFD[14366] = -2.18459468E-01;
  COFD[14367] = 6.15957476E-03;
  COFD[14368] = -2.02529779E+01;
  COFD[14369] = 3.98291296E+00;
  COFD[14370] = -2.18459468E-01;
  COFD[14371] = 6.15957476E-03;
  COFD[14372] = -2.02529779E+01;
  COFD[14373] = 3.98291296E+00;
  COFD[14374] = -2.18459468E-01;
  COFD[14375] = 6.15957476E-03;
  COFD[14376] = -2.02529779E+01;
  COFD[14377] = 3.98291296E+00;
  COFD[14378] = -2.18459468E-01;
  COFD[14379] = 6.15957476E-03;
  COFD[14380] = -2.02529779E+01;
  COFD[14381] = 3.98291296E+00;
  COFD[14382] = -2.18459468E-01;
  COFD[14383] = 6.15957476E-03;
  COFD[14384] = -2.02529779E+01;
  COFD[14385] = 3.98291296E+00;
  COFD[14386] = -2.18459468E-01;
  COFD[14387] = 6.15957476E-03;
  COFD[14388] = -2.00613008E+01;
  COFD[14389] = 3.79091302E+00;
  COFD[14390] = -1.89108491E-01;
  COFD[14391] = 4.71759684E-03;
  COFD[14392] = -2.00613008E+01;
  COFD[14393] = 3.79091302E+00;
  COFD[14394] = -1.89108491E-01;
  COFD[14395] = 4.71759684E-03;
  COFD[14396] = -2.00613008E+01;
  COFD[14397] = 3.79091302E+00;
  COFD[14398] = -1.89108491E-01;
  COFD[14399] = 4.71759684E-03;
  COFD[14400] = -2.00613008E+01;
  COFD[14401] = 3.79091302E+00;
  COFD[14402] = -1.89108491E-01;
  COFD[14403] = 4.71759684E-03;
  COFD[14404] = -2.08691155E+01;
  COFD[14405] = 4.29186648E+00;
  COFD[14406] = -2.65181162E-01;
  COFD[14407] = 8.44308833E-03;
  COFD[14408] = -2.08691155E+01;
  COFD[14409] = 4.29186648E+00;
  COFD[14410] = -2.65181162E-01;
  COFD[14411] = 8.44308833E-03;
  COFD[14412] = -2.00872766E+01;
  COFD[14413] = 3.87686370E+00;
  COFD[14414] = -2.02322128E-01;
  COFD[14415] = 5.36874766E-03;
  COFD[14416] = -2.00872766E+01;
  COFD[14417] = 3.87686370E+00;
  COFD[14418] = -2.02322128E-01;
  COFD[14419] = 5.36874766E-03;
  COFD[14420] = -2.00872766E+01;
  COFD[14421] = 3.87686370E+00;
  COFD[14422] = -2.02322128E-01;
  COFD[14423] = 5.36874766E-03;
  COFD[14424] = -2.00872766E+01;
  COFD[14425] = 3.87686370E+00;
  COFD[14426] = -2.02322128E-01;
  COFD[14427] = 5.36874766E-03;
  COFD[14428] = -2.04092310E+01;
  COFD[14429] = 5.12317458E+00;
  COFD[14430] = -4.43444370E-01;
  COFD[14431] = 1.89579841E-02;
  COFD[14432] = -1.97202643E+01;
  COFD[14433] = 5.42035603E+00;
  COFD[14434] = -4.73505534E-01;
  COFD[14435] = 1.99198699E-02;
  COFD[14436] = -1.63673633E+01;
  COFD[14437] = 4.07800294E+00;
  COFD[14438] = -3.17258198E-01;
  COFD[14439] = 1.38667979E-02;
  COFD[14440] = -1.93502982E+01;
  COFD[14441] = 4.82794365E+00;
  COFD[14442] = -4.08478976E-01;
  COFD[14443] = 1.75752177E-02;
  COFD[14444] = -2.11152381E+01;
  COFD[14445] = 5.28136553E+00;
  COFD[14446] = -4.60892932E-01;
  COFD[14447] = 1.95904904E-02;
  COFD[14448] = -1.93739022E+01;
  COFD[14449] = 4.82794365E+00;
  COFD[14450] = -4.08478976E-01;
  COFD[14451] = 1.75752177E-02;
  COFD[14452] = -1.68393852E+01;
  COFD[14453] = 2.91234675E+00;
  COFD[14454] = -5.86653221E-02;
  COFD[14455] = -1.50006104E-03;
  COFD[14456] = -2.07974150E+01;
  COFD[14457] = 5.17147715E+00;
  COFD[14458] = -4.48042686E-01;
  COFD[14459] = 1.90889629E-02;
  COFD[14460] = -2.04830966E+01;
  COFD[14461] = 4.46102735E+00;
  COFD[14462] = -2.91170400E-01;
  COFD[14463] = 9.72687095E-03;
  COFD[14464] = -2.24903354E+01;
  COFD[14465] = 5.50307951E+00;
  COFD[14466] = -4.63028460E-01;
  COFD[14467] = 1.86232487E-02;
  COFD[14468] = -2.13969981E+01;
  COFD[14469] = 5.41821077E+00;
  COFD[14470] = -4.73430049E-01;
  COFD[14471] = 1.99247102E-02;
  COFD[14472] = -2.16936316E+01;
  COFD[14473] = 5.50680139E+00;
  COFD[14474] = -4.83057036E-01;
  COFD[14475] = 2.02686296E-02;
  COFD[14476] = -2.07770166E+01;
  COFD[14477] = 5.16471086E+00;
  COFD[14478] = -4.47284488E-01;
  COFD[14479] = 1.90609361E-02;
  COFD[14480] = -2.07864314E+01;
  COFD[14481] = 5.16471086E+00;
  COFD[14482] = -4.47284488E-01;
  COFD[14483] = 1.90609361E-02;
  COFD[14484] = -2.04942814E+01;
  COFD[14485] = 4.46102735E+00;
  COFD[14486] = -2.91170400E-01;
  COFD[14487] = 9.72687095E-03;
  COFD[14488] = -1.98074819E+01;
  COFD[14489] = 4.16363821E+00;
  COFD[14490] = -2.50546620E-01;
  COFD[14491] = 7.90900768E-03;
  COFD[14492] = -2.25377697E+01;
  COFD[14493] = 5.54444384E+00;
  COFD[14494] = -4.71310910E-01;
  COFD[14495] = 1.90989323E-02;
  COFD[14496] = -2.23573842E+01;
  COFD[14497] = 5.57398439E+00;
  COFD[14498] = -4.76920046E-01;
  COFD[14499] = 1.94131406E-02;
  COFD[14500] = -2.25266073E+01;
  COFD[14501] = 5.54444384E+00;
  COFD[14502] = -4.71310910E-01;
  COFD[14503] = 1.90989323E-02;
  COFD[14504] = -2.23139080E+01;
  COFD[14505] = 5.50132609E+00;
  COFD[14506] = -4.62482369E-01;
  COFD[14507] = 1.85869791E-02;
  COFD[14508] = -2.23267977E+01;
  COFD[14509] = 5.50132609E+00;
  COFD[14510] = -4.62482369E-01;
  COFD[14511] = 1.85869791E-02;
  COFD[14512] = -2.12664526E+01;
  COFD[14513] = 4.76335355E+00;
  COFD[14514] = -3.38814362E-01;
  COFD[14515] = 1.21204360E-02;
  COFD[14516] = -2.15499433E+01;
  COFD[14517] = 5.45879073E+00;
  COFD[14518] = -4.77760848E-01;
  COFD[14519] = 2.00757542E-02;
  COFD[14520] = -2.12731892E+01;
  COFD[14521] = 4.76335355E+00;
  COFD[14522] = -3.38814362E-01;
  COFD[14523] = 1.21204360E-02;
  COFD[14524] = -2.12731892E+01;
  COFD[14525] = 4.76335355E+00;
  COFD[14526] = -3.38814362E-01;
  COFD[14527] = 1.21204360E-02;
  COFD[14528] = -2.12797032E+01;
  COFD[14529] = 4.76335355E+00;
  COFD[14530] = -3.38814362E-01;
  COFD[14531] = 1.21204360E-02;
  COFD[14532] = -2.22910823E+01;
  COFD[14533] = 5.29692971E+00;
  COFD[14534] = -4.25616224E-01;
  COFD[14535] = 1.65776192E-02;
  COFD[14536] = -2.23917155E+01;
  COFD[14537] = 5.36950965E+00;
  COFD[14538] = -4.37964117E-01;
  COFD[14539] = 1.72292927E-02;
  COFD[14540] = -2.22591535E+01;
  COFD[14541] = 5.17072863E+00;
  COFD[14542] = -4.04063085E-01;
  COFD[14543] = 1.54384967E-02;
  COFD[14544] = -2.25683318E+01;
  COFD[14545] = 5.38726551E+00;
  COFD[14546] = -4.41046938E-01;
  COFD[14547] = 1.73939950E-02;
  COFD[14548] = -2.22648935E+01;
  COFD[14549] = 5.17972529E+00;
  COFD[14550] = -4.05560157E-01;
  COFD[14551] = 1.55165032E-02;
  COFD[14552] = -2.22694444E+01;
  COFD[14553] = 5.17972529E+00;
  COFD[14554] = -4.05560157E-01;
  COFD[14555] = 1.55165032E-02;
  COFD[14556] = -2.24182492E+01;
  COFD[14557] = 5.19403876E+00;
  COFD[14558] = -4.07926421E-01;
  COFD[14559] = 1.56393496E-02;
  COFD[14560] = -2.15420303E+01;
  COFD[14561] = 4.76549381E+00;
  COFD[14562] = -3.39158641E-01;
  COFD[14563] = 1.21379400E-02;
  COFD[14564] = -1.97896836E+01;
  COFD[14565] = 3.95090789E+00;
  COFD[14566] = -2.17072293E-01;
  COFD[14567] = 6.23827684E-03;
  COFD[14568] = -2.16340062E+01;
  COFD[14569] = 4.81851414E+00;
  COFD[14570] = -3.47605356E-01;
  COFD[14571] = 1.25656072E-02;
  COFD[14572] = -2.21072261E+01;
  COFD[14573] = 4.97465065E+00;
  COFD[14574] = -3.72233321E-01;
  COFD[14575] = 1.38060190E-02;
  COFD[14576] = -2.20910006E+01;
  COFD[14577] = 4.97640888E+00;
  COFD[14578] = -3.73754329E-01;
  COFD[14579] = 1.39236464E-02;
  COFD[14580] = -2.10685859E+01;
  COFD[14581] = 4.59824100E+00;
  COFD[14582] = -3.12596804E-01;
  COFD[14583] = 1.07963780E-02;
  COFD[14584] = -2.08027775E+01;
  COFD[14585] = 4.54504742E+00;
  COFD[14586] = -3.04239742E-01;
  COFD[14587] = 1.03778143E-02;
  COFD[14588] = -2.08085153E+01;
  COFD[14589] = 4.54504742E+00;
  COFD[14590] = -3.04239742E-01;
  COFD[14591] = 1.03778143E-02;
  COFD[14592] = -2.13087041E+01;
  COFD[14593] = 4.72954849E+00;
  COFD[14594] = -3.33427661E-01;
  COFD[14595] = 1.18479385E-02;
  COFD[14596] = -1.99284180E+01;
  COFD[14597] = 3.99588401E+00;
  COFD[14598] = -2.24113841E-01;
  COFD[14599] = 6.58863359E-03;
  COFD[14600] = -2.17761257E+01;
  COFD[14601] = 4.89224544E+00;
  COFD[14602] = -3.59243504E-01;
  COFD[14603] = 1.31519081E-02;
  COFD[14604] = -2.10949905E+01;
  COFD[14605] = 4.47098552E+00;
  COFD[14606] = -2.92719775E-01;
  COFD[14607] = 9.80400762E-03;
  COFD[14608] = -2.11954748E+01;
  COFD[14609] = 4.47098552E+00;
  COFD[14610] = -2.92719775E-01;
  COFD[14611] = 9.80400762E-03;
  COFD[14612] = -2.11416667E+01;
  COFD[14613] = 4.47098552E+00;
  COFD[14614] = -2.92719775E-01;
  COFD[14615] = 9.80400762E-03;
  COFD[14616] = -2.11416667E+01;
  COFD[14617] = 4.47098552E+00;
  COFD[14618] = -2.92719775E-01;
  COFD[14619] = 9.80400762E-03;
  COFD[14620] = -2.23470305E+01;
  COFD[14621] = 5.33531542E+00;
  COFD[14622] = -4.32108265E-01;
  COFD[14623] = 1.69190896E-02;
  COFD[14624] = -2.22836125E+01;
  COFD[14625] = 5.29692971E+00;
  COFD[14626] = -4.25616224E-01;
  COFD[14627] = 1.65776192E-02;
  COFD[14628] = -2.24921773E+01;
  COFD[14629] = 5.58306898E+00;
  COFD[14630] = -4.83300955E-01;
  COFD[14631] = 1.98966944E-02;
  COFD[14632] = -2.13694391E+01;
  COFD[14633] = 5.41821077E+00;
  COFD[14634] = -4.73430049E-01;
  COFD[14635] = 1.99247102E-02;
  COFD[14636] = -2.03636446E+01;
  COFD[14637] = 4.07020791E+00;
  COFD[14638] = -2.35851668E-01;
  COFD[14639] = 7.16637616E-03;
  COFD[14640] = -1.98786260E+01;
  COFD[14641] = 3.94358510E+00;
  COFD[14642] = -2.16738716E-01;
  COFD[14643] = 6.24040431E-03;
  COFD[14644] = -1.98755348E+01;
  COFD[14645] = 3.94358510E+00;
  COFD[14646] = -2.16738716E-01;
  COFD[14647] = 6.24040431E-03;
  COFD[14648] = -1.98562352E+01;
  COFD[14649] = 3.88862457E+00;
  COFD[14650] = -2.07792337E-01;
  COFD[14651] = 5.78895587E-03;
  COFD[14652] = -2.12321131E+01;
  COFD[14653] = 4.50668822E+00;
  COFD[14654] = -2.98272861E-01;
  COFD[14655] = 1.00805802E-02;
  COFD[14656] = -2.03284012E+01;
  COFD[14657] = 4.07020791E+00;
  COFD[14658] = -2.35851668E-01;
  COFD[14659] = 7.16637616E-03;
  COFD[14660] = -2.03260723E+01;
  COFD[14661] = 4.07020791E+00;
  COFD[14662] = -2.35851668E-01;
  COFD[14663] = 7.16637616E-03;
  COFD[14664] = -2.17021160E+01;
  COFD[14665] = 4.64740770E+00;
  COFD[14666] = -3.20446431E-01;
  COFD[14667] = 1.11941302E-02;
  COFD[14668] = -2.17002965E+01;
  COFD[14669] = 4.64740770E+00;
  COFD[14670] = -3.20446431E-01;
  COFD[14671] = 1.11941302E-02;
  COFD[14672] = -2.17002965E+01;
  COFD[14673] = 4.64740770E+00;
  COFD[14674] = -3.20446431E-01;
  COFD[14675] = 1.11941302E-02;
  COFD[14676] = -2.17002965E+01;
  COFD[14677] = 4.64740770E+00;
  COFD[14678] = -3.20446431E-01;
  COFD[14679] = 1.11941302E-02;
  COFD[14680] = -2.17002965E+01;
  COFD[14681] = 4.64740770E+00;
  COFD[14682] = -3.20446431E-01;
  COFD[14683] = 1.11941302E-02;
  COFD[14684] = -2.16300470E+01;
  COFD[14685] = 4.62790162E+00;
  COFD[14686] = -3.18096355E-01;
  COFD[14687] = 1.11001765E-02;
  COFD[14688] = -2.16300470E+01;
  COFD[14689] = 4.62790162E+00;
  COFD[14690] = -3.18096355E-01;
  COFD[14691] = 1.11001765E-02;
  COFD[14692] = -2.02219152E+01;
  COFD[14693] = 3.91540504E+00;
  COFD[14694] = -2.10676561E-01;
  COFD[14695] = 5.87107784E-03;
  COFD[14696] = -2.02219152E+01;
  COFD[14697] = 3.91540504E+00;
  COFD[14698] = -2.10676561E-01;
  COFD[14699] = 5.87107784E-03;
  COFD[14700] = -2.02219152E+01;
  COFD[14701] = 3.91540504E+00;
  COFD[14702] = -2.10676561E-01;
  COFD[14703] = 5.87107784E-03;
  COFD[14704] = -2.02219152E+01;
  COFD[14705] = 3.91540504E+00;
  COFD[14706] = -2.10676561E-01;
  COFD[14707] = 5.87107784E-03;
  COFD[14708] = -2.02219152E+01;
  COFD[14709] = 3.91540504E+00;
  COFD[14710] = -2.10676561E-01;
  COFD[14711] = 5.87107784E-03;
  COFD[14712] = -2.02219152E+01;
  COFD[14713] = 3.91540504E+00;
  COFD[14714] = -2.10676561E-01;
  COFD[14715] = 5.87107784E-03;
  COFD[14716] = -2.02219152E+01;
  COFD[14717] = 3.91540504E+00;
  COFD[14718] = -2.10676561E-01;
  COFD[14719] = 5.87107784E-03;
  COFD[14720] = -2.02219152E+01;
  COFD[14721] = 3.91540504E+00;
  COFD[14722] = -2.10676561E-01;
  COFD[14723] = 5.87107784E-03;
  COFD[14724] = -2.02219152E+01;
  COFD[14725] = 3.91540504E+00;
  COFD[14726] = -2.10676561E-01;
  COFD[14727] = 5.87107784E-03;
  COFD[14728] = -2.02219152E+01;
  COFD[14729] = 3.91540504E+00;
  COFD[14730] = -2.10676561E-01;
  COFD[14731] = 5.87107784E-03;
  COFD[14732] = -2.02219152E+01;
  COFD[14733] = 3.91540504E+00;
  COFD[14734] = -2.10676561E-01;
  COFD[14735] = 5.87107784E-03;
  COFD[14736] = -2.02219152E+01;
  COFD[14737] = 3.91540504E+00;
  COFD[14738] = -2.10676561E-01;
  COFD[14739] = 5.87107784E-03;
  COFD[14740] = -2.00375725E+01;
  COFD[14741] = 3.73374047E+00;
  COFD[14742] = -1.82912207E-01;
  COFD[14743] = 4.50345327E-03;
  COFD[14744] = -2.00375725E+01;
  COFD[14745] = 3.73374047E+00;
  COFD[14746] = -1.82912207E-01;
  COFD[14747] = 4.50345327E-03;
  COFD[14748] = -2.00375725E+01;
  COFD[14749] = 3.73374047E+00;
  COFD[14750] = -1.82912207E-01;
  COFD[14751] = 4.50345327E-03;
  COFD[14752] = -2.00375725E+01;
  COFD[14753] = 3.73374047E+00;
  COFD[14754] = -1.82912207E-01;
  COFD[14755] = 4.50345327E-03;
  COFD[14756] = -2.12204610E+01;
  COFD[14757] = 4.38593520E+00;
  COFD[14758] = -2.79601469E-01;
  COFD[14759] = 9.15410829E-03;
  COFD[14760] = -2.12204610E+01;
  COFD[14761] = 4.38593520E+00;
  COFD[14762] = -2.79601469E-01;
  COFD[14763] = 9.15410829E-03;
  COFD[14764] = -1.99417326E+01;
  COFD[14765] = 3.76108685E+00;
  COFD[14766] = -1.87735573E-01;
  COFD[14767] = 4.76470694E-03;
  COFD[14768] = -1.99417326E+01;
  COFD[14769] = 3.76108685E+00;
  COFD[14770] = -1.87735573E-01;
  COFD[14771] = 4.76470694E-03;
  COFD[14772] = -1.99417326E+01;
  COFD[14773] = 3.76108685E+00;
  COFD[14774] = -1.87735573E-01;
  COFD[14775] = 4.76470694E-03;
  COFD[14776] = -1.99417326E+01;
  COFD[14777] = 3.76108685E+00;
  COFD[14778] = -1.87735573E-01;
  COFD[14779] = 4.76470694E-03;
  COFD[14780] = -2.07526086E+01;
  COFD[14781] = 5.15962926E+00;
  COFD[14782] = -4.46790366E-01;
  COFD[14783] = 1.90462843E-02;
  COFD[14784] = -1.96115390E+01;
  COFD[14785] = 5.40502814E+00;
  COFD[14786] = -4.72746583E-01;
  COFD[14787] = 1.99363615E-02;
  COFD[14788] = -1.56932959E+01;
  COFD[14789] = 3.84112355E+00;
  COFD[14790] = -2.86739743E-01;
  COFD[14791] = 1.25496520E-02;
  COFD[14792] = -1.91805320E+01;
  COFD[14793] = 4.78152337E+00;
  COFD[14794] = -4.03052726E-01;
  COFD[14795] = 1.73639773E-02;
  COFD[14796] = -2.06513233E+01;
  COFD[14797] = 5.14159226E+00;
  COFD[14798] = -4.45395793E-01;
  COFD[14799] = 1.90248052E-02;
  COFD[14800] = -1.92042311E+01;
  COFD[14801] = 4.78152337E+00;
  COFD[14802] = -4.03052726E-01;
  COFD[14803] = 1.73639773E-02;
  COFD[14804] = -1.94509960E+01;
  COFD[14805] = 4.17438087E+00;
  COFD[14806] = -2.47331309E-01;
  COFD[14807] = 7.56793055E-03;
  COFD[14808] = -2.03524955E+01;
  COFD[14809] = 5.04005588E+00;
  COFD[14810] = -4.33725091E-01;
  COFD[14811] = 1.85786663E-02;
  COFD[14812] = -2.06640437E+01;
  COFD[14813] = 4.56779427E+00;
  COFD[14814] = -3.07785839E-01;
  COFD[14815] = 1.05545767E-02;
  COFD[14816] = -2.25320678E+01;
  COFD[14817] = 5.58240011E+00;
  COFD[14818] = -4.78844918E-01;
  COFD[14819] = 1.95298191E-02;
  COFD[14820] = -2.12960885E+01;
  COFD[14821] = 5.40206122E+00;
  COFD[14822] = -4.72555229E-01;
  COFD[14823] = 1.99358199E-02;
  COFD[14824] = -2.12758585E+01;
  COFD[14825] = 5.39400772E+00;
  COFD[14826] = -4.72026046E-01;
  COFD[14827] = 1.99336599E-02;
  COFD[14828] = -2.06612046E+01;
  COFD[14829] = 5.14159226E+00;
  COFD[14830] = -4.45395793E-01;
  COFD[14831] = 1.90248052E-02;
  COFD[14832] = -2.06706819E+01;
  COFD[14833] = 5.14159226E+00;
  COFD[14834] = -4.45395793E-01;
  COFD[14835] = 1.90248052E-02;
  COFD[14836] = -2.06752970E+01;
  COFD[14837] = 4.56779427E+00;
  COFD[14838] = -3.07785839E-01;
  COFD[14839] = 1.05545767E-02;
  COFD[14840] = -2.14535680E+01;
  COFD[14841] = 4.95733546E+00;
  COFD[14842] = -3.69505821E-01;
  COFD[14843] = 1.36687047E-02;
  COFD[14844] = -2.25487717E+01;
  COFD[14845] = 5.57713269E+00;
  COFD[14846] = -4.77555529E-01;
  COFD[14847] = 1.94497781E-02;
  COFD[14848] = -2.23144023E+01;
  COFD[14849] = 5.58484440E+00;
  COFD[14850] = -4.80068319E-01;
  COFD[14851] = 1.96187346E-02;
  COFD[14852] = -2.25375408E+01;
  COFD[14853] = 5.57713269E+00;
  COFD[14854] = -4.77555529E-01;
  COFD[14855] = 1.94497781E-02;
  COFD[14856] = -2.22964837E+01;
  COFD[14857] = 5.52353335E+00;
  COFD[14858] = -4.67314589E-01;
  COFD[14859] = 1.88744228E-02;
  COFD[14860] = -2.23094470E+01;
  COFD[14861] = 5.52353335E+00;
  COFD[14862] = -4.67314589E-01;
  COFD[14863] = 1.88744228E-02;
  COFD[14864] = -2.14121942E+01;
  COFD[14865] = 4.85433278E+00;
  COFD[14866] = -3.53258974E-01;
  COFD[14867] = 1.28503760E-02;
  COFD[14868] = -2.13858351E+01;
  COFD[14869] = 5.41773320E+00;
  COFD[14870] = -4.73414274E-01;
  COFD[14871] = 1.99258733E-02;
  COFD[14872] = -2.14189826E+01;
  COFD[14873] = 4.85433278E+00;
  COFD[14874] = -3.53258974E-01;
  COFD[14875] = 1.28503760E-02;
  COFD[14876] = -2.14189826E+01;
  COFD[14877] = 4.85433278E+00;
  COFD[14878] = -3.53258974E-01;
  COFD[14879] = 1.28503760E-02;
  COFD[14880] = -2.14255473E+01;
  COFD[14881] = 4.85433278E+00;
  COFD[14882] = -3.53258974E-01;
  COFD[14883] = 1.28503760E-02;
  COFD[14884] = -2.23595988E+01;
  COFD[14885] = 5.35454862E+00;
  COFD[14886] = -4.35406212E-01;
  COFD[14887] = 1.70939045E-02;
  COFD[14888] = -2.24242060E+01;
  COFD[14889] = 5.41204570E+00;
  COFD[14890] = -4.45647651E-01;
  COFD[14891] = 1.76482725E-02;
  COFD[14892] = -2.23368701E+01;
  COFD[14893] = 5.23162732E+00;
  COFD[14894] = -4.14322433E-01;
  COFD[14895] = 1.59763256E-02;
  COFD[14896] = -2.25933772E+01;
  COFD[14897] = 5.42562555E+00;
  COFD[14898] = -4.48132861E-01;
  COFD[14899] = 1.77847329E-02;
  COFD[14900] = -2.23366684E+01;
  COFD[14901] = 5.23809740E+00;
  COFD[14902] = -4.15455052E-01;
  COFD[14903] = 1.60369690E-02;
  COFD[14904] = -2.23412597E+01;
  COFD[14905] = 5.23809740E+00;
  COFD[14906] = -4.15455052E-01;
  COFD[14907] = 1.60369690E-02;
  COFD[14908] = -2.24804061E+01;
  COFD[14909] = 5.24742561E+00;
  COFD[14910] = -4.17101230E-01;
  COFD[14911] = 1.61254505E-02;
  COFD[14912] = -2.16924481E+01;
  COFD[14913] = 4.85697191E+00;
  COFD[14914] = -3.53675246E-01;
  COFD[14915] = 1.28713424E-02;
  COFD[14916] = -2.16585352E+01;
  COFD[14917] = 4.85855728E+00;
  COFD[14918] = -3.53925308E-01;
  COFD[14919] = 1.28839376E-02;
  COFD[14920] = -2.17956834E+01;
  COFD[14921] = 4.91479685E+00;
  COFD[14922] = -3.62802576E-01;
  COFD[14923] = 1.33312167E-02;
  COFD[14924] = -2.22494020E+01;
  COFD[14925] = 5.06188845E+00;
  COFD[14926] = -3.86186850E-01;
  COFD[14927] = 1.45150393E-02;
  COFD[14928] = -2.23519181E+01;
  COFD[14929] = 5.11289208E+00;
  COFD[14930] = -3.94460699E-01;
  COFD[14931] = 1.49393336E-02;
  COFD[14932] = -2.12181081E+01;
  COFD[14933] = 4.69045288E+00;
  COFD[14934] = -3.27236567E-01;
  COFD[14935] = 1.15357180E-02;
  COFD[14936] = -2.09501952E+01;
  COFD[14937] = 4.63716925E+00;
  COFD[14938] = -3.18815070E-01;
  COFD[14939] = 1.11115446E-02;
  COFD[14940] = -2.09559798E+01;
  COFD[14941] = 4.63716925E+00;
  COFD[14942] = -3.18815070E-01;
  COFD[14943] = 1.11115446E-02;
  COFD[14944] = -2.14480118E+01;
  COFD[14945] = 4.81738448E+00;
  COFD[14946] = -3.47427913E-01;
  COFD[14947] = 1.25566946E-02;
  COFD[14948] = -2.17761257E+01;
  COFD[14949] = 4.89224544E+00;
  COFD[14950] = -3.59243504E-01;
  COFD[14951] = 1.31519081E-02;
  COFD[14952] = -2.19461414E+01;
  COFD[14953] = 4.99238651E+00;
  COFD[14954] = -3.75026436E-01;
  COFD[14955] = 1.39466941E-02;
  COFD[14956] = -2.12814273E+01;
  COFD[14957] = 4.57705804E+00;
  COFD[14958] = -3.09238318E-01;
  COFD[14959] = 1.06272290E-02;
  COFD[14960] = -2.13830228E+01;
  COFD[14961] = 4.57705804E+00;
  COFD[14962] = -3.09238318E-01;
  COFD[14963] = 1.06272290E-02;
  COFD[14964] = -2.13285916E+01;
  COFD[14965] = 4.57705804E+00;
  COFD[14966] = -3.09238318E-01;
  COFD[14967] = 1.06272290E-02;
  COFD[14968] = -2.13285916E+01;
  COFD[14969] = 4.57705804E+00;
  COFD[14970] = -3.09238318E-01;
  COFD[14971] = 1.06272290E-02;
  COFD[14972] = -2.24063484E+01;
  COFD[14973] = 5.38918452E+00;
  COFD[14974] = -4.41385864E-01;
  COFD[14975] = 1.74122637E-02;
  COFD[14976] = -2.23520739E+01;
  COFD[14977] = 5.35454862E+00;
  COFD[14978] = -4.35406212E-01;
  COFD[14979] = 1.70939045E-02;
  COFD[14980] = -2.24605749E+01;
  COFD[14981] = 5.59786454E+00;
  COFD[14982] = -4.87064086E-01;
  COFD[14983] = 2.01342566E-02;
  COFD[14984] = -2.12684290E+01;
  COFD[14985] = 5.40206122E+00;
  COFD[14986] = -4.72555229E-01;
  COFD[14987] = 1.99358199E-02;
  COFD[14988] = -2.16351535E+01;
  COFD[14989] = 4.66447310E+00;
  COFD[14990] = -3.23134701E-01;
  COFD[14991] = 1.13292514E-02;
  COFD[14992] = -2.15198527E+01;
  COFD[14993] = 4.72097844E+00;
  COFD[14994] = -3.32068658E-01;
  COFD[14995] = 1.17793428E-02;
  COFD[14996] = -2.15167306E+01;
  COFD[14997] = 4.72097844E+00;
  COFD[14998] = -3.32068658E-01;
  COFD[14999] = 1.17793428E-02;
  COFD[15000] = -2.16840251E+01;
  COFD[15001] = 4.76700413E+00;
  COFD[15002] = -3.39401317E-01;
  COFD[15003] = 1.21502740E-02;
  COFD[15004] = -2.14030999E+01;
  COFD[15005] = 4.60581491E+00;
  COFD[15006] = -3.13809775E-01;
  COFD[15007] = 1.08578896E-02;
  COFD[15008] = -2.15995151E+01;
  COFD[15009] = 4.66447310E+00;
  COFD[15010] = -3.23134701E-01;
  COFD[15011] = 1.13292514E-02;
  COFD[15012] = -2.15971611E+01;
  COFD[15013] = 4.66447310E+00;
  COFD[15014] = -3.23134701E-01;
  COFD[15015] = 1.13292514E-02;
  COFD[15016] = -2.18655480E+01;
  COFD[15017] = 4.74264746E+00;
  COFD[15018] = -3.35507171E-01;
  COFD[15019] = 1.19529371E-02;
  COFD[15020] = -2.18637077E+01;
  COFD[15021] = 4.74264746E+00;
  COFD[15022] = -3.35507171E-01;
  COFD[15023] = 1.19529371E-02;
  COFD[15024] = -2.18637077E+01;
  COFD[15025] = 4.74264746E+00;
  COFD[15026] = -3.35507171E-01;
  COFD[15027] = 1.19529371E-02;
  COFD[15028] = -2.18637077E+01;
  COFD[15029] = 4.74264746E+00;
  COFD[15030] = -3.35507171E-01;
  COFD[15031] = 1.19529371E-02;
  COFD[15032] = -2.18637077E+01;
  COFD[15033] = 4.74264746E+00;
  COFD[15034] = -3.35507171E-01;
  COFD[15035] = 1.19529371E-02;
  COFD[15036] = -2.18641613E+01;
  COFD[15037] = 4.75144299E+00;
  COFD[15038] = -3.36899352E-01;
  COFD[15039] = 1.20231187E-02;
  COFD[15040] = -2.18641613E+01;
  COFD[15041] = 4.75144299E+00;
  COFD[15042] = -3.36899352E-01;
  COFD[15043] = 1.20231187E-02;
  COFD[15044] = -2.09376776E+01;
  COFD[15045] = 4.24310133E+00;
  COFD[15046] = -2.57732017E-01;
  COFD[15047] = 8.07685243E-03;
  COFD[15048] = -2.09376776E+01;
  COFD[15049] = 4.24310133E+00;
  COFD[15050] = -2.57732017E-01;
  COFD[15051] = 8.07685243E-03;
  COFD[15052] = -2.09376776E+01;
  COFD[15053] = 4.24310133E+00;
  COFD[15054] = -2.57732017E-01;
  COFD[15055] = 8.07685243E-03;
  COFD[15056] = -2.09376776E+01;
  COFD[15057] = 4.24310133E+00;
  COFD[15058] = -2.57732017E-01;
  COFD[15059] = 8.07685243E-03;
  COFD[15060] = -2.09376776E+01;
  COFD[15061] = 4.24310133E+00;
  COFD[15062] = -2.57732017E-01;
  COFD[15063] = 8.07685243E-03;
  COFD[15064] = -2.09376776E+01;
  COFD[15065] = 4.24310133E+00;
  COFD[15066] = -2.57732017E-01;
  COFD[15067] = 8.07685243E-03;
  COFD[15068] = -2.09376776E+01;
  COFD[15069] = 4.24310133E+00;
  COFD[15070] = -2.57732017E-01;
  COFD[15071] = 8.07685243E-03;
  COFD[15072] = -2.09376776E+01;
  COFD[15073] = 4.24310133E+00;
  COFD[15074] = -2.57732017E-01;
  COFD[15075] = 8.07685243E-03;
  COFD[15076] = -2.09376776E+01;
  COFD[15077] = 4.24310133E+00;
  COFD[15078] = -2.57732017E-01;
  COFD[15079] = 8.07685243E-03;
  COFD[15080] = -2.09376776E+01;
  COFD[15081] = 4.24310133E+00;
  COFD[15082] = -2.57732017E-01;
  COFD[15083] = 8.07685243E-03;
  COFD[15084] = -2.09376776E+01;
  COFD[15085] = 4.24310133E+00;
  COFD[15086] = -2.57732017E-01;
  COFD[15087] = 8.07685243E-03;
  COFD[15088] = -2.09376776E+01;
  COFD[15089] = 4.24310133E+00;
  COFD[15090] = -2.57732017E-01;
  COFD[15091] = 8.07685243E-03;
  COFD[15092] = -2.06377876E+01;
  COFD[15093] = 4.00877776E+00;
  COFD[15094] = -2.22342929E-01;
  COFD[15095] = 6.34836163E-03;
  COFD[15096] = -2.06377876E+01;
  COFD[15097] = 4.00877776E+00;
  COFD[15098] = -2.22342929E-01;
  COFD[15099] = 6.34836163E-03;
  COFD[15100] = -2.06377876E+01;
  COFD[15101] = 4.00877776E+00;
  COFD[15102] = -2.22342929E-01;
  COFD[15103] = 6.34836163E-03;
  COFD[15104] = -2.06377876E+01;
  COFD[15105] = 4.00877776E+00;
  COFD[15106] = -2.22342929E-01;
  COFD[15107] = 6.34836163E-03;
  COFD[15108] = -2.14307380E+01;
  COFD[15109] = 4.50055117E+00;
  COFD[15110] = -2.97317591E-01;
  COFD[15111] = 1.00329730E-02;
  COFD[15112] = -2.14307380E+01;
  COFD[15113] = 4.50055117E+00;
  COFD[15114] = -2.97317591E-01;
  COFD[15115] = 1.00329730E-02;
  COFD[15116] = -2.07382952E+01;
  COFD[15117] = 4.12323414E+00;
  COFD[15118] = -2.39594601E-01;
  COFD[15119] = 7.18979047E-03;
  COFD[15120] = -2.07382952E+01;
  COFD[15121] = 4.12323414E+00;
  COFD[15122] = -2.39594601E-01;
  COFD[15123] = 7.18979047E-03;
  COFD[15124] = -2.07382952E+01;
  COFD[15125] = 4.12323414E+00;
  COFD[15126] = -2.39594601E-01;
  COFD[15127] = 7.18979047E-03;
  COFD[15128] = -2.07382952E+01;
  COFD[15129] = 4.12323414E+00;
  COFD[15130] = -2.39594601E-01;
  COFD[15131] = 7.18979047E-03;
  COFD[15132] = -2.03249633E+01;
  COFD[15133] = 5.03292431E+00;
  COFD[15134] = -4.32887308E-01;
  COFD[15135] = 1.85458102E-02;
  COFD[15136] = -2.02578925E+01;
  COFD[15137] = 5.56701235E+00;
  COFD[15138] = -4.88925090E-01;
  COFD[15139] = 2.04461948E-02;
  COFD[15140] = -1.65021085E+01;
  COFD[15141] = 4.10792536E+00;
  COFD[15142] = -3.21060656E-01;
  COFD[15143] = 1.40287900E-02;
  COFD[15144] = -1.99880977E+01;
  COFD[15145] = 5.02095434E+00;
  COFD[15146] = -4.31496874E-01;
  COFD[15147] = 1.84920392E-02;
  COFD[15148] = -2.14092253E+01;
  COFD[15149] = 5.35040988E+00;
  COFD[15150] = -4.68827063E-01;
  COFD[15151] = 1.98944407E-02;
  COFD[15152] = -2.00128937E+01;
  COFD[15153] = 5.02095434E+00;
  COFD[15154] = -4.31496874E-01;
  COFD[15155] = 1.84920392E-02;
  COFD[15156] = -1.83730994E+01;
  COFD[15157] = 3.59019527E+00;
  COFD[15158] = -1.58702132E-01;
  COFD[15159] = 3.23316765E-03;
  COFD[15160] = -2.10630467E+01;
  COFD[15161] = 5.23339224E+00;
  COFD[15162] = -4.55230780E-01;
  COFD[15163] = 1.93672146E-02;
  COFD[15164] = -1.96429896E+01;
  COFD[15165] = 4.00653795E+00;
  COFD[15166] = -2.22005804E-01;
  COFD[15167] = 6.33194910E-03;
  COFD[15168] = -2.25435817E+01;
  COFD[15169] = 5.45615714E+00;
  COFD[15170] = -4.53643844E-01;
  COFD[15171] = 1.80854821E-02;
  COFD[15172] = -2.19369086E+01;
  COFD[15173] = 5.56282156E+00;
  COFD[15174] = -4.88585679E-01;
  COFD[15175] = 2.04395879E-02;
  COFD[15176] = -2.19054913E+01;
  COFD[15177] = 5.54986547E+00;
  COFD[15178] = -4.87420926E-01;
  COFD[15179] = 2.04095097E-02;
  COFD[15180] = -2.14198684E+01;
  COFD[15181] = 5.35040988E+00;
  COFD[15182] = -4.68827063E-01;
  COFD[15183] = 1.98944407E-02;
  COFD[15184] = -2.14300919E+01;
  COFD[15185] = 5.35040988E+00;
  COFD[15186] = -4.68827063E-01;
  COFD[15187] = 1.98944407E-02;
  COFD[15188] = -1.96550543E+01;
  COFD[15189] = 4.00653795E+00;
  COFD[15190] = -2.22005804E-01;
  COFD[15191] = 6.33194910E-03;
  COFD[15192] = -2.07826724E+01;
  COFD[15193] = 4.54213239E+00;
  COFD[15194] = -3.03786739E-01;
  COFD[15195] = 1.03552672E-02;
  COFD[15196] = -2.25243350E+01;
  COFD[15197] = 5.44166443E+00;
  COFD[15198] = -4.51021243E-01;
  COFD[15199] = 1.79421190E-02;
  COFD[15200] = -2.23640982E+01;
  COFD[15201] = 5.47922490E+00;
  COFD[15202] = -4.57847893E-01;
  COFD[15203] = 1.83161707E-02;
  COFD[15204] = -2.25122934E+01;
  COFD[15205] = 5.44166443E+00;
  COFD[15206] = -4.51021243E-01;
  COFD[15207] = 1.79421190E-02;
  COFD[15208] = -2.22430829E+01;
  COFD[15209] = 5.37360713E+00;
  COFD[15210] = -4.38661889E-01;
  COFD[15211] = 1.72661628E-02;
  COFD[15212] = -2.22569121E+01;
  COFD[15213] = 5.37360713E+00;
  COFD[15214] = -4.38661889E-01;
  COFD[15215] = 1.72661628E-02;
  COFD[15216] = -2.07167473E+01;
  COFD[15217] = 4.42680848E+00;
  COFD[15218] = -2.85885288E-01;
  COFD[15219] = 9.46483934E-03;
  COFD[15220] = -2.20923265E+01;
  COFD[15221] = 5.58979675E+00;
  COFD[15222] = -4.90962731E-01;
  COFD[15223] = 2.04987927E-02;
  COFD[15224] = -2.07241602E+01;
  COFD[15225] = 4.42680848E+00;
  COFD[15226] = -2.85885288E-01;
  COFD[15227] = 9.46483934E-03;
  COFD[15228] = -2.07241602E+01;
  COFD[15229] = 4.42680848E+00;
  COFD[15230] = -2.85885288E-01;
  COFD[15231] = 9.46483934E-03;
  COFD[15232] = -2.07313378E+01;
  COFD[15233] = 4.42680848E+00;
  COFD[15234] = -2.85885288E-01;
  COFD[15235] = 9.46483934E-03;
  COFD[15236] = -2.20309308E+01;
  COFD[15237] = 5.08417640E+00;
  COFD[15238] = -3.89810534E-01;
  COFD[15239] = 1.47010214E-02;
  COFD[15240] = -2.21748779E+01;
  COFD[15241] = 5.17488844E+00;
  COFD[15242] = -4.04758505E-01;
  COFD[15243] = 1.54748177E-02;
  COFD[15244] = -2.18262770E+01;
  COFD[15245] = 4.88180276E+00;
  COFD[15246] = -3.57591995E-01;
  COFD[15247] = 1.30686372E-02;
  COFD[15248] = -2.23631758E+01;
  COFD[15249] = 5.19900179E+00;
  COFD[15250] = -4.08748226E-01;
  COFD[15251] = 1.56820407E-02;
  COFD[15252] = -2.18411213E+01;
  COFD[15253] = 4.89420156E+00;
  COFD[15254] = -3.59552981E-01;
  COFD[15255] = 1.31675149E-02;
  COFD[15256] = -2.18462078E+01;
  COFD[15257] = 4.89420156E+00;
  COFD[15258] = -3.59552981E-01;
  COFD[15259] = 1.31675149E-02;
  COFD[15260] = -2.20051847E+01;
  COFD[15261] = 4.91371677E+00;
  COFD[15262] = -3.62632206E-01;
  COFD[15263] = 1.33226347E-02;
  COFD[15264] = -2.09989881E+01;
  COFD[15265] = 4.43003196E+00;
  COFD[15266] = -2.86381684E-01;
  COFD[15267] = 9.48940749E-03;
  COFD[15268] = -2.09679598E+01;
  COFD[15269] = 4.43196605E+00;
  COFD[15270] = -2.86679561E-01;
  COFD[15271] = 9.50415164E-03;
  COFD[15272] = -2.11220157E+01;
  COFD[15273] = 4.49601080E+00;
  COFD[15274] = -2.96611137E-01;
  COFD[15275] = 9.99777546E-03;
  COFD[15276] = -2.15941797E+01;
  COFD[15277] = 4.65048212E+00;
  COFD[15278] = -3.20931552E-01;
  COFD[15279] = 1.12185393E-02;
  COFD[15280] = -2.17220256E+01;
  COFD[15281] = 4.71207875E+00;
  COFD[15282] = -3.30658500E-01;
  COFD[15283] = 1.17082011E-02;
  COFD[15284] = -2.03733944E+01;
  COFD[15285] = 4.20149142E+00;
  COFD[15286] = -2.51432163E-01;
  COFD[15287] = 7.76854246E-03;
  COFD[15288] = -2.00520806E+01;
  COFD[15289] = 4.12245214E+00;
  COFD[15290] = -2.39476227E-01;
  COFD[15291] = 7.18400558E-03;
  COFD[15292] = -2.00584349E+01;
  COFD[15293] = 4.12245214E+00;
  COFD[15294] = -2.39476227E-01;
  COFD[15295] = 7.18400558E-03;
  COFD[15296] = -2.07343997E+01;
  COFD[15297] = 4.37963462E+00;
  COFD[15298] = -2.78632270E-01;
  COFD[15299] = 9.10619715E-03;
  COFD[15300] = -2.10949905E+01;
  COFD[15301] = 4.47098552E+00;
  COFD[15302] = -2.92719775E-01;
  COFD[15303] = 9.80400762E-03;
  COFD[15304] = -2.12814273E+01;
  COFD[15305] = 4.57705804E+00;
  COFD[15306] = -3.09238318E-01;
  COFD[15307] = 1.06272290E-02;
  COFD[15308] = -2.02808477E+01;
  COFD[15309] = 4.02033531E+00;
  COFD[15310] = -2.24082500E-01;
  COFD[15311] = 6.43305206E-03;
  COFD[15312] = -2.03964823E+01;
  COFD[15313] = 4.02033531E+00;
  COFD[15314] = -2.24082500E-01;
  COFD[15315] = 6.43305206E-03;
  COFD[15316] = -2.03341274E+01;
  COFD[15317] = 4.02033531E+00;
  COFD[15318] = -2.24082500E-01;
  COFD[15319] = 6.43305206E-03;
  COFD[15320] = -2.03341274E+01;
  COFD[15321] = 4.02033531E+00;
  COFD[15322] = -2.24082500E-01;
  COFD[15323] = 6.43305206E-03;
  COFD[15324] = -2.21151417E+01;
  COFD[15325] = 5.13453409E+00;
  COFD[15326] = -3.98022439E-01;
  COFD[15327] = 1.51235760E-02;
  COFD[15328] = -2.20227448E+01;
  COFD[15329] = 5.08417640E+00;
  COFD[15330] = -3.89810534E-01;
  COFD[15331] = 1.47010214E-02;
  COFD[15332] = -2.26757132E+01;
  COFD[15333] = 5.56278679E+00;
  COFD[15334] = -4.74794778E-01;
  COFD[15335] = 1.92940001E-02;
  COFD[15336] = -2.19080961E+01;
  COFD[15337] = 5.56282156E+00;
  COFD[15338] = -4.88585679E-01;
  COFD[15339] = 2.04395879E-02;
  COFD[15340] = -2.07710875E+01;
  COFD[15341] = 4.16220079E+00;
  COFD[15342] = -2.45489089E-01;
  COFD[15343] = 7.47783850E-03;
  COFD[15344] = -2.07205885E+01;
  COFD[15345] = 4.24771470E+00;
  COFD[15346] = -2.58432646E-01;
  COFD[15347] = 8.11120477E-03;
  COFD[15348] = -2.07170814E+01;
  COFD[15349] = 4.24771470E+00;
  COFD[15350] = -2.58432646E-01;
  COFD[15351] = 8.11120477E-03;
  COFD[15352] = -2.09228360E+01;
  COFD[15353] = 4.31078948E+00;
  COFD[15354] = -2.68075763E-01;
  COFD[15355] = 8.58551430E-03;
  COFD[15356] = -2.04563756E+01;
  COFD[15357] = 4.07017646E+00;
  COFD[15358] = -2.31589609E-01;
  COFD[15359] = 6.79906092E-03;
  COFD[15360] = -2.07304508E+01;
  COFD[15361] = 4.16220079E+00;
  COFD[15362] = -2.45489089E-01;
  COFD[15363] = 7.47783850E-03;
  COFD[15364] = -2.07277807E+01;
  COFD[15365] = 4.16220079E+00;
  COFD[15366] = -2.45489089E-01;
  COFD[15367] = 7.47783850E-03;
  COFD[15368] = -2.10832812E+01;
  COFD[15369] = 4.27612828E+00;
  COFD[15370] = -2.62774610E-01;
  COFD[15371] = 8.32471127E-03;
  COFD[15372] = -2.10811769E+01;
  COFD[15373] = 4.27612828E+00;
  COFD[15374] = -2.62774610E-01;
  COFD[15375] = 8.32471127E-03;
  COFD[15376] = -2.10811769E+01;
  COFD[15377] = 4.27612828E+00;
  COFD[15378] = -2.62774610E-01;
  COFD[15379] = 8.32471127E-03;
  COFD[15380] = -2.10811769E+01;
  COFD[15381] = 4.27612828E+00;
  COFD[15382] = -2.62774610E-01;
  COFD[15383] = 8.32471127E-03;
  COFD[15384] = -2.10811769E+01;
  COFD[15385] = 4.27612828E+00;
  COFD[15386] = -2.62774610E-01;
  COFD[15387] = 8.32471127E-03;
  COFD[15388] = -2.10875637E+01;
  COFD[15389] = 4.28722996E+00;
  COFD[15390] = -2.64472102E-01;
  COFD[15391] = 8.40820671E-03;
  COFD[15392] = -2.10875637E+01;
  COFD[15393] = 4.28722996E+00;
  COFD[15394] = -2.64472102E-01;
  COFD[15395] = 8.40820671E-03;
  COFD[15396] = -1.98854459E+01;
  COFD[15397] = 3.66237031E+00;
  COFD[15398] = -1.69533805E-01;
  COFD[15399] = 3.75902257E-03;
  COFD[15400] = -1.98854459E+01;
  COFD[15401] = 3.66237031E+00;
  COFD[15402] = -1.69533805E-01;
  COFD[15403] = 3.75902257E-03;
  COFD[15404] = -1.98854459E+01;
  COFD[15405] = 3.66237031E+00;
  COFD[15406] = -1.69533805E-01;
  COFD[15407] = 3.75902257E-03;
  COFD[15408] = -1.98854459E+01;
  COFD[15409] = 3.66237031E+00;
  COFD[15410] = -1.69533805E-01;
  COFD[15411] = 3.75902257E-03;
  COFD[15412] = -1.98854459E+01;
  COFD[15413] = 3.66237031E+00;
  COFD[15414] = -1.69533805E-01;
  COFD[15415] = 3.75902257E-03;
  COFD[15416] = -1.98854459E+01;
  COFD[15417] = 3.66237031E+00;
  COFD[15418] = -1.69533805E-01;
  COFD[15419] = 3.75902257E-03;
  COFD[15420] = -1.98854459E+01;
  COFD[15421] = 3.66237031E+00;
  COFD[15422] = -1.69533805E-01;
  COFD[15423] = 3.75902257E-03;
  COFD[15424] = -1.98854459E+01;
  COFD[15425] = 3.66237031E+00;
  COFD[15426] = -1.69533805E-01;
  COFD[15427] = 3.75902257E-03;
  COFD[15428] = -1.98854459E+01;
  COFD[15429] = 3.66237031E+00;
  COFD[15430] = -1.69533805E-01;
  COFD[15431] = 3.75902257E-03;
  COFD[15432] = -1.98854459E+01;
  COFD[15433] = 3.66237031E+00;
  COFD[15434] = -1.69533805E-01;
  COFD[15435] = 3.75902257E-03;
  COFD[15436] = -1.98854459E+01;
  COFD[15437] = 3.66237031E+00;
  COFD[15438] = -1.69533805E-01;
  COFD[15439] = 3.75902257E-03;
  COFD[15440] = -1.98854459E+01;
  COFD[15441] = 3.66237031E+00;
  COFD[15442] = -1.69533805E-01;
  COFD[15443] = 3.75902257E-03;
  COFD[15444] = -1.95380904E+01;
  COFD[15445] = 3.40915286E+00;
  COFD[15446] = -1.31742920E-01;
  COFD[15447] = 1.93243988E-03;
  COFD[15448] = -1.95380904E+01;
  COFD[15449] = 3.40915286E+00;
  COFD[15450] = -1.31742920E-01;
  COFD[15451] = 1.93243988E-03;
  COFD[15452] = -1.95380904E+01;
  COFD[15453] = 3.40915286E+00;
  COFD[15454] = -1.31742920E-01;
  COFD[15455] = 1.93243988E-03;
  COFD[15456] = -1.95380904E+01;
  COFD[15457] = 3.40915286E+00;
  COFD[15458] = -1.31742920E-01;
  COFD[15459] = 1.93243988E-03;
  COFD[15460] = -2.03772681E+01;
  COFD[15461] = 3.91965299E+00;
  COFD[15462] = -2.08857117E-01;
  COFD[15463] = 5.68950317E-03;
  COFD[15464] = -2.03772681E+01;
  COFD[15465] = 3.91965299E+00;
  COFD[15466] = -2.08857117E-01;
  COFD[15467] = 5.68950317E-03;
  COFD[15468] = -1.96568362E+01;
  COFD[15469] = 3.52976100E+00;
  COFD[15470] = -1.49683857E-01;
  COFD[15471] = 2.79687002E-03;
  COFD[15472] = -1.96568362E+01;
  COFD[15473] = 3.52976100E+00;
  COFD[15474] = -1.49683857E-01;
  COFD[15475] = 2.79687002E-03;
  COFD[15476] = -1.96568362E+01;
  COFD[15477] = 3.52976100E+00;
  COFD[15478] = -1.49683857E-01;
  COFD[15479] = 2.79687002E-03;
  COFD[15480] = -1.96568362E+01;
  COFD[15481] = 3.52976100E+00;
  COFD[15482] = -1.49683857E-01;
  COFD[15483] = 2.79687002E-03;
  COFD[15484] = -2.10349633E+01;
  COFD[15485] = 5.22604478E+00;
  COFD[15486] = -4.54378127E-01;
  COFD[15487] = 1.93342248E-02;
  COFD[15488] = -2.02607872E+01;
  COFD[15489] = 5.56701235E+00;
  COFD[15490] = -4.88925090E-01;
  COFD[15491] = 2.04461948E-02;
  COFD[15492] = -1.65078343E+01;
  COFD[15493] = 4.10792536E+00;
  COFD[15494] = -3.21060656E-01;
  COFD[15495] = 1.40287900E-02;
  COFD[15496] = -2.00275405E+01;
  COFD[15497] = 5.02095434E+00;
  COFD[15498] = -4.31496874E-01;
  COFD[15499] = 1.84920392E-02;
  COFD[15500] = -2.14778034E+01;
  COFD[15501] = 5.35040988E+00;
  COFD[15502] = -4.68827063E-01;
  COFD[15503] = 1.98944407E-02;
  COFD[15504] = -2.00544275E+01;
  COFD[15505] = 5.02095434E+00;
  COFD[15506] = -4.31496874E-01;
  COFD[15507] = 1.84920392E-02;
  COFD[15508] = -1.84166853E+01;
  COFD[15509] = 3.59019527E+00;
  COFD[15510] = -1.58702132E-01;
  COFD[15511] = 3.23316765E-03;
  COFD[15512] = -2.11250956E+01;
  COFD[15513] = 5.23339224E+00;
  COFD[15514] = -4.55230780E-01;
  COFD[15515] = 1.93672146E-02;
  COFD[15516] = -1.97067298E+01;
  COFD[15517] = 4.00653795E+00;
  COFD[15518] = -2.22005804E-01;
  COFD[15519] = 6.33194910E-03;
  COFD[15520] = -2.26294991E+01;
  COFD[15521] = 5.45615714E+00;
  COFD[15522] = -4.53643844E-01;
  COFD[15523] = 1.80854821E-02;
  COFD[15524] = -2.19743144E+01;
  COFD[15525] = 5.56282156E+00;
  COFD[15526] = -4.88585679E-01;
  COFD[15527] = 2.04395879E-02;
  COFD[15528] = -2.19450262E+01;
  COFD[15529] = 5.54986547E+00;
  COFD[15530] = -4.87420926E-01;
  COFD[15531] = 2.04095097E-02;
  COFD[15532] = -2.14900304E+01;
  COFD[15533] = 5.35040988E+00;
  COFD[15534] = -4.68827063E-01;
  COFD[15535] = 1.98944407E-02;
  COFD[15536] = -2.15018122E+01;
  COFD[15537] = 5.35040988E+00;
  COFD[15538] = -4.68827063E-01;
  COFD[15539] = 1.98944407E-02;
  COFD[15540] = -1.97204576E+01;
  COFD[15541] = 4.00653795E+00;
  COFD[15542] = -2.22005804E-01;
  COFD[15543] = 6.33194910E-03;
  COFD[15544] = -2.08497113E+01;
  COFD[15545] = 4.54213239E+00;
  COFD[15546] = -3.03786739E-01;
  COFD[15547] = 1.03552672E-02;
  COFD[15548] = -2.25898102E+01;
  COFD[15549] = 5.44166443E+00;
  COFD[15550] = -4.51021243E-01;
  COFD[15551] = 1.79421190E-02;
  COFD[15552] = -2.24262216E+01;
  COFD[15553] = 5.47922490E+00;
  COFD[15554] = -4.57847893E-01;
  COFD[15555] = 1.83161707E-02;
  COFD[15556] = -2.25761068E+01;
  COFD[15557] = 5.44166443E+00;
  COFD[15558] = -4.51021243E-01;
  COFD[15559] = 1.79421190E-02;
  COFD[15560] = -2.23017391E+01;
  COFD[15561] = 5.37360713E+00;
  COFD[15562] = -4.38661889E-01;
  COFD[15563] = 1.72661628E-02;
  COFD[15564] = -2.23173167E+01;
  COFD[15565] = 5.37360713E+00;
  COFD[15566] = -4.38661889E-01;
  COFD[15567] = 1.72661628E-02;
  COFD[15568] = -2.08000319E+01;
  COFD[15569] = 4.42680848E+00;
  COFD[15570] = -2.85885288E-01;
  COFD[15571] = 9.46483934E-03;
  COFD[15572] = -2.21742351E+01;
  COFD[15573] = 5.58979675E+00;
  COFD[15574] = -4.90962731E-01;
  COFD[15575] = 2.04987927E-02;
  COFD[15576] = -2.08088002E+01;
  COFD[15577] = 4.42680848E+00;
  COFD[15578] = -2.85885288E-01;
  COFD[15579] = 9.46483934E-03;
  COFD[15580] = -2.08088002E+01;
  COFD[15581] = 4.42680848E+00;
  COFD[15582] = -2.85885288E-01;
  COFD[15583] = 9.46483934E-03;
  COFD[15584] = -2.08173130E+01;
  COFD[15585] = 4.42680848E+00;
  COFD[15586] = -2.85885288E-01;
  COFD[15587] = 9.46483934E-03;
  COFD[15588] = -2.21115037E+01;
  COFD[15589] = 5.08417640E+00;
  COFD[15590] = -3.89810534E-01;
  COFD[15591] = 1.47010214E-02;
  COFD[15592] = -2.22582221E+01;
  COFD[15593] = 5.17488844E+00;
  COFD[15594] = -4.04758505E-01;
  COFD[15595] = 1.54748177E-02;
  COFD[15596] = -2.19245430E+01;
  COFD[15597] = 4.88180276E+00;
  COFD[15598] = -3.57591995E-01;
  COFD[15599] = 1.30686372E-02;
  COFD[15600] = -2.24478745E+01;
  COFD[15601] = 5.19900179E+00;
  COFD[15602] = -4.08748226E-01;
  COFD[15603] = 1.56820407E-02;
  COFD[15604] = -2.19405286E+01;
  COFD[15605] = 4.89420156E+00;
  COFD[15606] = -3.59552981E-01;
  COFD[15607] = 1.31675149E-02;
  COFD[15608] = -2.19467409E+01;
  COFD[15609] = 4.89420156E+00;
  COFD[15610] = -3.59552981E-01;
  COFD[15611] = 1.31675149E-02;
  COFD[15612] = -2.21068284E+01;
  COFD[15613] = 4.91371677E+00;
  COFD[15614] = -3.62632206E-01;
  COFD[15615] = 1.33226347E-02;
  COFD[15616] = -2.11005836E+01;
  COFD[15617] = 4.43003196E+00;
  COFD[15618] = -2.86381684E-01;
  COFD[15619] = 9.48940749E-03;
  COFD[15620] = -2.10706516E+01;
  COFD[15621] = 4.43196605E+00;
  COFD[15622] = -2.86679561E-01;
  COFD[15623] = 9.50415164E-03;
  COFD[15624] = -2.12236112E+01;
  COFD[15625] = 4.49601080E+00;
  COFD[15626] = -2.96611137E-01;
  COFD[15627] = 9.99777546E-03;
  COFD[15628] = -2.17079881E+01;
  COFD[15629] = 4.65048212E+00;
  COFD[15630] = -3.20931552E-01;
  COFD[15631] = 1.12185393E-02;
  COFD[15632] = -2.18367730E+01;
  COFD[15633] = 4.71207875E+00;
  COFD[15634] = -3.30658500E-01;
  COFD[15635] = 1.17082011E-02;
  COFD[15636] = -2.04606852E+01;
  COFD[15637] = 4.20149142E+00;
  COFD[15638] = -2.51432163E-01;
  COFD[15639] = 7.76854246E-03;
  COFD[15640] = -2.01418898E+01;
  COFD[15641] = 4.12245214E+00;
  COFD[15642] = -2.39476227E-01;
  COFD[15643] = 7.18400558E-03;
  COFD[15644] = -2.01495040E+01;
  COFD[15645] = 4.12245214E+00;
  COFD[15646] = -2.39476227E-01;
  COFD[15647] = 7.18400558E-03;
  COFD[15648] = -2.08337575E+01;
  COFD[15649] = 4.37963462E+00;
  COFD[15650] = -2.78632270E-01;
  COFD[15651] = 9.10619715E-03;
  COFD[15652] = -2.11954748E+01;
  COFD[15653] = 4.47098552E+00;
  COFD[15654] = -2.92719775E-01;
  COFD[15655] = 9.80400762E-03;
  COFD[15656] = -2.13830228E+01;
  COFD[15657] = 4.57705804E+00;
  COFD[15658] = -3.09238318E-01;
  COFD[15659] = 1.06272290E-02;
  COFD[15660] = -2.03964823E+01;
  COFD[15661] = 4.02033531E+00;
  COFD[15662] = -2.24082500E-01;
  COFD[15663] = 6.43305206E-03;
  COFD[15664] = -2.05471689E+01;
  COFD[15665] = 4.02033531E+00;
  COFD[15666] = -2.24082500E-01;
  COFD[15667] = 6.43305206E-03;
  COFD[15668] = -2.04646092E+01;
  COFD[15669] = 4.02033531E+00;
  COFD[15670] = -2.24082500E-01;
  COFD[15671] = 6.43305206E-03;
  COFD[15672] = -2.04646092E+01;
  COFD[15673] = 4.02033531E+00;
  COFD[15674] = -2.24082500E-01;
  COFD[15675] = 6.43305206E-03;
  COFD[15676] = -2.21971108E+01;
  COFD[15677] = 5.13453409E+00;
  COFD[15678] = -3.98022439E-01;
  COFD[15679] = 1.51235760E-02;
  COFD[15680] = -2.21019001E+01;
  COFD[15681] = 5.08417640E+00;
  COFD[15682] = -3.89810534E-01;
  COFD[15683] = 1.47010214E-02;
  COFD[15684] = -2.27534287E+01;
  COFD[15685] = 5.56278679E+00;
  COFD[15686] = -4.74794778E-01;
  COFD[15687] = 1.92940001E-02;
  COFD[15688] = -2.19433317E+01;
  COFD[15689] = 5.56282156E+00;
  COFD[15690] = -4.88585679E-01;
  COFD[15691] = 2.04395879E-02;
  COFD[15692] = -2.09118521E+01;
  COFD[15693] = 4.16220079E+00;
  COFD[15694] = -2.45489089E-01;
  COFD[15695] = 7.47783850E-03;
  COFD[15696] = -2.08371397E+01;
  COFD[15697] = 4.24771470E+00;
  COFD[15698] = -2.58432646E-01;
  COFD[15699] = 8.11120477E-03;
  COFD[15700] = -2.08327160E+01;
  COFD[15701] = 4.24771470E+00;
  COFD[15702] = -2.58432646E-01;
  COFD[15703] = 8.11120477E-03;
  COFD[15704] = -2.10384706E+01;
  COFD[15705] = 4.31078948E+00;
  COFD[15706] = -2.68075763E-01;
  COFD[15707] = 8.58551430E-03;
  COFD[15708] = -2.05838301E+01;
  COFD[15709] = 4.07017646E+00;
  COFD[15710] = -2.31589609E-01;
  COFD[15711] = 6.79906092E-03;
  COFD[15712] = -2.08586831E+01;
  COFD[15713] = 4.16220079E+00;
  COFD[15714] = -2.45489089E-01;
  COFD[15715] = 7.47783850E-03;
  COFD[15716] = -2.08552351E+01;
  COFD[15717] = 4.16220079E+00;
  COFD[15718] = -2.45489089E-01;
  COFD[15719] = 7.47783850E-03;
  COFD[15720] = -2.12215243E+01;
  COFD[15721] = 4.27612828E+00;
  COFD[15722] = -2.62774610E-01;
  COFD[15723] = 8.32471127E-03;
  COFD[15724] = -2.12187516E+01;
  COFD[15725] = 4.27612828E+00;
  COFD[15726] = -2.62774610E-01;
  COFD[15727] = 8.32471127E-03;
  COFD[15728] = -2.12187516E+01;
  COFD[15729] = 4.27612828E+00;
  COFD[15730] = -2.62774610E-01;
  COFD[15731] = 8.32471127E-03;
  COFD[15732] = -2.12187516E+01;
  COFD[15733] = 4.27612828E+00;
  COFD[15734] = -2.62774610E-01;
  COFD[15735] = 8.32471127E-03;
  COFD[15736] = -2.12187516E+01;
  COFD[15737] = 4.27612828E+00;
  COFD[15738] = -2.62774610E-01;
  COFD[15739] = 8.32471127E-03;
  COFD[15740] = -2.12244630E+01;
  COFD[15741] = 4.28722996E+00;
  COFD[15742] = -2.64472102E-01;
  COFD[15743] = 8.40820671E-03;
  COFD[15744] = -2.12244630E+01;
  COFD[15745] = 4.28722996E+00;
  COFD[15746] = -2.64472102E-01;
  COFD[15747] = 8.40820671E-03;
  COFD[15748] = -2.00413049E+01;
  COFD[15749] = 3.66237031E+00;
  COFD[15750] = -1.69533805E-01;
  COFD[15751] = 3.75902257E-03;
  COFD[15752] = -2.00413049E+01;
  COFD[15753] = 3.66237031E+00;
  COFD[15754] = -1.69533805E-01;
  COFD[15755] = 3.75902257E-03;
  COFD[15756] = -2.00413049E+01;
  COFD[15757] = 3.66237031E+00;
  COFD[15758] = -1.69533805E-01;
  COFD[15759] = 3.75902257E-03;
  COFD[15760] = -2.00413049E+01;
  COFD[15761] = 3.66237031E+00;
  COFD[15762] = -1.69533805E-01;
  COFD[15763] = 3.75902257E-03;
  COFD[15764] = -2.00413049E+01;
  COFD[15765] = 3.66237031E+00;
  COFD[15766] = -1.69533805E-01;
  COFD[15767] = 3.75902257E-03;
  COFD[15768] = -2.00413049E+01;
  COFD[15769] = 3.66237031E+00;
  COFD[15770] = -1.69533805E-01;
  COFD[15771] = 3.75902257E-03;
  COFD[15772] = -2.00413049E+01;
  COFD[15773] = 3.66237031E+00;
  COFD[15774] = -1.69533805E-01;
  COFD[15775] = 3.75902257E-03;
  COFD[15776] = -2.00413049E+01;
  COFD[15777] = 3.66237031E+00;
  COFD[15778] = -1.69533805E-01;
  COFD[15779] = 3.75902257E-03;
  COFD[15780] = -2.00413049E+01;
  COFD[15781] = 3.66237031E+00;
  COFD[15782] = -1.69533805E-01;
  COFD[15783] = 3.75902257E-03;
  COFD[15784] = -2.00413049E+01;
  COFD[15785] = 3.66237031E+00;
  COFD[15786] = -1.69533805E-01;
  COFD[15787] = 3.75902257E-03;
  COFD[15788] = -2.00413049E+01;
  COFD[15789] = 3.66237031E+00;
  COFD[15790] = -1.69533805E-01;
  COFD[15791] = 3.75902257E-03;
  COFD[15792] = -2.00413049E+01;
  COFD[15793] = 3.66237031E+00;
  COFD[15794] = -1.69533805E-01;
  COFD[15795] = 3.75902257E-03;
  COFD[15796] = -1.97076720E+01;
  COFD[15797] = 3.40915286E+00;
  COFD[15798] = -1.31742920E-01;
  COFD[15799] = 1.93243988E-03;
  COFD[15800] = -1.97076720E+01;
  COFD[15801] = 3.40915286E+00;
  COFD[15802] = -1.31742920E-01;
  COFD[15803] = 1.93243988E-03;
  COFD[15804] = -1.97076720E+01;
  COFD[15805] = 3.40915286E+00;
  COFD[15806] = -1.31742920E-01;
  COFD[15807] = 1.93243988E-03;
  COFD[15808] = -1.97076720E+01;
  COFD[15809] = 3.40915286E+00;
  COFD[15810] = -1.31742920E-01;
  COFD[15811] = 1.93243988E-03;
  COFD[15812] = -2.05241117E+01;
  COFD[15813] = 3.91965299E+00;
  COFD[15814] = -2.08857117E-01;
  COFD[15815] = 5.68950317E-03;
  COFD[15816] = -2.05241117E+01;
  COFD[15817] = 3.91965299E+00;
  COFD[15818] = -2.08857117E-01;
  COFD[15819] = 5.68950317E-03;
  COFD[15820] = -1.98195803E+01;
  COFD[15821] = 3.52976100E+00;
  COFD[15822] = -1.49683857E-01;
  COFD[15823] = 2.79687002E-03;
  COFD[15824] = -1.98195803E+01;
  COFD[15825] = 3.52976100E+00;
  COFD[15826] = -1.49683857E-01;
  COFD[15827] = 2.79687002E-03;
  COFD[15828] = -1.98195803E+01;
  COFD[15829] = 3.52976100E+00;
  COFD[15830] = -1.49683857E-01;
  COFD[15831] = 2.79687002E-03;
  COFD[15832] = -1.98195803E+01;
  COFD[15833] = 3.52976100E+00;
  COFD[15834] = -1.49683857E-01;
  COFD[15835] = 2.79687002E-03;
  COFD[15836] = -2.10970191E+01;
  COFD[15837] = 5.22604478E+00;
  COFD[15838] = -4.54378127E-01;
  COFD[15839] = 1.93342248E-02;
  COFD[15840] = -2.02593075E+01;
  COFD[15841] = 5.56701235E+00;
  COFD[15842] = -4.88925090E-01;
  COFD[15843] = 2.04461948E-02;
  COFD[15844] = -1.65049033E+01;
  COFD[15845] = 4.10792536E+00;
  COFD[15846] = -3.21060656E-01;
  COFD[15847] = 1.40287900E-02;
  COFD[15848] = -2.00070182E+01;
  COFD[15849] = 5.02095434E+00;
  COFD[15850] = -4.31496874E-01;
  COFD[15851] = 1.84920392E-02;
  COFD[15852] = -2.14416242E+01;
  COFD[15853] = 5.35040988E+00;
  COFD[15854] = -4.68827063E-01;
  COFD[15855] = 1.98944407E-02;
  COFD[15856] = -2.00327957E+01;
  COFD[15857] = 5.02095434E+00;
  COFD[15858] = -4.31496874E-01;
  COFD[15859] = 1.84920392E-02;
  COFD[15860] = -1.83939624E+01;
  COFD[15861] = 3.59019527E+00;
  COFD[15862] = -1.58702132E-01;
  COFD[15863] = 3.23316765E-03;
  COFD[15864] = -2.10924618E+01;
  COFD[15865] = 5.23339224E+00;
  COFD[15866] = -4.55230780E-01;
  COFD[15867] = 1.93672146E-02;
  COFD[15868] = -1.96731796E+01;
  COFD[15869] = 4.00653795E+00;
  COFD[15870] = -2.22005804E-01;
  COFD[15871] = 6.33194910E-03;
  COFD[15872] = -2.25838020E+01;
  COFD[15873] = 5.45615714E+00;
  COFD[15874] = -4.53643844E-01;
  COFD[15875] = 1.80854821E-02;
  COFD[15876] = -2.19548710E+01;
  COFD[15877] = 5.56282156E+00;
  COFD[15878] = -4.88585679E-01;
  COFD[15879] = 2.04395879E-02;
  COFD[15880] = -2.19244552E+01;
  COFD[15881] = 5.54986547E+00;
  COFD[15882] = -4.87420926E-01;
  COFD[15883] = 2.04095097E-02;
  COFD[15884] = -2.14529879E+01;
  COFD[15885] = 5.35040988E+00;
  COFD[15886] = -4.68827063E-01;
  COFD[15887] = 1.98944407E-02;
  COFD[15888] = -2.14639192E+01;
  COFD[15889] = 5.35040988E+00;
  COFD[15890] = -4.68827063E-01;
  COFD[15891] = 1.98944407E-02;
  COFD[15892] = -1.96860050E+01;
  COFD[15893] = 4.00653795E+00;
  COFD[15894] = -2.22005804E-01;
  COFD[15895] = 6.33194910E-03;
  COFD[15896] = -2.08143698E+01;
  COFD[15897] = 4.54213239E+00;
  COFD[15898] = -3.03786739E-01;
  COFD[15899] = 1.03552672E-02;
  COFD[15900] = -2.25553185E+01;
  COFD[15901] = 5.44166443E+00;
  COFD[15902] = -4.51021243E-01;
  COFD[15903] = 1.79421190E-02;
  COFD[15904] = -2.23935474E+01;
  COFD[15905] = 5.47922490E+00;
  COFD[15906] = -4.57847893E-01;
  COFD[15907] = 1.83161707E-02;
  COFD[15908] = -2.25425170E+01;
  COFD[15909] = 5.44166443E+00;
  COFD[15910] = -4.51021243E-01;
  COFD[15911] = 1.79421190E-02;
  COFD[15912] = -2.22709392E+01;
  COFD[15913] = 5.37360713E+00;
  COFD[15914] = -4.38661889E-01;
  COFD[15915] = 1.72661628E-02;
  COFD[15916] = -2.22855724E+01;
  COFD[15917] = 5.37360713E+00;
  COFD[15918] = -4.38661889E-01;
  COFD[15919] = 1.72661628E-02;
  COFD[15920] = -2.07557895E+01;
  COFD[15921] = 4.42680848E+00;
  COFD[15922] = -2.85885288E-01;
  COFD[15923] = 9.46483934E-03;
  COFD[15924] = -2.21307517E+01;
  COFD[15925] = 5.58979675E+00;
  COFD[15926] = -4.90962731E-01;
  COFD[15927] = 2.04987927E-02;
  COFD[15928] = -2.07638093E+01;
  COFD[15929] = 4.42680848E+00;
  COFD[15930] = -2.85885288E-01;
  COFD[15931] = 9.46483934E-03;
  COFD[15932] = -2.07638093E+01;
  COFD[15933] = 4.42680848E+00;
  COFD[15934] = -2.85885288E-01;
  COFD[15935] = 9.46483934E-03;
  COFD[15936] = -2.07715839E+01;
  COFD[15937] = 4.42680848E+00;
  COFD[15938] = -2.85885288E-01;
  COFD[15939] = 9.46483934E-03;
  COFD[15940] = -2.20687562E+01;
  COFD[15941] = 5.08417640E+00;
  COFD[15942] = -3.89810534E-01;
  COFD[15943] = 1.47010214E-02;
  COFD[15944] = -2.22139468E+01;
  COFD[15945] = 5.17488844E+00;
  COFD[15946] = -4.04758505E-01;
  COFD[15947] = 1.54748177E-02;
  COFD[15948] = -2.18719768E+01;
  COFD[15949] = 4.88180276E+00;
  COFD[15950] = -3.57591995E-01;
  COFD[15951] = 1.30686372E-02;
  COFD[15952] = -2.24028512E+01;
  COFD[15953] = 5.19900179E+00;
  COFD[15954] = -4.08748226E-01;
  COFD[15955] = 1.56820407E-02;
  COFD[15956] = -2.18873237E+01;
  COFD[15957] = 4.89420156E+00;
  COFD[15958] = -3.59552981E-01;
  COFD[15959] = 1.31675149E-02;
  COFD[15960] = -2.18929054E+01;
  COFD[15961] = 4.89420156E+00;
  COFD[15962] = -3.59552981E-01;
  COFD[15963] = 1.31675149E-02;
  COFD[15964] = -2.20523702E+01;
  COFD[15965] = 4.91371677E+00;
  COFD[15966] = -3.62632206E-01;
  COFD[15967] = 1.33226347E-02;
  COFD[15968] = -2.10461524E+01;
  COFD[15969] = 4.43003196E+00;
  COFD[15970] = -2.86381684E-01;
  COFD[15971] = 9.48940749E-03;
  COFD[15972] = -2.10156052E+01;
  COFD[15973] = 4.43196605E+00;
  COFD[15974] = -2.86679561E-01;
  COFD[15975] = 9.50415164E-03;
  COFD[15976] = -2.11691800E+01;
  COFD[15977] = 4.49601080E+00;
  COFD[15978] = -2.96611137E-01;
  COFD[15979] = 9.99777546E-03;
  COFD[15980] = -2.16466694E+01;
  COFD[15981] = 4.65048212E+00;
  COFD[15982] = -3.20931552E-01;
  COFD[15983] = 1.12185393E-02;
  COFD[15984] = -2.17749217E+01;
  COFD[15985] = 4.71207875E+00;
  COFD[15986] = -3.30658500E-01;
  COFD[15987] = 1.17082011E-02;
  COFD[15988] = -2.04142278E+01;
  COFD[15989] = 4.20149142E+00;
  COFD[15990] = -2.51432163E-01;
  COFD[15991] = 7.76854246E-03;
  COFD[15992] = -2.00940359E+01;
  COFD[15993] = 4.12245214E+00;
  COFD[15994] = -2.39476227E-01;
  COFD[15995] = 7.18400558E-03;
  COFD[15996] = -2.01009503E+01;
  COFD[15997] = 4.12245214E+00;
  COFD[15998] = -2.39476227E-01;
  COFD[15999] = 7.18400558E-03;
  COFD[16000] = -2.07805804E+01;
  COFD[16001] = 4.37963462E+00;
  COFD[16002] = -2.78632270E-01;
  COFD[16003] = 9.10619715E-03;
  COFD[16004] = -2.11416667E+01;
  COFD[16005] = 4.47098552E+00;
  COFD[16006] = -2.92719775E-01;
  COFD[16007] = 9.80400762E-03;
  COFD[16008] = -2.13285916E+01;
  COFD[16009] = 4.57705804E+00;
  COFD[16010] = -3.09238318E-01;
  COFD[16011] = 1.06272290E-02;
  COFD[16012] = -2.03341274E+01;
  COFD[16013] = 4.02033531E+00;
  COFD[16014] = -2.24082500E-01;
  COFD[16015] = 6.43305206E-03;
  COFD[16016] = -2.04646092E+01;
  COFD[16017] = 4.02033531E+00;
  COFD[16018] = -2.24082500E-01;
  COFD[16019] = 6.43305206E-03;
  COFD[16020] = -2.03937693E+01;
  COFD[16021] = 4.02033531E+00;
  COFD[16022] = -2.24082500E-01;
  COFD[16023] = 6.43305206E-03;
  COFD[16024] = -2.03937693E+01;
  COFD[16025] = 4.02033531E+00;
  COFD[16026] = -2.24082500E-01;
  COFD[16027] = 6.43305206E-03;
  COFD[16028] = -2.21535941E+01;
  COFD[16029] = 5.13453409E+00;
  COFD[16030] = -3.98022439E-01;
  COFD[16031] = 1.51235760E-02;
  COFD[16032] = -2.20599325E+01;
  COFD[16033] = 5.08417640E+00;
  COFD[16034] = -3.89810534E-01;
  COFD[16035] = 1.47010214E-02;
  COFD[16036] = -2.27122523E+01;
  COFD[16037] = 5.56278679E+00;
  COFD[16038] = -4.74794778E-01;
  COFD[16039] = 1.92940001E-02;
  COFD[16040] = -2.19250355E+01;
  COFD[16041] = 5.56282156E+00;
  COFD[16042] = -4.88585679E-01;
  COFD[16043] = 2.04395879E-02;
  COFD[16044] = -2.08350725E+01;
  COFD[16045] = 4.16220079E+00;
  COFD[16046] = -2.45489089E-01;
  COFD[16047] = 7.47783850E-03;
  COFD[16048] = -2.07742641E+01;
  COFD[16049] = 4.24771470E+00;
  COFD[16050] = -2.58432646E-01;
  COFD[16051] = 8.11120477E-03;
  COFD[16052] = -2.07703611E+01;
  COFD[16053] = 4.24771470E+00;
  COFD[16054] = -2.58432646E-01;
  COFD[16055] = 8.11120477E-03;
  COFD[16056] = -2.09761157E+01;
  COFD[16057] = 4.31078948E+00;
  COFD[16058] = -2.68075763E-01;
  COFD[16059] = 8.58551430E-03;
  COFD[16060] = -2.05147290E+01;
  COFD[16061] = 4.07017646E+00;
  COFD[16062] = -2.31589609E-01;
  COFD[16063] = 6.79906092E-03;
  COFD[16064] = -2.07891357E+01;
  COFD[16065] = 4.16220079E+00;
  COFD[16066] = -2.45489089E-01;
  COFD[16067] = 7.47783850E-03;
  COFD[16068] = -2.07861341E+01;
  COFD[16069] = 4.16220079E+00;
  COFD[16070] = -2.45489089E-01;
  COFD[16071] = 7.47783850E-03;
  COFD[16072] = -2.11462060E+01;
  COFD[16073] = 4.27612828E+00;
  COFD[16074] = -2.62774610E-01;
  COFD[16075] = 8.32471127E-03;
  COFD[16076] = -2.11438201E+01;
  COFD[16077] = 4.27612828E+00;
  COFD[16078] = -2.62774610E-01;
  COFD[16079] = 8.32471127E-03;
  COFD[16080] = -2.11438201E+01;
  COFD[16081] = 4.27612828E+00;
  COFD[16082] = -2.62774610E-01;
  COFD[16083] = 8.32471127E-03;
  COFD[16084] = -2.11438201E+01;
  COFD[16085] = 4.27612828E+00;
  COFD[16086] = -2.62774610E-01;
  COFD[16087] = 8.32471127E-03;
  COFD[16088] = -2.11438201E+01;
  COFD[16089] = 4.27612828E+00;
  COFD[16090] = -2.62774610E-01;
  COFD[16091] = 8.32471127E-03;
  COFD[16092] = -2.11499222E+01;
  COFD[16093] = 4.28722996E+00;
  COFD[16094] = -2.64472102E-01;
  COFD[16095] = 8.40820671E-03;
  COFD[16096] = -2.11499222E+01;
  COFD[16097] = 4.28722996E+00;
  COFD[16098] = -2.64472102E-01;
  COFD[16099] = 8.40820671E-03;
  COFD[16100] = -1.99557130E+01;
  COFD[16101] = 3.66237031E+00;
  COFD[16102] = -1.69533805E-01;
  COFD[16103] = 3.75902257E-03;
  COFD[16104] = -1.99557130E+01;
  COFD[16105] = 3.66237031E+00;
  COFD[16106] = -1.69533805E-01;
  COFD[16107] = 3.75902257E-03;
  COFD[16108] = -1.99557130E+01;
  COFD[16109] = 3.66237031E+00;
  COFD[16110] = -1.69533805E-01;
  COFD[16111] = 3.75902257E-03;
  COFD[16112] = -1.99557130E+01;
  COFD[16113] = 3.66237031E+00;
  COFD[16114] = -1.69533805E-01;
  COFD[16115] = 3.75902257E-03;
  COFD[16116] = -1.99557130E+01;
  COFD[16117] = 3.66237031E+00;
  COFD[16118] = -1.69533805E-01;
  COFD[16119] = 3.75902257E-03;
  COFD[16120] = -1.99557130E+01;
  COFD[16121] = 3.66237031E+00;
  COFD[16122] = -1.69533805E-01;
  COFD[16123] = 3.75902257E-03;
  COFD[16124] = -1.99557130E+01;
  COFD[16125] = 3.66237031E+00;
  COFD[16126] = -1.69533805E-01;
  COFD[16127] = 3.75902257E-03;
  COFD[16128] = -1.99557130E+01;
  COFD[16129] = 3.66237031E+00;
  COFD[16130] = -1.69533805E-01;
  COFD[16131] = 3.75902257E-03;
  COFD[16132] = -1.99557130E+01;
  COFD[16133] = 3.66237031E+00;
  COFD[16134] = -1.69533805E-01;
  COFD[16135] = 3.75902257E-03;
  COFD[16136] = -1.99557130E+01;
  COFD[16137] = 3.66237031E+00;
  COFD[16138] = -1.69533805E-01;
  COFD[16139] = 3.75902257E-03;
  COFD[16140] = -1.99557130E+01;
  COFD[16141] = 3.66237031E+00;
  COFD[16142] = -1.69533805E-01;
  COFD[16143] = 3.75902257E-03;
  COFD[16144] = -1.99557130E+01;
  COFD[16145] = 3.66237031E+00;
  COFD[16146] = -1.69533805E-01;
  COFD[16147] = 3.75902257E-03;
  COFD[16148] = -1.96139728E+01;
  COFD[16149] = 3.40915286E+00;
  COFD[16150] = -1.31742920E-01;
  COFD[16151] = 1.93243988E-03;
  COFD[16152] = -1.96139728E+01;
  COFD[16153] = 3.40915286E+00;
  COFD[16154] = -1.31742920E-01;
  COFD[16155] = 1.93243988E-03;
  COFD[16156] = -1.96139728E+01;
  COFD[16157] = 3.40915286E+00;
  COFD[16158] = -1.31742920E-01;
  COFD[16159] = 1.93243988E-03;
  COFD[16160] = -1.96139728E+01;
  COFD[16161] = 3.40915286E+00;
  COFD[16162] = -1.31742920E-01;
  COFD[16163] = 1.93243988E-03;
  COFD[16164] = -2.04437964E+01;
  COFD[16165] = 3.91965299E+00;
  COFD[16166] = -2.08857117E-01;
  COFD[16167] = 5.68950317E-03;
  COFD[16168] = -2.04437964E+01;
  COFD[16169] = 3.91965299E+00;
  COFD[16170] = -2.08857117E-01;
  COFD[16171] = 5.68950317E-03;
  COFD[16172] = -1.97299320E+01;
  COFD[16173] = 3.52976100E+00;
  COFD[16174] = -1.49683857E-01;
  COFD[16175] = 2.79687002E-03;
  COFD[16176] = -1.97299320E+01;
  COFD[16177] = 3.52976100E+00;
  COFD[16178] = -1.49683857E-01;
  COFD[16179] = 2.79687002E-03;
  COFD[16180] = -1.97299320E+01;
  COFD[16181] = 3.52976100E+00;
  COFD[16182] = -1.49683857E-01;
  COFD[16183] = 2.79687002E-03;
  COFD[16184] = -1.97299320E+01;
  COFD[16185] = 3.52976100E+00;
  COFD[16186] = -1.49683857E-01;
  COFD[16187] = 2.79687002E-03;
  COFD[16188] = -2.10643816E+01;
  COFD[16189] = 5.22604478E+00;
  COFD[16190] = -4.54378127E-01;
  COFD[16191] = 1.93342248E-02;
  COFD[16192] = -2.02593075E+01;
  COFD[16193] = 5.56701235E+00;
  COFD[16194] = -4.88925090E-01;
  COFD[16195] = 2.04461948E-02;
  COFD[16196] = -1.65049033E+01;
  COFD[16197] = 4.10792536E+00;
  COFD[16198] = -3.21060656E-01;
  COFD[16199] = 1.40287900E-02;
  COFD[16200] = -2.00070182E+01;
  COFD[16201] = 5.02095434E+00;
  COFD[16202] = -4.31496874E-01;
  COFD[16203] = 1.84920392E-02;
  COFD[16204] = -2.14416242E+01;
  COFD[16205] = 5.35040988E+00;
  COFD[16206] = -4.68827063E-01;
  COFD[16207] = 1.98944407E-02;
  COFD[16208] = -2.00327957E+01;
  COFD[16209] = 5.02095434E+00;
  COFD[16210] = -4.31496874E-01;
  COFD[16211] = 1.84920392E-02;
  COFD[16212] = -1.83939624E+01;
  COFD[16213] = 3.59019527E+00;
  COFD[16214] = -1.58702132E-01;
  COFD[16215] = 3.23316765E-03;
  COFD[16216] = -2.10924618E+01;
  COFD[16217] = 5.23339224E+00;
  COFD[16218] = -4.55230780E-01;
  COFD[16219] = 1.93672146E-02;
  COFD[16220] = -1.96731796E+01;
  COFD[16221] = 4.00653795E+00;
  COFD[16222] = -2.22005804E-01;
  COFD[16223] = 6.33194910E-03;
  COFD[16224] = -2.25838020E+01;
  COFD[16225] = 5.45615714E+00;
  COFD[16226] = -4.53643844E-01;
  COFD[16227] = 1.80854821E-02;
  COFD[16228] = -2.19548710E+01;
  COFD[16229] = 5.56282156E+00;
  COFD[16230] = -4.88585679E-01;
  COFD[16231] = 2.04395879E-02;
  COFD[16232] = -2.19244552E+01;
  COFD[16233] = 5.54986547E+00;
  COFD[16234] = -4.87420926E-01;
  COFD[16235] = 2.04095097E-02;
  COFD[16236] = -2.14529879E+01;
  COFD[16237] = 5.35040988E+00;
  COFD[16238] = -4.68827063E-01;
  COFD[16239] = 1.98944407E-02;
  COFD[16240] = -2.14639192E+01;
  COFD[16241] = 5.35040988E+00;
  COFD[16242] = -4.68827063E-01;
  COFD[16243] = 1.98944407E-02;
  COFD[16244] = -1.96860050E+01;
  COFD[16245] = 4.00653795E+00;
  COFD[16246] = -2.22005804E-01;
  COFD[16247] = 6.33194910E-03;
  COFD[16248] = -2.08143698E+01;
  COFD[16249] = 4.54213239E+00;
  COFD[16250] = -3.03786739E-01;
  COFD[16251] = 1.03552672E-02;
  COFD[16252] = -2.25553185E+01;
  COFD[16253] = 5.44166443E+00;
  COFD[16254] = -4.51021243E-01;
  COFD[16255] = 1.79421190E-02;
  COFD[16256] = -2.23935474E+01;
  COFD[16257] = 5.47922490E+00;
  COFD[16258] = -4.57847893E-01;
  COFD[16259] = 1.83161707E-02;
  COFD[16260] = -2.25425170E+01;
  COFD[16261] = 5.44166443E+00;
  COFD[16262] = -4.51021243E-01;
  COFD[16263] = 1.79421190E-02;
  COFD[16264] = -2.22709392E+01;
  COFD[16265] = 5.37360713E+00;
  COFD[16266] = -4.38661889E-01;
  COFD[16267] = 1.72661628E-02;
  COFD[16268] = -2.22855724E+01;
  COFD[16269] = 5.37360713E+00;
  COFD[16270] = -4.38661889E-01;
  COFD[16271] = 1.72661628E-02;
  COFD[16272] = -2.07557895E+01;
  COFD[16273] = 4.42680848E+00;
  COFD[16274] = -2.85885288E-01;
  COFD[16275] = 9.46483934E-03;
  COFD[16276] = -2.21307517E+01;
  COFD[16277] = 5.58979675E+00;
  COFD[16278] = -4.90962731E-01;
  COFD[16279] = 2.04987927E-02;
  COFD[16280] = -2.07638093E+01;
  COFD[16281] = 4.42680848E+00;
  COFD[16282] = -2.85885288E-01;
  COFD[16283] = 9.46483934E-03;
  COFD[16284] = -2.07638093E+01;
  COFD[16285] = 4.42680848E+00;
  COFD[16286] = -2.85885288E-01;
  COFD[16287] = 9.46483934E-03;
  COFD[16288] = -2.07715839E+01;
  COFD[16289] = 4.42680848E+00;
  COFD[16290] = -2.85885288E-01;
  COFD[16291] = 9.46483934E-03;
  COFD[16292] = -2.20687562E+01;
  COFD[16293] = 5.08417640E+00;
  COFD[16294] = -3.89810534E-01;
  COFD[16295] = 1.47010214E-02;
  COFD[16296] = -2.22139468E+01;
  COFD[16297] = 5.17488844E+00;
  COFD[16298] = -4.04758505E-01;
  COFD[16299] = 1.54748177E-02;
  COFD[16300] = -2.18719768E+01;
  COFD[16301] = 4.88180276E+00;
  COFD[16302] = -3.57591995E-01;
  COFD[16303] = 1.30686372E-02;
  COFD[16304] = -2.24028512E+01;
  COFD[16305] = 5.19900179E+00;
  COFD[16306] = -4.08748226E-01;
  COFD[16307] = 1.56820407E-02;
  COFD[16308] = -2.18873237E+01;
  COFD[16309] = 4.89420156E+00;
  COFD[16310] = -3.59552981E-01;
  COFD[16311] = 1.31675149E-02;
  COFD[16312] = -2.18929054E+01;
  COFD[16313] = 4.89420156E+00;
  COFD[16314] = -3.59552981E-01;
  COFD[16315] = 1.31675149E-02;
  COFD[16316] = -2.20523702E+01;
  COFD[16317] = 4.91371677E+00;
  COFD[16318] = -3.62632206E-01;
  COFD[16319] = 1.33226347E-02;
  COFD[16320] = -2.10461524E+01;
  COFD[16321] = 4.43003196E+00;
  COFD[16322] = -2.86381684E-01;
  COFD[16323] = 9.48940749E-03;
  COFD[16324] = -2.10156052E+01;
  COFD[16325] = 4.43196605E+00;
  COFD[16326] = -2.86679561E-01;
  COFD[16327] = 9.50415164E-03;
  COFD[16328] = -2.11691800E+01;
  COFD[16329] = 4.49601080E+00;
  COFD[16330] = -2.96611137E-01;
  COFD[16331] = 9.99777546E-03;
  COFD[16332] = -2.16466694E+01;
  COFD[16333] = 4.65048212E+00;
  COFD[16334] = -3.20931552E-01;
  COFD[16335] = 1.12185393E-02;
  COFD[16336] = -2.17749217E+01;
  COFD[16337] = 4.71207875E+00;
  COFD[16338] = -3.30658500E-01;
  COFD[16339] = 1.17082011E-02;
  COFD[16340] = -2.04142278E+01;
  COFD[16341] = 4.20149142E+00;
  COFD[16342] = -2.51432163E-01;
  COFD[16343] = 7.76854246E-03;
  COFD[16344] = -2.00940359E+01;
  COFD[16345] = 4.12245214E+00;
  COFD[16346] = -2.39476227E-01;
  COFD[16347] = 7.18400558E-03;
  COFD[16348] = -2.01009503E+01;
  COFD[16349] = 4.12245214E+00;
  COFD[16350] = -2.39476227E-01;
  COFD[16351] = 7.18400558E-03;
  COFD[16352] = -2.07805804E+01;
  COFD[16353] = 4.37963462E+00;
  COFD[16354] = -2.78632270E-01;
  COFD[16355] = 9.10619715E-03;
  COFD[16356] = -2.11416667E+01;
  COFD[16357] = 4.47098552E+00;
  COFD[16358] = -2.92719775E-01;
  COFD[16359] = 9.80400762E-03;
  COFD[16360] = -2.13285916E+01;
  COFD[16361] = 4.57705804E+00;
  COFD[16362] = -3.09238318E-01;
  COFD[16363] = 1.06272290E-02;
  COFD[16364] = -2.03341274E+01;
  COFD[16365] = 4.02033531E+00;
  COFD[16366] = -2.24082500E-01;
  COFD[16367] = 6.43305206E-03;
  COFD[16368] = -2.04646092E+01;
  COFD[16369] = 4.02033531E+00;
  COFD[16370] = -2.24082500E-01;
  COFD[16371] = 6.43305206E-03;
  COFD[16372] = -2.03937693E+01;
  COFD[16373] = 4.02033531E+00;
  COFD[16374] = -2.24082500E-01;
  COFD[16375] = 6.43305206E-03;
  COFD[16376] = -2.03937693E+01;
  COFD[16377] = 4.02033531E+00;
  COFD[16378] = -2.24082500E-01;
  COFD[16379] = 6.43305206E-03;
  COFD[16380] = -2.21535941E+01;
  COFD[16381] = 5.13453409E+00;
  COFD[16382] = -3.98022439E-01;
  COFD[16383] = 1.51235760E-02;
  COFD[16384] = -2.20599325E+01;
  COFD[16385] = 5.08417640E+00;
  COFD[16386] = -3.89810534E-01;
  COFD[16387] = 1.47010214E-02;
  COFD[16388] = -2.27122523E+01;
  COFD[16389] = 5.56278679E+00;
  COFD[16390] = -4.74794778E-01;
  COFD[16391] = 1.92940001E-02;
  COFD[16392] = -2.19250355E+01;
  COFD[16393] = 5.56282156E+00;
  COFD[16394] = -4.88585679E-01;
  COFD[16395] = 2.04395879E-02;
  COFD[16396] = -2.08350725E+01;
  COFD[16397] = 4.16220079E+00;
  COFD[16398] = -2.45489089E-01;
  COFD[16399] = 7.47783850E-03;
  COFD[16400] = -2.07742641E+01;
  COFD[16401] = 4.24771470E+00;
  COFD[16402] = -2.58432646E-01;
  COFD[16403] = 8.11120477E-03;
  COFD[16404] = -2.07703611E+01;
  COFD[16405] = 4.24771470E+00;
  COFD[16406] = -2.58432646E-01;
  COFD[16407] = 8.11120477E-03;
  COFD[16408] = -2.09761157E+01;
  COFD[16409] = 4.31078948E+00;
  COFD[16410] = -2.68075763E-01;
  COFD[16411] = 8.58551430E-03;
  COFD[16412] = -2.05147290E+01;
  COFD[16413] = 4.07017646E+00;
  COFD[16414] = -2.31589609E-01;
  COFD[16415] = 6.79906092E-03;
  COFD[16416] = -2.07891357E+01;
  COFD[16417] = 4.16220079E+00;
  COFD[16418] = -2.45489089E-01;
  COFD[16419] = 7.47783850E-03;
  COFD[16420] = -2.07861341E+01;
  COFD[16421] = 4.16220079E+00;
  COFD[16422] = -2.45489089E-01;
  COFD[16423] = 7.47783850E-03;
  COFD[16424] = -2.11462060E+01;
  COFD[16425] = 4.27612828E+00;
  COFD[16426] = -2.62774610E-01;
  COFD[16427] = 8.32471127E-03;
  COFD[16428] = -2.11438201E+01;
  COFD[16429] = 4.27612828E+00;
  COFD[16430] = -2.62774610E-01;
  COFD[16431] = 8.32471127E-03;
  COFD[16432] = -2.11438201E+01;
  COFD[16433] = 4.27612828E+00;
  COFD[16434] = -2.62774610E-01;
  COFD[16435] = 8.32471127E-03;
  COFD[16436] = -2.11438201E+01;
  COFD[16437] = 4.27612828E+00;
  COFD[16438] = -2.62774610E-01;
  COFD[16439] = 8.32471127E-03;
  COFD[16440] = -2.11438201E+01;
  COFD[16441] = 4.27612828E+00;
  COFD[16442] = -2.62774610E-01;
  COFD[16443] = 8.32471127E-03;
  COFD[16444] = -2.11499222E+01;
  COFD[16445] = 4.28722996E+00;
  COFD[16446] = -2.64472102E-01;
  COFD[16447] = 8.40820671E-03;
  COFD[16448] = -2.11499222E+01;
  COFD[16449] = 4.28722996E+00;
  COFD[16450] = -2.64472102E-01;
  COFD[16451] = 8.40820671E-03;
  COFD[16452] = -1.99557130E+01;
  COFD[16453] = 3.66237031E+00;
  COFD[16454] = -1.69533805E-01;
  COFD[16455] = 3.75902257E-03;
  COFD[16456] = -1.99557130E+01;
  COFD[16457] = 3.66237031E+00;
  COFD[16458] = -1.69533805E-01;
  COFD[16459] = 3.75902257E-03;
  COFD[16460] = -1.99557130E+01;
  COFD[16461] = 3.66237031E+00;
  COFD[16462] = -1.69533805E-01;
  COFD[16463] = 3.75902257E-03;
  COFD[16464] = -1.99557130E+01;
  COFD[16465] = 3.66237031E+00;
  COFD[16466] = -1.69533805E-01;
  COFD[16467] = 3.75902257E-03;
  COFD[16468] = -1.99557130E+01;
  COFD[16469] = 3.66237031E+00;
  COFD[16470] = -1.69533805E-01;
  COFD[16471] = 3.75902257E-03;
  COFD[16472] = -1.99557130E+01;
  COFD[16473] = 3.66237031E+00;
  COFD[16474] = -1.69533805E-01;
  COFD[16475] = 3.75902257E-03;
  COFD[16476] = -1.99557130E+01;
  COFD[16477] = 3.66237031E+00;
  COFD[16478] = -1.69533805E-01;
  COFD[16479] = 3.75902257E-03;
  COFD[16480] = -1.99557130E+01;
  COFD[16481] = 3.66237031E+00;
  COFD[16482] = -1.69533805E-01;
  COFD[16483] = 3.75902257E-03;
  COFD[16484] = -1.99557130E+01;
  COFD[16485] = 3.66237031E+00;
  COFD[16486] = -1.69533805E-01;
  COFD[16487] = 3.75902257E-03;
  COFD[16488] = -1.99557130E+01;
  COFD[16489] = 3.66237031E+00;
  COFD[16490] = -1.69533805E-01;
  COFD[16491] = 3.75902257E-03;
  COFD[16492] = -1.99557130E+01;
  COFD[16493] = 3.66237031E+00;
  COFD[16494] = -1.69533805E-01;
  COFD[16495] = 3.75902257E-03;
  COFD[16496] = -1.99557130E+01;
  COFD[16497] = 3.66237031E+00;
  COFD[16498] = -1.69533805E-01;
  COFD[16499] = 3.75902257E-03;
  COFD[16500] = -1.96139728E+01;
  COFD[16501] = 3.40915286E+00;
  COFD[16502] = -1.31742920E-01;
  COFD[16503] = 1.93243988E-03;
  COFD[16504] = -1.96139728E+01;
  COFD[16505] = 3.40915286E+00;
  COFD[16506] = -1.31742920E-01;
  COFD[16507] = 1.93243988E-03;
  COFD[16508] = -1.96139728E+01;
  COFD[16509] = 3.40915286E+00;
  COFD[16510] = -1.31742920E-01;
  COFD[16511] = 1.93243988E-03;
  COFD[16512] = -1.96139728E+01;
  COFD[16513] = 3.40915286E+00;
  COFD[16514] = -1.31742920E-01;
  COFD[16515] = 1.93243988E-03;
  COFD[16516] = -2.04437964E+01;
  COFD[16517] = 3.91965299E+00;
  COFD[16518] = -2.08857117E-01;
  COFD[16519] = 5.68950317E-03;
  COFD[16520] = -2.04437964E+01;
  COFD[16521] = 3.91965299E+00;
  COFD[16522] = -2.08857117E-01;
  COFD[16523] = 5.68950317E-03;
  COFD[16524] = -1.97299320E+01;
  COFD[16525] = 3.52976100E+00;
  COFD[16526] = -1.49683857E-01;
  COFD[16527] = 2.79687002E-03;
  COFD[16528] = -1.97299320E+01;
  COFD[16529] = 3.52976100E+00;
  COFD[16530] = -1.49683857E-01;
  COFD[16531] = 2.79687002E-03;
  COFD[16532] = -1.97299320E+01;
  COFD[16533] = 3.52976100E+00;
  COFD[16534] = -1.49683857E-01;
  COFD[16535] = 2.79687002E-03;
  COFD[16536] = -1.97299320E+01;
  COFD[16537] = 3.52976100E+00;
  COFD[16538] = -1.49683857E-01;
  COFD[16539] = 2.79687002E-03;
  COFD[16540] = -2.10643816E+01;
  COFD[16541] = 5.22604478E+00;
  COFD[16542] = -4.54378127E-01;
  COFD[16543] = 1.93342248E-02;
  COFD[16544] = -1.86493270E+01;
  COFD[16545] = 5.16040659E+00;
  COFD[16546] = -4.46843492E-01;
  COFD[16547] = 1.90466181E-02;
  COFD[16548] = -1.46719351E+01;
  COFD[16549] = 3.52400594E+00;
  COFD[16550] = -2.46379985E-01;
  COFD[16551] = 1.08326032E-02;
  COFD[16552] = -1.80480872E+01;
  COFD[16553] = 4.45434023E+00;
  COFD[16554] = -3.63584633E-01;
  COFD[16555] = 1.57739270E-02;
  COFD[16556] = -1.94912078E+01;
  COFD[16557] = 4.81575071E+00;
  COFD[16558] = -4.07042139E-01;
  COFD[16559] = 1.75187504E-02;
  COFD[16560] = -1.80698827E+01;
  COFD[16561] = 4.45434023E+00;
  COFD[16562] = -3.63584633E-01;
  COFD[16563] = 1.57739270E-02;
  COFD[16564] = -2.05372348E+01;
  COFD[16565] = 4.83379373E+00;
  COFD[16566] = -3.50008083E-01;
  COFD[16567] = 1.26863426E-02;
  COFD[16568] = -1.92044433E+01;
  COFD[16569] = 4.71304783E+00;
  COFD[16570] = -3.94942083E-01;
  COFD[16571] = 1.70435959E-02;
  COFD[16572] = -2.15159177E+01;
  COFD[16573] = 5.12799307E+00;
  COFD[16574] = -3.96938732E-01;
  COFD[16575] = 1.50673195E-02;
  COFD[16576] = -2.21216771E+01;
  COFD[16577] = 5.60203389E+00;
  COFD[16578] = -4.91444416E-01;
  COFD[16579] = 2.04761886E-02;
  COFD[16580] = -2.03367551E+01;
  COFD[16581] = 5.15740122E+00;
  COFD[16582] = -4.46644818E-01;
  COFD[16583] = 1.90459001E-02;
  COFD[16584] = -2.03123537E+01;
  COFD[16585] = 5.14854169E+00;
  COFD[16586] = -4.45984343E-01;
  COFD[16587] = 1.90374217E-02;
  COFD[16588] = -1.94998656E+01;
  COFD[16589] = 4.81575071E+00;
  COFD[16590] = -4.07042139E-01;
  COFD[16591] = 1.75187504E-02;
  COFD[16592] = -1.95081493E+01;
  COFD[16593] = 4.81575071E+00;
  COFD[16594] = -4.07042139E-01;
  COFD[16595] = 1.75187504E-02;
  COFD[16596] = -2.15258520E+01;
  COFD[16597] = 5.12799307E+00;
  COFD[16598] = -3.96938732E-01;
  COFD[16599] = 1.50673195E-02;
  COFD[16600] = -2.19617933E+01;
  COFD[16601] = 5.37170913E+00;
  COFD[16602] = -4.38338667E-01;
  COFD[16603] = 1.72490835E-02;
  COFD[16604] = -2.21793313E+01;
  COFD[16605] = 5.60403905E+00;
  COFD[16606] = -4.91221691E-01;
  COFD[16607] = 2.04473483E-02;
  COFD[16608] = -2.19032541E+01;
  COFD[16609] = 5.59794138E+00;
  COFD[16610] = -4.91684532E-01;
  COFD[16611] = 2.05170953E-02;
  COFD[16612] = -2.21694180E+01;
  COFD[16613] = 5.60403905E+00;
  COFD[16614] = -4.91221691E-01;
  COFD[16615] = 2.04473483E-02;
  COFD[16616] = -2.20511242E+01;
  COFD[16617] = 5.60809037E+00;
  COFD[16618] = -4.89400803E-01;
  COFD[16619] = 2.02760802E-02;
  COFD[16620] = -2.20626612E+01;
  COFD[16621] = 5.60809037E+00;
  COFD[16622] = -4.89400803E-01;
  COFD[16623] = 2.02760802E-02;
  COFD[16624] = -2.20192310E+01;
  COFD[16625] = 5.31412694E+00;
  COFD[16626] = -4.28473898E-01;
  COFD[16627] = 1.67264841E-02;
  COFD[16628] = -2.04250978E+01;
  COFD[16629] = 5.19993608E+00;
  COFD[16630] = -4.51334924E-01;
  COFD[16631] = 1.92158646E-02;
  COFD[16632] = -2.20250512E+01;
  COFD[16633] = 5.31412694E+00;
  COFD[16634] = -4.28473898E-01;
  COFD[16635] = 1.67264841E-02;
  COFD[16636] = -2.20250512E+01;
  COFD[16637] = 5.31412694E+00;
  COFD[16638] = -4.28473898E-01;
  COFD[16639] = 1.67264841E-02;
  COFD[16640] = -2.20306689E+01;
  COFD[16641] = 5.31412694E+00;
  COFD[16642] = -4.28473898E-01;
  COFD[16643] = 1.67264841E-02;
  COFD[16644] = -2.24083138E+01;
  COFD[16645] = 5.57115285E+00;
  COFD[16646] = -4.76363416E-01;
  COFD[16647] = 1.93814080E-02;
  COFD[16648] = -2.23689607E+01;
  COFD[16649] = 5.58513878E+00;
  COFD[16650] = -4.80389524E-01;
  COFD[16651] = 1.96438689E-02;
  COFD[16652] = -2.25060089E+01;
  COFD[16653] = 5.50327119E+00;
  COFD[16654] = -4.63087223E-01;
  COFD[16655] = 1.86271401E-02;
  COFD[16656] = -2.25161193E+01;
  COFD[16657] = 5.58521783E+00;
  COFD[16658] = -4.80947522E-01;
  COFD[16659] = 1.96897222E-02;
  COFD[16660] = -2.24931464E+01;
  COFD[16661] = 5.50509817E+00;
  COFD[16662] = -4.63572794E-01;
  COFD[16663] = 1.86581046E-02;
  COFD[16664] = -2.24969974E+01;
  COFD[16665] = 5.50509817E+00;
  COFD[16666] = -4.63572794E-01;
  COFD[16667] = 1.86581046E-02;
  COFD[16668] = -2.26299917E+01;
  COFD[16669] = 5.50881574E+00;
  COFD[16670] = -4.64448886E-01;
  COFD[16671] = 1.87118881E-02;
  COFD[16672] = -2.22980406E+01;
  COFD[16673] = 5.31576033E+00;
  COFD[16674] = -4.28748885E-01;
  COFD[16675] = 1.67409052E-02;
  COFD[16676] = -2.22592409E+01;
  COFD[16677] = 5.31674131E+00;
  COFD[16678] = -4.28914033E-01;
  COFD[16679] = 1.67495659E-02;
  COFD[16680] = -2.23409162E+01;
  COFD[16681] = 5.34800897E+00;
  COFD[16682] = -4.34284570E-01;
  COFD[16683] = 1.70344433E-02;
  COFD[16684] = -2.26203739E+01;
  COFD[16685] = 5.42039607E+00;
  COFD[16686] = -4.47178505E-01;
  COFD[16687] = 1.77324253E-02;
  COFD[16688] = -2.26677732E+01;
  COFD[16689] = 5.44777353E+00;
  COFD[16690] = -4.52122340E-01;
  COFD[16691] = 1.80021910E-02;
  COFD[16692] = -2.19819762E+01;
  COFD[16693] = 5.21506351E+00;
  COFD[16694] = -4.11467220E-01;
  COFD[16695] = 1.58248077E-02;
  COFD[16696] = -2.17407371E+01;
  COFD[16697] = 5.17945041E+00;
  COFD[16698] = -4.05514689E-01;
  COFD[16699] = 1.55141412E-02;
  COFD[16700] = -2.17456518E+01;
  COFD[16701] = 5.17945041E+00;
  COFD[16702] = -4.05514689E-01;
  COFD[16703] = 1.55141412E-02;
  COFD[16704] = -2.20714225E+01;
  COFD[16705] = 5.28765993E+00;
  COFD[16706] = -4.24082865E-01;
  COFD[16707] = 1.64979120E-02;
  COFD[16708] = -2.23470305E+01;
  COFD[16709] = 5.33531542E+00;
  COFD[16710] = -4.32108265E-01;
  COFD[16711] = 1.69190896E-02;
  COFD[16712] = -2.24063484E+01;
  COFD[16713] = 5.38918452E+00;
  COFD[16714] = -4.41385864E-01;
  COFD[16715] = 1.74122637E-02;
  COFD[16716] = -2.21151417E+01;
  COFD[16717] = 5.13453409E+00;
  COFD[16718] = -3.98022439E-01;
  COFD[16719] = 1.51235760E-02;
  COFD[16720] = -2.21971108E+01;
  COFD[16721] = 5.13453409E+00;
  COFD[16722] = -3.98022439E-01;
  COFD[16723] = 1.51235760E-02;
  COFD[16724] = -2.21535941E+01;
  COFD[16725] = 5.13453409E+00;
  COFD[16726] = -3.98022439E-01;
  COFD[16727] = 1.51235760E-02;
  COFD[16728] = -2.21535941E+01;
  COFD[16729] = 5.13453409E+00;
  COFD[16730] = -3.98022439E-01;
  COFD[16731] = 1.51235760E-02;
  COFD[16732] = -2.24021863E+01;
  COFD[16733] = 5.58364149E+00;
  COFD[16734] = -4.79184111E-01;
  COFD[16735] = 1.95516164E-02;
  COFD[16736] = -2.24018238E+01;
  COFD[16737] = 5.57115285E+00;
  COFD[16738] = -4.76363416E-01;
  COFD[16739] = 1.93814080E-02;
  COFD[16740] = -2.17761813E+01;
  COFD[16741] = 5.49109933E+00;
  COFD[16742] = -4.81352923E-01;
  COFD[16743] = 2.02079312E-02;
  COFD[16744] = -2.03111211E+01;
  COFD[16745] = 5.15740122E+00;
  COFD[16746] = -4.46644818E-01;
  COFD[16747] = 1.90459001E-02;
  COFD[16748] = -2.24087810E+01;
  COFD[16749] = 5.19977664E+00;
  COFD[16750] = -4.08876556E-01;
  COFD[16751] = 1.56887081E-02;
  COFD[16752] = -2.22413267E+01;
  COFD[16753] = 5.23194135E+00;
  COFD[16754] = -4.14377344E-01;
  COFD[16755] = 1.59792638E-02;
  COFD[16756] = -2.22387608E+01;
  COFD[16757] = 5.23194135E+00;
  COFD[16758] = -4.14377344E-01;
  COFD[16759] = 1.59792638E-02;
  COFD[16760] = -2.23616848E+01;
  COFD[16761] = 5.25686144E+00;
  COFD[16762] = -4.18761272E-01;
  COFD[16763] = 1.62145526E-02;
  COFD[16764] = -2.22156232E+01;
  COFD[16765] = 5.15662581E+00;
  COFD[16766] = -4.01695326E-01;
  COFD[16767] = 1.53146065E-02;
  COFD[16768] = -2.23801056E+01;
  COFD[16769] = 5.19977664E+00;
  COFD[16770] = -4.08876556E-01;
  COFD[16771] = 1.56887081E-02;
  COFD[16772] = -2.23781976E+01;
  COFD[16773] = 5.19977664E+00;
  COFD[16774] = -4.08876556E-01;
  COFD[16775] = 1.56887081E-02;
  COFD[16776] = -2.25650323E+01;
  COFD[16777] = 5.24330646E+00;
  COFD[16778] = -4.16370120E-01;
  COFD[16779] = 1.60860486E-02;
  COFD[16780] = -2.25635574E+01;
  COFD[16781] = 5.24330646E+00;
  COFD[16782] = -4.16370120E-01;
  COFD[16783] = 1.60860486E-02;
  COFD[16784] = -2.25635574E+01;
  COFD[16785] = 5.24330646E+00;
  COFD[16786] = -4.16370120E-01;
  COFD[16787] = 1.60860486E-02;
  COFD[16788] = -2.25635574E+01;
  COFD[16789] = 5.24330646E+00;
  COFD[16790] = -4.16370120E-01;
  COFD[16791] = 1.60860486E-02;
  COFD[16792] = -2.25635574E+01;
  COFD[16793] = 5.24330646E+00;
  COFD[16794] = -4.16370120E-01;
  COFD[16795] = 1.60860486E-02;
  COFD[16796] = -2.25527826E+01;
  COFD[16797] = 5.24747886E+00;
  COFD[16798] = -4.17110670E-01;
  COFD[16799] = 1.61259590E-02;
  COFD[16800] = -2.25527826E+01;
  COFD[16801] = 5.24747886E+00;
  COFD[16802] = -4.17110670E-01;
  COFD[16803] = 1.61259590E-02;
  COFD[16804] = -2.19508560E+01;
  COFD[16805] = 4.87914567E+00;
  COFD[16806] = -3.57172857E-01;
  COFD[16807] = 1.30475227E-02;
  COFD[16808] = -2.19508560E+01;
  COFD[16809] = 4.87914567E+00;
  COFD[16810] = -3.57172857E-01;
  COFD[16811] = 1.30475227E-02;
  COFD[16812] = -2.19508560E+01;
  COFD[16813] = 4.87914567E+00;
  COFD[16814] = -3.57172857E-01;
  COFD[16815] = 1.30475227E-02;
  COFD[16816] = -2.19508560E+01;
  COFD[16817] = 4.87914567E+00;
  COFD[16818] = -3.57172857E-01;
  COFD[16819] = 1.30475227E-02;
  COFD[16820] = -2.19508560E+01;
  COFD[16821] = 4.87914567E+00;
  COFD[16822] = -3.57172857E-01;
  COFD[16823] = 1.30475227E-02;
  COFD[16824] = -2.19508560E+01;
  COFD[16825] = 4.87914567E+00;
  COFD[16826] = -3.57172857E-01;
  COFD[16827] = 1.30475227E-02;
  COFD[16828] = -2.19508560E+01;
  COFD[16829] = 4.87914567E+00;
  COFD[16830] = -3.57172857E-01;
  COFD[16831] = 1.30475227E-02;
  COFD[16832] = -2.19508560E+01;
  COFD[16833] = 4.87914567E+00;
  COFD[16834] = -3.57172857E-01;
  COFD[16835] = 1.30475227E-02;
  COFD[16836] = -2.19508560E+01;
  COFD[16837] = 4.87914567E+00;
  COFD[16838] = -3.57172857E-01;
  COFD[16839] = 1.30475227E-02;
  COFD[16840] = -2.19508560E+01;
  COFD[16841] = 4.87914567E+00;
  COFD[16842] = -3.57172857E-01;
  COFD[16843] = 1.30475227E-02;
  COFD[16844] = -2.19508560E+01;
  COFD[16845] = 4.87914567E+00;
  COFD[16846] = -3.57172857E-01;
  COFD[16847] = 1.30475227E-02;
  COFD[16848] = -2.19508560E+01;
  COFD[16849] = 4.87914567E+00;
  COFD[16850] = -3.57172857E-01;
  COFD[16851] = 1.30475227E-02;
  COFD[16852] = -2.18616833E+01;
  COFD[16853] = 4.73247457E+00;
  COFD[16854] = -3.33891954E-01;
  COFD[16855] = 1.18713805E-02;
  COFD[16856] = -2.18616833E+01;
  COFD[16857] = 4.73247457E+00;
  COFD[16858] = -3.33891954E-01;
  COFD[16859] = 1.18713805E-02;
  COFD[16860] = -2.18616833E+01;
  COFD[16861] = 4.73247457E+00;
  COFD[16862] = -3.33891954E-01;
  COFD[16863] = 1.18713805E-02;
  COFD[16864] = -2.18616833E+01;
  COFD[16865] = 4.73247457E+00;
  COFD[16866] = -3.33891954E-01;
  COFD[16867] = 1.18713805E-02;
  COFD[16868] = -2.23076348E+01;
  COFD[16869] = 5.07809524E+00;
  COFD[16870] = -3.88822404E-01;
  COFD[16871] = 1.46503153E-02;
  COFD[16872] = -2.23076348E+01;
  COFD[16873] = 5.07809524E+00;
  COFD[16874] = -3.88822404E-01;
  COFD[16875] = 1.46503153E-02;
  COFD[16876] = -2.18410109E+01;
  COFD[16877] = 4.79752905E+00;
  COFD[16878] = -3.44308429E-01;
  COFD[16879] = 1.23999967E-02;
  COFD[16880] = -2.18410109E+01;
  COFD[16881] = 4.79752905E+00;
  COFD[16882] = -3.44308429E-01;
  COFD[16883] = 1.23999967E-02;
  COFD[16884] = -2.18410109E+01;
  COFD[16885] = 4.79752905E+00;
  COFD[16886] = -3.44308429E-01;
  COFD[16887] = 1.23999967E-02;
  COFD[16888] = -2.18410109E+01;
  COFD[16889] = 4.79752905E+00;
  COFD[16890] = -3.44308429E-01;
  COFD[16891] = 1.23999967E-02;
  COFD[16892] = -1.91796726E+01;
  COFD[16893] = 4.70714822E+00;
  COFD[16894] = -3.94261134E-01;
  COFD[16895] = 1.70175169E-02;
  COFD[16896] = -1.87644855E+01;
  COFD[16897] = 5.19146813E+00;
  COFD[16898] = -4.50340408E-01;
  COFD[16899] = 1.91768178E-02;
  COFD[16900] = -1.47719669E+01;
  COFD[16901] = 3.55444478E+00;
  COFD[16902] = -2.50272707E-01;
  COFD[16903] = 1.09990787E-02;
  COFD[16904] = -1.81463016E+01;
  COFD[16905] = 4.48398491E+00;
  COFD[16906] = -3.67097129E-01;
  COFD[16907] = 1.59123634E-02;
  COFD[16908] = -1.95818930E+01;
  COFD[16909] = 4.84393038E+00;
  COFD[16910] = -4.10274737E-01;
  COFD[16911] = 1.76417458E-02;
  COFD[16912] = -1.81677795E+01;
  COFD[16913] = 4.48398491E+00;
  COFD[16914] = -3.67097129E-01;
  COFD[16915] = 1.59123634E-02;
  COFD[16916] = -2.04357521E+01;
  COFD[16917] = 4.77398686E+00;
  COFD[16918] = -3.40522956E-01;
  COFD[16919] = 1.22072846E-02;
  COFD[16920] = -1.93011339E+01;
  COFD[16921] = 4.74387793E+00;
  COFD[16922] = -3.98574972E-01;
  COFD[16923] = 1.71862289E-02;
  COFD[16924] = -2.14300886E+01;
  COFD[16925] = 5.07680397E+00;
  COFD[16926] = -3.88612087E-01;
  COFD[16927] = 1.46395101E-02;
  COFD[16928] = -2.21630250E+01;
  COFD[16929] = 5.60807471E+00;
  COFD[16930] = -4.91339309E-01;
  COFD[16931] = 2.04365761E-02;
  COFD[16932] = -2.04274458E+01;
  COFD[16933] = 5.18271974E+00;
  COFD[16934] = -4.49323627E-01;
  COFD[16935] = 1.91373940E-02;
  COFD[16936] = -2.03738885E+01;
  COFD[16937] = 5.16159436E+00;
  COFD[16938] = -4.46935283E-01;
  COFD[16939] = 1.90480297E-02;
  COFD[16940] = -1.95903577E+01;
  COFD[16941] = 4.84393038E+00;
  COFD[16942] = -4.10274737E-01;
  COFD[16943] = 1.76417458E-02;
  COFD[16944] = -1.95984537E+01;
  COFD[16945] = 4.84393038E+00;
  COFD[16946] = -4.10274737E-01;
  COFD[16947] = 1.76417458E-02;
  COFD[16948] = -2.14398130E+01;
  COFD[16949] = 5.07680397E+00;
  COFD[16950] = -3.88612087E-01;
  COFD[16951] = 1.46395101E-02;
  COFD[16952] = -2.19104906E+01;
  COFD[16953] = 5.33587903E+00;
  COFD[16954] = -4.32204887E-01;
  COFD[16955] = 1.69242106E-02;
  COFD[16956] = -2.22262145E+01;
  COFD[16957] = 5.61211818E+00;
  COFD[16958] = -4.91432482E-01;
  COFD[16959] = 2.04238731E-02;
  COFD[16960] = -2.19448410E+01;
  COFD[16961] = 5.60255148E+00;
  COFD[16962] = -4.91366572E-01;
  COFD[16963] = 2.04670553E-02;
  COFD[16964] = -2.22165108E+01;
  COFD[16965] = 5.61211818E+00;
  COFD[16966] = -4.91432482E-01;
  COFD[16967] = 2.04238731E-02;
  COFD[16968] = -2.20555947E+01;
  COFD[16969] = 5.59649805E+00;
  COFD[16970] = -4.86750336E-01;
  COFD[16971] = 2.01151498E-02;
  COFD[16972] = -2.20669026E+01;
  COFD[16973] = 5.59649805E+00;
  COFD[16974] = -4.86750336E-01;
  COFD[16975] = 2.01151498E-02;
  COFD[16976] = -2.19526443E+01;
  COFD[16977] = 5.27258289E+00;
  COFD[16978] = -4.21502790E-01;
  COFD[16979] = 1.63611949E-02;
  COFD[16980] = -2.05357363E+01;
  COFD[16981] = 5.23500188E+00;
  COFD[16982] = -4.55417380E-01;
  COFD[16983] = 1.93744255E-02;
  COFD[16984] = -2.19583156E+01;
  COFD[16985] = 5.27258289E+00;
  COFD[16986] = -4.21502790E-01;
  COFD[16987] = 1.63611949E-02;
  COFD[16988] = -2.19583156E+01;
  COFD[16989] = 5.27258289E+00;
  COFD[16990] = -4.21502790E-01;
  COFD[16991] = 1.63611949E-02;
  COFD[16992] = -2.19637879E+01;
  COFD[16993] = 5.27258289E+00;
  COFD[16994] = -4.21502790E-01;
  COFD[16995] = 1.63611949E-02;
  COFD[16996] = -2.23851263E+01;
  COFD[16997] = 5.54890339E+00;
  COFD[16998] = -4.72166228E-01;
  COFD[16999] = 1.91470071E-02;
  COFD[17000] = -2.23931143E+01;
  COFD[17001] = 5.58325398E+00;
  COFD[17002] = -4.79084067E-01;
  COFD[17003] = 1.95452935E-02;
  COFD[17004] = -2.25145389E+01;
  COFD[17005] = 5.49554403E+00;
  COFD[17006] = -4.60936491E-01;
  COFD[17007] = 1.84887572E-02;
  COFD[17008] = -2.25424381E+01;
  COFD[17009] = 5.58482894E+00;
  COFD[17010] = -4.79850522E-01;
  COFD[17011] = 1.96007690E-02;
  COFD[17012] = -2.25028378E+01;
  COFD[17013] = 5.49776513E+00;
  COFD[17014] = -4.61463030E-01;
  COFD[17015] = 1.85209236E-02;
  COFD[17016] = -2.25065779E+01;
  COFD[17017] = 5.49776513E+00;
  COFD[17018] = -4.61463030E-01;
  COFD[17019] = 1.85209236E-02;
  COFD[17020] = -2.26360083E+01;
  COFD[17021] = 5.50023958E+00;
  COFD[17022] = -4.62136179E-01;
  COFD[17023] = 1.85639061E-02;
  COFD[17024] = -2.22272521E+01;
  COFD[17025] = 5.27396115E+00;
  COFD[17026] = -4.21743832E-01;
  COFD[17027] = 1.63741124E-02;
  COFD[17028] = -2.21882949E+01;
  COFD[17029] = 5.27478556E+00;
  COFD[17030] = -4.21888131E-01;
  COFD[17031] = 1.63818487E-02;
  COFD[17032] = -2.22847741E+01;
  COFD[17033] = 5.31274238E+00;
  COFD[17034] = -4.28240794E-01;
  COFD[17035] = 1.67142592E-02;
  COFD[17036] = -2.25890996E+01;
  COFD[17037] = 5.39655717E+00;
  COFD[17038] = -4.42728390E-01;
  COFD[17039] = 1.74857336E-02;
  COFD[17040] = -2.26273081E+01;
  COFD[17041] = 5.42002683E+00;
  COFD[17042] = -4.47111163E-01;
  COFD[17043] = 1.77287360E-02;
  COFD[17044] = -2.19128366E+01;
  COFD[17045] = 5.17305355E+00;
  COFD[17046] = -4.04451717E-01;
  COFD[17047] = 1.54587933E-02;
  COFD[17048] = -2.16722261E+01;
  COFD[17049] = 5.13708607E+00;
  COFD[17050] = -3.98445708E-01;
  COFD[17051] = 1.51455626E-02;
  COFD[17052] = -2.16770084E+01;
  COFD[17053] = 5.13708607E+00;
  COFD[17054] = -3.98445708E-01;
  COFD[17055] = 1.51455626E-02;
  COFD[17056] = -2.20187192E+01;
  COFD[17057] = 5.25283972E+00;
  COFD[17058] = -4.18059393E-01;
  COFD[17059] = 1.61770209E-02;
  COFD[17060] = -2.22836125E+01;
  COFD[17061] = 5.29692971E+00;
  COFD[17062] = -4.25616224E-01;
  COFD[17063] = 1.65776192E-02;
  COFD[17064] = -2.23520739E+01;
  COFD[17065] = 5.35454862E+00;
  COFD[17066] = -4.35406212E-01;
  COFD[17067] = 1.70939045E-02;
  COFD[17068] = -2.20227448E+01;
  COFD[17069] = 5.08417640E+00;
  COFD[17070] = -3.89810534E-01;
  COFD[17071] = 1.47010214E-02;
  COFD[17072] = -2.21019001E+01;
  COFD[17073] = 5.08417640E+00;
  COFD[17074] = -3.89810534E-01;
  COFD[17075] = 1.47010214E-02;
  COFD[17076] = -2.20599325E+01;
  COFD[17077] = 5.08417640E+00;
  COFD[17078] = -3.89810534E-01;
  COFD[17079] = 1.47010214E-02;
  COFD[17080] = -2.20599325E+01;
  COFD[17081] = 5.08417640E+00;
  COFD[17082] = -3.89810534E-01;
  COFD[17083] = 1.47010214E-02;
  COFD[17084] = -2.24018238E+01;
  COFD[17085] = 5.57115285E+00;
  COFD[17086] = -4.76363416E-01;
  COFD[17087] = 1.93814080E-02;
  COFD[17088] = -2.23787966E+01;
  COFD[17089] = 5.54890339E+00;
  COFD[17090] = -4.72166228E-01;
  COFD[17091] = 1.91470071E-02;
  COFD[17092] = -2.18752662E+01;
  COFD[17093] = 5.52126150E+00;
  COFD[17094] = -4.84589774E-01;
  COFD[17095] = 2.03215822E-02;
  COFD[17096] = -2.04021527E+01;
  COFD[17097] = 5.18271974E+00;
  COFD[17098] = -4.49323627E-01;
  COFD[17099] = 1.91373940E-02;
  COFD[17100] = -2.23290522E+01;
  COFD[17101] = 5.15611601E+00;
  COFD[17102] = -4.01609601E-01;
  COFD[17103] = 1.53101184E-02;
  COFD[17104] = -2.21816507E+01;
  COFD[17105] = 5.19585793E+00;
  COFD[17106] = -4.08227614E-01;
  COFD[17107] = 1.56549949E-02;
  COFD[17108] = -2.21791663E+01;
  COFD[17109] = 5.19585793E+00;
  COFD[17110] = -4.08227614E-01;
  COFD[17111] = 1.56549949E-02;
  COFD[17112] = -2.23135223E+01;
  COFD[17113] = 5.22583604E+00;
  COFD[17114] = -4.13310911E-01;
  COFD[17115] = 1.59222338E-02;
  COFD[17116] = -2.21337093E+01;
  COFD[17117] = 5.11134594E+00;
  COFD[17118] = -3.94210281E-01;
  COFD[17119] = 1.49264980E-02;
  COFD[17120] = -2.23013725E+01;
  COFD[17121] = 5.15611601E+00;
  COFD[17122] = -4.01609601E-01;
  COFD[17123] = 1.53101184E-02;
  COFD[17124] = -2.22995288E+01;
  COFD[17125] = 5.15611601E+00;
  COFD[17126] = -4.01609601E-01;
  COFD[17127] = 1.53101184E-02;
  COFD[17128] = -2.25083939E+01;
  COFD[17129] = 5.21003123E+00;
  COFD[17130] = -4.10612564E-01;
  COFD[17131] = 1.57798598E-02;
  COFD[17132] = -2.25069710E+01;
  COFD[17133] = 5.21003123E+00;
  COFD[17134] = -4.10612564E-01;
  COFD[17135] = 1.57798598E-02;
  COFD[17136] = -2.25069710E+01;
  COFD[17137] = 5.21003123E+00;
  COFD[17138] = -4.10612564E-01;
  COFD[17139] = 1.57798598E-02;
  COFD[17140] = -2.25069710E+01;
  COFD[17141] = 5.21003123E+00;
  COFD[17142] = -4.10612564E-01;
  COFD[17143] = 1.57798598E-02;
  COFD[17144] = -2.25069710E+01;
  COFD[17145] = 5.21003123E+00;
  COFD[17146] = -4.10612564E-01;
  COFD[17147] = 1.57798598E-02;
  COFD[17148] = -2.24987495E+01;
  COFD[17149] = 5.21520631E+00;
  COFD[17150] = -4.11491487E-01;
  COFD[17151] = 1.58260843E-02;
  COFD[17152] = -2.24987495E+01;
  COFD[17153] = 5.21520631E+00;
  COFD[17154] = -4.11491487E-01;
  COFD[17155] = 1.58260843E-02;
  COFD[17156] = -2.18242110E+01;
  COFD[17157] = 4.81663452E+00;
  COFD[17158] = -3.47310112E-01;
  COFD[17159] = 1.25507777E-02;
  COFD[17160] = -2.18242110E+01;
  COFD[17161] = 4.81663452E+00;
  COFD[17162] = -3.47310112E-01;
  COFD[17163] = 1.25507777E-02;
  COFD[17164] = -2.18242110E+01;
  COFD[17165] = 4.81663452E+00;
  COFD[17166] = -3.47310112E-01;
  COFD[17167] = 1.25507777E-02;
  COFD[17168] = -2.18242110E+01;
  COFD[17169] = 4.81663452E+00;
  COFD[17170] = -3.47310112E-01;
  COFD[17171] = 1.25507777E-02;
  COFD[17172] = -2.18242110E+01;
  COFD[17173] = 4.81663452E+00;
  COFD[17174] = -3.47310112E-01;
  COFD[17175] = 1.25507777E-02;
  COFD[17176] = -2.18242110E+01;
  COFD[17177] = 4.81663452E+00;
  COFD[17178] = -3.47310112E-01;
  COFD[17179] = 1.25507777E-02;
  COFD[17180] = -2.18242110E+01;
  COFD[17181] = 4.81663452E+00;
  COFD[17182] = -3.47310112E-01;
  COFD[17183] = 1.25507777E-02;
  COFD[17184] = -2.18242110E+01;
  COFD[17185] = 4.81663452E+00;
  COFD[17186] = -3.47310112E-01;
  COFD[17187] = 1.25507777E-02;
  COFD[17188] = -2.18242110E+01;
  COFD[17189] = 4.81663452E+00;
  COFD[17190] = -3.47310112E-01;
  COFD[17191] = 1.25507777E-02;
  COFD[17192] = -2.18242110E+01;
  COFD[17193] = 4.81663452E+00;
  COFD[17194] = -3.47310112E-01;
  COFD[17195] = 1.25507777E-02;
  COFD[17196] = -2.18242110E+01;
  COFD[17197] = 4.81663452E+00;
  COFD[17198] = -3.47310112E-01;
  COFD[17199] = 1.25507777E-02;
  COFD[17200] = -2.18242110E+01;
  COFD[17201] = 4.81663452E+00;
  COFD[17202] = -3.47310112E-01;
  COFD[17203] = 1.25507777E-02;
  COFD[17204] = -2.17361612E+01;
  COFD[17205] = 4.67107646E+00;
  COFD[17206] = -3.24176152E-01;
  COFD[17207] = 1.13816368E-02;
  COFD[17208] = -2.17361612E+01;
  COFD[17209] = 4.67107646E+00;
  COFD[17210] = -3.24176152E-01;
  COFD[17211] = 1.13816368E-02;
  COFD[17212] = -2.17361612E+01;
  COFD[17213] = 4.67107646E+00;
  COFD[17214] = -3.24176152E-01;
  COFD[17215] = 1.13816368E-02;
  COFD[17216] = -2.17361612E+01;
  COFD[17217] = 4.67107646E+00;
  COFD[17218] = -3.24176152E-01;
  COFD[17219] = 1.13816368E-02;
  COFD[17220] = -2.22075117E+01;
  COFD[17221] = 5.02646284E+00;
  COFD[17222] = -3.80470432E-01;
  COFD[17223] = 1.42230195E-02;
  COFD[17224] = -2.22075117E+01;
  COFD[17225] = 5.02646284E+00;
  COFD[17226] = -3.80470432E-01;
  COFD[17227] = 1.42230195E-02;
  COFD[17228] = -2.17342699E+01;
  COFD[17229] = 4.74371045E+00;
  COFD[17230] = -3.35675372E-01;
  COFD[17231] = 1.19614146E-02;
  COFD[17232] = -2.17342699E+01;
  COFD[17233] = 4.74371045E+00;
  COFD[17234] = -3.35675372E-01;
  COFD[17235] = 1.19614146E-02;
  COFD[17236] = -2.17342699E+01;
  COFD[17237] = 4.74371045E+00;
  COFD[17238] = -3.35675372E-01;
  COFD[17239] = 1.19614146E-02;
  COFD[17240] = -2.17342699E+01;
  COFD[17241] = 4.74371045E+00;
  COFD[17242] = -3.35675372E-01;
  COFD[17243] = 1.19614146E-02;
  COFD[17244] = -1.92731125E+01;
  COFD[17245] = 4.73660584E+00;
  COFD[17246] = -3.97704978E-01;
  COFD[17247] = 1.71514887E-02;
  COFD[17248] = -1.72291553E+01;
  COFD[17249] = 4.69060745E+00;
  COFD[17250] = -3.92369888E-01;
  COFD[17251] = 1.69459661E-02;
  COFD[17252] = -1.34824685E+01;
  COFD[17253] = 3.09379603E+00;
  COFD[17254] = -1.91268635E-01;
  COFD[17255] = 8.47480224E-03;
  COFD[17256] = -1.66128254E+01;
  COFD[17257] = 3.95035840E+00;
  COFD[17258] = -3.00959418E-01;
  COFD[17259] = 1.31692593E-02;
  COFD[17260] = -1.79790942E+01;
  COFD[17261] = 4.29613154E+00;
  COFD[17262] = -3.44012526E-01;
  COFD[17263] = 1.49643715E-02;
  COFD[17264] = -1.66341357E+01;
  COFD[17265] = 3.95035840E+00;
  COFD[17266] = -3.00959418E-01;
  COFD[17267] = 1.31692593E-02;
  COFD[17268] = -2.15787007E+01;
  COFD[17269] = 5.46737673E+00;
  COFD[17270] = -4.55696085E-01;
  COFD[17271] = 1.81982625E-02;
  COFD[17272] = -1.77178793E+01;
  COFD[17273] = 4.19935698E+00;
  COFD[17274] = -3.32310212E-01;
  COFD[17275] = 1.44920670E-02;
  COFD[17276] = -2.20866182E+01;
  COFD[17277] = 5.55935694E+00;
  COFD[17278] = -4.74154740E-01;
  COFD[17279] = 1.92584304E-02;
  COFD[17280] = -2.10296520E+01;
  COFD[17281] = 5.30153901E+00;
  COFD[17282] = -4.63335119E-01;
  COFD[17283] = 1.96897053E-02;
  COFD[17284] = -1.89077767E+01;
  COFD[17285] = 4.68393046E+00;
  COFD[17286] = -3.91610863E-01;
  COFD[17287] = 1.69174645E-02;
  COFD[17288] = -1.88538428E+01;
  COFD[17289] = 4.66162351E+00;
  COFD[17290] = -3.88920477E-01;
  COFD[17291] = 1.68089648E-02;
  COFD[17292] = -1.79874583E+01;
  COFD[17293] = 4.29613154E+00;
  COFD[17294] = -3.44012526E-01;
  COFD[17295] = 1.49643715E-02;
  COFD[17296] = -1.79954565E+01;
  COFD[17297] = 4.29613154E+00;
  COFD[17298] = -3.44012526E-01;
  COFD[17299] = 1.49643715E-02;
  COFD[17300] = -2.20962329E+01;
  COFD[17301] = 5.55935694E+00;
  COFD[17302] = -4.74154740E-01;
  COFD[17303] = 1.92584304E-02;
  COFD[17304] = -2.20433279E+01;
  COFD[17305] = 5.59157589E+00;
  COFD[17306] = -4.85617912E-01;
  COFD[17307] = 2.00461138E-02;
  COFD[17308] = -2.11349417E+01;
  COFD[17309] = 5.32202066E+00;
  COFD[17310] = -4.65780334E-01;
  COFD[17311] = 1.97876377E-02;
  COFD[17312] = -2.07415192E+01;
  COFD[17313] = 5.26552592E+00;
  COFD[17314] = -4.58996898E-01;
  COFD[17315] = 1.95145314E-02;
  COFD[17316] = -2.11253475E+01;
  COFD[17317] = 5.32202066E+00;
  COFD[17318] = -4.65780334E-01;
  COFD[17319] = 1.97876377E-02;
  COFD[17320] = -2.11069990E+01;
  COFD[17321] = 5.37047121E+00;
  COFD[17322] = -4.70282612E-01;
  COFD[17323] = 1.99109322E-02;
  COFD[17324] = -2.11181869E+01;
  COFD[17325] = 5.37047121E+00;
  COFD[17326] = -4.70282612E-01;
  COFD[17327] = 1.99109322E-02;
  COFD[17328] = -2.22149397E+01;
  COFD[17329] = 5.58360799E+00;
  COFD[17330] = -4.82701436E-01;
  COFD[17331] = 1.98437922E-02;
  COFD[17332] = -1.89718901E+01;
  COFD[17333] = 4.72476764E+00;
  COFD[17334] = -3.96306836E-01;
  COFD[17335] = 1.70964541E-02;
  COFD[17336] = -2.22205337E+01;
  COFD[17337] = 5.58360799E+00;
  COFD[17338] = -4.82701436E-01;
  COFD[17339] = 1.98437922E-02;
  COFD[17340] = -2.22205337E+01;
  COFD[17341] = 5.58360799E+00;
  COFD[17342] = -4.82701436E-01;
  COFD[17343] = 1.98437922E-02;
  COFD[17344] = -2.22259307E+01;
  COFD[17345] = 5.58360799E+00;
  COFD[17346] = -4.82701436E-01;
  COFD[17347] = 1.98437922E-02;
  COFD[17348] = -2.18815126E+01;
  COFD[17349] = 5.52126150E+00;
  COFD[17350] = -4.84589774E-01;
  COFD[17351] = 2.03215822E-02;
  COFD[17352] = -2.16647394E+01;
  COFD[17353] = 5.45895254E+00;
  COFD[17354] = -4.77778067E-01;
  COFD[17355] = 2.00763518E-02;
  COFD[17356] = -2.22948665E+01;
  COFD[17357] = 5.59185582E+00;
  COFD[17358] = -4.91155812E-01;
  COFD[17359] = 2.05043018E-02;
  COFD[17360] = -2.17764608E+01;
  COFD[17361] = 5.44261208E+00;
  COFD[17362] = -4.75976721E-01;
  COFD[17363] = 2.00107428E-02;
  COFD[17364] = -2.22685190E+01;
  COFD[17365] = 5.58776204E+00;
  COFD[17366] = -4.90769522E-01;
  COFD[17367] = 2.04931464E-02;
  COFD[17368] = -2.22722017E+01;
  COFD[17369] = 5.58776204E+00;
  COFD[17370] = -4.90769522E-01;
  COFD[17371] = 2.04931464E-02;
  COFD[17372] = -2.23840649E+01;
  COFD[17373] = 5.58123742E+00;
  COFD[17374] = -4.90135630E-01;
  COFD[17375] = 2.04738180E-02;
  COFD[17376] = -2.24896461E+01;
  COFD[17377] = 5.58348195E+00;
  COFD[17378] = -4.82730334E-01;
  COFD[17379] = 1.98468625E-02;
  COFD[17380] = -2.24475991E+01;
  COFD[17381] = 5.58340344E+00;
  COFD[17382] = -4.82747296E-01;
  COFD[17383] = 1.98486881E-02;
  COFD[17384] = -2.24622995E+01;
  COFD[17385] = 5.58582857E+00;
  COFD[17386] = -4.84085296E-01;
  COFD[17387] = 1.99478862E-02;
  COFD[17388] = -2.26361359E+01;
  COFD[17389] = 5.61137362E+00;
  COFD[17390] = -4.90253090E-01;
  COFD[17391] = 2.03300559E-02;
  COFD[17392] = -2.26249622E+01;
  COFD[17393] = 5.61234946E+00;
  COFD[17394] = -4.91326412E-01;
  COFD[17395] = 2.04139363E-02;
  COFD[17396] = -2.24098565E+01;
  COFD[17397] = 5.58471203E+00;
  COFD[17398] = -4.79905311E-01;
  COFD[17399] = 1.96058913E-02;
  COFD[17400] = -2.22394909E+01;
  COFD[17401] = 5.58129885E+00;
  COFD[17402] = -4.78532921E-01;
  COFD[17403] = 1.95095699E-02;
  COFD[17404] = -2.22442047E+01;
  COFD[17405] = 5.58129885E+00;
  COFD[17406] = -4.78532921E-01;
  COFD[17407] = 1.95095699E-02;
  COFD[17408] = -2.23289013E+01;
  COFD[17409] = 5.58459109E+00;
  COFD[17410] = -4.82193396E-01;
  COFD[17411] = 1.97964436E-02;
  COFD[17412] = -2.24921773E+01;
  COFD[17413] = 5.58306898E+00;
  COFD[17414] = -4.83300955E-01;
  COFD[17415] = 1.98966944E-02;
  COFD[17416] = -2.24605749E+01;
  COFD[17417] = 5.59786454E+00;
  COFD[17418] = -4.87064086E-01;
  COFD[17419] = 2.01342566E-02;
  COFD[17420] = -2.26757132E+01;
  COFD[17421] = 5.56278679E+00;
  COFD[17422] = -4.74794778E-01;
  COFD[17423] = 1.92940001E-02;
  COFD[17424] = -2.27534287E+01;
  COFD[17425] = 5.56278679E+00;
  COFD[17426] = -4.74794778E-01;
  COFD[17427] = 1.92940001E-02;
  COFD[17428] = -2.27122523E+01;
  COFD[17429] = 5.56278679E+00;
  COFD[17430] = -4.74794778E-01;
  COFD[17431] = 1.92940001E-02;
  COFD[17432] = -2.27122523E+01;
  COFD[17433] = 5.56278679E+00;
  COFD[17434] = -4.74794778E-01;
  COFD[17435] = 1.92940001E-02;
  COFD[17436] = -2.17761813E+01;
  COFD[17437] = 5.49109933E+00;
  COFD[17438] = -4.81352923E-01;
  COFD[17439] = 2.02079312E-02;
  COFD[17440] = -2.18752662E+01;
  COFD[17441] = 5.52126150E+00;
  COFD[17442] = -4.84589774E-01;
  COFD[17443] = 2.03215822E-02;
  COFD[17444] = -2.05663507E+01;
  COFD[17445] = 5.13263469E+00;
  COFD[17446] = -4.44457285E-01;
  COFD[17447] = 1.89932102E-02;
  COFD[17448] = -1.88826640E+01;
  COFD[17449] = 4.68393046E+00;
  COFD[17450] = -3.91610863E-01;
  COFD[17451] = 1.69174645E-02;
  COFD[17452] = -2.28687913E+01;
  COFD[17453] = 5.58482883E+00;
  COFD[17454] = -4.79495567E-01;
  COFD[17455] = 1.95713974E-02;
  COFD[17456] = -2.26287967E+01;
  COFD[17457] = 5.58517679E+00;
  COFD[17458] = -4.80491448E-01;
  COFD[17459] = 1.96521251E-02;
  COFD[17460] = -2.26263542E+01;
  COFD[17461] = 5.58517679E+00;
  COFD[17462] = -4.80491448E-01;
  COFD[17463] = 1.96521251E-02;
  COFD[17464] = -2.26928946E+01;
  COFD[17465] = 5.58514157E+00;
  COFD[17466] = -4.81334532E-01;
  COFD[17467] = 1.97222349E-02;
  COFD[17468] = -2.27502527E+01;
  COFD[17469] = 5.57403120E+00;
  COFD[17470] = -4.76929446E-01;
  COFD[17471] = 1.94136814E-02;
  COFD[17472] = -2.28416208E+01;
  COFD[17473] = 5.58482883E+00;
  COFD[17474] = -4.79495567E-01;
  COFD[17475] = 1.95713974E-02;
  COFD[17476] = -2.28398100E+01;
  COFD[17477] = 5.58482883E+00;
  COFD[17478] = -4.79495567E-01;
  COFD[17479] = 1.95713974E-02;
  COFD[17480] = -2.29268152E+01;
  COFD[17481] = 5.58520405E+00;
  COFD[17482] = -4.80873447E-01;
  COFD[17483] = 1.96836519E-02;
  COFD[17484] = -2.29254189E+01;
  COFD[17485] = 5.58520405E+00;
  COFD[17486] = -4.80873447E-01;
  COFD[17487] = 1.96836519E-02;
  COFD[17488] = -2.29254189E+01;
  COFD[17489] = 5.58520405E+00;
  COFD[17490] = -4.80873447E-01;
  COFD[17491] = 1.96836519E-02;
  COFD[17492] = -2.29254189E+01;
  COFD[17493] = 5.58520405E+00;
  COFD[17494] = -4.80873447E-01;
  COFD[17495] = 1.96836519E-02;
  COFD[17496] = -2.29254189E+01;
  COFD[17497] = 5.58520405E+00;
  COFD[17498] = -4.80873447E-01;
  COFD[17499] = 1.96836519E-02;
  COFD[17500] = -2.29049549E+01;
  COFD[17501] = 5.58521484E+00;
  COFD[17502] = -4.81024184E-01;
  COFD[17503] = 1.96960920E-02;
  COFD[17504] = -2.29049549E+01;
  COFD[17505] = 5.58521484E+00;
  COFD[17506] = -4.81024184E-01;
  COFD[17507] = 1.96960920E-02;
  COFD[17508] = -2.29275994E+01;
  COFD[17509] = 5.48746342E+00;
  COFD[17510] = -4.59361316E-01;
  COFD[17511] = 1.83995990E-02;
  COFD[17512] = -2.29275994E+01;
  COFD[17513] = 5.48746342E+00;
  COFD[17514] = -4.59361316E-01;
  COFD[17515] = 1.83995990E-02;
  COFD[17516] = -2.29275994E+01;
  COFD[17517] = 5.48746342E+00;
  COFD[17518] = -4.59361316E-01;
  COFD[17519] = 1.83995990E-02;
  COFD[17520] = -2.29275994E+01;
  COFD[17521] = 5.48746342E+00;
  COFD[17522] = -4.59361316E-01;
  COFD[17523] = 1.83995990E-02;
  COFD[17524] = -2.29275994E+01;
  COFD[17525] = 5.48746342E+00;
  COFD[17526] = -4.59361316E-01;
  COFD[17527] = 1.83995990E-02;
  COFD[17528] = -2.29275994E+01;
  COFD[17529] = 5.48746342E+00;
  COFD[17530] = -4.59361316E-01;
  COFD[17531] = 1.83995990E-02;
  COFD[17532] = -2.29275994E+01;
  COFD[17533] = 5.48746342E+00;
  COFD[17534] = -4.59361316E-01;
  COFD[17535] = 1.83995990E-02;
  COFD[17536] = -2.29275994E+01;
  COFD[17537] = 5.48746342E+00;
  COFD[17538] = -4.59361316E-01;
  COFD[17539] = 1.83995990E-02;
  COFD[17540] = -2.29275994E+01;
  COFD[17541] = 5.48746342E+00;
  COFD[17542] = -4.59361316E-01;
  COFD[17543] = 1.83995990E-02;
  COFD[17544] = -2.29275994E+01;
  COFD[17545] = 5.48746342E+00;
  COFD[17546] = -4.59361316E-01;
  COFD[17547] = 1.83995990E-02;
  COFD[17548] = -2.29275994E+01;
  COFD[17549] = 5.48746342E+00;
  COFD[17550] = -4.59361316E-01;
  COFD[17551] = 1.83995990E-02;
  COFD[17552] = -2.29275994E+01;
  COFD[17553] = 5.48746342E+00;
  COFD[17554] = -4.59361316E-01;
  COFD[17555] = 1.83995990E-02;
  COFD[17556] = -2.30241544E+01;
  COFD[17557] = 5.41936555E+00;
  COFD[17558] = -4.46990587E-01;
  COFD[17559] = 1.77221311E-02;
  COFD[17560] = -2.30241544E+01;
  COFD[17561] = 5.41936555E+00;
  COFD[17562] = -4.46990587E-01;
  COFD[17563] = 1.77221311E-02;
  COFD[17564] = -2.30241544E+01;
  COFD[17565] = 5.41936555E+00;
  COFD[17566] = -4.46990587E-01;
  COFD[17567] = 1.77221311E-02;
  COFD[17568] = -2.30241544E+01;
  COFD[17569] = 5.41936555E+00;
  COFD[17570] = -4.46990587E-01;
  COFD[17571] = 1.77221311E-02;
  COFD[17572] = -2.29410328E+01;
  COFD[17573] = 5.53878463E+00;
  COFD[17574] = -4.70234020E-01;
  COFD[17575] = 1.90385995E-02;
  COFD[17576] = -2.29410328E+01;
  COFD[17577] = 5.53878463E+00;
  COFD[17578] = -4.70234020E-01;
  COFD[17579] = 1.90385995E-02;
  COFD[17580] = -2.29274321E+01;
  COFD[17581] = 5.45232880E+00;
  COFD[17582] = -4.52947326E-01;
  COFD[17583] = 1.80473045E-02;
  COFD[17584] = -2.29274321E+01;
  COFD[17585] = 5.45232880E+00;
  COFD[17586] = -4.52947326E-01;
  COFD[17587] = 1.80473045E-02;
  COFD[17588] = -2.29274321E+01;
  COFD[17589] = 5.45232880E+00;
  COFD[17590] = -4.52947326E-01;
  COFD[17591] = 1.80473045E-02;
  COFD[17592] = -2.29274321E+01;
  COFD[17593] = 5.45232880E+00;
  COFD[17594] = -4.52947326E-01;
  COFD[17595] = 1.80473045E-02;
  COFD[17596] = -1.76895351E+01;
  COFD[17597] = 4.19171952E+00;
  COFD[17598] = -3.31354810E-01;
  COFD[17599] = 1.44520623E-02;
  COFD[17600] = -1.57972520E+01;
  COFD[17601] = 4.22225052E+00;
  COFD[17602] = -3.35156428E-01;
  COFD[17603] = 1.46104855E-02;
  COFD[17604] = -1.25099100E+01;
  COFD[17605] = 2.77873601E+00;
  COFD[17606] = -1.50637360E-01;
  COFD[17607] = 6.72684281E-03;
  COFD[17608] = -1.50584188E+01;
  COFD[17609] = 3.47945612E+00;
  COFD[17610] = -2.40703722E-01;
  COFD[17611] = 1.05907441E-02;
  COFD[17612] = -1.63254645E+01;
  COFD[17613] = 3.82388595E+00;
  COFD[17614] = -2.84480724E-01;
  COFD[17615] = 1.24506311E-02;
  COFD[17616] = -1.50724583E+01;
  COFD[17617] = 3.47945612E+00;
  COFD[17618] = -2.40703722E-01;
  COFD[17619] = 1.05907441E-02;
  COFD[17620] = -2.12639169E+01;
  COFD[17621] = 5.61184117E+00;
  COFD[17622] = -4.90532156E-01;
  COFD[17623] = 2.03507922E-02;
  COFD[17624] = -1.59634493E+01;
  COFD[17625] = 3.67388294E+00;
  COFD[17626] = -2.64990709E-01;
  COFD[17627] = 1.16042706E-02;
  COFD[17628] = -2.14160667E+01;
  COFD[17629] = 5.56531152E+00;
  COFD[17630] = -4.88789821E-01;
  COFD[17631] = 2.04437116E-02;
  COFD[17632] = -1.93015519E+01;
  COFD[17633] = 4.85015581E+00;
  COFD[17634] = -4.10945109E-01;
  COFD[17635] = 1.76651398E-02;
  COFD[17636] = -1.73198022E+01;
  COFD[17637] = 4.21416723E+00;
  COFD[17638] = -3.34163932E-01;
  COFD[17639] = 1.45697432E-02;
  COFD[17640] = -1.72556722E+01;
  COFD[17641] = 4.19029808E+00;
  COFD[17642] = -3.31177076E-01;
  COFD[17643] = 1.44446234E-02;
  COFD[17644] = -1.63301401E+01;
  COFD[17645] = 3.82388595E+00;
  COFD[17646] = -2.84480724E-01;
  COFD[17647] = 1.24506311E-02;
  COFD[17648] = -1.63345789E+01;
  COFD[17649] = 3.82388595E+00;
  COFD[17650] = -2.84480724E-01;
  COFD[17651] = 1.24506311E-02;
  COFD[17652] = -2.14215667E+01;
  COFD[17653] = 5.56531152E+00;
  COFD[17654] = -4.88789821E-01;
  COFD[17655] = 2.04437116E-02;
  COFD[17656] = -2.09376165E+01;
  COFD[17657] = 5.40870099E+00;
  COFD[17658] = -4.73017610E-01;
  COFD[17659] = 1.99399066E-02;
  COFD[17660] = -1.94585097E+01;
  COFD[17661] = 4.87180830E+00;
  COFD[17662] = -4.13582958E-01;
  COFD[17663] = 1.77726094E-02;
  COFD[17664] = -1.90996777E+01;
  COFD[17665] = 4.82869066E+00;
  COFD[17666] = -4.08564514E-01;
  COFD[17667] = 1.75784675E-02;
  COFD[17668] = -1.94530234E+01;
  COFD[17669] = 4.87180830E+00;
  COFD[17670] = -4.13582958E-01;
  COFD[17671] = 1.77726094E-02;
  COFD[17672] = -1.95548207E+01;
  COFD[17673] = 4.97133070E+00;
  COFD[17674] = -4.25604177E-01;
  COFD[17675] = 1.82582594E-02;
  COFD[17676] = -1.95613879E+01;
  COFD[17677] = 4.97133070E+00;
  COFD[17678] = -4.25604177E-01;
  COFD[17679] = 1.82582594E-02;
  COFD[17680] = -2.11349057E+01;
  COFD[17681] = 5.42846112E+00;
  COFD[17682] = -4.74321870E-01;
  COFD[17683] = 1.99459749E-02;
  COFD[17684] = -1.72572011E+01;
  COFD[17685] = 4.26063341E+00;
  COFD[17686] = -3.39848064E-01;
  COFD[17687] = 1.48021313E-02;
  COFD[17688] = -2.11378438E+01;
  COFD[17689] = 5.42846112E+00;
  COFD[17690] = -4.74321870E-01;
  COFD[17691] = 1.99459749E-02;
  COFD[17692] = -2.11378438E+01;
  COFD[17693] = 5.42846112E+00;
  COFD[17694] = -4.74321870E-01;
  COFD[17695] = 1.99459749E-02;
  COFD[17696] = -2.11406636E+01;
  COFD[17697] = 5.42846112E+00;
  COFD[17698] = -4.74321870E-01;
  COFD[17699] = 1.99459749E-02;
  COFD[17700] = -2.04054879E+01;
  COFD[17701] = 5.18271974E+00;
  COFD[17702] = -4.49323627E-01;
  COFD[17703] = 1.91373940E-02;
  COFD[17704] = -2.02434420E+01;
  COFD[17705] = 5.14418672E+00;
  COFD[17706] = -4.45631004E-01;
  COFD[17707] = 1.90308403E-02;
  COFD[17708] = -2.09217000E+01;
  COFD[17709] = 5.31360223E+00;
  COFD[17710] = -4.64787000E-01;
  COFD[17711] = 1.97483720E-02;
  COFD[17712] = -2.03711770E+01;
  COFD[17713] = 5.13279789E+00;
  COFD[17714] = -4.44474174E-01;
  COFD[17715] = 1.89937678E-02;
  COFD[17716] = -2.08833651E+01;
  COFD[17717] = 5.30526648E+00;
  COFD[17718] = -4.63785596E-01;
  COFD[17719] = 1.97079873E-02;
  COFD[17720] = -2.08851911E+01;
  COFD[17721] = 5.30526648E+00;
  COFD[17722] = -4.63785596E-01;
  COFD[17723] = 1.97079873E-02;
  COFD[17724] = -2.09847759E+01;
  COFD[17725] = 5.29210705E+00;
  COFD[17726] = -4.62193217E-01;
  COFD[17727] = 1.96432872E-02;
  COFD[17728] = -2.13811476E+01;
  COFD[17729] = 5.42683934E+00;
  COFD[17730] = -4.74132648E-01;
  COFD[17731] = 1.99385896E-02;
  COFD[17732] = -2.13337515E+01;
  COFD[17733] = 5.42586215E+00;
  COFD[17734] = -4.74018491E-01;
  COFD[17735] = 1.99341267E-02;
  COFD[17736] = -2.13254615E+01;
  COFD[17737] = 5.41551978E+00;
  COFD[17738] = -4.73373960E-01;
  COFD[17739] = 1.99340216E-02;
  COFD[17740] = -2.13616785E+01;
  COFD[17741] = 5.38519776E+00;
  COFD[17742] = -4.71344997E-01;
  COFD[17743] = 1.99226932E-02;
  COFD[17744] = -2.13171664E+01;
  COFD[17745] = 5.37197338E+00;
  COFD[17746] = -4.70392872E-01;
  COFD[17747] = 1.99122802E-02;
  COFD[17748] = -2.15326336E+01;
  COFD[17749] = 5.51982454E+00;
  COFD[17750] = -4.84452039E-01;
  COFD[17751] = 2.03175522E-02;
  COFD[17752] = -2.14048951E+01;
  COFD[17753] = 5.54007827E+00;
  COFD[17754] = -4.86434511E-01;
  COFD[17755] = 2.03779006E-02;
  COFD[17756] = -2.14073109E+01;
  COFD[17757] = 5.54007827E+00;
  COFD[17758] = -4.86434511E-01;
  COFD[17759] = 2.03779006E-02;
  COFD[17760] = -2.12692883E+01;
  COFD[17761] = 5.45075440E+00;
  COFD[17762] = -4.76902219E-01;
  COFD[17763] = 2.00457833E-02;
  COFD[17764] = -2.13694391E+01;
  COFD[17765] = 5.41821077E+00;
  COFD[17766] = -4.73430049E-01;
  COFD[17767] = 1.99247102E-02;
  COFD[17768] = -2.12684290E+01;
  COFD[17769] = 5.40206122E+00;
  COFD[17770] = -4.72555229E-01;
  COFD[17771] = 1.99358199E-02;
  COFD[17772] = -2.19080961E+01;
  COFD[17773] = 5.56282156E+00;
  COFD[17774] = -4.88585679E-01;
  COFD[17775] = 2.04395879E-02;
  COFD[17776] = -2.19433317E+01;
  COFD[17777] = 5.56282156E+00;
  COFD[17778] = -4.88585679E-01;
  COFD[17779] = 2.04395879E-02;
  COFD[17780] = -2.19250355E+01;
  COFD[17781] = 5.56282156E+00;
  COFD[17782] = -4.88585679E-01;
  COFD[17783] = 2.04395879E-02;
  COFD[17784] = -2.19250355E+01;
  COFD[17785] = 5.56282156E+00;
  COFD[17786] = -4.88585679E-01;
  COFD[17787] = 2.04395879E-02;
  COFD[17788] = -2.03111211E+01;
  COFD[17789] = 5.15740122E+00;
  COFD[17790] = -4.46644818E-01;
  COFD[17791] = 1.90459001E-02;
  COFD[17792] = -2.04021527E+01;
  COFD[17793] = 5.18271974E+00;
  COFD[17794] = -4.49323627E-01;
  COFD[17795] = 1.91373940E-02;
  COFD[17796] = -1.88826640E+01;
  COFD[17797] = 4.68393046E+00;
  COFD[17798] = -3.91610863E-01;
  COFD[17799] = 1.69174645E-02;
  COFD[17800] = -1.73027539E+01;
  COFD[17801] = 4.21416723E+00;
  COFD[17802] = -3.34163932E-01;
  COFD[17803] = 1.45697432E-02;
  COFD[17804] = -2.19459729E+01;
  COFD[17805] = 5.52955285E+00;
  COFD[17806] = -4.85397307E-01;
  COFD[17807] = 2.03459361E-02;
  COFD[17808] = -2.16733507E+01;
  COFD[17809] = 5.50491679E+00;
  COFD[17810] = -4.82850225E-01;
  COFD[17811] = 2.02611393E-02;
  COFD[17812] = -2.16721977E+01;
  COFD[17813] = 5.50491679E+00;
  COFD[17814] = -4.82850225E-01;
  COFD[17815] = 2.02611393E-02;
  COFD[17816] = -2.16815439E+01;
  COFD[17817] = 5.47889399E+00;
  COFD[17818] = -4.80005330E-01;
  COFD[17819] = 2.01587979E-02;
  COFD[17820] = -2.19207334E+01;
  COFD[17821] = 5.55357103E+00;
  COFD[17822] = -4.87792313E-01;
  COFD[17823] = 2.04213096E-02;
  COFD[17824] = -2.19337369E+01;
  COFD[17825] = 5.52955285E+00;
  COFD[17826] = -4.85397307E-01;
  COFD[17827] = 2.03459361E-02;
  COFD[17828] = -2.19329084E+01;
  COFD[17829] = 5.52955285E+00;
  COFD[17830] = -4.85397307E-01;
  COFD[17831] = 2.03459361E-02;
  COFD[17832] = -2.19254467E+01;
  COFD[17833] = 5.49350509E+00;
  COFD[17834] = -4.81613405E-01;
  COFD[17835] = 2.02171734E-02;
  COFD[17836] = -2.19248232E+01;
  COFD[17837] = 5.49350509E+00;
  COFD[17838] = -4.81613405E-01;
  COFD[17839] = 2.02171734E-02;
  COFD[17840] = -2.19248232E+01;
  COFD[17841] = 5.49350509E+00;
  COFD[17842] = -4.81613405E-01;
  COFD[17843] = 2.02171734E-02;
  COFD[17844] = -2.19248232E+01;
  COFD[17845] = 5.49350509E+00;
  COFD[17846] = -4.81613405E-01;
  COFD[17847] = 2.02171734E-02;
  COFD[17848] = -2.19248232E+01;
  COFD[17849] = 5.49350509E+00;
  COFD[17850] = -4.81613405E-01;
  COFD[17851] = 2.02171734E-02;
  COFD[17852] = -2.18941393E+01;
  COFD[17853] = 5.48897495E+00;
  COFD[17854] = -4.81122233E-01;
  COFD[17855] = 2.01997134E-02;
  COFD[17856] = -2.18941393E+01;
  COFD[17857] = 5.48897495E+00;
  COFD[17858] = -4.81122233E-01;
  COFD[17859] = 2.01997134E-02;
  COFD[17860] = -2.23998269E+01;
  COFD[17861] = 5.61234798E+00;
  COFD[17862] = -4.91297356E-01;
  COFD[17863] = 2.04115425E-02;
  COFD[17864] = -2.23998269E+01;
  COFD[17865] = 5.61234798E+00;
  COFD[17866] = -4.91297356E-01;
  COFD[17867] = 2.04115425E-02;
  COFD[17868] = -2.23998269E+01;
  COFD[17869] = 5.61234798E+00;
  COFD[17870] = -4.91297356E-01;
  COFD[17871] = 2.04115425E-02;
  COFD[17872] = -2.23998269E+01;
  COFD[17873] = 5.61234798E+00;
  COFD[17874] = -4.91297356E-01;
  COFD[17875] = 2.04115425E-02;
  COFD[17876] = -2.23998269E+01;
  COFD[17877] = 5.61234798E+00;
  COFD[17878] = -4.91297356E-01;
  COFD[17879] = 2.04115425E-02;
  COFD[17880] = -2.23998269E+01;
  COFD[17881] = 5.61234798E+00;
  COFD[17882] = -4.91297356E-01;
  COFD[17883] = 2.04115425E-02;
  COFD[17884] = -2.23998269E+01;
  COFD[17885] = 5.61234798E+00;
  COFD[17886] = -4.91297356E-01;
  COFD[17887] = 2.04115425E-02;
  COFD[17888] = -2.23998269E+01;
  COFD[17889] = 5.61234798E+00;
  COFD[17890] = -4.91297356E-01;
  COFD[17891] = 2.04115425E-02;
  COFD[17892] = -2.23998269E+01;
  COFD[17893] = 5.61234798E+00;
  COFD[17894] = -4.91297356E-01;
  COFD[17895] = 2.04115425E-02;
  COFD[17896] = -2.23998269E+01;
  COFD[17897] = 5.61234798E+00;
  COFD[17898] = -4.91297356E-01;
  COFD[17899] = 2.04115425E-02;
  COFD[17900] = -2.23998269E+01;
  COFD[17901] = 5.61234798E+00;
  COFD[17902] = -4.91297356E-01;
  COFD[17903] = 2.04115425E-02;
  COFD[17904] = -2.23998269E+01;
  COFD[17905] = 5.61234798E+00;
  COFD[17906] = -4.91297356E-01;
  COFD[17907] = 2.04115425E-02;
  COFD[17908] = -2.25995201E+01;
  COFD[17909] = 5.59491496E+00;
  COFD[17910] = -4.86385698E-01;
  COFD[17911] = 2.00929177E-02;
  COFD[17912] = -2.25995201E+01;
  COFD[17913] = 5.59491496E+00;
  COFD[17914] = -4.86385698E-01;
  COFD[17915] = 2.00929177E-02;
  COFD[17916] = -2.25995201E+01;
  COFD[17917] = 5.59491496E+00;
  COFD[17918] = -4.86385698E-01;
  COFD[17919] = 2.00929177E-02;
  COFD[17920] = -2.25995201E+01;
  COFD[17921] = 5.59491496E+00;
  COFD[17922] = -4.86385698E-01;
  COFD[17923] = 2.00929177E-02;
  COFD[17924] = -2.22414269E+01;
  COFD[17925] = 5.58214764E+00;
  COFD[17926] = -4.90223617E-01;
  COFD[17927] = 2.04764777E-02;
  COFD[17928] = -2.22414269E+01;
  COFD[17929] = 5.58214764E+00;
  COFD[17930] = -4.90223617E-01;
  COFD[17931] = 2.04764777E-02;
  COFD[17932] = -2.24627701E+01;
  COFD[17933] = 5.60859334E+00;
  COFD[17934] = -4.89526797E-01;
  COFD[17935] = 2.02839728E-02;
  COFD[17936] = -2.24627701E+01;
  COFD[17937] = 5.60859334E+00;
  COFD[17938] = -4.89526797E-01;
  COFD[17939] = 2.02839728E-02;
  COFD[17940] = -2.24627701E+01;
  COFD[17941] = 5.60859334E+00;
  COFD[17942] = -4.89526797E-01;
  COFD[17943] = 2.02839728E-02;
  COFD[17944] = -2.24627701E+01;
  COFD[17945] = 5.60859334E+00;
  COFD[17946] = -4.89526797E-01;
  COFD[17947] = 2.02839728E-02;
  COFD[17948] = -1.59404910E+01;
  COFD[17949] = 3.66853818E+00;
  COFD[17950] = -2.64346221E-01;
  COFD[17951] = 1.15784613E-02;
  COFD[17952] = -2.03044540E+01;
  COFD[17953] = 5.53557319E+00;
  COFD[17954] = -4.85990338E-01;
  COFD[17955] = 2.03641963E-02;
  COFD[17956] = -1.66999798E+01;
  COFD[17957] = 4.12591961E+00;
  COFD[17958] = -3.23243032E-01;
  COFD[17959] = 1.41172864E-02;
  COFD[17960] = -2.00037772E+01;
  COFD[17961] = 4.96711761E+00;
  COFD[17962] = -4.25105068E-01;
  COFD[17963] = 1.82385315E-02;
  COFD[17964] = -2.15981916E+01;
  COFD[17965] = 5.35156265E+00;
  COFD[17966] = -4.68920349E-01;
  COFD[17967] = 1.98962075E-02;
  COFD[17968] = -2.00301477E+01;
  COFD[17969] = 4.96711761E+00;
  COFD[17970] = -4.25105068E-01;
  COFD[17971] = 1.82385315E-02;
  COFD[17972] = -1.74302854E+01;
  COFD[17973] = 3.09977040E+00;
  COFD[17974] = -8.94095036E-02;
  COFD[17975] = 4.57257649E-05;
  COFD[17976] = -2.12613076E+01;
  COFD[17977] = 5.24049689E+00;
  COFD[17978] = -4.56053883E-01;
  COFD[17979] = 1.93989985E-02;
  COFD[17980] = -2.01155775E+01;
  COFD[17981] = 4.14890473E+00;
  COFD[17982] = -2.43477935E-01;
  COFD[17983] = 7.37955243E-03;
  COFD[17984] = -2.27416960E+01;
  COFD[17985] = 5.46024138E+00;
  COFD[17986] = -4.54393167E-01;
  COFD[17987] = 1.81267166E-02;
  COFD[17988] = -2.19764230E+01;
  COFD[17989] = 5.52955285E+00;
  COFD[17990] = -4.85397307E-01;
  COFD[17991] = 2.03459361E-02;
  COFD[17992] = -2.20837914E+01;
  COFD[17993] = 5.55543391E+00;
  COFD[17994] = -4.87954417E-01;
  COFD[17995] = 2.04251880E-02;
  COFD[17996] = -2.14650082E+01;
  COFD[17997] = 5.30533825E+00;
  COFD[17998] = -4.63794263E-01;
  COFD[17999] = 1.97083387E-02;
  COFD[18000] = -2.14763872E+01;
  COFD[18001] = 5.30533825E+00;
  COFD[18002] = -4.63794263E-01;
  COFD[18003] = 1.97083387E-02;
  COFD[18004] = -2.01288794E+01;
  COFD[18005] = 4.14890473E+00;
  COFD[18006] = -2.43477935E-01;
  COFD[18007] = 7.37955243E-03;
  COFD[18008] = -2.02110547E+01;
  COFD[18009] = 4.22261576E+00;
  COFD[18010] = -2.59143284E-01;
  COFD[18011] = 8.30812312E-03;
  COFD[18012] = -2.27486828E+01;
  COFD[18013] = 5.48315713E+00;
  COFD[18014] = -4.58556646E-01;
  COFD[18015] = 1.83548689E-02;
  COFD[18016] = -2.25541218E+01;
  COFD[18017] = 5.50183692E+00;
  COFD[18018] = -4.62651175E-01;
  COFD[18019] = 1.85983343E-02;
  COFD[18020] = -2.27354050E+01;
  COFD[18021] = 5.48315713E+00;
  COFD[18022] = -4.58556646E-01;
  COFD[18023] = 1.83548689E-02;
  COFD[18024] = -2.24673902E+01;
  COFD[18025] = 5.41354468E+00;
  COFD[18026] = -4.45930303E-01;
  COFD[18027] = 1.76640316E-02;
  COFD[18028] = -2.24825235E+01;
  COFD[18029] = 5.41354468E+00;
  COFD[18030] = -4.45930303E-01;
  COFD[18031] = 1.76640316E-02;
  COFD[18032] = -2.11129919E+01;
  COFD[18033] = 4.53343919E+00;
  COFD[18034] = -3.02436183E-01;
  COFD[18035] = 1.02880591E-02;
  COFD[18036] = -2.22006166E+01;
  COFD[18037] = 5.56261157E+00;
  COFD[18038] = -4.88568348E-01;
  COFD[18039] = 2.04392305E-02;
  COFD[18040] = -2.11214030E+01;
  COFD[18041] = 4.53343919E+00;
  COFD[18042] = -3.02436183E-01;
  COFD[18043] = 1.02880591E-02;
  COFD[18044] = -2.11214030E+01;
  COFD[18045] = 4.53343919E+00;
  COFD[18046] = -3.02436183E-01;
  COFD[18047] = 1.02880591E-02;
  COFD[18048] = -2.11295633E+01;
  COFD[18049] = 4.53343919E+00;
  COFD[18050] = -3.02436183E-01;
  COFD[18051] = 1.02880591E-02;
  COFD[18052] = -2.23382846E+01;
  COFD[18053] = 5.15611601E+00;
  COFD[18054] = -4.01609601E-01;
  COFD[18055] = 1.53101184E-02;
  COFD[18056] = -2.24552144E+01;
  COFD[18057] = 5.23331650E+00;
  COFD[18058] = -4.14617872E-01;
  COFD[18059] = 1.59921364E-02;
  COFD[18060] = -2.21987648E+01;
  COFD[18061] = 4.97774822E+00;
  COFD[18062] = -3.72720294E-01;
  COFD[18063] = 1.38305040E-02;
  COFD[18064] = -2.26181100E+01;
  COFD[18065] = 5.24929289E+00;
  COFD[18066] = -4.17432640E-01;
  COFD[18067] = 1.61433104E-02;
  COFD[18068] = -2.22184945E+01;
  COFD[18069] = 4.99165077E+00;
  COFD[18070] = -3.74908997E-01;
  COFD[18071] = 1.39407338E-02;
  COFD[18072] = -2.22244031E+01;
  COFD[18073] = 4.99165077E+00;
  COFD[18074] = -3.74908997E-01;
  COFD[18075] = 1.39407338E-02;
  COFD[18076] = -2.23734546E+01;
  COFD[18077] = 5.00926723E+00;
  COFD[18078] = -3.77721617E-01;
  COFD[18079] = 1.40834666E-02;
  COFD[18080] = -2.13974684E+01;
  COFD[18081] = 4.53637868E+00;
  COFD[18082] = -3.02892791E-01;
  COFD[18083] = 1.03107793E-02;
  COFD[18084] = -2.02348873E+01;
  COFD[18085] = 4.02839336E+00;
  COFD[18086] = -2.29443606E-01;
  COFD[18087] = 6.85128471E-03;
  COFD[18088] = -2.15043501E+01;
  COFD[18089] = 4.59527345E+00;
  COFD[18090] = -3.12121188E-01;
  COFD[18091] = 1.07722703E-02;
  COFD[18092] = -2.19617978E+01;
  COFD[18093] = 4.74287111E+00;
  COFD[18094] = -3.35542558E-01;
  COFD[18095] = 1.19547206E-02;
  COFD[18096] = -2.19766215E+01;
  COFD[18097] = 4.75781977E+00;
  COFD[18098] = -3.38914787E-01;
  COFD[18099] = 1.21572192E-02;
  COFD[18100] = -2.08111776E+01;
  COFD[18101] = 4.32618735E+00;
  COFD[18102] = -2.70428378E-01;
  COFD[18103] = 8.70125036E-03;
  COFD[18104] = -2.05295926E+01;
  COFD[18105] = 4.25911525E+00;
  COFD[18106] = -2.60173761E-01;
  COFD[18107] = 8.19680272E-03;
  COFD[18108] = -2.05368716E+01;
  COFD[18109] = 4.25911525E+00;
  COFD[18110] = -2.60173761E-01;
  COFD[18111] = 8.19680272E-03;
  COFD[18112] = -2.11532747E+01;
  COFD[18113] = 4.49163175E+00;
  COFD[18114] = -2.95930012E-01;
  COFD[18115] = 9.96384770E-03;
  COFD[18116] = -2.03636446E+01;
  COFD[18117] = 4.07020791E+00;
  COFD[18118] = -2.35851668E-01;
  COFD[18119] = 7.16637616E-03;
  COFD[18120] = -2.16351535E+01;
  COFD[18121] = 4.66447310E+00;
  COFD[18122] = -3.23134701E-01;
  COFD[18123] = 1.13292514E-02;
  COFD[18124] = -2.07710875E+01;
  COFD[18125] = 4.16220079E+00;
  COFD[18126] = -2.45489089E-01;
  COFD[18127] = 7.47783850E-03;
  COFD[18128] = -2.09118521E+01;
  COFD[18129] = 4.16220079E+00;
  COFD[18130] = -2.45489089E-01;
  COFD[18131] = 7.47783850E-03;
  COFD[18132] = -2.08350725E+01;
  COFD[18133] = 4.16220079E+00;
  COFD[18134] = -2.45489089E-01;
  COFD[18135] = 7.47783850E-03;
  COFD[18136] = -2.08350725E+01;
  COFD[18137] = 4.16220079E+00;
  COFD[18138] = -2.45489089E-01;
  COFD[18139] = 7.47783850E-03;
  COFD[18140] = -2.24087810E+01;
  COFD[18141] = 5.19977664E+00;
  COFD[18142] = -4.08876556E-01;
  COFD[18143] = 1.56887081E-02;
  COFD[18144] = -2.23290522E+01;
  COFD[18145] = 5.15611601E+00;
  COFD[18146] = -4.01609601E-01;
  COFD[18147] = 1.53101184E-02;
  COFD[18148] = -2.28687913E+01;
  COFD[18149] = 5.58482883E+00;
  COFD[18150] = -4.79495567E-01;
  COFD[18151] = 1.95713974E-02;
  COFD[18152] = -2.19459729E+01;
  COFD[18153] = 5.52955285E+00;
  COFD[18154] = -4.85397307E-01;
  COFD[18155] = 2.03459361E-02;
  COFD[18156] = -2.05980917E+01;
  COFD[18157] = 4.01239087E+00;
  COFD[18158] = -2.25976702E-01;
  COFD[18159] = 6.64189669E-03;
  COFD[18160] = -2.02433706E+01;
  COFD[18161] = 3.96287232E+00;
  COFD[18162] = -2.19068095E-01;
  COFD[18163] = 6.32660643E-03;
  COFD[18164] = -2.02392001E+01;
  COFD[18165] = 3.96287232E+00;
  COFD[18166] = -2.19068095E-01;
  COFD[18167] = 6.32660643E-03;
  COFD[18168] = -2.02499408E+01;
  COFD[18169] = 3.93545830E+00;
  COFD[18170] = -2.15167007E-01;
  COFD[18171] = 6.14710094E-03;
  COFD[18172] = -2.09500157E+01;
  COFD[18173] = 4.21060086E+00;
  COFD[18174] = -2.52810277E-01;
  COFD[18175] = 7.83596945E-03;
  COFD[18176] = -2.05484768E+01;
  COFD[18177] = 4.01239087E+00;
  COFD[18178] = -2.25976702E-01;
  COFD[18179] = 6.64189669E-03;
  COFD[18180] = -2.05452473E+01;
  COFD[18181] = 4.01239087E+00;
  COFD[18182] = -2.25976702E-01;
  COFD[18183] = 6.64189669E-03;
  COFD[18184] = -2.15211404E+01;
  COFD[18185] = 4.39307520E+00;
  COFD[18186] = -2.80700100E-01;
  COFD[18187] = 9.20842847E-03;
  COFD[18188] = -2.15185582E+01;
  COFD[18189] = 4.39307520E+00;
  COFD[18190] = -2.80700100E-01;
  COFD[18191] = 9.20842847E-03;
  COFD[18192] = -2.15185582E+01;
  COFD[18193] = 4.39307520E+00;
  COFD[18194] = -2.80700100E-01;
  COFD[18195] = 9.20842847E-03;
  COFD[18196] = -2.15185582E+01;
  COFD[18197] = 4.39307520E+00;
  COFD[18198] = -2.80700100E-01;
  COFD[18199] = 9.20842847E-03;
  COFD[18200] = -2.15185582E+01;
  COFD[18201] = 4.39307520E+00;
  COFD[18202] = -2.80700100E-01;
  COFD[18203] = 9.20842847E-03;
  COFD[18204] = -2.14799623E+01;
  COFD[18205] = 4.38678710E+00;
  COFD[18206] = -2.80183322E-01;
  COFD[18207] = 9.19860952E-03;
  COFD[18208] = -2.14799623E+01;
  COFD[18209] = 4.38678710E+00;
  COFD[18210] = -2.80183322E-01;
  COFD[18211] = 9.19860952E-03;
  COFD[18212] = -2.00556963E+01;
  COFD[18213] = 3.66436790E+00;
  COFD[18214] = -1.71934261E-01;
  COFD[18215] = 3.95119075E-03;
  COFD[18216] = -2.00556963E+01;
  COFD[18217] = 3.66436790E+00;
  COFD[18218] = -1.71934261E-01;
  COFD[18219] = 3.95119075E-03;
  COFD[18220] = -2.00556963E+01;
  COFD[18221] = 3.66436790E+00;
  COFD[18222] = -1.71934261E-01;
  COFD[18223] = 3.95119075E-03;
  COFD[18224] = -2.00556963E+01;
  COFD[18225] = 3.66436790E+00;
  COFD[18226] = -1.71934261E-01;
  COFD[18227] = 3.95119075E-03;
  COFD[18228] = -2.00556963E+01;
  COFD[18229] = 3.66436790E+00;
  COFD[18230] = -1.71934261E-01;
  COFD[18231] = 3.95119075E-03;
  COFD[18232] = -2.00556963E+01;
  COFD[18233] = 3.66436790E+00;
  COFD[18234] = -1.71934261E-01;
  COFD[18235] = 3.95119075E-03;
  COFD[18236] = -2.00556963E+01;
  COFD[18237] = 3.66436790E+00;
  COFD[18238] = -1.71934261E-01;
  COFD[18239] = 3.95119075E-03;
  COFD[18240] = -2.00556963E+01;
  COFD[18241] = 3.66436790E+00;
  COFD[18242] = -1.71934261E-01;
  COFD[18243] = 3.95119075E-03;
  COFD[18244] = -2.00556963E+01;
  COFD[18245] = 3.66436790E+00;
  COFD[18246] = -1.71934261E-01;
  COFD[18247] = 3.95119075E-03;
  COFD[18248] = -2.00556963E+01;
  COFD[18249] = 3.66436790E+00;
  COFD[18250] = -1.71934261E-01;
  COFD[18251] = 3.95119075E-03;
  COFD[18252] = -2.00556963E+01;
  COFD[18253] = 3.66436790E+00;
  COFD[18254] = -1.71934261E-01;
  COFD[18255] = 3.95119075E-03;
  COFD[18256] = -2.00556963E+01;
  COFD[18257] = 3.66436790E+00;
  COFD[18258] = -1.71934261E-01;
  COFD[18259] = 3.95119075E-03;
  COFD[18260] = -1.98506026E+01;
  COFD[18261] = 3.47027069E+00;
  COFD[18262] = -1.42345842E-01;
  COFD[18263] = 2.49921923E-03;
  COFD[18264] = -1.98506026E+01;
  COFD[18265] = 3.47027069E+00;
  COFD[18266] = -1.42345842E-01;
  COFD[18267] = 2.49921923E-03;
  COFD[18268] = -1.98506026E+01;
  COFD[18269] = 3.47027069E+00;
  COFD[18270] = -1.42345842E-01;
  COFD[18271] = 2.49921923E-03;
  COFD[18272] = -1.98506026E+01;
  COFD[18273] = 3.47027069E+00;
  COFD[18274] = -1.42345842E-01;
  COFD[18275] = 2.49921923E-03;
  COFD[18276] = -2.08693790E+01;
  COFD[18277] = 4.05696628E+00;
  COFD[18278] = -2.29598957E-01;
  COFD[18279] = 6.70192586E-03;
  COFD[18280] = -2.08693790E+01;
  COFD[18281] = 4.05696628E+00;
  COFD[18282] = -2.29598957E-01;
  COFD[18283] = 6.70192586E-03;
  COFD[18284] = -1.98637741E+01;
  COFD[18285] = 3.54601621E+00;
  COFD[18286] = -1.54142413E-01;
  COFD[18287] = 3.08850126E-03;
  COFD[18288] = -1.98637741E+01;
  COFD[18289] = 3.54601621E+00;
  COFD[18290] = -1.54142413E-01;
  COFD[18291] = 3.08850126E-03;
  COFD[18292] = -1.98637741E+01;
  COFD[18293] = 3.54601621E+00;
  COFD[18294] = -1.54142413E-01;
  COFD[18295] = 3.08850126E-03;
  COFD[18296] = -1.98637741E+01;
  COFD[18297] = 3.54601621E+00;
  COFD[18298] = -1.54142413E-01;
  COFD[18299] = 3.08850126E-03;
  COFD[18300] = -2.12208966E+01;
  COFD[18301] = 5.22891952E+00;
  COFD[18302] = -4.54711908E-01;
  COFD[18303] = 1.93471470E-02;
  COFD[18304] = -2.00200264E+01;
  COFD[18305] = 5.51269088E+00;
  COFD[18306] = -4.83693748E-01;
  COFD[18307] = 2.02912448E-02;
  COFD[18308] = -1.65341479E+01;
  COFD[18309] = 4.13324388E+00;
  COFD[18310] = -3.24130022E-01;
  COFD[18311] = 1.41531866E-02;
  COFD[18312] = -1.96931422E+01;
  COFD[18313] = 4.93487070E+00;
  COFD[18314] = -4.21288847E-01;
  COFD[18315] = 1.80877783E-02;
  COFD[18316] = -2.13738245E+01;
  COFD[18317] = 5.35079942E+00;
  COFD[18318] = -4.68858587E-01;
  COFD[18319] = 1.98950377E-02;
  COFD[18320] = -1.97180037E+01;
  COFD[18321] = 4.93487070E+00;
  COFD[18322] = -4.21288847E-01;
  COFD[18323] = 1.80877783E-02;
  COFD[18324] = -1.67841298E+01;
  COFD[18325] = 2.88481046E+00;
  COFD[18326] = -5.62034443E-02;
  COFD[18327] = -1.57469795E-03;
  COFD[18328] = -2.10506001E+01;
  COFD[18329] = 5.24127050E+00;
  COFD[18330] = -4.56143428E-01;
  COFD[18331] = 1.94024526E-02;
  COFD[18332] = -2.00761061E+01;
  COFD[18333] = 4.23458126E+00;
  COFD[18334] = -2.56439402E-01;
  COFD[18335] = 8.01352157E-03;
  COFD[18336] = -2.25194147E+01;
  COFD[18337] = 5.46478750E+00;
  COFD[18338] = -4.55228918E-01;
  COFD[18339] = 1.81727509E-02;
  COFD[18340] = -2.17022317E+01;
  COFD[18341] = 5.50491679E+00;
  COFD[18342] = -4.82850225E-01;
  COFD[18343] = 2.02611393E-02;
  COFD[18344] = -2.18920141E+01;
  COFD[18345] = 5.55631108E+00;
  COFD[18346] = -4.88030373E-01;
  COFD[18347] = 2.04269830E-02;
  COFD[18348] = -2.11301347E+01;
  COFD[18349] = 5.26639700E+00;
  COFD[18350] = -4.59100217E-01;
  COFD[18351] = 1.95186257E-02;
  COFD[18352] = -2.11404042E+01;
  COFD[18353] = 5.26639700E+00;
  COFD[18354] = -4.59100217E-01;
  COFD[18355] = 1.95186257E-02;
  COFD[18356] = -2.00882205E+01;
  COFD[18357] = 4.23458126E+00;
  COFD[18358] = -2.56439402E-01;
  COFD[18359] = 8.01352157E-03;
  COFD[18360] = -1.97333659E+01;
  COFD[18361] = 4.10038316E+00;
  COFD[18362] = -2.40891523E-01;
  COFD[18363] = 7.43019548E-03;
  COFD[18364] = -2.25568869E+01;
  COFD[18365] = 5.49898805E+00;
  COFD[18366] = -4.61772128E-01;
  COFD[18367] = 1.85402114E-02;
  COFD[18368] = -2.23374279E+01;
  COFD[18369] = 5.51274249E+00;
  COFD[18370] = -4.65211755E-01;
  COFD[18371] = 1.87551544E-02;
  COFD[18372] = -2.25447958E+01;
  COFD[18373] = 5.49898805E+00;
  COFD[18374] = -4.61772128E-01;
  COFD[18375] = 1.85402114E-02;
  COFD[18376] = -2.22903185E+01;
  COFD[18377] = 5.43835755E+00;
  COFD[18378] = -4.50426465E-01;
  COFD[18379] = 1.79097218E-02;
  COFD[18380] = -2.23042005E+01;
  COFD[18381] = 5.43835755E+00;
  COFD[18382] = -4.50426465E-01;
  COFD[18383] = 1.79097218E-02;
  COFD[18384] = -2.10038979E+01;
  COFD[18385] = 4.59262341E+00;
  COFD[18386] = -3.11696702E-01;
  COFD[18387] = 1.07507612E-02;
  COFD[18388] = -2.18798991E+01;
  COFD[18389] = 5.54338024E+00;
  COFD[18390] = -4.86768787E-01;
  COFD[18391] = 2.03886883E-02;
  COFD[18392] = -2.10113498E+01;
  COFD[18393] = 4.59262341E+00;
  COFD[18394] = -3.11696702E-01;
  COFD[18395] = 1.07507612E-02;
  COFD[18396] = -2.10113498E+01;
  COFD[18397] = 4.59262341E+00;
  COFD[18398] = -3.11696702E-01;
  COFD[18399] = 1.07507612E-02;
  COFD[18400] = -2.10185657E+01;
  COFD[18401] = 4.59262341E+00;
  COFD[18402] = -3.11696702E-01;
  COFD[18403] = 1.07507612E-02;
  COFD[18404] = -2.21898778E+01;
  COFD[18405] = 5.19585793E+00;
  COFD[18406] = -4.08227614E-01;
  COFD[18407] = 1.56549949E-02;
  COFD[18408] = -2.22761083E+01;
  COFD[18409] = 5.26163797E+00;
  COFD[18410] = -4.19597053E-01;
  COFD[18411] = 1.62593107E-02;
  COFD[18412] = -2.20779623E+01;
  COFD[18413] = 5.03148314E+00;
  COFD[18414] = -3.81273736E-01;
  COFD[18415] = 1.42638198E-02;
  COFD[18416] = -2.24517389E+01;
  COFD[18417] = 5.27910031E+00;
  COFD[18418] = -4.22646180E-01;
  COFD[18419] = 1.64225872E-02;
  COFD[18420] = -2.20888012E+01;
  COFD[18421] = 5.04229982E+00;
  COFD[18422] = -3.83015371E-01;
  COFD[18423] = 1.43526474E-02;
  COFD[18424] = -2.20939191E+01;
  COFD[18425] = 5.04229982E+00;
  COFD[18426] = -3.83015371E-01;
  COFD[18427] = 1.43526474E-02;
  COFD[18428] = -2.22469530E+01;
  COFD[18429] = 5.05835241E+00;
  COFD[18430] = -3.85613003E-01;
  COFD[18431] = 1.44856215E-02;
  COFD[18432] = -2.12879819E+01;
  COFD[18433] = 4.59480819E+00;
  COFD[18434] = -3.12046645E-01;
  COFD[18435] = 1.07684926E-02;
  COFD[18436] = -1.97447437E+01;
  COFD[18437] = 3.90103244E+00;
  COFD[18438] = -2.10127153E-01;
  COFD[18439] = 5.91275235E-03;
  COFD[18440] = -2.13781001E+01;
  COFD[18441] = 4.64716064E+00;
  COFD[18442] = -3.20407039E-01;
  COFD[18443] = 1.11921352E-02;
  COFD[18444] = -2.18301654E+01;
  COFD[18445] = 4.79216198E+00;
  COFD[18446] = -3.43444669E-01;
  COFD[18447] = 1.23559878E-02;
  COFD[18448] = -2.18400822E+01;
  COFD[18449] = 4.80509391E+00;
  COFD[18450] = -3.46553069E-01;
  COFD[18451] = 1.25478648E-02;
  COFD[18452] = -2.07347095E+01;
  COFD[18453] = 4.39718561E+00;
  COFD[18454] = -2.81331762E-01;
  COFD[18455] = 9.23963405E-03;
  COFD[18456] = -2.04400444E+01;
  COFD[18457] = 4.33083619E+00;
  COFD[18458] = -2.71138753E-01;
  COFD[18459] = 8.73620166E-03;
  COFD[18460] = -2.04464346E+01;
  COFD[18461] = 4.33083619E+00;
  COFD[18462] = -2.71138753E-01;
  COFD[18463] = 8.73620166E-03;
  COFD[18464] = -2.10462723E+01;
  COFD[18465] = 4.55554257E+00;
  COFD[18466] = -3.05871928E-01;
  COFD[18467] = 1.04590633E-02;
  COFD[18468] = -1.98786260E+01;
  COFD[18469] = 3.94358510E+00;
  COFD[18470] = -2.16738716E-01;
  COFD[18471] = 6.24040431E-03;
  COFD[18472] = -2.15198527E+01;
  COFD[18473] = 4.72097844E+00;
  COFD[18474] = -3.32068658E-01;
  COFD[18475] = 1.17793428E-02;
  COFD[18476] = -2.07205885E+01;
  COFD[18477] = 4.24771470E+00;
  COFD[18478] = -2.58432646E-01;
  COFD[18479] = 8.11120477E-03;
  COFD[18480] = -2.08371397E+01;
  COFD[18481] = 4.24771470E+00;
  COFD[18482] = -2.58432646E-01;
  COFD[18483] = 8.11120477E-03;
  COFD[18484] = -2.07742641E+01;
  COFD[18485] = 4.24771470E+00;
  COFD[18486] = -2.58432646E-01;
  COFD[18487] = 8.11120477E-03;
  COFD[18488] = -2.07742641E+01;
  COFD[18489] = 4.24771470E+00;
  COFD[18490] = -2.58432646E-01;
  COFD[18491] = 8.11120477E-03;
  COFD[18492] = -2.22413267E+01;
  COFD[18493] = 5.23194135E+00;
  COFD[18494] = -4.14377344E-01;
  COFD[18495] = 1.59792638E-02;
  COFD[18496] = -2.21816507E+01;
  COFD[18497] = 5.19585793E+00;
  COFD[18498] = -4.08227614E-01;
  COFD[18499] = 1.56549949E-02;
  COFD[18500] = -2.26287967E+01;
  COFD[18501] = 5.58517679E+00;
  COFD[18502] = -4.80491448E-01;
  COFD[18503] = 1.96521251E-02;
  COFD[18504] = -2.16733507E+01;
  COFD[18505] = 5.50491679E+00;
  COFD[18506] = -4.82850225E-01;
  COFD[18507] = 2.02611393E-02;
  COFD[18508] = -2.02433706E+01;
  COFD[18509] = 3.96287232E+00;
  COFD[18510] = -2.19068095E-01;
  COFD[18511] = 6.32660643E-03;
  COFD[18512] = -1.98219726E+01;
  COFD[18513] = 3.87448690E+00;
  COFD[18514] = -2.05989188E-01;
  COFD[18515] = 5.70304531E-03;
  COFD[18516] = -1.98184407E+01;
  COFD[18517] = 3.87448690E+00;
  COFD[18518] = -2.05989188E-01;
  COFD[18519] = 5.70304531E-03;
  COFD[18520] = -1.98039725E+01;
  COFD[18521] = 3.82951055E+00;
  COFD[18522] = -1.99186820E-01;
  COFD[18523] = 5.37463429E-03;
  COFD[18524] = -2.08739097E+01;
  COFD[18525] = 4.28767847E+00;
  COFD[18526] = -2.64540688E-01;
  COFD[18527] = 8.41158064E-03;
  COFD[18528] = -2.02024070E+01;
  COFD[18529] = 3.96287232E+00;
  COFD[18530] = -2.19068095E-01;
  COFD[18531] = 6.32660643E-03;
  COFD[18532] = -2.01997163E+01;
  COFD[18533] = 3.96287232E+00;
  COFD[18534] = -2.19068095E-01;
  COFD[18535] = 6.32660643E-03;
  COFD[18536] = -2.14316955E+01;
  COFD[18537] = 4.46330617E+00;
  COFD[18538] = -2.91524840E-01;
  COFD[18539] = 9.74451306E-03;
  COFD[18540] = -2.14295738E+01;
  COFD[18541] = 4.46330617E+00;
  COFD[18542] = -2.91524840E-01;
  COFD[18543] = 9.74451306E-03;
  COFD[18544] = -2.14295738E+01;
  COFD[18545] = 4.46330617E+00;
  COFD[18546] = -2.91524840E-01;
  COFD[18547] = 9.74451306E-03;
  COFD[18548] = -2.14295738E+01;
  COFD[18549] = 4.46330617E+00;
  COFD[18550] = -2.91524840E-01;
  COFD[18551] = 9.74451306E-03;
  COFD[18552] = -2.14295738E+01;
  COFD[18553] = 4.46330617E+00;
  COFD[18554] = -2.91524840E-01;
  COFD[18555] = 9.74451306E-03;
  COFD[18556] = -2.13748407E+01;
  COFD[18557] = 4.45055605E+00;
  COFD[18558] = -2.90128472E-01;
  COFD[18559] = 9.69504339E-03;
  COFD[18560] = -2.13748407E+01;
  COFD[18561] = 4.45055605E+00;
  COFD[18562] = -2.90128472E-01;
  COFD[18563] = 9.69504339E-03;
  COFD[18564] = -1.98658124E+01;
  COFD[18565] = 3.69537879E+00;
  COFD[18566] = -1.77145108E-01;
  COFD[18567] = 4.22399720E-03;
  COFD[18568] = -1.98658124E+01;
  COFD[18569] = 3.69537879E+00;
  COFD[18570] = -1.77145108E-01;
  COFD[18571] = 4.22399720E-03;
  COFD[18572] = -1.98658124E+01;
  COFD[18573] = 3.69537879E+00;
  COFD[18574] = -1.77145108E-01;
  COFD[18575] = 4.22399720E-03;
  COFD[18576] = -1.98658124E+01;
  COFD[18577] = 3.69537879E+00;
  COFD[18578] = -1.77145108E-01;
  COFD[18579] = 4.22399720E-03;
  COFD[18580] = -1.98658124E+01;
  COFD[18581] = 3.69537879E+00;
  COFD[18582] = -1.77145108E-01;
  COFD[18583] = 4.22399720E-03;
  COFD[18584] = -1.98658124E+01;
  COFD[18585] = 3.69537879E+00;
  COFD[18586] = -1.77145108E-01;
  COFD[18587] = 4.22399720E-03;
  COFD[18588] = -1.98658124E+01;
  COFD[18589] = 3.69537879E+00;
  COFD[18590] = -1.77145108E-01;
  COFD[18591] = 4.22399720E-03;
  COFD[18592] = -1.98658124E+01;
  COFD[18593] = 3.69537879E+00;
  COFD[18594] = -1.77145108E-01;
  COFD[18595] = 4.22399720E-03;
  COFD[18596] = -1.98658124E+01;
  COFD[18597] = 3.69537879E+00;
  COFD[18598] = -1.77145108E-01;
  COFD[18599] = 4.22399720E-03;
  COFD[18600] = -1.98658124E+01;
  COFD[18601] = 3.69537879E+00;
  COFD[18602] = -1.77145108E-01;
  COFD[18603] = 4.22399720E-03;
  COFD[18604] = -1.98658124E+01;
  COFD[18605] = 3.69537879E+00;
  COFD[18606] = -1.77145108E-01;
  COFD[18607] = 4.22399720E-03;
  COFD[18608] = -1.98658124E+01;
  COFD[18609] = 3.69537879E+00;
  COFD[18610] = -1.77145108E-01;
  COFD[18611] = 4.22399720E-03;
  COFD[18612] = -1.97438584E+01;
  COFD[18613] = 3.53711804E+00;
  COFD[18614] = -1.52627069E-01;
  COFD[18615] = 3.00816383E-03;
  COFD[18616] = -1.97438584E+01;
  COFD[18617] = 3.53711804E+00;
  COFD[18618] = -1.52627069E-01;
  COFD[18619] = 3.00816383E-03;
  COFD[18620] = -1.97438584E+01;
  COFD[18621] = 3.53711804E+00;
  COFD[18622] = -1.52627069E-01;
  COFD[18623] = 3.00816383E-03;
  COFD[18624] = -1.97438584E+01;
  COFD[18625] = 3.53711804E+00;
  COFD[18626] = -1.52627069E-01;
  COFD[18627] = 3.00816383E-03;
  COFD[18628] = -2.08136812E+01;
  COFD[18629] = 4.14346993E+00;
  COFD[18630] = -2.42655939E-01;
  COFD[18631] = 7.33938433E-03;
  COFD[18632] = -2.08136812E+01;
  COFD[18633] = 4.14346993E+00;
  COFD[18634] = -2.42655939E-01;
  COFD[18635] = 7.33938433E-03;
  COFD[18636] = -1.96773419E+01;
  COFD[18637] = 3.57920460E+00;
  COFD[18638] = -1.59621434E-01;
  COFD[18639] = 3.37254895E-03;
  COFD[18640] = -1.96773419E+01;
  COFD[18641] = 3.57920460E+00;
  COFD[18642] = -1.59621434E-01;
  COFD[18643] = 3.37254895E-03;
  COFD[18644] = -1.96773419E+01;
  COFD[18645] = 3.57920460E+00;
  COFD[18646] = -1.59621434E-01;
  COFD[18647] = 3.37254895E-03;
  COFD[18648] = -1.96773419E+01;
  COFD[18649] = 3.57920460E+00;
  COFD[18650] = -1.59621434E-01;
  COFD[18651] = 3.37254895E-03;
  COFD[18652] = -2.10026501E+01;
  COFD[18653] = 5.22736722E+00;
  COFD[18654] = -4.54531700E-01;
  COFD[18655] = 1.93401716E-02;
  COFD[18656] = -2.00199287E+01;
  COFD[18657] = 5.51269088E+00;
  COFD[18658] = -4.83693748E-01;
  COFD[18659] = 2.02912448E-02;
  COFD[18660] = -1.65339552E+01;
  COFD[18661] = 4.13324388E+00;
  COFD[18662] = -3.24130022E-01;
  COFD[18663] = 1.41531866E-02;
  COFD[18664] = -1.96918566E+01;
  COFD[18665] = 4.93487070E+00;
  COFD[18666] = -4.21288847E-01;
  COFD[18667] = 1.80877783E-02;
  COFD[18668] = -2.13716505E+01;
  COFD[18669] = 5.35079942E+00;
  COFD[18670] = -4.68858587E-01;
  COFD[18671] = 1.98950377E-02;
  COFD[18672] = -1.97166527E+01;
  COFD[18673] = 4.93487070E+00;
  COFD[18674] = -4.21288847E-01;
  COFD[18675] = 1.80877783E-02;
  COFD[18676] = -1.67827148E+01;
  COFD[18677] = 2.88481046E+00;
  COFD[18678] = -5.62034443E-02;
  COFD[18679] = -1.57469795E-03;
  COFD[18680] = -2.10486208E+01;
  COFD[18681] = 5.24127050E+00;
  COFD[18682] = -4.56143428E-01;
  COFD[18683] = 1.94024526E-02;
  COFD[18684] = -2.00740761E+01;
  COFD[18685] = 4.23458126E+00;
  COFD[18686] = -2.56439402E-01;
  COFD[18687] = 8.01352157E-03;
  COFD[18688] = -2.25167352E+01;
  COFD[18689] = 5.46478750E+00;
  COFD[18690] = -4.55228918E-01;
  COFD[18691] = 1.81727509E-02;
  COFD[18692] = -2.17010102E+01;
  COFD[18693] = 5.50491679E+00;
  COFD[18694] = -4.82850225E-01;
  COFD[18695] = 2.02611393E-02;
  COFD[18696] = -2.18907256E+01;
  COFD[18697] = 5.55631108E+00;
  COFD[18698] = -4.88030373E-01;
  COFD[18699] = 2.04269830E-02;
  COFD[18700] = -2.11279138E+01;
  COFD[18701] = 5.26639700E+00;
  COFD[18702] = -4.59100217E-01;
  COFD[18703] = 1.95186257E-02;
  COFD[18704] = -2.11381372E+01;
  COFD[18705] = 5.26639700E+00;
  COFD[18706] = -4.59100217E-01;
  COFD[18707] = 1.95186257E-02;
  COFD[18708] = -2.00861408E+01;
  COFD[18709] = 4.23458126E+00;
  COFD[18710] = -2.56439402E-01;
  COFD[18711] = 8.01352157E-03;
  COFD[18712] = -1.97312375E+01;
  COFD[18713] = 4.10038316E+00;
  COFD[18714] = -2.40891523E-01;
  COFD[18715] = 7.43019548E-03;
  COFD[18716] = -2.25548051E+01;
  COFD[18717] = 5.49898805E+00;
  COFD[18718] = -4.61772128E-01;
  COFD[18719] = 1.85402114E-02;
  COFD[18720] = -2.23354464E+01;
  COFD[18721] = 5.51274249E+00;
  COFD[18722] = -4.65211755E-01;
  COFD[18723] = 1.87551544E-02;
  COFD[18724] = -2.25427636E+01;
  COFD[18725] = 5.49898805E+00;
  COFD[18726] = -4.61772128E-01;
  COFD[18727] = 1.85402114E-02;
  COFD[18728] = -2.22884414E+01;
  COFD[18729] = 5.43835755E+00;
  COFD[18730] = -4.50426465E-01;
  COFD[18731] = 1.79097218E-02;
  COFD[18732] = -2.23022706E+01;
  COFD[18733] = 5.43835755E+00;
  COFD[18734] = -4.50426465E-01;
  COFD[18735] = 1.79097218E-02;
  COFD[18736] = -2.10012941E+01;
  COFD[18737] = 4.59262341E+00;
  COFD[18738] = -3.11696702E-01;
  COFD[18739] = 1.07507612E-02;
  COFD[18740] = -2.18773350E+01;
  COFD[18741] = 5.54338024E+00;
  COFD[18742] = -4.86768787E-01;
  COFD[18743] = 2.03886883E-02;
  COFD[18744] = -2.10087069E+01;
  COFD[18745] = 4.59262341E+00;
  COFD[18746] = -3.11696702E-01;
  COFD[18747] = 1.07507612E-02;
  COFD[18748] = -2.10087069E+01;
  COFD[18749] = 4.59262341E+00;
  COFD[18750] = -3.11696702E-01;
  COFD[18751] = 1.07507612E-02;
  COFD[18752] = -2.10158845E+01;
  COFD[18753] = 4.59262341E+00;
  COFD[18754] = -3.11696702E-01;
  COFD[18755] = 1.07507612E-02;
  COFD[18756] = -2.21873523E+01;
  COFD[18757] = 5.19585793E+00;
  COFD[18758] = -4.08227614E-01;
  COFD[18759] = 1.56549949E-02;
  COFD[18760] = -2.22735028E+01;
  COFD[18761] = 5.26163797E+00;
  COFD[18762] = -4.19597053E-01;
  COFD[18763] = 1.62593107E-02;
  COFD[18764] = -2.20749331E+01;
  COFD[18765] = 5.03148314E+00;
  COFD[18766] = -3.81273736E-01;
  COFD[18767] = 1.42638198E-02;
  COFD[18768] = -2.24490944E+01;
  COFD[18769] = 5.27910031E+00;
  COFD[18770] = -4.22646180E-01;
  COFD[18771] = 1.64225872E-02;
  COFD[18772] = -2.20857401E+01;
  COFD[18773] = 5.04229982E+00;
  COFD[18774] = -3.83015371E-01;
  COFD[18775] = 1.43526474E-02;
  COFD[18776] = -2.20908266E+01;
  COFD[18777] = 5.04229982E+00;
  COFD[18778] = -3.83015371E-01;
  COFD[18779] = 1.43526474E-02;
  COFD[18780] = -2.22438296E+01;
  COFD[18781] = 5.05835241E+00;
  COFD[18782] = -3.85613003E-01;
  COFD[18783] = 1.44856215E-02;
  COFD[18784] = -2.12848599E+01;
  COFD[18785] = 4.59480819E+00;
  COFD[18786] = -3.12046645E-01;
  COFD[18787] = 1.07684926E-02;
  COFD[18788] = -1.97415912E+01;
  COFD[18789] = 3.90103244E+00;
  COFD[18790] = -2.10127153E-01;
  COFD[18791] = 5.91275235E-03;
  COFD[18792] = -2.13749780E+01;
  COFD[18793] = 4.64716064E+00;
  COFD[18794] = -3.20407039E-01;
  COFD[18795] = 1.11921352E-02;
  COFD[18796] = -2.18267078E+01;
  COFD[18797] = 4.79216198E+00;
  COFD[18798] = -3.43444669E-01;
  COFD[18799] = 1.23559878E-02;
  COFD[18800] = -2.18365992E+01;
  COFD[18801] = 4.80509391E+00;
  COFD[18802] = -3.46553069E-01;
  COFD[18803] = 1.25478648E-02;
  COFD[18804] = -2.07319906E+01;
  COFD[18805] = 4.39718561E+00;
  COFD[18806] = -2.81331762E-01;
  COFD[18807] = 9.23963405E-03;
  COFD[18808] = -2.04372538E+01;
  COFD[18809] = 4.33083619E+00;
  COFD[18810] = -2.71138753E-01;
  COFD[18811] = 8.73620166E-03;
  COFD[18812] = -2.04436082E+01;
  COFD[18813] = 4.33083619E+00;
  COFD[18814] = -2.71138753E-01;
  COFD[18815] = 8.73620166E-03;
  COFD[18816] = -2.10432126E+01;
  COFD[18817] = 4.55554257E+00;
  COFD[18818] = -3.05871928E-01;
  COFD[18819] = 1.04590633E-02;
  COFD[18820] = -1.98755348E+01;
  COFD[18821] = 3.94358510E+00;
  COFD[18822] = -2.16738716E-01;
  COFD[18823] = 6.24040431E-03;
  COFD[18824] = -2.15167306E+01;
  COFD[18825] = 4.72097844E+00;
  COFD[18826] = -3.32068658E-01;
  COFD[18827] = 1.17793428E-02;
  COFD[18828] = -2.07170814E+01;
  COFD[18829] = 4.24771470E+00;
  COFD[18830] = -2.58432646E-01;
  COFD[18831] = 8.11120477E-03;
  COFD[18832] = -2.08327160E+01;
  COFD[18833] = 4.24771470E+00;
  COFD[18834] = -2.58432646E-01;
  COFD[18835] = 8.11120477E-03;
  COFD[18836] = -2.07703611E+01;
  COFD[18837] = 4.24771470E+00;
  COFD[18838] = -2.58432646E-01;
  COFD[18839] = 8.11120477E-03;
  COFD[18840] = -2.07703611E+01;
  COFD[18841] = 4.24771470E+00;
  COFD[18842] = -2.58432646E-01;
  COFD[18843] = 8.11120477E-03;
  COFD[18844] = -2.22387608E+01;
  COFD[18845] = 5.23194135E+00;
  COFD[18846] = -4.14377344E-01;
  COFD[18847] = 1.59792638E-02;
  COFD[18848] = -2.21791663E+01;
  COFD[18849] = 5.19585793E+00;
  COFD[18850] = -4.08227614E-01;
  COFD[18851] = 1.56549949E-02;
  COFD[18852] = -2.26263542E+01;
  COFD[18853] = 5.58517679E+00;
  COFD[18854] = -4.80491448E-01;
  COFD[18855] = 1.96521251E-02;
  COFD[18856] = -2.16721977E+01;
  COFD[18857] = 5.50491679E+00;
  COFD[18858] = -4.82850225E-01;
  COFD[18859] = 2.02611393E-02;
  COFD[18860] = -2.02392001E+01;
  COFD[18861] = 3.96287232E+00;
  COFD[18862] = -2.19068095E-01;
  COFD[18863] = 6.32660643E-03;
  COFD[18864] = -1.98184407E+01;
  COFD[18865] = 3.87448690E+00;
  COFD[18866] = -2.05989188E-01;
  COFD[18867] = 5.70304531E-03;
  COFD[18868] = -1.98149336E+01;
  COFD[18869] = 3.87448690E+00;
  COFD[18870] = -2.05989188E-01;
  COFD[18871] = 5.70304531E-03;
  COFD[18872] = -1.98004655E+01;
  COFD[18873] = 3.82951055E+00;
  COFD[18874] = -1.99186820E-01;
  COFD[18875] = 5.37463429E-03;
  COFD[18876] = -2.08700865E+01;
  COFD[18877] = 4.28767847E+00;
  COFD[18878] = -2.64540688E-01;
  COFD[18879] = 8.41158064E-03;
  COFD[18880] = -2.01985633E+01;
  COFD[18881] = 3.96287232E+00;
  COFD[18882] = -2.19068095E-01;
  COFD[18883] = 6.32660643E-03;
  COFD[18884] = -2.01958932E+01;
  COFD[18885] = 3.96287232E+00;
  COFD[18886] = -2.19068095E-01;
  COFD[18887] = 6.32660643E-03;
  COFD[18888] = -2.14275901E+01;
  COFD[18889] = 4.46330617E+00;
  COFD[18890] = -2.91524840E-01;
  COFD[18891] = 9.74451306E-03;
  COFD[18892] = -2.14254857E+01;
  COFD[18893] = 4.46330617E+00;
  COFD[18894] = -2.91524840E-01;
  COFD[18895] = 9.74451306E-03;
  COFD[18896] = -2.14254857E+01;
  COFD[18897] = 4.46330617E+00;
  COFD[18898] = -2.91524840E-01;
  COFD[18899] = 9.74451306E-03;
  COFD[18900] = -2.14254857E+01;
  COFD[18901] = 4.46330617E+00;
  COFD[18902] = -2.91524840E-01;
  COFD[18903] = 9.74451306E-03;
  COFD[18904] = -2.14254857E+01;
  COFD[18905] = 4.46330617E+00;
  COFD[18906] = -2.91524840E-01;
  COFD[18907] = 9.74451306E-03;
  COFD[18908] = -2.13707701E+01;
  COFD[18909] = 4.45055605E+00;
  COFD[18910] = -2.90128472E-01;
  COFD[18911] = 9.69504339E-03;
  COFD[18912] = -2.13707701E+01;
  COFD[18913] = 4.45055605E+00;
  COFD[18914] = -2.90128472E-01;
  COFD[18915] = 9.69504339E-03;
  COFD[18916] = -1.98612587E+01;
  COFD[18917] = 3.69537879E+00;
  COFD[18918] = -1.77145108E-01;
  COFD[18919] = 4.22399720E-03;
  COFD[18920] = -1.98612587E+01;
  COFD[18921] = 3.69537879E+00;
  COFD[18922] = -1.77145108E-01;
  COFD[18923] = 4.22399720E-03;
  COFD[18924] = -1.98612587E+01;
  COFD[18925] = 3.69537879E+00;
  COFD[18926] = -1.77145108E-01;
  COFD[18927] = 4.22399720E-03;
  COFD[18928] = -1.98612587E+01;
  COFD[18929] = 3.69537879E+00;
  COFD[18930] = -1.77145108E-01;
  COFD[18931] = 4.22399720E-03;
  COFD[18932] = -1.98612587E+01;
  COFD[18933] = 3.69537879E+00;
  COFD[18934] = -1.77145108E-01;
  COFD[18935] = 4.22399720E-03;
  COFD[18936] = -1.98612587E+01;
  COFD[18937] = 3.69537879E+00;
  COFD[18938] = -1.77145108E-01;
  COFD[18939] = 4.22399720E-03;
  COFD[18940] = -1.98612587E+01;
  COFD[18941] = 3.69537879E+00;
  COFD[18942] = -1.77145108E-01;
  COFD[18943] = 4.22399720E-03;
  COFD[18944] = -1.98612587E+01;
  COFD[18945] = 3.69537879E+00;
  COFD[18946] = -1.77145108E-01;
  COFD[18947] = 4.22399720E-03;
  COFD[18948] = -1.98612587E+01;
  COFD[18949] = 3.69537879E+00;
  COFD[18950] = -1.77145108E-01;
  COFD[18951] = 4.22399720E-03;
  COFD[18952] = -1.98612587E+01;
  COFD[18953] = 3.69537879E+00;
  COFD[18954] = -1.77145108E-01;
  COFD[18955] = 4.22399720E-03;
  COFD[18956] = -1.98612587E+01;
  COFD[18957] = 3.69537879E+00;
  COFD[18958] = -1.77145108E-01;
  COFD[18959] = 4.22399720E-03;
  COFD[18960] = -1.98612587E+01;
  COFD[18961] = 3.69537879E+00;
  COFD[18962] = -1.77145108E-01;
  COFD[18963] = 4.22399720E-03;
  COFD[18964] = -1.97389660E+01;
  COFD[18965] = 3.53711804E+00;
  COFD[18966] = -1.52627069E-01;
  COFD[18967] = 3.00816383E-03;
  COFD[18968] = -1.97389660E+01;
  COFD[18969] = 3.53711804E+00;
  COFD[18970] = -1.52627069E-01;
  COFD[18971] = 3.00816383E-03;
  COFD[18972] = -1.97389660E+01;
  COFD[18973] = 3.53711804E+00;
  COFD[18974] = -1.52627069E-01;
  COFD[18975] = 3.00816383E-03;
  COFD[18976] = -1.97389660E+01;
  COFD[18977] = 3.53711804E+00;
  COFD[18978] = -1.52627069E-01;
  COFD[18979] = 3.00816383E-03;
  COFD[18980] = -2.08093550E+01;
  COFD[18981] = 4.14346993E+00;
  COFD[18982] = -2.42655939E-01;
  COFD[18983] = 7.33938433E-03;
  COFD[18984] = -2.08093550E+01;
  COFD[18985] = 4.14346993E+00;
  COFD[18986] = -2.42655939E-01;
  COFD[18987] = 7.33938433E-03;
  COFD[18988] = -1.96726171E+01;
  COFD[18989] = 3.57920460E+00;
  COFD[18990] = -1.59621434E-01;
  COFD[18991] = 3.37254895E-03;
  COFD[18992] = -1.96726171E+01;
  COFD[18993] = 3.57920460E+00;
  COFD[18994] = -1.59621434E-01;
  COFD[18995] = 3.37254895E-03;
  COFD[18996] = -1.96726171E+01;
  COFD[18997] = 3.57920460E+00;
  COFD[18998] = -1.59621434E-01;
  COFD[18999] = 3.37254895E-03;
  COFD[19000] = -1.96726171E+01;
  COFD[19001] = 3.57920460E+00;
  COFD[19002] = -1.59621434E-01;
  COFD[19003] = 3.37254895E-03;
  COFD[19004] = -2.10006706E+01;
  COFD[19005] = 5.22736722E+00;
  COFD[19006] = -4.54531700E-01;
  COFD[19007] = 1.93401716E-02;
  COFD[19008] = -2.00523875E+01;
  COFD[19009] = 5.48732025E+00;
  COFD[19010] = -4.80942121E-01;
  COFD[19011] = 2.01932766E-02;
  COFD[19012] = -1.66468893E+01;
  COFD[19013] = 4.13722102E+00;
  COFD[19014] = -3.24608851E-01;
  COFD[19015] = 1.41724276E-02;
  COFD[19016] = -1.97011422E+01;
  COFD[19017] = 4.90204310E+00;
  COFD[19018] = -4.17305709E-01;
  COFD[19019] = 1.79261320E-02;
  COFD[19020] = -2.14602192E+01;
  COFD[19021] = 5.34913044E+00;
  COFD[19022] = -4.68723517E-01;
  COFD[19023] = 1.98924792E-02;
  COFD[19024] = -1.97259382E+01;
  COFD[19025] = 4.90204310E+00;
  COFD[19026] = -4.17305709E-01;
  COFD[19027] = 1.79261320E-02;
  COFD[19028] = -1.67939908E+01;
  COFD[19029] = 2.83222799E+00;
  COFD[19030] = -4.76061746E-02;
  COFD[19031] = -2.00728754E-03;
  COFD[19032] = -2.11365291E+01;
  COFD[19033] = 5.23956053E+00;
  COFD[19034] = -4.55945477E-01;
  COFD[19035] = 1.93948159E-02;
  COFD[19036] = -2.02980796E+01;
  COFD[19037] = 4.29941846E+00;
  COFD[19038] = -2.66336231E-01;
  COFD[19039] = 8.49991686E-03;
  COFD[19040] = -2.26165691E+01;
  COFD[19041] = 5.47076861E+00;
  COFD[19042] = -4.56309725E-01;
  COFD[19043] = 1.82318198E-02;
  COFD[19044] = -2.17103564E+01;
  COFD[19045] = 5.47889399E+00;
  COFD[19046] = -4.80005330E-01;
  COFD[19047] = 2.01587979E-02;
  COFD[19048] = -2.19807702E+01;
  COFD[19049] = 5.55577026E+00;
  COFD[19050] = -4.87983571E-01;
  COFD[19051] = 2.04258787E-02;
  COFD[19052] = -2.11329867E+01;
  COFD[19053] = 5.23602118E+00;
  COFD[19054] = -4.55535508E-01;
  COFD[19055] = 1.93789887E-02;
  COFD[19056] = -2.11432101E+01;
  COFD[19057] = 5.23602118E+00;
  COFD[19058] = -4.55535508E-01;
  COFD[19059] = 1.93789887E-02;
  COFD[19060] = -2.03101444E+01;
  COFD[19061] = 4.29941846E+00;
  COFD[19062] = -2.66336231E-01;
  COFD[19063] = 8.49991686E-03;
  COFD[19064] = -1.97461985E+01;
  COFD[19065] = 4.06383709E+00;
  COFD[19066] = -2.35340873E-01;
  COFD[19067] = 7.16143347E-03;
  COFD[19068] = -2.26313519E+01;
  COFD[19069] = 5.50447320E+00;
  COFD[19070] = -4.63417030E-01;
  COFD[19071] = 1.86483622E-02;
  COFD[19072] = -2.24459414E+01;
  COFD[19073] = 5.52908983E+00;
  COFD[19074] = -4.68386544E-01;
  COFD[19075] = 1.89349273E-02;
  COFD[19076] = -2.26193104E+01;
  COFD[19077] = 5.50447320E+00;
  COFD[19078] = -4.63417030E-01;
  COFD[19079] = 1.86483622E-02;
  COFD[19080] = -2.24098687E+01;
  COFD[19081] = 5.46069497E+00;
  COFD[19082] = -4.54477116E-01;
  COFD[19083] = 1.81313545E-02;
  COFD[19084] = -2.24236979E+01;
  COFD[19085] = 5.46069497E+00;
  COFD[19086] = -4.54477116E-01;
  COFD[19087] = 1.81313545E-02;
  COFD[19088] = -2.11743372E+01;
  COFD[19089] = 4.63801001E+00;
  COFD[19090] = -3.18948840E-01;
  COFD[19091] = 1.11183139E-02;
  COFD[19092] = -2.19171985E+01;
  COFD[19093] = 5.52390371E+00;
  COFD[19094] = -4.84842326E-01;
  COFD[19095] = 2.03289335E-02;
  COFD[19096] = -2.11817501E+01;
  COFD[19097] = 4.63801001E+00;
  COFD[19098] = -3.18948840E-01;
  COFD[19099] = 1.11183139E-02;
  COFD[19100] = -2.11817501E+01;
  COFD[19101] = 4.63801001E+00;
  COFD[19102] = -3.18948840E-01;
  COFD[19103] = 1.11183139E-02;
  COFD[19104] = -2.11889277E+01;
  COFD[19105] = 4.63801001E+00;
  COFD[19106] = -3.18948840E-01;
  COFD[19107] = 1.11183139E-02;
  COFD[19108] = -2.23217083E+01;
  COFD[19109] = 5.22583604E+00;
  COFD[19110] = -4.13310911E-01;
  COFD[19111] = 1.59222338E-02;
  COFD[19112] = -2.24078619E+01;
  COFD[19113] = 5.29135926E+00;
  COFD[19114] = -4.24694811E-01;
  COFD[19115] = 1.65297258E-02;
  COFD[19116] = -2.22327276E+01;
  COFD[19117] = 5.07316145E+00;
  COFD[19118] = -3.88019113E-01;
  COFD[19119] = 1.46090553E-02;
  COFD[19120] = -2.25911259E+01;
  COFD[19121] = 5.31446172E+00;
  COFD[19122] = -4.28530261E-01;
  COFD[19123] = 1.67294400E-02;
  COFD[19124] = -2.22425642E+01;
  COFD[19125] = 5.08335116E+00;
  COFD[19126] = -3.89676987E-01;
  COFD[19127] = 1.46941827E-02;
  COFD[19128] = -2.22476507E+01;
  COFD[19129] = 5.08335116E+00;
  COFD[19130] = -3.89676987E-01;
  COFD[19131] = 1.46941827E-02;
  COFD[19132] = -2.23966635E+01;
  COFD[19133] = 5.09973420E+00;
  COFD[19134] = -3.92329291E-01;
  COFD[19135] = 1.48300692E-02;
  COFD[19136] = -2.14507236E+01;
  COFD[19137] = 4.64047311E+00;
  COFD[19138] = -3.19341184E-01;
  COFD[19139] = 1.11381713E-02;
  COFD[19140] = -1.97177022E+01;
  COFD[19141] = 3.84305966E+00;
  COFD[19142] = -2.00754696E-01;
  COFD[19143] = 5.44148974E-03;
  COFD[19144] = -2.15533687E+01;
  COFD[19145] = 4.69799782E+00;
  COFD[19146] = -3.28429676E-01;
  COFD[19147] = 1.15958326E-02;
  COFD[19148] = -2.19997166E+01;
  COFD[19149] = 4.84260436E+00;
  COFD[19150] = -3.51403701E-01;
  COFD[19151] = 1.27567896E-02;
  COFD[19152] = -2.19934089E+01;
  COFD[19153] = 4.84869143E+00;
  COFD[19154] = -3.53554556E-01;
  COFD[19155] = 1.29046231E-02;
  COFD[19156] = -2.09417974E+01;
  COFD[19157] = 4.45974841E+00;
  COFD[19158] = -2.90971508E-01;
  COFD[19159] = 9.71697223E-03;
  COFD[19160] = -2.06551821E+01;
  COFD[19161] = 4.39349519E+00;
  COFD[19162] = -2.80764635E-01;
  COFD[19163] = 9.21161648E-03;
  COFD[19164] = -2.06615364E+01;
  COFD[19165] = 4.39349519E+00;
  COFD[19166] = -2.80764635E-01;
  COFD[19167] = 9.21161648E-03;
  COFD[19168] = -2.12223236E+01;
  COFD[19169] = 4.60385596E+00;
  COFD[19170] = -3.13496085E-01;
  COFD[19171] = 1.08419777E-02;
  COFD[19172] = -1.98562352E+01;
  COFD[19173] = 3.88862457E+00;
  COFD[19174] = -2.07792337E-01;
  COFD[19175] = 5.78895587E-03;
  COFD[19176] = -2.16840251E+01;
  COFD[19177] = 4.76700413E+00;
  COFD[19178] = -3.39401317E-01;
  COFD[19179] = 1.21502740E-02;
  COFD[19180] = -2.09228360E+01;
  COFD[19181] = 4.31078948E+00;
  COFD[19182] = -2.68075763E-01;
  COFD[19183] = 8.58551430E-03;
  COFD[19184] = -2.10384706E+01;
  COFD[19185] = 4.31078948E+00;
  COFD[19186] = -2.68075763E-01;
  COFD[19187] = 8.58551430E-03;
  COFD[19188] = -2.09761157E+01;
  COFD[19189] = 4.31078948E+00;
  COFD[19190] = -2.68075763E-01;
  COFD[19191] = 8.58551430E-03;
  COFD[19192] = -2.09761157E+01;
  COFD[19193] = 4.31078948E+00;
  COFD[19194] = -2.68075763E-01;
  COFD[19195] = 8.58551430E-03;
  COFD[19196] = -2.23616848E+01;
  COFD[19197] = 5.25686144E+00;
  COFD[19198] = -4.18761272E-01;
  COFD[19199] = 1.62145526E-02;
  COFD[19200] = -2.23135223E+01;
  COFD[19201] = 5.22583604E+00;
  COFD[19202] = -4.13310911E-01;
  COFD[19203] = 1.59222338E-02;
  COFD[19204] = -2.26928946E+01;
  COFD[19205] = 5.58514157E+00;
  COFD[19206] = -4.81334532E-01;
  COFD[19207] = 1.97222349E-02;
  COFD[19208] = -2.16815439E+01;
  COFD[19209] = 5.47889399E+00;
  COFD[19210] = -4.80005330E-01;
  COFD[19211] = 2.01587979E-02;
  COFD[19212] = -2.02499408E+01;
  COFD[19213] = 3.93545830E+00;
  COFD[19214] = -2.15167007E-01;
  COFD[19215] = 6.14710094E-03;
  COFD[19216] = -1.98039725E+01;
  COFD[19217] = 3.82951055E+00;
  COFD[19218] = -1.99186820E-01;
  COFD[19219] = 5.37463429E-03;
  COFD[19220] = -1.98004655E+01;
  COFD[19221] = 3.82951055E+00;
  COFD[19222] = -1.99186820E-01;
  COFD[19223] = 5.37463429E-03;
  COFD[19224] = -1.97753404E+01;
  COFD[19225] = 3.77479753E+00;
  COFD[19226] = -1.90409617E-01;
  COFD[19227] = 4.93577527E-03;
  COFD[19228] = -2.10761045E+01;
  COFD[19229] = 4.35146065E+00;
  COFD[19230] = -2.74302288E-01;
  COFD[19231] = 8.89228674E-03;
  COFD[19232] = -2.02093041E+01;
  COFD[19233] = 3.93545830E+00;
  COFD[19234] = -2.15167007E-01;
  COFD[19235] = 6.14710094E-03;
  COFD[19236] = -2.02066340E+01;
  COFD[19237] = 3.93545830E+00;
  COFD[19238] = -2.15167007E-01;
  COFD[19239] = 6.14710094E-03;
  COFD[19240] = -2.16089376E+01;
  COFD[19241] = 4.51951091E+00;
  COFD[19242] = -3.00270210E-01;
  COFD[19243] = 1.01801697E-02;
  COFD[19244] = -2.16068333E+01;
  COFD[19245] = 4.51951091E+00;
  COFD[19246] = -3.00270210E-01;
  COFD[19247] = 1.01801697E-02;
  COFD[19248] = -2.16068333E+01;
  COFD[19249] = 4.51951091E+00;
  COFD[19250] = -3.00270210E-01;
  COFD[19251] = 1.01801697E-02;
  COFD[19252] = -2.16068333E+01;
  COFD[19253] = 4.51951091E+00;
  COFD[19254] = -3.00270210E-01;
  COFD[19255] = 1.01801697E-02;
  COFD[19256] = -2.16068333E+01;
  COFD[19257] = 4.51951091E+00;
  COFD[19258] = -3.00270210E-01;
  COFD[19259] = 1.01801697E-02;
  COFD[19260] = -2.15445104E+01;
  COFD[19261] = 4.50349169E+00;
  COFD[19262] = -2.98439896E-01;
  COFD[19263] = 1.01116859E-02;
  COFD[19264] = -2.15445104E+01;
  COFD[19265] = 4.50349169E+00;
  COFD[19266] = -2.98439896E-01;
  COFD[19267] = 1.01116859E-02;
  COFD[19268] = -1.99821344E+01;
  COFD[19269] = 3.72431023E+00;
  COFD[19270] = -1.81904593E-01;
  COFD[19271] = 4.46988587E-03;
  COFD[19272] = -1.99821344E+01;
  COFD[19273] = 3.72431023E+00;
  COFD[19274] = -1.81904593E-01;
  COFD[19275] = 4.46988587E-03;
  COFD[19276] = -1.99821344E+01;
  COFD[19277] = 3.72431023E+00;
  COFD[19278] = -1.81904593E-01;
  COFD[19279] = 4.46988587E-03;
  COFD[19280] = -1.99821344E+01;
  COFD[19281] = 3.72431023E+00;
  COFD[19282] = -1.81904593E-01;
  COFD[19283] = 4.46988587E-03;
  COFD[19284] = -1.99821344E+01;
  COFD[19285] = 3.72431023E+00;
  COFD[19286] = -1.81904593E-01;
  COFD[19287] = 4.46988587E-03;
  COFD[19288] = -1.99821344E+01;
  COFD[19289] = 3.72431023E+00;
  COFD[19290] = -1.81904593E-01;
  COFD[19291] = 4.46988587E-03;
  COFD[19292] = -1.99821344E+01;
  COFD[19293] = 3.72431023E+00;
  COFD[19294] = -1.81904593E-01;
  COFD[19295] = 4.46988587E-03;
  COFD[19296] = -1.99821344E+01;
  COFD[19297] = 3.72431023E+00;
  COFD[19298] = -1.81904593E-01;
  COFD[19299] = 4.46988587E-03;
  COFD[19300] = -1.99821344E+01;
  COFD[19301] = 3.72431023E+00;
  COFD[19302] = -1.81904593E-01;
  COFD[19303] = 4.46988587E-03;
  COFD[19304] = -1.99821344E+01;
  COFD[19305] = 3.72431023E+00;
  COFD[19306] = -1.81904593E-01;
  COFD[19307] = 4.46988587E-03;
  COFD[19308] = -1.99821344E+01;
  COFD[19309] = 3.72431023E+00;
  COFD[19310] = -1.81904593E-01;
  COFD[19311] = 4.46988587E-03;
  COFD[19312] = -1.99821344E+01;
  COFD[19313] = 3.72431023E+00;
  COFD[19314] = -1.81904593E-01;
  COFD[19315] = 4.46988587E-03;
  COFD[19316] = -1.98860636E+01;
  COFD[19317] = 3.58002373E+00;
  COFD[19318] = -1.59403687E-01;
  COFD[19319] = 3.34925073E-03;
  COFD[19320] = -1.98860636E+01;
  COFD[19321] = 3.58002373E+00;
  COFD[19322] = -1.59403687E-01;
  COFD[19323] = 3.34925073E-03;
  COFD[19324] = -1.98860636E+01;
  COFD[19325] = 3.58002373E+00;
  COFD[19326] = -1.59403687E-01;
  COFD[19327] = 3.34925073E-03;
  COFD[19328] = -1.98860636E+01;
  COFD[19329] = 3.58002373E+00;
  COFD[19330] = -1.59403687E-01;
  COFD[19331] = 3.34925073E-03;
  COFD[19332] = -2.10371123E+01;
  COFD[19333] = 4.21928528E+00;
  COFD[19334] = -2.54124175E-01;
  COFD[19335] = 7.90025934E-03;
  COFD[19336] = -2.10371123E+01;
  COFD[19337] = 4.21928528E+00;
  COFD[19338] = -2.54124175E-01;
  COFD[19339] = 7.90025934E-03;
  COFD[19340] = -1.97813741E+01;
  COFD[19341] = 3.60327211E+00;
  COFD[19342] = -1.63687575E-01;
  COFD[19343] = 3.58623059E-03;
  COFD[19344] = -1.97813741E+01;
  COFD[19345] = 3.60327211E+00;
  COFD[19346] = -1.63687575E-01;
  COFD[19347] = 3.58623059E-03;
  COFD[19348] = -1.97813741E+01;
  COFD[19349] = 3.60327211E+00;
  COFD[19350] = -1.63687575E-01;
  COFD[19351] = 3.58623059E-03;
  COFD[19352] = -1.97813741E+01;
  COFD[19353] = 3.60327211E+00;
  COFD[19354] = -1.63687575E-01;
  COFD[19355] = 3.58623059E-03;
  COFD[19356] = -2.10831723E+01;
  COFD[19357] = 5.22374890E+00;
  COFD[19358] = -4.54111394E-01;
  COFD[19359] = 1.93238908E-02;
  COFD[19360] = -2.02667718E+01;
  COFD[19361] = 5.55820929E+00;
  COFD[19362] = -4.88194619E-01;
  COFD[19363] = 2.04308557E-02;
  COFD[19364] = -1.64926540E+01;
  COFD[19365] = 4.09029455E+00;
  COFD[19366] = -3.18833424E-01;
  COFD[19367] = 1.39345071E-02;
  COFD[19368] = -1.99875412E+01;
  COFD[19369] = 5.00256652E+00;
  COFD[19370] = -4.29312274E-01;
  COFD[19371] = 1.84052987E-02;
  COFD[19372] = -2.14322077E+01;
  COFD[19373] = 5.33921751E+00;
  COFD[19374] = -4.67712601E-01;
  COFD[19375] = 1.98596515E-02;
  COFD[19376] = -2.00131313E+01;
  COFD[19377] = 5.00256652E+00;
  COFD[19378] = -4.29312274E-01;
  COFD[19379] = 1.84052987E-02;
  COFD[19380] = -1.85362616E+01;
  COFD[19381] = 3.64183946E+00;
  COFD[19382] = -1.66440255E-01;
  COFD[19383] = 3.60846347E-03;
  COFD[19384] = -2.10678949E+01;
  COFD[19385] = 5.21560307E+00;
  COFD[19386] = -4.53163835E-01;
  COFD[19387] = 1.92871258E-02;
  COFD[19388] = -1.98035328E+01;
  COFD[19389] = 4.05563529E+00;
  COFD[19390] = -2.29398386E-01;
  COFD[19391] = 6.69213921E-03;
  COFD[19392] = -2.26275900E+01;
  COFD[19393] = 5.46993660E+00;
  COFD[19394] = -4.56159027E-01;
  COFD[19395] = 1.82235738E-02;
  COFD[19396] = -2.19503744E+01;
  COFD[19397] = 5.55357103E+00;
  COFD[19398] = -4.87792313E-01;
  COFD[19399] = 2.04213096E-02;
  COFD[19400] = -2.19120962E+01;
  COFD[19401] = 5.53726725E+00;
  COFD[19402] = -4.86156279E-01;
  COFD[19403] = 2.03692571E-02;
  COFD[19404] = -2.14434310E+01;
  COFD[19405] = 5.33921751E+00;
  COFD[19406] = -4.67712601E-01;
  COFD[19407] = 1.98596515E-02;
  COFD[19408] = -2.14542241E+01;
  COFD[19409] = 5.33921751E+00;
  COFD[19410] = -4.67712601E-01;
  COFD[19411] = 1.98596515E-02;
  COFD[19412] = -1.98162104E+01;
  COFD[19413] = 4.05563529E+00;
  COFD[19414] = -2.29398386E-01;
  COFD[19415] = 6.69213921E-03;
  COFD[19416] = -2.09077409E+01;
  COFD[19417] = 4.57602170E+00;
  COFD[19418] = -3.09075782E-01;
  COFD[19419] = 1.06190976E-02;
  COFD[19420] = -2.26001564E+01;
  COFD[19421] = 5.45595972E+00;
  COFD[19422] = -4.53607854E-01;
  COFD[19423] = 1.80835073E-02;
  COFD[19424] = -2.24371965E+01;
  COFD[19425] = 5.49163497E+00;
  COFD[19426] = -4.60172524E-01;
  COFD[19427] = 1.84455001E-02;
  COFD[19428] = -2.25875026E+01;
  COFD[19429] = 5.45595972E+00;
  COFD[19430] = -4.53607854E-01;
  COFD[19431] = 1.80835073E-02;
  COFD[19432] = -2.23240583E+01;
  COFD[19433] = 5.39023977E+00;
  COFD[19434] = -4.41572292E-01;
  COFD[19435] = 1.74223141E-02;
  COFD[19436] = -2.23385360E+01;
  COFD[19437] = 5.39023977E+00;
  COFD[19438] = -4.41572292E-01;
  COFD[19439] = 1.74223141E-02;
  COFD[19440] = -2.08557176E+01;
  COFD[19441] = 4.46453406E+00;
  COFD[19442] = -2.91715850E-01;
  COFD[19443] = 9.75402150E-03;
  COFD[19444] = -2.21252663E+01;
  COFD[19445] = 5.57923992E+00;
  COFD[19446] = -4.89949222E-01;
  COFD[19447] = 2.04685426E-02;
  COFD[19448] = -2.08636178E+01;
  COFD[19449] = 4.46453406E+00;
  COFD[19450] = -2.91715850E-01;
  COFD[19451] = 9.75402150E-03;
  COFD[19452] = -2.08636178E+01;
  COFD[19453] = 4.46453406E+00;
  COFD[19454] = -2.91715850E-01;
  COFD[19455] = 9.75402150E-03;
  COFD[19456] = -2.08712746E+01;
  COFD[19457] = 4.46453406E+00;
  COFD[19458] = -2.91715850E-01;
  COFD[19459] = 9.75402150E-03;
  COFD[19460] = -2.21424076E+01;
  COFD[19461] = 5.11134594E+00;
  COFD[19462] = -3.94210281E-01;
  COFD[19463] = 1.49264980E-02;
  COFD[19464] = -2.22792376E+01;
  COFD[19465] = 5.19841133E+00;
  COFD[19466] = -4.08650438E-01;
  COFD[19467] = 1.56769604E-02;
  COFD[19468] = -2.19540024E+01;
  COFD[19469] = 4.91357102E+00;
  COFD[19470] = -3.62609215E-01;
  COFD[19471] = 1.33214766E-02;
  COFD[19472] = -2.24557537E+01;
  COFD[19473] = 5.21790203E+00;
  COFD[19474] = -4.11949741E-01;
  COFD[19475] = 1.58501968E-02;
  COFD[19476] = -2.19708012E+01;
  COFD[19477] = 4.92657345E+00;
  COFD[19478] = -3.64659759E-01;
  COFD[19479] = 1.34247408E-02;
  COFD[19480] = -2.19762842E+01;
  COFD[19481] = 4.92657345E+00;
  COFD[19482] = -3.64659759E-01;
  COFD[19483] = 1.34247408E-02;
  COFD[19484] = -2.21351892E+01;
  COFD[19485] = 4.94663705E+00;
  COFD[19486] = -3.67820680E-01;
  COFD[19487] = 1.35838676E-02;
  COFD[19488] = -2.11407644E+01;
  COFD[19489] = 4.46737362E+00;
  COFD[19490] = -2.92157651E-01;
  COFD[19491] = 9.77601677E-03;
  COFD[19492] = -2.11101650E+01;
  COFD[19493] = 4.46907648E+00;
  COFD[19494] = -2.92422647E-01;
  COFD[19495] = 9.78921148E-03;
  COFD[19496] = -2.12601304E+01;
  COFD[19497] = 4.53184484E+00;
  COFD[19498] = -3.02188552E-01;
  COFD[19499] = 1.02757382E-02;
  COFD[19500] = -2.17265142E+01;
  COFD[19501] = 4.68284841E+00;
  COFD[19502] = -3.26034852E-01;
  COFD[19503] = 1.14751958E-02;
  COFD[19504] = -2.18506815E+01;
  COFD[19505] = 4.74278260E+00;
  COFD[19506] = -3.35528552E-01;
  COFD[19507] = 1.19540147E-02;
  COFD[19508] = -2.05351753E+01;
  COFD[19509] = 4.24884553E+00;
  COFD[19510] = -2.58604390E-01;
  COFD[19511] = 8.11962573E-03;
  COFD[19512] = -2.02152972E+01;
  COFD[19513] = 4.16874996E+00;
  COFD[19514] = -2.46479660E-01;
  COFD[19515] = 7.52627408E-03;
  COFD[19516] = -2.02221008E+01;
  COFD[19517] = 4.16874996E+00;
  COFD[19518] = -2.46479660E-01;
  COFD[19519] = 7.52627408E-03;
  COFD[19520] = -2.08848984E+01;
  COFD[19521] = 4.42008395E+00;
  COFD[19522] = -2.84850644E-01;
  COFD[19523] = 9.41364557E-03;
  COFD[19524] = -2.12321131E+01;
  COFD[19525] = 4.50668822E+00;
  COFD[19526] = -2.98272861E-01;
  COFD[19527] = 1.00805802E-02;
  COFD[19528] = -2.14030999E+01;
  COFD[19529] = 4.60581491E+00;
  COFD[19530] = -3.13809775E-01;
  COFD[19531] = 1.08578896E-02;
  COFD[19532] = -2.04563756E+01;
  COFD[19533] = 4.07017646E+00;
  COFD[19534] = -2.31589609E-01;
  COFD[19535] = 6.79906092E-03;
  COFD[19536] = -2.05838301E+01;
  COFD[19537] = 4.07017646E+00;
  COFD[19538] = -2.31589609E-01;
  COFD[19539] = 6.79906092E-03;
  COFD[19540] = -2.05147290E+01;
  COFD[19541] = 4.07017646E+00;
  COFD[19542] = -2.31589609E-01;
  COFD[19543] = 6.79906092E-03;
  COFD[19544] = -2.05147290E+01;
  COFD[19545] = 4.07017646E+00;
  COFD[19546] = -2.31589609E-01;
  COFD[19547] = 6.79906092E-03;
  COFD[19548] = -2.22156232E+01;
  COFD[19549] = 5.15662581E+00;
  COFD[19550] = -4.01695326E-01;
  COFD[19551] = 1.53146065E-02;
  COFD[19552] = -2.21337093E+01;
  COFD[19553] = 5.11134594E+00;
  COFD[19554] = -3.94210281E-01;
  COFD[19555] = 1.49264980E-02;
  COFD[19556] = -2.27502527E+01;
  COFD[19557] = 5.57403120E+00;
  COFD[19558] = -4.76929446E-01;
  COFD[19559] = 1.94136814E-02;
  COFD[19560] = -2.19207334E+01;
  COFD[19561] = 5.55357103E+00;
  COFD[19562] = -4.87792313E-01;
  COFD[19563] = 2.04213096E-02;
  COFD[19564] = -2.09500157E+01;
  COFD[19565] = 4.21060086E+00;
  COFD[19566] = -2.52810277E-01;
  COFD[19567] = 7.83596945E-03;
  COFD[19568] = -2.08739097E+01;
  COFD[19569] = 4.28767847E+00;
  COFD[19570] = -2.64540688E-01;
  COFD[19571] = 8.41158064E-03;
  COFD[19572] = -2.08700865E+01;
  COFD[19573] = 4.28767847E+00;
  COFD[19574] = -2.64540688E-01;
  COFD[19575] = 8.41158064E-03;
  COFD[19576] = -2.10761045E+01;
  COFD[19577] = 4.35146065E+00;
  COFD[19578] = -2.74302288E-01;
  COFD[19579] = 8.89228674E-03;
  COFD[19580] = -2.06339812E+01;
  COFD[19581] = 4.11937451E+00;
  COFD[19582] = -2.39010363E-01;
  COFD[19583] = 7.16123950E-03;
  COFD[19584] = -2.09051607E+01;
  COFD[19585] = 4.21060086E+00;
  COFD[19586] = -2.52810277E-01;
  COFD[19587] = 7.83596945E-03;
  COFD[19588] = -2.09022264E+01;
  COFD[19589] = 4.21060086E+00;
  COFD[19590] = -2.52810277E-01;
  COFD[19591] = 7.83596945E-03;
  COFD[19592] = -2.12406226E+01;
  COFD[19593] = 4.31600554E+00;
  COFD[19594] = -2.68872731E-01;
  COFD[19595] = 8.62471915E-03;
  COFD[19596] = -2.12382944E+01;
  COFD[19597] = 4.31600554E+00;
  COFD[19598] = -2.68872731E-01;
  COFD[19599] = 8.62471915E-03;
  COFD[19600] = -2.12382944E+01;
  COFD[19601] = 4.31600554E+00;
  COFD[19602] = -2.68872731E-01;
  COFD[19603] = 8.62471915E-03;
  COFD[19604] = -2.12382944E+01;
  COFD[19605] = 4.31600554E+00;
  COFD[19606] = -2.68872731E-01;
  COFD[19607] = 8.62471915E-03;
  COFD[19608] = -2.12382944E+01;
  COFD[19609] = 4.31600554E+00;
  COFD[19610] = -2.68872731E-01;
  COFD[19611] = 8.62471915E-03;
  COFD[19612] = -2.12455828E+01;
  COFD[19613] = 4.32753833E+00;
  COFD[19614] = -2.70634811E-01;
  COFD[19615] = 8.71140682E-03;
  COFD[19616] = -2.12455828E+01;
  COFD[19617] = 4.32753833E+00;
  COFD[19618] = -2.70634811E-01;
  COFD[19619] = 8.71140682E-03;
  COFD[19620] = -2.00589344E+01;
  COFD[19621] = 3.70669288E+00;
  COFD[19622] = -1.76242142E-01;
  COFD[19623] = 4.08636872E-03;
  COFD[19624] = -2.00589344E+01;
  COFD[19625] = 3.70669288E+00;
  COFD[19626] = -1.76242142E-01;
  COFD[19627] = 4.08636872E-03;
  COFD[19628] = -2.00589344E+01;
  COFD[19629] = 3.70669288E+00;
  COFD[19630] = -1.76242142E-01;
  COFD[19631] = 4.08636872E-03;
  COFD[19632] = -2.00589344E+01;
  COFD[19633] = 3.70669288E+00;
  COFD[19634] = -1.76242142E-01;
  COFD[19635] = 4.08636872E-03;
  COFD[19636] = -2.00589344E+01;
  COFD[19637] = 3.70669288E+00;
  COFD[19638] = -1.76242142E-01;
  COFD[19639] = 4.08636872E-03;
  COFD[19640] = -2.00589344E+01;
  COFD[19641] = 3.70669288E+00;
  COFD[19642] = -1.76242142E-01;
  COFD[19643] = 4.08636872E-03;
  COFD[19644] = -2.00589344E+01;
  COFD[19645] = 3.70669288E+00;
  COFD[19646] = -1.76242142E-01;
  COFD[19647] = 4.08636872E-03;
  COFD[19648] = -2.00589344E+01;
  COFD[19649] = 3.70669288E+00;
  COFD[19650] = -1.76242142E-01;
  COFD[19651] = 4.08636872E-03;
  COFD[19652] = -2.00589344E+01;
  COFD[19653] = 3.70669288E+00;
  COFD[19654] = -1.76242142E-01;
  COFD[19655] = 4.08636872E-03;
  COFD[19656] = -2.00589344E+01;
  COFD[19657] = 3.70669288E+00;
  COFD[19658] = -1.76242142E-01;
  COFD[19659] = 4.08636872E-03;
  COFD[19660] = -2.00589344E+01;
  COFD[19661] = 3.70669288E+00;
  COFD[19662] = -1.76242142E-01;
  COFD[19663] = 4.08636872E-03;
  COFD[19664] = -2.00589344E+01;
  COFD[19665] = 3.70669288E+00;
  COFD[19666] = -1.76242142E-01;
  COFD[19667] = 4.08636872E-03;
  COFD[19668] = -1.97278824E+01;
  COFD[19669] = 3.45878243E+00;
  COFD[19670] = -1.39122389E-01;
  COFD[19671] = 2.28755091E-03;
  COFD[19672] = -1.97278824E+01;
  COFD[19673] = 3.45878243E+00;
  COFD[19674] = -1.39122389E-01;
  COFD[19675] = 2.28755091E-03;
  COFD[19676] = -1.97278824E+01;
  COFD[19677] = 3.45878243E+00;
  COFD[19678] = -1.39122389E-01;
  COFD[19679] = 2.28755091E-03;
  COFD[19680] = -1.97278824E+01;
  COFD[19681] = 3.45878243E+00;
  COFD[19682] = -1.39122389E-01;
  COFD[19683] = 2.28755091E-03;
  COFD[19684] = -2.05405485E+01;
  COFD[19685] = 3.96097000E+00;
  COFD[19686] = -2.15163202E-01;
  COFD[19687] = 5.99928058E-03;
  COFD[19688] = -2.05405485E+01;
  COFD[19689] = 3.96097000E+00;
  COFD[19690] = -2.15163202E-01;
  COFD[19691] = 5.99928058E-03;
  COFD[19692] = -1.98575925E+01;
  COFD[19693] = 3.58487702E+00;
  COFD[19694] = -1.57907725E-01;
  COFD[19695] = 3.19471943E-03;
  COFD[19696] = -1.98575925E+01;
  COFD[19697] = 3.58487702E+00;
  COFD[19698] = -1.57907725E-01;
  COFD[19699] = 3.19471943E-03;
  COFD[19700] = -1.98575925E+01;
  COFD[19701] = 3.58487702E+00;
  COFD[19702] = -1.57907725E-01;
  COFD[19703] = 3.19471943E-03;
  COFD[19704] = -1.98575925E+01;
  COFD[19705] = 3.58487702E+00;
  COFD[19706] = -1.57907725E-01;
  COFD[19707] = 3.19471943E-03;
  COFD[19708] = -2.10396413E+01;
  COFD[19709] = 5.20813111E+00;
  COFD[19710] = -4.52293014E-01;
  COFD[19711] = 1.92532631E-02;
  COFD[19712] = -2.03034546E+01;
  COFD[19713] = 5.53557319E+00;
  COFD[19714] = -4.85990338E-01;
  COFD[19715] = 2.03641963E-02;
  COFD[19716] = -1.66980019E+01;
  COFD[19717] = 4.12591961E+00;
  COFD[19718] = -3.23243032E-01;
  COFD[19719] = 1.41172864E-02;
  COFD[19720] = -1.99900704E+01;
  COFD[19721] = 4.96711761E+00;
  COFD[19722] = -4.25105068E-01;
  COFD[19723] = 1.82385315E-02;
  COFD[19724] = -2.15742484E+01;
  COFD[19725] = 5.35156265E+00;
  COFD[19726] = -4.68920349E-01;
  COFD[19727] = 1.98962075E-02;
  COFD[19728] = -2.00157092E+01;
  COFD[19729] = 4.96711761E+00;
  COFD[19730] = -4.25105068E-01;
  COFD[19731] = 1.82385315E-02;
  COFD[19732] = -1.74151283E+01;
  COFD[19733] = 3.09977040E+00;
  COFD[19734] = -8.94095036E-02;
  COFD[19735] = 4.57257649E-05;
  COFD[19736] = -2.12396657E+01;
  COFD[19737] = 5.24049689E+00;
  COFD[19738] = -4.56053883E-01;
  COFD[19739] = 1.93989985E-02;
  COFD[19740] = -2.00933398E+01;
  COFD[19741] = 4.14890473E+00;
  COFD[19742] = -2.43477935E-01;
  COFD[19743] = 7.37955243E-03;
  COFD[19744] = -2.27116223E+01;
  COFD[19745] = 5.46024138E+00;
  COFD[19746] = -4.54393167E-01;
  COFD[19747] = 1.81267166E-02;
  COFD[19748] = -2.19634285E+01;
  COFD[19749] = 5.52955285E+00;
  COFD[19750] = -4.85397307E-01;
  COFD[19751] = 2.03459361E-02;
  COFD[19752] = -2.20700524E+01;
  COFD[19753] = 5.55543391E+00;
  COFD[19754] = -4.87954417E-01;
  COFD[19755] = 2.04251880E-02;
  COFD[19756] = -2.14405061E+01;
  COFD[19757] = 5.30533825E+00;
  COFD[19758] = -4.63794263E-01;
  COFD[19759] = 1.97083387E-02;
  COFD[19760] = -2.14513350E+01;
  COFD[19761] = 5.30533825E+00;
  COFD[19762] = -4.63794263E-01;
  COFD[19763] = 1.97083387E-02;
  COFD[19764] = -2.01060557E+01;
  COFD[19765] = 4.14890473E+00;
  COFD[19766] = -2.43477935E-01;
  COFD[19767] = 7.37955243E-03;
  COFD[19768] = -2.01876544E+01;
  COFD[19769] = 4.22261576E+00;
  COFD[19770] = -2.59143284E-01;
  COFD[19771] = 8.30812312E-03;
  COFD[19772] = -2.27258337E+01;
  COFD[19773] = 5.48315713E+00;
  COFD[19774] = -4.58556646E-01;
  COFD[19775] = 1.83548689E-02;
  COFD[19776] = -2.25324537E+01;
  COFD[19777] = 5.50183692E+00;
  COFD[19778] = -4.62651175E-01;
  COFD[19779] = 1.85983343E-02;
  COFD[19780] = -2.27131416E+01;
  COFD[19781] = 5.48315713E+00;
  COFD[19782] = -4.58556646E-01;
  COFD[19783] = 1.83548689E-02;
  COFD[19784] = -2.24469425E+01;
  COFD[19785] = 5.41354468E+00;
  COFD[19786] = -4.45930303E-01;
  COFD[19787] = 1.76640316E-02;
  COFD[19788] = -2.24614605E+01;
  COFD[19789] = 5.41354468E+00;
  COFD[19790] = -4.45930303E-01;
  COFD[19791] = 1.76640316E-02;
  COFD[19792] = -2.10838507E+01;
  COFD[19793] = 4.53343919E+00;
  COFD[19794] = -3.02436183E-01;
  COFD[19795] = 1.02880591E-02;
  COFD[19796] = -2.21719626E+01;
  COFD[19797] = 5.56261157E+00;
  COFD[19798] = -4.88568348E-01;
  COFD[19799] = 2.04392305E-02;
  COFD[19800] = -2.10917818E+01;
  COFD[19801] = 4.53343919E+00;
  COFD[19802] = -3.02436183E-01;
  COFD[19803] = 1.02880591E-02;
  COFD[19804] = -2.10917818E+01;
  COFD[19805] = 4.53343919E+00;
  COFD[19806] = -3.02436183E-01;
  COFD[19807] = 1.02880591E-02;
  COFD[19808] = -2.10994691E+01;
  COFD[19809] = 4.53343919E+00;
  COFD[19810] = -3.02436183E-01;
  COFD[19811] = 1.02880591E-02;
  COFD[19812] = -2.23101033E+01;
  COFD[19813] = 5.15611601E+00;
  COFD[19814] = -4.01609601E-01;
  COFD[19815] = 1.53101184E-02;
  COFD[19816] = -2.24260521E+01;
  COFD[19817] = 5.23331650E+00;
  COFD[19818] = -4.14617872E-01;
  COFD[19819] = 1.59921364E-02;
  COFD[19820] = -2.21643098E+01;
  COFD[19821] = 4.97774822E+00;
  COFD[19822] = -3.72720294E-01;
  COFD[19823] = 1.38305040E-02;
  COFD[19824] = -2.25884680E+01;
  COFD[19825] = 5.24929289E+00;
  COFD[19826] = -4.17432640E-01;
  COFD[19827] = 1.61433104E-02;
  COFD[19828] = -2.21836339E+01;
  COFD[19829] = 4.99165077E+00;
  COFD[19830] = -3.74908997E-01;
  COFD[19831] = 1.39407338E-02;
  COFD[19832] = -2.21891424E+01;
  COFD[19833] = 4.99165077E+00;
  COFD[19834] = -3.74908997E-01;
  COFD[19835] = 1.39407338E-02;
  COFD[19836] = -2.23377991E+01;
  COFD[19837] = 5.00926723E+00;
  COFD[19838] = -3.77721617E-01;
  COFD[19839] = 1.40834666E-02;
  COFD[19840] = -2.13618300E+01;
  COFD[19841] = 4.53637868E+00;
  COFD[19842] = -3.02892791E-01;
  COFD[19843] = 1.03107793E-02;
  COFD[19844] = -2.01988591E+01;
  COFD[19845] = 4.02839336E+00;
  COFD[19846] = -2.29443606E-01;
  COFD[19847] = 6.85128471E-03;
  COFD[19848] = -2.14687118E+01;
  COFD[19849] = 4.59527345E+00;
  COFD[19850] = -3.12121188E-01;
  COFD[19851] = 1.07722703E-02;
  COFD[19852] = -2.19218120E+01;
  COFD[19853] = 4.74287111E+00;
  COFD[19854] = -3.35542558E-01;
  COFD[19855] = 1.19547206E-02;
  COFD[19856] = -2.19363010E+01;
  COFD[19857] = 4.75781977E+00;
  COFD[19858] = -3.38914787E-01;
  COFD[19859] = 1.21572192E-02;
  COFD[19860] = -2.07806172E+01;
  COFD[19861] = 4.32618735E+00;
  COFD[19862] = -2.70428378E-01;
  COFD[19863] = 8.70125036E-03;
  COFD[19864] = -2.04981394E+01;
  COFD[19865] = 4.25911525E+00;
  COFD[19866] = -2.60173761E-01;
  COFD[19867] = 8.19680272E-03;
  COFD[19868] = -2.05049716E+01;
  COFD[19869] = 4.25911525E+00;
  COFD[19870] = -2.60173761E-01;
  COFD[19871] = 8.19680272E-03;
  COFD[19872] = -2.11184317E+01;
  COFD[19873] = 4.49163175E+00;
  COFD[19874] = -2.95930012E-01;
  COFD[19875] = 9.96384770E-03;
  COFD[19876] = -2.03284012E+01;
  COFD[19877] = 4.07020791E+00;
  COFD[19878] = -2.35851668E-01;
  COFD[19879] = 7.16637616E-03;
  COFD[19880] = -2.15995151E+01;
  COFD[19881] = 4.66447310E+00;
  COFD[19882] = -3.23134701E-01;
  COFD[19883] = 1.13292514E-02;
  COFD[19884] = -2.07304508E+01;
  COFD[19885] = 4.16220079E+00;
  COFD[19886] = -2.45489089E-01;
  COFD[19887] = 7.47783850E-03;
  COFD[19888] = -2.08586831E+01;
  COFD[19889] = 4.16220079E+00;
  COFD[19890] = -2.45489089E-01;
  COFD[19891] = 7.47783850E-03;
  COFD[19892] = -2.07891357E+01;
  COFD[19893] = 4.16220079E+00;
  COFD[19894] = -2.45489089E-01;
  COFD[19895] = 7.47783850E-03;
  COFD[19896] = -2.07891357E+01;
  COFD[19897] = 4.16220079E+00;
  COFD[19898] = -2.45489089E-01;
  COFD[19899] = 7.47783850E-03;
  COFD[19900] = -2.23801056E+01;
  COFD[19901] = 5.19977664E+00;
  COFD[19902] = -4.08876556E-01;
  COFD[19903] = 1.56887081E-02;
  COFD[19904] = -2.23013725E+01;
  COFD[19905] = 5.15611601E+00;
  COFD[19906] = -4.01609601E-01;
  COFD[19907] = 1.53101184E-02;
  COFD[19908] = -2.28416208E+01;
  COFD[19909] = 5.58482883E+00;
  COFD[19910] = -4.79495567E-01;
  COFD[19911] = 1.95713974E-02;
  COFD[19912] = -2.19337369E+01;
  COFD[19913] = 5.52955285E+00;
  COFD[19914] = -4.85397307E-01;
  COFD[19915] = 2.03459361E-02;
  COFD[19916] = -2.05484768E+01;
  COFD[19917] = 4.01239087E+00;
  COFD[19918] = -2.25976702E-01;
  COFD[19919] = 6.64189669E-03;
  COFD[19920] = -2.02024070E+01;
  COFD[19921] = 3.96287232E+00;
  COFD[19922] = -2.19068095E-01;
  COFD[19923] = 6.32660643E-03;
  COFD[19924] = -2.01985633E+01;
  COFD[19925] = 3.96287232E+00;
  COFD[19926] = -2.19068095E-01;
  COFD[19927] = 6.32660643E-03;
  COFD[19928] = -2.02093041E+01;
  COFD[19929] = 3.93545830E+00;
  COFD[19930] = -2.15167007E-01;
  COFD[19931] = 6.14710094E-03;
  COFD[19932] = -2.09051607E+01;
  COFD[19933] = 4.21060086E+00;
  COFD[19934] = -2.52810277E-01;
  COFD[19935] = 7.83596945E-03;
  COFD[19936] = -2.05033438E+01;
  COFD[19937] = 4.01239087E+00;
  COFD[19938] = -2.25976702E-01;
  COFD[19939] = 6.64189669E-03;
  COFD[19940] = -2.05003922E+01;
  COFD[19941] = 4.01239087E+00;
  COFD[19942] = -2.25976702E-01;
  COFD[19943] = 6.64189669E-03;
  COFD[19944] = -2.14724280E+01;
  COFD[19945] = 4.39307520E+00;
  COFD[19946] = -2.80700100E-01;
  COFD[19947] = 9.20842847E-03;
  COFD[19948] = -2.14700849E+01;
  COFD[19949] = 4.39307520E+00;
  COFD[19950] = -2.80700100E-01;
  COFD[19951] = 9.20842847E-03;
  COFD[19952] = -2.14700849E+01;
  COFD[19953] = 4.39307520E+00;
  COFD[19954] = -2.80700100E-01;
  COFD[19955] = 9.20842847E-03;
  COFD[19956] = -2.14700849E+01;
  COFD[19957] = 4.39307520E+00;
  COFD[19958] = -2.80700100E-01;
  COFD[19959] = 9.20842847E-03;
  COFD[19960] = -2.14700849E+01;
  COFD[19961] = 4.39307520E+00;
  COFD[19962] = -2.80700100E-01;
  COFD[19963] = 9.20842847E-03;
  COFD[19964] = -2.14317307E+01;
  COFD[19965] = 4.38678710E+00;
  COFD[19966] = -2.80183322E-01;
  COFD[19967] = 9.19860952E-03;
  COFD[19968] = -2.14317307E+01;
  COFD[19969] = 4.38678710E+00;
  COFD[19970] = -2.80183322E-01;
  COFD[19971] = 9.19860952E-03;
  COFD[19972] = -2.00006729E+01;
  COFD[19973] = 3.66436790E+00;
  COFD[19974] = -1.71934261E-01;
  COFD[19975] = 3.95119075E-03;
  COFD[19976] = -2.00006729E+01;
  COFD[19977] = 3.66436790E+00;
  COFD[19978] = -1.71934261E-01;
  COFD[19979] = 3.95119075E-03;
  COFD[19980] = -2.00006729E+01;
  COFD[19981] = 3.66436790E+00;
  COFD[19982] = -1.71934261E-01;
  COFD[19983] = 3.95119075E-03;
  COFD[19984] = -2.00006729E+01;
  COFD[19985] = 3.66436790E+00;
  COFD[19986] = -1.71934261E-01;
  COFD[19987] = 3.95119075E-03;
  COFD[19988] = -2.00006729E+01;
  COFD[19989] = 3.66436790E+00;
  COFD[19990] = -1.71934261E-01;
  COFD[19991] = 3.95119075E-03;
  COFD[19992] = -2.00006729E+01;
  COFD[19993] = 3.66436790E+00;
  COFD[19994] = -1.71934261E-01;
  COFD[19995] = 3.95119075E-03;
  COFD[19996] = -2.00006729E+01;
  COFD[19997] = 3.66436790E+00;
  COFD[19998] = -1.71934261E-01;
  COFD[19999] = 3.95119075E-03;
  COFD[20000] = -2.00006729E+01;
  COFD[20001] = 3.66436790E+00;
  COFD[20002] = -1.71934261E-01;
  COFD[20003] = 3.95119075E-03;
  COFD[20004] = -2.00006729E+01;
  COFD[20005] = 3.66436790E+00;
  COFD[20006] = -1.71934261E-01;
  COFD[20007] = 3.95119075E-03;
  COFD[20008] = -2.00006729E+01;
  COFD[20009] = 3.66436790E+00;
  COFD[20010] = -1.71934261E-01;
  COFD[20011] = 3.95119075E-03;
  COFD[20012] = -2.00006729E+01;
  COFD[20013] = 3.66436790E+00;
  COFD[20014] = -1.71934261E-01;
  COFD[20015] = 3.95119075E-03;
  COFD[20016] = -2.00006729E+01;
  COFD[20017] = 3.66436790E+00;
  COFD[20018] = -1.71934261E-01;
  COFD[20019] = 3.95119075E-03;
  COFD[20020] = -1.97906542E+01;
  COFD[20021] = 3.47027069E+00;
  COFD[20022] = -1.42345842E-01;
  COFD[20023] = 2.49921923E-03;
  COFD[20024] = -1.97906542E+01;
  COFD[20025] = 3.47027069E+00;
  COFD[20026] = -1.42345842E-01;
  COFD[20027] = 2.49921923E-03;
  COFD[20028] = -1.97906542E+01;
  COFD[20029] = 3.47027069E+00;
  COFD[20030] = -1.42345842E-01;
  COFD[20031] = 2.49921923E-03;
  COFD[20032] = -1.97906542E+01;
  COFD[20033] = 3.47027069E+00;
  COFD[20034] = -1.42345842E-01;
  COFD[20035] = 2.49921923E-03;
  COFD[20036] = -2.08175871E+01;
  COFD[20037] = 4.05696628E+00;
  COFD[20038] = -2.29598957E-01;
  COFD[20039] = 6.70192586E-03;
  COFD[20040] = -2.08175871E+01;
  COFD[20041] = 4.05696628E+00;
  COFD[20042] = -2.29598957E-01;
  COFD[20043] = 6.70192586E-03;
  COFD[20044] = -1.98062805E+01;
  COFD[20045] = 3.54601621E+00;
  COFD[20046] = -1.54142413E-01;
  COFD[20047] = 3.08850126E-03;
  COFD[20048] = -1.98062805E+01;
  COFD[20049] = 3.54601621E+00;
  COFD[20050] = -1.54142413E-01;
  COFD[20051] = 3.08850126E-03;
  COFD[20052] = -1.98062805E+01;
  COFD[20053] = 3.54601621E+00;
  COFD[20054] = -1.54142413E-01;
  COFD[20055] = 3.08850126E-03;
  COFD[20056] = -1.98062805E+01;
  COFD[20057] = 3.54601621E+00;
  COFD[20058] = -1.54142413E-01;
  COFD[20059] = 3.08850126E-03;
  COFD[20060] = -2.11992523E+01;
  COFD[20061] = 5.22891952E+00;
  COFD[20062] = -4.54711908E-01;
  COFD[20063] = 1.93471470E-02;
  COFD[20064] = -2.03033861E+01;
  COFD[20065] = 5.53557319E+00;
  COFD[20066] = -4.85990338E-01;
  COFD[20067] = 2.03641963E-02;
  COFD[20068] = -1.66978665E+01;
  COFD[20069] = 4.12591961E+00;
  COFD[20070] = -3.23243032E-01;
  COFD[20071] = 1.41172864E-02;
  COFD[20072] = -1.99891438E+01;
  COFD[20073] = 4.96711761E+00;
  COFD[20074] = -4.25105068E-01;
  COFD[20075] = 1.82385315E-02;
  COFD[20076] = -2.15726472E+01;
  COFD[20077] = 5.35156265E+00;
  COFD[20078] = -4.68920349E-01;
  COFD[20079] = 1.98962075E-02;
  COFD[20080] = -2.00147339E+01;
  COFD[20081] = 4.96711761E+00;
  COFD[20082] = -4.25105068E-01;
  COFD[20083] = 1.82385315E-02;
  COFD[20084] = -1.74141053E+01;
  COFD[20085] = 3.09977040E+00;
  COFD[20086] = -8.94095036E-02;
  COFD[20087] = 4.57257649E-05;
  COFD[20088] = -2.12382149E+01;
  COFD[20089] = 5.24049689E+00;
  COFD[20090] = -4.56053883E-01;
  COFD[20091] = 1.93989985E-02;
  COFD[20092] = -2.00918501E+01;
  COFD[20093] = 4.14890473E+00;
  COFD[20094] = -2.43477935E-01;
  COFD[20095] = 7.37955243E-03;
  COFD[20096] = -2.27096242E+01;
  COFD[20097] = 5.46024138E+00;
  COFD[20098] = -4.54393167E-01;
  COFD[20099] = 1.81267166E-02;
  COFD[20100] = -2.19625494E+01;
  COFD[20101] = 5.52955285E+00;
  COFD[20102] = -4.85397307E-01;
  COFD[20103] = 2.03459361E-02;
  COFD[20104] = -2.20691237E+01;
  COFD[20105] = 5.55543391E+00;
  COFD[20106] = -4.87954417E-01;
  COFD[20107] = 2.04251880E-02;
  COFD[20108] = -2.14388686E+01;
  COFD[20109] = 5.30533825E+00;
  COFD[20110] = -4.63794263E-01;
  COFD[20111] = 1.97083387E-02;
  COFD[20112] = -2.14496617E+01;
  COFD[20113] = 5.30533825E+00;
  COFD[20114] = -4.63794263E-01;
  COFD[20115] = 1.97083387E-02;
  COFD[20116] = -2.01045276E+01;
  COFD[20117] = 4.14890473E+00;
  COFD[20118] = -2.43477935E-01;
  COFD[20119] = 7.37955243E-03;
  COFD[20120] = -2.01860887E+01;
  COFD[20121] = 4.22261576E+00;
  COFD[20122] = -2.59143284E-01;
  COFD[20123] = 8.30812312E-03;
  COFD[20124] = -2.27243040E+01;
  COFD[20125] = 5.48315713E+00;
  COFD[20126] = -4.58556646E-01;
  COFD[20127] = 1.83548689E-02;
  COFD[20128] = -2.25310012E+01;
  COFD[20129] = 5.50183692E+00;
  COFD[20130] = -4.62651175E-01;
  COFD[20131] = 1.85983343E-02;
  COFD[20132] = -2.27116502E+01;
  COFD[20133] = 5.48315713E+00;
  COFD[20134] = -4.58556646E-01;
  COFD[20135] = 1.83548689E-02;
  COFD[20136] = -2.24455701E+01;
  COFD[20137] = 5.41354468E+00;
  COFD[20138] = -4.45930303E-01;
  COFD[20139] = 1.76640316E-02;
  COFD[20140] = -2.24600477E+01;
  COFD[20141] = 5.41354468E+00;
  COFD[20142] = -4.45930303E-01;
  COFD[20143] = 1.76640316E-02;
  COFD[20144] = -2.10819126E+01;
  COFD[20145] = 4.53343919E+00;
  COFD[20146] = -3.02436183E-01;
  COFD[20147] = 1.02880591E-02;
  COFD[20148] = -2.21700560E+01;
  COFD[20149] = 5.56261157E+00;
  COFD[20150] = -4.88568348E-01;
  COFD[20151] = 2.04392305E-02;
  COFD[20152] = -2.10898128E+01;
  COFD[20153] = 4.53343919E+00;
  COFD[20154] = -3.02436183E-01;
  COFD[20155] = 1.02880591E-02;
  COFD[20156] = -2.10898128E+01;
  COFD[20157] = 4.53343919E+00;
  COFD[20158] = -3.02436183E-01;
  COFD[20159] = 1.02880591E-02;
  COFD[20160] = -2.10974696E+01;
  COFD[20161] = 4.53343919E+00;
  COFD[20162] = -3.02436183E-01;
  COFD[20163] = 1.02880591E-02;
  COFD[20164] = -2.23082271E+01;
  COFD[20165] = 5.15611601E+00;
  COFD[20166] = -4.01609601E-01;
  COFD[20167] = 1.53101184E-02;
  COFD[20168] = -2.24241127E+01;
  COFD[20169] = 5.23331650E+00;
  COFD[20170] = -4.14617872E-01;
  COFD[20171] = 1.59921364E-02;
  COFD[20172] = -2.21620311E+01;
  COFD[20173] = 4.97774822E+00;
  COFD[20174] = -3.72720294E-01;
  COFD[20175] = 1.38305040E-02;
  COFD[20176] = -2.25864977E+01;
  COFD[20177] = 5.24929289E+00;
  COFD[20178] = -4.17432640E-01;
  COFD[20179] = 1.61433104E-02;
  COFD[20180] = -2.21813294E+01;
  COFD[20181] = 4.99165077E+00;
  COFD[20182] = -3.74908997E-01;
  COFD[20183] = 1.39407338E-02;
  COFD[20184] = -2.21868124E+01;
  COFD[20185] = 4.99165077E+00;
  COFD[20186] = -3.74908997E-01;
  COFD[20187] = 1.39407338E-02;
  COFD[20188] = -2.23354440E+01;
  COFD[20189] = 5.00926723E+00;
  COFD[20190] = -3.77721617E-01;
  COFD[20191] = 1.40834666E-02;
  COFD[20192] = -2.13594760E+01;
  COFD[20193] = 4.53637868E+00;
  COFD[20194] = -3.02892791E-01;
  COFD[20195] = 1.03107793E-02;
  COFD[20196] = -2.01964803E+01;
  COFD[20197] = 4.02839336E+00;
  COFD[20198] = -2.29443606E-01;
  COFD[20199] = 6.85128471E-03;
  COFD[20200] = -2.14663577E+01;
  COFD[20201] = 4.59527345E+00;
  COFD[20202] = -3.12121188E-01;
  COFD[20203] = 1.07722703E-02;
  COFD[20204] = -2.19191828E+01;
  COFD[20205] = 4.74287111E+00;
  COFD[20206] = -3.35542558E-01;
  COFD[20207] = 1.19547206E-02;
  COFD[20208] = -2.19336508E+01;
  COFD[20209] = 4.75781977E+00;
  COFD[20210] = -3.38914787E-01;
  COFD[20211] = 1.21572192E-02;
  COFD[20212] = -2.07785878E+01;
  COFD[20213] = 4.32618735E+00;
  COFD[20214] = -2.70428378E-01;
  COFD[20215] = 8.70125036E-03;
  COFD[20216] = -2.04960526E+01;
  COFD[20217] = 4.25911525E+00;
  COFD[20218] = -2.60173761E-01;
  COFD[20219] = 8.19680272E-03;
  COFD[20220] = -2.05028562E+01;
  COFD[20221] = 4.25911525E+00;
  COFD[20222] = -2.60173761E-01;
  COFD[20223] = 8.19680272E-03;
  COFD[20224] = -2.11161283E+01;
  COFD[20225] = 4.49163175E+00;
  COFD[20226] = -2.95930012E-01;
  COFD[20227] = 9.96384770E-03;
  COFD[20228] = -2.03260723E+01;
  COFD[20229] = 4.07020791E+00;
  COFD[20230] = -2.35851668E-01;
  COFD[20231] = 7.16637616E-03;
  COFD[20232] = -2.15971611E+01;
  COFD[20233] = 4.66447310E+00;
  COFD[20234] = -3.23134701E-01;
  COFD[20235] = 1.13292514E-02;
  COFD[20236] = -2.07277807E+01;
  COFD[20237] = 4.16220079E+00;
  COFD[20238] = -2.45489089E-01;
  COFD[20239] = 7.47783850E-03;
  COFD[20240] = -2.08552351E+01;
  COFD[20241] = 4.16220079E+00;
  COFD[20242] = -2.45489089E-01;
  COFD[20243] = 7.47783850E-03;
  COFD[20244] = -2.07861341E+01;
  COFD[20245] = 4.16220079E+00;
  COFD[20246] = -2.45489089E-01;
  COFD[20247] = 7.47783850E-03;
  COFD[20248] = -2.07861341E+01;
  COFD[20249] = 4.16220079E+00;
  COFD[20250] = -2.45489089E-01;
  COFD[20251] = 7.47783850E-03;
  COFD[20252] = -2.23781976E+01;
  COFD[20253] = 5.19977664E+00;
  COFD[20254] = -4.08876556E-01;
  COFD[20255] = 1.56887081E-02;
  COFD[20256] = -2.22995288E+01;
  COFD[20257] = 5.15611601E+00;
  COFD[20258] = -4.01609601E-01;
  COFD[20259] = 1.53101184E-02;
  COFD[20260] = -2.28398100E+01;
  COFD[20261] = 5.58482883E+00;
  COFD[20262] = -4.79495567E-01;
  COFD[20263] = 1.95713974E-02;
  COFD[20264] = -2.19329084E+01;
  COFD[20265] = 5.52955285E+00;
  COFD[20266] = -4.85397307E-01;
  COFD[20267] = 2.03459361E-02;
  COFD[20268] = -2.05452473E+01;
  COFD[20269] = 4.01239087E+00;
  COFD[20270] = -2.25976702E-01;
  COFD[20271] = 6.64189669E-03;
  COFD[20272] = -2.01997163E+01;
  COFD[20273] = 3.96287232E+00;
  COFD[20274] = -2.19068095E-01;
  COFD[20275] = 6.32660643E-03;
  COFD[20276] = -2.01958932E+01;
  COFD[20277] = 3.96287232E+00;
  COFD[20278] = -2.19068095E-01;
  COFD[20279] = 6.32660643E-03;
  COFD[20280] = -2.02066340E+01;
  COFD[20281] = 3.93545830E+00;
  COFD[20282] = -2.15167007E-01;
  COFD[20283] = 6.14710094E-03;
  COFD[20284] = -2.09022264E+01;
  COFD[20285] = 4.21060086E+00;
  COFD[20286] = -2.52810277E-01;
  COFD[20287] = 7.83596945E-03;
  COFD[20288] = -2.05003922E+01;
  COFD[20289] = 4.01239087E+00;
  COFD[20290] = -2.25976702E-01;
  COFD[20291] = 6.64189669E-03;
  COFD[20292] = -2.04974579E+01;
  COFD[20293] = 4.01239087E+00;
  COFD[20294] = -2.25976702E-01;
  COFD[20295] = 6.64189669E-03;
  COFD[20296] = -2.14692542E+01;
  COFD[20297] = 4.39307520E+00;
  COFD[20298] = -2.80700100E-01;
  COFD[20299] = 9.20842847E-03;
  COFD[20300] = -2.14669259E+01;
  COFD[20301] = 4.39307520E+00;
  COFD[20302] = -2.80700100E-01;
  COFD[20303] = 9.20842847E-03;
  COFD[20304] = -2.14669259E+01;
  COFD[20305] = 4.39307520E+00;
  COFD[20306] = -2.80700100E-01;
  COFD[20307] = 9.20842847E-03;
  COFD[20308] = -2.14669259E+01;
  COFD[20309] = 4.39307520E+00;
  COFD[20310] = -2.80700100E-01;
  COFD[20311] = 9.20842847E-03;
  COFD[20312] = -2.14669259E+01;
  COFD[20313] = 4.39307520E+00;
  COFD[20314] = -2.80700100E-01;
  COFD[20315] = 9.20842847E-03;
  COFD[20316] = -2.14285866E+01;
  COFD[20317] = 4.38678710E+00;
  COFD[20318] = -2.80183322E-01;
  COFD[20319] = 9.19860952E-03;
  COFD[20320] = -2.14285866E+01;
  COFD[20321] = 4.38678710E+00;
  COFD[20322] = -2.80183322E-01;
  COFD[20323] = 9.19860952E-03;
  COFD[20324] = -1.99971115E+01;
  COFD[20325] = 3.66436790E+00;
  COFD[20326] = -1.71934261E-01;
  COFD[20327] = 3.95119075E-03;
  COFD[20328] = -1.99971115E+01;
  COFD[20329] = 3.66436790E+00;
  COFD[20330] = -1.71934261E-01;
  COFD[20331] = 3.95119075E-03;
  COFD[20332] = -1.99971115E+01;
  COFD[20333] = 3.66436790E+00;
  COFD[20334] = -1.71934261E-01;
  COFD[20335] = 3.95119075E-03;
  COFD[20336] = -1.99971115E+01;
  COFD[20337] = 3.66436790E+00;
  COFD[20338] = -1.71934261E-01;
  COFD[20339] = 3.95119075E-03;
  COFD[20340] = -1.99971115E+01;
  COFD[20341] = 3.66436790E+00;
  COFD[20342] = -1.71934261E-01;
  COFD[20343] = 3.95119075E-03;
  COFD[20344] = -1.99971115E+01;
  COFD[20345] = 3.66436790E+00;
  COFD[20346] = -1.71934261E-01;
  COFD[20347] = 3.95119075E-03;
  COFD[20348] = -1.99971115E+01;
  COFD[20349] = 3.66436790E+00;
  COFD[20350] = -1.71934261E-01;
  COFD[20351] = 3.95119075E-03;
  COFD[20352] = -1.99971115E+01;
  COFD[20353] = 3.66436790E+00;
  COFD[20354] = -1.71934261E-01;
  COFD[20355] = 3.95119075E-03;
  COFD[20356] = -1.99971115E+01;
  COFD[20357] = 3.66436790E+00;
  COFD[20358] = -1.71934261E-01;
  COFD[20359] = 3.95119075E-03;
  COFD[20360] = -1.99971115E+01;
  COFD[20361] = 3.66436790E+00;
  COFD[20362] = -1.71934261E-01;
  COFD[20363] = 3.95119075E-03;
  COFD[20364] = -1.99971115E+01;
  COFD[20365] = 3.66436790E+00;
  COFD[20366] = -1.71934261E-01;
  COFD[20367] = 3.95119075E-03;
  COFD[20368] = -1.99971115E+01;
  COFD[20369] = 3.66436790E+00;
  COFD[20370] = -1.71934261E-01;
  COFD[20371] = 3.95119075E-03;
  COFD[20372] = -1.97867938E+01;
  COFD[20373] = 3.47027069E+00;
  COFD[20374] = -1.42345842E-01;
  COFD[20375] = 2.49921923E-03;
  COFD[20376] = -1.97867938E+01;
  COFD[20377] = 3.47027069E+00;
  COFD[20378] = -1.42345842E-01;
  COFD[20379] = 2.49921923E-03;
  COFD[20380] = -1.97867938E+01;
  COFD[20381] = 3.47027069E+00;
  COFD[20382] = -1.42345842E-01;
  COFD[20383] = 2.49921923E-03;
  COFD[20384] = -1.97867938E+01;
  COFD[20385] = 3.47027069E+00;
  COFD[20386] = -1.42345842E-01;
  COFD[20387] = 2.49921923E-03;
  COFD[20388] = -2.08142236E+01;
  COFD[20389] = 4.05696628E+00;
  COFD[20390] = -2.29598957E-01;
  COFD[20391] = 6.70192586E-03;
  COFD[20392] = -2.08142236E+01;
  COFD[20393] = 4.05696628E+00;
  COFD[20394] = -2.29598957E-01;
  COFD[20395] = 6.70192586E-03;
  COFD[20396] = -1.98025688E+01;
  COFD[20397] = 3.54601621E+00;
  COFD[20398] = -1.54142413E-01;
  COFD[20399] = 3.08850126E-03;
  COFD[20400] = -1.98025688E+01;
  COFD[20401] = 3.54601621E+00;
  COFD[20402] = -1.54142413E-01;
  COFD[20403] = 3.08850126E-03;
  COFD[20404] = -1.98025688E+01;
  COFD[20405] = 3.54601621E+00;
  COFD[20406] = -1.54142413E-01;
  COFD[20407] = 3.08850126E-03;
  COFD[20408] = -1.98025688E+01;
  COFD[20409] = 3.54601621E+00;
  COFD[20410] = -1.54142413E-01;
  COFD[20411] = 3.08850126E-03;
  COFD[20412] = -2.11978013E+01;
  COFD[20413] = 5.22891952E+00;
  COFD[20414] = -4.54711908E-01;
  COFD[20415] = 1.93471470E-02;
  COFD[20416] = -2.03114371E+01;
  COFD[20417] = 5.50136606E+00;
  COFD[20418] = -4.82461887E-01;
  COFD[20419] = 2.02471523E-02;
  COFD[20420] = -1.64899690E+01;
  COFD[20421] = 4.01175649E+00;
  COFD[20422] = -3.08860971E-01;
  COFD[20423] = 1.35100076E-02;
  COFD[20424] = -1.99792069E+01;
  COFD[20425] = 4.92184026E+00;
  COFD[20426] = -4.19745472E-01;
  COFD[20427] = 1.80268154E-02;
  COFD[20428] = -2.13968193E+01;
  COFD[20429] = 5.25183817E+00;
  COFD[20430] = -4.57376333E-01;
  COFD[20431] = 1.94504429E-02;
  COFD[20432] = -2.00054378E+01;
  COFD[20433] = 4.92184026E+00;
  COFD[20434] = -4.19745472E-01;
  COFD[20435] = 1.80268154E-02;
  COFD[20436] = -1.91334458E+01;
  COFD[20437] = 3.82263611E+00;
  COFD[20438] = -1.93983472E-01;
  COFD[20439] = 4.95789388E-03;
  COFD[20440] = -2.10855030E+01;
  COFD[20441] = 5.15315713E+00;
  COFD[20442] = -4.46344043E-01;
  COFD[20443] = 1.90431546E-02;
  COFD[20444] = -2.04500269E+01;
  COFD[20445] = 4.26473557E+00;
  COFD[20446] = -2.61033037E-01;
  COFD[20447] = 8.23906412E-03;
  COFD[20448] = -2.28671163E+01;
  COFD[20449] = 5.50522401E+00;
  COFD[20450] = -4.63604304E-01;
  COFD[20451] = 1.86600785E-02;
  COFD[20452] = -2.19557524E+01;
  COFD[20453] = 5.49350509E+00;
  COFD[20454] = -4.81613405E-01;
  COFD[20455] = 2.02171734E-02;
  COFD[20456] = -2.19060849E+01;
  COFD[20457] = 5.47162499E+00;
  COFD[20458] = -4.79195552E-01;
  COFD[20459] = 2.01289088E-02;
  COFD[20460] = -2.14085295E+01;
  COFD[20461] = 5.25183817E+00;
  COFD[20462] = -4.57376333E-01;
  COFD[20463] = 1.94504429E-02;
  COFD[20464] = -2.14198017E+01;
  COFD[20465] = 5.25183817E+00;
  COFD[20466] = -4.57376333E-01;
  COFD[20467] = 1.94504429E-02;
  COFD[20468] = -2.04632155E+01;
  COFD[20469] = 4.26473557E+00;
  COFD[20470] = -2.61033037E-01;
  COFD[20471] = 8.23906412E-03;
  COFD[20472] = -2.13757653E+01;
  COFD[20473] = 4.71094320E+00;
  COFD[20474] = -3.30478653E-01;
  COFD[20475] = 1.16991305E-02;
  COFD[20476] = -2.28458372E+01;
  COFD[20477] = 5.50134401E+00;
  COFD[20478] = -4.62488197E-01;
  COFD[20479] = 1.85873697E-02;
  COFD[20480] = -2.26591021E+01;
  COFD[20481] = 5.52001624E+00;
  COFD[20482] = -4.66629503E-01;
  COFD[20483] = 1.88355817E-02;
  COFD[20484] = -2.28326727E+01;
  COFD[20485] = 5.50134401E+00;
  COFD[20486] = -4.62488197E-01;
  COFD[20487] = 1.85873697E-02;
  COFD[20488] = -2.26099871E+01;
  COFD[20489] = 5.44867280E+00;
  COFD[20490] = -4.52284883E-01;
  COFD[20491] = 1.80110706E-02;
  COFD[20492] = -2.26250017E+01;
  COFD[20493] = 5.44867280E+00;
  COFD[20494] = -4.52284883E-01;
  COFD[20495] = 1.80110706E-02;
  COFD[20496] = -2.13539484E+01;
  COFD[20497] = 4.61201872E+00;
  COFD[20498] = -3.14803338E-01;
  COFD[20499] = 1.09082984E-02;
  COFD[20500] = -2.22108556E+01;
  COFD[20501] = 5.53457356E+00;
  COFD[20502] = -4.85892223E-01;
  COFD[20503] = 2.03611937E-02;
  COFD[20504] = -2.13622656E+01;
  COFD[20505] = 4.61201872E+00;
  COFD[20506] = -3.14803338E-01;
  COFD[20507] = 1.09082984E-02;
  COFD[20508] = -2.13622656E+01;
  COFD[20509] = 4.61201872E+00;
  COFD[20510] = -3.14803338E-01;
  COFD[20511] = 1.09082984E-02;
  COFD[20512] = -2.13703333E+01;
  COFD[20513] = 4.61201872E+00;
  COFD[20514] = -3.14803338E-01;
  COFD[20515] = 1.09082984E-02;
  COFD[20516] = -2.25175283E+01;
  COFD[20517] = 5.21003123E+00;
  COFD[20518] = -4.10612564E-01;
  COFD[20519] = 1.57798598E-02;
  COFD[20520] = -2.26044872E+01;
  COFD[20521] = 5.27383847E+00;
  COFD[20522] = -4.21722368E-01;
  COFD[20523] = 1.63729618E-02;
  COFD[20524] = -2.24179738E+01;
  COFD[20525] = 5.05061421E+00;
  COFD[20526] = -3.84359196E-01;
  COFD[20527] = 1.44214004E-02;
  COFD[20528] = -2.27731123E+01;
  COFD[20529] = 5.29493402E+00;
  COFD[20530] = -4.25285978E-01;
  COFD[20531] = 1.65604533E-02;
  COFD[20532] = -2.24302537E+01;
  COFD[20533] = 5.06106414E+00;
  COFD[20534] = -3.86053039E-01;
  COFD[20535] = 1.45081784E-02;
  COFD[20536] = -2.24360833E+01;
  COFD[20537] = 5.06106414E+00;
  COFD[20538] = -3.86053039E-01;
  COFD[20539] = 1.45081784E-02;
  COFD[20540] = -2.25751735E+01;
  COFD[20541] = 5.07648425E+00;
  COFD[20542] = -3.88560019E-01;
  COFD[20543] = 1.46368353E-02;
  COFD[20544] = -2.16278847E+01;
  COFD[20545] = 4.61434262E+00;
  COFD[20546] = -3.15175110E-01;
  COFD[20547] = 1.09271555E-02;
  COFD[20548] = -2.16000912E+01;
  COFD[20549] = 4.61573576E+00;
  COFD[20550] = -3.15398040E-01;
  COFD[20551] = 1.09384650E-02;
  COFD[20552] = -2.17271133E+01;
  COFD[20553] = 4.67024106E+00;
  COFD[20554] = -3.24044321E-01;
  COFD[20555] = 1.13750034E-02;
  COFD[20556] = -2.21717144E+01;
  COFD[20557] = 4.81459861E+00;
  COFD[20558] = -3.46990321E-01;
  COFD[20559] = 1.25347154E-02;
  COFD[20560] = -2.23002787E+01;
  COFD[20561] = 4.87626494E+00;
  COFD[20562] = -3.56718447E-01;
  COFD[20563] = 1.30246317E-02;
  COFD[20564] = -2.10989194E+01;
  COFD[20565] = 4.42639566E+00;
  COFD[20566] = -2.85821723E-01;
  COFD[20567] = 9.46169352E-03;
  COFD[20568] = -2.08252513E+01;
  COFD[20569] = 4.35920123E+00;
  COFD[20570] = -2.75491273E-01;
  COFD[20571] = 8.95100289E-03;
  COFD[20572] = -2.08324426E+01;
  COFD[20573] = 4.35920123E+00;
  COFD[20574] = -2.75491273E-01;
  COFD[20575] = 8.95100289E-03;
  COFD[20576] = -2.14119125E+01;
  COFD[20577] = 4.57887376E+00;
  COFD[20578] = -3.09523118E-01;
  COFD[20579] = 1.06414780E-02;
  COFD[20580] = -2.17021160E+01;
  COFD[20581] = 4.64740770E+00;
  COFD[20582] = -3.20446431E-01;
  COFD[20583] = 1.11941302E-02;
  COFD[20584] = -2.18655480E+01;
  COFD[20585] = 4.74264746E+00;
  COFD[20586] = -3.35507171E-01;
  COFD[20587] = 1.19529371E-02;
  COFD[20588] = -2.10832812E+01;
  COFD[20589] = 4.27612828E+00;
  COFD[20590] = -2.62774610E-01;
  COFD[20591] = 8.32471127E-03;
  COFD[20592] = -2.12215243E+01;
  COFD[20593] = 4.27612828E+00;
  COFD[20594] = -2.62774610E-01;
  COFD[20595] = 8.32471127E-03;
  COFD[20596] = -2.11462060E+01;
  COFD[20597] = 4.27612828E+00;
  COFD[20598] = -2.62774610E-01;
  COFD[20599] = 8.32471127E-03;
  COFD[20600] = -2.11462060E+01;
  COFD[20601] = 4.27612828E+00;
  COFD[20602] = -2.62774610E-01;
  COFD[20603] = 8.32471127E-03;
  COFD[20604] = -2.25650323E+01;
  COFD[20605] = 5.24330646E+00;
  COFD[20606] = -4.16370120E-01;
  COFD[20607] = 1.60860486E-02;
  COFD[20608] = -2.25083939E+01;
  COFD[20609] = 5.21003123E+00;
  COFD[20610] = -4.10612564E-01;
  COFD[20611] = 1.57798598E-02;
  COFD[20612] = -2.29268152E+01;
  COFD[20613] = 5.58520405E+00;
  COFD[20614] = -4.80873447E-01;
  COFD[20615] = 1.96836519E-02;
  COFD[20616] = -2.19254467E+01;
  COFD[20617] = 5.49350509E+00;
  COFD[20618] = -4.81613405E-01;
  COFD[20619] = 2.02171734E-02;
  COFD[20620] = -2.15211404E+01;
  COFD[20621] = 4.39307520E+00;
  COFD[20622] = -2.80700100E-01;
  COFD[20623] = 9.20842847E-03;
  COFD[20624] = -2.14316955E+01;
  COFD[20625] = 4.46330617E+00;
  COFD[20626] = -2.91524840E-01;
  COFD[20627] = 9.74451306E-03;
  COFD[20628] = -2.14275901E+01;
  COFD[20629] = 4.46330617E+00;
  COFD[20630] = -2.91524840E-01;
  COFD[20631] = 9.74451306E-03;
  COFD[20632] = -2.16089376E+01;
  COFD[20633] = 4.51951091E+00;
  COFD[20634] = -3.00270210E-01;
  COFD[20635] = 1.01801697E-02;
  COFD[20636] = -2.12406226E+01;
  COFD[20637] = 4.31600554E+00;
  COFD[20638] = -2.68872731E-01;
  COFD[20639] = 8.62471915E-03;
  COFD[20640] = -2.14724280E+01;
  COFD[20641] = 4.39307520E+00;
  COFD[20642] = -2.80700100E-01;
  COFD[20643] = 9.20842847E-03;
  COFD[20644] = -2.14692542E+01;
  COFD[20645] = 4.39307520E+00;
  COFD[20646] = -2.80700100E-01;
  COFD[20647] = 9.20842847E-03;
  COFD[20648] = -2.17797069E+01;
  COFD[20649] = 4.48837319E+00;
  COFD[20650] = -2.95423315E-01;
  COFD[20651] = 9.93861345E-03;
  COFD[20652] = -2.17771730E+01;
  COFD[20653] = 4.48837319E+00;
  COFD[20654] = -2.95423315E-01;
  COFD[20655] = 9.93861345E-03;
  COFD[20656] = -2.17771730E+01;
  COFD[20657] = 4.48837319E+00;
  COFD[20658] = -2.95423315E-01;
  COFD[20659] = 9.93861345E-03;
  COFD[20660] = -2.17771730E+01;
  COFD[20661] = 4.48837319E+00;
  COFD[20662] = -2.95423315E-01;
  COFD[20663] = 9.93861345E-03;
  COFD[20664] = -2.17771730E+01;
  COFD[20665] = 4.48837319E+00;
  COFD[20666] = -2.95423315E-01;
  COFD[20667] = 9.93861345E-03;
  COFD[20668] = -2.17815497E+01;
  COFD[20669] = 4.49839225E+00;
  COFD[20670] = -2.96981647E-01;
  COFD[20671] = 1.00162342E-02;
  COFD[20672] = -2.17815497E+01;
  COFD[20673] = 4.49839225E+00;
  COFD[20674] = -2.96981647E-01;
  COFD[20675] = 1.00162342E-02;
  COFD[20676] = -2.05948978E+01;
  COFD[20677] = 3.87488983E+00;
  COFD[20678] = -2.02017141E-01;
  COFD[20679] = 5.35367024E-03;
  COFD[20680] = -2.05948978E+01;
  COFD[20681] = 3.87488983E+00;
  COFD[20682] = -2.02017141E-01;
  COFD[20683] = 5.35367024E-03;
  COFD[20684] = -2.05948978E+01;
  COFD[20685] = 3.87488983E+00;
  COFD[20686] = -2.02017141E-01;
  COFD[20687] = 5.35367024E-03;
  COFD[20688] = -2.05948978E+01;
  COFD[20689] = 3.87488983E+00;
  COFD[20690] = -2.02017141E-01;
  COFD[20691] = 5.35367024E-03;
  COFD[20692] = -2.05948978E+01;
  COFD[20693] = 3.87488983E+00;
  COFD[20694] = -2.02017141E-01;
  COFD[20695] = 5.35367024E-03;
  COFD[20696] = -2.05948978E+01;
  COFD[20697] = 3.87488983E+00;
  COFD[20698] = -2.02017141E-01;
  COFD[20699] = 5.35367024E-03;
  COFD[20700] = -2.05948978E+01;
  COFD[20701] = 3.87488983E+00;
  COFD[20702] = -2.02017141E-01;
  COFD[20703] = 5.35367024E-03;
  COFD[20704] = -2.05948978E+01;
  COFD[20705] = 3.87488983E+00;
  COFD[20706] = -2.02017141E-01;
  COFD[20707] = 5.35367024E-03;
  COFD[20708] = -2.05948978E+01;
  COFD[20709] = 3.87488983E+00;
  COFD[20710] = -2.02017141E-01;
  COFD[20711] = 5.35367024E-03;
  COFD[20712] = -2.05948978E+01;
  COFD[20713] = 3.87488983E+00;
  COFD[20714] = -2.02017141E-01;
  COFD[20715] = 5.35367024E-03;
  COFD[20716] = -2.05948978E+01;
  COFD[20717] = 3.87488983E+00;
  COFD[20718] = -2.02017141E-01;
  COFD[20719] = 5.35367024E-03;
  COFD[20720] = -2.05948978E+01;
  COFD[20721] = 3.87488983E+00;
  COFD[20722] = -2.02017141E-01;
  COFD[20723] = 5.35367024E-03;
  COFD[20724] = -2.04052753E+01;
  COFD[20725] = 3.68933740E+00;
  COFD[20726] = -1.73601961E-01;
  COFD[20727] = 3.95720919E-03;
  COFD[20728] = -2.04052753E+01;
  COFD[20729] = 3.68933740E+00;
  COFD[20730] = -1.73601961E-01;
  COFD[20731] = 3.95720919E-03;
  COFD[20732] = -2.04052753E+01;
  COFD[20733] = 3.68933740E+00;
  COFD[20734] = -1.73601961E-01;
  COFD[20735] = 3.95720919E-03;
  COFD[20736] = -2.04052753E+01;
  COFD[20737] = 3.68933740E+00;
  COFD[20738] = -1.73601961E-01;
  COFD[20739] = 3.95720919E-03;
  COFD[20740] = -2.11861416E+01;
  COFD[20741] = 4.17689041E+00;
  COFD[20742] = -2.47710878E-01;
  COFD[20743] = 7.58649691E-03;
  COFD[20744] = -2.11861416E+01;
  COFD[20745] = 4.17689041E+00;
  COFD[20746] = -2.47710878E-01;
  COFD[20747] = 7.58649691E-03;
  COFD[20748] = -2.04598528E+01;
  COFD[20749] = 3.78121973E+00;
  COFD[20750] = -1.87619388E-01;
  COFD[20751] = 4.64425873E-03;
  COFD[20752] = -2.04598528E+01;
  COFD[20753] = 3.78121973E+00;
  COFD[20754] = -1.87619388E-01;
  COFD[20755] = 4.64425873E-03;
  COFD[20756] = -2.04598528E+01;
  COFD[20757] = 3.78121973E+00;
  COFD[20758] = -1.87619388E-01;
  COFD[20759] = 4.64425873E-03;
  COFD[20760] = -2.04598528E+01;
  COFD[20761] = 3.78121973E+00;
  COFD[20762] = -1.87619388E-01;
  COFD[20763] = 4.64425873E-03;
  COFD[20764] = -2.10685665E+01;
  COFD[20765] = 5.15027524E+00;
  COFD[20766] = -4.46126111E-01;
  COFD[20767] = 1.90401391E-02;
  COFD[20768] = -2.03113865E+01;
  COFD[20769] = 5.50136606E+00;
  COFD[20770] = -4.82461887E-01;
  COFD[20771] = 2.02471523E-02;
  COFD[20772] = -1.64898688E+01;
  COFD[20773] = 4.01175649E+00;
  COFD[20774] = -3.08860971E-01;
  COFD[20775] = 1.35100076E-02;
  COFD[20776] = -1.99785079E+01;
  COFD[20777] = 4.92184026E+00;
  COFD[20778] = -4.19745472E-01;
  COFD[20779] = 1.80268154E-02;
  COFD[20780] = -2.13955911E+01;
  COFD[20781] = 5.25183817E+00;
  COFD[20782] = -4.57376333E-01;
  COFD[20783] = 1.94504429E-02;
  COFD[20784] = -2.00047011E+01;
  COFD[20785] = 4.92184026E+00;
  COFD[20786] = -4.19745472E-01;
  COFD[20787] = 1.80268154E-02;
  COFD[20788] = -1.91326722E+01;
  COFD[20789] = 3.82263611E+00;
  COFD[20790] = -1.93983472E-01;
  COFD[20791] = 4.95789388E-03;
  COFD[20792] = -2.10843943E+01;
  COFD[20793] = 5.15315713E+00;
  COFD[20794] = -4.46344043E-01;
  COFD[20795] = 1.90431546E-02;
  COFD[20796] = -2.04488873E+01;
  COFD[20797] = 4.26473557E+00;
  COFD[20798] = -2.61033037E-01;
  COFD[20799] = 8.23906412E-03;
  COFD[20800] = -2.28655682E+01;
  COFD[20801] = 5.50522401E+00;
  COFD[20802] = -4.63604304E-01;
  COFD[20803] = 1.86600785E-02;
  COFD[20804] = -2.19550900E+01;
  COFD[20805] = 5.49350509E+00;
  COFD[20806] = -4.81613405E-01;
  COFD[20807] = 2.02171734E-02;
  COFD[20808] = -2.19053842E+01;
  COFD[20809] = 5.47162499E+00;
  COFD[20810] = -4.79195552E-01;
  COFD[20811] = 2.01289088E-02;
  COFD[20812] = -2.14072722E+01;
  COFD[20813] = 5.25183817E+00;
  COFD[20814] = -4.57376333E-01;
  COFD[20815] = 1.94504429E-02;
  COFD[20816] = -2.14185157E+01;
  COFD[20817] = 5.25183817E+00;
  COFD[20818] = -4.57376333E-01;
  COFD[20819] = 1.94504429E-02;
  COFD[20820] = -2.04620454E+01;
  COFD[20821] = 4.26473557E+00;
  COFD[20822] = -2.61033037E-01;
  COFD[20823] = 8.23906412E-03;
  COFD[20824] = -2.13745653E+01;
  COFD[20825] = 4.71094320E+00;
  COFD[20826] = -3.30478653E-01;
  COFD[20827] = 1.16991305E-02;
  COFD[20828] = -2.28446658E+01;
  COFD[20829] = 5.50134401E+00;
  COFD[20830] = -4.62488197E-01;
  COFD[20831] = 1.85873697E-02;
  COFD[20832] = -2.26579920E+01;
  COFD[20833] = 5.52001624E+00;
  COFD[20834] = -4.66629503E-01;
  COFD[20835] = 1.88355817E-02;
  COFD[20836] = -2.28315318E+01;
  COFD[20837] = 5.50134401E+00;
  COFD[20838] = -4.62488197E-01;
  COFD[20839] = 1.85873697E-02;
  COFD[20840] = -2.26089403E+01;
  COFD[20841] = 5.44867280E+00;
  COFD[20842] = -4.52284883E-01;
  COFD[20843] = 1.80110706E-02;
  COFD[20844] = -2.26239230E+01;
  COFD[20845] = 5.44867280E+00;
  COFD[20846] = -4.52284883E-01;
  COFD[20847] = 1.80110706E-02;
  COFD[20848] = -2.13524491E+01;
  COFD[20849] = 4.61201872E+00;
  COFD[20850] = -3.14803338E-01;
  COFD[20851] = 1.09082984E-02;
  COFD[20852] = -2.22093818E+01;
  COFD[20853] = 5.53457356E+00;
  COFD[20854] = -4.85892223E-01;
  COFD[20855] = 2.03611937E-02;
  COFD[20856] = -2.13607412E+01;
  COFD[20857] = 4.61201872E+00;
  COFD[20858] = -3.14803338E-01;
  COFD[20859] = 1.09082984E-02;
  COFD[20860] = -2.13607412E+01;
  COFD[20861] = 4.61201872E+00;
  COFD[20862] = -3.14803338E-01;
  COFD[20863] = 1.09082984E-02;
  COFD[20864] = -2.13687841E+01;
  COFD[20865] = 4.61201872E+00;
  COFD[20866] = -3.14803338E-01;
  COFD[20867] = 1.09082984E-02;
  COFD[20868] = -2.25160792E+01;
  COFD[20869] = 5.21003123E+00;
  COFD[20870] = -4.10612564E-01;
  COFD[20871] = 1.57798598E-02;
  COFD[20872] = -2.26029868E+01;
  COFD[20873] = 5.27383847E+00;
  COFD[20874] = -4.21722368E-01;
  COFD[20875] = 1.63729618E-02;
  COFD[20876] = -2.24161958E+01;
  COFD[20877] = 5.05061421E+00;
  COFD[20878] = -3.84359196E-01;
  COFD[20879] = 1.44214004E-02;
  COFD[20880] = -2.27715868E+01;
  COFD[20881] = 5.29493402E+00;
  COFD[20882] = -4.25285978E-01;
  COFD[20883] = 1.65604533E-02;
  COFD[20884] = -2.24284544E+01;
  COFD[20885] = 5.06106414E+00;
  COFD[20886] = -3.86053039E-01;
  COFD[20887] = 1.45081784E-02;
  COFD[20888] = -2.24342629E+01;
  COFD[20889] = 5.06106414E+00;
  COFD[20890] = -3.86053039E-01;
  COFD[20891] = 1.45081784E-02;
  COFD[20892] = -2.25733323E+01;
  COFD[20893] = 5.07648425E+00;
  COFD[20894] = -3.88560019E-01;
  COFD[20895] = 1.46368353E-02;
  COFD[20896] = -2.16260444E+01;
  COFD[20897] = 4.61434262E+00;
  COFD[20898] = -3.15175110E-01;
  COFD[20899] = 1.09271555E-02;
  COFD[20900] = -2.15982303E+01;
  COFD[20901] = 4.61573576E+00;
  COFD[20902] = -3.15398040E-01;
  COFD[20903] = 1.09384650E-02;
  COFD[20904] = -2.17252730E+01;
  COFD[20905] = 4.67024106E+00;
  COFD[20906] = -3.24044321E-01;
  COFD[20907] = 1.13750034E-02;
  COFD[20908] = -2.21696445E+01;
  COFD[20909] = 4.81459861E+00;
  COFD[20910] = -3.46990321E-01;
  COFD[20911] = 1.25347154E-02;
  COFD[20912] = -2.22981911E+01;
  COFD[20913] = 4.87626494E+00;
  COFD[20914] = -3.56718447E-01;
  COFD[20915] = 1.30246317E-02;
  COFD[20916] = -2.10973459E+01;
  COFD[20917] = 4.42639566E+00;
  COFD[20918] = -2.85821723E-01;
  COFD[20919] = 9.46169352E-03;
  COFD[20920] = -2.08236309E+01;
  COFD[20921] = 4.35920123E+00;
  COFD[20922] = -2.75491273E-01;
  COFD[20923] = 8.95100289E-03;
  COFD[20924] = -2.08307988E+01;
  COFD[20925] = 4.35920123E+00;
  COFD[20926] = -2.75491273E-01;
  COFD[20927] = 8.95100289E-03;
  COFD[20928] = -2.14101140E+01;
  COFD[20929] = 4.57887376E+00;
  COFD[20930] = -3.09523118E-01;
  COFD[20931] = 1.06414780E-02;
  COFD[20932] = -2.17002965E+01;
  COFD[20933] = 4.64740770E+00;
  COFD[20934] = -3.20446431E-01;
  COFD[20935] = 1.11941302E-02;
  COFD[20936] = -2.18637077E+01;
  COFD[20937] = 4.74264746E+00;
  COFD[20938] = -3.35507171E-01;
  COFD[20939] = 1.19529371E-02;
  COFD[20940] = -2.10811769E+01;
  COFD[20941] = 4.27612828E+00;
  COFD[20942] = -2.62774610E-01;
  COFD[20943] = 8.32471127E-03;
  COFD[20944] = -2.12187516E+01;
  COFD[20945] = 4.27612828E+00;
  COFD[20946] = -2.62774610E-01;
  COFD[20947] = 8.32471127E-03;
  COFD[20948] = -2.11438201E+01;
  COFD[20949] = 4.27612828E+00;
  COFD[20950] = -2.62774610E-01;
  COFD[20951] = 8.32471127E-03;
  COFD[20952] = -2.11438201E+01;
  COFD[20953] = 4.27612828E+00;
  COFD[20954] = -2.62774610E-01;
  COFD[20955] = 8.32471127E-03;
  COFD[20956] = -2.25635574E+01;
  COFD[20957] = 5.24330646E+00;
  COFD[20958] = -4.16370120E-01;
  COFD[20959] = 1.60860486E-02;
  COFD[20960] = -2.25069710E+01;
  COFD[20961] = 5.21003123E+00;
  COFD[20962] = -4.10612564E-01;
  COFD[20963] = 1.57798598E-02;
  COFD[20964] = -2.29254189E+01;
  COFD[20965] = 5.58520405E+00;
  COFD[20966] = -4.80873447E-01;
  COFD[20967] = 1.96836519E-02;
  COFD[20968] = -2.19248232E+01;
  COFD[20969] = 5.49350509E+00;
  COFD[20970] = -4.81613405E-01;
  COFD[20971] = 2.02171734E-02;
  COFD[20972] = -2.15185582E+01;
  COFD[20973] = 4.39307520E+00;
  COFD[20974] = -2.80700100E-01;
  COFD[20975] = 9.20842847E-03;
  COFD[20976] = -2.14295738E+01;
  COFD[20977] = 4.46330617E+00;
  COFD[20978] = -2.91524840E-01;
  COFD[20979] = 9.74451306E-03;
  COFD[20980] = -2.14254857E+01;
  COFD[20981] = 4.46330617E+00;
  COFD[20982] = -2.91524840E-01;
  COFD[20983] = 9.74451306E-03;
  COFD[20984] = -2.16068333E+01;
  COFD[20985] = 4.51951091E+00;
  COFD[20986] = -3.00270210E-01;
  COFD[20987] = 1.01801697E-02;
  COFD[20988] = -2.12382944E+01;
  COFD[20989] = 4.31600554E+00;
  COFD[20990] = -2.68872731E-01;
  COFD[20991] = 8.62471915E-03;
  COFD[20992] = -2.14700849E+01;
  COFD[20993] = 4.39307520E+00;
  COFD[20994] = -2.80700100E-01;
  COFD[20995] = 9.20842847E-03;
  COFD[20996] = -2.14669259E+01;
  COFD[20997] = 4.39307520E+00;
  COFD[20998] = -2.80700100E-01;
  COFD[20999] = 9.20842847E-03;
  COFD[21000] = -2.17771730E+01;
  COFD[21001] = 4.48837319E+00;
  COFD[21002] = -2.95423315E-01;
  COFD[21003] = 9.93861345E-03;
  COFD[21004] = -2.17746518E+01;
  COFD[21005] = 4.48837319E+00;
  COFD[21006] = -2.95423315E-01;
  COFD[21007] = 9.93861345E-03;
  COFD[21008] = -2.17746518E+01;
  COFD[21009] = 4.48837319E+00;
  COFD[21010] = -2.95423315E-01;
  COFD[21011] = 9.93861345E-03;
  COFD[21012] = -2.17746518E+01;
  COFD[21013] = 4.48837319E+00;
  COFD[21014] = -2.95423315E-01;
  COFD[21015] = 9.93861345E-03;
  COFD[21016] = -2.17746518E+01;
  COFD[21017] = 4.48837319E+00;
  COFD[21018] = -2.95423315E-01;
  COFD[21019] = 9.93861345E-03;
  COFD[21020] = -2.17790414E+01;
  COFD[21021] = 4.49839225E+00;
  COFD[21022] = -2.96981647E-01;
  COFD[21023] = 1.00162342E-02;
  COFD[21024] = -2.17790414E+01;
  COFD[21025] = 4.49839225E+00;
  COFD[21026] = -2.96981647E-01;
  COFD[21027] = 1.00162342E-02;
  COFD[21028] = -2.05920255E+01;
  COFD[21029] = 3.87488983E+00;
  COFD[21030] = -2.02017141E-01;
  COFD[21031] = 5.35367024E-03;
  COFD[21032] = -2.05920255E+01;
  COFD[21033] = 3.87488983E+00;
  COFD[21034] = -2.02017141E-01;
  COFD[21035] = 5.35367024E-03;
  COFD[21036] = -2.05920255E+01;
  COFD[21037] = 3.87488983E+00;
  COFD[21038] = -2.02017141E-01;
  COFD[21039] = 5.35367024E-03;
  COFD[21040] = -2.05920255E+01;
  COFD[21041] = 3.87488983E+00;
  COFD[21042] = -2.02017141E-01;
  COFD[21043] = 5.35367024E-03;
  COFD[21044] = -2.05920255E+01;
  COFD[21045] = 3.87488983E+00;
  COFD[21046] = -2.02017141E-01;
  COFD[21047] = 5.35367024E-03;
  COFD[21048] = -2.05920255E+01;
  COFD[21049] = 3.87488983E+00;
  COFD[21050] = -2.02017141E-01;
  COFD[21051] = 5.35367024E-03;
  COFD[21052] = -2.05920255E+01;
  COFD[21053] = 3.87488983E+00;
  COFD[21054] = -2.02017141E-01;
  COFD[21055] = 5.35367024E-03;
  COFD[21056] = -2.05920255E+01;
  COFD[21057] = 3.87488983E+00;
  COFD[21058] = -2.02017141E-01;
  COFD[21059] = 5.35367024E-03;
  COFD[21060] = -2.05920255E+01;
  COFD[21061] = 3.87488983E+00;
  COFD[21062] = -2.02017141E-01;
  COFD[21063] = 5.35367024E-03;
  COFD[21064] = -2.05920255E+01;
  COFD[21065] = 3.87488983E+00;
  COFD[21066] = -2.02017141E-01;
  COFD[21067] = 5.35367024E-03;
  COFD[21068] = -2.05920255E+01;
  COFD[21069] = 3.87488983E+00;
  COFD[21070] = -2.02017141E-01;
  COFD[21071] = 5.35367024E-03;
  COFD[21072] = -2.05920255E+01;
  COFD[21073] = 3.87488983E+00;
  COFD[21074] = -2.02017141E-01;
  COFD[21075] = 5.35367024E-03;
  COFD[21076] = -2.04021372E+01;
  COFD[21077] = 3.68933740E+00;
  COFD[21078] = -1.73601961E-01;
  COFD[21079] = 3.95720919E-03;
  COFD[21080] = -2.04021372E+01;
  COFD[21081] = 3.68933740E+00;
  COFD[21082] = -1.73601961E-01;
  COFD[21083] = 3.95720919E-03;
  COFD[21084] = -2.04021372E+01;
  COFD[21085] = 3.68933740E+00;
  COFD[21086] = -1.73601961E-01;
  COFD[21087] = 3.95720919E-03;
  COFD[21088] = -2.04021372E+01;
  COFD[21089] = 3.68933740E+00;
  COFD[21090] = -1.73601961E-01;
  COFD[21091] = 3.95720919E-03;
  COFD[21092] = -2.11834428E+01;
  COFD[21093] = 4.17689041E+00;
  COFD[21094] = -2.47710878E-01;
  COFD[21095] = 7.58649691E-03;
  COFD[21096] = -2.11834428E+01;
  COFD[21097] = 4.17689041E+00;
  COFD[21098] = -2.47710878E-01;
  COFD[21099] = 7.58649691E-03;
  COFD[21100] = -2.04568473E+01;
  COFD[21101] = 3.78121973E+00;
  COFD[21102] = -1.87619388E-01;
  COFD[21103] = 4.64425873E-03;
  COFD[21104] = -2.04568473E+01;
  COFD[21105] = 3.78121973E+00;
  COFD[21106] = -1.87619388E-01;
  COFD[21107] = 4.64425873E-03;
  COFD[21108] = -2.04568473E+01;
  COFD[21109] = 3.78121973E+00;
  COFD[21110] = -1.87619388E-01;
  COFD[21111] = 4.64425873E-03;
  COFD[21112] = -2.04568473E+01;
  COFD[21113] = 3.78121973E+00;
  COFD[21114] = -1.87619388E-01;
  COFD[21115] = 4.64425873E-03;
  COFD[21116] = -2.10674576E+01;
  COFD[21117] = 5.15027524E+00;
  COFD[21118] = -4.46126111E-01;
  COFD[21119] = 1.90401391E-02;
  COFD[21120] = -2.03113865E+01;
  COFD[21121] = 5.50136606E+00;
  COFD[21122] = -4.82461887E-01;
  COFD[21123] = 2.02471523E-02;
  COFD[21124] = -1.64898688E+01;
  COFD[21125] = 4.01175649E+00;
  COFD[21126] = -3.08860971E-01;
  COFD[21127] = 1.35100076E-02;
  COFD[21128] = -1.99785079E+01;
  COFD[21129] = 4.92184026E+00;
  COFD[21130] = -4.19745472E-01;
  COFD[21131] = 1.80268154E-02;
  COFD[21132] = -2.13955911E+01;
  COFD[21133] = 5.25183817E+00;
  COFD[21134] = -4.57376333E-01;
  COFD[21135] = 1.94504429E-02;
  COFD[21136] = -2.00047011E+01;
  COFD[21137] = 4.92184026E+00;
  COFD[21138] = -4.19745472E-01;
  COFD[21139] = 1.80268154E-02;
  COFD[21140] = -1.91326722E+01;
  COFD[21141] = 3.82263611E+00;
  COFD[21142] = -1.93983472E-01;
  COFD[21143] = 4.95789388E-03;
  COFD[21144] = -2.10843943E+01;
  COFD[21145] = 5.15315713E+00;
  COFD[21146] = -4.46344043E-01;
  COFD[21147] = 1.90431546E-02;
  COFD[21148] = -2.04488873E+01;
  COFD[21149] = 4.26473557E+00;
  COFD[21150] = -2.61033037E-01;
  COFD[21151] = 8.23906412E-03;
  COFD[21152] = -2.28655682E+01;
  COFD[21153] = 5.50522401E+00;
  COFD[21154] = -4.63604304E-01;
  COFD[21155] = 1.86600785E-02;
  COFD[21156] = -2.19550900E+01;
  COFD[21157] = 5.49350509E+00;
  COFD[21158] = -4.81613405E-01;
  COFD[21159] = 2.02171734E-02;
  COFD[21160] = -2.19053842E+01;
  COFD[21161] = 5.47162499E+00;
  COFD[21162] = -4.79195552E-01;
  COFD[21163] = 2.01289088E-02;
  COFD[21164] = -2.14072722E+01;
  COFD[21165] = 5.25183817E+00;
  COFD[21166] = -4.57376333E-01;
  COFD[21167] = 1.94504429E-02;
  COFD[21168] = -2.14185157E+01;
  COFD[21169] = 5.25183817E+00;
  COFD[21170] = -4.57376333E-01;
  COFD[21171] = 1.94504429E-02;
  COFD[21172] = -2.04620454E+01;
  COFD[21173] = 4.26473557E+00;
  COFD[21174] = -2.61033037E-01;
  COFD[21175] = 8.23906412E-03;
  COFD[21176] = -2.13745653E+01;
  COFD[21177] = 4.71094320E+00;
  COFD[21178] = -3.30478653E-01;
  COFD[21179] = 1.16991305E-02;
  COFD[21180] = -2.28446658E+01;
  COFD[21181] = 5.50134401E+00;
  COFD[21182] = -4.62488197E-01;
  COFD[21183] = 1.85873697E-02;
  COFD[21184] = -2.26579920E+01;
  COFD[21185] = 5.52001624E+00;
  COFD[21186] = -4.66629503E-01;
  COFD[21187] = 1.88355817E-02;
  COFD[21188] = -2.28315318E+01;
  COFD[21189] = 5.50134401E+00;
  COFD[21190] = -4.62488197E-01;
  COFD[21191] = 1.85873697E-02;
  COFD[21192] = -2.26089403E+01;
  COFD[21193] = 5.44867280E+00;
  COFD[21194] = -4.52284883E-01;
  COFD[21195] = 1.80110706E-02;
  COFD[21196] = -2.26239230E+01;
  COFD[21197] = 5.44867280E+00;
  COFD[21198] = -4.52284883E-01;
  COFD[21199] = 1.80110706E-02;
  COFD[21200] = -2.13524491E+01;
  COFD[21201] = 4.61201872E+00;
  COFD[21202] = -3.14803338E-01;
  COFD[21203] = 1.09082984E-02;
  COFD[21204] = -2.22093818E+01;
  COFD[21205] = 5.53457356E+00;
  COFD[21206] = -4.85892223E-01;
  COFD[21207] = 2.03611937E-02;
  COFD[21208] = -2.13607412E+01;
  COFD[21209] = 4.61201872E+00;
  COFD[21210] = -3.14803338E-01;
  COFD[21211] = 1.09082984E-02;
  COFD[21212] = -2.13607412E+01;
  COFD[21213] = 4.61201872E+00;
  COFD[21214] = -3.14803338E-01;
  COFD[21215] = 1.09082984E-02;
  COFD[21216] = -2.13687841E+01;
  COFD[21217] = 4.61201872E+00;
  COFD[21218] = -3.14803338E-01;
  COFD[21219] = 1.09082984E-02;
  COFD[21220] = -2.25160792E+01;
  COFD[21221] = 5.21003123E+00;
  COFD[21222] = -4.10612564E-01;
  COFD[21223] = 1.57798598E-02;
  COFD[21224] = -2.26029868E+01;
  COFD[21225] = 5.27383847E+00;
  COFD[21226] = -4.21722368E-01;
  COFD[21227] = 1.63729618E-02;
  COFD[21228] = -2.24161958E+01;
  COFD[21229] = 5.05061421E+00;
  COFD[21230] = -3.84359196E-01;
  COFD[21231] = 1.44214004E-02;
  COFD[21232] = -2.27715868E+01;
  COFD[21233] = 5.29493402E+00;
  COFD[21234] = -4.25285978E-01;
  COFD[21235] = 1.65604533E-02;
  COFD[21236] = -2.24284544E+01;
  COFD[21237] = 5.06106414E+00;
  COFD[21238] = -3.86053039E-01;
  COFD[21239] = 1.45081784E-02;
  COFD[21240] = -2.24342629E+01;
  COFD[21241] = 5.06106414E+00;
  COFD[21242] = -3.86053039E-01;
  COFD[21243] = 1.45081784E-02;
  COFD[21244] = -2.25733323E+01;
  COFD[21245] = 5.07648425E+00;
  COFD[21246] = -3.88560019E-01;
  COFD[21247] = 1.46368353E-02;
  COFD[21248] = -2.16260444E+01;
  COFD[21249] = 4.61434262E+00;
  COFD[21250] = -3.15175110E-01;
  COFD[21251] = 1.09271555E-02;
  COFD[21252] = -2.15982303E+01;
  COFD[21253] = 4.61573576E+00;
  COFD[21254] = -3.15398040E-01;
  COFD[21255] = 1.09384650E-02;
  COFD[21256] = -2.17252730E+01;
  COFD[21257] = 4.67024106E+00;
  COFD[21258] = -3.24044321E-01;
  COFD[21259] = 1.13750034E-02;
  COFD[21260] = -2.21696445E+01;
  COFD[21261] = 4.81459861E+00;
  COFD[21262] = -3.46990321E-01;
  COFD[21263] = 1.25347154E-02;
  COFD[21264] = -2.22981911E+01;
  COFD[21265] = 4.87626494E+00;
  COFD[21266] = -3.56718447E-01;
  COFD[21267] = 1.30246317E-02;
  COFD[21268] = -2.10973459E+01;
  COFD[21269] = 4.42639566E+00;
  COFD[21270] = -2.85821723E-01;
  COFD[21271] = 9.46169352E-03;
  COFD[21272] = -2.08236309E+01;
  COFD[21273] = 4.35920123E+00;
  COFD[21274] = -2.75491273E-01;
  COFD[21275] = 8.95100289E-03;
  COFD[21276] = -2.08307988E+01;
  COFD[21277] = 4.35920123E+00;
  COFD[21278] = -2.75491273E-01;
  COFD[21279] = 8.95100289E-03;
  COFD[21280] = -2.14101140E+01;
  COFD[21281] = 4.57887376E+00;
  COFD[21282] = -3.09523118E-01;
  COFD[21283] = 1.06414780E-02;
  COFD[21284] = -2.17002965E+01;
  COFD[21285] = 4.64740770E+00;
  COFD[21286] = -3.20446431E-01;
  COFD[21287] = 1.11941302E-02;
  COFD[21288] = -2.18637077E+01;
  COFD[21289] = 4.74264746E+00;
  COFD[21290] = -3.35507171E-01;
  COFD[21291] = 1.19529371E-02;
  COFD[21292] = -2.10811769E+01;
  COFD[21293] = 4.27612828E+00;
  COFD[21294] = -2.62774610E-01;
  COFD[21295] = 8.32471127E-03;
  COFD[21296] = -2.12187516E+01;
  COFD[21297] = 4.27612828E+00;
  COFD[21298] = -2.62774610E-01;
  COFD[21299] = 8.32471127E-03;
  COFD[21300] = -2.11438201E+01;
  COFD[21301] = 4.27612828E+00;
  COFD[21302] = -2.62774610E-01;
  COFD[21303] = 8.32471127E-03;
  COFD[21304] = -2.11438201E+01;
  COFD[21305] = 4.27612828E+00;
  COFD[21306] = -2.62774610E-01;
  COFD[21307] = 8.32471127E-03;
  COFD[21308] = -2.25635574E+01;
  COFD[21309] = 5.24330646E+00;
  COFD[21310] = -4.16370120E-01;
  COFD[21311] = 1.60860486E-02;
  COFD[21312] = -2.25069710E+01;
  COFD[21313] = 5.21003123E+00;
  COFD[21314] = -4.10612564E-01;
  COFD[21315] = 1.57798598E-02;
  COFD[21316] = -2.29254189E+01;
  COFD[21317] = 5.58520405E+00;
  COFD[21318] = -4.80873447E-01;
  COFD[21319] = 1.96836519E-02;
  COFD[21320] = -2.19248232E+01;
  COFD[21321] = 5.49350509E+00;
  COFD[21322] = -4.81613405E-01;
  COFD[21323] = 2.02171734E-02;
  COFD[21324] = -2.15185582E+01;
  COFD[21325] = 4.39307520E+00;
  COFD[21326] = -2.80700100E-01;
  COFD[21327] = 9.20842847E-03;
  COFD[21328] = -2.14295738E+01;
  COFD[21329] = 4.46330617E+00;
  COFD[21330] = -2.91524840E-01;
  COFD[21331] = 9.74451306E-03;
  COFD[21332] = -2.14254857E+01;
  COFD[21333] = 4.46330617E+00;
  COFD[21334] = -2.91524840E-01;
  COFD[21335] = 9.74451306E-03;
  COFD[21336] = -2.16068333E+01;
  COFD[21337] = 4.51951091E+00;
  COFD[21338] = -3.00270210E-01;
  COFD[21339] = 1.01801697E-02;
  COFD[21340] = -2.12382944E+01;
  COFD[21341] = 4.31600554E+00;
  COFD[21342] = -2.68872731E-01;
  COFD[21343] = 8.62471915E-03;
  COFD[21344] = -2.14700849E+01;
  COFD[21345] = 4.39307520E+00;
  COFD[21346] = -2.80700100E-01;
  COFD[21347] = 9.20842847E-03;
  COFD[21348] = -2.14669259E+01;
  COFD[21349] = 4.39307520E+00;
  COFD[21350] = -2.80700100E-01;
  COFD[21351] = 9.20842847E-03;
  COFD[21352] = -2.17771730E+01;
  COFD[21353] = 4.48837319E+00;
  COFD[21354] = -2.95423315E-01;
  COFD[21355] = 9.93861345E-03;
  COFD[21356] = -2.17746518E+01;
  COFD[21357] = 4.48837319E+00;
  COFD[21358] = -2.95423315E-01;
  COFD[21359] = 9.93861345E-03;
  COFD[21360] = -2.17746518E+01;
  COFD[21361] = 4.48837319E+00;
  COFD[21362] = -2.95423315E-01;
  COFD[21363] = 9.93861345E-03;
  COFD[21364] = -2.17746518E+01;
  COFD[21365] = 4.48837319E+00;
  COFD[21366] = -2.95423315E-01;
  COFD[21367] = 9.93861345E-03;
  COFD[21368] = -2.17746518E+01;
  COFD[21369] = 4.48837319E+00;
  COFD[21370] = -2.95423315E-01;
  COFD[21371] = 9.93861345E-03;
  COFD[21372] = -2.17790414E+01;
  COFD[21373] = 4.49839225E+00;
  COFD[21374] = -2.96981647E-01;
  COFD[21375] = 1.00162342E-02;
  COFD[21376] = -2.17790414E+01;
  COFD[21377] = 4.49839225E+00;
  COFD[21378] = -2.96981647E-01;
  COFD[21379] = 1.00162342E-02;
  COFD[21380] = -2.05920255E+01;
  COFD[21381] = 3.87488983E+00;
  COFD[21382] = -2.02017141E-01;
  COFD[21383] = 5.35367024E-03;
  COFD[21384] = -2.05920255E+01;
  COFD[21385] = 3.87488983E+00;
  COFD[21386] = -2.02017141E-01;
  COFD[21387] = 5.35367024E-03;
  COFD[21388] = -2.05920255E+01;
  COFD[21389] = 3.87488983E+00;
  COFD[21390] = -2.02017141E-01;
  COFD[21391] = 5.35367024E-03;
  COFD[21392] = -2.05920255E+01;
  COFD[21393] = 3.87488983E+00;
  COFD[21394] = -2.02017141E-01;
  COFD[21395] = 5.35367024E-03;
  COFD[21396] = -2.05920255E+01;
  COFD[21397] = 3.87488983E+00;
  COFD[21398] = -2.02017141E-01;
  COFD[21399] = 5.35367024E-03;
  COFD[21400] = -2.05920255E+01;
  COFD[21401] = 3.87488983E+00;
  COFD[21402] = -2.02017141E-01;
  COFD[21403] = 5.35367024E-03;
  COFD[21404] = -2.05920255E+01;
  COFD[21405] = 3.87488983E+00;
  COFD[21406] = -2.02017141E-01;
  COFD[21407] = 5.35367024E-03;
  COFD[21408] = -2.05920255E+01;
  COFD[21409] = 3.87488983E+00;
  COFD[21410] = -2.02017141E-01;
  COFD[21411] = 5.35367024E-03;
  COFD[21412] = -2.05920255E+01;
  COFD[21413] = 3.87488983E+00;
  COFD[21414] = -2.02017141E-01;
  COFD[21415] = 5.35367024E-03;
  COFD[21416] = -2.05920255E+01;
  COFD[21417] = 3.87488983E+00;
  COFD[21418] = -2.02017141E-01;
  COFD[21419] = 5.35367024E-03;
  COFD[21420] = -2.05920255E+01;
  COFD[21421] = 3.87488983E+00;
  COFD[21422] = -2.02017141E-01;
  COFD[21423] = 5.35367024E-03;
  COFD[21424] = -2.05920255E+01;
  COFD[21425] = 3.87488983E+00;
  COFD[21426] = -2.02017141E-01;
  COFD[21427] = 5.35367024E-03;
  COFD[21428] = -2.04021372E+01;
  COFD[21429] = 3.68933740E+00;
  COFD[21430] = -1.73601961E-01;
  COFD[21431] = 3.95720919E-03;
  COFD[21432] = -2.04021372E+01;
  COFD[21433] = 3.68933740E+00;
  COFD[21434] = -1.73601961E-01;
  COFD[21435] = 3.95720919E-03;
  COFD[21436] = -2.04021372E+01;
  COFD[21437] = 3.68933740E+00;
  COFD[21438] = -1.73601961E-01;
  COFD[21439] = 3.95720919E-03;
  COFD[21440] = -2.04021372E+01;
  COFD[21441] = 3.68933740E+00;
  COFD[21442] = -1.73601961E-01;
  COFD[21443] = 3.95720919E-03;
  COFD[21444] = -2.11834428E+01;
  COFD[21445] = 4.17689041E+00;
  COFD[21446] = -2.47710878E-01;
  COFD[21447] = 7.58649691E-03;
  COFD[21448] = -2.11834428E+01;
  COFD[21449] = 4.17689041E+00;
  COFD[21450] = -2.47710878E-01;
  COFD[21451] = 7.58649691E-03;
  COFD[21452] = -2.04568473E+01;
  COFD[21453] = 3.78121973E+00;
  COFD[21454] = -1.87619388E-01;
  COFD[21455] = 4.64425873E-03;
  COFD[21456] = -2.04568473E+01;
  COFD[21457] = 3.78121973E+00;
  COFD[21458] = -1.87619388E-01;
  COFD[21459] = 4.64425873E-03;
  COFD[21460] = -2.04568473E+01;
  COFD[21461] = 3.78121973E+00;
  COFD[21462] = -1.87619388E-01;
  COFD[21463] = 4.64425873E-03;
  COFD[21464] = -2.04568473E+01;
  COFD[21465] = 3.78121973E+00;
  COFD[21466] = -1.87619388E-01;
  COFD[21467] = 4.64425873E-03;
  COFD[21468] = -2.10674576E+01;
  COFD[21469] = 5.15027524E+00;
  COFD[21470] = -4.46126111E-01;
  COFD[21471] = 1.90401391E-02;
  COFD[21472] = -2.03113865E+01;
  COFD[21473] = 5.50136606E+00;
  COFD[21474] = -4.82461887E-01;
  COFD[21475] = 2.02471523E-02;
  COFD[21476] = -1.64898688E+01;
  COFD[21477] = 4.01175649E+00;
  COFD[21478] = -3.08860971E-01;
  COFD[21479] = 1.35100076E-02;
  COFD[21480] = -1.99785079E+01;
  COFD[21481] = 4.92184026E+00;
  COFD[21482] = -4.19745472E-01;
  COFD[21483] = 1.80268154E-02;
  COFD[21484] = -2.13955911E+01;
  COFD[21485] = 5.25183817E+00;
  COFD[21486] = -4.57376333E-01;
  COFD[21487] = 1.94504429E-02;
  COFD[21488] = -2.00047011E+01;
  COFD[21489] = 4.92184026E+00;
  COFD[21490] = -4.19745472E-01;
  COFD[21491] = 1.80268154E-02;
  COFD[21492] = -1.91326722E+01;
  COFD[21493] = 3.82263611E+00;
  COFD[21494] = -1.93983472E-01;
  COFD[21495] = 4.95789388E-03;
  COFD[21496] = -2.10843943E+01;
  COFD[21497] = 5.15315713E+00;
  COFD[21498] = -4.46344043E-01;
  COFD[21499] = 1.90431546E-02;
  COFD[21500] = -2.04488873E+01;
  COFD[21501] = 4.26473557E+00;
  COFD[21502] = -2.61033037E-01;
  COFD[21503] = 8.23906412E-03;
  COFD[21504] = -2.28655682E+01;
  COFD[21505] = 5.50522401E+00;
  COFD[21506] = -4.63604304E-01;
  COFD[21507] = 1.86600785E-02;
  COFD[21508] = -2.19550900E+01;
  COFD[21509] = 5.49350509E+00;
  COFD[21510] = -4.81613405E-01;
  COFD[21511] = 2.02171734E-02;
  COFD[21512] = -2.19053842E+01;
  COFD[21513] = 5.47162499E+00;
  COFD[21514] = -4.79195552E-01;
  COFD[21515] = 2.01289088E-02;
  COFD[21516] = -2.14072722E+01;
  COFD[21517] = 5.25183817E+00;
  COFD[21518] = -4.57376333E-01;
  COFD[21519] = 1.94504429E-02;
  COFD[21520] = -2.14185157E+01;
  COFD[21521] = 5.25183817E+00;
  COFD[21522] = -4.57376333E-01;
  COFD[21523] = 1.94504429E-02;
  COFD[21524] = -2.04620454E+01;
  COFD[21525] = 4.26473557E+00;
  COFD[21526] = -2.61033037E-01;
  COFD[21527] = 8.23906412E-03;
  COFD[21528] = -2.13745653E+01;
  COFD[21529] = 4.71094320E+00;
  COFD[21530] = -3.30478653E-01;
  COFD[21531] = 1.16991305E-02;
  COFD[21532] = -2.28446658E+01;
  COFD[21533] = 5.50134401E+00;
  COFD[21534] = -4.62488197E-01;
  COFD[21535] = 1.85873697E-02;
  COFD[21536] = -2.26579920E+01;
  COFD[21537] = 5.52001624E+00;
  COFD[21538] = -4.66629503E-01;
  COFD[21539] = 1.88355817E-02;
  COFD[21540] = -2.28315318E+01;
  COFD[21541] = 5.50134401E+00;
  COFD[21542] = -4.62488197E-01;
  COFD[21543] = 1.85873697E-02;
  COFD[21544] = -2.26089403E+01;
  COFD[21545] = 5.44867280E+00;
  COFD[21546] = -4.52284883E-01;
  COFD[21547] = 1.80110706E-02;
  COFD[21548] = -2.26239230E+01;
  COFD[21549] = 5.44867280E+00;
  COFD[21550] = -4.52284883E-01;
  COFD[21551] = 1.80110706E-02;
  COFD[21552] = -2.13524491E+01;
  COFD[21553] = 4.61201872E+00;
  COFD[21554] = -3.14803338E-01;
  COFD[21555] = 1.09082984E-02;
  COFD[21556] = -2.22093818E+01;
  COFD[21557] = 5.53457356E+00;
  COFD[21558] = -4.85892223E-01;
  COFD[21559] = 2.03611937E-02;
  COFD[21560] = -2.13607412E+01;
  COFD[21561] = 4.61201872E+00;
  COFD[21562] = -3.14803338E-01;
  COFD[21563] = 1.09082984E-02;
  COFD[21564] = -2.13607412E+01;
  COFD[21565] = 4.61201872E+00;
  COFD[21566] = -3.14803338E-01;
  COFD[21567] = 1.09082984E-02;
  COFD[21568] = -2.13687841E+01;
  COFD[21569] = 4.61201872E+00;
  COFD[21570] = -3.14803338E-01;
  COFD[21571] = 1.09082984E-02;
  COFD[21572] = -2.25160792E+01;
  COFD[21573] = 5.21003123E+00;
  COFD[21574] = -4.10612564E-01;
  COFD[21575] = 1.57798598E-02;
  COFD[21576] = -2.26029868E+01;
  COFD[21577] = 5.27383847E+00;
  COFD[21578] = -4.21722368E-01;
  COFD[21579] = 1.63729618E-02;
  COFD[21580] = -2.24161958E+01;
  COFD[21581] = 5.05061421E+00;
  COFD[21582] = -3.84359196E-01;
  COFD[21583] = 1.44214004E-02;
  COFD[21584] = -2.27715868E+01;
  COFD[21585] = 5.29493402E+00;
  COFD[21586] = -4.25285978E-01;
  COFD[21587] = 1.65604533E-02;
  COFD[21588] = -2.24284544E+01;
  COFD[21589] = 5.06106414E+00;
  COFD[21590] = -3.86053039E-01;
  COFD[21591] = 1.45081784E-02;
  COFD[21592] = -2.24342629E+01;
  COFD[21593] = 5.06106414E+00;
  COFD[21594] = -3.86053039E-01;
  COFD[21595] = 1.45081784E-02;
  COFD[21596] = -2.25733323E+01;
  COFD[21597] = 5.07648425E+00;
  COFD[21598] = -3.88560019E-01;
  COFD[21599] = 1.46368353E-02;
  COFD[21600] = -2.16260444E+01;
  COFD[21601] = 4.61434262E+00;
  COFD[21602] = -3.15175110E-01;
  COFD[21603] = 1.09271555E-02;
  COFD[21604] = -2.15982303E+01;
  COFD[21605] = 4.61573576E+00;
  COFD[21606] = -3.15398040E-01;
  COFD[21607] = 1.09384650E-02;
  COFD[21608] = -2.17252730E+01;
  COFD[21609] = 4.67024106E+00;
  COFD[21610] = -3.24044321E-01;
  COFD[21611] = 1.13750034E-02;
  COFD[21612] = -2.21696445E+01;
  COFD[21613] = 4.81459861E+00;
  COFD[21614] = -3.46990321E-01;
  COFD[21615] = 1.25347154E-02;
  COFD[21616] = -2.22981911E+01;
  COFD[21617] = 4.87626494E+00;
  COFD[21618] = -3.56718447E-01;
  COFD[21619] = 1.30246317E-02;
  COFD[21620] = -2.10973459E+01;
  COFD[21621] = 4.42639566E+00;
  COFD[21622] = -2.85821723E-01;
  COFD[21623] = 9.46169352E-03;
  COFD[21624] = -2.08236309E+01;
  COFD[21625] = 4.35920123E+00;
  COFD[21626] = -2.75491273E-01;
  COFD[21627] = 8.95100289E-03;
  COFD[21628] = -2.08307988E+01;
  COFD[21629] = 4.35920123E+00;
  COFD[21630] = -2.75491273E-01;
  COFD[21631] = 8.95100289E-03;
  COFD[21632] = -2.14101140E+01;
  COFD[21633] = 4.57887376E+00;
  COFD[21634] = -3.09523118E-01;
  COFD[21635] = 1.06414780E-02;
  COFD[21636] = -2.17002965E+01;
  COFD[21637] = 4.64740770E+00;
  COFD[21638] = -3.20446431E-01;
  COFD[21639] = 1.11941302E-02;
  COFD[21640] = -2.18637077E+01;
  COFD[21641] = 4.74264746E+00;
  COFD[21642] = -3.35507171E-01;
  COFD[21643] = 1.19529371E-02;
  COFD[21644] = -2.10811769E+01;
  COFD[21645] = 4.27612828E+00;
  COFD[21646] = -2.62774610E-01;
  COFD[21647] = 8.32471127E-03;
  COFD[21648] = -2.12187516E+01;
  COFD[21649] = 4.27612828E+00;
  COFD[21650] = -2.62774610E-01;
  COFD[21651] = 8.32471127E-03;
  COFD[21652] = -2.11438201E+01;
  COFD[21653] = 4.27612828E+00;
  COFD[21654] = -2.62774610E-01;
  COFD[21655] = 8.32471127E-03;
  COFD[21656] = -2.11438201E+01;
  COFD[21657] = 4.27612828E+00;
  COFD[21658] = -2.62774610E-01;
  COFD[21659] = 8.32471127E-03;
  COFD[21660] = -2.25635574E+01;
  COFD[21661] = 5.24330646E+00;
  COFD[21662] = -4.16370120E-01;
  COFD[21663] = 1.60860486E-02;
  COFD[21664] = -2.25069710E+01;
  COFD[21665] = 5.21003123E+00;
  COFD[21666] = -4.10612564E-01;
  COFD[21667] = 1.57798598E-02;
  COFD[21668] = -2.29254189E+01;
  COFD[21669] = 5.58520405E+00;
  COFD[21670] = -4.80873447E-01;
  COFD[21671] = 1.96836519E-02;
  COFD[21672] = -2.19248232E+01;
  COFD[21673] = 5.49350509E+00;
  COFD[21674] = -4.81613405E-01;
  COFD[21675] = 2.02171734E-02;
  COFD[21676] = -2.15185582E+01;
  COFD[21677] = 4.39307520E+00;
  COFD[21678] = -2.80700100E-01;
  COFD[21679] = 9.20842847E-03;
  COFD[21680] = -2.14295738E+01;
  COFD[21681] = 4.46330617E+00;
  COFD[21682] = -2.91524840E-01;
  COFD[21683] = 9.74451306E-03;
  COFD[21684] = -2.14254857E+01;
  COFD[21685] = 4.46330617E+00;
  COFD[21686] = -2.91524840E-01;
  COFD[21687] = 9.74451306E-03;
  COFD[21688] = -2.16068333E+01;
  COFD[21689] = 4.51951091E+00;
  COFD[21690] = -3.00270210E-01;
  COFD[21691] = 1.01801697E-02;
  COFD[21692] = -2.12382944E+01;
  COFD[21693] = 4.31600554E+00;
  COFD[21694] = -2.68872731E-01;
  COFD[21695] = 8.62471915E-03;
  COFD[21696] = -2.14700849E+01;
  COFD[21697] = 4.39307520E+00;
  COFD[21698] = -2.80700100E-01;
  COFD[21699] = 9.20842847E-03;
  COFD[21700] = -2.14669259E+01;
  COFD[21701] = 4.39307520E+00;
  COFD[21702] = -2.80700100E-01;
  COFD[21703] = 9.20842847E-03;
  COFD[21704] = -2.17771730E+01;
  COFD[21705] = 4.48837319E+00;
  COFD[21706] = -2.95423315E-01;
  COFD[21707] = 9.93861345E-03;
  COFD[21708] = -2.17746518E+01;
  COFD[21709] = 4.48837319E+00;
  COFD[21710] = -2.95423315E-01;
  COFD[21711] = 9.93861345E-03;
  COFD[21712] = -2.17746518E+01;
  COFD[21713] = 4.48837319E+00;
  COFD[21714] = -2.95423315E-01;
  COFD[21715] = 9.93861345E-03;
  COFD[21716] = -2.17746518E+01;
  COFD[21717] = 4.48837319E+00;
  COFD[21718] = -2.95423315E-01;
  COFD[21719] = 9.93861345E-03;
  COFD[21720] = -2.17746518E+01;
  COFD[21721] = 4.48837319E+00;
  COFD[21722] = -2.95423315E-01;
  COFD[21723] = 9.93861345E-03;
  COFD[21724] = -2.17790414E+01;
  COFD[21725] = 4.49839225E+00;
  COFD[21726] = -2.96981647E-01;
  COFD[21727] = 1.00162342E-02;
  COFD[21728] = -2.17790414E+01;
  COFD[21729] = 4.49839225E+00;
  COFD[21730] = -2.96981647E-01;
  COFD[21731] = 1.00162342E-02;
  COFD[21732] = -2.05920255E+01;
  COFD[21733] = 3.87488983E+00;
  COFD[21734] = -2.02017141E-01;
  COFD[21735] = 5.35367024E-03;
  COFD[21736] = -2.05920255E+01;
  COFD[21737] = 3.87488983E+00;
  COFD[21738] = -2.02017141E-01;
  COFD[21739] = 5.35367024E-03;
  COFD[21740] = -2.05920255E+01;
  COFD[21741] = 3.87488983E+00;
  COFD[21742] = -2.02017141E-01;
  COFD[21743] = 5.35367024E-03;
  COFD[21744] = -2.05920255E+01;
  COFD[21745] = 3.87488983E+00;
  COFD[21746] = -2.02017141E-01;
  COFD[21747] = 5.35367024E-03;
  COFD[21748] = -2.05920255E+01;
  COFD[21749] = 3.87488983E+00;
  COFD[21750] = -2.02017141E-01;
  COFD[21751] = 5.35367024E-03;
  COFD[21752] = -2.05920255E+01;
  COFD[21753] = 3.87488983E+00;
  COFD[21754] = -2.02017141E-01;
  COFD[21755] = 5.35367024E-03;
  COFD[21756] = -2.05920255E+01;
  COFD[21757] = 3.87488983E+00;
  COFD[21758] = -2.02017141E-01;
  COFD[21759] = 5.35367024E-03;
  COFD[21760] = -2.05920255E+01;
  COFD[21761] = 3.87488983E+00;
  COFD[21762] = -2.02017141E-01;
  COFD[21763] = 5.35367024E-03;
  COFD[21764] = -2.05920255E+01;
  COFD[21765] = 3.87488983E+00;
  COFD[21766] = -2.02017141E-01;
  COFD[21767] = 5.35367024E-03;
  COFD[21768] = -2.05920255E+01;
  COFD[21769] = 3.87488983E+00;
  COFD[21770] = -2.02017141E-01;
  COFD[21771] = 5.35367024E-03;
  COFD[21772] = -2.05920255E+01;
  COFD[21773] = 3.87488983E+00;
  COFD[21774] = -2.02017141E-01;
  COFD[21775] = 5.35367024E-03;
  COFD[21776] = -2.05920255E+01;
  COFD[21777] = 3.87488983E+00;
  COFD[21778] = -2.02017141E-01;
  COFD[21779] = 5.35367024E-03;
  COFD[21780] = -2.04021372E+01;
  COFD[21781] = 3.68933740E+00;
  COFD[21782] = -1.73601961E-01;
  COFD[21783] = 3.95720919E-03;
  COFD[21784] = -2.04021372E+01;
  COFD[21785] = 3.68933740E+00;
  COFD[21786] = -1.73601961E-01;
  COFD[21787] = 3.95720919E-03;
  COFD[21788] = -2.04021372E+01;
  COFD[21789] = 3.68933740E+00;
  COFD[21790] = -1.73601961E-01;
  COFD[21791] = 3.95720919E-03;
  COFD[21792] = -2.04021372E+01;
  COFD[21793] = 3.68933740E+00;
  COFD[21794] = -1.73601961E-01;
  COFD[21795] = 3.95720919E-03;
  COFD[21796] = -2.11834428E+01;
  COFD[21797] = 4.17689041E+00;
  COFD[21798] = -2.47710878E-01;
  COFD[21799] = 7.58649691E-03;
  COFD[21800] = -2.11834428E+01;
  COFD[21801] = 4.17689041E+00;
  COFD[21802] = -2.47710878E-01;
  COFD[21803] = 7.58649691E-03;
  COFD[21804] = -2.04568473E+01;
  COFD[21805] = 3.78121973E+00;
  COFD[21806] = -1.87619388E-01;
  COFD[21807] = 4.64425873E-03;
  COFD[21808] = -2.04568473E+01;
  COFD[21809] = 3.78121973E+00;
  COFD[21810] = -1.87619388E-01;
  COFD[21811] = 4.64425873E-03;
  COFD[21812] = -2.04568473E+01;
  COFD[21813] = 3.78121973E+00;
  COFD[21814] = -1.87619388E-01;
  COFD[21815] = 4.64425873E-03;
  COFD[21816] = -2.04568473E+01;
  COFD[21817] = 3.78121973E+00;
  COFD[21818] = -1.87619388E-01;
  COFD[21819] = 4.64425873E-03;
  COFD[21820] = -2.10674576E+01;
  COFD[21821] = 5.15027524E+00;
  COFD[21822] = -4.46126111E-01;
  COFD[21823] = 1.90401391E-02;
  COFD[21824] = -2.03113865E+01;
  COFD[21825] = 5.50136606E+00;
  COFD[21826] = -4.82461887E-01;
  COFD[21827] = 2.02471523E-02;
  COFD[21828] = -1.64898688E+01;
  COFD[21829] = 4.01175649E+00;
  COFD[21830] = -3.08860971E-01;
  COFD[21831] = 1.35100076E-02;
  COFD[21832] = -1.99785079E+01;
  COFD[21833] = 4.92184026E+00;
  COFD[21834] = -4.19745472E-01;
  COFD[21835] = 1.80268154E-02;
  COFD[21836] = -2.13955911E+01;
  COFD[21837] = 5.25183817E+00;
  COFD[21838] = -4.57376333E-01;
  COFD[21839] = 1.94504429E-02;
  COFD[21840] = -2.00047011E+01;
  COFD[21841] = 4.92184026E+00;
  COFD[21842] = -4.19745472E-01;
  COFD[21843] = 1.80268154E-02;
  COFD[21844] = -1.91326722E+01;
  COFD[21845] = 3.82263611E+00;
  COFD[21846] = -1.93983472E-01;
  COFD[21847] = 4.95789388E-03;
  COFD[21848] = -2.10843943E+01;
  COFD[21849] = 5.15315713E+00;
  COFD[21850] = -4.46344043E-01;
  COFD[21851] = 1.90431546E-02;
  COFD[21852] = -2.04488873E+01;
  COFD[21853] = 4.26473557E+00;
  COFD[21854] = -2.61033037E-01;
  COFD[21855] = 8.23906412E-03;
  COFD[21856] = -2.28655682E+01;
  COFD[21857] = 5.50522401E+00;
  COFD[21858] = -4.63604304E-01;
  COFD[21859] = 1.86600785E-02;
  COFD[21860] = -2.19550900E+01;
  COFD[21861] = 5.49350509E+00;
  COFD[21862] = -4.81613405E-01;
  COFD[21863] = 2.02171734E-02;
  COFD[21864] = -2.19053842E+01;
  COFD[21865] = 5.47162499E+00;
  COFD[21866] = -4.79195552E-01;
  COFD[21867] = 2.01289088E-02;
  COFD[21868] = -2.14072722E+01;
  COFD[21869] = 5.25183817E+00;
  COFD[21870] = -4.57376333E-01;
  COFD[21871] = 1.94504429E-02;
  COFD[21872] = -2.14185157E+01;
  COFD[21873] = 5.25183817E+00;
  COFD[21874] = -4.57376333E-01;
  COFD[21875] = 1.94504429E-02;
  COFD[21876] = -2.04620454E+01;
  COFD[21877] = 4.26473557E+00;
  COFD[21878] = -2.61033037E-01;
  COFD[21879] = 8.23906412E-03;
  COFD[21880] = -2.13745653E+01;
  COFD[21881] = 4.71094320E+00;
  COFD[21882] = -3.30478653E-01;
  COFD[21883] = 1.16991305E-02;
  COFD[21884] = -2.28446658E+01;
  COFD[21885] = 5.50134401E+00;
  COFD[21886] = -4.62488197E-01;
  COFD[21887] = 1.85873697E-02;
  COFD[21888] = -2.26579920E+01;
  COFD[21889] = 5.52001624E+00;
  COFD[21890] = -4.66629503E-01;
  COFD[21891] = 1.88355817E-02;
  COFD[21892] = -2.28315318E+01;
  COFD[21893] = 5.50134401E+00;
  COFD[21894] = -4.62488197E-01;
  COFD[21895] = 1.85873697E-02;
  COFD[21896] = -2.26089403E+01;
  COFD[21897] = 5.44867280E+00;
  COFD[21898] = -4.52284883E-01;
  COFD[21899] = 1.80110706E-02;
  COFD[21900] = -2.26239230E+01;
  COFD[21901] = 5.44867280E+00;
  COFD[21902] = -4.52284883E-01;
  COFD[21903] = 1.80110706E-02;
  COFD[21904] = -2.13524491E+01;
  COFD[21905] = 4.61201872E+00;
  COFD[21906] = -3.14803338E-01;
  COFD[21907] = 1.09082984E-02;
  COFD[21908] = -2.22093818E+01;
  COFD[21909] = 5.53457356E+00;
  COFD[21910] = -4.85892223E-01;
  COFD[21911] = 2.03611937E-02;
  COFD[21912] = -2.13607412E+01;
  COFD[21913] = 4.61201872E+00;
  COFD[21914] = -3.14803338E-01;
  COFD[21915] = 1.09082984E-02;
  COFD[21916] = -2.13607412E+01;
  COFD[21917] = 4.61201872E+00;
  COFD[21918] = -3.14803338E-01;
  COFD[21919] = 1.09082984E-02;
  COFD[21920] = -2.13687841E+01;
  COFD[21921] = 4.61201872E+00;
  COFD[21922] = -3.14803338E-01;
  COFD[21923] = 1.09082984E-02;
  COFD[21924] = -2.25160792E+01;
  COFD[21925] = 5.21003123E+00;
  COFD[21926] = -4.10612564E-01;
  COFD[21927] = 1.57798598E-02;
  COFD[21928] = -2.26029868E+01;
  COFD[21929] = 5.27383847E+00;
  COFD[21930] = -4.21722368E-01;
  COFD[21931] = 1.63729618E-02;
  COFD[21932] = -2.24161958E+01;
  COFD[21933] = 5.05061421E+00;
  COFD[21934] = -3.84359196E-01;
  COFD[21935] = 1.44214004E-02;
  COFD[21936] = -2.27715868E+01;
  COFD[21937] = 5.29493402E+00;
  COFD[21938] = -4.25285978E-01;
  COFD[21939] = 1.65604533E-02;
  COFD[21940] = -2.24284544E+01;
  COFD[21941] = 5.06106414E+00;
  COFD[21942] = -3.86053039E-01;
  COFD[21943] = 1.45081784E-02;
  COFD[21944] = -2.24342629E+01;
  COFD[21945] = 5.06106414E+00;
  COFD[21946] = -3.86053039E-01;
  COFD[21947] = 1.45081784E-02;
  COFD[21948] = -2.25733323E+01;
  COFD[21949] = 5.07648425E+00;
  COFD[21950] = -3.88560019E-01;
  COFD[21951] = 1.46368353E-02;
  COFD[21952] = -2.16260444E+01;
  COFD[21953] = 4.61434262E+00;
  COFD[21954] = -3.15175110E-01;
  COFD[21955] = 1.09271555E-02;
  COFD[21956] = -2.15982303E+01;
  COFD[21957] = 4.61573576E+00;
  COFD[21958] = -3.15398040E-01;
  COFD[21959] = 1.09384650E-02;
  COFD[21960] = -2.17252730E+01;
  COFD[21961] = 4.67024106E+00;
  COFD[21962] = -3.24044321E-01;
  COFD[21963] = 1.13750034E-02;
  COFD[21964] = -2.21696445E+01;
  COFD[21965] = 4.81459861E+00;
  COFD[21966] = -3.46990321E-01;
  COFD[21967] = 1.25347154E-02;
  COFD[21968] = -2.22981911E+01;
  COFD[21969] = 4.87626494E+00;
  COFD[21970] = -3.56718447E-01;
  COFD[21971] = 1.30246317E-02;
  COFD[21972] = -2.10973459E+01;
  COFD[21973] = 4.42639566E+00;
  COFD[21974] = -2.85821723E-01;
  COFD[21975] = 9.46169352E-03;
  COFD[21976] = -2.08236309E+01;
  COFD[21977] = 4.35920123E+00;
  COFD[21978] = -2.75491273E-01;
  COFD[21979] = 8.95100289E-03;
  COFD[21980] = -2.08307988E+01;
  COFD[21981] = 4.35920123E+00;
  COFD[21982] = -2.75491273E-01;
  COFD[21983] = 8.95100289E-03;
  COFD[21984] = -2.14101140E+01;
  COFD[21985] = 4.57887376E+00;
  COFD[21986] = -3.09523118E-01;
  COFD[21987] = 1.06414780E-02;
  COFD[21988] = -2.17002965E+01;
  COFD[21989] = 4.64740770E+00;
  COFD[21990] = -3.20446431E-01;
  COFD[21991] = 1.11941302E-02;
  COFD[21992] = -2.18637077E+01;
  COFD[21993] = 4.74264746E+00;
  COFD[21994] = -3.35507171E-01;
  COFD[21995] = 1.19529371E-02;
  COFD[21996] = -2.10811769E+01;
  COFD[21997] = 4.27612828E+00;
  COFD[21998] = -2.62774610E-01;
  COFD[21999] = 8.32471127E-03;
  COFD[22000] = -2.12187516E+01;
  COFD[22001] = 4.27612828E+00;
  COFD[22002] = -2.62774610E-01;
  COFD[22003] = 8.32471127E-03;
  COFD[22004] = -2.11438201E+01;
  COFD[22005] = 4.27612828E+00;
  COFD[22006] = -2.62774610E-01;
  COFD[22007] = 8.32471127E-03;
  COFD[22008] = -2.11438201E+01;
  COFD[22009] = 4.27612828E+00;
  COFD[22010] = -2.62774610E-01;
  COFD[22011] = 8.32471127E-03;
  COFD[22012] = -2.25635574E+01;
  COFD[22013] = 5.24330646E+00;
  COFD[22014] = -4.16370120E-01;
  COFD[22015] = 1.60860486E-02;
  COFD[22016] = -2.25069710E+01;
  COFD[22017] = 5.21003123E+00;
  COFD[22018] = -4.10612564E-01;
  COFD[22019] = 1.57798598E-02;
  COFD[22020] = -2.29254189E+01;
  COFD[22021] = 5.58520405E+00;
  COFD[22022] = -4.80873447E-01;
  COFD[22023] = 1.96836519E-02;
  COFD[22024] = -2.19248232E+01;
  COFD[22025] = 5.49350509E+00;
  COFD[22026] = -4.81613405E-01;
  COFD[22027] = 2.02171734E-02;
  COFD[22028] = -2.15185582E+01;
  COFD[22029] = 4.39307520E+00;
  COFD[22030] = -2.80700100E-01;
  COFD[22031] = 9.20842847E-03;
  COFD[22032] = -2.14295738E+01;
  COFD[22033] = 4.46330617E+00;
  COFD[22034] = -2.91524840E-01;
  COFD[22035] = 9.74451306E-03;
  COFD[22036] = -2.14254857E+01;
  COFD[22037] = 4.46330617E+00;
  COFD[22038] = -2.91524840E-01;
  COFD[22039] = 9.74451306E-03;
  COFD[22040] = -2.16068333E+01;
  COFD[22041] = 4.51951091E+00;
  COFD[22042] = -3.00270210E-01;
  COFD[22043] = 1.01801697E-02;
  COFD[22044] = -2.12382944E+01;
  COFD[22045] = 4.31600554E+00;
  COFD[22046] = -2.68872731E-01;
  COFD[22047] = 8.62471915E-03;
  COFD[22048] = -2.14700849E+01;
  COFD[22049] = 4.39307520E+00;
  COFD[22050] = -2.80700100E-01;
  COFD[22051] = 9.20842847E-03;
  COFD[22052] = -2.14669259E+01;
  COFD[22053] = 4.39307520E+00;
  COFD[22054] = -2.80700100E-01;
  COFD[22055] = 9.20842847E-03;
  COFD[22056] = -2.17771730E+01;
  COFD[22057] = 4.48837319E+00;
  COFD[22058] = -2.95423315E-01;
  COFD[22059] = 9.93861345E-03;
  COFD[22060] = -2.17746518E+01;
  COFD[22061] = 4.48837319E+00;
  COFD[22062] = -2.95423315E-01;
  COFD[22063] = 9.93861345E-03;
  COFD[22064] = -2.17746518E+01;
  COFD[22065] = 4.48837319E+00;
  COFD[22066] = -2.95423315E-01;
  COFD[22067] = 9.93861345E-03;
  COFD[22068] = -2.17746518E+01;
  COFD[22069] = 4.48837319E+00;
  COFD[22070] = -2.95423315E-01;
  COFD[22071] = 9.93861345E-03;
  COFD[22072] = -2.17746518E+01;
  COFD[22073] = 4.48837319E+00;
  COFD[22074] = -2.95423315E-01;
  COFD[22075] = 9.93861345E-03;
  COFD[22076] = -2.17790414E+01;
  COFD[22077] = 4.49839225E+00;
  COFD[22078] = -2.96981647E-01;
  COFD[22079] = 1.00162342E-02;
  COFD[22080] = -2.17790414E+01;
  COFD[22081] = 4.49839225E+00;
  COFD[22082] = -2.96981647E-01;
  COFD[22083] = 1.00162342E-02;
  COFD[22084] = -2.05920255E+01;
  COFD[22085] = 3.87488983E+00;
  COFD[22086] = -2.02017141E-01;
  COFD[22087] = 5.35367024E-03;
  COFD[22088] = -2.05920255E+01;
  COFD[22089] = 3.87488983E+00;
  COFD[22090] = -2.02017141E-01;
  COFD[22091] = 5.35367024E-03;
  COFD[22092] = -2.05920255E+01;
  COFD[22093] = 3.87488983E+00;
  COFD[22094] = -2.02017141E-01;
  COFD[22095] = 5.35367024E-03;
  COFD[22096] = -2.05920255E+01;
  COFD[22097] = 3.87488983E+00;
  COFD[22098] = -2.02017141E-01;
  COFD[22099] = 5.35367024E-03;
  COFD[22100] = -2.05920255E+01;
  COFD[22101] = 3.87488983E+00;
  COFD[22102] = -2.02017141E-01;
  COFD[22103] = 5.35367024E-03;
  COFD[22104] = -2.05920255E+01;
  COFD[22105] = 3.87488983E+00;
  COFD[22106] = -2.02017141E-01;
  COFD[22107] = 5.35367024E-03;
  COFD[22108] = -2.05920255E+01;
  COFD[22109] = 3.87488983E+00;
  COFD[22110] = -2.02017141E-01;
  COFD[22111] = 5.35367024E-03;
  COFD[22112] = -2.05920255E+01;
  COFD[22113] = 3.87488983E+00;
  COFD[22114] = -2.02017141E-01;
  COFD[22115] = 5.35367024E-03;
  COFD[22116] = -2.05920255E+01;
  COFD[22117] = 3.87488983E+00;
  COFD[22118] = -2.02017141E-01;
  COFD[22119] = 5.35367024E-03;
  COFD[22120] = -2.05920255E+01;
  COFD[22121] = 3.87488983E+00;
  COFD[22122] = -2.02017141E-01;
  COFD[22123] = 5.35367024E-03;
  COFD[22124] = -2.05920255E+01;
  COFD[22125] = 3.87488983E+00;
  COFD[22126] = -2.02017141E-01;
  COFD[22127] = 5.35367024E-03;
  COFD[22128] = -2.05920255E+01;
  COFD[22129] = 3.87488983E+00;
  COFD[22130] = -2.02017141E-01;
  COFD[22131] = 5.35367024E-03;
  COFD[22132] = -2.04021372E+01;
  COFD[22133] = 3.68933740E+00;
  COFD[22134] = -1.73601961E-01;
  COFD[22135] = 3.95720919E-03;
  COFD[22136] = -2.04021372E+01;
  COFD[22137] = 3.68933740E+00;
  COFD[22138] = -1.73601961E-01;
  COFD[22139] = 3.95720919E-03;
  COFD[22140] = -2.04021372E+01;
  COFD[22141] = 3.68933740E+00;
  COFD[22142] = -1.73601961E-01;
  COFD[22143] = 3.95720919E-03;
  COFD[22144] = -2.04021372E+01;
  COFD[22145] = 3.68933740E+00;
  COFD[22146] = -1.73601961E-01;
  COFD[22147] = 3.95720919E-03;
  COFD[22148] = -2.11834428E+01;
  COFD[22149] = 4.17689041E+00;
  COFD[22150] = -2.47710878E-01;
  COFD[22151] = 7.58649691E-03;
  COFD[22152] = -2.11834428E+01;
  COFD[22153] = 4.17689041E+00;
  COFD[22154] = -2.47710878E-01;
  COFD[22155] = 7.58649691E-03;
  COFD[22156] = -2.04568473E+01;
  COFD[22157] = 3.78121973E+00;
  COFD[22158] = -1.87619388E-01;
  COFD[22159] = 4.64425873E-03;
  COFD[22160] = -2.04568473E+01;
  COFD[22161] = 3.78121973E+00;
  COFD[22162] = -1.87619388E-01;
  COFD[22163] = 4.64425873E-03;
  COFD[22164] = -2.04568473E+01;
  COFD[22165] = 3.78121973E+00;
  COFD[22166] = -1.87619388E-01;
  COFD[22167] = 4.64425873E-03;
  COFD[22168] = -2.04568473E+01;
  COFD[22169] = 3.78121973E+00;
  COFD[22170] = -1.87619388E-01;
  COFD[22171] = 4.64425873E-03;
  COFD[22172] = -2.10674576E+01;
  COFD[22173] = 5.15027524E+00;
  COFD[22174] = -4.46126111E-01;
  COFD[22175] = 1.90401391E-02;
  COFD[22176] = -2.02780706E+01;
  COFD[22177] = 5.49690496E+00;
  COFD[22178] = -4.81980086E-01;
  COFD[22179] = 2.02301138E-02;
  COFD[22180] = -1.64601543E+01;
  COFD[22181] = 4.00718952E+00;
  COFD[22182] = -3.08273202E-01;
  COFD[22183] = 1.34846532E-02;
  COFD[22184] = -1.99424584E+01;
  COFD[22185] = 4.91552193E+00;
  COFD[22186] = -4.18967265E-01;
  COFD[22187] = 1.79947205E-02;
  COFD[22188] = -2.13639423E+01;
  COFD[22189] = 5.24703101E+00;
  COFD[22190] = -4.56809732E-01;
  COFD[22191] = 1.94281325E-02;
  COFD[22192] = -1.99686134E+01;
  COFD[22193] = 4.91552193E+00;
  COFD[22194] = -4.18967265E-01;
  COFD[22195] = 1.79947205E-02;
  COFD[22196] = -1.90565582E+01;
  COFD[22197] = 3.80285449E+00;
  COFD[22198] = -1.91725874E-01;
  COFD[22199] = 4.87377268E-03;
  COFD[22200] = -2.10605134E+01;
  COFD[22201] = 5.15144037E+00;
  COFD[22202] = -4.46211810E-01;
  COFD[22203] = 1.90411531E-02;
  COFD[22204] = -2.04539740E+01;
  COFD[22205] = 4.27584524E+00;
  COFD[22206] = -2.62731338E-01;
  COFD[22207] = 8.32258301E-03;
  COFD[22208] = -2.28480783E+01;
  COFD[22209] = 5.50671804E+00;
  COFD[22210] = -4.63960340E-01;
  COFD[22211] = 1.86820220E-02;
  COFD[22212] = -2.19243664E+01;
  COFD[22213] = 5.48897495E+00;
  COFD[22214] = -4.81122233E-01;
  COFD[22215] = 2.01997134E-02;
  COFD[22216] = -2.18761165E+01;
  COFD[22217] = 5.46751241E+00;
  COFD[22218] = -4.78738367E-01;
  COFD[22219] = 2.01120843E-02;
  COFD[22220] = -2.13737824E+01;
  COFD[22221] = 5.24642975E+00;
  COFD[22222] = -4.56740225E-01;
  COFD[22223] = 1.94254554E-02;
  COFD[22224] = -2.13849969E+01;
  COFD[22225] = 5.24642975E+00;
  COFD[22226] = -4.56740225E-01;
  COFD[22227] = 1.94254554E-02;
  COFD[22228] = -2.04671013E+01;
  COFD[22229] = 4.27584524E+00;
  COFD[22230] = -2.62731338E-01;
  COFD[22231] = 8.32258301E-03;
  COFD[22232] = -2.13099039E+01;
  COFD[22233] = 4.69402988E+00;
  COFD[22234] = -3.28451241E-01;
  COFD[22235] = 1.16182817E-02;
  COFD[22236] = -2.28266250E+01;
  COFD[22237] = 5.50218539E+00;
  COFD[22238] = -4.62760343E-01;
  COFD[22239] = 1.86055939E-02;
  COFD[22240] = -2.26433974E+01;
  COFD[22241] = 5.52285313E+00;
  COFD[22242] = -4.67182516E-01;
  COFD[22243] = 1.88669459E-02;
  COFD[22244] = -2.28135218E+01;
  COFD[22245] = 5.50218539E+00;
  COFD[22246] = -4.62760343E-01;
  COFD[22247] = 1.86055939E-02;
  COFD[22248] = -2.25972736E+01;
  COFD[22249] = 5.45263672E+00;
  COFD[22250] = -4.53003240E-01;
  COFD[22251] = 1.80503662E-02;
  COFD[22252] = -2.26122239E+01;
  COFD[22253] = 5.45263672E+00;
  COFD[22254] = -4.53003240E-01;
  COFD[22255] = 1.80503662E-02;
  COFD[22256] = -2.13502154E+01;
  COFD[22257] = 4.62003574E+00;
  COFD[22258] = -3.16085261E-01;
  COFD[22259] = 1.09733113E-02;
  COFD[22260] = -2.21781137E+01;
  COFD[22261] = 5.53116350E+00;
  COFD[22262] = -4.85556457E-01;
  COFD[22263] = 2.03508624E-02;
  COFD[22264] = -2.13584820E+01;
  COFD[22265] = 4.62003574E+00;
  COFD[22266] = -3.16085261E-01;
  COFD[22267] = 1.09733113E-02;
  COFD[22268] = -2.13584820E+01;
  COFD[22269] = 4.62003574E+00;
  COFD[22270] = -3.16085261E-01;
  COFD[22271] = 1.09733113E-02;
  COFD[22272] = -2.13664998E+01;
  COFD[22273] = 4.62003574E+00;
  COFD[22274] = -3.16085261E-01;
  COFD[22275] = 1.09733113E-02;
  COFD[22276] = -2.25078311E+01;
  COFD[22277] = 5.21520631E+00;
  COFD[22278] = -4.11491487E-01;
  COFD[22279] = 1.58260843E-02;
  COFD[22280] = -2.25930781E+01;
  COFD[22281] = 5.27849762E+00;
  COFD[22282] = -4.22539748E-01;
  COFD[22283] = 1.64168474E-02;
  COFD[22284] = -2.24131659E+01;
  COFD[22285] = 5.05794346E+00;
  COFD[22286] = -3.85546664E-01;
  COFD[22287] = 1.44822215E-02;
  COFD[22288] = -2.27669407E+01;
  COFD[22289] = 5.30142662E+00;
  COFD[22290] = -4.26360102E-01;
  COFD[22291] = 1.66162777E-02;
  COFD[22292] = -2.24249478E+01;
  COFD[22293] = 5.06823837E+00;
  COFD[22294] = -3.87218404E-01;
  COFD[22295] = 1.45679535E-02;
  COFD[22296] = -2.24307350E+01;
  COFD[22297] = 5.06823837E+00;
  COFD[22298] = -3.87218404E-01;
  COFD[22299] = 1.45679535E-02;
  COFD[22300] = -2.25704868E+01;
  COFD[22301] = 5.08364219E+00;
  COFD[22302] = -3.89724082E-01;
  COFD[22303] = 1.46965943E-02;
  COFD[22304] = -2.16249903E+01;
  COFD[22305] = 4.62247812E+00;
  COFD[22306] = -3.16474710E-01;
  COFD[22307] = 1.09930399E-02;
  COFD[22308] = -2.15272794E+01;
  COFD[22309] = 4.59621415E+00;
  COFD[22310] = -3.13058965E-01;
  COFD[22311] = 1.08456156E-02;
  COFD[22312] = -2.17261041E+01;
  COFD[22313] = 4.67918739E+00;
  COFD[22314] = -3.25456598E-01;
  COFD[22315] = 1.14460824E-02;
  COFD[22316] = -2.21718968E+01;
  COFD[22317] = 4.82388101E+00;
  COFD[22318] = -3.48448300E-01;
  COFD[22319] = 1.26079356E-02;
  COFD[22320] = -2.22907060E+01;
  COFD[22321] = 4.88168684E+00;
  COFD[22322] = -3.57667686E-01;
  COFD[22323] = 1.30755175E-02;
  COFD[22324] = -2.11028328E+01;
  COFD[22325] = 4.43740603E+00;
  COFD[22326] = -2.87517545E-01;
  COFD[22327] = 9.54563513E-03;
  COFD[22328] = -2.08279516E+01;
  COFD[22329] = 4.37022252E+00;
  COFD[22330] = -2.77185031E-01;
  COFD[22331] = 9.03467556E-03;
  COFD[22332] = -2.08350957E+01;
  COFD[22333] = 4.37022252E+00;
  COFD[22334] = -2.77185031E-01;
  COFD[22335] = 9.03467556E-03;
  COFD[22336] = -2.14101439E+01;
  COFD[22337] = 4.58783887E+00;
  COFD[22338] = -3.10930961E-01;
  COFD[22339] = 1.07119795E-02;
  COFD[22340] = -2.16300470E+01;
  COFD[22341] = 4.62790162E+00;
  COFD[22342] = -3.18096355E-01;
  COFD[22343] = 1.11001765E-02;
  COFD[22344] = -2.18641613E+01;
  COFD[22345] = 4.75144299E+00;
  COFD[22346] = -3.36899352E-01;
  COFD[22347] = 1.20231187E-02;
  COFD[22348] = -2.10875637E+01;
  COFD[22349] = 4.28722996E+00;
  COFD[22350] = -2.64472102E-01;
  COFD[22351] = 8.40820671E-03;
  COFD[22352] = -2.12244630E+01;
  COFD[22353] = 4.28722996E+00;
  COFD[22354] = -2.64472102E-01;
  COFD[22355] = 8.40820671E-03;
  COFD[22356] = -2.11499222E+01;
  COFD[22357] = 4.28722996E+00;
  COFD[22358] = -2.64472102E-01;
  COFD[22359] = 8.40820671E-03;
  COFD[22360] = -2.11499222E+01;
  COFD[22361] = 4.28722996E+00;
  COFD[22362] = -2.64472102E-01;
  COFD[22363] = 8.40820671E-03;
  COFD[22364] = -2.25527826E+01;
  COFD[22365] = 5.24747886E+00;
  COFD[22366] = -4.17110670E-01;
  COFD[22367] = 1.61259590E-02;
  COFD[22368] = -2.24987495E+01;
  COFD[22369] = 5.21520631E+00;
  COFD[22370] = -4.11491487E-01;
  COFD[22371] = 1.58260843E-02;
  COFD[22372] = -2.29049549E+01;
  COFD[22373] = 5.58521484E+00;
  COFD[22374] = -4.81024184E-01;
  COFD[22375] = 1.96960920E-02;
  COFD[22376] = -2.18941393E+01;
  COFD[22377] = 5.48897495E+00;
  COFD[22378] = -4.81122233E-01;
  COFD[22379] = 2.01997134E-02;
  COFD[22380] = -2.14799623E+01;
  COFD[22381] = 4.38678710E+00;
  COFD[22382] = -2.80183322E-01;
  COFD[22383] = 9.19860952E-03;
  COFD[22384] = -2.13748407E+01;
  COFD[22385] = 4.45055605E+00;
  COFD[22386] = -2.90128472E-01;
  COFD[22387] = 9.69504339E-03;
  COFD[22388] = -2.13707701E+01;
  COFD[22389] = 4.45055605E+00;
  COFD[22390] = -2.90128472E-01;
  COFD[22391] = 9.69504339E-03;
  COFD[22392] = -2.15445104E+01;
  COFD[22393] = 4.50349169E+00;
  COFD[22394] = -2.98439896E-01;
  COFD[22395] = 1.01116859E-02;
  COFD[22396] = -2.12455828E+01;
  COFD[22397] = 4.32753833E+00;
  COFD[22398] = -2.70634811E-01;
  COFD[22399] = 8.71140682E-03;
  COFD[22400] = -2.14317307E+01;
  COFD[22401] = 4.38678710E+00;
  COFD[22402] = -2.80183322E-01;
  COFD[22403] = 9.19860952E-03;
  COFD[22404] = -2.14285866E+01;
  COFD[22405] = 4.38678710E+00;
  COFD[22406] = -2.80183322E-01;
  COFD[22407] = 9.19860952E-03;
  COFD[22408] = -2.17815497E+01;
  COFD[22409] = 4.49839225E+00;
  COFD[22410] = -2.96981647E-01;
  COFD[22411] = 1.00162342E-02;
  COFD[22412] = -2.17790414E+01;
  COFD[22413] = 4.49839225E+00;
  COFD[22414] = -2.96981647E-01;
  COFD[22415] = 1.00162342E-02;
  COFD[22416] = -2.17790414E+01;
  COFD[22417] = 4.49839225E+00;
  COFD[22418] = -2.96981647E-01;
  COFD[22419] = 1.00162342E-02;
  COFD[22420] = -2.17790414E+01;
  COFD[22421] = 4.49839225E+00;
  COFD[22422] = -2.96981647E-01;
  COFD[22423] = 1.00162342E-02;
  COFD[22424] = -2.17790414E+01;
  COFD[22425] = 4.49839225E+00;
  COFD[22426] = -2.96981647E-01;
  COFD[22427] = 1.00162342E-02;
  COFD[22428] = -2.17787685E+01;
  COFD[22429] = 4.50667663E+00;
  COFD[22430] = -2.98322448E-01;
  COFD[22431] = 1.00848020E-02;
  COFD[22432] = -2.17787685E+01;
  COFD[22433] = 4.50667663E+00;
  COFD[22434] = -2.98322448E-01;
  COFD[22435] = 1.00848020E-02;
  COFD[22436] = -2.05746135E+01;
  COFD[22437] = 3.87685237E+00;
  COFD[22438] = -2.02572236E-01;
  COFD[22439] = 5.38978456E-03;
  COFD[22440] = -2.05746135E+01;
  COFD[22441] = 3.87685237E+00;
  COFD[22442] = -2.02572236E-01;
  COFD[22443] = 5.38978456E-03;
  COFD[22444] = -2.05746135E+01;
  COFD[22445] = 3.87685237E+00;
  COFD[22446] = -2.02572236E-01;
  COFD[22447] = 5.38978456E-03;
  COFD[22448] = -2.05746135E+01;
  COFD[22449] = 3.87685237E+00;
  COFD[22450] = -2.02572236E-01;
  COFD[22451] = 5.38978456E-03;
  COFD[22452] = -2.05746135E+01;
  COFD[22453] = 3.87685237E+00;
  COFD[22454] = -2.02572236E-01;
  COFD[22455] = 5.38978456E-03;
  COFD[22456] = -2.05746135E+01;
  COFD[22457] = 3.87685237E+00;
  COFD[22458] = -2.02572236E-01;
  COFD[22459] = 5.38978456E-03;
  COFD[22460] = -2.05746135E+01;
  COFD[22461] = 3.87685237E+00;
  COFD[22462] = -2.02572236E-01;
  COFD[22463] = 5.38978456E-03;
  COFD[22464] = -2.05746135E+01;
  COFD[22465] = 3.87685237E+00;
  COFD[22466] = -2.02572236E-01;
  COFD[22467] = 5.38978456E-03;
  COFD[22468] = -2.05746135E+01;
  COFD[22469] = 3.87685237E+00;
  COFD[22470] = -2.02572236E-01;
  COFD[22471] = 5.38978456E-03;
  COFD[22472] = -2.05746135E+01;
  COFD[22473] = 3.87685237E+00;
  COFD[22474] = -2.02572236E-01;
  COFD[22475] = 5.38978456E-03;
  COFD[22476] = -2.05746135E+01;
  COFD[22477] = 3.87685237E+00;
  COFD[22478] = -2.02572236E-01;
  COFD[22479] = 5.38978456E-03;
  COFD[22480] = -2.05746135E+01;
  COFD[22481] = 3.87685237E+00;
  COFD[22482] = -2.02572236E-01;
  COFD[22483] = 5.38978456E-03;
  COFD[22484] = -2.03906936E+01;
  COFD[22485] = 3.69340757E+00;
  COFD[22486] = -1.74428920E-01;
  COFD[22487] = 4.00486528E-03;
  COFD[22488] = -2.03906936E+01;
  COFD[22489] = 3.69340757E+00;
  COFD[22490] = -1.74428920E-01;
  COFD[22491] = 4.00486528E-03;
  COFD[22492] = -2.03906936E+01;
  COFD[22493] = 3.69340757E+00;
  COFD[22494] = -1.74428920E-01;
  COFD[22495] = 4.00486528E-03;
  COFD[22496] = -2.03906936E+01;
  COFD[22497] = 3.69340757E+00;
  COFD[22498] = -1.74428920E-01;
  COFD[22499] = 4.00486528E-03;
  COFD[22500] = -2.11960936E+01;
  COFD[22501] = 4.19044298E+00;
  COFD[22502] = -2.49760830E-01;
  COFD[22503] = 7.68677604E-03;
  COFD[22504] = -2.11960936E+01;
  COFD[22505] = 4.19044298E+00;
  COFD[22506] = -2.49760830E-01;
  COFD[22507] = 7.68677604E-03;
  COFD[22508] = -2.04363403E+01;
  COFD[22509] = 3.78198958E+00;
  COFD[22510] = -1.88024034E-01;
  COFD[22511] = 4.67404845E-03;
  COFD[22512] = -2.04363403E+01;
  COFD[22513] = 3.78198958E+00;
  COFD[22514] = -1.88024034E-01;
  COFD[22515] = 4.67404845E-03;
  COFD[22516] = -2.04363403E+01;
  COFD[22517] = 3.78198958E+00;
  COFD[22518] = -1.88024034E-01;
  COFD[22519] = 4.67404845E-03;
  COFD[22520] = -2.04363403E+01;
  COFD[22521] = 3.78198958E+00;
  COFD[22522] = -1.88024034E-01;
  COFD[22523] = 4.67404845E-03;
  COFD[22524] = -2.10431250E+01;
  COFD[22525] = 5.14839832E+00;
  COFD[22526] = -4.45972391E-01;
  COFD[22527] = 1.90371778E-02;
  COFD[22528] = -2.02780706E+01;
  COFD[22529] = 5.49690496E+00;
  COFD[22530] = -4.81980086E-01;
  COFD[22531] = 2.02301138E-02;
  COFD[22532] = -1.64601543E+01;
  COFD[22533] = 4.00718952E+00;
  COFD[22534] = -3.08273202E-01;
  COFD[22535] = 1.34846532E-02;
  COFD[22536] = -1.99424584E+01;
  COFD[22537] = 4.91552193E+00;
  COFD[22538] = -4.18967265E-01;
  COFD[22539] = 1.79947205E-02;
  COFD[22540] = -2.13639423E+01;
  COFD[22541] = 5.24703101E+00;
  COFD[22542] = -4.56809732E-01;
  COFD[22543] = 1.94281325E-02;
  COFD[22544] = -1.99686134E+01;
  COFD[22545] = 4.91552193E+00;
  COFD[22546] = -4.18967265E-01;
  COFD[22547] = 1.79947205E-02;
  COFD[22548] = -1.90565582E+01;
  COFD[22549] = 3.80285449E+00;
  COFD[22550] = -1.91725874E-01;
  COFD[22551] = 4.87377268E-03;
  COFD[22552] = -2.10605134E+01;
  COFD[22553] = 5.15144037E+00;
  COFD[22554] = -4.46211810E-01;
  COFD[22555] = 1.90411531E-02;
  COFD[22556] = -2.04539740E+01;
  COFD[22557] = 4.27584524E+00;
  COFD[22558] = -2.62731338E-01;
  COFD[22559] = 8.32258301E-03;
  COFD[22560] = -2.28480783E+01;
  COFD[22561] = 5.50671804E+00;
  COFD[22562] = -4.63960340E-01;
  COFD[22563] = 1.86820220E-02;
  COFD[22564] = -2.19243664E+01;
  COFD[22565] = 5.48897495E+00;
  COFD[22566] = -4.81122233E-01;
  COFD[22567] = 2.01997134E-02;
  COFD[22568] = -2.18761165E+01;
  COFD[22569] = 5.46751241E+00;
  COFD[22570] = -4.78738367E-01;
  COFD[22571] = 2.01120843E-02;
  COFD[22572] = -2.13737824E+01;
  COFD[22573] = 5.24642975E+00;
  COFD[22574] = -4.56740225E-01;
  COFD[22575] = 1.94254554E-02;
  COFD[22576] = -2.13849969E+01;
  COFD[22577] = 5.24642975E+00;
  COFD[22578] = -4.56740225E-01;
  COFD[22579] = 1.94254554E-02;
  COFD[22580] = -2.04671013E+01;
  COFD[22581] = 4.27584524E+00;
  COFD[22582] = -2.62731338E-01;
  COFD[22583] = 8.32258301E-03;
  COFD[22584] = -2.13099039E+01;
  COFD[22585] = 4.69402988E+00;
  COFD[22586] = -3.28451241E-01;
  COFD[22587] = 1.16182817E-02;
  COFD[22588] = -2.28266250E+01;
  COFD[22589] = 5.50218539E+00;
  COFD[22590] = -4.62760343E-01;
  COFD[22591] = 1.86055939E-02;
  COFD[22592] = -2.26433974E+01;
  COFD[22593] = 5.52285313E+00;
  COFD[22594] = -4.67182516E-01;
  COFD[22595] = 1.88669459E-02;
  COFD[22596] = -2.28135218E+01;
  COFD[22597] = 5.50218539E+00;
  COFD[22598] = -4.62760343E-01;
  COFD[22599] = 1.86055939E-02;
  COFD[22600] = -2.25972736E+01;
  COFD[22601] = 5.45263672E+00;
  COFD[22602] = -4.53003240E-01;
  COFD[22603] = 1.80503662E-02;
  COFD[22604] = -2.26122239E+01;
  COFD[22605] = 5.45263672E+00;
  COFD[22606] = -4.53003240E-01;
  COFD[22607] = 1.80503662E-02;
  COFD[22608] = -2.13502154E+01;
  COFD[22609] = 4.62003574E+00;
  COFD[22610] = -3.16085261E-01;
  COFD[22611] = 1.09733113E-02;
  COFD[22612] = -2.21781137E+01;
  COFD[22613] = 5.53116350E+00;
  COFD[22614] = -4.85556457E-01;
  COFD[22615] = 2.03508624E-02;
  COFD[22616] = -2.13584820E+01;
  COFD[22617] = 4.62003574E+00;
  COFD[22618] = -3.16085261E-01;
  COFD[22619] = 1.09733113E-02;
  COFD[22620] = -2.13584820E+01;
  COFD[22621] = 4.62003574E+00;
  COFD[22622] = -3.16085261E-01;
  COFD[22623] = 1.09733113E-02;
  COFD[22624] = -2.13664998E+01;
  COFD[22625] = 4.62003574E+00;
  COFD[22626] = -3.16085261E-01;
  COFD[22627] = 1.09733113E-02;
  COFD[22628] = -2.25078311E+01;
  COFD[22629] = 5.21520631E+00;
  COFD[22630] = -4.11491487E-01;
  COFD[22631] = 1.58260843E-02;
  COFD[22632] = -2.25930781E+01;
  COFD[22633] = 5.27849762E+00;
  COFD[22634] = -4.22539748E-01;
  COFD[22635] = 1.64168474E-02;
  COFD[22636] = -2.24131659E+01;
  COFD[22637] = 5.05794346E+00;
  COFD[22638] = -3.85546664E-01;
  COFD[22639] = 1.44822215E-02;
  COFD[22640] = -2.27669407E+01;
  COFD[22641] = 5.30142662E+00;
  COFD[22642] = -4.26360102E-01;
  COFD[22643] = 1.66162777E-02;
  COFD[22644] = -2.24249478E+01;
  COFD[22645] = 5.06823837E+00;
  COFD[22646] = -3.87218404E-01;
  COFD[22647] = 1.45679535E-02;
  COFD[22648] = -2.24307350E+01;
  COFD[22649] = 5.06823837E+00;
  COFD[22650] = -3.87218404E-01;
  COFD[22651] = 1.45679535E-02;
  COFD[22652] = -2.25704868E+01;
  COFD[22653] = 5.08364219E+00;
  COFD[22654] = -3.89724082E-01;
  COFD[22655] = 1.46965943E-02;
  COFD[22656] = -2.16249903E+01;
  COFD[22657] = 4.62247812E+00;
  COFD[22658] = -3.16474710E-01;
  COFD[22659] = 1.09930399E-02;
  COFD[22660] = -2.15272794E+01;
  COFD[22661] = 4.59621415E+00;
  COFD[22662] = -3.13058965E-01;
  COFD[22663] = 1.08456156E-02;
  COFD[22664] = -2.17261041E+01;
  COFD[22665] = 4.67918739E+00;
  COFD[22666] = -3.25456598E-01;
  COFD[22667] = 1.14460824E-02;
  COFD[22668] = -2.21718968E+01;
  COFD[22669] = 4.82388101E+00;
  COFD[22670] = -3.48448300E-01;
  COFD[22671] = 1.26079356E-02;
  COFD[22672] = -2.22907060E+01;
  COFD[22673] = 4.88168684E+00;
  COFD[22674] = -3.57667686E-01;
  COFD[22675] = 1.30755175E-02;
  COFD[22676] = -2.11028328E+01;
  COFD[22677] = 4.43740603E+00;
  COFD[22678] = -2.87517545E-01;
  COFD[22679] = 9.54563513E-03;
  COFD[22680] = -2.08279516E+01;
  COFD[22681] = 4.37022252E+00;
  COFD[22682] = -2.77185031E-01;
  COFD[22683] = 9.03467556E-03;
  COFD[22684] = -2.08350957E+01;
  COFD[22685] = 4.37022252E+00;
  COFD[22686] = -2.77185031E-01;
  COFD[22687] = 9.03467556E-03;
  COFD[22688] = -2.14101439E+01;
  COFD[22689] = 4.58783887E+00;
  COFD[22690] = -3.10930961E-01;
  COFD[22691] = 1.07119795E-02;
  COFD[22692] = -2.16300470E+01;
  COFD[22693] = 4.62790162E+00;
  COFD[22694] = -3.18096355E-01;
  COFD[22695] = 1.11001765E-02;
  COFD[22696] = -2.18641613E+01;
  COFD[22697] = 4.75144299E+00;
  COFD[22698] = -3.36899352E-01;
  COFD[22699] = 1.20231187E-02;
  COFD[22700] = -2.10875637E+01;
  COFD[22701] = 4.28722996E+00;
  COFD[22702] = -2.64472102E-01;
  COFD[22703] = 8.40820671E-03;
  COFD[22704] = -2.12244630E+01;
  COFD[22705] = 4.28722996E+00;
  COFD[22706] = -2.64472102E-01;
  COFD[22707] = 8.40820671E-03;
  COFD[22708] = -2.11499222E+01;
  COFD[22709] = 4.28722996E+00;
  COFD[22710] = -2.64472102E-01;
  COFD[22711] = 8.40820671E-03;
  COFD[22712] = -2.11499222E+01;
  COFD[22713] = 4.28722996E+00;
  COFD[22714] = -2.64472102E-01;
  COFD[22715] = 8.40820671E-03;
  COFD[22716] = -2.25527826E+01;
  COFD[22717] = 5.24747886E+00;
  COFD[22718] = -4.17110670E-01;
  COFD[22719] = 1.61259590E-02;
  COFD[22720] = -2.24987495E+01;
  COFD[22721] = 5.21520631E+00;
  COFD[22722] = -4.11491487E-01;
  COFD[22723] = 1.58260843E-02;
  COFD[22724] = -2.29049549E+01;
  COFD[22725] = 5.58521484E+00;
  COFD[22726] = -4.81024184E-01;
  COFD[22727] = 1.96960920E-02;
  COFD[22728] = -2.18941393E+01;
  COFD[22729] = 5.48897495E+00;
  COFD[22730] = -4.81122233E-01;
  COFD[22731] = 2.01997134E-02;
  COFD[22732] = -2.14799623E+01;
  COFD[22733] = 4.38678710E+00;
  COFD[22734] = -2.80183322E-01;
  COFD[22735] = 9.19860952E-03;
  COFD[22736] = -2.13748407E+01;
  COFD[22737] = 4.45055605E+00;
  COFD[22738] = -2.90128472E-01;
  COFD[22739] = 9.69504339E-03;
  COFD[22740] = -2.13707701E+01;
  COFD[22741] = 4.45055605E+00;
  COFD[22742] = -2.90128472E-01;
  COFD[22743] = 9.69504339E-03;
  COFD[22744] = -2.15445104E+01;
  COFD[22745] = 4.50349169E+00;
  COFD[22746] = -2.98439896E-01;
  COFD[22747] = 1.01116859E-02;
  COFD[22748] = -2.12455828E+01;
  COFD[22749] = 4.32753833E+00;
  COFD[22750] = -2.70634811E-01;
  COFD[22751] = 8.71140682E-03;
  COFD[22752] = -2.14317307E+01;
  COFD[22753] = 4.38678710E+00;
  COFD[22754] = -2.80183322E-01;
  COFD[22755] = 9.19860952E-03;
  COFD[22756] = -2.14285866E+01;
  COFD[22757] = 4.38678710E+00;
  COFD[22758] = -2.80183322E-01;
  COFD[22759] = 9.19860952E-03;
  COFD[22760] = -2.17815497E+01;
  COFD[22761] = 4.49839225E+00;
  COFD[22762] = -2.96981647E-01;
  COFD[22763] = 1.00162342E-02;
  COFD[22764] = -2.17790414E+01;
  COFD[22765] = 4.49839225E+00;
  COFD[22766] = -2.96981647E-01;
  COFD[22767] = 1.00162342E-02;
  COFD[22768] = -2.17790414E+01;
  COFD[22769] = 4.49839225E+00;
  COFD[22770] = -2.96981647E-01;
  COFD[22771] = 1.00162342E-02;
  COFD[22772] = -2.17790414E+01;
  COFD[22773] = 4.49839225E+00;
  COFD[22774] = -2.96981647E-01;
  COFD[22775] = 1.00162342E-02;
  COFD[22776] = -2.17790414E+01;
  COFD[22777] = 4.49839225E+00;
  COFD[22778] = -2.96981647E-01;
  COFD[22779] = 1.00162342E-02;
  COFD[22780] = -2.17787685E+01;
  COFD[22781] = 4.50667663E+00;
  COFD[22782] = -2.98322448E-01;
  COFD[22783] = 1.00848020E-02;
  COFD[22784] = -2.17787685E+01;
  COFD[22785] = 4.50667663E+00;
  COFD[22786] = -2.98322448E-01;
  COFD[22787] = 1.00848020E-02;
  COFD[22788] = -2.05746135E+01;
  COFD[22789] = 3.87685237E+00;
  COFD[22790] = -2.02572236E-01;
  COFD[22791] = 5.38978456E-03;
  COFD[22792] = -2.05746135E+01;
  COFD[22793] = 3.87685237E+00;
  COFD[22794] = -2.02572236E-01;
  COFD[22795] = 5.38978456E-03;
  COFD[22796] = -2.05746135E+01;
  COFD[22797] = 3.87685237E+00;
  COFD[22798] = -2.02572236E-01;
  COFD[22799] = 5.38978456E-03;
  COFD[22800] = -2.05746135E+01;
  COFD[22801] = 3.87685237E+00;
  COFD[22802] = -2.02572236E-01;
  COFD[22803] = 5.38978456E-03;
  COFD[22804] = -2.05746135E+01;
  COFD[22805] = 3.87685237E+00;
  COFD[22806] = -2.02572236E-01;
  COFD[22807] = 5.38978456E-03;
  COFD[22808] = -2.05746135E+01;
  COFD[22809] = 3.87685237E+00;
  COFD[22810] = -2.02572236E-01;
  COFD[22811] = 5.38978456E-03;
  COFD[22812] = -2.05746135E+01;
  COFD[22813] = 3.87685237E+00;
  COFD[22814] = -2.02572236E-01;
  COFD[22815] = 5.38978456E-03;
  COFD[22816] = -2.05746135E+01;
  COFD[22817] = 3.87685237E+00;
  COFD[22818] = -2.02572236E-01;
  COFD[22819] = 5.38978456E-03;
  COFD[22820] = -2.05746135E+01;
  COFD[22821] = 3.87685237E+00;
  COFD[22822] = -2.02572236E-01;
  COFD[22823] = 5.38978456E-03;
  COFD[22824] = -2.05746135E+01;
  COFD[22825] = 3.87685237E+00;
  COFD[22826] = -2.02572236E-01;
  COFD[22827] = 5.38978456E-03;
  COFD[22828] = -2.05746135E+01;
  COFD[22829] = 3.87685237E+00;
  COFD[22830] = -2.02572236E-01;
  COFD[22831] = 5.38978456E-03;
  COFD[22832] = -2.05746135E+01;
  COFD[22833] = 3.87685237E+00;
  COFD[22834] = -2.02572236E-01;
  COFD[22835] = 5.38978456E-03;
  COFD[22836] = -2.03906936E+01;
  COFD[22837] = 3.69340757E+00;
  COFD[22838] = -1.74428920E-01;
  COFD[22839] = 4.00486528E-03;
  COFD[22840] = -2.03906936E+01;
  COFD[22841] = 3.69340757E+00;
  COFD[22842] = -1.74428920E-01;
  COFD[22843] = 4.00486528E-03;
  COFD[22844] = -2.03906936E+01;
  COFD[22845] = 3.69340757E+00;
  COFD[22846] = -1.74428920E-01;
  COFD[22847] = 4.00486528E-03;
  COFD[22848] = -2.03906936E+01;
  COFD[22849] = 3.69340757E+00;
  COFD[22850] = -1.74428920E-01;
  COFD[22851] = 4.00486528E-03;
  COFD[22852] = -2.11960936E+01;
  COFD[22853] = 4.19044298E+00;
  COFD[22854] = -2.49760830E-01;
  COFD[22855] = 7.68677604E-03;
  COFD[22856] = -2.11960936E+01;
  COFD[22857] = 4.19044298E+00;
  COFD[22858] = -2.49760830E-01;
  COFD[22859] = 7.68677604E-03;
  COFD[22860] = -2.04363403E+01;
  COFD[22861] = 3.78198958E+00;
  COFD[22862] = -1.88024034E-01;
  COFD[22863] = 4.67404845E-03;
  COFD[22864] = -2.04363403E+01;
  COFD[22865] = 3.78198958E+00;
  COFD[22866] = -1.88024034E-01;
  COFD[22867] = 4.67404845E-03;
  COFD[22868] = -2.04363403E+01;
  COFD[22869] = 3.78198958E+00;
  COFD[22870] = -1.88024034E-01;
  COFD[22871] = 4.67404845E-03;
  COFD[22872] = -2.04363403E+01;
  COFD[22873] = 3.78198958E+00;
  COFD[22874] = -1.88024034E-01;
  COFD[22875] = 4.67404845E-03;
  COFD[22876] = -2.10431250E+01;
  COFD[22877] = 5.14839832E+00;
  COFD[22878] = -4.45972391E-01;
  COFD[22879] = 1.90371778E-02;
  COFD[22880] = -2.07558370E+01;
  COFD[22881] = 5.61220925E+00;
  COFD[22882] = -4.91040098E-01;
  COFD[22883] = 2.03909682E-02;
  COFD[22884] = -1.72085780E+01;
  COFD[22885] = 4.26597898E+00;
  COFD[22886] = -3.40497726E-01;
  COFD[22887] = 1.48284962E-02;
  COFD[22888] = -2.06859442E+01;
  COFD[22889] = 5.15084743E+00;
  COFD[22890] = -4.46166870E-01;
  COFD[22891] = 1.90405241E-02;
  COFD[22892] = -2.19892992E+01;
  COFD[22893] = 5.41528536E+00;
  COFD[22894] = -4.73395924E-01;
  COFD[22895] = 1.99371023E-02;
  COFD[22896] = -2.07130812E+01;
  COFD[22897] = 5.15084743E+00;
  COFD[22898] = -4.46166870E-01;
  COFD[22899] = 1.90405241E-02;
  COFD[22900] = -1.72072974E+01;
  COFD[22901] = 2.92077981E+00;
  COFD[22902] = -6.20181094E-02;
  COFD[22903] = -1.31459730E-03;
  COFD[22904] = -2.18067293E+01;
  COFD[22905] = 5.37381914E+00;
  COFD[22906] = -4.70526306E-01;
  COFD[22907] = 1.99137622E-02;
  COFD[22908] = -1.92245436E+01;
  COFD[22909] = 3.64878687E+00;
  COFD[22910] = -1.67486742E-01;
  COFD[22911] = 3.65938254E-03;
  COFD[22912] = -2.26542292E+01;
  COFD[22913] = 5.30716061E+00;
  COFD[22914] = -4.27308091E-01;
  COFD[22915] = 1.66655289E-02;
  COFD[22916] = -2.24310667E+01;
  COFD[22917] = 5.61234798E+00;
  COFD[22918] = -4.91297356E-01;
  COFD[22919] = 2.04115425E-02;
  COFD[22920] = -2.24475415E+01;
  COFD[22921] = 5.61233595E+00;
  COFD[22922] = -4.91420667E-01;
  COFD[22923] = 2.04217927E-02;
  COFD[22924] = -2.19786716E+01;
  COFD[22925] = 5.41031792E+00;
  COFD[22926] = -4.73134636E-01;
  COFD[22927] = 1.99412666E-02;
  COFD[22928] = -2.19906530E+01;
  COFD[22929] = 5.41031792E+00;
  COFD[22930] = -4.73134636E-01;
  COFD[22931] = 1.99412666E-02;
  COFD[22932] = -1.92384813E+01;
  COFD[22933] = 3.64878687E+00;
  COFD[22934] = -1.67486742E-01;
  COFD[22935] = 3.65938254E-03;
  COFD[22936] = -2.00260065E+01;
  COFD[22937] = 4.04058640E+00;
  COFD[22938] = -2.29270334E-01;
  COFD[22939] = 6.76606770E-03;
  COFD[22940] = -2.26084502E+01;
  COFD[22941] = 5.30201231E+00;
  COFD[22942] = -4.26456960E-01;
  COFD[22943] = 1.66213106E-02;
  COFD[22944] = -2.24952591E+01;
  COFD[22945] = 5.35215936E+00;
  COFD[22946] = -4.34996256E-01;
  COFD[22947] = 1.70721706E-02;
  COFD[22948] = -2.25945370E+01;
  COFD[22949] = 5.30201231E+00;
  COFD[22950] = -4.26456960E-01;
  COFD[22951] = 1.66213106E-02;
  COFD[22952] = -2.22879818E+01;
  COFD[22953] = 5.21396996E+00;
  COFD[22954] = -4.11281412E-01;
  COFD[22955] = 1.58150334E-02;
  COFD[22956] = -2.23037777E+01;
  COFD[22957] = 5.21396996E+00;
  COFD[22958] = -4.11281412E-01;
  COFD[22959] = 1.58150334E-02;
  COFD[22960] = -2.02458098E+01;
  COFD[22961] = 4.04040564E+00;
  COFD[22962] = -2.27103382E-01;
  COFD[22963] = 6.58016011E-03;
  COFD[22964] = -2.25975141E+01;
  COFD[22965] = 5.60684388E+00;
  COFD[22966] = -4.89089198E-01;
  COFD[22967] = 2.02565724E-02;
  COFD[22968] = -2.02547568E+01;
  COFD[22969] = 4.04040564E+00;
  COFD[22970] = -2.27103382E-01;
  COFD[22971] = 6.58016011E-03;
  COFD[22972] = -2.02547568E+01;
  COFD[22973] = 4.04040564E+00;
  COFD[22974] = -2.27103382E-01;
  COFD[22975] = 6.58016011E-03;
  COFD[22976] = -2.02634463E+01;
  COFD[22977] = 4.04040564E+00;
  COFD[22978] = -2.27103382E-01;
  COFD[22979] = 6.58016011E-03;
  COFD[22980] = -2.18339999E+01;
  COFD[22981] = 4.81663452E+00;
  COFD[22982] = -3.47310112E-01;
  COFD[22983] = 1.25507777E-02;
  COFD[22984] = -2.20612721E+01;
  COFD[22985] = 4.93948492E+00;
  COFD[22986] = -3.66694137E-01;
  COFD[22987] = 1.35271560E-02;
  COFD[22988] = -2.16378415E+01;
  COFD[22989] = 4.61311728E+00;
  COFD[22990] = -3.14979067E-01;
  COFD[22991] = 1.09172113E-02;
  COFD[22992] = -2.22609630E+01;
  COFD[22993] = 4.97379817E+00;
  COFD[22994] = -3.72099307E-01;
  COFD[22995] = 1.37992814E-02;
  COFD[22996] = -2.16535499E+01;
  COFD[22997] = 4.62479073E+00;
  COFD[22998] = -3.16843576E-01;
  COFD[22999] = 1.10117295E-02;
  COFD[23000] = -2.16599161E+01;
  COFD[23001] = 4.62479073E+00;
  COFD[23002] = -3.16843576E-01;
  COFD[23003] = 1.10117295E-02;
  COFD[23004] = -2.18056042E+01;
  COFD[23005] = 4.64312709E+00;
  COFD[23006] = -3.19764076E-01;
  COFD[23007] = 1.11595790E-02;
  COFD[23008] = -2.05316670E+01;
  COFD[23009] = 4.04453292E+00;
  COFD[23010] = -2.27725339E-01;
  COFD[23011] = 6.61050628E-03;
  COFD[23012] = -2.00647907E+01;
  COFD[23013] = 3.86026424E+00;
  COFD[23014] = -2.02407333E-01;
  COFD[23015] = 5.46907954E-03;
  COFD[23016] = -2.07088264E+01;
  COFD[23017] = 4.13288186E+00;
  COFD[23018] = -2.41054643E-01;
  COFD[23019] = 7.26113993E-03;
  COFD[23020] = -2.13196973E+01;
  COFD[23021] = 4.34433003E+00;
  COFD[23022] = -2.73207428E-01;
  COFD[23023] = 8.83823384E-03;
  COFD[23024] = -2.14443150E+01;
  COFD[23025] = 4.40560301E+00;
  COFD[23026] = -2.83033303E-01;
  COFD[23027] = 9.33807331E-03;
  COFD[23028] = -1.98908327E+01;
  COFD[23029] = 3.81317728E+00;
  COFD[23030] = -1.92528490E-01;
  COFD[23031] = 4.88612928E-03;
  COFD[23032] = -1.96275498E+01;
  COFD[23033] = 3.74985445E+00;
  COFD[23034] = -1.82818055E-01;
  COFD[23035] = 4.40846246E-03;
  COFD[23036] = -1.96353326E+01;
  COFD[23037] = 3.74985445E+00;
  COFD[23038] = -1.82818055E-01;
  COFD[23039] = 4.40846246E-03;
  COFD[23040] = -2.02529779E+01;
  COFD[23041] = 3.98291296E+00;
  COFD[23042] = -2.18459468E-01;
  COFD[23043] = 6.15957476E-03;
  COFD[23044] = -2.02219152E+01;
  COFD[23045] = 3.91540504E+00;
  COFD[23046] = -2.10676561E-01;
  COFD[23047] = 5.87107784E-03;
  COFD[23048] = -2.09376776E+01;
  COFD[23049] = 4.24310133E+00;
  COFD[23050] = -2.57732017E-01;
  COFD[23051] = 8.07685243E-03;
  COFD[23052] = -1.98854459E+01;
  COFD[23053] = 3.66237031E+00;
  COFD[23054] = -1.69533805E-01;
  COFD[23055] = 3.75902257E-03;
  COFD[23056] = -2.00413049E+01;
  COFD[23057] = 3.66237031E+00;
  COFD[23058] = -1.69533805E-01;
  COFD[23059] = 3.75902257E-03;
  COFD[23060] = -1.99557130E+01;
  COFD[23061] = 3.66237031E+00;
  COFD[23062] = -1.69533805E-01;
  COFD[23063] = 3.75902257E-03;
  COFD[23064] = -1.99557130E+01;
  COFD[23065] = 3.66237031E+00;
  COFD[23066] = -1.69533805E-01;
  COFD[23067] = 3.75902257E-03;
  COFD[23068] = -2.19508560E+01;
  COFD[23069] = 4.87914567E+00;
  COFD[23070] = -3.57172857E-01;
  COFD[23071] = 1.30475227E-02;
  COFD[23072] = -2.18242110E+01;
  COFD[23073] = 4.81663452E+00;
  COFD[23074] = -3.47310112E-01;
  COFD[23075] = 1.25507777E-02;
  COFD[23076] = -2.29275994E+01;
  COFD[23077] = 5.48746342E+00;
  COFD[23078] = -4.59361316E-01;
  COFD[23079] = 1.83995990E-02;
  COFD[23080] = -2.23998269E+01;
  COFD[23081] = 5.61234798E+00;
  COFD[23082] = -4.91297356E-01;
  COFD[23083] = 2.04115425E-02;
  COFD[23084] = -2.00556963E+01;
  COFD[23085] = 3.66436790E+00;
  COFD[23086] = -1.71934261E-01;
  COFD[23087] = 3.95119075E-03;
  COFD[23088] = -1.98658124E+01;
  COFD[23089] = 3.69537879E+00;
  COFD[23090] = -1.77145108E-01;
  COFD[23091] = 4.22399720E-03;
  COFD[23092] = -1.98612587E+01;
  COFD[23093] = 3.69537879E+00;
  COFD[23094] = -1.77145108E-01;
  COFD[23095] = 4.22399720E-03;
  COFD[23096] = -1.99821344E+01;
  COFD[23097] = 3.72431023E+00;
  COFD[23098] = -1.81904593E-01;
  COFD[23099] = 4.46988587E-03;
  COFD[23100] = -2.00589344E+01;
  COFD[23101] = 3.70669288E+00;
  COFD[23102] = -1.76242142E-01;
  COFD[23103] = 4.08636872E-03;
  COFD[23104] = -2.00006729E+01;
  COFD[23105] = 3.66436790E+00;
  COFD[23106] = -1.71934261E-01;
  COFD[23107] = 3.95119075E-03;
  COFD[23108] = -1.99971115E+01;
  COFD[23109] = 3.66436790E+00;
  COFD[23110] = -1.71934261E-01;
  COFD[23111] = 3.95119075E-03;
  COFD[23112] = -2.05948978E+01;
  COFD[23113] = 3.87488983E+00;
  COFD[23114] = -2.02017141E-01;
  COFD[23115] = 5.35367024E-03;
  COFD[23116] = -2.05920255E+01;
  COFD[23117] = 3.87488983E+00;
  COFD[23118] = -2.02017141E-01;
  COFD[23119] = 5.35367024E-03;
  COFD[23120] = -2.05920255E+01;
  COFD[23121] = 3.87488983E+00;
  COFD[23122] = -2.02017141E-01;
  COFD[23123] = 5.35367024E-03;
  COFD[23124] = -2.05920255E+01;
  COFD[23125] = 3.87488983E+00;
  COFD[23126] = -2.02017141E-01;
  COFD[23127] = 5.35367024E-03;
  COFD[23128] = -2.05920255E+01;
  COFD[23129] = 3.87488983E+00;
  COFD[23130] = -2.02017141E-01;
  COFD[23131] = 5.35367024E-03;
  COFD[23132] = -2.05746135E+01;
  COFD[23133] = 3.87685237E+00;
  COFD[23134] = -2.02572236E-01;
  COFD[23135] = 5.38978456E-03;
  COFD[23136] = -2.05746135E+01;
  COFD[23137] = 3.87685237E+00;
  COFD[23138] = -2.02572236E-01;
  COFD[23139] = 5.38978456E-03;
  COFD[23140] = -1.91456103E+01;
  COFD[23141] = 3.15403394E+00;
  COFD[23142] = -9.49161276E-02;
  COFD[23143] = 1.99055118E-04;
  COFD[23144] = -1.91456103E+01;
  COFD[23145] = 3.15403394E+00;
  COFD[23146] = -9.49161276E-02;
  COFD[23147] = 1.99055118E-04;
  COFD[23148] = -1.91456103E+01;
  COFD[23149] = 3.15403394E+00;
  COFD[23150] = -9.49161276E-02;
  COFD[23151] = 1.99055118E-04;
  COFD[23152] = -1.91456103E+01;
  COFD[23153] = 3.15403394E+00;
  COFD[23154] = -9.49161276E-02;
  COFD[23155] = 1.99055118E-04;
  COFD[23156] = -1.91456103E+01;
  COFD[23157] = 3.15403394E+00;
  COFD[23158] = -9.49161276E-02;
  COFD[23159] = 1.99055118E-04;
  COFD[23160] = -1.91456103E+01;
  COFD[23161] = 3.15403394E+00;
  COFD[23162] = -9.49161276E-02;
  COFD[23163] = 1.99055118E-04;
  COFD[23164] = -1.91456103E+01;
  COFD[23165] = 3.15403394E+00;
  COFD[23166] = -9.49161276E-02;
  COFD[23167] = 1.99055118E-04;
  COFD[23168] = -1.91456103E+01;
  COFD[23169] = 3.15403394E+00;
  COFD[23170] = -9.49161276E-02;
  COFD[23171] = 1.99055118E-04;
  COFD[23172] = -1.91456103E+01;
  COFD[23173] = 3.15403394E+00;
  COFD[23174] = -9.49161276E-02;
  COFD[23175] = 1.99055118E-04;
  COFD[23176] = -1.91456103E+01;
  COFD[23177] = 3.15403394E+00;
  COFD[23178] = -9.49161276E-02;
  COFD[23179] = 1.99055118E-04;
  COFD[23180] = -1.91456103E+01;
  COFD[23181] = 3.15403394E+00;
  COFD[23182] = -9.49161276E-02;
  COFD[23183] = 1.99055118E-04;
  COFD[23184] = -1.91456103E+01;
  COFD[23185] = 3.15403394E+00;
  COFD[23186] = -9.49161276E-02;
  COFD[23187] = 1.99055118E-04;
  COFD[23188] = -1.87460549E+01;
  COFD[23189] = 2.87978833E+00;
  COFD[23190] = -5.44866013E-02;
  COFD[23191] = -1.73658318E-03;
  COFD[23192] = -1.87460549E+01;
  COFD[23193] = 2.87978833E+00;
  COFD[23194] = -5.44866013E-02;
  COFD[23195] = -1.73658318E-03;
  COFD[23196] = -1.87460549E+01;
  COFD[23197] = 2.87978833E+00;
  COFD[23198] = -5.44866013E-02;
  COFD[23199] = -1.73658318E-03;
  COFD[23200] = -1.87460549E+01;
  COFD[23201] = 2.87978833E+00;
  COFD[23202] = -5.44866013E-02;
  COFD[23203] = -1.73658318E-03;
  COFD[23204] = -1.99684327E+01;
  COFD[23205] = 3.54868094E+00;
  COFD[23206] = -1.52503015E-01;
  COFD[23207] = 2.93310249E-03;
  COFD[23208] = -1.99684327E+01;
  COFD[23209] = 3.54868094E+00;
  COFD[23210] = -1.52503015E-01;
  COFD[23211] = 2.93310249E-03;
  COFD[23212] = -1.89007696E+01;
  COFD[23213] = 3.01491854E+00;
  COFD[23214] = -7.45185018E-02;
  COFD[23215] = -7.71760336E-04;
  COFD[23216] = -1.89007696E+01;
  COFD[23217] = 3.01491854E+00;
  COFD[23218] = -7.45185018E-02;
  COFD[23219] = -7.71760336E-04;
  COFD[23220] = -1.89007696E+01;
  COFD[23221] = 3.01491854E+00;
  COFD[23222] = -7.45185018E-02;
  COFD[23223] = -7.71760336E-04;
  COFD[23224] = -1.89007696E+01;
  COFD[23225] = 3.01491854E+00;
  COFD[23226] = -7.45185018E-02;
  COFD[23227] = -7.71760336E-04;
  COFD[23228] = -2.17873416E+01;
  COFD[23229] = 5.37038209E+00;
  COFD[23230] = -4.70276061E-01;
  COFD[23231] = 1.99108515E-02;
  COFD[23232] = -2.07558370E+01;
  COFD[23233] = 5.61220925E+00;
  COFD[23234] = -4.91040098E-01;
  COFD[23235] = 2.03909682E-02;
  COFD[23236] = -1.72085780E+01;
  COFD[23237] = 4.26597898E+00;
  COFD[23238] = -3.40497726E-01;
  COFD[23239] = 1.48284962E-02;
  COFD[23240] = -2.06859442E+01;
  COFD[23241] = 5.15084743E+00;
  COFD[23242] = -4.46166870E-01;
  COFD[23243] = 1.90405241E-02;
  COFD[23244] = -2.19892992E+01;
  COFD[23245] = 5.41528536E+00;
  COFD[23246] = -4.73395924E-01;
  COFD[23247] = 1.99371023E-02;
  COFD[23248] = -2.07130812E+01;
  COFD[23249] = 5.15084743E+00;
  COFD[23250] = -4.46166870E-01;
  COFD[23251] = 1.90405241E-02;
  COFD[23252] = -1.72072974E+01;
  COFD[23253] = 2.92077981E+00;
  COFD[23254] = -6.20181094E-02;
  COFD[23255] = -1.31459730E-03;
  COFD[23256] = -2.18067293E+01;
  COFD[23257] = 5.37381914E+00;
  COFD[23258] = -4.70526306E-01;
  COFD[23259] = 1.99137622E-02;
  COFD[23260] = -1.92245436E+01;
  COFD[23261] = 3.64878687E+00;
  COFD[23262] = -1.67486742E-01;
  COFD[23263] = 3.65938254E-03;
  COFD[23264] = -2.26542292E+01;
  COFD[23265] = 5.30716061E+00;
  COFD[23266] = -4.27308091E-01;
  COFD[23267] = 1.66655289E-02;
  COFD[23268] = -2.24310667E+01;
  COFD[23269] = 5.61234798E+00;
  COFD[23270] = -4.91297356E-01;
  COFD[23271] = 2.04115425E-02;
  COFD[23272] = -2.24475415E+01;
  COFD[23273] = 5.61233595E+00;
  COFD[23274] = -4.91420667E-01;
  COFD[23275] = 2.04217927E-02;
  COFD[23276] = -2.19786716E+01;
  COFD[23277] = 5.41031792E+00;
  COFD[23278] = -4.73134636E-01;
  COFD[23279] = 1.99412666E-02;
  COFD[23280] = -2.19906530E+01;
  COFD[23281] = 5.41031792E+00;
  COFD[23282] = -4.73134636E-01;
  COFD[23283] = 1.99412666E-02;
  COFD[23284] = -1.92384813E+01;
  COFD[23285] = 3.64878687E+00;
  COFD[23286] = -1.67486742E-01;
  COFD[23287] = 3.65938254E-03;
  COFD[23288] = -2.00260065E+01;
  COFD[23289] = 4.04058640E+00;
  COFD[23290] = -2.29270334E-01;
  COFD[23291] = 6.76606770E-03;
  COFD[23292] = -2.26084502E+01;
  COFD[23293] = 5.30201231E+00;
  COFD[23294] = -4.26456960E-01;
  COFD[23295] = 1.66213106E-02;
  COFD[23296] = -2.24952591E+01;
  COFD[23297] = 5.35215936E+00;
  COFD[23298] = -4.34996256E-01;
  COFD[23299] = 1.70721706E-02;
  COFD[23300] = -2.25945370E+01;
  COFD[23301] = 5.30201231E+00;
  COFD[23302] = -4.26456960E-01;
  COFD[23303] = 1.66213106E-02;
  COFD[23304] = -2.22879818E+01;
  COFD[23305] = 5.21396996E+00;
  COFD[23306] = -4.11281412E-01;
  COFD[23307] = 1.58150334E-02;
  COFD[23308] = -2.23037777E+01;
  COFD[23309] = 5.21396996E+00;
  COFD[23310] = -4.11281412E-01;
  COFD[23311] = 1.58150334E-02;
  COFD[23312] = -2.02458098E+01;
  COFD[23313] = 4.04040564E+00;
  COFD[23314] = -2.27103382E-01;
  COFD[23315] = 6.58016011E-03;
  COFD[23316] = -2.25975141E+01;
  COFD[23317] = 5.60684388E+00;
  COFD[23318] = -4.89089198E-01;
  COFD[23319] = 2.02565724E-02;
  COFD[23320] = -2.02547568E+01;
  COFD[23321] = 4.04040564E+00;
  COFD[23322] = -2.27103382E-01;
  COFD[23323] = 6.58016011E-03;
  COFD[23324] = -2.02547568E+01;
  COFD[23325] = 4.04040564E+00;
  COFD[23326] = -2.27103382E-01;
  COFD[23327] = 6.58016011E-03;
  COFD[23328] = -2.02634463E+01;
  COFD[23329] = 4.04040564E+00;
  COFD[23330] = -2.27103382E-01;
  COFD[23331] = 6.58016011E-03;
  COFD[23332] = -2.18339999E+01;
  COFD[23333] = 4.81663452E+00;
  COFD[23334] = -3.47310112E-01;
  COFD[23335] = 1.25507777E-02;
  COFD[23336] = -2.20612721E+01;
  COFD[23337] = 4.93948492E+00;
  COFD[23338] = -3.66694137E-01;
  COFD[23339] = 1.35271560E-02;
  COFD[23340] = -2.16378415E+01;
  COFD[23341] = 4.61311728E+00;
  COFD[23342] = -3.14979067E-01;
  COFD[23343] = 1.09172113E-02;
  COFD[23344] = -2.22609630E+01;
  COFD[23345] = 4.97379817E+00;
  COFD[23346] = -3.72099307E-01;
  COFD[23347] = 1.37992814E-02;
  COFD[23348] = -2.16535499E+01;
  COFD[23349] = 4.62479073E+00;
  COFD[23350] = -3.16843576E-01;
  COFD[23351] = 1.10117295E-02;
  COFD[23352] = -2.16599161E+01;
  COFD[23353] = 4.62479073E+00;
  COFD[23354] = -3.16843576E-01;
  COFD[23355] = 1.10117295E-02;
  COFD[23356] = -2.18056042E+01;
  COFD[23357] = 4.64312709E+00;
  COFD[23358] = -3.19764076E-01;
  COFD[23359] = 1.11595790E-02;
  COFD[23360] = -2.05316670E+01;
  COFD[23361] = 4.04453292E+00;
  COFD[23362] = -2.27725339E-01;
  COFD[23363] = 6.61050628E-03;
  COFD[23364] = -2.00647907E+01;
  COFD[23365] = 3.86026424E+00;
  COFD[23366] = -2.02407333E-01;
  COFD[23367] = 5.46907954E-03;
  COFD[23368] = -2.07088264E+01;
  COFD[23369] = 4.13288186E+00;
  COFD[23370] = -2.41054643E-01;
  COFD[23371] = 7.26113993E-03;
  COFD[23372] = -2.13196973E+01;
  COFD[23373] = 4.34433003E+00;
  COFD[23374] = -2.73207428E-01;
  COFD[23375] = 8.83823384E-03;
  COFD[23376] = -2.14443150E+01;
  COFD[23377] = 4.40560301E+00;
  COFD[23378] = -2.83033303E-01;
  COFD[23379] = 9.33807331E-03;
  COFD[23380] = -1.98908327E+01;
  COFD[23381] = 3.81317728E+00;
  COFD[23382] = -1.92528490E-01;
  COFD[23383] = 4.88612928E-03;
  COFD[23384] = -1.96275498E+01;
  COFD[23385] = 3.74985445E+00;
  COFD[23386] = -1.82818055E-01;
  COFD[23387] = 4.40846246E-03;
  COFD[23388] = -1.96353326E+01;
  COFD[23389] = 3.74985445E+00;
  COFD[23390] = -1.82818055E-01;
  COFD[23391] = 4.40846246E-03;
  COFD[23392] = -2.02529779E+01;
  COFD[23393] = 3.98291296E+00;
  COFD[23394] = -2.18459468E-01;
  COFD[23395] = 6.15957476E-03;
  COFD[23396] = -2.02219152E+01;
  COFD[23397] = 3.91540504E+00;
  COFD[23398] = -2.10676561E-01;
  COFD[23399] = 5.87107784E-03;
  COFD[23400] = -2.09376776E+01;
  COFD[23401] = 4.24310133E+00;
  COFD[23402] = -2.57732017E-01;
  COFD[23403] = 8.07685243E-03;
  COFD[23404] = -1.98854459E+01;
  COFD[23405] = 3.66237031E+00;
  COFD[23406] = -1.69533805E-01;
  COFD[23407] = 3.75902257E-03;
  COFD[23408] = -2.00413049E+01;
  COFD[23409] = 3.66237031E+00;
  COFD[23410] = -1.69533805E-01;
  COFD[23411] = 3.75902257E-03;
  COFD[23412] = -1.99557130E+01;
  COFD[23413] = 3.66237031E+00;
  COFD[23414] = -1.69533805E-01;
  COFD[23415] = 3.75902257E-03;
  COFD[23416] = -1.99557130E+01;
  COFD[23417] = 3.66237031E+00;
  COFD[23418] = -1.69533805E-01;
  COFD[23419] = 3.75902257E-03;
  COFD[23420] = -2.19508560E+01;
  COFD[23421] = 4.87914567E+00;
  COFD[23422] = -3.57172857E-01;
  COFD[23423] = 1.30475227E-02;
  COFD[23424] = -2.18242110E+01;
  COFD[23425] = 4.81663452E+00;
  COFD[23426] = -3.47310112E-01;
  COFD[23427] = 1.25507777E-02;
  COFD[23428] = -2.29275994E+01;
  COFD[23429] = 5.48746342E+00;
  COFD[23430] = -4.59361316E-01;
  COFD[23431] = 1.83995990E-02;
  COFD[23432] = -2.23998269E+01;
  COFD[23433] = 5.61234798E+00;
  COFD[23434] = -4.91297356E-01;
  COFD[23435] = 2.04115425E-02;
  COFD[23436] = -2.00556963E+01;
  COFD[23437] = 3.66436790E+00;
  COFD[23438] = -1.71934261E-01;
  COFD[23439] = 3.95119075E-03;
  COFD[23440] = -1.98658124E+01;
  COFD[23441] = 3.69537879E+00;
  COFD[23442] = -1.77145108E-01;
  COFD[23443] = 4.22399720E-03;
  COFD[23444] = -1.98612587E+01;
  COFD[23445] = 3.69537879E+00;
  COFD[23446] = -1.77145108E-01;
  COFD[23447] = 4.22399720E-03;
  COFD[23448] = -1.99821344E+01;
  COFD[23449] = 3.72431023E+00;
  COFD[23450] = -1.81904593E-01;
  COFD[23451] = 4.46988587E-03;
  COFD[23452] = -2.00589344E+01;
  COFD[23453] = 3.70669288E+00;
  COFD[23454] = -1.76242142E-01;
  COFD[23455] = 4.08636872E-03;
  COFD[23456] = -2.00006729E+01;
  COFD[23457] = 3.66436790E+00;
  COFD[23458] = -1.71934261E-01;
  COFD[23459] = 3.95119075E-03;
  COFD[23460] = -1.99971115E+01;
  COFD[23461] = 3.66436790E+00;
  COFD[23462] = -1.71934261E-01;
  COFD[23463] = 3.95119075E-03;
  COFD[23464] = -2.05948978E+01;
  COFD[23465] = 3.87488983E+00;
  COFD[23466] = -2.02017141E-01;
  COFD[23467] = 5.35367024E-03;
  COFD[23468] = -2.05920255E+01;
  COFD[23469] = 3.87488983E+00;
  COFD[23470] = -2.02017141E-01;
  COFD[23471] = 5.35367024E-03;
  COFD[23472] = -2.05920255E+01;
  COFD[23473] = 3.87488983E+00;
  COFD[23474] = -2.02017141E-01;
  COFD[23475] = 5.35367024E-03;
  COFD[23476] = -2.05920255E+01;
  COFD[23477] = 3.87488983E+00;
  COFD[23478] = -2.02017141E-01;
  COFD[23479] = 5.35367024E-03;
  COFD[23480] = -2.05920255E+01;
  COFD[23481] = 3.87488983E+00;
  COFD[23482] = -2.02017141E-01;
  COFD[23483] = 5.35367024E-03;
  COFD[23484] = -2.05746135E+01;
  COFD[23485] = 3.87685237E+00;
  COFD[23486] = -2.02572236E-01;
  COFD[23487] = 5.38978456E-03;
  COFD[23488] = -2.05746135E+01;
  COFD[23489] = 3.87685237E+00;
  COFD[23490] = -2.02572236E-01;
  COFD[23491] = 5.38978456E-03;
  COFD[23492] = -1.91456103E+01;
  COFD[23493] = 3.15403394E+00;
  COFD[23494] = -9.49161276E-02;
  COFD[23495] = 1.99055118E-04;
  COFD[23496] = -1.91456103E+01;
  COFD[23497] = 3.15403394E+00;
  COFD[23498] = -9.49161276E-02;
  COFD[23499] = 1.99055118E-04;
  COFD[23500] = -1.91456103E+01;
  COFD[23501] = 3.15403394E+00;
  COFD[23502] = -9.49161276E-02;
  COFD[23503] = 1.99055118E-04;
  COFD[23504] = -1.91456103E+01;
  COFD[23505] = 3.15403394E+00;
  COFD[23506] = -9.49161276E-02;
  COFD[23507] = 1.99055118E-04;
  COFD[23508] = -1.91456103E+01;
  COFD[23509] = 3.15403394E+00;
  COFD[23510] = -9.49161276E-02;
  COFD[23511] = 1.99055118E-04;
  COFD[23512] = -1.91456103E+01;
  COFD[23513] = 3.15403394E+00;
  COFD[23514] = -9.49161276E-02;
  COFD[23515] = 1.99055118E-04;
  COFD[23516] = -1.91456103E+01;
  COFD[23517] = 3.15403394E+00;
  COFD[23518] = -9.49161276E-02;
  COFD[23519] = 1.99055118E-04;
  COFD[23520] = -1.91456103E+01;
  COFD[23521] = 3.15403394E+00;
  COFD[23522] = -9.49161276E-02;
  COFD[23523] = 1.99055118E-04;
  COFD[23524] = -1.91456103E+01;
  COFD[23525] = 3.15403394E+00;
  COFD[23526] = -9.49161276E-02;
  COFD[23527] = 1.99055118E-04;
  COFD[23528] = -1.91456103E+01;
  COFD[23529] = 3.15403394E+00;
  COFD[23530] = -9.49161276E-02;
  COFD[23531] = 1.99055118E-04;
  COFD[23532] = -1.91456103E+01;
  COFD[23533] = 3.15403394E+00;
  COFD[23534] = -9.49161276E-02;
  COFD[23535] = 1.99055118E-04;
  COFD[23536] = -1.91456103E+01;
  COFD[23537] = 3.15403394E+00;
  COFD[23538] = -9.49161276E-02;
  COFD[23539] = 1.99055118E-04;
  COFD[23540] = -1.87460549E+01;
  COFD[23541] = 2.87978833E+00;
  COFD[23542] = -5.44866013E-02;
  COFD[23543] = -1.73658318E-03;
  COFD[23544] = -1.87460549E+01;
  COFD[23545] = 2.87978833E+00;
  COFD[23546] = -5.44866013E-02;
  COFD[23547] = -1.73658318E-03;
  COFD[23548] = -1.87460549E+01;
  COFD[23549] = 2.87978833E+00;
  COFD[23550] = -5.44866013E-02;
  COFD[23551] = -1.73658318E-03;
  COFD[23552] = -1.87460549E+01;
  COFD[23553] = 2.87978833E+00;
  COFD[23554] = -5.44866013E-02;
  COFD[23555] = -1.73658318E-03;
  COFD[23556] = -1.99684327E+01;
  COFD[23557] = 3.54868094E+00;
  COFD[23558] = -1.52503015E-01;
  COFD[23559] = 2.93310249E-03;
  COFD[23560] = -1.99684327E+01;
  COFD[23561] = 3.54868094E+00;
  COFD[23562] = -1.52503015E-01;
  COFD[23563] = 2.93310249E-03;
  COFD[23564] = -1.89007696E+01;
  COFD[23565] = 3.01491854E+00;
  COFD[23566] = -7.45185018E-02;
  COFD[23567] = -7.71760336E-04;
  COFD[23568] = -1.89007696E+01;
  COFD[23569] = 3.01491854E+00;
  COFD[23570] = -7.45185018E-02;
  COFD[23571] = -7.71760336E-04;
  COFD[23572] = -1.89007696E+01;
  COFD[23573] = 3.01491854E+00;
  COFD[23574] = -7.45185018E-02;
  COFD[23575] = -7.71760336E-04;
  COFD[23576] = -1.89007696E+01;
  COFD[23577] = 3.01491854E+00;
  COFD[23578] = -7.45185018E-02;
  COFD[23579] = -7.71760336E-04;
  COFD[23580] = -2.17873416E+01;
  COFD[23581] = 5.37038209E+00;
  COFD[23582] = -4.70276061E-01;
  COFD[23583] = 1.99108515E-02;
  COFD[23584] = -2.07558370E+01;
  COFD[23585] = 5.61220925E+00;
  COFD[23586] = -4.91040098E-01;
  COFD[23587] = 2.03909682E-02;
  COFD[23588] = -1.72085780E+01;
  COFD[23589] = 4.26597898E+00;
  COFD[23590] = -3.40497726E-01;
  COFD[23591] = 1.48284962E-02;
  COFD[23592] = -2.06859442E+01;
  COFD[23593] = 5.15084743E+00;
  COFD[23594] = -4.46166870E-01;
  COFD[23595] = 1.90405241E-02;
  COFD[23596] = -2.19892992E+01;
  COFD[23597] = 5.41528536E+00;
  COFD[23598] = -4.73395924E-01;
  COFD[23599] = 1.99371023E-02;
  COFD[23600] = -2.07130812E+01;
  COFD[23601] = 5.15084743E+00;
  COFD[23602] = -4.46166870E-01;
  COFD[23603] = 1.90405241E-02;
  COFD[23604] = -1.72072974E+01;
  COFD[23605] = 2.92077981E+00;
  COFD[23606] = -6.20181094E-02;
  COFD[23607] = -1.31459730E-03;
  COFD[23608] = -2.18067293E+01;
  COFD[23609] = 5.37381914E+00;
  COFD[23610] = -4.70526306E-01;
  COFD[23611] = 1.99137622E-02;
  COFD[23612] = -1.92245436E+01;
  COFD[23613] = 3.64878687E+00;
  COFD[23614] = -1.67486742E-01;
  COFD[23615] = 3.65938254E-03;
  COFD[23616] = -2.26542292E+01;
  COFD[23617] = 5.30716061E+00;
  COFD[23618] = -4.27308091E-01;
  COFD[23619] = 1.66655289E-02;
  COFD[23620] = -2.24310667E+01;
  COFD[23621] = 5.61234798E+00;
  COFD[23622] = -4.91297356E-01;
  COFD[23623] = 2.04115425E-02;
  COFD[23624] = -2.24475415E+01;
  COFD[23625] = 5.61233595E+00;
  COFD[23626] = -4.91420667E-01;
  COFD[23627] = 2.04217927E-02;
  COFD[23628] = -2.19786716E+01;
  COFD[23629] = 5.41031792E+00;
  COFD[23630] = -4.73134636E-01;
  COFD[23631] = 1.99412666E-02;
  COFD[23632] = -2.19906530E+01;
  COFD[23633] = 5.41031792E+00;
  COFD[23634] = -4.73134636E-01;
  COFD[23635] = 1.99412666E-02;
  COFD[23636] = -1.92384813E+01;
  COFD[23637] = 3.64878687E+00;
  COFD[23638] = -1.67486742E-01;
  COFD[23639] = 3.65938254E-03;
  COFD[23640] = -2.00260065E+01;
  COFD[23641] = 4.04058640E+00;
  COFD[23642] = -2.29270334E-01;
  COFD[23643] = 6.76606770E-03;
  COFD[23644] = -2.26084502E+01;
  COFD[23645] = 5.30201231E+00;
  COFD[23646] = -4.26456960E-01;
  COFD[23647] = 1.66213106E-02;
  COFD[23648] = -2.24952591E+01;
  COFD[23649] = 5.35215936E+00;
  COFD[23650] = -4.34996256E-01;
  COFD[23651] = 1.70721706E-02;
  COFD[23652] = -2.25945370E+01;
  COFD[23653] = 5.30201231E+00;
  COFD[23654] = -4.26456960E-01;
  COFD[23655] = 1.66213106E-02;
  COFD[23656] = -2.22879818E+01;
  COFD[23657] = 5.21396996E+00;
  COFD[23658] = -4.11281412E-01;
  COFD[23659] = 1.58150334E-02;
  COFD[23660] = -2.23037777E+01;
  COFD[23661] = 5.21396996E+00;
  COFD[23662] = -4.11281412E-01;
  COFD[23663] = 1.58150334E-02;
  COFD[23664] = -2.02458098E+01;
  COFD[23665] = 4.04040564E+00;
  COFD[23666] = -2.27103382E-01;
  COFD[23667] = 6.58016011E-03;
  COFD[23668] = -2.25975141E+01;
  COFD[23669] = 5.60684388E+00;
  COFD[23670] = -4.89089198E-01;
  COFD[23671] = 2.02565724E-02;
  COFD[23672] = -2.02547568E+01;
  COFD[23673] = 4.04040564E+00;
  COFD[23674] = -2.27103382E-01;
  COFD[23675] = 6.58016011E-03;
  COFD[23676] = -2.02547568E+01;
  COFD[23677] = 4.04040564E+00;
  COFD[23678] = -2.27103382E-01;
  COFD[23679] = 6.58016011E-03;
  COFD[23680] = -2.02634463E+01;
  COFD[23681] = 4.04040564E+00;
  COFD[23682] = -2.27103382E-01;
  COFD[23683] = 6.58016011E-03;
  COFD[23684] = -2.18339999E+01;
  COFD[23685] = 4.81663452E+00;
  COFD[23686] = -3.47310112E-01;
  COFD[23687] = 1.25507777E-02;
  COFD[23688] = -2.20612721E+01;
  COFD[23689] = 4.93948492E+00;
  COFD[23690] = -3.66694137E-01;
  COFD[23691] = 1.35271560E-02;
  COFD[23692] = -2.16378415E+01;
  COFD[23693] = 4.61311728E+00;
  COFD[23694] = -3.14979067E-01;
  COFD[23695] = 1.09172113E-02;
  COFD[23696] = -2.22609630E+01;
  COFD[23697] = 4.97379817E+00;
  COFD[23698] = -3.72099307E-01;
  COFD[23699] = 1.37992814E-02;
  COFD[23700] = -2.16535499E+01;
  COFD[23701] = 4.62479073E+00;
  COFD[23702] = -3.16843576E-01;
  COFD[23703] = 1.10117295E-02;
  COFD[23704] = -2.16599161E+01;
  COFD[23705] = 4.62479073E+00;
  COFD[23706] = -3.16843576E-01;
  COFD[23707] = 1.10117295E-02;
  COFD[23708] = -2.18056042E+01;
  COFD[23709] = 4.64312709E+00;
  COFD[23710] = -3.19764076E-01;
  COFD[23711] = 1.11595790E-02;
  COFD[23712] = -2.05316670E+01;
  COFD[23713] = 4.04453292E+00;
  COFD[23714] = -2.27725339E-01;
  COFD[23715] = 6.61050628E-03;
  COFD[23716] = -2.00647907E+01;
  COFD[23717] = 3.86026424E+00;
  COFD[23718] = -2.02407333E-01;
  COFD[23719] = 5.46907954E-03;
  COFD[23720] = -2.07088264E+01;
  COFD[23721] = 4.13288186E+00;
  COFD[23722] = -2.41054643E-01;
  COFD[23723] = 7.26113993E-03;
  COFD[23724] = -2.13196973E+01;
  COFD[23725] = 4.34433003E+00;
  COFD[23726] = -2.73207428E-01;
  COFD[23727] = 8.83823384E-03;
  COFD[23728] = -2.14443150E+01;
  COFD[23729] = 4.40560301E+00;
  COFD[23730] = -2.83033303E-01;
  COFD[23731] = 9.33807331E-03;
  COFD[23732] = -1.98908327E+01;
  COFD[23733] = 3.81317728E+00;
  COFD[23734] = -1.92528490E-01;
  COFD[23735] = 4.88612928E-03;
  COFD[23736] = -1.96275498E+01;
  COFD[23737] = 3.74985445E+00;
  COFD[23738] = -1.82818055E-01;
  COFD[23739] = 4.40846246E-03;
  COFD[23740] = -1.96353326E+01;
  COFD[23741] = 3.74985445E+00;
  COFD[23742] = -1.82818055E-01;
  COFD[23743] = 4.40846246E-03;
  COFD[23744] = -2.02529779E+01;
  COFD[23745] = 3.98291296E+00;
  COFD[23746] = -2.18459468E-01;
  COFD[23747] = 6.15957476E-03;
  COFD[23748] = -2.02219152E+01;
  COFD[23749] = 3.91540504E+00;
  COFD[23750] = -2.10676561E-01;
  COFD[23751] = 5.87107784E-03;
  COFD[23752] = -2.09376776E+01;
  COFD[23753] = 4.24310133E+00;
  COFD[23754] = -2.57732017E-01;
  COFD[23755] = 8.07685243E-03;
  COFD[23756] = -1.98854459E+01;
  COFD[23757] = 3.66237031E+00;
  COFD[23758] = -1.69533805E-01;
  COFD[23759] = 3.75902257E-03;
  COFD[23760] = -2.00413049E+01;
  COFD[23761] = 3.66237031E+00;
  COFD[23762] = -1.69533805E-01;
  COFD[23763] = 3.75902257E-03;
  COFD[23764] = -1.99557130E+01;
  COFD[23765] = 3.66237031E+00;
  COFD[23766] = -1.69533805E-01;
  COFD[23767] = 3.75902257E-03;
  COFD[23768] = -1.99557130E+01;
  COFD[23769] = 3.66237031E+00;
  COFD[23770] = -1.69533805E-01;
  COFD[23771] = 3.75902257E-03;
  COFD[23772] = -2.19508560E+01;
  COFD[23773] = 4.87914567E+00;
  COFD[23774] = -3.57172857E-01;
  COFD[23775] = 1.30475227E-02;
  COFD[23776] = -2.18242110E+01;
  COFD[23777] = 4.81663452E+00;
  COFD[23778] = -3.47310112E-01;
  COFD[23779] = 1.25507777E-02;
  COFD[23780] = -2.29275994E+01;
  COFD[23781] = 5.48746342E+00;
  COFD[23782] = -4.59361316E-01;
  COFD[23783] = 1.83995990E-02;
  COFD[23784] = -2.23998269E+01;
  COFD[23785] = 5.61234798E+00;
  COFD[23786] = -4.91297356E-01;
  COFD[23787] = 2.04115425E-02;
  COFD[23788] = -2.00556963E+01;
  COFD[23789] = 3.66436790E+00;
  COFD[23790] = -1.71934261E-01;
  COFD[23791] = 3.95119075E-03;
  COFD[23792] = -1.98658124E+01;
  COFD[23793] = 3.69537879E+00;
  COFD[23794] = -1.77145108E-01;
  COFD[23795] = 4.22399720E-03;
  COFD[23796] = -1.98612587E+01;
  COFD[23797] = 3.69537879E+00;
  COFD[23798] = -1.77145108E-01;
  COFD[23799] = 4.22399720E-03;
  COFD[23800] = -1.99821344E+01;
  COFD[23801] = 3.72431023E+00;
  COFD[23802] = -1.81904593E-01;
  COFD[23803] = 4.46988587E-03;
  COFD[23804] = -2.00589344E+01;
  COFD[23805] = 3.70669288E+00;
  COFD[23806] = -1.76242142E-01;
  COFD[23807] = 4.08636872E-03;
  COFD[23808] = -2.00006729E+01;
  COFD[23809] = 3.66436790E+00;
  COFD[23810] = -1.71934261E-01;
  COFD[23811] = 3.95119075E-03;
  COFD[23812] = -1.99971115E+01;
  COFD[23813] = 3.66436790E+00;
  COFD[23814] = -1.71934261E-01;
  COFD[23815] = 3.95119075E-03;
  COFD[23816] = -2.05948978E+01;
  COFD[23817] = 3.87488983E+00;
  COFD[23818] = -2.02017141E-01;
  COFD[23819] = 5.35367024E-03;
  COFD[23820] = -2.05920255E+01;
  COFD[23821] = 3.87488983E+00;
  COFD[23822] = -2.02017141E-01;
  COFD[23823] = 5.35367024E-03;
  COFD[23824] = -2.05920255E+01;
  COFD[23825] = 3.87488983E+00;
  COFD[23826] = -2.02017141E-01;
  COFD[23827] = 5.35367024E-03;
  COFD[23828] = -2.05920255E+01;
  COFD[23829] = 3.87488983E+00;
  COFD[23830] = -2.02017141E-01;
  COFD[23831] = 5.35367024E-03;
  COFD[23832] = -2.05920255E+01;
  COFD[23833] = 3.87488983E+00;
  COFD[23834] = -2.02017141E-01;
  COFD[23835] = 5.35367024E-03;
  COFD[23836] = -2.05746135E+01;
  COFD[23837] = 3.87685237E+00;
  COFD[23838] = -2.02572236E-01;
  COFD[23839] = 5.38978456E-03;
  COFD[23840] = -2.05746135E+01;
  COFD[23841] = 3.87685237E+00;
  COFD[23842] = -2.02572236E-01;
  COFD[23843] = 5.38978456E-03;
  COFD[23844] = -1.91456103E+01;
  COFD[23845] = 3.15403394E+00;
  COFD[23846] = -9.49161276E-02;
  COFD[23847] = 1.99055118E-04;
  COFD[23848] = -1.91456103E+01;
  COFD[23849] = 3.15403394E+00;
  COFD[23850] = -9.49161276E-02;
  COFD[23851] = 1.99055118E-04;
  COFD[23852] = -1.91456103E+01;
  COFD[23853] = 3.15403394E+00;
  COFD[23854] = -9.49161276E-02;
  COFD[23855] = 1.99055118E-04;
  COFD[23856] = -1.91456103E+01;
  COFD[23857] = 3.15403394E+00;
  COFD[23858] = -9.49161276E-02;
  COFD[23859] = 1.99055118E-04;
  COFD[23860] = -1.91456103E+01;
  COFD[23861] = 3.15403394E+00;
  COFD[23862] = -9.49161276E-02;
  COFD[23863] = 1.99055118E-04;
  COFD[23864] = -1.91456103E+01;
  COFD[23865] = 3.15403394E+00;
  COFD[23866] = -9.49161276E-02;
  COFD[23867] = 1.99055118E-04;
  COFD[23868] = -1.91456103E+01;
  COFD[23869] = 3.15403394E+00;
  COFD[23870] = -9.49161276E-02;
  COFD[23871] = 1.99055118E-04;
  COFD[23872] = -1.91456103E+01;
  COFD[23873] = 3.15403394E+00;
  COFD[23874] = -9.49161276E-02;
  COFD[23875] = 1.99055118E-04;
  COFD[23876] = -1.91456103E+01;
  COFD[23877] = 3.15403394E+00;
  COFD[23878] = -9.49161276E-02;
  COFD[23879] = 1.99055118E-04;
  COFD[23880] = -1.91456103E+01;
  COFD[23881] = 3.15403394E+00;
  COFD[23882] = -9.49161276E-02;
  COFD[23883] = 1.99055118E-04;
  COFD[23884] = -1.91456103E+01;
  COFD[23885] = 3.15403394E+00;
  COFD[23886] = -9.49161276E-02;
  COFD[23887] = 1.99055118E-04;
  COFD[23888] = -1.91456103E+01;
  COFD[23889] = 3.15403394E+00;
  COFD[23890] = -9.49161276E-02;
  COFD[23891] = 1.99055118E-04;
  COFD[23892] = -1.87460549E+01;
  COFD[23893] = 2.87978833E+00;
  COFD[23894] = -5.44866013E-02;
  COFD[23895] = -1.73658318E-03;
  COFD[23896] = -1.87460549E+01;
  COFD[23897] = 2.87978833E+00;
  COFD[23898] = -5.44866013E-02;
  COFD[23899] = -1.73658318E-03;
  COFD[23900] = -1.87460549E+01;
  COFD[23901] = 2.87978833E+00;
  COFD[23902] = -5.44866013E-02;
  COFD[23903] = -1.73658318E-03;
  COFD[23904] = -1.87460549E+01;
  COFD[23905] = 2.87978833E+00;
  COFD[23906] = -5.44866013E-02;
  COFD[23907] = -1.73658318E-03;
  COFD[23908] = -1.99684327E+01;
  COFD[23909] = 3.54868094E+00;
  COFD[23910] = -1.52503015E-01;
  COFD[23911] = 2.93310249E-03;
  COFD[23912] = -1.99684327E+01;
  COFD[23913] = 3.54868094E+00;
  COFD[23914] = -1.52503015E-01;
  COFD[23915] = 2.93310249E-03;
  COFD[23916] = -1.89007696E+01;
  COFD[23917] = 3.01491854E+00;
  COFD[23918] = -7.45185018E-02;
  COFD[23919] = -7.71760336E-04;
  COFD[23920] = -1.89007696E+01;
  COFD[23921] = 3.01491854E+00;
  COFD[23922] = -7.45185018E-02;
  COFD[23923] = -7.71760336E-04;
  COFD[23924] = -1.89007696E+01;
  COFD[23925] = 3.01491854E+00;
  COFD[23926] = -7.45185018E-02;
  COFD[23927] = -7.71760336E-04;
  COFD[23928] = -1.89007696E+01;
  COFD[23929] = 3.01491854E+00;
  COFD[23930] = -7.45185018E-02;
  COFD[23931] = -7.71760336E-04;
  COFD[23932] = -2.17873416E+01;
  COFD[23933] = 5.37038209E+00;
  COFD[23934] = -4.70276061E-01;
  COFD[23935] = 1.99108515E-02;
  COFD[23936] = -2.07558370E+01;
  COFD[23937] = 5.61220925E+00;
  COFD[23938] = -4.91040098E-01;
  COFD[23939] = 2.03909682E-02;
  COFD[23940] = -1.72085780E+01;
  COFD[23941] = 4.26597898E+00;
  COFD[23942] = -3.40497726E-01;
  COFD[23943] = 1.48284962E-02;
  COFD[23944] = -2.06859442E+01;
  COFD[23945] = 5.15084743E+00;
  COFD[23946] = -4.46166870E-01;
  COFD[23947] = 1.90405241E-02;
  COFD[23948] = -2.19892992E+01;
  COFD[23949] = 5.41528536E+00;
  COFD[23950] = -4.73395924E-01;
  COFD[23951] = 1.99371023E-02;
  COFD[23952] = -2.07130812E+01;
  COFD[23953] = 5.15084743E+00;
  COFD[23954] = -4.46166870E-01;
  COFD[23955] = 1.90405241E-02;
  COFD[23956] = -1.72072974E+01;
  COFD[23957] = 2.92077981E+00;
  COFD[23958] = -6.20181094E-02;
  COFD[23959] = -1.31459730E-03;
  COFD[23960] = -2.18067293E+01;
  COFD[23961] = 5.37381914E+00;
  COFD[23962] = -4.70526306E-01;
  COFD[23963] = 1.99137622E-02;
  COFD[23964] = -1.92245436E+01;
  COFD[23965] = 3.64878687E+00;
  COFD[23966] = -1.67486742E-01;
  COFD[23967] = 3.65938254E-03;
  COFD[23968] = -2.26542292E+01;
  COFD[23969] = 5.30716061E+00;
  COFD[23970] = -4.27308091E-01;
  COFD[23971] = 1.66655289E-02;
  COFD[23972] = -2.24310667E+01;
  COFD[23973] = 5.61234798E+00;
  COFD[23974] = -4.91297356E-01;
  COFD[23975] = 2.04115425E-02;
  COFD[23976] = -2.24475415E+01;
  COFD[23977] = 5.61233595E+00;
  COFD[23978] = -4.91420667E-01;
  COFD[23979] = 2.04217927E-02;
  COFD[23980] = -2.19786716E+01;
  COFD[23981] = 5.41031792E+00;
  COFD[23982] = -4.73134636E-01;
  COFD[23983] = 1.99412666E-02;
  COFD[23984] = -2.19906530E+01;
  COFD[23985] = 5.41031792E+00;
  COFD[23986] = -4.73134636E-01;
  COFD[23987] = 1.99412666E-02;
  COFD[23988] = -1.92384813E+01;
  COFD[23989] = 3.64878687E+00;
  COFD[23990] = -1.67486742E-01;
  COFD[23991] = 3.65938254E-03;
  COFD[23992] = -2.00260065E+01;
  COFD[23993] = 4.04058640E+00;
  COFD[23994] = -2.29270334E-01;
  COFD[23995] = 6.76606770E-03;
  COFD[23996] = -2.26084502E+01;
  COFD[23997] = 5.30201231E+00;
  COFD[23998] = -4.26456960E-01;
  COFD[23999] = 1.66213106E-02;
  COFD[24000] = -2.24952591E+01;
  COFD[24001] = 5.35215936E+00;
  COFD[24002] = -4.34996256E-01;
  COFD[24003] = 1.70721706E-02;
  COFD[24004] = -2.25945370E+01;
  COFD[24005] = 5.30201231E+00;
  COFD[24006] = -4.26456960E-01;
  COFD[24007] = 1.66213106E-02;
  COFD[24008] = -2.22879818E+01;
  COFD[24009] = 5.21396996E+00;
  COFD[24010] = -4.11281412E-01;
  COFD[24011] = 1.58150334E-02;
  COFD[24012] = -2.23037777E+01;
  COFD[24013] = 5.21396996E+00;
  COFD[24014] = -4.11281412E-01;
  COFD[24015] = 1.58150334E-02;
  COFD[24016] = -2.02458098E+01;
  COFD[24017] = 4.04040564E+00;
  COFD[24018] = -2.27103382E-01;
  COFD[24019] = 6.58016011E-03;
  COFD[24020] = -2.25975141E+01;
  COFD[24021] = 5.60684388E+00;
  COFD[24022] = -4.89089198E-01;
  COFD[24023] = 2.02565724E-02;
  COFD[24024] = -2.02547568E+01;
  COFD[24025] = 4.04040564E+00;
  COFD[24026] = -2.27103382E-01;
  COFD[24027] = 6.58016011E-03;
  COFD[24028] = -2.02547568E+01;
  COFD[24029] = 4.04040564E+00;
  COFD[24030] = -2.27103382E-01;
  COFD[24031] = 6.58016011E-03;
  COFD[24032] = -2.02634463E+01;
  COFD[24033] = 4.04040564E+00;
  COFD[24034] = -2.27103382E-01;
  COFD[24035] = 6.58016011E-03;
  COFD[24036] = -2.18339999E+01;
  COFD[24037] = 4.81663452E+00;
  COFD[24038] = -3.47310112E-01;
  COFD[24039] = 1.25507777E-02;
  COFD[24040] = -2.20612721E+01;
  COFD[24041] = 4.93948492E+00;
  COFD[24042] = -3.66694137E-01;
  COFD[24043] = 1.35271560E-02;
  COFD[24044] = -2.16378415E+01;
  COFD[24045] = 4.61311728E+00;
  COFD[24046] = -3.14979067E-01;
  COFD[24047] = 1.09172113E-02;
  COFD[24048] = -2.22609630E+01;
  COFD[24049] = 4.97379817E+00;
  COFD[24050] = -3.72099307E-01;
  COFD[24051] = 1.37992814E-02;
  COFD[24052] = -2.16535499E+01;
  COFD[24053] = 4.62479073E+00;
  COFD[24054] = -3.16843576E-01;
  COFD[24055] = 1.10117295E-02;
  COFD[24056] = -2.16599161E+01;
  COFD[24057] = 4.62479073E+00;
  COFD[24058] = -3.16843576E-01;
  COFD[24059] = 1.10117295E-02;
  COFD[24060] = -2.18056042E+01;
  COFD[24061] = 4.64312709E+00;
  COFD[24062] = -3.19764076E-01;
  COFD[24063] = 1.11595790E-02;
  COFD[24064] = -2.05316670E+01;
  COFD[24065] = 4.04453292E+00;
  COFD[24066] = -2.27725339E-01;
  COFD[24067] = 6.61050628E-03;
  COFD[24068] = -2.00647907E+01;
  COFD[24069] = 3.86026424E+00;
  COFD[24070] = -2.02407333E-01;
  COFD[24071] = 5.46907954E-03;
  COFD[24072] = -2.07088264E+01;
  COFD[24073] = 4.13288186E+00;
  COFD[24074] = -2.41054643E-01;
  COFD[24075] = 7.26113993E-03;
  COFD[24076] = -2.13196973E+01;
  COFD[24077] = 4.34433003E+00;
  COFD[24078] = -2.73207428E-01;
  COFD[24079] = 8.83823384E-03;
  COFD[24080] = -2.14443150E+01;
  COFD[24081] = 4.40560301E+00;
  COFD[24082] = -2.83033303E-01;
  COFD[24083] = 9.33807331E-03;
  COFD[24084] = -1.98908327E+01;
  COFD[24085] = 3.81317728E+00;
  COFD[24086] = -1.92528490E-01;
  COFD[24087] = 4.88612928E-03;
  COFD[24088] = -1.96275498E+01;
  COFD[24089] = 3.74985445E+00;
  COFD[24090] = -1.82818055E-01;
  COFD[24091] = 4.40846246E-03;
  COFD[24092] = -1.96353326E+01;
  COFD[24093] = 3.74985445E+00;
  COFD[24094] = -1.82818055E-01;
  COFD[24095] = 4.40846246E-03;
  COFD[24096] = -2.02529779E+01;
  COFD[24097] = 3.98291296E+00;
  COFD[24098] = -2.18459468E-01;
  COFD[24099] = 6.15957476E-03;
  COFD[24100] = -2.02219152E+01;
  COFD[24101] = 3.91540504E+00;
  COFD[24102] = -2.10676561E-01;
  COFD[24103] = 5.87107784E-03;
  COFD[24104] = -2.09376776E+01;
  COFD[24105] = 4.24310133E+00;
  COFD[24106] = -2.57732017E-01;
  COFD[24107] = 8.07685243E-03;
  COFD[24108] = -1.98854459E+01;
  COFD[24109] = 3.66237031E+00;
  COFD[24110] = -1.69533805E-01;
  COFD[24111] = 3.75902257E-03;
  COFD[24112] = -2.00413049E+01;
  COFD[24113] = 3.66237031E+00;
  COFD[24114] = -1.69533805E-01;
  COFD[24115] = 3.75902257E-03;
  COFD[24116] = -1.99557130E+01;
  COFD[24117] = 3.66237031E+00;
  COFD[24118] = -1.69533805E-01;
  COFD[24119] = 3.75902257E-03;
  COFD[24120] = -1.99557130E+01;
  COFD[24121] = 3.66237031E+00;
  COFD[24122] = -1.69533805E-01;
  COFD[24123] = 3.75902257E-03;
  COFD[24124] = -2.19508560E+01;
  COFD[24125] = 4.87914567E+00;
  COFD[24126] = -3.57172857E-01;
  COFD[24127] = 1.30475227E-02;
  COFD[24128] = -2.18242110E+01;
  COFD[24129] = 4.81663452E+00;
  COFD[24130] = -3.47310112E-01;
  COFD[24131] = 1.25507777E-02;
  COFD[24132] = -2.29275994E+01;
  COFD[24133] = 5.48746342E+00;
  COFD[24134] = -4.59361316E-01;
  COFD[24135] = 1.83995990E-02;
  COFD[24136] = -2.23998269E+01;
  COFD[24137] = 5.61234798E+00;
  COFD[24138] = -4.91297356E-01;
  COFD[24139] = 2.04115425E-02;
  COFD[24140] = -2.00556963E+01;
  COFD[24141] = 3.66436790E+00;
  COFD[24142] = -1.71934261E-01;
  COFD[24143] = 3.95119075E-03;
  COFD[24144] = -1.98658124E+01;
  COFD[24145] = 3.69537879E+00;
  COFD[24146] = -1.77145108E-01;
  COFD[24147] = 4.22399720E-03;
  COFD[24148] = -1.98612587E+01;
  COFD[24149] = 3.69537879E+00;
  COFD[24150] = -1.77145108E-01;
  COFD[24151] = 4.22399720E-03;
  COFD[24152] = -1.99821344E+01;
  COFD[24153] = 3.72431023E+00;
  COFD[24154] = -1.81904593E-01;
  COFD[24155] = 4.46988587E-03;
  COFD[24156] = -2.00589344E+01;
  COFD[24157] = 3.70669288E+00;
  COFD[24158] = -1.76242142E-01;
  COFD[24159] = 4.08636872E-03;
  COFD[24160] = -2.00006729E+01;
  COFD[24161] = 3.66436790E+00;
  COFD[24162] = -1.71934261E-01;
  COFD[24163] = 3.95119075E-03;
  COFD[24164] = -1.99971115E+01;
  COFD[24165] = 3.66436790E+00;
  COFD[24166] = -1.71934261E-01;
  COFD[24167] = 3.95119075E-03;
  COFD[24168] = -2.05948978E+01;
  COFD[24169] = 3.87488983E+00;
  COFD[24170] = -2.02017141E-01;
  COFD[24171] = 5.35367024E-03;
  COFD[24172] = -2.05920255E+01;
  COFD[24173] = 3.87488983E+00;
  COFD[24174] = -2.02017141E-01;
  COFD[24175] = 5.35367024E-03;
  COFD[24176] = -2.05920255E+01;
  COFD[24177] = 3.87488983E+00;
  COFD[24178] = -2.02017141E-01;
  COFD[24179] = 5.35367024E-03;
  COFD[24180] = -2.05920255E+01;
  COFD[24181] = 3.87488983E+00;
  COFD[24182] = -2.02017141E-01;
  COFD[24183] = 5.35367024E-03;
  COFD[24184] = -2.05920255E+01;
  COFD[24185] = 3.87488983E+00;
  COFD[24186] = -2.02017141E-01;
  COFD[24187] = 5.35367024E-03;
  COFD[24188] = -2.05746135E+01;
  COFD[24189] = 3.87685237E+00;
  COFD[24190] = -2.02572236E-01;
  COFD[24191] = 5.38978456E-03;
  COFD[24192] = -2.05746135E+01;
  COFD[24193] = 3.87685237E+00;
  COFD[24194] = -2.02572236E-01;
  COFD[24195] = 5.38978456E-03;
  COFD[24196] = -1.91456103E+01;
  COFD[24197] = 3.15403394E+00;
  COFD[24198] = -9.49161276E-02;
  COFD[24199] = 1.99055118E-04;
  COFD[24200] = -1.91456103E+01;
  COFD[24201] = 3.15403394E+00;
  COFD[24202] = -9.49161276E-02;
  COFD[24203] = 1.99055118E-04;
  COFD[24204] = -1.91456103E+01;
  COFD[24205] = 3.15403394E+00;
  COFD[24206] = -9.49161276E-02;
  COFD[24207] = 1.99055118E-04;
  COFD[24208] = -1.91456103E+01;
  COFD[24209] = 3.15403394E+00;
  COFD[24210] = -9.49161276E-02;
  COFD[24211] = 1.99055118E-04;
  COFD[24212] = -1.91456103E+01;
  COFD[24213] = 3.15403394E+00;
  COFD[24214] = -9.49161276E-02;
  COFD[24215] = 1.99055118E-04;
  COFD[24216] = -1.91456103E+01;
  COFD[24217] = 3.15403394E+00;
  COFD[24218] = -9.49161276E-02;
  COFD[24219] = 1.99055118E-04;
  COFD[24220] = -1.91456103E+01;
  COFD[24221] = 3.15403394E+00;
  COFD[24222] = -9.49161276E-02;
  COFD[24223] = 1.99055118E-04;
  COFD[24224] = -1.91456103E+01;
  COFD[24225] = 3.15403394E+00;
  COFD[24226] = -9.49161276E-02;
  COFD[24227] = 1.99055118E-04;
  COFD[24228] = -1.91456103E+01;
  COFD[24229] = 3.15403394E+00;
  COFD[24230] = -9.49161276E-02;
  COFD[24231] = 1.99055118E-04;
  COFD[24232] = -1.91456103E+01;
  COFD[24233] = 3.15403394E+00;
  COFD[24234] = -9.49161276E-02;
  COFD[24235] = 1.99055118E-04;
  COFD[24236] = -1.91456103E+01;
  COFD[24237] = 3.15403394E+00;
  COFD[24238] = -9.49161276E-02;
  COFD[24239] = 1.99055118E-04;
  COFD[24240] = -1.91456103E+01;
  COFD[24241] = 3.15403394E+00;
  COFD[24242] = -9.49161276E-02;
  COFD[24243] = 1.99055118E-04;
  COFD[24244] = -1.87460549E+01;
  COFD[24245] = 2.87978833E+00;
  COFD[24246] = -5.44866013E-02;
  COFD[24247] = -1.73658318E-03;
  COFD[24248] = -1.87460549E+01;
  COFD[24249] = 2.87978833E+00;
  COFD[24250] = -5.44866013E-02;
  COFD[24251] = -1.73658318E-03;
  COFD[24252] = -1.87460549E+01;
  COFD[24253] = 2.87978833E+00;
  COFD[24254] = -5.44866013E-02;
  COFD[24255] = -1.73658318E-03;
  COFD[24256] = -1.87460549E+01;
  COFD[24257] = 2.87978833E+00;
  COFD[24258] = -5.44866013E-02;
  COFD[24259] = -1.73658318E-03;
  COFD[24260] = -1.99684327E+01;
  COFD[24261] = 3.54868094E+00;
  COFD[24262] = -1.52503015E-01;
  COFD[24263] = 2.93310249E-03;
  COFD[24264] = -1.99684327E+01;
  COFD[24265] = 3.54868094E+00;
  COFD[24266] = -1.52503015E-01;
  COFD[24267] = 2.93310249E-03;
  COFD[24268] = -1.89007696E+01;
  COFD[24269] = 3.01491854E+00;
  COFD[24270] = -7.45185018E-02;
  COFD[24271] = -7.71760336E-04;
  COFD[24272] = -1.89007696E+01;
  COFD[24273] = 3.01491854E+00;
  COFD[24274] = -7.45185018E-02;
  COFD[24275] = -7.71760336E-04;
  COFD[24276] = -1.89007696E+01;
  COFD[24277] = 3.01491854E+00;
  COFD[24278] = -7.45185018E-02;
  COFD[24279] = -7.71760336E-04;
  COFD[24280] = -1.89007696E+01;
  COFD[24281] = 3.01491854E+00;
  COFD[24282] = -7.45185018E-02;
  COFD[24283] = -7.71760336E-04;
  COFD[24284] = -2.17873416E+01;
  COFD[24285] = 5.37038209E+00;
  COFD[24286] = -4.70276061E-01;
  COFD[24287] = 1.99108515E-02;
  COFD[24288] = -2.07558370E+01;
  COFD[24289] = 5.61220925E+00;
  COFD[24290] = -4.91040098E-01;
  COFD[24291] = 2.03909682E-02;
  COFD[24292] = -1.72085780E+01;
  COFD[24293] = 4.26597898E+00;
  COFD[24294] = -3.40497726E-01;
  COFD[24295] = 1.48284962E-02;
  COFD[24296] = -2.06859442E+01;
  COFD[24297] = 5.15084743E+00;
  COFD[24298] = -4.46166870E-01;
  COFD[24299] = 1.90405241E-02;
  COFD[24300] = -2.19892992E+01;
  COFD[24301] = 5.41528536E+00;
  COFD[24302] = -4.73395924E-01;
  COFD[24303] = 1.99371023E-02;
  COFD[24304] = -2.07130812E+01;
  COFD[24305] = 5.15084743E+00;
  COFD[24306] = -4.46166870E-01;
  COFD[24307] = 1.90405241E-02;
  COFD[24308] = -1.72072974E+01;
  COFD[24309] = 2.92077981E+00;
  COFD[24310] = -6.20181094E-02;
  COFD[24311] = -1.31459730E-03;
  COFD[24312] = -2.18067293E+01;
  COFD[24313] = 5.37381914E+00;
  COFD[24314] = -4.70526306E-01;
  COFD[24315] = 1.99137622E-02;
  COFD[24316] = -1.92245436E+01;
  COFD[24317] = 3.64878687E+00;
  COFD[24318] = -1.67486742E-01;
  COFD[24319] = 3.65938254E-03;
  COFD[24320] = -2.26542292E+01;
  COFD[24321] = 5.30716061E+00;
  COFD[24322] = -4.27308091E-01;
  COFD[24323] = 1.66655289E-02;
  COFD[24324] = -2.24310667E+01;
  COFD[24325] = 5.61234798E+00;
  COFD[24326] = -4.91297356E-01;
  COFD[24327] = 2.04115425E-02;
  COFD[24328] = -2.24475415E+01;
  COFD[24329] = 5.61233595E+00;
  COFD[24330] = -4.91420667E-01;
  COFD[24331] = 2.04217927E-02;
  COFD[24332] = -2.19786716E+01;
  COFD[24333] = 5.41031792E+00;
  COFD[24334] = -4.73134636E-01;
  COFD[24335] = 1.99412666E-02;
  COFD[24336] = -2.19906530E+01;
  COFD[24337] = 5.41031792E+00;
  COFD[24338] = -4.73134636E-01;
  COFD[24339] = 1.99412666E-02;
  COFD[24340] = -1.92384813E+01;
  COFD[24341] = 3.64878687E+00;
  COFD[24342] = -1.67486742E-01;
  COFD[24343] = 3.65938254E-03;
  COFD[24344] = -2.00260065E+01;
  COFD[24345] = 4.04058640E+00;
  COFD[24346] = -2.29270334E-01;
  COFD[24347] = 6.76606770E-03;
  COFD[24348] = -2.26084502E+01;
  COFD[24349] = 5.30201231E+00;
  COFD[24350] = -4.26456960E-01;
  COFD[24351] = 1.66213106E-02;
  COFD[24352] = -2.24952591E+01;
  COFD[24353] = 5.35215936E+00;
  COFD[24354] = -4.34996256E-01;
  COFD[24355] = 1.70721706E-02;
  COFD[24356] = -2.25945370E+01;
  COFD[24357] = 5.30201231E+00;
  COFD[24358] = -4.26456960E-01;
  COFD[24359] = 1.66213106E-02;
  COFD[24360] = -2.22879818E+01;
  COFD[24361] = 5.21396996E+00;
  COFD[24362] = -4.11281412E-01;
  COFD[24363] = 1.58150334E-02;
  COFD[24364] = -2.23037777E+01;
  COFD[24365] = 5.21396996E+00;
  COFD[24366] = -4.11281412E-01;
  COFD[24367] = 1.58150334E-02;
  COFD[24368] = -2.02458098E+01;
  COFD[24369] = 4.04040564E+00;
  COFD[24370] = -2.27103382E-01;
  COFD[24371] = 6.58016011E-03;
  COFD[24372] = -2.25975141E+01;
  COFD[24373] = 5.60684388E+00;
  COFD[24374] = -4.89089198E-01;
  COFD[24375] = 2.02565724E-02;
  COFD[24376] = -2.02547568E+01;
  COFD[24377] = 4.04040564E+00;
  COFD[24378] = -2.27103382E-01;
  COFD[24379] = 6.58016011E-03;
  COFD[24380] = -2.02547568E+01;
  COFD[24381] = 4.04040564E+00;
  COFD[24382] = -2.27103382E-01;
  COFD[24383] = 6.58016011E-03;
  COFD[24384] = -2.02634463E+01;
  COFD[24385] = 4.04040564E+00;
  COFD[24386] = -2.27103382E-01;
  COFD[24387] = 6.58016011E-03;
  COFD[24388] = -2.18339999E+01;
  COFD[24389] = 4.81663452E+00;
  COFD[24390] = -3.47310112E-01;
  COFD[24391] = 1.25507777E-02;
  COFD[24392] = -2.20612721E+01;
  COFD[24393] = 4.93948492E+00;
  COFD[24394] = -3.66694137E-01;
  COFD[24395] = 1.35271560E-02;
  COFD[24396] = -2.16378415E+01;
  COFD[24397] = 4.61311728E+00;
  COFD[24398] = -3.14979067E-01;
  COFD[24399] = 1.09172113E-02;
  COFD[24400] = -2.22609630E+01;
  COFD[24401] = 4.97379817E+00;
  COFD[24402] = -3.72099307E-01;
  COFD[24403] = 1.37992814E-02;
  COFD[24404] = -2.16535499E+01;
  COFD[24405] = 4.62479073E+00;
  COFD[24406] = -3.16843576E-01;
  COFD[24407] = 1.10117295E-02;
  COFD[24408] = -2.16599161E+01;
  COFD[24409] = 4.62479073E+00;
  COFD[24410] = -3.16843576E-01;
  COFD[24411] = 1.10117295E-02;
  COFD[24412] = -2.18056042E+01;
  COFD[24413] = 4.64312709E+00;
  COFD[24414] = -3.19764076E-01;
  COFD[24415] = 1.11595790E-02;
  COFD[24416] = -2.05316670E+01;
  COFD[24417] = 4.04453292E+00;
  COFD[24418] = -2.27725339E-01;
  COFD[24419] = 6.61050628E-03;
  COFD[24420] = -2.00647907E+01;
  COFD[24421] = 3.86026424E+00;
  COFD[24422] = -2.02407333E-01;
  COFD[24423] = 5.46907954E-03;
  COFD[24424] = -2.07088264E+01;
  COFD[24425] = 4.13288186E+00;
  COFD[24426] = -2.41054643E-01;
  COFD[24427] = 7.26113993E-03;
  COFD[24428] = -2.13196973E+01;
  COFD[24429] = 4.34433003E+00;
  COFD[24430] = -2.73207428E-01;
  COFD[24431] = 8.83823384E-03;
  COFD[24432] = -2.14443150E+01;
  COFD[24433] = 4.40560301E+00;
  COFD[24434] = -2.83033303E-01;
  COFD[24435] = 9.33807331E-03;
  COFD[24436] = -1.98908327E+01;
  COFD[24437] = 3.81317728E+00;
  COFD[24438] = -1.92528490E-01;
  COFD[24439] = 4.88612928E-03;
  COFD[24440] = -1.96275498E+01;
  COFD[24441] = 3.74985445E+00;
  COFD[24442] = -1.82818055E-01;
  COFD[24443] = 4.40846246E-03;
  COFD[24444] = -1.96353326E+01;
  COFD[24445] = 3.74985445E+00;
  COFD[24446] = -1.82818055E-01;
  COFD[24447] = 4.40846246E-03;
  COFD[24448] = -2.02529779E+01;
  COFD[24449] = 3.98291296E+00;
  COFD[24450] = -2.18459468E-01;
  COFD[24451] = 6.15957476E-03;
  COFD[24452] = -2.02219152E+01;
  COFD[24453] = 3.91540504E+00;
  COFD[24454] = -2.10676561E-01;
  COFD[24455] = 5.87107784E-03;
  COFD[24456] = -2.09376776E+01;
  COFD[24457] = 4.24310133E+00;
  COFD[24458] = -2.57732017E-01;
  COFD[24459] = 8.07685243E-03;
  COFD[24460] = -1.98854459E+01;
  COFD[24461] = 3.66237031E+00;
  COFD[24462] = -1.69533805E-01;
  COFD[24463] = 3.75902257E-03;
  COFD[24464] = -2.00413049E+01;
  COFD[24465] = 3.66237031E+00;
  COFD[24466] = -1.69533805E-01;
  COFD[24467] = 3.75902257E-03;
  COFD[24468] = -1.99557130E+01;
  COFD[24469] = 3.66237031E+00;
  COFD[24470] = -1.69533805E-01;
  COFD[24471] = 3.75902257E-03;
  COFD[24472] = -1.99557130E+01;
  COFD[24473] = 3.66237031E+00;
  COFD[24474] = -1.69533805E-01;
  COFD[24475] = 3.75902257E-03;
  COFD[24476] = -2.19508560E+01;
  COFD[24477] = 4.87914567E+00;
  COFD[24478] = -3.57172857E-01;
  COFD[24479] = 1.30475227E-02;
  COFD[24480] = -2.18242110E+01;
  COFD[24481] = 4.81663452E+00;
  COFD[24482] = -3.47310112E-01;
  COFD[24483] = 1.25507777E-02;
  COFD[24484] = -2.29275994E+01;
  COFD[24485] = 5.48746342E+00;
  COFD[24486] = -4.59361316E-01;
  COFD[24487] = 1.83995990E-02;
  COFD[24488] = -2.23998269E+01;
  COFD[24489] = 5.61234798E+00;
  COFD[24490] = -4.91297356E-01;
  COFD[24491] = 2.04115425E-02;
  COFD[24492] = -2.00556963E+01;
  COFD[24493] = 3.66436790E+00;
  COFD[24494] = -1.71934261E-01;
  COFD[24495] = 3.95119075E-03;
  COFD[24496] = -1.98658124E+01;
  COFD[24497] = 3.69537879E+00;
  COFD[24498] = -1.77145108E-01;
  COFD[24499] = 4.22399720E-03;
  COFD[24500] = -1.98612587E+01;
  COFD[24501] = 3.69537879E+00;
  COFD[24502] = -1.77145108E-01;
  COFD[24503] = 4.22399720E-03;
  COFD[24504] = -1.99821344E+01;
  COFD[24505] = 3.72431023E+00;
  COFD[24506] = -1.81904593E-01;
  COFD[24507] = 4.46988587E-03;
  COFD[24508] = -2.00589344E+01;
  COFD[24509] = 3.70669288E+00;
  COFD[24510] = -1.76242142E-01;
  COFD[24511] = 4.08636872E-03;
  COFD[24512] = -2.00006729E+01;
  COFD[24513] = 3.66436790E+00;
  COFD[24514] = -1.71934261E-01;
  COFD[24515] = 3.95119075E-03;
  COFD[24516] = -1.99971115E+01;
  COFD[24517] = 3.66436790E+00;
  COFD[24518] = -1.71934261E-01;
  COFD[24519] = 3.95119075E-03;
  COFD[24520] = -2.05948978E+01;
  COFD[24521] = 3.87488983E+00;
  COFD[24522] = -2.02017141E-01;
  COFD[24523] = 5.35367024E-03;
  COFD[24524] = -2.05920255E+01;
  COFD[24525] = 3.87488983E+00;
  COFD[24526] = -2.02017141E-01;
  COFD[24527] = 5.35367024E-03;
  COFD[24528] = -2.05920255E+01;
  COFD[24529] = 3.87488983E+00;
  COFD[24530] = -2.02017141E-01;
  COFD[24531] = 5.35367024E-03;
  COFD[24532] = -2.05920255E+01;
  COFD[24533] = 3.87488983E+00;
  COFD[24534] = -2.02017141E-01;
  COFD[24535] = 5.35367024E-03;
  COFD[24536] = -2.05920255E+01;
  COFD[24537] = 3.87488983E+00;
  COFD[24538] = -2.02017141E-01;
  COFD[24539] = 5.35367024E-03;
  COFD[24540] = -2.05746135E+01;
  COFD[24541] = 3.87685237E+00;
  COFD[24542] = -2.02572236E-01;
  COFD[24543] = 5.38978456E-03;
  COFD[24544] = -2.05746135E+01;
  COFD[24545] = 3.87685237E+00;
  COFD[24546] = -2.02572236E-01;
  COFD[24547] = 5.38978456E-03;
  COFD[24548] = -1.91456103E+01;
  COFD[24549] = 3.15403394E+00;
  COFD[24550] = -9.49161276E-02;
  COFD[24551] = 1.99055118E-04;
  COFD[24552] = -1.91456103E+01;
  COFD[24553] = 3.15403394E+00;
  COFD[24554] = -9.49161276E-02;
  COFD[24555] = 1.99055118E-04;
  COFD[24556] = -1.91456103E+01;
  COFD[24557] = 3.15403394E+00;
  COFD[24558] = -9.49161276E-02;
  COFD[24559] = 1.99055118E-04;
  COFD[24560] = -1.91456103E+01;
  COFD[24561] = 3.15403394E+00;
  COFD[24562] = -9.49161276E-02;
  COFD[24563] = 1.99055118E-04;
  COFD[24564] = -1.91456103E+01;
  COFD[24565] = 3.15403394E+00;
  COFD[24566] = -9.49161276E-02;
  COFD[24567] = 1.99055118E-04;
  COFD[24568] = -1.91456103E+01;
  COFD[24569] = 3.15403394E+00;
  COFD[24570] = -9.49161276E-02;
  COFD[24571] = 1.99055118E-04;
  COFD[24572] = -1.91456103E+01;
  COFD[24573] = 3.15403394E+00;
  COFD[24574] = -9.49161276E-02;
  COFD[24575] = 1.99055118E-04;
  COFD[24576] = -1.91456103E+01;
  COFD[24577] = 3.15403394E+00;
  COFD[24578] = -9.49161276E-02;
  COFD[24579] = 1.99055118E-04;
  COFD[24580] = -1.91456103E+01;
  COFD[24581] = 3.15403394E+00;
  COFD[24582] = -9.49161276E-02;
  COFD[24583] = 1.99055118E-04;
  COFD[24584] = -1.91456103E+01;
  COFD[24585] = 3.15403394E+00;
  COFD[24586] = -9.49161276E-02;
  COFD[24587] = 1.99055118E-04;
  COFD[24588] = -1.91456103E+01;
  COFD[24589] = 3.15403394E+00;
  COFD[24590] = -9.49161276E-02;
  COFD[24591] = 1.99055118E-04;
  COFD[24592] = -1.91456103E+01;
  COFD[24593] = 3.15403394E+00;
  COFD[24594] = -9.49161276E-02;
  COFD[24595] = 1.99055118E-04;
  COFD[24596] = -1.87460549E+01;
  COFD[24597] = 2.87978833E+00;
  COFD[24598] = -5.44866013E-02;
  COFD[24599] = -1.73658318E-03;
  COFD[24600] = -1.87460549E+01;
  COFD[24601] = 2.87978833E+00;
  COFD[24602] = -5.44866013E-02;
  COFD[24603] = -1.73658318E-03;
  COFD[24604] = -1.87460549E+01;
  COFD[24605] = 2.87978833E+00;
  COFD[24606] = -5.44866013E-02;
  COFD[24607] = -1.73658318E-03;
  COFD[24608] = -1.87460549E+01;
  COFD[24609] = 2.87978833E+00;
  COFD[24610] = -5.44866013E-02;
  COFD[24611] = -1.73658318E-03;
  COFD[24612] = -1.99684327E+01;
  COFD[24613] = 3.54868094E+00;
  COFD[24614] = -1.52503015E-01;
  COFD[24615] = 2.93310249E-03;
  COFD[24616] = -1.99684327E+01;
  COFD[24617] = 3.54868094E+00;
  COFD[24618] = -1.52503015E-01;
  COFD[24619] = 2.93310249E-03;
  COFD[24620] = -1.89007696E+01;
  COFD[24621] = 3.01491854E+00;
  COFD[24622] = -7.45185018E-02;
  COFD[24623] = -7.71760336E-04;
  COFD[24624] = -1.89007696E+01;
  COFD[24625] = 3.01491854E+00;
  COFD[24626] = -7.45185018E-02;
  COFD[24627] = -7.71760336E-04;
  COFD[24628] = -1.89007696E+01;
  COFD[24629] = 3.01491854E+00;
  COFD[24630] = -7.45185018E-02;
  COFD[24631] = -7.71760336E-04;
  COFD[24632] = -1.89007696E+01;
  COFD[24633] = 3.01491854E+00;
  COFD[24634] = -7.45185018E-02;
  COFD[24635] = -7.71760336E-04;
  COFD[24636] = -2.17873416E+01;
  COFD[24637] = 5.37038209E+00;
  COFD[24638] = -4.70276061E-01;
  COFD[24639] = 1.99108515E-02;
  COFD[24640] = -2.07558370E+01;
  COFD[24641] = 5.61220925E+00;
  COFD[24642] = -4.91040098E-01;
  COFD[24643] = 2.03909682E-02;
  COFD[24644] = -1.72085780E+01;
  COFD[24645] = 4.26597898E+00;
  COFD[24646] = -3.40497726E-01;
  COFD[24647] = 1.48284962E-02;
  COFD[24648] = -2.06859442E+01;
  COFD[24649] = 5.15084743E+00;
  COFD[24650] = -4.46166870E-01;
  COFD[24651] = 1.90405241E-02;
  COFD[24652] = -2.19892992E+01;
  COFD[24653] = 5.41528536E+00;
  COFD[24654] = -4.73395924E-01;
  COFD[24655] = 1.99371023E-02;
  COFD[24656] = -2.07130812E+01;
  COFD[24657] = 5.15084743E+00;
  COFD[24658] = -4.46166870E-01;
  COFD[24659] = 1.90405241E-02;
  COFD[24660] = -1.72072974E+01;
  COFD[24661] = 2.92077981E+00;
  COFD[24662] = -6.20181094E-02;
  COFD[24663] = -1.31459730E-03;
  COFD[24664] = -2.18067293E+01;
  COFD[24665] = 5.37381914E+00;
  COFD[24666] = -4.70526306E-01;
  COFD[24667] = 1.99137622E-02;
  COFD[24668] = -1.92245436E+01;
  COFD[24669] = 3.64878687E+00;
  COFD[24670] = -1.67486742E-01;
  COFD[24671] = 3.65938254E-03;
  COFD[24672] = -2.26542292E+01;
  COFD[24673] = 5.30716061E+00;
  COFD[24674] = -4.27308091E-01;
  COFD[24675] = 1.66655289E-02;
  COFD[24676] = -2.24310667E+01;
  COFD[24677] = 5.61234798E+00;
  COFD[24678] = -4.91297356E-01;
  COFD[24679] = 2.04115425E-02;
  COFD[24680] = -2.24475415E+01;
  COFD[24681] = 5.61233595E+00;
  COFD[24682] = -4.91420667E-01;
  COFD[24683] = 2.04217927E-02;
  COFD[24684] = -2.19786716E+01;
  COFD[24685] = 5.41031792E+00;
  COFD[24686] = -4.73134636E-01;
  COFD[24687] = 1.99412666E-02;
  COFD[24688] = -2.19906530E+01;
  COFD[24689] = 5.41031792E+00;
  COFD[24690] = -4.73134636E-01;
  COFD[24691] = 1.99412666E-02;
  COFD[24692] = -1.92384813E+01;
  COFD[24693] = 3.64878687E+00;
  COFD[24694] = -1.67486742E-01;
  COFD[24695] = 3.65938254E-03;
  COFD[24696] = -2.00260065E+01;
  COFD[24697] = 4.04058640E+00;
  COFD[24698] = -2.29270334E-01;
  COFD[24699] = 6.76606770E-03;
  COFD[24700] = -2.26084502E+01;
  COFD[24701] = 5.30201231E+00;
  COFD[24702] = -4.26456960E-01;
  COFD[24703] = 1.66213106E-02;
  COFD[24704] = -2.24952591E+01;
  COFD[24705] = 5.35215936E+00;
  COFD[24706] = -4.34996256E-01;
  COFD[24707] = 1.70721706E-02;
  COFD[24708] = -2.25945370E+01;
  COFD[24709] = 5.30201231E+00;
  COFD[24710] = -4.26456960E-01;
  COFD[24711] = 1.66213106E-02;
  COFD[24712] = -2.22879818E+01;
  COFD[24713] = 5.21396996E+00;
  COFD[24714] = -4.11281412E-01;
  COFD[24715] = 1.58150334E-02;
  COFD[24716] = -2.23037777E+01;
  COFD[24717] = 5.21396996E+00;
  COFD[24718] = -4.11281412E-01;
  COFD[24719] = 1.58150334E-02;
  COFD[24720] = -2.02458098E+01;
  COFD[24721] = 4.04040564E+00;
  COFD[24722] = -2.27103382E-01;
  COFD[24723] = 6.58016011E-03;
  COFD[24724] = -2.25975141E+01;
  COFD[24725] = 5.60684388E+00;
  COFD[24726] = -4.89089198E-01;
  COFD[24727] = 2.02565724E-02;
  COFD[24728] = -2.02547568E+01;
  COFD[24729] = 4.04040564E+00;
  COFD[24730] = -2.27103382E-01;
  COFD[24731] = 6.58016011E-03;
  COFD[24732] = -2.02547568E+01;
  COFD[24733] = 4.04040564E+00;
  COFD[24734] = -2.27103382E-01;
  COFD[24735] = 6.58016011E-03;
  COFD[24736] = -2.02634463E+01;
  COFD[24737] = 4.04040564E+00;
  COFD[24738] = -2.27103382E-01;
  COFD[24739] = 6.58016011E-03;
  COFD[24740] = -2.18339999E+01;
  COFD[24741] = 4.81663452E+00;
  COFD[24742] = -3.47310112E-01;
  COFD[24743] = 1.25507777E-02;
  COFD[24744] = -2.20612721E+01;
  COFD[24745] = 4.93948492E+00;
  COFD[24746] = -3.66694137E-01;
  COFD[24747] = 1.35271560E-02;
  COFD[24748] = -2.16378415E+01;
  COFD[24749] = 4.61311728E+00;
  COFD[24750] = -3.14979067E-01;
  COFD[24751] = 1.09172113E-02;
  COFD[24752] = -2.22609630E+01;
  COFD[24753] = 4.97379817E+00;
  COFD[24754] = -3.72099307E-01;
  COFD[24755] = 1.37992814E-02;
  COFD[24756] = -2.16535499E+01;
  COFD[24757] = 4.62479073E+00;
  COFD[24758] = -3.16843576E-01;
  COFD[24759] = 1.10117295E-02;
  COFD[24760] = -2.16599161E+01;
  COFD[24761] = 4.62479073E+00;
  COFD[24762] = -3.16843576E-01;
  COFD[24763] = 1.10117295E-02;
  COFD[24764] = -2.18056042E+01;
  COFD[24765] = 4.64312709E+00;
  COFD[24766] = -3.19764076E-01;
  COFD[24767] = 1.11595790E-02;
  COFD[24768] = -2.05316670E+01;
  COFD[24769] = 4.04453292E+00;
  COFD[24770] = -2.27725339E-01;
  COFD[24771] = 6.61050628E-03;
  COFD[24772] = -2.00647907E+01;
  COFD[24773] = 3.86026424E+00;
  COFD[24774] = -2.02407333E-01;
  COFD[24775] = 5.46907954E-03;
  COFD[24776] = -2.07088264E+01;
  COFD[24777] = 4.13288186E+00;
  COFD[24778] = -2.41054643E-01;
  COFD[24779] = 7.26113993E-03;
  COFD[24780] = -2.13196973E+01;
  COFD[24781] = 4.34433003E+00;
  COFD[24782] = -2.73207428E-01;
  COFD[24783] = 8.83823384E-03;
  COFD[24784] = -2.14443150E+01;
  COFD[24785] = 4.40560301E+00;
  COFD[24786] = -2.83033303E-01;
  COFD[24787] = 9.33807331E-03;
  COFD[24788] = -1.98908327E+01;
  COFD[24789] = 3.81317728E+00;
  COFD[24790] = -1.92528490E-01;
  COFD[24791] = 4.88612928E-03;
  COFD[24792] = -1.96275498E+01;
  COFD[24793] = 3.74985445E+00;
  COFD[24794] = -1.82818055E-01;
  COFD[24795] = 4.40846246E-03;
  COFD[24796] = -1.96353326E+01;
  COFD[24797] = 3.74985445E+00;
  COFD[24798] = -1.82818055E-01;
  COFD[24799] = 4.40846246E-03;
  COFD[24800] = -2.02529779E+01;
  COFD[24801] = 3.98291296E+00;
  COFD[24802] = -2.18459468E-01;
  COFD[24803] = 6.15957476E-03;
  COFD[24804] = -2.02219152E+01;
  COFD[24805] = 3.91540504E+00;
  COFD[24806] = -2.10676561E-01;
  COFD[24807] = 5.87107784E-03;
  COFD[24808] = -2.09376776E+01;
  COFD[24809] = 4.24310133E+00;
  COFD[24810] = -2.57732017E-01;
  COFD[24811] = 8.07685243E-03;
  COFD[24812] = -1.98854459E+01;
  COFD[24813] = 3.66237031E+00;
  COFD[24814] = -1.69533805E-01;
  COFD[24815] = 3.75902257E-03;
  COFD[24816] = -2.00413049E+01;
  COFD[24817] = 3.66237031E+00;
  COFD[24818] = -1.69533805E-01;
  COFD[24819] = 3.75902257E-03;
  COFD[24820] = -1.99557130E+01;
  COFD[24821] = 3.66237031E+00;
  COFD[24822] = -1.69533805E-01;
  COFD[24823] = 3.75902257E-03;
  COFD[24824] = -1.99557130E+01;
  COFD[24825] = 3.66237031E+00;
  COFD[24826] = -1.69533805E-01;
  COFD[24827] = 3.75902257E-03;
  COFD[24828] = -2.19508560E+01;
  COFD[24829] = 4.87914567E+00;
  COFD[24830] = -3.57172857E-01;
  COFD[24831] = 1.30475227E-02;
  COFD[24832] = -2.18242110E+01;
  COFD[24833] = 4.81663452E+00;
  COFD[24834] = -3.47310112E-01;
  COFD[24835] = 1.25507777E-02;
  COFD[24836] = -2.29275994E+01;
  COFD[24837] = 5.48746342E+00;
  COFD[24838] = -4.59361316E-01;
  COFD[24839] = 1.83995990E-02;
  COFD[24840] = -2.23998269E+01;
  COFD[24841] = 5.61234798E+00;
  COFD[24842] = -4.91297356E-01;
  COFD[24843] = 2.04115425E-02;
  COFD[24844] = -2.00556963E+01;
  COFD[24845] = 3.66436790E+00;
  COFD[24846] = -1.71934261E-01;
  COFD[24847] = 3.95119075E-03;
  COFD[24848] = -1.98658124E+01;
  COFD[24849] = 3.69537879E+00;
  COFD[24850] = -1.77145108E-01;
  COFD[24851] = 4.22399720E-03;
  COFD[24852] = -1.98612587E+01;
  COFD[24853] = 3.69537879E+00;
  COFD[24854] = -1.77145108E-01;
  COFD[24855] = 4.22399720E-03;
  COFD[24856] = -1.99821344E+01;
  COFD[24857] = 3.72431023E+00;
  COFD[24858] = -1.81904593E-01;
  COFD[24859] = 4.46988587E-03;
  COFD[24860] = -2.00589344E+01;
  COFD[24861] = 3.70669288E+00;
  COFD[24862] = -1.76242142E-01;
  COFD[24863] = 4.08636872E-03;
  COFD[24864] = -2.00006729E+01;
  COFD[24865] = 3.66436790E+00;
  COFD[24866] = -1.71934261E-01;
  COFD[24867] = 3.95119075E-03;
  COFD[24868] = -1.99971115E+01;
  COFD[24869] = 3.66436790E+00;
  COFD[24870] = -1.71934261E-01;
  COFD[24871] = 3.95119075E-03;
  COFD[24872] = -2.05948978E+01;
  COFD[24873] = 3.87488983E+00;
  COFD[24874] = -2.02017141E-01;
  COFD[24875] = 5.35367024E-03;
  COFD[24876] = -2.05920255E+01;
  COFD[24877] = 3.87488983E+00;
  COFD[24878] = -2.02017141E-01;
  COFD[24879] = 5.35367024E-03;
  COFD[24880] = -2.05920255E+01;
  COFD[24881] = 3.87488983E+00;
  COFD[24882] = -2.02017141E-01;
  COFD[24883] = 5.35367024E-03;
  COFD[24884] = -2.05920255E+01;
  COFD[24885] = 3.87488983E+00;
  COFD[24886] = -2.02017141E-01;
  COFD[24887] = 5.35367024E-03;
  COFD[24888] = -2.05920255E+01;
  COFD[24889] = 3.87488983E+00;
  COFD[24890] = -2.02017141E-01;
  COFD[24891] = 5.35367024E-03;
  COFD[24892] = -2.05746135E+01;
  COFD[24893] = 3.87685237E+00;
  COFD[24894] = -2.02572236E-01;
  COFD[24895] = 5.38978456E-03;
  COFD[24896] = -2.05746135E+01;
  COFD[24897] = 3.87685237E+00;
  COFD[24898] = -2.02572236E-01;
  COFD[24899] = 5.38978456E-03;
  COFD[24900] = -1.91456103E+01;
  COFD[24901] = 3.15403394E+00;
  COFD[24902] = -9.49161276E-02;
  COFD[24903] = 1.99055118E-04;
  COFD[24904] = -1.91456103E+01;
  COFD[24905] = 3.15403394E+00;
  COFD[24906] = -9.49161276E-02;
  COFD[24907] = 1.99055118E-04;
  COFD[24908] = -1.91456103E+01;
  COFD[24909] = 3.15403394E+00;
  COFD[24910] = -9.49161276E-02;
  COFD[24911] = 1.99055118E-04;
  COFD[24912] = -1.91456103E+01;
  COFD[24913] = 3.15403394E+00;
  COFD[24914] = -9.49161276E-02;
  COFD[24915] = 1.99055118E-04;
  COFD[24916] = -1.91456103E+01;
  COFD[24917] = 3.15403394E+00;
  COFD[24918] = -9.49161276E-02;
  COFD[24919] = 1.99055118E-04;
  COFD[24920] = -1.91456103E+01;
  COFD[24921] = 3.15403394E+00;
  COFD[24922] = -9.49161276E-02;
  COFD[24923] = 1.99055118E-04;
  COFD[24924] = -1.91456103E+01;
  COFD[24925] = 3.15403394E+00;
  COFD[24926] = -9.49161276E-02;
  COFD[24927] = 1.99055118E-04;
  COFD[24928] = -1.91456103E+01;
  COFD[24929] = 3.15403394E+00;
  COFD[24930] = -9.49161276E-02;
  COFD[24931] = 1.99055118E-04;
  COFD[24932] = -1.91456103E+01;
  COFD[24933] = 3.15403394E+00;
  COFD[24934] = -9.49161276E-02;
  COFD[24935] = 1.99055118E-04;
  COFD[24936] = -1.91456103E+01;
  COFD[24937] = 3.15403394E+00;
  COFD[24938] = -9.49161276E-02;
  COFD[24939] = 1.99055118E-04;
  COFD[24940] = -1.91456103E+01;
  COFD[24941] = 3.15403394E+00;
  COFD[24942] = -9.49161276E-02;
  COFD[24943] = 1.99055118E-04;
  COFD[24944] = -1.91456103E+01;
  COFD[24945] = 3.15403394E+00;
  COFD[24946] = -9.49161276E-02;
  COFD[24947] = 1.99055118E-04;
  COFD[24948] = -1.87460549E+01;
  COFD[24949] = 2.87978833E+00;
  COFD[24950] = -5.44866013E-02;
  COFD[24951] = -1.73658318E-03;
  COFD[24952] = -1.87460549E+01;
  COFD[24953] = 2.87978833E+00;
  COFD[24954] = -5.44866013E-02;
  COFD[24955] = -1.73658318E-03;
  COFD[24956] = -1.87460549E+01;
  COFD[24957] = 2.87978833E+00;
  COFD[24958] = -5.44866013E-02;
  COFD[24959] = -1.73658318E-03;
  COFD[24960] = -1.87460549E+01;
  COFD[24961] = 2.87978833E+00;
  COFD[24962] = -5.44866013E-02;
  COFD[24963] = -1.73658318E-03;
  COFD[24964] = -1.99684327E+01;
  COFD[24965] = 3.54868094E+00;
  COFD[24966] = -1.52503015E-01;
  COFD[24967] = 2.93310249E-03;
  COFD[24968] = -1.99684327E+01;
  COFD[24969] = 3.54868094E+00;
  COFD[24970] = -1.52503015E-01;
  COFD[24971] = 2.93310249E-03;
  COFD[24972] = -1.89007696E+01;
  COFD[24973] = 3.01491854E+00;
  COFD[24974] = -7.45185018E-02;
  COFD[24975] = -7.71760336E-04;
  COFD[24976] = -1.89007696E+01;
  COFD[24977] = 3.01491854E+00;
  COFD[24978] = -7.45185018E-02;
  COFD[24979] = -7.71760336E-04;
  COFD[24980] = -1.89007696E+01;
  COFD[24981] = 3.01491854E+00;
  COFD[24982] = -7.45185018E-02;
  COFD[24983] = -7.71760336E-04;
  COFD[24984] = -1.89007696E+01;
  COFD[24985] = 3.01491854E+00;
  COFD[24986] = -7.45185018E-02;
  COFD[24987] = -7.71760336E-04;
  COFD[24988] = -2.17873416E+01;
  COFD[24989] = 5.37038209E+00;
  COFD[24990] = -4.70276061E-01;
  COFD[24991] = 1.99108515E-02;
  COFD[24992] = -2.07558370E+01;
  COFD[24993] = 5.61220925E+00;
  COFD[24994] = -4.91040098E-01;
  COFD[24995] = 2.03909682E-02;
  COFD[24996] = -1.72085780E+01;
  COFD[24997] = 4.26597898E+00;
  COFD[24998] = -3.40497726E-01;
  COFD[24999] = 1.48284962E-02;
  COFD[25000] = -2.06859442E+01;
  COFD[25001] = 5.15084743E+00;
  COFD[25002] = -4.46166870E-01;
  COFD[25003] = 1.90405241E-02;
  COFD[25004] = -2.19892992E+01;
  COFD[25005] = 5.41528536E+00;
  COFD[25006] = -4.73395924E-01;
  COFD[25007] = 1.99371023E-02;
  COFD[25008] = -2.07130812E+01;
  COFD[25009] = 5.15084743E+00;
  COFD[25010] = -4.46166870E-01;
  COFD[25011] = 1.90405241E-02;
  COFD[25012] = -1.72072974E+01;
  COFD[25013] = 2.92077981E+00;
  COFD[25014] = -6.20181094E-02;
  COFD[25015] = -1.31459730E-03;
  COFD[25016] = -2.18067293E+01;
  COFD[25017] = 5.37381914E+00;
  COFD[25018] = -4.70526306E-01;
  COFD[25019] = 1.99137622E-02;
  COFD[25020] = -1.92245436E+01;
  COFD[25021] = 3.64878687E+00;
  COFD[25022] = -1.67486742E-01;
  COFD[25023] = 3.65938254E-03;
  COFD[25024] = -2.26542292E+01;
  COFD[25025] = 5.30716061E+00;
  COFD[25026] = -4.27308091E-01;
  COFD[25027] = 1.66655289E-02;
  COFD[25028] = -2.24310667E+01;
  COFD[25029] = 5.61234798E+00;
  COFD[25030] = -4.91297356E-01;
  COFD[25031] = 2.04115425E-02;
  COFD[25032] = -2.24475415E+01;
  COFD[25033] = 5.61233595E+00;
  COFD[25034] = -4.91420667E-01;
  COFD[25035] = 2.04217927E-02;
  COFD[25036] = -2.19786716E+01;
  COFD[25037] = 5.41031792E+00;
  COFD[25038] = -4.73134636E-01;
  COFD[25039] = 1.99412666E-02;
  COFD[25040] = -2.19906530E+01;
  COFD[25041] = 5.41031792E+00;
  COFD[25042] = -4.73134636E-01;
  COFD[25043] = 1.99412666E-02;
  COFD[25044] = -1.92384813E+01;
  COFD[25045] = 3.64878687E+00;
  COFD[25046] = -1.67486742E-01;
  COFD[25047] = 3.65938254E-03;
  COFD[25048] = -2.00260065E+01;
  COFD[25049] = 4.04058640E+00;
  COFD[25050] = -2.29270334E-01;
  COFD[25051] = 6.76606770E-03;
  COFD[25052] = -2.26084502E+01;
  COFD[25053] = 5.30201231E+00;
  COFD[25054] = -4.26456960E-01;
  COFD[25055] = 1.66213106E-02;
  COFD[25056] = -2.24952591E+01;
  COFD[25057] = 5.35215936E+00;
  COFD[25058] = -4.34996256E-01;
  COFD[25059] = 1.70721706E-02;
  COFD[25060] = -2.25945370E+01;
  COFD[25061] = 5.30201231E+00;
  COFD[25062] = -4.26456960E-01;
  COFD[25063] = 1.66213106E-02;
  COFD[25064] = -2.22879818E+01;
  COFD[25065] = 5.21396996E+00;
  COFD[25066] = -4.11281412E-01;
  COFD[25067] = 1.58150334E-02;
  COFD[25068] = -2.23037777E+01;
  COFD[25069] = 5.21396996E+00;
  COFD[25070] = -4.11281412E-01;
  COFD[25071] = 1.58150334E-02;
  COFD[25072] = -2.02458098E+01;
  COFD[25073] = 4.04040564E+00;
  COFD[25074] = -2.27103382E-01;
  COFD[25075] = 6.58016011E-03;
  COFD[25076] = -2.25975141E+01;
  COFD[25077] = 5.60684388E+00;
  COFD[25078] = -4.89089198E-01;
  COFD[25079] = 2.02565724E-02;
  COFD[25080] = -2.02547568E+01;
  COFD[25081] = 4.04040564E+00;
  COFD[25082] = -2.27103382E-01;
  COFD[25083] = 6.58016011E-03;
  COFD[25084] = -2.02547568E+01;
  COFD[25085] = 4.04040564E+00;
  COFD[25086] = -2.27103382E-01;
  COFD[25087] = 6.58016011E-03;
  COFD[25088] = -2.02634463E+01;
  COFD[25089] = 4.04040564E+00;
  COFD[25090] = -2.27103382E-01;
  COFD[25091] = 6.58016011E-03;
  COFD[25092] = -2.18339999E+01;
  COFD[25093] = 4.81663452E+00;
  COFD[25094] = -3.47310112E-01;
  COFD[25095] = 1.25507777E-02;
  COFD[25096] = -2.20612721E+01;
  COFD[25097] = 4.93948492E+00;
  COFD[25098] = -3.66694137E-01;
  COFD[25099] = 1.35271560E-02;
  COFD[25100] = -2.16378415E+01;
  COFD[25101] = 4.61311728E+00;
  COFD[25102] = -3.14979067E-01;
  COFD[25103] = 1.09172113E-02;
  COFD[25104] = -2.22609630E+01;
  COFD[25105] = 4.97379817E+00;
  COFD[25106] = -3.72099307E-01;
  COFD[25107] = 1.37992814E-02;
  COFD[25108] = -2.16535499E+01;
  COFD[25109] = 4.62479073E+00;
  COFD[25110] = -3.16843576E-01;
  COFD[25111] = 1.10117295E-02;
  COFD[25112] = -2.16599161E+01;
  COFD[25113] = 4.62479073E+00;
  COFD[25114] = -3.16843576E-01;
  COFD[25115] = 1.10117295E-02;
  COFD[25116] = -2.18056042E+01;
  COFD[25117] = 4.64312709E+00;
  COFD[25118] = -3.19764076E-01;
  COFD[25119] = 1.11595790E-02;
  COFD[25120] = -2.05316670E+01;
  COFD[25121] = 4.04453292E+00;
  COFD[25122] = -2.27725339E-01;
  COFD[25123] = 6.61050628E-03;
  COFD[25124] = -2.00647907E+01;
  COFD[25125] = 3.86026424E+00;
  COFD[25126] = -2.02407333E-01;
  COFD[25127] = 5.46907954E-03;
  COFD[25128] = -2.07088264E+01;
  COFD[25129] = 4.13288186E+00;
  COFD[25130] = -2.41054643E-01;
  COFD[25131] = 7.26113993E-03;
  COFD[25132] = -2.13196973E+01;
  COFD[25133] = 4.34433003E+00;
  COFD[25134] = -2.73207428E-01;
  COFD[25135] = 8.83823384E-03;
  COFD[25136] = -2.14443150E+01;
  COFD[25137] = 4.40560301E+00;
  COFD[25138] = -2.83033303E-01;
  COFD[25139] = 9.33807331E-03;
  COFD[25140] = -1.98908327E+01;
  COFD[25141] = 3.81317728E+00;
  COFD[25142] = -1.92528490E-01;
  COFD[25143] = 4.88612928E-03;
  COFD[25144] = -1.96275498E+01;
  COFD[25145] = 3.74985445E+00;
  COFD[25146] = -1.82818055E-01;
  COFD[25147] = 4.40846246E-03;
  COFD[25148] = -1.96353326E+01;
  COFD[25149] = 3.74985445E+00;
  COFD[25150] = -1.82818055E-01;
  COFD[25151] = 4.40846246E-03;
  COFD[25152] = -2.02529779E+01;
  COFD[25153] = 3.98291296E+00;
  COFD[25154] = -2.18459468E-01;
  COFD[25155] = 6.15957476E-03;
  COFD[25156] = -2.02219152E+01;
  COFD[25157] = 3.91540504E+00;
  COFD[25158] = -2.10676561E-01;
  COFD[25159] = 5.87107784E-03;
  COFD[25160] = -2.09376776E+01;
  COFD[25161] = 4.24310133E+00;
  COFD[25162] = -2.57732017E-01;
  COFD[25163] = 8.07685243E-03;
  COFD[25164] = -1.98854459E+01;
  COFD[25165] = 3.66237031E+00;
  COFD[25166] = -1.69533805E-01;
  COFD[25167] = 3.75902257E-03;
  COFD[25168] = -2.00413049E+01;
  COFD[25169] = 3.66237031E+00;
  COFD[25170] = -1.69533805E-01;
  COFD[25171] = 3.75902257E-03;
  COFD[25172] = -1.99557130E+01;
  COFD[25173] = 3.66237031E+00;
  COFD[25174] = -1.69533805E-01;
  COFD[25175] = 3.75902257E-03;
  COFD[25176] = -1.99557130E+01;
  COFD[25177] = 3.66237031E+00;
  COFD[25178] = -1.69533805E-01;
  COFD[25179] = 3.75902257E-03;
  COFD[25180] = -2.19508560E+01;
  COFD[25181] = 4.87914567E+00;
  COFD[25182] = -3.57172857E-01;
  COFD[25183] = 1.30475227E-02;
  COFD[25184] = -2.18242110E+01;
  COFD[25185] = 4.81663452E+00;
  COFD[25186] = -3.47310112E-01;
  COFD[25187] = 1.25507777E-02;
  COFD[25188] = -2.29275994E+01;
  COFD[25189] = 5.48746342E+00;
  COFD[25190] = -4.59361316E-01;
  COFD[25191] = 1.83995990E-02;
  COFD[25192] = -2.23998269E+01;
  COFD[25193] = 5.61234798E+00;
  COFD[25194] = -4.91297356E-01;
  COFD[25195] = 2.04115425E-02;
  COFD[25196] = -2.00556963E+01;
  COFD[25197] = 3.66436790E+00;
  COFD[25198] = -1.71934261E-01;
  COFD[25199] = 3.95119075E-03;
  COFD[25200] = -1.98658124E+01;
  COFD[25201] = 3.69537879E+00;
  COFD[25202] = -1.77145108E-01;
  COFD[25203] = 4.22399720E-03;
  COFD[25204] = -1.98612587E+01;
  COFD[25205] = 3.69537879E+00;
  COFD[25206] = -1.77145108E-01;
  COFD[25207] = 4.22399720E-03;
  COFD[25208] = -1.99821344E+01;
  COFD[25209] = 3.72431023E+00;
  COFD[25210] = -1.81904593E-01;
  COFD[25211] = 4.46988587E-03;
  COFD[25212] = -2.00589344E+01;
  COFD[25213] = 3.70669288E+00;
  COFD[25214] = -1.76242142E-01;
  COFD[25215] = 4.08636872E-03;
  COFD[25216] = -2.00006729E+01;
  COFD[25217] = 3.66436790E+00;
  COFD[25218] = -1.71934261E-01;
  COFD[25219] = 3.95119075E-03;
  COFD[25220] = -1.99971115E+01;
  COFD[25221] = 3.66436790E+00;
  COFD[25222] = -1.71934261E-01;
  COFD[25223] = 3.95119075E-03;
  COFD[25224] = -2.05948978E+01;
  COFD[25225] = 3.87488983E+00;
  COFD[25226] = -2.02017141E-01;
  COFD[25227] = 5.35367024E-03;
  COFD[25228] = -2.05920255E+01;
  COFD[25229] = 3.87488983E+00;
  COFD[25230] = -2.02017141E-01;
  COFD[25231] = 5.35367024E-03;
  COFD[25232] = -2.05920255E+01;
  COFD[25233] = 3.87488983E+00;
  COFD[25234] = -2.02017141E-01;
  COFD[25235] = 5.35367024E-03;
  COFD[25236] = -2.05920255E+01;
  COFD[25237] = 3.87488983E+00;
  COFD[25238] = -2.02017141E-01;
  COFD[25239] = 5.35367024E-03;
  COFD[25240] = -2.05920255E+01;
  COFD[25241] = 3.87488983E+00;
  COFD[25242] = -2.02017141E-01;
  COFD[25243] = 5.35367024E-03;
  COFD[25244] = -2.05746135E+01;
  COFD[25245] = 3.87685237E+00;
  COFD[25246] = -2.02572236E-01;
  COFD[25247] = 5.38978456E-03;
  COFD[25248] = -2.05746135E+01;
  COFD[25249] = 3.87685237E+00;
  COFD[25250] = -2.02572236E-01;
  COFD[25251] = 5.38978456E-03;
  COFD[25252] = -1.91456103E+01;
  COFD[25253] = 3.15403394E+00;
  COFD[25254] = -9.49161276E-02;
  COFD[25255] = 1.99055118E-04;
  COFD[25256] = -1.91456103E+01;
  COFD[25257] = 3.15403394E+00;
  COFD[25258] = -9.49161276E-02;
  COFD[25259] = 1.99055118E-04;
  COFD[25260] = -1.91456103E+01;
  COFD[25261] = 3.15403394E+00;
  COFD[25262] = -9.49161276E-02;
  COFD[25263] = 1.99055118E-04;
  COFD[25264] = -1.91456103E+01;
  COFD[25265] = 3.15403394E+00;
  COFD[25266] = -9.49161276E-02;
  COFD[25267] = 1.99055118E-04;
  COFD[25268] = -1.91456103E+01;
  COFD[25269] = 3.15403394E+00;
  COFD[25270] = -9.49161276E-02;
  COFD[25271] = 1.99055118E-04;
  COFD[25272] = -1.91456103E+01;
  COFD[25273] = 3.15403394E+00;
  COFD[25274] = -9.49161276E-02;
  COFD[25275] = 1.99055118E-04;
  COFD[25276] = -1.91456103E+01;
  COFD[25277] = 3.15403394E+00;
  COFD[25278] = -9.49161276E-02;
  COFD[25279] = 1.99055118E-04;
  COFD[25280] = -1.91456103E+01;
  COFD[25281] = 3.15403394E+00;
  COFD[25282] = -9.49161276E-02;
  COFD[25283] = 1.99055118E-04;
  COFD[25284] = -1.91456103E+01;
  COFD[25285] = 3.15403394E+00;
  COFD[25286] = -9.49161276E-02;
  COFD[25287] = 1.99055118E-04;
  COFD[25288] = -1.91456103E+01;
  COFD[25289] = 3.15403394E+00;
  COFD[25290] = -9.49161276E-02;
  COFD[25291] = 1.99055118E-04;
  COFD[25292] = -1.91456103E+01;
  COFD[25293] = 3.15403394E+00;
  COFD[25294] = -9.49161276E-02;
  COFD[25295] = 1.99055118E-04;
  COFD[25296] = -1.91456103E+01;
  COFD[25297] = 3.15403394E+00;
  COFD[25298] = -9.49161276E-02;
  COFD[25299] = 1.99055118E-04;
  COFD[25300] = -1.87460549E+01;
  COFD[25301] = 2.87978833E+00;
  COFD[25302] = -5.44866013E-02;
  COFD[25303] = -1.73658318E-03;
  COFD[25304] = -1.87460549E+01;
  COFD[25305] = 2.87978833E+00;
  COFD[25306] = -5.44866013E-02;
  COFD[25307] = -1.73658318E-03;
  COFD[25308] = -1.87460549E+01;
  COFD[25309] = 2.87978833E+00;
  COFD[25310] = -5.44866013E-02;
  COFD[25311] = -1.73658318E-03;
  COFD[25312] = -1.87460549E+01;
  COFD[25313] = 2.87978833E+00;
  COFD[25314] = -5.44866013E-02;
  COFD[25315] = -1.73658318E-03;
  COFD[25316] = -1.99684327E+01;
  COFD[25317] = 3.54868094E+00;
  COFD[25318] = -1.52503015E-01;
  COFD[25319] = 2.93310249E-03;
  COFD[25320] = -1.99684327E+01;
  COFD[25321] = 3.54868094E+00;
  COFD[25322] = -1.52503015E-01;
  COFD[25323] = 2.93310249E-03;
  COFD[25324] = -1.89007696E+01;
  COFD[25325] = 3.01491854E+00;
  COFD[25326] = -7.45185018E-02;
  COFD[25327] = -7.71760336E-04;
  COFD[25328] = -1.89007696E+01;
  COFD[25329] = 3.01491854E+00;
  COFD[25330] = -7.45185018E-02;
  COFD[25331] = -7.71760336E-04;
  COFD[25332] = -1.89007696E+01;
  COFD[25333] = 3.01491854E+00;
  COFD[25334] = -7.45185018E-02;
  COFD[25335] = -7.71760336E-04;
  COFD[25336] = -1.89007696E+01;
  COFD[25337] = 3.01491854E+00;
  COFD[25338] = -7.45185018E-02;
  COFD[25339] = -7.71760336E-04;
  COFD[25340] = -2.17873416E+01;
  COFD[25341] = 5.37038209E+00;
  COFD[25342] = -4.70276061E-01;
  COFD[25343] = 1.99108515E-02;
  COFD[25344] = -2.07558370E+01;
  COFD[25345] = 5.61220925E+00;
  COFD[25346] = -4.91040098E-01;
  COFD[25347] = 2.03909682E-02;
  COFD[25348] = -1.72085780E+01;
  COFD[25349] = 4.26597898E+00;
  COFD[25350] = -3.40497726E-01;
  COFD[25351] = 1.48284962E-02;
  COFD[25352] = -2.06859442E+01;
  COFD[25353] = 5.15084743E+00;
  COFD[25354] = -4.46166870E-01;
  COFD[25355] = 1.90405241E-02;
  COFD[25356] = -2.19892992E+01;
  COFD[25357] = 5.41528536E+00;
  COFD[25358] = -4.73395924E-01;
  COFD[25359] = 1.99371023E-02;
  COFD[25360] = -2.07130812E+01;
  COFD[25361] = 5.15084743E+00;
  COFD[25362] = -4.46166870E-01;
  COFD[25363] = 1.90405241E-02;
  COFD[25364] = -1.72072974E+01;
  COFD[25365] = 2.92077981E+00;
  COFD[25366] = -6.20181094E-02;
  COFD[25367] = -1.31459730E-03;
  COFD[25368] = -2.18067293E+01;
  COFD[25369] = 5.37381914E+00;
  COFD[25370] = -4.70526306E-01;
  COFD[25371] = 1.99137622E-02;
  COFD[25372] = -1.92245436E+01;
  COFD[25373] = 3.64878687E+00;
  COFD[25374] = -1.67486742E-01;
  COFD[25375] = 3.65938254E-03;
  COFD[25376] = -2.26542292E+01;
  COFD[25377] = 5.30716061E+00;
  COFD[25378] = -4.27308091E-01;
  COFD[25379] = 1.66655289E-02;
  COFD[25380] = -2.24310667E+01;
  COFD[25381] = 5.61234798E+00;
  COFD[25382] = -4.91297356E-01;
  COFD[25383] = 2.04115425E-02;
  COFD[25384] = -2.24475415E+01;
  COFD[25385] = 5.61233595E+00;
  COFD[25386] = -4.91420667E-01;
  COFD[25387] = 2.04217927E-02;
  COFD[25388] = -2.19786716E+01;
  COFD[25389] = 5.41031792E+00;
  COFD[25390] = -4.73134636E-01;
  COFD[25391] = 1.99412666E-02;
  COFD[25392] = -2.19906530E+01;
  COFD[25393] = 5.41031792E+00;
  COFD[25394] = -4.73134636E-01;
  COFD[25395] = 1.99412666E-02;
  COFD[25396] = -1.92384813E+01;
  COFD[25397] = 3.64878687E+00;
  COFD[25398] = -1.67486742E-01;
  COFD[25399] = 3.65938254E-03;
  COFD[25400] = -2.00260065E+01;
  COFD[25401] = 4.04058640E+00;
  COFD[25402] = -2.29270334E-01;
  COFD[25403] = 6.76606770E-03;
  COFD[25404] = -2.26084502E+01;
  COFD[25405] = 5.30201231E+00;
  COFD[25406] = -4.26456960E-01;
  COFD[25407] = 1.66213106E-02;
  COFD[25408] = -2.24952591E+01;
  COFD[25409] = 5.35215936E+00;
  COFD[25410] = -4.34996256E-01;
  COFD[25411] = 1.70721706E-02;
  COFD[25412] = -2.25945370E+01;
  COFD[25413] = 5.30201231E+00;
  COFD[25414] = -4.26456960E-01;
  COFD[25415] = 1.66213106E-02;
  COFD[25416] = -2.22879818E+01;
  COFD[25417] = 5.21396996E+00;
  COFD[25418] = -4.11281412E-01;
  COFD[25419] = 1.58150334E-02;
  COFD[25420] = -2.23037777E+01;
  COFD[25421] = 5.21396996E+00;
  COFD[25422] = -4.11281412E-01;
  COFD[25423] = 1.58150334E-02;
  COFD[25424] = -2.02458098E+01;
  COFD[25425] = 4.04040564E+00;
  COFD[25426] = -2.27103382E-01;
  COFD[25427] = 6.58016011E-03;
  COFD[25428] = -2.25975141E+01;
  COFD[25429] = 5.60684388E+00;
  COFD[25430] = -4.89089198E-01;
  COFD[25431] = 2.02565724E-02;
  COFD[25432] = -2.02547568E+01;
  COFD[25433] = 4.04040564E+00;
  COFD[25434] = -2.27103382E-01;
  COFD[25435] = 6.58016011E-03;
  COFD[25436] = -2.02547568E+01;
  COFD[25437] = 4.04040564E+00;
  COFD[25438] = -2.27103382E-01;
  COFD[25439] = 6.58016011E-03;
  COFD[25440] = -2.02634463E+01;
  COFD[25441] = 4.04040564E+00;
  COFD[25442] = -2.27103382E-01;
  COFD[25443] = 6.58016011E-03;
  COFD[25444] = -2.18339999E+01;
  COFD[25445] = 4.81663452E+00;
  COFD[25446] = -3.47310112E-01;
  COFD[25447] = 1.25507777E-02;
  COFD[25448] = -2.20612721E+01;
  COFD[25449] = 4.93948492E+00;
  COFD[25450] = -3.66694137E-01;
  COFD[25451] = 1.35271560E-02;
  COFD[25452] = -2.16378415E+01;
  COFD[25453] = 4.61311728E+00;
  COFD[25454] = -3.14979067E-01;
  COFD[25455] = 1.09172113E-02;
  COFD[25456] = -2.22609630E+01;
  COFD[25457] = 4.97379817E+00;
  COFD[25458] = -3.72099307E-01;
  COFD[25459] = 1.37992814E-02;
  COFD[25460] = -2.16535499E+01;
  COFD[25461] = 4.62479073E+00;
  COFD[25462] = -3.16843576E-01;
  COFD[25463] = 1.10117295E-02;
  COFD[25464] = -2.16599161E+01;
  COFD[25465] = 4.62479073E+00;
  COFD[25466] = -3.16843576E-01;
  COFD[25467] = 1.10117295E-02;
  COFD[25468] = -2.18056042E+01;
  COFD[25469] = 4.64312709E+00;
  COFD[25470] = -3.19764076E-01;
  COFD[25471] = 1.11595790E-02;
  COFD[25472] = -2.05316670E+01;
  COFD[25473] = 4.04453292E+00;
  COFD[25474] = -2.27725339E-01;
  COFD[25475] = 6.61050628E-03;
  COFD[25476] = -2.00647907E+01;
  COFD[25477] = 3.86026424E+00;
  COFD[25478] = -2.02407333E-01;
  COFD[25479] = 5.46907954E-03;
  COFD[25480] = -2.07088264E+01;
  COFD[25481] = 4.13288186E+00;
  COFD[25482] = -2.41054643E-01;
  COFD[25483] = 7.26113993E-03;
  COFD[25484] = -2.13196973E+01;
  COFD[25485] = 4.34433003E+00;
  COFD[25486] = -2.73207428E-01;
  COFD[25487] = 8.83823384E-03;
  COFD[25488] = -2.14443150E+01;
  COFD[25489] = 4.40560301E+00;
  COFD[25490] = -2.83033303E-01;
  COFD[25491] = 9.33807331E-03;
  COFD[25492] = -1.98908327E+01;
  COFD[25493] = 3.81317728E+00;
  COFD[25494] = -1.92528490E-01;
  COFD[25495] = 4.88612928E-03;
  COFD[25496] = -1.96275498E+01;
  COFD[25497] = 3.74985445E+00;
  COFD[25498] = -1.82818055E-01;
  COFD[25499] = 4.40846246E-03;
  COFD[25500] = -1.96353326E+01;
  COFD[25501] = 3.74985445E+00;
  COFD[25502] = -1.82818055E-01;
  COFD[25503] = 4.40846246E-03;
  COFD[25504] = -2.02529779E+01;
  COFD[25505] = 3.98291296E+00;
  COFD[25506] = -2.18459468E-01;
  COFD[25507] = 6.15957476E-03;
  COFD[25508] = -2.02219152E+01;
  COFD[25509] = 3.91540504E+00;
  COFD[25510] = -2.10676561E-01;
  COFD[25511] = 5.87107784E-03;
  COFD[25512] = -2.09376776E+01;
  COFD[25513] = 4.24310133E+00;
  COFD[25514] = -2.57732017E-01;
  COFD[25515] = 8.07685243E-03;
  COFD[25516] = -1.98854459E+01;
  COFD[25517] = 3.66237031E+00;
  COFD[25518] = -1.69533805E-01;
  COFD[25519] = 3.75902257E-03;
  COFD[25520] = -2.00413049E+01;
  COFD[25521] = 3.66237031E+00;
  COFD[25522] = -1.69533805E-01;
  COFD[25523] = 3.75902257E-03;
  COFD[25524] = -1.99557130E+01;
  COFD[25525] = 3.66237031E+00;
  COFD[25526] = -1.69533805E-01;
  COFD[25527] = 3.75902257E-03;
  COFD[25528] = -1.99557130E+01;
  COFD[25529] = 3.66237031E+00;
  COFD[25530] = -1.69533805E-01;
  COFD[25531] = 3.75902257E-03;
  COFD[25532] = -2.19508560E+01;
  COFD[25533] = 4.87914567E+00;
  COFD[25534] = -3.57172857E-01;
  COFD[25535] = 1.30475227E-02;
  COFD[25536] = -2.18242110E+01;
  COFD[25537] = 4.81663452E+00;
  COFD[25538] = -3.47310112E-01;
  COFD[25539] = 1.25507777E-02;
  COFD[25540] = -2.29275994E+01;
  COFD[25541] = 5.48746342E+00;
  COFD[25542] = -4.59361316E-01;
  COFD[25543] = 1.83995990E-02;
  COFD[25544] = -2.23998269E+01;
  COFD[25545] = 5.61234798E+00;
  COFD[25546] = -4.91297356E-01;
  COFD[25547] = 2.04115425E-02;
  COFD[25548] = -2.00556963E+01;
  COFD[25549] = 3.66436790E+00;
  COFD[25550] = -1.71934261E-01;
  COFD[25551] = 3.95119075E-03;
  COFD[25552] = -1.98658124E+01;
  COFD[25553] = 3.69537879E+00;
  COFD[25554] = -1.77145108E-01;
  COFD[25555] = 4.22399720E-03;
  COFD[25556] = -1.98612587E+01;
  COFD[25557] = 3.69537879E+00;
  COFD[25558] = -1.77145108E-01;
  COFD[25559] = 4.22399720E-03;
  COFD[25560] = -1.99821344E+01;
  COFD[25561] = 3.72431023E+00;
  COFD[25562] = -1.81904593E-01;
  COFD[25563] = 4.46988587E-03;
  COFD[25564] = -2.00589344E+01;
  COFD[25565] = 3.70669288E+00;
  COFD[25566] = -1.76242142E-01;
  COFD[25567] = 4.08636872E-03;
  COFD[25568] = -2.00006729E+01;
  COFD[25569] = 3.66436790E+00;
  COFD[25570] = -1.71934261E-01;
  COFD[25571] = 3.95119075E-03;
  COFD[25572] = -1.99971115E+01;
  COFD[25573] = 3.66436790E+00;
  COFD[25574] = -1.71934261E-01;
  COFD[25575] = 3.95119075E-03;
  COFD[25576] = -2.05948978E+01;
  COFD[25577] = 3.87488983E+00;
  COFD[25578] = -2.02017141E-01;
  COFD[25579] = 5.35367024E-03;
  COFD[25580] = -2.05920255E+01;
  COFD[25581] = 3.87488983E+00;
  COFD[25582] = -2.02017141E-01;
  COFD[25583] = 5.35367024E-03;
  COFD[25584] = -2.05920255E+01;
  COFD[25585] = 3.87488983E+00;
  COFD[25586] = -2.02017141E-01;
  COFD[25587] = 5.35367024E-03;
  COFD[25588] = -2.05920255E+01;
  COFD[25589] = 3.87488983E+00;
  COFD[25590] = -2.02017141E-01;
  COFD[25591] = 5.35367024E-03;
  COFD[25592] = -2.05920255E+01;
  COFD[25593] = 3.87488983E+00;
  COFD[25594] = -2.02017141E-01;
  COFD[25595] = 5.35367024E-03;
  COFD[25596] = -2.05746135E+01;
  COFD[25597] = 3.87685237E+00;
  COFD[25598] = -2.02572236E-01;
  COFD[25599] = 5.38978456E-03;
  COFD[25600] = -2.05746135E+01;
  COFD[25601] = 3.87685237E+00;
  COFD[25602] = -2.02572236E-01;
  COFD[25603] = 5.38978456E-03;
  COFD[25604] = -1.91456103E+01;
  COFD[25605] = 3.15403394E+00;
  COFD[25606] = -9.49161276E-02;
  COFD[25607] = 1.99055118E-04;
  COFD[25608] = -1.91456103E+01;
  COFD[25609] = 3.15403394E+00;
  COFD[25610] = -9.49161276E-02;
  COFD[25611] = 1.99055118E-04;
  COFD[25612] = -1.91456103E+01;
  COFD[25613] = 3.15403394E+00;
  COFD[25614] = -9.49161276E-02;
  COFD[25615] = 1.99055118E-04;
  COFD[25616] = -1.91456103E+01;
  COFD[25617] = 3.15403394E+00;
  COFD[25618] = -9.49161276E-02;
  COFD[25619] = 1.99055118E-04;
  COFD[25620] = -1.91456103E+01;
  COFD[25621] = 3.15403394E+00;
  COFD[25622] = -9.49161276E-02;
  COFD[25623] = 1.99055118E-04;
  COFD[25624] = -1.91456103E+01;
  COFD[25625] = 3.15403394E+00;
  COFD[25626] = -9.49161276E-02;
  COFD[25627] = 1.99055118E-04;
  COFD[25628] = -1.91456103E+01;
  COFD[25629] = 3.15403394E+00;
  COFD[25630] = -9.49161276E-02;
  COFD[25631] = 1.99055118E-04;
  COFD[25632] = -1.91456103E+01;
  COFD[25633] = 3.15403394E+00;
  COFD[25634] = -9.49161276E-02;
  COFD[25635] = 1.99055118E-04;
  COFD[25636] = -1.91456103E+01;
  COFD[25637] = 3.15403394E+00;
  COFD[25638] = -9.49161276E-02;
  COFD[25639] = 1.99055118E-04;
  COFD[25640] = -1.91456103E+01;
  COFD[25641] = 3.15403394E+00;
  COFD[25642] = -9.49161276E-02;
  COFD[25643] = 1.99055118E-04;
  COFD[25644] = -1.91456103E+01;
  COFD[25645] = 3.15403394E+00;
  COFD[25646] = -9.49161276E-02;
  COFD[25647] = 1.99055118E-04;
  COFD[25648] = -1.91456103E+01;
  COFD[25649] = 3.15403394E+00;
  COFD[25650] = -9.49161276E-02;
  COFD[25651] = 1.99055118E-04;
  COFD[25652] = -1.87460549E+01;
  COFD[25653] = 2.87978833E+00;
  COFD[25654] = -5.44866013E-02;
  COFD[25655] = -1.73658318E-03;
  COFD[25656] = -1.87460549E+01;
  COFD[25657] = 2.87978833E+00;
  COFD[25658] = -5.44866013E-02;
  COFD[25659] = -1.73658318E-03;
  COFD[25660] = -1.87460549E+01;
  COFD[25661] = 2.87978833E+00;
  COFD[25662] = -5.44866013E-02;
  COFD[25663] = -1.73658318E-03;
  COFD[25664] = -1.87460549E+01;
  COFD[25665] = 2.87978833E+00;
  COFD[25666] = -5.44866013E-02;
  COFD[25667] = -1.73658318E-03;
  COFD[25668] = -1.99684327E+01;
  COFD[25669] = 3.54868094E+00;
  COFD[25670] = -1.52503015E-01;
  COFD[25671] = 2.93310249E-03;
  COFD[25672] = -1.99684327E+01;
  COFD[25673] = 3.54868094E+00;
  COFD[25674] = -1.52503015E-01;
  COFD[25675] = 2.93310249E-03;
  COFD[25676] = -1.89007696E+01;
  COFD[25677] = 3.01491854E+00;
  COFD[25678] = -7.45185018E-02;
  COFD[25679] = -7.71760336E-04;
  COFD[25680] = -1.89007696E+01;
  COFD[25681] = 3.01491854E+00;
  COFD[25682] = -7.45185018E-02;
  COFD[25683] = -7.71760336E-04;
  COFD[25684] = -1.89007696E+01;
  COFD[25685] = 3.01491854E+00;
  COFD[25686] = -7.45185018E-02;
  COFD[25687] = -7.71760336E-04;
  COFD[25688] = -1.89007696E+01;
  COFD[25689] = 3.01491854E+00;
  COFD[25690] = -7.45185018E-02;
  COFD[25691] = -7.71760336E-04;
  COFD[25692] = -2.17873416E+01;
  COFD[25693] = 5.37038209E+00;
  COFD[25694] = -4.70276061E-01;
  COFD[25695] = 1.99108515E-02;
  COFD[25696] = -2.07558370E+01;
  COFD[25697] = 5.61220925E+00;
  COFD[25698] = -4.91040098E-01;
  COFD[25699] = 2.03909682E-02;
  COFD[25700] = -1.72085780E+01;
  COFD[25701] = 4.26597898E+00;
  COFD[25702] = -3.40497726E-01;
  COFD[25703] = 1.48284962E-02;
  COFD[25704] = -2.06859442E+01;
  COFD[25705] = 5.15084743E+00;
  COFD[25706] = -4.46166870E-01;
  COFD[25707] = 1.90405241E-02;
  COFD[25708] = -2.19892992E+01;
  COFD[25709] = 5.41528536E+00;
  COFD[25710] = -4.73395924E-01;
  COFD[25711] = 1.99371023E-02;
  COFD[25712] = -2.07130812E+01;
  COFD[25713] = 5.15084743E+00;
  COFD[25714] = -4.46166870E-01;
  COFD[25715] = 1.90405241E-02;
  COFD[25716] = -1.72072974E+01;
  COFD[25717] = 2.92077981E+00;
  COFD[25718] = -6.20181094E-02;
  COFD[25719] = -1.31459730E-03;
  COFD[25720] = -2.18067293E+01;
  COFD[25721] = 5.37381914E+00;
  COFD[25722] = -4.70526306E-01;
  COFD[25723] = 1.99137622E-02;
  COFD[25724] = -1.92245436E+01;
  COFD[25725] = 3.64878687E+00;
  COFD[25726] = -1.67486742E-01;
  COFD[25727] = 3.65938254E-03;
  COFD[25728] = -2.26542292E+01;
  COFD[25729] = 5.30716061E+00;
  COFD[25730] = -4.27308091E-01;
  COFD[25731] = 1.66655289E-02;
  COFD[25732] = -2.24310667E+01;
  COFD[25733] = 5.61234798E+00;
  COFD[25734] = -4.91297356E-01;
  COFD[25735] = 2.04115425E-02;
  COFD[25736] = -2.24475415E+01;
  COFD[25737] = 5.61233595E+00;
  COFD[25738] = -4.91420667E-01;
  COFD[25739] = 2.04217927E-02;
  COFD[25740] = -2.19786716E+01;
  COFD[25741] = 5.41031792E+00;
  COFD[25742] = -4.73134636E-01;
  COFD[25743] = 1.99412666E-02;
  COFD[25744] = -2.19906530E+01;
  COFD[25745] = 5.41031792E+00;
  COFD[25746] = -4.73134636E-01;
  COFD[25747] = 1.99412666E-02;
  COFD[25748] = -1.92384813E+01;
  COFD[25749] = 3.64878687E+00;
  COFD[25750] = -1.67486742E-01;
  COFD[25751] = 3.65938254E-03;
  COFD[25752] = -2.00260065E+01;
  COFD[25753] = 4.04058640E+00;
  COFD[25754] = -2.29270334E-01;
  COFD[25755] = 6.76606770E-03;
  COFD[25756] = -2.26084502E+01;
  COFD[25757] = 5.30201231E+00;
  COFD[25758] = -4.26456960E-01;
  COFD[25759] = 1.66213106E-02;
  COFD[25760] = -2.24952591E+01;
  COFD[25761] = 5.35215936E+00;
  COFD[25762] = -4.34996256E-01;
  COFD[25763] = 1.70721706E-02;
  COFD[25764] = -2.25945370E+01;
  COFD[25765] = 5.30201231E+00;
  COFD[25766] = -4.26456960E-01;
  COFD[25767] = 1.66213106E-02;
  COFD[25768] = -2.22879818E+01;
  COFD[25769] = 5.21396996E+00;
  COFD[25770] = -4.11281412E-01;
  COFD[25771] = 1.58150334E-02;
  COFD[25772] = -2.23037777E+01;
  COFD[25773] = 5.21396996E+00;
  COFD[25774] = -4.11281412E-01;
  COFD[25775] = 1.58150334E-02;
  COFD[25776] = -2.02458098E+01;
  COFD[25777] = 4.04040564E+00;
  COFD[25778] = -2.27103382E-01;
  COFD[25779] = 6.58016011E-03;
  COFD[25780] = -2.25975141E+01;
  COFD[25781] = 5.60684388E+00;
  COFD[25782] = -4.89089198E-01;
  COFD[25783] = 2.02565724E-02;
  COFD[25784] = -2.02547568E+01;
  COFD[25785] = 4.04040564E+00;
  COFD[25786] = -2.27103382E-01;
  COFD[25787] = 6.58016011E-03;
  COFD[25788] = -2.02547568E+01;
  COFD[25789] = 4.04040564E+00;
  COFD[25790] = -2.27103382E-01;
  COFD[25791] = 6.58016011E-03;
  COFD[25792] = -2.02634463E+01;
  COFD[25793] = 4.04040564E+00;
  COFD[25794] = -2.27103382E-01;
  COFD[25795] = 6.58016011E-03;
  COFD[25796] = -2.18339999E+01;
  COFD[25797] = 4.81663452E+00;
  COFD[25798] = -3.47310112E-01;
  COFD[25799] = 1.25507777E-02;
  COFD[25800] = -2.20612721E+01;
  COFD[25801] = 4.93948492E+00;
  COFD[25802] = -3.66694137E-01;
  COFD[25803] = 1.35271560E-02;
  COFD[25804] = -2.16378415E+01;
  COFD[25805] = 4.61311728E+00;
  COFD[25806] = -3.14979067E-01;
  COFD[25807] = 1.09172113E-02;
  COFD[25808] = -2.22609630E+01;
  COFD[25809] = 4.97379817E+00;
  COFD[25810] = -3.72099307E-01;
  COFD[25811] = 1.37992814E-02;
  COFD[25812] = -2.16535499E+01;
  COFD[25813] = 4.62479073E+00;
  COFD[25814] = -3.16843576E-01;
  COFD[25815] = 1.10117295E-02;
  COFD[25816] = -2.16599161E+01;
  COFD[25817] = 4.62479073E+00;
  COFD[25818] = -3.16843576E-01;
  COFD[25819] = 1.10117295E-02;
  COFD[25820] = -2.18056042E+01;
  COFD[25821] = 4.64312709E+00;
  COFD[25822] = -3.19764076E-01;
  COFD[25823] = 1.11595790E-02;
  COFD[25824] = -2.05316670E+01;
  COFD[25825] = 4.04453292E+00;
  COFD[25826] = -2.27725339E-01;
  COFD[25827] = 6.61050628E-03;
  COFD[25828] = -2.00647907E+01;
  COFD[25829] = 3.86026424E+00;
  COFD[25830] = -2.02407333E-01;
  COFD[25831] = 5.46907954E-03;
  COFD[25832] = -2.07088264E+01;
  COFD[25833] = 4.13288186E+00;
  COFD[25834] = -2.41054643E-01;
  COFD[25835] = 7.26113993E-03;
  COFD[25836] = -2.13196973E+01;
  COFD[25837] = 4.34433003E+00;
  COFD[25838] = -2.73207428E-01;
  COFD[25839] = 8.83823384E-03;
  COFD[25840] = -2.14443150E+01;
  COFD[25841] = 4.40560301E+00;
  COFD[25842] = -2.83033303E-01;
  COFD[25843] = 9.33807331E-03;
  COFD[25844] = -1.98908327E+01;
  COFD[25845] = 3.81317728E+00;
  COFD[25846] = -1.92528490E-01;
  COFD[25847] = 4.88612928E-03;
  COFD[25848] = -1.96275498E+01;
  COFD[25849] = 3.74985445E+00;
  COFD[25850] = -1.82818055E-01;
  COFD[25851] = 4.40846246E-03;
  COFD[25852] = -1.96353326E+01;
  COFD[25853] = 3.74985445E+00;
  COFD[25854] = -1.82818055E-01;
  COFD[25855] = 4.40846246E-03;
  COFD[25856] = -2.02529779E+01;
  COFD[25857] = 3.98291296E+00;
  COFD[25858] = -2.18459468E-01;
  COFD[25859] = 6.15957476E-03;
  COFD[25860] = -2.02219152E+01;
  COFD[25861] = 3.91540504E+00;
  COFD[25862] = -2.10676561E-01;
  COFD[25863] = 5.87107784E-03;
  COFD[25864] = -2.09376776E+01;
  COFD[25865] = 4.24310133E+00;
  COFD[25866] = -2.57732017E-01;
  COFD[25867] = 8.07685243E-03;
  COFD[25868] = -1.98854459E+01;
  COFD[25869] = 3.66237031E+00;
  COFD[25870] = -1.69533805E-01;
  COFD[25871] = 3.75902257E-03;
  COFD[25872] = -2.00413049E+01;
  COFD[25873] = 3.66237031E+00;
  COFD[25874] = -1.69533805E-01;
  COFD[25875] = 3.75902257E-03;
  COFD[25876] = -1.99557130E+01;
  COFD[25877] = 3.66237031E+00;
  COFD[25878] = -1.69533805E-01;
  COFD[25879] = 3.75902257E-03;
  COFD[25880] = -1.99557130E+01;
  COFD[25881] = 3.66237031E+00;
  COFD[25882] = -1.69533805E-01;
  COFD[25883] = 3.75902257E-03;
  COFD[25884] = -2.19508560E+01;
  COFD[25885] = 4.87914567E+00;
  COFD[25886] = -3.57172857E-01;
  COFD[25887] = 1.30475227E-02;
  COFD[25888] = -2.18242110E+01;
  COFD[25889] = 4.81663452E+00;
  COFD[25890] = -3.47310112E-01;
  COFD[25891] = 1.25507777E-02;
  COFD[25892] = -2.29275994E+01;
  COFD[25893] = 5.48746342E+00;
  COFD[25894] = -4.59361316E-01;
  COFD[25895] = 1.83995990E-02;
  COFD[25896] = -2.23998269E+01;
  COFD[25897] = 5.61234798E+00;
  COFD[25898] = -4.91297356E-01;
  COFD[25899] = 2.04115425E-02;
  COFD[25900] = -2.00556963E+01;
  COFD[25901] = 3.66436790E+00;
  COFD[25902] = -1.71934261E-01;
  COFD[25903] = 3.95119075E-03;
  COFD[25904] = -1.98658124E+01;
  COFD[25905] = 3.69537879E+00;
  COFD[25906] = -1.77145108E-01;
  COFD[25907] = 4.22399720E-03;
  COFD[25908] = -1.98612587E+01;
  COFD[25909] = 3.69537879E+00;
  COFD[25910] = -1.77145108E-01;
  COFD[25911] = 4.22399720E-03;
  COFD[25912] = -1.99821344E+01;
  COFD[25913] = 3.72431023E+00;
  COFD[25914] = -1.81904593E-01;
  COFD[25915] = 4.46988587E-03;
  COFD[25916] = -2.00589344E+01;
  COFD[25917] = 3.70669288E+00;
  COFD[25918] = -1.76242142E-01;
  COFD[25919] = 4.08636872E-03;
  COFD[25920] = -2.00006729E+01;
  COFD[25921] = 3.66436790E+00;
  COFD[25922] = -1.71934261E-01;
  COFD[25923] = 3.95119075E-03;
  COFD[25924] = -1.99971115E+01;
  COFD[25925] = 3.66436790E+00;
  COFD[25926] = -1.71934261E-01;
  COFD[25927] = 3.95119075E-03;
  COFD[25928] = -2.05948978E+01;
  COFD[25929] = 3.87488983E+00;
  COFD[25930] = -2.02017141E-01;
  COFD[25931] = 5.35367024E-03;
  COFD[25932] = -2.05920255E+01;
  COFD[25933] = 3.87488983E+00;
  COFD[25934] = -2.02017141E-01;
  COFD[25935] = 5.35367024E-03;
  COFD[25936] = -2.05920255E+01;
  COFD[25937] = 3.87488983E+00;
  COFD[25938] = -2.02017141E-01;
  COFD[25939] = 5.35367024E-03;
  COFD[25940] = -2.05920255E+01;
  COFD[25941] = 3.87488983E+00;
  COFD[25942] = -2.02017141E-01;
  COFD[25943] = 5.35367024E-03;
  COFD[25944] = -2.05920255E+01;
  COFD[25945] = 3.87488983E+00;
  COFD[25946] = -2.02017141E-01;
  COFD[25947] = 5.35367024E-03;
  COFD[25948] = -2.05746135E+01;
  COFD[25949] = 3.87685237E+00;
  COFD[25950] = -2.02572236E-01;
  COFD[25951] = 5.38978456E-03;
  COFD[25952] = -2.05746135E+01;
  COFD[25953] = 3.87685237E+00;
  COFD[25954] = -2.02572236E-01;
  COFD[25955] = 5.38978456E-03;
  COFD[25956] = -1.91456103E+01;
  COFD[25957] = 3.15403394E+00;
  COFD[25958] = -9.49161276E-02;
  COFD[25959] = 1.99055118E-04;
  COFD[25960] = -1.91456103E+01;
  COFD[25961] = 3.15403394E+00;
  COFD[25962] = -9.49161276E-02;
  COFD[25963] = 1.99055118E-04;
  COFD[25964] = -1.91456103E+01;
  COFD[25965] = 3.15403394E+00;
  COFD[25966] = -9.49161276E-02;
  COFD[25967] = 1.99055118E-04;
  COFD[25968] = -1.91456103E+01;
  COFD[25969] = 3.15403394E+00;
  COFD[25970] = -9.49161276E-02;
  COFD[25971] = 1.99055118E-04;
  COFD[25972] = -1.91456103E+01;
  COFD[25973] = 3.15403394E+00;
  COFD[25974] = -9.49161276E-02;
  COFD[25975] = 1.99055118E-04;
  COFD[25976] = -1.91456103E+01;
  COFD[25977] = 3.15403394E+00;
  COFD[25978] = -9.49161276E-02;
  COFD[25979] = 1.99055118E-04;
  COFD[25980] = -1.91456103E+01;
  COFD[25981] = 3.15403394E+00;
  COFD[25982] = -9.49161276E-02;
  COFD[25983] = 1.99055118E-04;
  COFD[25984] = -1.91456103E+01;
  COFD[25985] = 3.15403394E+00;
  COFD[25986] = -9.49161276E-02;
  COFD[25987] = 1.99055118E-04;
  COFD[25988] = -1.91456103E+01;
  COFD[25989] = 3.15403394E+00;
  COFD[25990] = -9.49161276E-02;
  COFD[25991] = 1.99055118E-04;
  COFD[25992] = -1.91456103E+01;
  COFD[25993] = 3.15403394E+00;
  COFD[25994] = -9.49161276E-02;
  COFD[25995] = 1.99055118E-04;
  COFD[25996] = -1.91456103E+01;
  COFD[25997] = 3.15403394E+00;
  COFD[25998] = -9.49161276E-02;
  COFD[25999] = 1.99055118E-04;
  COFD[26000] = -1.91456103E+01;
  COFD[26001] = 3.15403394E+00;
  COFD[26002] = -9.49161276E-02;
  COFD[26003] = 1.99055118E-04;
  COFD[26004] = -1.87460549E+01;
  COFD[26005] = 2.87978833E+00;
  COFD[26006] = -5.44866013E-02;
  COFD[26007] = -1.73658318E-03;
  COFD[26008] = -1.87460549E+01;
  COFD[26009] = 2.87978833E+00;
  COFD[26010] = -5.44866013E-02;
  COFD[26011] = -1.73658318E-03;
  COFD[26012] = -1.87460549E+01;
  COFD[26013] = 2.87978833E+00;
  COFD[26014] = -5.44866013E-02;
  COFD[26015] = -1.73658318E-03;
  COFD[26016] = -1.87460549E+01;
  COFD[26017] = 2.87978833E+00;
  COFD[26018] = -5.44866013E-02;
  COFD[26019] = -1.73658318E-03;
  COFD[26020] = -1.99684327E+01;
  COFD[26021] = 3.54868094E+00;
  COFD[26022] = -1.52503015E-01;
  COFD[26023] = 2.93310249E-03;
  COFD[26024] = -1.99684327E+01;
  COFD[26025] = 3.54868094E+00;
  COFD[26026] = -1.52503015E-01;
  COFD[26027] = 2.93310249E-03;
  COFD[26028] = -1.89007696E+01;
  COFD[26029] = 3.01491854E+00;
  COFD[26030] = -7.45185018E-02;
  COFD[26031] = -7.71760336E-04;
  COFD[26032] = -1.89007696E+01;
  COFD[26033] = 3.01491854E+00;
  COFD[26034] = -7.45185018E-02;
  COFD[26035] = -7.71760336E-04;
  COFD[26036] = -1.89007696E+01;
  COFD[26037] = 3.01491854E+00;
  COFD[26038] = -7.45185018E-02;
  COFD[26039] = -7.71760336E-04;
  COFD[26040] = -1.89007696E+01;
  COFD[26041] = 3.01491854E+00;
  COFD[26042] = -7.45185018E-02;
  COFD[26043] = -7.71760336E-04;
  COFD[26044] = -2.17873416E+01;
  COFD[26045] = 5.37038209E+00;
  COFD[26046] = -4.70276061E-01;
  COFD[26047] = 1.99108515E-02;
  COFD[26048] = -2.07558370E+01;
  COFD[26049] = 5.61220925E+00;
  COFD[26050] = -4.91040098E-01;
  COFD[26051] = 2.03909682E-02;
  COFD[26052] = -1.72085780E+01;
  COFD[26053] = 4.26597898E+00;
  COFD[26054] = -3.40497726E-01;
  COFD[26055] = 1.48284962E-02;
  COFD[26056] = -2.06859442E+01;
  COFD[26057] = 5.15084743E+00;
  COFD[26058] = -4.46166870E-01;
  COFD[26059] = 1.90405241E-02;
  COFD[26060] = -2.19892992E+01;
  COFD[26061] = 5.41528536E+00;
  COFD[26062] = -4.73395924E-01;
  COFD[26063] = 1.99371023E-02;
  COFD[26064] = -2.07130812E+01;
  COFD[26065] = 5.15084743E+00;
  COFD[26066] = -4.46166870E-01;
  COFD[26067] = 1.90405241E-02;
  COFD[26068] = -1.72072974E+01;
  COFD[26069] = 2.92077981E+00;
  COFD[26070] = -6.20181094E-02;
  COFD[26071] = -1.31459730E-03;
  COFD[26072] = -2.18067293E+01;
  COFD[26073] = 5.37381914E+00;
  COFD[26074] = -4.70526306E-01;
  COFD[26075] = 1.99137622E-02;
  COFD[26076] = -1.92245436E+01;
  COFD[26077] = 3.64878687E+00;
  COFD[26078] = -1.67486742E-01;
  COFD[26079] = 3.65938254E-03;
  COFD[26080] = -2.26542292E+01;
  COFD[26081] = 5.30716061E+00;
  COFD[26082] = -4.27308091E-01;
  COFD[26083] = 1.66655289E-02;
  COFD[26084] = -2.24310667E+01;
  COFD[26085] = 5.61234798E+00;
  COFD[26086] = -4.91297356E-01;
  COFD[26087] = 2.04115425E-02;
  COFD[26088] = -2.24475415E+01;
  COFD[26089] = 5.61233595E+00;
  COFD[26090] = -4.91420667E-01;
  COFD[26091] = 2.04217927E-02;
  COFD[26092] = -2.19786716E+01;
  COFD[26093] = 5.41031792E+00;
  COFD[26094] = -4.73134636E-01;
  COFD[26095] = 1.99412666E-02;
  COFD[26096] = -2.19906530E+01;
  COFD[26097] = 5.41031792E+00;
  COFD[26098] = -4.73134636E-01;
  COFD[26099] = 1.99412666E-02;
  COFD[26100] = -1.92384813E+01;
  COFD[26101] = 3.64878687E+00;
  COFD[26102] = -1.67486742E-01;
  COFD[26103] = 3.65938254E-03;
  COFD[26104] = -2.00260065E+01;
  COFD[26105] = 4.04058640E+00;
  COFD[26106] = -2.29270334E-01;
  COFD[26107] = 6.76606770E-03;
  COFD[26108] = -2.26084502E+01;
  COFD[26109] = 5.30201231E+00;
  COFD[26110] = -4.26456960E-01;
  COFD[26111] = 1.66213106E-02;
  COFD[26112] = -2.24952591E+01;
  COFD[26113] = 5.35215936E+00;
  COFD[26114] = -4.34996256E-01;
  COFD[26115] = 1.70721706E-02;
  COFD[26116] = -2.25945370E+01;
  COFD[26117] = 5.30201231E+00;
  COFD[26118] = -4.26456960E-01;
  COFD[26119] = 1.66213106E-02;
  COFD[26120] = -2.22879818E+01;
  COFD[26121] = 5.21396996E+00;
  COFD[26122] = -4.11281412E-01;
  COFD[26123] = 1.58150334E-02;
  COFD[26124] = -2.23037777E+01;
  COFD[26125] = 5.21396996E+00;
  COFD[26126] = -4.11281412E-01;
  COFD[26127] = 1.58150334E-02;
  COFD[26128] = -2.02458098E+01;
  COFD[26129] = 4.04040564E+00;
  COFD[26130] = -2.27103382E-01;
  COFD[26131] = 6.58016011E-03;
  COFD[26132] = -2.25975141E+01;
  COFD[26133] = 5.60684388E+00;
  COFD[26134] = -4.89089198E-01;
  COFD[26135] = 2.02565724E-02;
  COFD[26136] = -2.02547568E+01;
  COFD[26137] = 4.04040564E+00;
  COFD[26138] = -2.27103382E-01;
  COFD[26139] = 6.58016011E-03;
  COFD[26140] = -2.02547568E+01;
  COFD[26141] = 4.04040564E+00;
  COFD[26142] = -2.27103382E-01;
  COFD[26143] = 6.58016011E-03;
  COFD[26144] = -2.02634463E+01;
  COFD[26145] = 4.04040564E+00;
  COFD[26146] = -2.27103382E-01;
  COFD[26147] = 6.58016011E-03;
  COFD[26148] = -2.18339999E+01;
  COFD[26149] = 4.81663452E+00;
  COFD[26150] = -3.47310112E-01;
  COFD[26151] = 1.25507777E-02;
  COFD[26152] = -2.20612721E+01;
  COFD[26153] = 4.93948492E+00;
  COFD[26154] = -3.66694137E-01;
  COFD[26155] = 1.35271560E-02;
  COFD[26156] = -2.16378415E+01;
  COFD[26157] = 4.61311728E+00;
  COFD[26158] = -3.14979067E-01;
  COFD[26159] = 1.09172113E-02;
  COFD[26160] = -2.22609630E+01;
  COFD[26161] = 4.97379817E+00;
  COFD[26162] = -3.72099307E-01;
  COFD[26163] = 1.37992814E-02;
  COFD[26164] = -2.16535499E+01;
  COFD[26165] = 4.62479073E+00;
  COFD[26166] = -3.16843576E-01;
  COFD[26167] = 1.10117295E-02;
  COFD[26168] = -2.16599161E+01;
  COFD[26169] = 4.62479073E+00;
  COFD[26170] = -3.16843576E-01;
  COFD[26171] = 1.10117295E-02;
  COFD[26172] = -2.18056042E+01;
  COFD[26173] = 4.64312709E+00;
  COFD[26174] = -3.19764076E-01;
  COFD[26175] = 1.11595790E-02;
  COFD[26176] = -2.05316670E+01;
  COFD[26177] = 4.04453292E+00;
  COFD[26178] = -2.27725339E-01;
  COFD[26179] = 6.61050628E-03;
  COFD[26180] = -2.00647907E+01;
  COFD[26181] = 3.86026424E+00;
  COFD[26182] = -2.02407333E-01;
  COFD[26183] = 5.46907954E-03;
  COFD[26184] = -2.07088264E+01;
  COFD[26185] = 4.13288186E+00;
  COFD[26186] = -2.41054643E-01;
  COFD[26187] = 7.26113993E-03;
  COFD[26188] = -2.13196973E+01;
  COFD[26189] = 4.34433003E+00;
  COFD[26190] = -2.73207428E-01;
  COFD[26191] = 8.83823384E-03;
  COFD[26192] = -2.14443150E+01;
  COFD[26193] = 4.40560301E+00;
  COFD[26194] = -2.83033303E-01;
  COFD[26195] = 9.33807331E-03;
  COFD[26196] = -1.98908327E+01;
  COFD[26197] = 3.81317728E+00;
  COFD[26198] = -1.92528490E-01;
  COFD[26199] = 4.88612928E-03;
  COFD[26200] = -1.96275498E+01;
  COFD[26201] = 3.74985445E+00;
  COFD[26202] = -1.82818055E-01;
  COFD[26203] = 4.40846246E-03;
  COFD[26204] = -1.96353326E+01;
  COFD[26205] = 3.74985445E+00;
  COFD[26206] = -1.82818055E-01;
  COFD[26207] = 4.40846246E-03;
  COFD[26208] = -2.02529779E+01;
  COFD[26209] = 3.98291296E+00;
  COFD[26210] = -2.18459468E-01;
  COFD[26211] = 6.15957476E-03;
  COFD[26212] = -2.02219152E+01;
  COFD[26213] = 3.91540504E+00;
  COFD[26214] = -2.10676561E-01;
  COFD[26215] = 5.87107784E-03;
  COFD[26216] = -2.09376776E+01;
  COFD[26217] = 4.24310133E+00;
  COFD[26218] = -2.57732017E-01;
  COFD[26219] = 8.07685243E-03;
  COFD[26220] = -1.98854459E+01;
  COFD[26221] = 3.66237031E+00;
  COFD[26222] = -1.69533805E-01;
  COFD[26223] = 3.75902257E-03;
  COFD[26224] = -2.00413049E+01;
  COFD[26225] = 3.66237031E+00;
  COFD[26226] = -1.69533805E-01;
  COFD[26227] = 3.75902257E-03;
  COFD[26228] = -1.99557130E+01;
  COFD[26229] = 3.66237031E+00;
  COFD[26230] = -1.69533805E-01;
  COFD[26231] = 3.75902257E-03;
  COFD[26232] = -1.99557130E+01;
  COFD[26233] = 3.66237031E+00;
  COFD[26234] = -1.69533805E-01;
  COFD[26235] = 3.75902257E-03;
  COFD[26236] = -2.19508560E+01;
  COFD[26237] = 4.87914567E+00;
  COFD[26238] = -3.57172857E-01;
  COFD[26239] = 1.30475227E-02;
  COFD[26240] = -2.18242110E+01;
  COFD[26241] = 4.81663452E+00;
  COFD[26242] = -3.47310112E-01;
  COFD[26243] = 1.25507777E-02;
  COFD[26244] = -2.29275994E+01;
  COFD[26245] = 5.48746342E+00;
  COFD[26246] = -4.59361316E-01;
  COFD[26247] = 1.83995990E-02;
  COFD[26248] = -2.23998269E+01;
  COFD[26249] = 5.61234798E+00;
  COFD[26250] = -4.91297356E-01;
  COFD[26251] = 2.04115425E-02;
  COFD[26252] = -2.00556963E+01;
  COFD[26253] = 3.66436790E+00;
  COFD[26254] = -1.71934261E-01;
  COFD[26255] = 3.95119075E-03;
  COFD[26256] = -1.98658124E+01;
  COFD[26257] = 3.69537879E+00;
  COFD[26258] = -1.77145108E-01;
  COFD[26259] = 4.22399720E-03;
  COFD[26260] = -1.98612587E+01;
  COFD[26261] = 3.69537879E+00;
  COFD[26262] = -1.77145108E-01;
  COFD[26263] = 4.22399720E-03;
  COFD[26264] = -1.99821344E+01;
  COFD[26265] = 3.72431023E+00;
  COFD[26266] = -1.81904593E-01;
  COFD[26267] = 4.46988587E-03;
  COFD[26268] = -2.00589344E+01;
  COFD[26269] = 3.70669288E+00;
  COFD[26270] = -1.76242142E-01;
  COFD[26271] = 4.08636872E-03;
  COFD[26272] = -2.00006729E+01;
  COFD[26273] = 3.66436790E+00;
  COFD[26274] = -1.71934261E-01;
  COFD[26275] = 3.95119075E-03;
  COFD[26276] = -1.99971115E+01;
  COFD[26277] = 3.66436790E+00;
  COFD[26278] = -1.71934261E-01;
  COFD[26279] = 3.95119075E-03;
  COFD[26280] = -2.05948978E+01;
  COFD[26281] = 3.87488983E+00;
  COFD[26282] = -2.02017141E-01;
  COFD[26283] = 5.35367024E-03;
  COFD[26284] = -2.05920255E+01;
  COFD[26285] = 3.87488983E+00;
  COFD[26286] = -2.02017141E-01;
  COFD[26287] = 5.35367024E-03;
  COFD[26288] = -2.05920255E+01;
  COFD[26289] = 3.87488983E+00;
  COFD[26290] = -2.02017141E-01;
  COFD[26291] = 5.35367024E-03;
  COFD[26292] = -2.05920255E+01;
  COFD[26293] = 3.87488983E+00;
  COFD[26294] = -2.02017141E-01;
  COFD[26295] = 5.35367024E-03;
  COFD[26296] = -2.05920255E+01;
  COFD[26297] = 3.87488983E+00;
  COFD[26298] = -2.02017141E-01;
  COFD[26299] = 5.35367024E-03;
  COFD[26300] = -2.05746135E+01;
  COFD[26301] = 3.87685237E+00;
  COFD[26302] = -2.02572236E-01;
  COFD[26303] = 5.38978456E-03;
  COFD[26304] = -2.05746135E+01;
  COFD[26305] = 3.87685237E+00;
  COFD[26306] = -2.02572236E-01;
  COFD[26307] = 5.38978456E-03;
  COFD[26308] = -1.91456103E+01;
  COFD[26309] = 3.15403394E+00;
  COFD[26310] = -9.49161276E-02;
  COFD[26311] = 1.99055118E-04;
  COFD[26312] = -1.91456103E+01;
  COFD[26313] = 3.15403394E+00;
  COFD[26314] = -9.49161276E-02;
  COFD[26315] = 1.99055118E-04;
  COFD[26316] = -1.91456103E+01;
  COFD[26317] = 3.15403394E+00;
  COFD[26318] = -9.49161276E-02;
  COFD[26319] = 1.99055118E-04;
  COFD[26320] = -1.91456103E+01;
  COFD[26321] = 3.15403394E+00;
  COFD[26322] = -9.49161276E-02;
  COFD[26323] = 1.99055118E-04;
  COFD[26324] = -1.91456103E+01;
  COFD[26325] = 3.15403394E+00;
  COFD[26326] = -9.49161276E-02;
  COFD[26327] = 1.99055118E-04;
  COFD[26328] = -1.91456103E+01;
  COFD[26329] = 3.15403394E+00;
  COFD[26330] = -9.49161276E-02;
  COFD[26331] = 1.99055118E-04;
  COFD[26332] = -1.91456103E+01;
  COFD[26333] = 3.15403394E+00;
  COFD[26334] = -9.49161276E-02;
  COFD[26335] = 1.99055118E-04;
  COFD[26336] = -1.91456103E+01;
  COFD[26337] = 3.15403394E+00;
  COFD[26338] = -9.49161276E-02;
  COFD[26339] = 1.99055118E-04;
  COFD[26340] = -1.91456103E+01;
  COFD[26341] = 3.15403394E+00;
  COFD[26342] = -9.49161276E-02;
  COFD[26343] = 1.99055118E-04;
  COFD[26344] = -1.91456103E+01;
  COFD[26345] = 3.15403394E+00;
  COFD[26346] = -9.49161276E-02;
  COFD[26347] = 1.99055118E-04;
  COFD[26348] = -1.91456103E+01;
  COFD[26349] = 3.15403394E+00;
  COFD[26350] = -9.49161276E-02;
  COFD[26351] = 1.99055118E-04;
  COFD[26352] = -1.91456103E+01;
  COFD[26353] = 3.15403394E+00;
  COFD[26354] = -9.49161276E-02;
  COFD[26355] = 1.99055118E-04;
  COFD[26356] = -1.87460549E+01;
  COFD[26357] = 2.87978833E+00;
  COFD[26358] = -5.44866013E-02;
  COFD[26359] = -1.73658318E-03;
  COFD[26360] = -1.87460549E+01;
  COFD[26361] = 2.87978833E+00;
  COFD[26362] = -5.44866013E-02;
  COFD[26363] = -1.73658318E-03;
  COFD[26364] = -1.87460549E+01;
  COFD[26365] = 2.87978833E+00;
  COFD[26366] = -5.44866013E-02;
  COFD[26367] = -1.73658318E-03;
  COFD[26368] = -1.87460549E+01;
  COFD[26369] = 2.87978833E+00;
  COFD[26370] = -5.44866013E-02;
  COFD[26371] = -1.73658318E-03;
  COFD[26372] = -1.99684327E+01;
  COFD[26373] = 3.54868094E+00;
  COFD[26374] = -1.52503015E-01;
  COFD[26375] = 2.93310249E-03;
  COFD[26376] = -1.99684327E+01;
  COFD[26377] = 3.54868094E+00;
  COFD[26378] = -1.52503015E-01;
  COFD[26379] = 2.93310249E-03;
  COFD[26380] = -1.89007696E+01;
  COFD[26381] = 3.01491854E+00;
  COFD[26382] = -7.45185018E-02;
  COFD[26383] = -7.71760336E-04;
  COFD[26384] = -1.89007696E+01;
  COFD[26385] = 3.01491854E+00;
  COFD[26386] = -7.45185018E-02;
  COFD[26387] = -7.71760336E-04;
  COFD[26388] = -1.89007696E+01;
  COFD[26389] = 3.01491854E+00;
  COFD[26390] = -7.45185018E-02;
  COFD[26391] = -7.71760336E-04;
  COFD[26392] = -1.89007696E+01;
  COFD[26393] = 3.01491854E+00;
  COFD[26394] = -7.45185018E-02;
  COFD[26395] = -7.71760336E-04;
  COFD[26396] = -2.17873416E+01;
  COFD[26397] = 5.37038209E+00;
  COFD[26398] = -4.70276061E-01;
  COFD[26399] = 1.99108515E-02;
  COFD[26400] = -2.07558370E+01;
  COFD[26401] = 5.61220925E+00;
  COFD[26402] = -4.91040098E-01;
  COFD[26403] = 2.03909682E-02;
  COFD[26404] = -1.72085780E+01;
  COFD[26405] = 4.26597898E+00;
  COFD[26406] = -3.40497726E-01;
  COFD[26407] = 1.48284962E-02;
  COFD[26408] = -2.06859442E+01;
  COFD[26409] = 5.15084743E+00;
  COFD[26410] = -4.46166870E-01;
  COFD[26411] = 1.90405241E-02;
  COFD[26412] = -2.19892992E+01;
  COFD[26413] = 5.41528536E+00;
  COFD[26414] = -4.73395924E-01;
  COFD[26415] = 1.99371023E-02;
  COFD[26416] = -2.07130812E+01;
  COFD[26417] = 5.15084743E+00;
  COFD[26418] = -4.46166870E-01;
  COFD[26419] = 1.90405241E-02;
  COFD[26420] = -1.72072974E+01;
  COFD[26421] = 2.92077981E+00;
  COFD[26422] = -6.20181094E-02;
  COFD[26423] = -1.31459730E-03;
  COFD[26424] = -2.18067293E+01;
  COFD[26425] = 5.37381914E+00;
  COFD[26426] = -4.70526306E-01;
  COFD[26427] = 1.99137622E-02;
  COFD[26428] = -1.92245436E+01;
  COFD[26429] = 3.64878687E+00;
  COFD[26430] = -1.67486742E-01;
  COFD[26431] = 3.65938254E-03;
  COFD[26432] = -2.26542292E+01;
  COFD[26433] = 5.30716061E+00;
  COFD[26434] = -4.27308091E-01;
  COFD[26435] = 1.66655289E-02;
  COFD[26436] = -2.24310667E+01;
  COFD[26437] = 5.61234798E+00;
  COFD[26438] = -4.91297356E-01;
  COFD[26439] = 2.04115425E-02;
  COFD[26440] = -2.24475415E+01;
  COFD[26441] = 5.61233595E+00;
  COFD[26442] = -4.91420667E-01;
  COFD[26443] = 2.04217927E-02;
  COFD[26444] = -2.19786716E+01;
  COFD[26445] = 5.41031792E+00;
  COFD[26446] = -4.73134636E-01;
  COFD[26447] = 1.99412666E-02;
  COFD[26448] = -2.19906530E+01;
  COFD[26449] = 5.41031792E+00;
  COFD[26450] = -4.73134636E-01;
  COFD[26451] = 1.99412666E-02;
  COFD[26452] = -1.92384813E+01;
  COFD[26453] = 3.64878687E+00;
  COFD[26454] = -1.67486742E-01;
  COFD[26455] = 3.65938254E-03;
  COFD[26456] = -2.00260065E+01;
  COFD[26457] = 4.04058640E+00;
  COFD[26458] = -2.29270334E-01;
  COFD[26459] = 6.76606770E-03;
  COFD[26460] = -2.26084502E+01;
  COFD[26461] = 5.30201231E+00;
  COFD[26462] = -4.26456960E-01;
  COFD[26463] = 1.66213106E-02;
  COFD[26464] = -2.24952591E+01;
  COFD[26465] = 5.35215936E+00;
  COFD[26466] = -4.34996256E-01;
  COFD[26467] = 1.70721706E-02;
  COFD[26468] = -2.25945370E+01;
  COFD[26469] = 5.30201231E+00;
  COFD[26470] = -4.26456960E-01;
  COFD[26471] = 1.66213106E-02;
  COFD[26472] = -2.22879818E+01;
  COFD[26473] = 5.21396996E+00;
  COFD[26474] = -4.11281412E-01;
  COFD[26475] = 1.58150334E-02;
  COFD[26476] = -2.23037777E+01;
  COFD[26477] = 5.21396996E+00;
  COFD[26478] = -4.11281412E-01;
  COFD[26479] = 1.58150334E-02;
  COFD[26480] = -2.02458098E+01;
  COFD[26481] = 4.04040564E+00;
  COFD[26482] = -2.27103382E-01;
  COFD[26483] = 6.58016011E-03;
  COFD[26484] = -2.25975141E+01;
  COFD[26485] = 5.60684388E+00;
  COFD[26486] = -4.89089198E-01;
  COFD[26487] = 2.02565724E-02;
  COFD[26488] = -2.02547568E+01;
  COFD[26489] = 4.04040564E+00;
  COFD[26490] = -2.27103382E-01;
  COFD[26491] = 6.58016011E-03;
  COFD[26492] = -2.02547568E+01;
  COFD[26493] = 4.04040564E+00;
  COFD[26494] = -2.27103382E-01;
  COFD[26495] = 6.58016011E-03;
  COFD[26496] = -2.02634463E+01;
  COFD[26497] = 4.04040564E+00;
  COFD[26498] = -2.27103382E-01;
  COFD[26499] = 6.58016011E-03;
  COFD[26500] = -2.18339999E+01;
  COFD[26501] = 4.81663452E+00;
  COFD[26502] = -3.47310112E-01;
  COFD[26503] = 1.25507777E-02;
  COFD[26504] = -2.20612721E+01;
  COFD[26505] = 4.93948492E+00;
  COFD[26506] = -3.66694137E-01;
  COFD[26507] = 1.35271560E-02;
  COFD[26508] = -2.16378415E+01;
  COFD[26509] = 4.61311728E+00;
  COFD[26510] = -3.14979067E-01;
  COFD[26511] = 1.09172113E-02;
  COFD[26512] = -2.22609630E+01;
  COFD[26513] = 4.97379817E+00;
  COFD[26514] = -3.72099307E-01;
  COFD[26515] = 1.37992814E-02;
  COFD[26516] = -2.16535499E+01;
  COFD[26517] = 4.62479073E+00;
  COFD[26518] = -3.16843576E-01;
  COFD[26519] = 1.10117295E-02;
  COFD[26520] = -2.16599161E+01;
  COFD[26521] = 4.62479073E+00;
  COFD[26522] = -3.16843576E-01;
  COFD[26523] = 1.10117295E-02;
  COFD[26524] = -2.18056042E+01;
  COFD[26525] = 4.64312709E+00;
  COFD[26526] = -3.19764076E-01;
  COFD[26527] = 1.11595790E-02;
  COFD[26528] = -2.05316670E+01;
  COFD[26529] = 4.04453292E+00;
  COFD[26530] = -2.27725339E-01;
  COFD[26531] = 6.61050628E-03;
  COFD[26532] = -2.00647907E+01;
  COFD[26533] = 3.86026424E+00;
  COFD[26534] = -2.02407333E-01;
  COFD[26535] = 5.46907954E-03;
  COFD[26536] = -2.07088264E+01;
  COFD[26537] = 4.13288186E+00;
  COFD[26538] = -2.41054643E-01;
  COFD[26539] = 7.26113993E-03;
  COFD[26540] = -2.13196973E+01;
  COFD[26541] = 4.34433003E+00;
  COFD[26542] = -2.73207428E-01;
  COFD[26543] = 8.83823384E-03;
  COFD[26544] = -2.14443150E+01;
  COFD[26545] = 4.40560301E+00;
  COFD[26546] = -2.83033303E-01;
  COFD[26547] = 9.33807331E-03;
  COFD[26548] = -1.98908327E+01;
  COFD[26549] = 3.81317728E+00;
  COFD[26550] = -1.92528490E-01;
  COFD[26551] = 4.88612928E-03;
  COFD[26552] = -1.96275498E+01;
  COFD[26553] = 3.74985445E+00;
  COFD[26554] = -1.82818055E-01;
  COFD[26555] = 4.40846246E-03;
  COFD[26556] = -1.96353326E+01;
  COFD[26557] = 3.74985445E+00;
  COFD[26558] = -1.82818055E-01;
  COFD[26559] = 4.40846246E-03;
  COFD[26560] = -2.02529779E+01;
  COFD[26561] = 3.98291296E+00;
  COFD[26562] = -2.18459468E-01;
  COFD[26563] = 6.15957476E-03;
  COFD[26564] = -2.02219152E+01;
  COFD[26565] = 3.91540504E+00;
  COFD[26566] = -2.10676561E-01;
  COFD[26567] = 5.87107784E-03;
  COFD[26568] = -2.09376776E+01;
  COFD[26569] = 4.24310133E+00;
  COFD[26570] = -2.57732017E-01;
  COFD[26571] = 8.07685243E-03;
  COFD[26572] = -1.98854459E+01;
  COFD[26573] = 3.66237031E+00;
  COFD[26574] = -1.69533805E-01;
  COFD[26575] = 3.75902257E-03;
  COFD[26576] = -2.00413049E+01;
  COFD[26577] = 3.66237031E+00;
  COFD[26578] = -1.69533805E-01;
  COFD[26579] = 3.75902257E-03;
  COFD[26580] = -1.99557130E+01;
  COFD[26581] = 3.66237031E+00;
  COFD[26582] = -1.69533805E-01;
  COFD[26583] = 3.75902257E-03;
  COFD[26584] = -1.99557130E+01;
  COFD[26585] = 3.66237031E+00;
  COFD[26586] = -1.69533805E-01;
  COFD[26587] = 3.75902257E-03;
  COFD[26588] = -2.19508560E+01;
  COFD[26589] = 4.87914567E+00;
  COFD[26590] = -3.57172857E-01;
  COFD[26591] = 1.30475227E-02;
  COFD[26592] = -2.18242110E+01;
  COFD[26593] = 4.81663452E+00;
  COFD[26594] = -3.47310112E-01;
  COFD[26595] = 1.25507777E-02;
  COFD[26596] = -2.29275994E+01;
  COFD[26597] = 5.48746342E+00;
  COFD[26598] = -4.59361316E-01;
  COFD[26599] = 1.83995990E-02;
  COFD[26600] = -2.23998269E+01;
  COFD[26601] = 5.61234798E+00;
  COFD[26602] = -4.91297356E-01;
  COFD[26603] = 2.04115425E-02;
  COFD[26604] = -2.00556963E+01;
  COFD[26605] = 3.66436790E+00;
  COFD[26606] = -1.71934261E-01;
  COFD[26607] = 3.95119075E-03;
  COFD[26608] = -1.98658124E+01;
  COFD[26609] = 3.69537879E+00;
  COFD[26610] = -1.77145108E-01;
  COFD[26611] = 4.22399720E-03;
  COFD[26612] = -1.98612587E+01;
  COFD[26613] = 3.69537879E+00;
  COFD[26614] = -1.77145108E-01;
  COFD[26615] = 4.22399720E-03;
  COFD[26616] = -1.99821344E+01;
  COFD[26617] = 3.72431023E+00;
  COFD[26618] = -1.81904593E-01;
  COFD[26619] = 4.46988587E-03;
  COFD[26620] = -2.00589344E+01;
  COFD[26621] = 3.70669288E+00;
  COFD[26622] = -1.76242142E-01;
  COFD[26623] = 4.08636872E-03;
  COFD[26624] = -2.00006729E+01;
  COFD[26625] = 3.66436790E+00;
  COFD[26626] = -1.71934261E-01;
  COFD[26627] = 3.95119075E-03;
  COFD[26628] = -1.99971115E+01;
  COFD[26629] = 3.66436790E+00;
  COFD[26630] = -1.71934261E-01;
  COFD[26631] = 3.95119075E-03;
  COFD[26632] = -2.05948978E+01;
  COFD[26633] = 3.87488983E+00;
  COFD[26634] = -2.02017141E-01;
  COFD[26635] = 5.35367024E-03;
  COFD[26636] = -2.05920255E+01;
  COFD[26637] = 3.87488983E+00;
  COFD[26638] = -2.02017141E-01;
  COFD[26639] = 5.35367024E-03;
  COFD[26640] = -2.05920255E+01;
  COFD[26641] = 3.87488983E+00;
  COFD[26642] = -2.02017141E-01;
  COFD[26643] = 5.35367024E-03;
  COFD[26644] = -2.05920255E+01;
  COFD[26645] = 3.87488983E+00;
  COFD[26646] = -2.02017141E-01;
  COFD[26647] = 5.35367024E-03;
  COFD[26648] = -2.05920255E+01;
  COFD[26649] = 3.87488983E+00;
  COFD[26650] = -2.02017141E-01;
  COFD[26651] = 5.35367024E-03;
  COFD[26652] = -2.05746135E+01;
  COFD[26653] = 3.87685237E+00;
  COFD[26654] = -2.02572236E-01;
  COFD[26655] = 5.38978456E-03;
  COFD[26656] = -2.05746135E+01;
  COFD[26657] = 3.87685237E+00;
  COFD[26658] = -2.02572236E-01;
  COFD[26659] = 5.38978456E-03;
  COFD[26660] = -1.91456103E+01;
  COFD[26661] = 3.15403394E+00;
  COFD[26662] = -9.49161276E-02;
  COFD[26663] = 1.99055118E-04;
  COFD[26664] = -1.91456103E+01;
  COFD[26665] = 3.15403394E+00;
  COFD[26666] = -9.49161276E-02;
  COFD[26667] = 1.99055118E-04;
  COFD[26668] = -1.91456103E+01;
  COFD[26669] = 3.15403394E+00;
  COFD[26670] = -9.49161276E-02;
  COFD[26671] = 1.99055118E-04;
  COFD[26672] = -1.91456103E+01;
  COFD[26673] = 3.15403394E+00;
  COFD[26674] = -9.49161276E-02;
  COFD[26675] = 1.99055118E-04;
  COFD[26676] = -1.91456103E+01;
  COFD[26677] = 3.15403394E+00;
  COFD[26678] = -9.49161276E-02;
  COFD[26679] = 1.99055118E-04;
  COFD[26680] = -1.91456103E+01;
  COFD[26681] = 3.15403394E+00;
  COFD[26682] = -9.49161276E-02;
  COFD[26683] = 1.99055118E-04;
  COFD[26684] = -1.91456103E+01;
  COFD[26685] = 3.15403394E+00;
  COFD[26686] = -9.49161276E-02;
  COFD[26687] = 1.99055118E-04;
  COFD[26688] = -1.91456103E+01;
  COFD[26689] = 3.15403394E+00;
  COFD[26690] = -9.49161276E-02;
  COFD[26691] = 1.99055118E-04;
  COFD[26692] = -1.91456103E+01;
  COFD[26693] = 3.15403394E+00;
  COFD[26694] = -9.49161276E-02;
  COFD[26695] = 1.99055118E-04;
  COFD[26696] = -1.91456103E+01;
  COFD[26697] = 3.15403394E+00;
  COFD[26698] = -9.49161276E-02;
  COFD[26699] = 1.99055118E-04;
  COFD[26700] = -1.91456103E+01;
  COFD[26701] = 3.15403394E+00;
  COFD[26702] = -9.49161276E-02;
  COFD[26703] = 1.99055118E-04;
  COFD[26704] = -1.91456103E+01;
  COFD[26705] = 3.15403394E+00;
  COFD[26706] = -9.49161276E-02;
  COFD[26707] = 1.99055118E-04;
  COFD[26708] = -1.87460549E+01;
  COFD[26709] = 2.87978833E+00;
  COFD[26710] = -5.44866013E-02;
  COFD[26711] = -1.73658318E-03;
  COFD[26712] = -1.87460549E+01;
  COFD[26713] = 2.87978833E+00;
  COFD[26714] = -5.44866013E-02;
  COFD[26715] = -1.73658318E-03;
  COFD[26716] = -1.87460549E+01;
  COFD[26717] = 2.87978833E+00;
  COFD[26718] = -5.44866013E-02;
  COFD[26719] = -1.73658318E-03;
  COFD[26720] = -1.87460549E+01;
  COFD[26721] = 2.87978833E+00;
  COFD[26722] = -5.44866013E-02;
  COFD[26723] = -1.73658318E-03;
  COFD[26724] = -1.99684327E+01;
  COFD[26725] = 3.54868094E+00;
  COFD[26726] = -1.52503015E-01;
  COFD[26727] = 2.93310249E-03;
  COFD[26728] = -1.99684327E+01;
  COFD[26729] = 3.54868094E+00;
  COFD[26730] = -1.52503015E-01;
  COFD[26731] = 2.93310249E-03;
  COFD[26732] = -1.89007696E+01;
  COFD[26733] = 3.01491854E+00;
  COFD[26734] = -7.45185018E-02;
  COFD[26735] = -7.71760336E-04;
  COFD[26736] = -1.89007696E+01;
  COFD[26737] = 3.01491854E+00;
  COFD[26738] = -7.45185018E-02;
  COFD[26739] = -7.71760336E-04;
  COFD[26740] = -1.89007696E+01;
  COFD[26741] = 3.01491854E+00;
  COFD[26742] = -7.45185018E-02;
  COFD[26743] = -7.71760336E-04;
  COFD[26744] = -1.89007696E+01;
  COFD[26745] = 3.01491854E+00;
  COFD[26746] = -7.45185018E-02;
  COFD[26747] = -7.71760336E-04;
  COFD[26748] = -2.17873416E+01;
  COFD[26749] = 5.37038209E+00;
  COFD[26750] = -4.70276061E-01;
  COFD[26751] = 1.99108515E-02;
  COFD[26752] = -2.07558370E+01;
  COFD[26753] = 5.61220925E+00;
  COFD[26754] = -4.91040098E-01;
  COFD[26755] = 2.03909682E-02;
  COFD[26756] = -1.72085780E+01;
  COFD[26757] = 4.26597898E+00;
  COFD[26758] = -3.40497726E-01;
  COFD[26759] = 1.48284962E-02;
  COFD[26760] = -2.06859442E+01;
  COFD[26761] = 5.15084743E+00;
  COFD[26762] = -4.46166870E-01;
  COFD[26763] = 1.90405241E-02;
  COFD[26764] = -2.19892992E+01;
  COFD[26765] = 5.41528536E+00;
  COFD[26766] = -4.73395924E-01;
  COFD[26767] = 1.99371023E-02;
  COFD[26768] = -2.07130812E+01;
  COFD[26769] = 5.15084743E+00;
  COFD[26770] = -4.46166870E-01;
  COFD[26771] = 1.90405241E-02;
  COFD[26772] = -1.72072974E+01;
  COFD[26773] = 2.92077981E+00;
  COFD[26774] = -6.20181094E-02;
  COFD[26775] = -1.31459730E-03;
  COFD[26776] = -2.18067293E+01;
  COFD[26777] = 5.37381914E+00;
  COFD[26778] = -4.70526306E-01;
  COFD[26779] = 1.99137622E-02;
  COFD[26780] = -1.92245436E+01;
  COFD[26781] = 3.64878687E+00;
  COFD[26782] = -1.67486742E-01;
  COFD[26783] = 3.65938254E-03;
  COFD[26784] = -2.26542292E+01;
  COFD[26785] = 5.30716061E+00;
  COFD[26786] = -4.27308091E-01;
  COFD[26787] = 1.66655289E-02;
  COFD[26788] = -2.24310667E+01;
  COFD[26789] = 5.61234798E+00;
  COFD[26790] = -4.91297356E-01;
  COFD[26791] = 2.04115425E-02;
  COFD[26792] = -2.24475415E+01;
  COFD[26793] = 5.61233595E+00;
  COFD[26794] = -4.91420667E-01;
  COFD[26795] = 2.04217927E-02;
  COFD[26796] = -2.19786716E+01;
  COFD[26797] = 5.41031792E+00;
  COFD[26798] = -4.73134636E-01;
  COFD[26799] = 1.99412666E-02;
  COFD[26800] = -2.19906530E+01;
  COFD[26801] = 5.41031792E+00;
  COFD[26802] = -4.73134636E-01;
  COFD[26803] = 1.99412666E-02;
  COFD[26804] = -1.92384813E+01;
  COFD[26805] = 3.64878687E+00;
  COFD[26806] = -1.67486742E-01;
  COFD[26807] = 3.65938254E-03;
  COFD[26808] = -2.00260065E+01;
  COFD[26809] = 4.04058640E+00;
  COFD[26810] = -2.29270334E-01;
  COFD[26811] = 6.76606770E-03;
  COFD[26812] = -2.26084502E+01;
  COFD[26813] = 5.30201231E+00;
  COFD[26814] = -4.26456960E-01;
  COFD[26815] = 1.66213106E-02;
  COFD[26816] = -2.24952591E+01;
  COFD[26817] = 5.35215936E+00;
  COFD[26818] = -4.34996256E-01;
  COFD[26819] = 1.70721706E-02;
  COFD[26820] = -2.25945370E+01;
  COFD[26821] = 5.30201231E+00;
  COFD[26822] = -4.26456960E-01;
  COFD[26823] = 1.66213106E-02;
  COFD[26824] = -2.22879818E+01;
  COFD[26825] = 5.21396996E+00;
  COFD[26826] = -4.11281412E-01;
  COFD[26827] = 1.58150334E-02;
  COFD[26828] = -2.23037777E+01;
  COFD[26829] = 5.21396996E+00;
  COFD[26830] = -4.11281412E-01;
  COFD[26831] = 1.58150334E-02;
  COFD[26832] = -2.02458098E+01;
  COFD[26833] = 4.04040564E+00;
  COFD[26834] = -2.27103382E-01;
  COFD[26835] = 6.58016011E-03;
  COFD[26836] = -2.25975141E+01;
  COFD[26837] = 5.60684388E+00;
  COFD[26838] = -4.89089198E-01;
  COFD[26839] = 2.02565724E-02;
  COFD[26840] = -2.02547568E+01;
  COFD[26841] = 4.04040564E+00;
  COFD[26842] = -2.27103382E-01;
  COFD[26843] = 6.58016011E-03;
  COFD[26844] = -2.02547568E+01;
  COFD[26845] = 4.04040564E+00;
  COFD[26846] = -2.27103382E-01;
  COFD[26847] = 6.58016011E-03;
  COFD[26848] = -2.02634463E+01;
  COFD[26849] = 4.04040564E+00;
  COFD[26850] = -2.27103382E-01;
  COFD[26851] = 6.58016011E-03;
  COFD[26852] = -2.18339999E+01;
  COFD[26853] = 4.81663452E+00;
  COFD[26854] = -3.47310112E-01;
  COFD[26855] = 1.25507777E-02;
  COFD[26856] = -2.20612721E+01;
  COFD[26857] = 4.93948492E+00;
  COFD[26858] = -3.66694137E-01;
  COFD[26859] = 1.35271560E-02;
  COFD[26860] = -2.16378415E+01;
  COFD[26861] = 4.61311728E+00;
  COFD[26862] = -3.14979067E-01;
  COFD[26863] = 1.09172113E-02;
  COFD[26864] = -2.22609630E+01;
  COFD[26865] = 4.97379817E+00;
  COFD[26866] = -3.72099307E-01;
  COFD[26867] = 1.37992814E-02;
  COFD[26868] = -2.16535499E+01;
  COFD[26869] = 4.62479073E+00;
  COFD[26870] = -3.16843576E-01;
  COFD[26871] = 1.10117295E-02;
  COFD[26872] = -2.16599161E+01;
  COFD[26873] = 4.62479073E+00;
  COFD[26874] = -3.16843576E-01;
  COFD[26875] = 1.10117295E-02;
  COFD[26876] = -2.18056042E+01;
  COFD[26877] = 4.64312709E+00;
  COFD[26878] = -3.19764076E-01;
  COFD[26879] = 1.11595790E-02;
  COFD[26880] = -2.05316670E+01;
  COFD[26881] = 4.04453292E+00;
  COFD[26882] = -2.27725339E-01;
  COFD[26883] = 6.61050628E-03;
  COFD[26884] = -2.00647907E+01;
  COFD[26885] = 3.86026424E+00;
  COFD[26886] = -2.02407333E-01;
  COFD[26887] = 5.46907954E-03;
  COFD[26888] = -2.07088264E+01;
  COFD[26889] = 4.13288186E+00;
  COFD[26890] = -2.41054643E-01;
  COFD[26891] = 7.26113993E-03;
  COFD[26892] = -2.13196973E+01;
  COFD[26893] = 4.34433003E+00;
  COFD[26894] = -2.73207428E-01;
  COFD[26895] = 8.83823384E-03;
  COFD[26896] = -2.14443150E+01;
  COFD[26897] = 4.40560301E+00;
  COFD[26898] = -2.83033303E-01;
  COFD[26899] = 9.33807331E-03;
  COFD[26900] = -1.98908327E+01;
  COFD[26901] = 3.81317728E+00;
  COFD[26902] = -1.92528490E-01;
  COFD[26903] = 4.88612928E-03;
  COFD[26904] = -1.96275498E+01;
  COFD[26905] = 3.74985445E+00;
  COFD[26906] = -1.82818055E-01;
  COFD[26907] = 4.40846246E-03;
  COFD[26908] = -1.96353326E+01;
  COFD[26909] = 3.74985445E+00;
  COFD[26910] = -1.82818055E-01;
  COFD[26911] = 4.40846246E-03;
  COFD[26912] = -2.02529779E+01;
  COFD[26913] = 3.98291296E+00;
  COFD[26914] = -2.18459468E-01;
  COFD[26915] = 6.15957476E-03;
  COFD[26916] = -2.02219152E+01;
  COFD[26917] = 3.91540504E+00;
  COFD[26918] = -2.10676561E-01;
  COFD[26919] = 5.87107784E-03;
  COFD[26920] = -2.09376776E+01;
  COFD[26921] = 4.24310133E+00;
  COFD[26922] = -2.57732017E-01;
  COFD[26923] = 8.07685243E-03;
  COFD[26924] = -1.98854459E+01;
  COFD[26925] = 3.66237031E+00;
  COFD[26926] = -1.69533805E-01;
  COFD[26927] = 3.75902257E-03;
  COFD[26928] = -2.00413049E+01;
  COFD[26929] = 3.66237031E+00;
  COFD[26930] = -1.69533805E-01;
  COFD[26931] = 3.75902257E-03;
  COFD[26932] = -1.99557130E+01;
  COFD[26933] = 3.66237031E+00;
  COFD[26934] = -1.69533805E-01;
  COFD[26935] = 3.75902257E-03;
  COFD[26936] = -1.99557130E+01;
  COFD[26937] = 3.66237031E+00;
  COFD[26938] = -1.69533805E-01;
  COFD[26939] = 3.75902257E-03;
  COFD[26940] = -2.19508560E+01;
  COFD[26941] = 4.87914567E+00;
  COFD[26942] = -3.57172857E-01;
  COFD[26943] = 1.30475227E-02;
  COFD[26944] = -2.18242110E+01;
  COFD[26945] = 4.81663452E+00;
  COFD[26946] = -3.47310112E-01;
  COFD[26947] = 1.25507777E-02;
  COFD[26948] = -2.29275994E+01;
  COFD[26949] = 5.48746342E+00;
  COFD[26950] = -4.59361316E-01;
  COFD[26951] = 1.83995990E-02;
  COFD[26952] = -2.23998269E+01;
  COFD[26953] = 5.61234798E+00;
  COFD[26954] = -4.91297356E-01;
  COFD[26955] = 2.04115425E-02;
  COFD[26956] = -2.00556963E+01;
  COFD[26957] = 3.66436790E+00;
  COFD[26958] = -1.71934261E-01;
  COFD[26959] = 3.95119075E-03;
  COFD[26960] = -1.98658124E+01;
  COFD[26961] = 3.69537879E+00;
  COFD[26962] = -1.77145108E-01;
  COFD[26963] = 4.22399720E-03;
  COFD[26964] = -1.98612587E+01;
  COFD[26965] = 3.69537879E+00;
  COFD[26966] = -1.77145108E-01;
  COFD[26967] = 4.22399720E-03;
  COFD[26968] = -1.99821344E+01;
  COFD[26969] = 3.72431023E+00;
  COFD[26970] = -1.81904593E-01;
  COFD[26971] = 4.46988587E-03;
  COFD[26972] = -2.00589344E+01;
  COFD[26973] = 3.70669288E+00;
  COFD[26974] = -1.76242142E-01;
  COFD[26975] = 4.08636872E-03;
  COFD[26976] = -2.00006729E+01;
  COFD[26977] = 3.66436790E+00;
  COFD[26978] = -1.71934261E-01;
  COFD[26979] = 3.95119075E-03;
  COFD[26980] = -1.99971115E+01;
  COFD[26981] = 3.66436790E+00;
  COFD[26982] = -1.71934261E-01;
  COFD[26983] = 3.95119075E-03;
  COFD[26984] = -2.05948978E+01;
  COFD[26985] = 3.87488983E+00;
  COFD[26986] = -2.02017141E-01;
  COFD[26987] = 5.35367024E-03;
  COFD[26988] = -2.05920255E+01;
  COFD[26989] = 3.87488983E+00;
  COFD[26990] = -2.02017141E-01;
  COFD[26991] = 5.35367024E-03;
  COFD[26992] = -2.05920255E+01;
  COFD[26993] = 3.87488983E+00;
  COFD[26994] = -2.02017141E-01;
  COFD[26995] = 5.35367024E-03;
  COFD[26996] = -2.05920255E+01;
  COFD[26997] = 3.87488983E+00;
  COFD[26998] = -2.02017141E-01;
  COFD[26999] = 5.35367024E-03;
  COFD[27000] = -2.05920255E+01;
  COFD[27001] = 3.87488983E+00;
  COFD[27002] = -2.02017141E-01;
  COFD[27003] = 5.35367024E-03;
  COFD[27004] = -2.05746135E+01;
  COFD[27005] = 3.87685237E+00;
  COFD[27006] = -2.02572236E-01;
  COFD[27007] = 5.38978456E-03;
  COFD[27008] = -2.05746135E+01;
  COFD[27009] = 3.87685237E+00;
  COFD[27010] = -2.02572236E-01;
  COFD[27011] = 5.38978456E-03;
  COFD[27012] = -1.91456103E+01;
  COFD[27013] = 3.15403394E+00;
  COFD[27014] = -9.49161276E-02;
  COFD[27015] = 1.99055118E-04;
  COFD[27016] = -1.91456103E+01;
  COFD[27017] = 3.15403394E+00;
  COFD[27018] = -9.49161276E-02;
  COFD[27019] = 1.99055118E-04;
  COFD[27020] = -1.91456103E+01;
  COFD[27021] = 3.15403394E+00;
  COFD[27022] = -9.49161276E-02;
  COFD[27023] = 1.99055118E-04;
  COFD[27024] = -1.91456103E+01;
  COFD[27025] = 3.15403394E+00;
  COFD[27026] = -9.49161276E-02;
  COFD[27027] = 1.99055118E-04;
  COFD[27028] = -1.91456103E+01;
  COFD[27029] = 3.15403394E+00;
  COFD[27030] = -9.49161276E-02;
  COFD[27031] = 1.99055118E-04;
  COFD[27032] = -1.91456103E+01;
  COFD[27033] = 3.15403394E+00;
  COFD[27034] = -9.49161276E-02;
  COFD[27035] = 1.99055118E-04;
  COFD[27036] = -1.91456103E+01;
  COFD[27037] = 3.15403394E+00;
  COFD[27038] = -9.49161276E-02;
  COFD[27039] = 1.99055118E-04;
  COFD[27040] = -1.91456103E+01;
  COFD[27041] = 3.15403394E+00;
  COFD[27042] = -9.49161276E-02;
  COFD[27043] = 1.99055118E-04;
  COFD[27044] = -1.91456103E+01;
  COFD[27045] = 3.15403394E+00;
  COFD[27046] = -9.49161276E-02;
  COFD[27047] = 1.99055118E-04;
  COFD[27048] = -1.91456103E+01;
  COFD[27049] = 3.15403394E+00;
  COFD[27050] = -9.49161276E-02;
  COFD[27051] = 1.99055118E-04;
  COFD[27052] = -1.91456103E+01;
  COFD[27053] = 3.15403394E+00;
  COFD[27054] = -9.49161276E-02;
  COFD[27055] = 1.99055118E-04;
  COFD[27056] = -1.91456103E+01;
  COFD[27057] = 3.15403394E+00;
  COFD[27058] = -9.49161276E-02;
  COFD[27059] = 1.99055118E-04;
  COFD[27060] = -1.87460549E+01;
  COFD[27061] = 2.87978833E+00;
  COFD[27062] = -5.44866013E-02;
  COFD[27063] = -1.73658318E-03;
  COFD[27064] = -1.87460549E+01;
  COFD[27065] = 2.87978833E+00;
  COFD[27066] = -5.44866013E-02;
  COFD[27067] = -1.73658318E-03;
  COFD[27068] = -1.87460549E+01;
  COFD[27069] = 2.87978833E+00;
  COFD[27070] = -5.44866013E-02;
  COFD[27071] = -1.73658318E-03;
  COFD[27072] = -1.87460549E+01;
  COFD[27073] = 2.87978833E+00;
  COFD[27074] = -5.44866013E-02;
  COFD[27075] = -1.73658318E-03;
  COFD[27076] = -1.99684327E+01;
  COFD[27077] = 3.54868094E+00;
  COFD[27078] = -1.52503015E-01;
  COFD[27079] = 2.93310249E-03;
  COFD[27080] = -1.99684327E+01;
  COFD[27081] = 3.54868094E+00;
  COFD[27082] = -1.52503015E-01;
  COFD[27083] = 2.93310249E-03;
  COFD[27084] = -1.89007696E+01;
  COFD[27085] = 3.01491854E+00;
  COFD[27086] = -7.45185018E-02;
  COFD[27087] = -7.71760336E-04;
  COFD[27088] = -1.89007696E+01;
  COFD[27089] = 3.01491854E+00;
  COFD[27090] = -7.45185018E-02;
  COFD[27091] = -7.71760336E-04;
  COFD[27092] = -1.89007696E+01;
  COFD[27093] = 3.01491854E+00;
  COFD[27094] = -7.45185018E-02;
  COFD[27095] = -7.71760336E-04;
  COFD[27096] = -1.89007696E+01;
  COFD[27097] = 3.01491854E+00;
  COFD[27098] = -7.45185018E-02;
  COFD[27099] = -7.71760336E-04;
  COFD[27100] = -2.17873416E+01;
  COFD[27101] = 5.37038209E+00;
  COFD[27102] = -4.70276061E-01;
  COFD[27103] = 1.99108515E-02;
  COFD[27104] = -2.09747845E+01;
  COFD[27105] = 5.59188965E+00;
  COFD[27106] = -4.85691440E-01;
  COFD[27107] = 2.00506276E-02;
  COFD[27108] = -1.75957233E+01;
  COFD[27109] = 4.33581289E+00;
  COFD[27110] = -3.48934832E-01;
  COFD[27111] = 1.51685329E-02;
  COFD[27112] = -2.10956639E+01;
  COFD[27113] = 5.21743360E+00;
  COFD[27114] = -4.53376932E-01;
  COFD[27115] = 1.92954013E-02;
  COFD[27116] = -2.23772023E+01;
  COFD[27117] = 5.47401767E+00;
  COFD[27118] = -4.79460651E-01;
  COFD[27119] = 2.01386224E-02;
  COFD[27120] = -2.11234086E+01;
  COFD[27121] = 5.21743360E+00;
  COFD[27122] = -4.53376932E-01;
  COFD[27123] = 1.92954013E-02;
  COFD[27124] = -1.68808736E+01;
  COFD[27125] = 2.67272133E+00;
  COFD[27126] = -2.52954928E-02;
  COFD[27127] = -3.08293290E-03;
  COFD[27128] = -2.21215074E+01;
  COFD[27129] = 5.40452789E+00;
  COFD[27130] = -4.72714156E-01;
  COFD[27131] = 1.99362566E-02;
  COFD[27132] = -1.88807933E+01;
  COFD[27133] = 3.39465864E+00;
  COFD[27134] = -1.29587884E-01;
  COFD[27135] = 1.82868116E-03;
  COFD[27136] = -2.27195552E+01;
  COFD[27137] = 5.22366642E+00;
  COFD[27138] = -4.12932500E-01;
  COFD[27139] = 1.59020143E-02;
  COFD[27140] = -2.26313826E+01;
  COFD[27141] = 5.59491496E+00;
  COFD[27142] = -4.86385698E-01;
  COFD[27143] = 2.00929177E-02;
  COFD[27144] = -2.26529259E+01;
  COFD[27145] = 5.59823763E+00;
  COFD[27146] = -4.87149903E-01;
  COFD[27147] = 2.01394827E-02;
  COFD[27148] = -2.23541327E+01;
  COFD[27149] = 5.46244183E+00;
  COFD[27150] = -4.78171258E-01;
  COFD[27151] = 2.00910572E-02;
  COFD[27152] = -2.23666119E+01;
  COFD[27153] = 5.46244183E+00;
  COFD[27154] = -4.78171258E-01;
  COFD[27155] = 2.00910572E-02;
  COFD[27156] = -1.88952517E+01;
  COFD[27157] = 3.39465864E+00;
  COFD[27158] = -1.29587884E-01;
  COFD[27159] = 1.82868116E-03;
  COFD[27160] = -1.98201172E+01;
  COFD[27161] = 3.84591155E+00;
  COFD[27162] = -1.99613395E-01;
  COFD[27163] = 5.30794307E-03;
  COFD[27164] = -2.26542273E+01;
  COFD[27165] = 5.21560335E+00;
  COFD[27166] = -4.11558964E-01;
  COFD[27167] = 1.58296343E-02;
  COFD[27168] = -2.25379937E+01;
  COFD[27169] = 5.25915537E+00;
  COFD[27170] = -4.19162661E-01;
  COFD[27171] = 1.62360462E-02;
  COFD[27172] = -2.26397937E+01;
  COFD[27173] = 5.21560335E+00;
  COFD[27174] = -4.11558964E-01;
  COFD[27175] = 1.58296343E-02;
  COFD[27176] = -2.22901478E+01;
  COFD[27177] = 5.10542661E+00;
  COFD[27178] = -3.93251553E-01;
  COFD[27179] = 1.48773548E-02;
  COFD[27180] = -2.23064825E+01;
  COFD[27181] = 5.10542661E+00;
  COFD[27182] = -3.93251553E-01;
  COFD[27183] = 1.48773548E-02;
  COFD[27184] = -2.00185312E+01;
  COFD[27185] = 3.83478342E+00;
  COFD[27186] = -1.95849899E-01;
  COFD[27187] = 5.04983054E-03;
  COFD[27188] = -2.28223102E+01;
  COFD[27189] = 5.58209631E+00;
  COFD[27190] = -4.82952924E-01;
  COFD[27191] = 1.98726667E-02;
  COFD[27192] = -2.00279293E+01;
  COFD[27193] = 3.83478342E+00;
  COFD[27194] = -1.95849899E-01;
  COFD[27195] = 5.04983054E-03;
  COFD[27196] = -2.00279293E+01;
  COFD[27197] = 3.83478342E+00;
  COFD[27198] = -1.95849899E-01;
  COFD[27199] = 5.04983054E-03;
  COFD[27200] = -2.00370652E+01;
  COFD[27201] = 3.83478342E+00;
  COFD[27202] = -1.95849899E-01;
  COFD[27203] = 5.04983054E-03;
  COFD[27204] = -2.17464159E+01;
  COFD[27205] = 4.67107646E+00;
  COFD[27206] = -3.24176152E-01;
  COFD[27207] = 1.13816368E-02;
  COFD[27208] = -2.19554952E+01;
  COFD[27209] = 4.78501176E+00;
  COFD[27210] = -3.42294843E-01;
  COFD[27211] = 1.22974338E-02;
  COFD[27212] = -2.15096786E+01;
  COFD[27213] = 4.45083355E+00;
  COFD[27214] = -2.89586321E-01;
  COFD[27215] = 9.64806882E-03;
  COFD[27216] = -2.21395163E+01;
  COFD[27217] = 4.81651424E+00;
  COFD[27218] = -3.47291219E-01;
  COFD[27219] = 1.25498287E-02;
  COFD[27220] = -2.15325140E+01;
  COFD[27221] = 4.46485491E+00;
  COFD[27222] = -2.91765766E-01;
  COFD[27223] = 9.75650640E-03;
  COFD[27224] = -2.15392748E+01;
  COFD[27225] = 4.46485491E+00;
  COFD[27226] = -2.91765766E-01;
  COFD[27227] = 9.75650640E-03;
  COFD[27228] = -2.16849507E+01;
  COFD[27229] = 4.48620336E+00;
  COFD[27230] = -2.95085982E-01;
  COFD[27231] = 9.92181611E-03;
  COFD[27232] = -2.02949225E+01;
  COFD[27233] = 3.83774024E+00;
  COFD[27234] = -1.96304162E-01;
  COFD[27235] = 5.07218951E-03;
  COFD[27236] = -1.99255285E+01;
  COFD[27237] = 3.69583436E+00;
  COFD[27238] = -1.77091672E-01;
  COFD[27239] = 4.21695685E-03;
  COFD[27240] = -2.04236450E+01;
  COFD[27241] = 3.90507827E+00;
  COFD[27242] = -2.06632747E-01;
  COFD[27243] = 5.58034687E-03;
  COFD[27244] = -2.10658698E+01;
  COFD[27245] = 4.13125320E+00;
  COFD[27246] = -2.40808345E-01;
  COFD[27247] = 7.24910567E-03;
  COFD[27248] = -2.12339765E+01;
  COFD[27249] = 4.21068803E+00;
  COFD[27250] = -2.53139632E-01;
  COFD[27251] = 7.86344405E-03;
  COFD[27252] = -1.96575366E+01;
  COFD[27253] = 3.60715849E+00;
  COFD[27254] = -1.61238254E-01;
  COFD[27255] = 3.35598772E-03;
  COFD[27256] = -1.93404036E+01;
  COFD[27257] = 3.51545358E+00;
  COFD[27258] = -1.47552581E-01;
  COFD[27259] = 2.69390634E-03;
  COFD[27260] = -1.93486146E+01;
  COFD[27261] = 3.51545358E+00;
  COFD[27262] = -1.47552581E-01;
  COFD[27263] = 2.69390634E-03;
  COFD[27264] = -2.00613008E+01;
  COFD[27265] = 3.79091302E+00;
  COFD[27266] = -1.89108491E-01;
  COFD[27267] = 4.71759684E-03;
  COFD[27268] = -2.00375725E+01;
  COFD[27269] = 3.73374047E+00;
  COFD[27270] = -1.82912207E-01;
  COFD[27271] = 4.50345327E-03;
  COFD[27272] = -2.06377876E+01;
  COFD[27273] = 4.00877776E+00;
  COFD[27274] = -2.22342929E-01;
  COFD[27275] = 6.34836163E-03;
  COFD[27276] = -1.95380904E+01;
  COFD[27277] = 3.40915286E+00;
  COFD[27278] = -1.31742920E-01;
  COFD[27279] = 1.93243988E-03;
  COFD[27280] = -1.97076720E+01;
  COFD[27281] = 3.40915286E+00;
  COFD[27282] = -1.31742920E-01;
  COFD[27283] = 1.93243988E-03;
  COFD[27284] = -1.96139728E+01;
  COFD[27285] = 3.40915286E+00;
  COFD[27286] = -1.31742920E-01;
  COFD[27287] = 1.93243988E-03;
  COFD[27288] = -1.96139728E+01;
  COFD[27289] = 3.40915286E+00;
  COFD[27290] = -1.31742920E-01;
  COFD[27291] = 1.93243988E-03;
  COFD[27292] = -2.18616833E+01;
  COFD[27293] = 4.73247457E+00;
  COFD[27294] = -3.33891954E-01;
  COFD[27295] = 1.18713805E-02;
  COFD[27296] = -2.17361612E+01;
  COFD[27297] = 4.67107646E+00;
  COFD[27298] = -3.24176152E-01;
  COFD[27299] = 1.13816368E-02;
  COFD[27300] = -2.30241544E+01;
  COFD[27301] = 5.41936555E+00;
  COFD[27302] = -4.46990587E-01;
  COFD[27303] = 1.77221311E-02;
  COFD[27304] = -2.25995201E+01;
  COFD[27305] = 5.59491496E+00;
  COFD[27306] = -4.86385698E-01;
  COFD[27307] = 2.00929177E-02;
  COFD[27308] = -1.98506026E+01;
  COFD[27309] = 3.47027069E+00;
  COFD[27310] = -1.42345842E-01;
  COFD[27311] = 2.49921923E-03;
  COFD[27312] = -1.97438584E+01;
  COFD[27313] = 3.53711804E+00;
  COFD[27314] = -1.52627069E-01;
  COFD[27315] = 3.00816383E-03;
  COFD[27316] = -1.97389660E+01;
  COFD[27317] = 3.53711804E+00;
  COFD[27318] = -1.52627069E-01;
  COFD[27319] = 3.00816383E-03;
  COFD[27320] = -1.98860636E+01;
  COFD[27321] = 3.58002373E+00;
  COFD[27322] = -1.59403687E-01;
  COFD[27323] = 3.34925073E-03;
  COFD[27324] = -1.97278824E+01;
  COFD[27325] = 3.45878243E+00;
  COFD[27326] = -1.39122389E-01;
  COFD[27327] = 2.28755091E-03;
  COFD[27328] = -1.97906542E+01;
  COFD[27329] = 3.47027069E+00;
  COFD[27330] = -1.42345842E-01;
  COFD[27331] = 2.49921923E-03;
  COFD[27332] = -1.97867938E+01;
  COFD[27333] = 3.47027069E+00;
  COFD[27334] = -1.42345842E-01;
  COFD[27335] = 2.49921923E-03;
  COFD[27336] = -2.04052753E+01;
  COFD[27337] = 3.68933740E+00;
  COFD[27338] = -1.73601961E-01;
  COFD[27339] = 3.95720919E-03;
  COFD[27340] = -2.04021372E+01;
  COFD[27341] = 3.68933740E+00;
  COFD[27342] = -1.73601961E-01;
  COFD[27343] = 3.95720919E-03;
  COFD[27344] = -2.04021372E+01;
  COFD[27345] = 3.68933740E+00;
  COFD[27346] = -1.73601961E-01;
  COFD[27347] = 3.95720919E-03;
  COFD[27348] = -2.04021372E+01;
  COFD[27349] = 3.68933740E+00;
  COFD[27350] = -1.73601961E-01;
  COFD[27351] = 3.95720919E-03;
  COFD[27352] = -2.04021372E+01;
  COFD[27353] = 3.68933740E+00;
  COFD[27354] = -1.73601961E-01;
  COFD[27355] = 3.95720919E-03;
  COFD[27356] = -2.03906936E+01;
  COFD[27357] = 3.69340757E+00;
  COFD[27358] = -1.74428920E-01;
  COFD[27359] = 4.00486528E-03;
  COFD[27360] = -2.03906936E+01;
  COFD[27361] = 3.69340757E+00;
  COFD[27362] = -1.74428920E-01;
  COFD[27363] = 4.00486528E-03;
  COFD[27364] = -1.87460549E+01;
  COFD[27365] = 2.87978833E+00;
  COFD[27366] = -5.44866013E-02;
  COFD[27367] = -1.73658318E-03;
  COFD[27368] = -1.87460549E+01;
  COFD[27369] = 2.87978833E+00;
  COFD[27370] = -5.44866013E-02;
  COFD[27371] = -1.73658318E-03;
  COFD[27372] = -1.87460549E+01;
  COFD[27373] = 2.87978833E+00;
  COFD[27374] = -5.44866013E-02;
  COFD[27375] = -1.73658318E-03;
  COFD[27376] = -1.87460549E+01;
  COFD[27377] = 2.87978833E+00;
  COFD[27378] = -5.44866013E-02;
  COFD[27379] = -1.73658318E-03;
  COFD[27380] = -1.87460549E+01;
  COFD[27381] = 2.87978833E+00;
  COFD[27382] = -5.44866013E-02;
  COFD[27383] = -1.73658318E-03;
  COFD[27384] = -1.87460549E+01;
  COFD[27385] = 2.87978833E+00;
  COFD[27386] = -5.44866013E-02;
  COFD[27387] = -1.73658318E-03;
  COFD[27388] = -1.87460549E+01;
  COFD[27389] = 2.87978833E+00;
  COFD[27390] = -5.44866013E-02;
  COFD[27391] = -1.73658318E-03;
  COFD[27392] = -1.87460549E+01;
  COFD[27393] = 2.87978833E+00;
  COFD[27394] = -5.44866013E-02;
  COFD[27395] = -1.73658318E-03;
  COFD[27396] = -1.87460549E+01;
  COFD[27397] = 2.87978833E+00;
  COFD[27398] = -5.44866013E-02;
  COFD[27399] = -1.73658318E-03;
  COFD[27400] = -1.87460549E+01;
  COFD[27401] = 2.87978833E+00;
  COFD[27402] = -5.44866013E-02;
  COFD[27403] = -1.73658318E-03;
  COFD[27404] = -1.87460549E+01;
  COFD[27405] = 2.87978833E+00;
  COFD[27406] = -5.44866013E-02;
  COFD[27407] = -1.73658318E-03;
  COFD[27408] = -1.87460549E+01;
  COFD[27409] = 2.87978833E+00;
  COFD[27410] = -5.44866013E-02;
  COFD[27411] = -1.73658318E-03;
  COFD[27412] = -1.82720296E+01;
  COFD[27413] = 2.57361877E+00;
  COFD[27414] = -9.37133041E-03;
  COFD[27415] = -3.89889685E-03;
  COFD[27416] = -1.82720296E+01;
  COFD[27417] = 2.57361877E+00;
  COFD[27418] = -9.37133041E-03;
  COFD[27419] = -3.89889685E-03;
  COFD[27420] = -1.82720296E+01;
  COFD[27421] = 2.57361877E+00;
  COFD[27422] = -9.37133041E-03;
  COFD[27423] = -3.89889685E-03;
  COFD[27424] = -1.82720296E+01;
  COFD[27425] = 2.57361877E+00;
  COFD[27426] = -9.37133041E-03;
  COFD[27427] = -3.89889685E-03;
  COFD[27428] = -1.96225587E+01;
  COFD[27429] = 3.29753126E+00;
  COFD[27430] = -1.15163460E-01;
  COFD[27431] = 1.13479879E-03;
  COFD[27432] = -1.96225587E+01;
  COFD[27433] = 3.29753126E+00;
  COFD[27434] = -1.15163460E-01;
  COFD[27435] = 1.13479879E-03;
  COFD[27436] = -1.84159124E+01;
  COFD[27437] = 2.70290609E+00;
  COFD[27438] = -2.86258257E-02;
  COFD[27439] = -2.96892208E-03;
  COFD[27440] = -1.84159124E+01;
  COFD[27441] = 2.70290609E+00;
  COFD[27442] = -2.86258257E-02;
  COFD[27443] = -2.96892208E-03;
  COFD[27444] = -1.84159124E+01;
  COFD[27445] = 2.70290609E+00;
  COFD[27446] = -2.86258257E-02;
  COFD[27447] = -2.96892208E-03;
  COFD[27448] = -1.84159124E+01;
  COFD[27449] = 2.70290609E+00;
  COFD[27450] = -2.86258257E-02;
  COFD[27451] = -2.96892208E-03;
  COFD[27452] = -2.21044644E+01;
  COFD[27453] = 5.40171449E+00;
  COFD[27454] = -4.72533012E-01;
  COFD[27455] = 1.99357687E-02;
  COFD[27456] = -2.09747845E+01;
  COFD[27457] = 5.59188965E+00;
  COFD[27458] = -4.85691440E-01;
  COFD[27459] = 2.00506276E-02;
  COFD[27460] = -1.75957233E+01;
  COFD[27461] = 4.33581289E+00;
  COFD[27462] = -3.48934832E-01;
  COFD[27463] = 1.51685329E-02;
  COFD[27464] = -2.10956639E+01;
  COFD[27465] = 5.21743360E+00;
  COFD[27466] = -4.53376932E-01;
  COFD[27467] = 1.92954013E-02;
  COFD[27468] = -2.23772023E+01;
  COFD[27469] = 5.47401767E+00;
  COFD[27470] = -4.79460651E-01;
  COFD[27471] = 2.01386224E-02;
  COFD[27472] = -2.11234086E+01;
  COFD[27473] = 5.21743360E+00;
  COFD[27474] = -4.53376932E-01;
  COFD[27475] = 1.92954013E-02;
  COFD[27476] = -1.68808736E+01;
  COFD[27477] = 2.67272133E+00;
  COFD[27478] = -2.52954928E-02;
  COFD[27479] = -3.08293290E-03;
  COFD[27480] = -2.21215074E+01;
  COFD[27481] = 5.40452789E+00;
  COFD[27482] = -4.72714156E-01;
  COFD[27483] = 1.99362566E-02;
  COFD[27484] = -1.88807933E+01;
  COFD[27485] = 3.39465864E+00;
  COFD[27486] = -1.29587884E-01;
  COFD[27487] = 1.82868116E-03;
  COFD[27488] = -2.27195552E+01;
  COFD[27489] = 5.22366642E+00;
  COFD[27490] = -4.12932500E-01;
  COFD[27491] = 1.59020143E-02;
  COFD[27492] = -2.26313826E+01;
  COFD[27493] = 5.59491496E+00;
  COFD[27494] = -4.86385698E-01;
  COFD[27495] = 2.00929177E-02;
  COFD[27496] = -2.26529259E+01;
  COFD[27497] = 5.59823763E+00;
  COFD[27498] = -4.87149903E-01;
  COFD[27499] = 2.01394827E-02;
  COFD[27500] = -2.23541327E+01;
  COFD[27501] = 5.46244183E+00;
  COFD[27502] = -4.78171258E-01;
  COFD[27503] = 2.00910572E-02;
  COFD[27504] = -2.23666119E+01;
  COFD[27505] = 5.46244183E+00;
  COFD[27506] = -4.78171258E-01;
  COFD[27507] = 2.00910572E-02;
  COFD[27508] = -1.88952517E+01;
  COFD[27509] = 3.39465864E+00;
  COFD[27510] = -1.29587884E-01;
  COFD[27511] = 1.82868116E-03;
  COFD[27512] = -1.98201172E+01;
  COFD[27513] = 3.84591155E+00;
  COFD[27514] = -1.99613395E-01;
  COFD[27515] = 5.30794307E-03;
  COFD[27516] = -2.26542273E+01;
  COFD[27517] = 5.21560335E+00;
  COFD[27518] = -4.11558964E-01;
  COFD[27519] = 1.58296343E-02;
  COFD[27520] = -2.25379937E+01;
  COFD[27521] = 5.25915537E+00;
  COFD[27522] = -4.19162661E-01;
  COFD[27523] = 1.62360462E-02;
  COFD[27524] = -2.26397937E+01;
  COFD[27525] = 5.21560335E+00;
  COFD[27526] = -4.11558964E-01;
  COFD[27527] = 1.58296343E-02;
  COFD[27528] = -2.22901478E+01;
  COFD[27529] = 5.10542661E+00;
  COFD[27530] = -3.93251553E-01;
  COFD[27531] = 1.48773548E-02;
  COFD[27532] = -2.23064825E+01;
  COFD[27533] = 5.10542661E+00;
  COFD[27534] = -3.93251553E-01;
  COFD[27535] = 1.48773548E-02;
  COFD[27536] = -2.00185312E+01;
  COFD[27537] = 3.83478342E+00;
  COFD[27538] = -1.95849899E-01;
  COFD[27539] = 5.04983054E-03;
  COFD[27540] = -2.28223102E+01;
  COFD[27541] = 5.58209631E+00;
  COFD[27542] = -4.82952924E-01;
  COFD[27543] = 1.98726667E-02;
  COFD[27544] = -2.00279293E+01;
  COFD[27545] = 3.83478342E+00;
  COFD[27546] = -1.95849899E-01;
  COFD[27547] = 5.04983054E-03;
  COFD[27548] = -2.00279293E+01;
  COFD[27549] = 3.83478342E+00;
  COFD[27550] = -1.95849899E-01;
  COFD[27551] = 5.04983054E-03;
  COFD[27552] = -2.00370652E+01;
  COFD[27553] = 3.83478342E+00;
  COFD[27554] = -1.95849899E-01;
  COFD[27555] = 5.04983054E-03;
  COFD[27556] = -2.17464159E+01;
  COFD[27557] = 4.67107646E+00;
  COFD[27558] = -3.24176152E-01;
  COFD[27559] = 1.13816368E-02;
  COFD[27560] = -2.19554952E+01;
  COFD[27561] = 4.78501176E+00;
  COFD[27562] = -3.42294843E-01;
  COFD[27563] = 1.22974338E-02;
  COFD[27564] = -2.15096786E+01;
  COFD[27565] = 4.45083355E+00;
  COFD[27566] = -2.89586321E-01;
  COFD[27567] = 9.64806882E-03;
  COFD[27568] = -2.21395163E+01;
  COFD[27569] = 4.81651424E+00;
  COFD[27570] = -3.47291219E-01;
  COFD[27571] = 1.25498287E-02;
  COFD[27572] = -2.15325140E+01;
  COFD[27573] = 4.46485491E+00;
  COFD[27574] = -2.91765766E-01;
  COFD[27575] = 9.75650640E-03;
  COFD[27576] = -2.15392748E+01;
  COFD[27577] = 4.46485491E+00;
  COFD[27578] = -2.91765766E-01;
  COFD[27579] = 9.75650640E-03;
  COFD[27580] = -2.16849507E+01;
  COFD[27581] = 4.48620336E+00;
  COFD[27582] = -2.95085982E-01;
  COFD[27583] = 9.92181611E-03;
  COFD[27584] = -2.02949225E+01;
  COFD[27585] = 3.83774024E+00;
  COFD[27586] = -1.96304162E-01;
  COFD[27587] = 5.07218951E-03;
  COFD[27588] = -1.99255285E+01;
  COFD[27589] = 3.69583436E+00;
  COFD[27590] = -1.77091672E-01;
  COFD[27591] = 4.21695685E-03;
  COFD[27592] = -2.04236450E+01;
  COFD[27593] = 3.90507827E+00;
  COFD[27594] = -2.06632747E-01;
  COFD[27595] = 5.58034687E-03;
  COFD[27596] = -2.10658698E+01;
  COFD[27597] = 4.13125320E+00;
  COFD[27598] = -2.40808345E-01;
  COFD[27599] = 7.24910567E-03;
  COFD[27600] = -2.12339765E+01;
  COFD[27601] = 4.21068803E+00;
  COFD[27602] = -2.53139632E-01;
  COFD[27603] = 7.86344405E-03;
  COFD[27604] = -1.96575366E+01;
  COFD[27605] = 3.60715849E+00;
  COFD[27606] = -1.61238254E-01;
  COFD[27607] = 3.35598772E-03;
  COFD[27608] = -1.93404036E+01;
  COFD[27609] = 3.51545358E+00;
  COFD[27610] = -1.47552581E-01;
  COFD[27611] = 2.69390634E-03;
  COFD[27612] = -1.93486146E+01;
  COFD[27613] = 3.51545358E+00;
  COFD[27614] = -1.47552581E-01;
  COFD[27615] = 2.69390634E-03;
  COFD[27616] = -2.00613008E+01;
  COFD[27617] = 3.79091302E+00;
  COFD[27618] = -1.89108491E-01;
  COFD[27619] = 4.71759684E-03;
  COFD[27620] = -2.00375725E+01;
  COFD[27621] = 3.73374047E+00;
  COFD[27622] = -1.82912207E-01;
  COFD[27623] = 4.50345327E-03;
  COFD[27624] = -2.06377876E+01;
  COFD[27625] = 4.00877776E+00;
  COFD[27626] = -2.22342929E-01;
  COFD[27627] = 6.34836163E-03;
  COFD[27628] = -1.95380904E+01;
  COFD[27629] = 3.40915286E+00;
  COFD[27630] = -1.31742920E-01;
  COFD[27631] = 1.93243988E-03;
  COFD[27632] = -1.97076720E+01;
  COFD[27633] = 3.40915286E+00;
  COFD[27634] = -1.31742920E-01;
  COFD[27635] = 1.93243988E-03;
  COFD[27636] = -1.96139728E+01;
  COFD[27637] = 3.40915286E+00;
  COFD[27638] = -1.31742920E-01;
  COFD[27639] = 1.93243988E-03;
  COFD[27640] = -1.96139728E+01;
  COFD[27641] = 3.40915286E+00;
  COFD[27642] = -1.31742920E-01;
  COFD[27643] = 1.93243988E-03;
  COFD[27644] = -2.18616833E+01;
  COFD[27645] = 4.73247457E+00;
  COFD[27646] = -3.33891954E-01;
  COFD[27647] = 1.18713805E-02;
  COFD[27648] = -2.17361612E+01;
  COFD[27649] = 4.67107646E+00;
  COFD[27650] = -3.24176152E-01;
  COFD[27651] = 1.13816368E-02;
  COFD[27652] = -2.30241544E+01;
  COFD[27653] = 5.41936555E+00;
  COFD[27654] = -4.46990587E-01;
  COFD[27655] = 1.77221311E-02;
  COFD[27656] = -2.25995201E+01;
  COFD[27657] = 5.59491496E+00;
  COFD[27658] = -4.86385698E-01;
  COFD[27659] = 2.00929177E-02;
  COFD[27660] = -1.98506026E+01;
  COFD[27661] = 3.47027069E+00;
  COFD[27662] = -1.42345842E-01;
  COFD[27663] = 2.49921923E-03;
  COFD[27664] = -1.97438584E+01;
  COFD[27665] = 3.53711804E+00;
  COFD[27666] = -1.52627069E-01;
  COFD[27667] = 3.00816383E-03;
  COFD[27668] = -1.97389660E+01;
  COFD[27669] = 3.53711804E+00;
  COFD[27670] = -1.52627069E-01;
  COFD[27671] = 3.00816383E-03;
  COFD[27672] = -1.98860636E+01;
  COFD[27673] = 3.58002373E+00;
  COFD[27674] = -1.59403687E-01;
  COFD[27675] = 3.34925073E-03;
  COFD[27676] = -1.97278824E+01;
  COFD[27677] = 3.45878243E+00;
  COFD[27678] = -1.39122389E-01;
  COFD[27679] = 2.28755091E-03;
  COFD[27680] = -1.97906542E+01;
  COFD[27681] = 3.47027069E+00;
  COFD[27682] = -1.42345842E-01;
  COFD[27683] = 2.49921923E-03;
  COFD[27684] = -1.97867938E+01;
  COFD[27685] = 3.47027069E+00;
  COFD[27686] = -1.42345842E-01;
  COFD[27687] = 2.49921923E-03;
  COFD[27688] = -2.04052753E+01;
  COFD[27689] = 3.68933740E+00;
  COFD[27690] = -1.73601961E-01;
  COFD[27691] = 3.95720919E-03;
  COFD[27692] = -2.04021372E+01;
  COFD[27693] = 3.68933740E+00;
  COFD[27694] = -1.73601961E-01;
  COFD[27695] = 3.95720919E-03;
  COFD[27696] = -2.04021372E+01;
  COFD[27697] = 3.68933740E+00;
  COFD[27698] = -1.73601961E-01;
  COFD[27699] = 3.95720919E-03;
  COFD[27700] = -2.04021372E+01;
  COFD[27701] = 3.68933740E+00;
  COFD[27702] = -1.73601961E-01;
  COFD[27703] = 3.95720919E-03;
  COFD[27704] = -2.04021372E+01;
  COFD[27705] = 3.68933740E+00;
  COFD[27706] = -1.73601961E-01;
  COFD[27707] = 3.95720919E-03;
  COFD[27708] = -2.03906936E+01;
  COFD[27709] = 3.69340757E+00;
  COFD[27710] = -1.74428920E-01;
  COFD[27711] = 4.00486528E-03;
  COFD[27712] = -2.03906936E+01;
  COFD[27713] = 3.69340757E+00;
  COFD[27714] = -1.74428920E-01;
  COFD[27715] = 4.00486528E-03;
  COFD[27716] = -1.87460549E+01;
  COFD[27717] = 2.87978833E+00;
  COFD[27718] = -5.44866013E-02;
  COFD[27719] = -1.73658318E-03;
  COFD[27720] = -1.87460549E+01;
  COFD[27721] = 2.87978833E+00;
  COFD[27722] = -5.44866013E-02;
  COFD[27723] = -1.73658318E-03;
  COFD[27724] = -1.87460549E+01;
  COFD[27725] = 2.87978833E+00;
  COFD[27726] = -5.44866013E-02;
  COFD[27727] = -1.73658318E-03;
  COFD[27728] = -1.87460549E+01;
  COFD[27729] = 2.87978833E+00;
  COFD[27730] = -5.44866013E-02;
  COFD[27731] = -1.73658318E-03;
  COFD[27732] = -1.87460549E+01;
  COFD[27733] = 2.87978833E+00;
  COFD[27734] = -5.44866013E-02;
  COFD[27735] = -1.73658318E-03;
  COFD[27736] = -1.87460549E+01;
  COFD[27737] = 2.87978833E+00;
  COFD[27738] = -5.44866013E-02;
  COFD[27739] = -1.73658318E-03;
  COFD[27740] = -1.87460549E+01;
  COFD[27741] = 2.87978833E+00;
  COFD[27742] = -5.44866013E-02;
  COFD[27743] = -1.73658318E-03;
  COFD[27744] = -1.87460549E+01;
  COFD[27745] = 2.87978833E+00;
  COFD[27746] = -5.44866013E-02;
  COFD[27747] = -1.73658318E-03;
  COFD[27748] = -1.87460549E+01;
  COFD[27749] = 2.87978833E+00;
  COFD[27750] = -5.44866013E-02;
  COFD[27751] = -1.73658318E-03;
  COFD[27752] = -1.87460549E+01;
  COFD[27753] = 2.87978833E+00;
  COFD[27754] = -5.44866013E-02;
  COFD[27755] = -1.73658318E-03;
  COFD[27756] = -1.87460549E+01;
  COFD[27757] = 2.87978833E+00;
  COFD[27758] = -5.44866013E-02;
  COFD[27759] = -1.73658318E-03;
  COFD[27760] = -1.87460549E+01;
  COFD[27761] = 2.87978833E+00;
  COFD[27762] = -5.44866013E-02;
  COFD[27763] = -1.73658318E-03;
  COFD[27764] = -1.82720296E+01;
  COFD[27765] = 2.57361877E+00;
  COFD[27766] = -9.37133041E-03;
  COFD[27767] = -3.89889685E-03;
  COFD[27768] = -1.82720296E+01;
  COFD[27769] = 2.57361877E+00;
  COFD[27770] = -9.37133041E-03;
  COFD[27771] = -3.89889685E-03;
  COFD[27772] = -1.82720296E+01;
  COFD[27773] = 2.57361877E+00;
  COFD[27774] = -9.37133041E-03;
  COFD[27775] = -3.89889685E-03;
  COFD[27776] = -1.82720296E+01;
  COFD[27777] = 2.57361877E+00;
  COFD[27778] = -9.37133041E-03;
  COFD[27779] = -3.89889685E-03;
  COFD[27780] = -1.96225587E+01;
  COFD[27781] = 3.29753126E+00;
  COFD[27782] = -1.15163460E-01;
  COFD[27783] = 1.13479879E-03;
  COFD[27784] = -1.96225587E+01;
  COFD[27785] = 3.29753126E+00;
  COFD[27786] = -1.15163460E-01;
  COFD[27787] = 1.13479879E-03;
  COFD[27788] = -1.84159124E+01;
  COFD[27789] = 2.70290609E+00;
  COFD[27790] = -2.86258257E-02;
  COFD[27791] = -2.96892208E-03;
  COFD[27792] = -1.84159124E+01;
  COFD[27793] = 2.70290609E+00;
  COFD[27794] = -2.86258257E-02;
  COFD[27795] = -2.96892208E-03;
  COFD[27796] = -1.84159124E+01;
  COFD[27797] = 2.70290609E+00;
  COFD[27798] = -2.86258257E-02;
  COFD[27799] = -2.96892208E-03;
  COFD[27800] = -1.84159124E+01;
  COFD[27801] = 2.70290609E+00;
  COFD[27802] = -2.86258257E-02;
  COFD[27803] = -2.96892208E-03;
  COFD[27804] = -2.21044644E+01;
  COFD[27805] = 5.40171449E+00;
  COFD[27806] = -4.72533012E-01;
  COFD[27807] = 1.99357687E-02;
  COFD[27808] = -2.09747845E+01;
  COFD[27809] = 5.59188965E+00;
  COFD[27810] = -4.85691440E-01;
  COFD[27811] = 2.00506276E-02;
  COFD[27812] = -1.75957233E+01;
  COFD[27813] = 4.33581289E+00;
  COFD[27814] = -3.48934832E-01;
  COFD[27815] = 1.51685329E-02;
  COFD[27816] = -2.10956639E+01;
  COFD[27817] = 5.21743360E+00;
  COFD[27818] = -4.53376932E-01;
  COFD[27819] = 1.92954013E-02;
  COFD[27820] = -2.23772023E+01;
  COFD[27821] = 5.47401767E+00;
  COFD[27822] = -4.79460651E-01;
  COFD[27823] = 2.01386224E-02;
  COFD[27824] = -2.11234086E+01;
  COFD[27825] = 5.21743360E+00;
  COFD[27826] = -4.53376932E-01;
  COFD[27827] = 1.92954013E-02;
  COFD[27828] = -1.68808736E+01;
  COFD[27829] = 2.67272133E+00;
  COFD[27830] = -2.52954928E-02;
  COFD[27831] = -3.08293290E-03;
  COFD[27832] = -2.21215074E+01;
  COFD[27833] = 5.40452789E+00;
  COFD[27834] = -4.72714156E-01;
  COFD[27835] = 1.99362566E-02;
  COFD[27836] = -1.88807933E+01;
  COFD[27837] = 3.39465864E+00;
  COFD[27838] = -1.29587884E-01;
  COFD[27839] = 1.82868116E-03;
  COFD[27840] = -2.27195552E+01;
  COFD[27841] = 5.22366642E+00;
  COFD[27842] = -4.12932500E-01;
  COFD[27843] = 1.59020143E-02;
  COFD[27844] = -2.26313826E+01;
  COFD[27845] = 5.59491496E+00;
  COFD[27846] = -4.86385698E-01;
  COFD[27847] = 2.00929177E-02;
  COFD[27848] = -2.26529259E+01;
  COFD[27849] = 5.59823763E+00;
  COFD[27850] = -4.87149903E-01;
  COFD[27851] = 2.01394827E-02;
  COFD[27852] = -2.23541327E+01;
  COFD[27853] = 5.46244183E+00;
  COFD[27854] = -4.78171258E-01;
  COFD[27855] = 2.00910572E-02;
  COFD[27856] = -2.23666119E+01;
  COFD[27857] = 5.46244183E+00;
  COFD[27858] = -4.78171258E-01;
  COFD[27859] = 2.00910572E-02;
  COFD[27860] = -1.88952517E+01;
  COFD[27861] = 3.39465864E+00;
  COFD[27862] = -1.29587884E-01;
  COFD[27863] = 1.82868116E-03;
  COFD[27864] = -1.98201172E+01;
  COFD[27865] = 3.84591155E+00;
  COFD[27866] = -1.99613395E-01;
  COFD[27867] = 5.30794307E-03;
  COFD[27868] = -2.26542273E+01;
  COFD[27869] = 5.21560335E+00;
  COFD[27870] = -4.11558964E-01;
  COFD[27871] = 1.58296343E-02;
  COFD[27872] = -2.25379937E+01;
  COFD[27873] = 5.25915537E+00;
  COFD[27874] = -4.19162661E-01;
  COFD[27875] = 1.62360462E-02;
  COFD[27876] = -2.26397937E+01;
  COFD[27877] = 5.21560335E+00;
  COFD[27878] = -4.11558964E-01;
  COFD[27879] = 1.58296343E-02;
  COFD[27880] = -2.22901478E+01;
  COFD[27881] = 5.10542661E+00;
  COFD[27882] = -3.93251553E-01;
  COFD[27883] = 1.48773548E-02;
  COFD[27884] = -2.23064825E+01;
  COFD[27885] = 5.10542661E+00;
  COFD[27886] = -3.93251553E-01;
  COFD[27887] = 1.48773548E-02;
  COFD[27888] = -2.00185312E+01;
  COFD[27889] = 3.83478342E+00;
  COFD[27890] = -1.95849899E-01;
  COFD[27891] = 5.04983054E-03;
  COFD[27892] = -2.28223102E+01;
  COFD[27893] = 5.58209631E+00;
  COFD[27894] = -4.82952924E-01;
  COFD[27895] = 1.98726667E-02;
  COFD[27896] = -2.00279293E+01;
  COFD[27897] = 3.83478342E+00;
  COFD[27898] = -1.95849899E-01;
  COFD[27899] = 5.04983054E-03;
  COFD[27900] = -2.00279293E+01;
  COFD[27901] = 3.83478342E+00;
  COFD[27902] = -1.95849899E-01;
  COFD[27903] = 5.04983054E-03;
  COFD[27904] = -2.00370652E+01;
  COFD[27905] = 3.83478342E+00;
  COFD[27906] = -1.95849899E-01;
  COFD[27907] = 5.04983054E-03;
  COFD[27908] = -2.17464159E+01;
  COFD[27909] = 4.67107646E+00;
  COFD[27910] = -3.24176152E-01;
  COFD[27911] = 1.13816368E-02;
  COFD[27912] = -2.19554952E+01;
  COFD[27913] = 4.78501176E+00;
  COFD[27914] = -3.42294843E-01;
  COFD[27915] = 1.22974338E-02;
  COFD[27916] = -2.15096786E+01;
  COFD[27917] = 4.45083355E+00;
  COFD[27918] = -2.89586321E-01;
  COFD[27919] = 9.64806882E-03;
  COFD[27920] = -2.21395163E+01;
  COFD[27921] = 4.81651424E+00;
  COFD[27922] = -3.47291219E-01;
  COFD[27923] = 1.25498287E-02;
  COFD[27924] = -2.15325140E+01;
  COFD[27925] = 4.46485491E+00;
  COFD[27926] = -2.91765766E-01;
  COFD[27927] = 9.75650640E-03;
  COFD[27928] = -2.15392748E+01;
  COFD[27929] = 4.46485491E+00;
  COFD[27930] = -2.91765766E-01;
  COFD[27931] = 9.75650640E-03;
  COFD[27932] = -2.16849507E+01;
  COFD[27933] = 4.48620336E+00;
  COFD[27934] = -2.95085982E-01;
  COFD[27935] = 9.92181611E-03;
  COFD[27936] = -2.02949225E+01;
  COFD[27937] = 3.83774024E+00;
  COFD[27938] = -1.96304162E-01;
  COFD[27939] = 5.07218951E-03;
  COFD[27940] = -1.99255285E+01;
  COFD[27941] = 3.69583436E+00;
  COFD[27942] = -1.77091672E-01;
  COFD[27943] = 4.21695685E-03;
  COFD[27944] = -2.04236450E+01;
  COFD[27945] = 3.90507827E+00;
  COFD[27946] = -2.06632747E-01;
  COFD[27947] = 5.58034687E-03;
  COFD[27948] = -2.10658698E+01;
  COFD[27949] = 4.13125320E+00;
  COFD[27950] = -2.40808345E-01;
  COFD[27951] = 7.24910567E-03;
  COFD[27952] = -2.12339765E+01;
  COFD[27953] = 4.21068803E+00;
  COFD[27954] = -2.53139632E-01;
  COFD[27955] = 7.86344405E-03;
  COFD[27956] = -1.96575366E+01;
  COFD[27957] = 3.60715849E+00;
  COFD[27958] = -1.61238254E-01;
  COFD[27959] = 3.35598772E-03;
  COFD[27960] = -1.93404036E+01;
  COFD[27961] = 3.51545358E+00;
  COFD[27962] = -1.47552581E-01;
  COFD[27963] = 2.69390634E-03;
  COFD[27964] = -1.93486146E+01;
  COFD[27965] = 3.51545358E+00;
  COFD[27966] = -1.47552581E-01;
  COFD[27967] = 2.69390634E-03;
  COFD[27968] = -2.00613008E+01;
  COFD[27969] = 3.79091302E+00;
  COFD[27970] = -1.89108491E-01;
  COFD[27971] = 4.71759684E-03;
  COFD[27972] = -2.00375725E+01;
  COFD[27973] = 3.73374047E+00;
  COFD[27974] = -1.82912207E-01;
  COFD[27975] = 4.50345327E-03;
  COFD[27976] = -2.06377876E+01;
  COFD[27977] = 4.00877776E+00;
  COFD[27978] = -2.22342929E-01;
  COFD[27979] = 6.34836163E-03;
  COFD[27980] = -1.95380904E+01;
  COFD[27981] = 3.40915286E+00;
  COFD[27982] = -1.31742920E-01;
  COFD[27983] = 1.93243988E-03;
  COFD[27984] = -1.97076720E+01;
  COFD[27985] = 3.40915286E+00;
  COFD[27986] = -1.31742920E-01;
  COFD[27987] = 1.93243988E-03;
  COFD[27988] = -1.96139728E+01;
  COFD[27989] = 3.40915286E+00;
  COFD[27990] = -1.31742920E-01;
  COFD[27991] = 1.93243988E-03;
  COFD[27992] = -1.96139728E+01;
  COFD[27993] = 3.40915286E+00;
  COFD[27994] = -1.31742920E-01;
  COFD[27995] = 1.93243988E-03;
  COFD[27996] = -2.18616833E+01;
  COFD[27997] = 4.73247457E+00;
  COFD[27998] = -3.33891954E-01;
  COFD[27999] = 1.18713805E-02;
  COFD[28000] = -2.17361612E+01;
  COFD[28001] = 4.67107646E+00;
  COFD[28002] = -3.24176152E-01;
  COFD[28003] = 1.13816368E-02;
  COFD[28004] = -2.30241544E+01;
  COFD[28005] = 5.41936555E+00;
  COFD[28006] = -4.46990587E-01;
  COFD[28007] = 1.77221311E-02;
  COFD[28008] = -2.25995201E+01;
  COFD[28009] = 5.59491496E+00;
  COFD[28010] = -4.86385698E-01;
  COFD[28011] = 2.00929177E-02;
  COFD[28012] = -1.98506026E+01;
  COFD[28013] = 3.47027069E+00;
  COFD[28014] = -1.42345842E-01;
  COFD[28015] = 2.49921923E-03;
  COFD[28016] = -1.97438584E+01;
  COFD[28017] = 3.53711804E+00;
  COFD[28018] = -1.52627069E-01;
  COFD[28019] = 3.00816383E-03;
  COFD[28020] = -1.97389660E+01;
  COFD[28021] = 3.53711804E+00;
  COFD[28022] = -1.52627069E-01;
  COFD[28023] = 3.00816383E-03;
  COFD[28024] = -1.98860636E+01;
  COFD[28025] = 3.58002373E+00;
  COFD[28026] = -1.59403687E-01;
  COFD[28027] = 3.34925073E-03;
  COFD[28028] = -1.97278824E+01;
  COFD[28029] = 3.45878243E+00;
  COFD[28030] = -1.39122389E-01;
  COFD[28031] = 2.28755091E-03;
  COFD[28032] = -1.97906542E+01;
  COFD[28033] = 3.47027069E+00;
  COFD[28034] = -1.42345842E-01;
  COFD[28035] = 2.49921923E-03;
  COFD[28036] = -1.97867938E+01;
  COFD[28037] = 3.47027069E+00;
  COFD[28038] = -1.42345842E-01;
  COFD[28039] = 2.49921923E-03;
  COFD[28040] = -2.04052753E+01;
  COFD[28041] = 3.68933740E+00;
  COFD[28042] = -1.73601961E-01;
  COFD[28043] = 3.95720919E-03;
  COFD[28044] = -2.04021372E+01;
  COFD[28045] = 3.68933740E+00;
  COFD[28046] = -1.73601961E-01;
  COFD[28047] = 3.95720919E-03;
  COFD[28048] = -2.04021372E+01;
  COFD[28049] = 3.68933740E+00;
  COFD[28050] = -1.73601961E-01;
  COFD[28051] = 3.95720919E-03;
  COFD[28052] = -2.04021372E+01;
  COFD[28053] = 3.68933740E+00;
  COFD[28054] = -1.73601961E-01;
  COFD[28055] = 3.95720919E-03;
  COFD[28056] = -2.04021372E+01;
  COFD[28057] = 3.68933740E+00;
  COFD[28058] = -1.73601961E-01;
  COFD[28059] = 3.95720919E-03;
  COFD[28060] = -2.03906936E+01;
  COFD[28061] = 3.69340757E+00;
  COFD[28062] = -1.74428920E-01;
  COFD[28063] = 4.00486528E-03;
  COFD[28064] = -2.03906936E+01;
  COFD[28065] = 3.69340757E+00;
  COFD[28066] = -1.74428920E-01;
  COFD[28067] = 4.00486528E-03;
  COFD[28068] = -1.87460549E+01;
  COFD[28069] = 2.87978833E+00;
  COFD[28070] = -5.44866013E-02;
  COFD[28071] = -1.73658318E-03;
  COFD[28072] = -1.87460549E+01;
  COFD[28073] = 2.87978833E+00;
  COFD[28074] = -5.44866013E-02;
  COFD[28075] = -1.73658318E-03;
  COFD[28076] = -1.87460549E+01;
  COFD[28077] = 2.87978833E+00;
  COFD[28078] = -5.44866013E-02;
  COFD[28079] = -1.73658318E-03;
  COFD[28080] = -1.87460549E+01;
  COFD[28081] = 2.87978833E+00;
  COFD[28082] = -5.44866013E-02;
  COFD[28083] = -1.73658318E-03;
  COFD[28084] = -1.87460549E+01;
  COFD[28085] = 2.87978833E+00;
  COFD[28086] = -5.44866013E-02;
  COFD[28087] = -1.73658318E-03;
  COFD[28088] = -1.87460549E+01;
  COFD[28089] = 2.87978833E+00;
  COFD[28090] = -5.44866013E-02;
  COFD[28091] = -1.73658318E-03;
  COFD[28092] = -1.87460549E+01;
  COFD[28093] = 2.87978833E+00;
  COFD[28094] = -5.44866013E-02;
  COFD[28095] = -1.73658318E-03;
  COFD[28096] = -1.87460549E+01;
  COFD[28097] = 2.87978833E+00;
  COFD[28098] = -5.44866013E-02;
  COFD[28099] = -1.73658318E-03;
  COFD[28100] = -1.87460549E+01;
  COFD[28101] = 2.87978833E+00;
  COFD[28102] = -5.44866013E-02;
  COFD[28103] = -1.73658318E-03;
  COFD[28104] = -1.87460549E+01;
  COFD[28105] = 2.87978833E+00;
  COFD[28106] = -5.44866013E-02;
  COFD[28107] = -1.73658318E-03;
  COFD[28108] = -1.87460549E+01;
  COFD[28109] = 2.87978833E+00;
  COFD[28110] = -5.44866013E-02;
  COFD[28111] = -1.73658318E-03;
  COFD[28112] = -1.87460549E+01;
  COFD[28113] = 2.87978833E+00;
  COFD[28114] = -5.44866013E-02;
  COFD[28115] = -1.73658318E-03;
  COFD[28116] = -1.82720296E+01;
  COFD[28117] = 2.57361877E+00;
  COFD[28118] = -9.37133041E-03;
  COFD[28119] = -3.89889685E-03;
  COFD[28120] = -1.82720296E+01;
  COFD[28121] = 2.57361877E+00;
  COFD[28122] = -9.37133041E-03;
  COFD[28123] = -3.89889685E-03;
  COFD[28124] = -1.82720296E+01;
  COFD[28125] = 2.57361877E+00;
  COFD[28126] = -9.37133041E-03;
  COFD[28127] = -3.89889685E-03;
  COFD[28128] = -1.82720296E+01;
  COFD[28129] = 2.57361877E+00;
  COFD[28130] = -9.37133041E-03;
  COFD[28131] = -3.89889685E-03;
  COFD[28132] = -1.96225587E+01;
  COFD[28133] = 3.29753126E+00;
  COFD[28134] = -1.15163460E-01;
  COFD[28135] = 1.13479879E-03;
  COFD[28136] = -1.96225587E+01;
  COFD[28137] = 3.29753126E+00;
  COFD[28138] = -1.15163460E-01;
  COFD[28139] = 1.13479879E-03;
  COFD[28140] = -1.84159124E+01;
  COFD[28141] = 2.70290609E+00;
  COFD[28142] = -2.86258257E-02;
  COFD[28143] = -2.96892208E-03;
  COFD[28144] = -1.84159124E+01;
  COFD[28145] = 2.70290609E+00;
  COFD[28146] = -2.86258257E-02;
  COFD[28147] = -2.96892208E-03;
  COFD[28148] = -1.84159124E+01;
  COFD[28149] = 2.70290609E+00;
  COFD[28150] = -2.86258257E-02;
  COFD[28151] = -2.96892208E-03;
  COFD[28152] = -1.84159124E+01;
  COFD[28153] = 2.70290609E+00;
  COFD[28154] = -2.86258257E-02;
  COFD[28155] = -2.96892208E-03;
  COFD[28156] = -2.21044644E+01;
  COFD[28157] = 5.40171449E+00;
  COFD[28158] = -4.72533012E-01;
  COFD[28159] = 1.99357687E-02;
  COFD[28160] = -2.09747845E+01;
  COFD[28161] = 5.59188965E+00;
  COFD[28162] = -4.85691440E-01;
  COFD[28163] = 2.00506276E-02;
  COFD[28164] = -1.75957233E+01;
  COFD[28165] = 4.33581289E+00;
  COFD[28166] = -3.48934832E-01;
  COFD[28167] = 1.51685329E-02;
  COFD[28168] = -2.10956639E+01;
  COFD[28169] = 5.21743360E+00;
  COFD[28170] = -4.53376932E-01;
  COFD[28171] = 1.92954013E-02;
  COFD[28172] = -2.23772023E+01;
  COFD[28173] = 5.47401767E+00;
  COFD[28174] = -4.79460651E-01;
  COFD[28175] = 2.01386224E-02;
  COFD[28176] = -2.11234086E+01;
  COFD[28177] = 5.21743360E+00;
  COFD[28178] = -4.53376932E-01;
  COFD[28179] = 1.92954013E-02;
  COFD[28180] = -1.68808736E+01;
  COFD[28181] = 2.67272133E+00;
  COFD[28182] = -2.52954928E-02;
  COFD[28183] = -3.08293290E-03;
  COFD[28184] = -2.21215074E+01;
  COFD[28185] = 5.40452789E+00;
  COFD[28186] = -4.72714156E-01;
  COFD[28187] = 1.99362566E-02;
  COFD[28188] = -1.88807933E+01;
  COFD[28189] = 3.39465864E+00;
  COFD[28190] = -1.29587884E-01;
  COFD[28191] = 1.82868116E-03;
  COFD[28192] = -2.27195552E+01;
  COFD[28193] = 5.22366642E+00;
  COFD[28194] = -4.12932500E-01;
  COFD[28195] = 1.59020143E-02;
  COFD[28196] = -2.26313826E+01;
  COFD[28197] = 5.59491496E+00;
  COFD[28198] = -4.86385698E-01;
  COFD[28199] = 2.00929177E-02;
  COFD[28200] = -2.26529259E+01;
  COFD[28201] = 5.59823763E+00;
  COFD[28202] = -4.87149903E-01;
  COFD[28203] = 2.01394827E-02;
  COFD[28204] = -2.23541327E+01;
  COFD[28205] = 5.46244183E+00;
  COFD[28206] = -4.78171258E-01;
  COFD[28207] = 2.00910572E-02;
  COFD[28208] = -2.23666119E+01;
  COFD[28209] = 5.46244183E+00;
  COFD[28210] = -4.78171258E-01;
  COFD[28211] = 2.00910572E-02;
  COFD[28212] = -1.88952517E+01;
  COFD[28213] = 3.39465864E+00;
  COFD[28214] = -1.29587884E-01;
  COFD[28215] = 1.82868116E-03;
  COFD[28216] = -1.98201172E+01;
  COFD[28217] = 3.84591155E+00;
  COFD[28218] = -1.99613395E-01;
  COFD[28219] = 5.30794307E-03;
  COFD[28220] = -2.26542273E+01;
  COFD[28221] = 5.21560335E+00;
  COFD[28222] = -4.11558964E-01;
  COFD[28223] = 1.58296343E-02;
  COFD[28224] = -2.25379937E+01;
  COFD[28225] = 5.25915537E+00;
  COFD[28226] = -4.19162661E-01;
  COFD[28227] = 1.62360462E-02;
  COFD[28228] = -2.26397937E+01;
  COFD[28229] = 5.21560335E+00;
  COFD[28230] = -4.11558964E-01;
  COFD[28231] = 1.58296343E-02;
  COFD[28232] = -2.22901478E+01;
  COFD[28233] = 5.10542661E+00;
  COFD[28234] = -3.93251553E-01;
  COFD[28235] = 1.48773548E-02;
  COFD[28236] = -2.23064825E+01;
  COFD[28237] = 5.10542661E+00;
  COFD[28238] = -3.93251553E-01;
  COFD[28239] = 1.48773548E-02;
  COFD[28240] = -2.00185312E+01;
  COFD[28241] = 3.83478342E+00;
  COFD[28242] = -1.95849899E-01;
  COFD[28243] = 5.04983054E-03;
  COFD[28244] = -2.28223102E+01;
  COFD[28245] = 5.58209631E+00;
  COFD[28246] = -4.82952924E-01;
  COFD[28247] = 1.98726667E-02;
  COFD[28248] = -2.00279293E+01;
  COFD[28249] = 3.83478342E+00;
  COFD[28250] = -1.95849899E-01;
  COFD[28251] = 5.04983054E-03;
  COFD[28252] = -2.00279293E+01;
  COFD[28253] = 3.83478342E+00;
  COFD[28254] = -1.95849899E-01;
  COFD[28255] = 5.04983054E-03;
  COFD[28256] = -2.00370652E+01;
  COFD[28257] = 3.83478342E+00;
  COFD[28258] = -1.95849899E-01;
  COFD[28259] = 5.04983054E-03;
  COFD[28260] = -2.17464159E+01;
  COFD[28261] = 4.67107646E+00;
  COFD[28262] = -3.24176152E-01;
  COFD[28263] = 1.13816368E-02;
  COFD[28264] = -2.19554952E+01;
  COFD[28265] = 4.78501176E+00;
  COFD[28266] = -3.42294843E-01;
  COFD[28267] = 1.22974338E-02;
  COFD[28268] = -2.15096786E+01;
  COFD[28269] = 4.45083355E+00;
  COFD[28270] = -2.89586321E-01;
  COFD[28271] = 9.64806882E-03;
  COFD[28272] = -2.21395163E+01;
  COFD[28273] = 4.81651424E+00;
  COFD[28274] = -3.47291219E-01;
  COFD[28275] = 1.25498287E-02;
  COFD[28276] = -2.15325140E+01;
  COFD[28277] = 4.46485491E+00;
  COFD[28278] = -2.91765766E-01;
  COFD[28279] = 9.75650640E-03;
  COFD[28280] = -2.15392748E+01;
  COFD[28281] = 4.46485491E+00;
  COFD[28282] = -2.91765766E-01;
  COFD[28283] = 9.75650640E-03;
  COFD[28284] = -2.16849507E+01;
  COFD[28285] = 4.48620336E+00;
  COFD[28286] = -2.95085982E-01;
  COFD[28287] = 9.92181611E-03;
  COFD[28288] = -2.02949225E+01;
  COFD[28289] = 3.83774024E+00;
  COFD[28290] = -1.96304162E-01;
  COFD[28291] = 5.07218951E-03;
  COFD[28292] = -1.99255285E+01;
  COFD[28293] = 3.69583436E+00;
  COFD[28294] = -1.77091672E-01;
  COFD[28295] = 4.21695685E-03;
  COFD[28296] = -2.04236450E+01;
  COFD[28297] = 3.90507827E+00;
  COFD[28298] = -2.06632747E-01;
  COFD[28299] = 5.58034687E-03;
  COFD[28300] = -2.10658698E+01;
  COFD[28301] = 4.13125320E+00;
  COFD[28302] = -2.40808345E-01;
  COFD[28303] = 7.24910567E-03;
  COFD[28304] = -2.12339765E+01;
  COFD[28305] = 4.21068803E+00;
  COFD[28306] = -2.53139632E-01;
  COFD[28307] = 7.86344405E-03;
  COFD[28308] = -1.96575366E+01;
  COFD[28309] = 3.60715849E+00;
  COFD[28310] = -1.61238254E-01;
  COFD[28311] = 3.35598772E-03;
  COFD[28312] = -1.93404036E+01;
  COFD[28313] = 3.51545358E+00;
  COFD[28314] = -1.47552581E-01;
  COFD[28315] = 2.69390634E-03;
  COFD[28316] = -1.93486146E+01;
  COFD[28317] = 3.51545358E+00;
  COFD[28318] = -1.47552581E-01;
  COFD[28319] = 2.69390634E-03;
  COFD[28320] = -2.00613008E+01;
  COFD[28321] = 3.79091302E+00;
  COFD[28322] = -1.89108491E-01;
  COFD[28323] = 4.71759684E-03;
  COFD[28324] = -2.00375725E+01;
  COFD[28325] = 3.73374047E+00;
  COFD[28326] = -1.82912207E-01;
  COFD[28327] = 4.50345327E-03;
  COFD[28328] = -2.06377876E+01;
  COFD[28329] = 4.00877776E+00;
  COFD[28330] = -2.22342929E-01;
  COFD[28331] = 6.34836163E-03;
  COFD[28332] = -1.95380904E+01;
  COFD[28333] = 3.40915286E+00;
  COFD[28334] = -1.31742920E-01;
  COFD[28335] = 1.93243988E-03;
  COFD[28336] = -1.97076720E+01;
  COFD[28337] = 3.40915286E+00;
  COFD[28338] = -1.31742920E-01;
  COFD[28339] = 1.93243988E-03;
  COFD[28340] = -1.96139728E+01;
  COFD[28341] = 3.40915286E+00;
  COFD[28342] = -1.31742920E-01;
  COFD[28343] = 1.93243988E-03;
  COFD[28344] = -1.96139728E+01;
  COFD[28345] = 3.40915286E+00;
  COFD[28346] = -1.31742920E-01;
  COFD[28347] = 1.93243988E-03;
  COFD[28348] = -2.18616833E+01;
  COFD[28349] = 4.73247457E+00;
  COFD[28350] = -3.33891954E-01;
  COFD[28351] = 1.18713805E-02;
  COFD[28352] = -2.17361612E+01;
  COFD[28353] = 4.67107646E+00;
  COFD[28354] = -3.24176152E-01;
  COFD[28355] = 1.13816368E-02;
  COFD[28356] = -2.30241544E+01;
  COFD[28357] = 5.41936555E+00;
  COFD[28358] = -4.46990587E-01;
  COFD[28359] = 1.77221311E-02;
  COFD[28360] = -2.25995201E+01;
  COFD[28361] = 5.59491496E+00;
  COFD[28362] = -4.86385698E-01;
  COFD[28363] = 2.00929177E-02;
  COFD[28364] = -1.98506026E+01;
  COFD[28365] = 3.47027069E+00;
  COFD[28366] = -1.42345842E-01;
  COFD[28367] = 2.49921923E-03;
  COFD[28368] = -1.97438584E+01;
  COFD[28369] = 3.53711804E+00;
  COFD[28370] = -1.52627069E-01;
  COFD[28371] = 3.00816383E-03;
  COFD[28372] = -1.97389660E+01;
  COFD[28373] = 3.53711804E+00;
  COFD[28374] = -1.52627069E-01;
  COFD[28375] = 3.00816383E-03;
  COFD[28376] = -1.98860636E+01;
  COFD[28377] = 3.58002373E+00;
  COFD[28378] = -1.59403687E-01;
  COFD[28379] = 3.34925073E-03;
  COFD[28380] = -1.97278824E+01;
  COFD[28381] = 3.45878243E+00;
  COFD[28382] = -1.39122389E-01;
  COFD[28383] = 2.28755091E-03;
  COFD[28384] = -1.97906542E+01;
  COFD[28385] = 3.47027069E+00;
  COFD[28386] = -1.42345842E-01;
  COFD[28387] = 2.49921923E-03;
  COFD[28388] = -1.97867938E+01;
  COFD[28389] = 3.47027069E+00;
  COFD[28390] = -1.42345842E-01;
  COFD[28391] = 2.49921923E-03;
  COFD[28392] = -2.04052753E+01;
  COFD[28393] = 3.68933740E+00;
  COFD[28394] = -1.73601961E-01;
  COFD[28395] = 3.95720919E-03;
  COFD[28396] = -2.04021372E+01;
  COFD[28397] = 3.68933740E+00;
  COFD[28398] = -1.73601961E-01;
  COFD[28399] = 3.95720919E-03;
  COFD[28400] = -2.04021372E+01;
  COFD[28401] = 3.68933740E+00;
  COFD[28402] = -1.73601961E-01;
  COFD[28403] = 3.95720919E-03;
  COFD[28404] = -2.04021372E+01;
  COFD[28405] = 3.68933740E+00;
  COFD[28406] = -1.73601961E-01;
  COFD[28407] = 3.95720919E-03;
  COFD[28408] = -2.04021372E+01;
  COFD[28409] = 3.68933740E+00;
  COFD[28410] = -1.73601961E-01;
  COFD[28411] = 3.95720919E-03;
  COFD[28412] = -2.03906936E+01;
  COFD[28413] = 3.69340757E+00;
  COFD[28414] = -1.74428920E-01;
  COFD[28415] = 4.00486528E-03;
  COFD[28416] = -2.03906936E+01;
  COFD[28417] = 3.69340757E+00;
  COFD[28418] = -1.74428920E-01;
  COFD[28419] = 4.00486528E-03;
  COFD[28420] = -1.87460549E+01;
  COFD[28421] = 2.87978833E+00;
  COFD[28422] = -5.44866013E-02;
  COFD[28423] = -1.73658318E-03;
  COFD[28424] = -1.87460549E+01;
  COFD[28425] = 2.87978833E+00;
  COFD[28426] = -5.44866013E-02;
  COFD[28427] = -1.73658318E-03;
  COFD[28428] = -1.87460549E+01;
  COFD[28429] = 2.87978833E+00;
  COFD[28430] = -5.44866013E-02;
  COFD[28431] = -1.73658318E-03;
  COFD[28432] = -1.87460549E+01;
  COFD[28433] = 2.87978833E+00;
  COFD[28434] = -5.44866013E-02;
  COFD[28435] = -1.73658318E-03;
  COFD[28436] = -1.87460549E+01;
  COFD[28437] = 2.87978833E+00;
  COFD[28438] = -5.44866013E-02;
  COFD[28439] = -1.73658318E-03;
  COFD[28440] = -1.87460549E+01;
  COFD[28441] = 2.87978833E+00;
  COFD[28442] = -5.44866013E-02;
  COFD[28443] = -1.73658318E-03;
  COFD[28444] = -1.87460549E+01;
  COFD[28445] = 2.87978833E+00;
  COFD[28446] = -5.44866013E-02;
  COFD[28447] = -1.73658318E-03;
  COFD[28448] = -1.87460549E+01;
  COFD[28449] = 2.87978833E+00;
  COFD[28450] = -5.44866013E-02;
  COFD[28451] = -1.73658318E-03;
  COFD[28452] = -1.87460549E+01;
  COFD[28453] = 2.87978833E+00;
  COFD[28454] = -5.44866013E-02;
  COFD[28455] = -1.73658318E-03;
  COFD[28456] = -1.87460549E+01;
  COFD[28457] = 2.87978833E+00;
  COFD[28458] = -5.44866013E-02;
  COFD[28459] = -1.73658318E-03;
  COFD[28460] = -1.87460549E+01;
  COFD[28461] = 2.87978833E+00;
  COFD[28462] = -5.44866013E-02;
  COFD[28463] = -1.73658318E-03;
  COFD[28464] = -1.87460549E+01;
  COFD[28465] = 2.87978833E+00;
  COFD[28466] = -5.44866013E-02;
  COFD[28467] = -1.73658318E-03;
  COFD[28468] = -1.82720296E+01;
  COFD[28469] = 2.57361877E+00;
  COFD[28470] = -9.37133041E-03;
  COFD[28471] = -3.89889685E-03;
  COFD[28472] = -1.82720296E+01;
  COFD[28473] = 2.57361877E+00;
  COFD[28474] = -9.37133041E-03;
  COFD[28475] = -3.89889685E-03;
  COFD[28476] = -1.82720296E+01;
  COFD[28477] = 2.57361877E+00;
  COFD[28478] = -9.37133041E-03;
  COFD[28479] = -3.89889685E-03;
  COFD[28480] = -1.82720296E+01;
  COFD[28481] = 2.57361877E+00;
  COFD[28482] = -9.37133041E-03;
  COFD[28483] = -3.89889685E-03;
  COFD[28484] = -1.96225587E+01;
  COFD[28485] = 3.29753126E+00;
  COFD[28486] = -1.15163460E-01;
  COFD[28487] = 1.13479879E-03;
  COFD[28488] = -1.96225587E+01;
  COFD[28489] = 3.29753126E+00;
  COFD[28490] = -1.15163460E-01;
  COFD[28491] = 1.13479879E-03;
  COFD[28492] = -1.84159124E+01;
  COFD[28493] = 2.70290609E+00;
  COFD[28494] = -2.86258257E-02;
  COFD[28495] = -2.96892208E-03;
  COFD[28496] = -1.84159124E+01;
  COFD[28497] = 2.70290609E+00;
  COFD[28498] = -2.86258257E-02;
  COFD[28499] = -2.96892208E-03;
  COFD[28500] = -1.84159124E+01;
  COFD[28501] = 2.70290609E+00;
  COFD[28502] = -2.86258257E-02;
  COFD[28503] = -2.96892208E-03;
  COFD[28504] = -1.84159124E+01;
  COFD[28505] = 2.70290609E+00;
  COFD[28506] = -2.86258257E-02;
  COFD[28507] = -2.96892208E-03;
  COFD[28508] = -2.21044644E+01;
  COFD[28509] = 5.40171449E+00;
  COFD[28510] = -4.72533012E-01;
  COFD[28511] = 1.99357687E-02;
  COFD[28512] = -2.06159247E+01;
  COFD[28513] = 5.58747782E+00;
  COFD[28514] = -4.90741949E-01;
  COFD[28515] = 2.04923081E-02;
  COFD[28516] = -1.68463514E+01;
  COFD[28517] = 4.13808127E+00;
  COFD[28518] = -3.24712805E-01;
  COFD[28519] = 1.41766221E-02;
  COFD[28520] = -2.03920152E+01;
  COFD[28521] = 5.05863192E+00;
  COFD[28522] = -4.35922417E-01;
  COFD[28523] = 1.86655574E-02;
  COFD[28524] = -2.17710971E+01;
  COFD[28525] = 5.36593635E+00;
  COFD[28526] = -4.69961498E-01;
  COFD[28527] = 1.99078595E-02;
  COFD[28528] = -2.04187082E+01;
  COFD[28529] = 5.05863192E+00;
  COFD[28530] = -4.35922417E-01;
  COFD[28531] = 1.86655574E-02;
  COFD[28532] = -1.84220094E+01;
  COFD[28533] = 3.47063126E+00;
  COFD[28534] = -1.40883982E-01;
  COFD[28535] = 2.37234167E-03;
  COFD[28536] = -2.14768586E+01;
  COFD[28537] = 5.27615342E+00;
  COFD[28538] = -4.60265034E-01;
  COFD[28539] = 1.95651457E-02;
  COFD[28540] = -1.97330355E+01;
  COFD[28541] = 3.90822244E+00;
  COFD[28542] = -2.07112689E-01;
  COFD[28543] = 5.60389321E-03;
  COFD[28544] = -2.28084120E+01;
  COFD[28545] = 5.42479071E+00;
  COFD[28546] = -4.47980674E-01;
  COFD[28547] = 1.77763922E-02;
  COFD[28548] = -2.22722098E+01;
  COFD[28549] = 5.58214764E+00;
  COFD[28550] = -4.90223617E-01;
  COFD[28551] = 2.04764777E-02;
  COFD[28552] = -2.22469367E+01;
  COFD[28553] = 5.57022782E+00;
  COFD[28554] = -4.89175812E-01;
  COFD[28555] = 2.04504780E-02;
  COFD[28556] = -2.17831693E+01;
  COFD[28557] = 5.36593635E+00;
  COFD[28558] = -4.69961498E-01;
  COFD[28559] = 1.99078595E-02;
  COFD[28560] = -2.17947983E+01;
  COFD[28561] = 5.36593635E+00;
  COFD[28562] = -4.69961498E-01;
  COFD[28563] = 1.99078595E-02;
  COFD[28564] = -1.97466021E+01;
  COFD[28565] = 3.90822244E+00;
  COFD[28566] = -2.07112689E-01;
  COFD[28567] = 5.60389321E-03;
  COFD[28568] = -2.09218607E+01;
  COFD[28569] = 4.46389660E+00;
  COFD[28570] = -2.91616684E-01;
  COFD[28571] = 9.74908497E-03;
  COFD[28572] = -2.27597439E+01;
  COFD[28573] = 5.41143598E+00;
  COFD[28574] = -4.45532807E-01;
  COFD[28575] = 1.76418728E-02;
  COFD[28576] = -2.26161862E+01;
  COFD[28577] = 5.44859148E+00;
  COFD[28578] = -4.52270178E-01;
  COFD[28579] = 1.80102671E-02;
  COFD[28580] = -2.27462017E+01;
  COFD[28581] = 5.41143598E+00;
  COFD[28582] = -4.45532807E-01;
  COFD[28583] = 1.76418728E-02;
  COFD[28584] = -2.24630663E+01;
  COFD[28585] = 5.33329512E+00;
  COFD[28586] = -4.31764538E-01;
  COFD[28587] = 1.69009348E-02;
  COFD[28588] = -2.24784761E+01;
  COFD[28589] = 5.33329512E+00;
  COFD[28590] = -4.31764538E-01;
  COFD[28591] = 1.69009348E-02;
  COFD[28592] = -2.08412837E+01;
  COFD[28593] = 4.33912386E+00;
  COFD[28594] = -2.72408316E-01;
  COFD[28595] = 8.79879099E-03;
  COFD[28596] = -2.24855696E+01;
  COFD[28597] = 5.60129058E+00;
  COFD[28598] = -4.91513454E-01;
  COFD[28599] = 2.04857350E-02;
  COFD[28600] = -2.08499159E+01;
  COFD[28601] = 4.33912386E+00;
  COFD[28602] = -2.72408316E-01;
  COFD[28603] = 8.79879099E-03;
  COFD[28604] = -2.08499159E+01;
  COFD[28605] = 4.33912386E+00;
  COFD[28606] = -2.72408316E-01;
  COFD[28607] = 8.79879099E-03;
  COFD[28608] = -2.08582944E+01;
  COFD[28609] = 4.33912386E+00;
  COFD[28610] = -2.72408316E-01;
  COFD[28611] = 8.79879099E-03;
  COFD[28612] = -2.22169741E+01;
  COFD[28613] = 5.02646284E+00;
  COFD[28614] = -3.80470432E-01;
  COFD[28615] = 1.42230195E-02;
  COFD[28616] = -2.23907179E+01;
  COFD[28617] = 5.12724909E+00;
  COFD[28618] = -3.96815577E-01;
  COFD[28619] = 1.50609297E-02;
  COFD[28620] = -2.19893626E+01;
  COFD[28621] = 4.81152934E+00;
  COFD[28622] = -3.46508214E-01;
  COFD[28623] = 1.25105009E-02;
  COFD[28624] = -2.25645728E+01;
  COFD[28625] = 5.15063090E+00;
  COFD[28626] = -4.00687742E-01;
  COFD[28627] = 1.52618741E-02;
  COFD[28628] = -2.20087295E+01;
  COFD[28629] = 4.82482166E+00;
  COFD[28630] = -3.48596038E-01;
  COFD[28631] = 1.26153533E-02;
  COFD[28632] = -2.20148255E+01;
  COFD[28633] = 4.82482166E+00;
  COFD[28634] = -3.48596038E-01;
  COFD[28635] = 1.26153533E-02;
  COFD[28636] = -2.21622935E+01;
  COFD[28637] = 4.84380276E+00;
  COFD[28638] = -3.51593537E-01;
  COFD[28639] = 1.27663725E-02;
  COFD[28640] = -2.11210653E+01;
  COFD[28641] = 4.34237792E+00;
  COFD[28642] = -2.72907766E-01;
  COFD[28643] = 8.82344210E-03;
  COFD[28644] = -2.10950181E+01;
  COFD[28645] = 4.34433003E+00;
  COFD[28646] = -2.73207428E-01;
  COFD[28647] = 8.83823384E-03;
  COFD[28648] = -2.12591815E+01;
  COFD[28649] = 4.41437136E+00;
  COFD[28650] = -2.83972458E-01;
  COFD[28651] = 9.37020617E-03;
  COFD[28652] = -2.17740356E+01;
  COFD[28653] = 4.58709764E+00;
  COFD[28654] = -3.10814145E-01;
  COFD[28655] = 1.07061117E-02;
  COFD[28656] = -2.18873821E+01;
  COFD[28657] = 4.64237658E+00;
  COFD[28658] = -3.19644475E-01;
  COFD[28659] = 1.11535241E-02;
  COFD[28660] = -2.04542455E+01;
  COFD[28661] = 4.09822461E+00;
  COFD[28662] = -2.35816306E-01;
  COFD[28663] = 7.00531241E-03;
  COFD[28664] = -2.01420779E+01;
  COFD[28665] = 4.01441923E+00;
  COFD[28666] = -2.23192049E-01;
  COFD[28667] = 6.38970048E-03;
  COFD[28668] = -2.01495642E+01;
  COFD[28669] = 4.01441923E+00;
  COFD[28670] = -2.23192049E-01;
  COFD[28671] = 6.38970048E-03;
  COFD[28672] = -2.08691155E+01;
  COFD[28673] = 4.29186648E+00;
  COFD[28674] = -2.65181162E-01;
  COFD[28675] = 8.44308833E-03;
  COFD[28676] = -2.12204610E+01;
  COFD[28677] = 4.38593520E+00;
  COFD[28678] = -2.79601469E-01;
  COFD[28679] = 9.15410829E-03;
  COFD[28680] = -2.14307380E+01;
  COFD[28681] = 4.50055117E+00;
  COFD[28682] = -2.97317591E-01;
  COFD[28683] = 1.00329730E-02;
  COFD[28684] = -2.03772681E+01;
  COFD[28685] = 3.91965299E+00;
  COFD[28686] = -2.08857117E-01;
  COFD[28687] = 5.68950317E-03;
  COFD[28688] = -2.05241117E+01;
  COFD[28689] = 3.91965299E+00;
  COFD[28690] = -2.08857117E-01;
  COFD[28691] = 5.68950317E-03;
  COFD[28692] = -2.04437964E+01;
  COFD[28693] = 3.91965299E+00;
  COFD[28694] = -2.08857117E-01;
  COFD[28695] = 5.68950317E-03;
  COFD[28696] = -2.04437964E+01;
  COFD[28697] = 3.91965299E+00;
  COFD[28698] = -2.08857117E-01;
  COFD[28699] = 5.68950317E-03;
  COFD[28700] = -2.23076348E+01;
  COFD[28701] = 5.07809524E+00;
  COFD[28702] = -3.88822404E-01;
  COFD[28703] = 1.46503153E-02;
  COFD[28704] = -2.22075117E+01;
  COFD[28705] = 5.02646284E+00;
  COFD[28706] = -3.80470432E-01;
  COFD[28707] = 1.42230195E-02;
  COFD[28708] = -2.29410328E+01;
  COFD[28709] = 5.53878463E+00;
  COFD[28710] = -4.70234020E-01;
  COFD[28711] = 1.90385995E-02;
  COFD[28712] = -2.22414269E+01;
  COFD[28713] = 5.58214764E+00;
  COFD[28714] = -4.90223617E-01;
  COFD[28715] = 2.04764777E-02;
  COFD[28716] = -2.08693790E+01;
  COFD[28717] = 4.05696628E+00;
  COFD[28718] = -2.29598957E-01;
  COFD[28719] = 6.70192586E-03;
  COFD[28720] = -2.08136812E+01;
  COFD[28721] = 4.14346993E+00;
  COFD[28722] = -2.42655939E-01;
  COFD[28723] = 7.33938433E-03;
  COFD[28724] = -2.08093550E+01;
  COFD[28725] = 4.14346993E+00;
  COFD[28726] = -2.42655939E-01;
  COFD[28727] = 7.33938433E-03;
  COFD[28728] = -2.10371123E+01;
  COFD[28729] = 4.21928528E+00;
  COFD[28730] = -2.54124175E-01;
  COFD[28731] = 7.90025934E-03;
  COFD[28732] = -2.05405485E+01;
  COFD[28733] = 3.96097000E+00;
  COFD[28734] = -2.15163202E-01;
  COFD[28735] = 5.99928058E-03;
  COFD[28736] = -2.08175871E+01;
  COFD[28737] = 4.05696628E+00;
  COFD[28738] = -2.29598957E-01;
  COFD[28739] = 6.70192586E-03;
  COFD[28740] = -2.08142236E+01;
  COFD[28741] = 4.05696628E+00;
  COFD[28742] = -2.29598957E-01;
  COFD[28743] = 6.70192586E-03;
  COFD[28744] = -2.11861416E+01;
  COFD[28745] = 4.17689041E+00;
  COFD[28746] = -2.47710878E-01;
  COFD[28747] = 7.58649691E-03;
  COFD[28748] = -2.11834428E+01;
  COFD[28749] = 4.17689041E+00;
  COFD[28750] = -2.47710878E-01;
  COFD[28751] = 7.58649691E-03;
  COFD[28752] = -2.11834428E+01;
  COFD[28753] = 4.17689041E+00;
  COFD[28754] = -2.47710878E-01;
  COFD[28755] = 7.58649691E-03;
  COFD[28756] = -2.11834428E+01;
  COFD[28757] = 4.17689041E+00;
  COFD[28758] = -2.47710878E-01;
  COFD[28759] = 7.58649691E-03;
  COFD[28760] = -2.11834428E+01;
  COFD[28761] = 4.17689041E+00;
  COFD[28762] = -2.47710878E-01;
  COFD[28763] = 7.58649691E-03;
  COFD[28764] = -2.11960936E+01;
  COFD[28765] = 4.19044298E+00;
  COFD[28766] = -2.49760830E-01;
  COFD[28767] = 7.68677604E-03;
  COFD[28768] = -2.11960936E+01;
  COFD[28769] = 4.19044298E+00;
  COFD[28770] = -2.49760830E-01;
  COFD[28771] = 7.68677604E-03;
  COFD[28772] = -1.99684327E+01;
  COFD[28773] = 3.54868094E+00;
  COFD[28774] = -1.52503015E-01;
  COFD[28775] = 2.93310249E-03;
  COFD[28776] = -1.99684327E+01;
  COFD[28777] = 3.54868094E+00;
  COFD[28778] = -1.52503015E-01;
  COFD[28779] = 2.93310249E-03;
  COFD[28780] = -1.99684327E+01;
  COFD[28781] = 3.54868094E+00;
  COFD[28782] = -1.52503015E-01;
  COFD[28783] = 2.93310249E-03;
  COFD[28784] = -1.99684327E+01;
  COFD[28785] = 3.54868094E+00;
  COFD[28786] = -1.52503015E-01;
  COFD[28787] = 2.93310249E-03;
  COFD[28788] = -1.99684327E+01;
  COFD[28789] = 3.54868094E+00;
  COFD[28790] = -1.52503015E-01;
  COFD[28791] = 2.93310249E-03;
  COFD[28792] = -1.99684327E+01;
  COFD[28793] = 3.54868094E+00;
  COFD[28794] = -1.52503015E-01;
  COFD[28795] = 2.93310249E-03;
  COFD[28796] = -1.99684327E+01;
  COFD[28797] = 3.54868094E+00;
  COFD[28798] = -1.52503015E-01;
  COFD[28799] = 2.93310249E-03;
  COFD[28800] = -1.99684327E+01;
  COFD[28801] = 3.54868094E+00;
  COFD[28802] = -1.52503015E-01;
  COFD[28803] = 2.93310249E-03;
  COFD[28804] = -1.99684327E+01;
  COFD[28805] = 3.54868094E+00;
  COFD[28806] = -1.52503015E-01;
  COFD[28807] = 2.93310249E-03;
  COFD[28808] = -1.99684327E+01;
  COFD[28809] = 3.54868094E+00;
  COFD[28810] = -1.52503015E-01;
  COFD[28811] = 2.93310249E-03;
  COFD[28812] = -1.99684327E+01;
  COFD[28813] = 3.54868094E+00;
  COFD[28814] = -1.52503015E-01;
  COFD[28815] = 2.93310249E-03;
  COFD[28816] = -1.99684327E+01;
  COFD[28817] = 3.54868094E+00;
  COFD[28818] = -1.52503015E-01;
  COFD[28819] = 2.93310249E-03;
  COFD[28820] = -1.96225587E+01;
  COFD[28821] = 3.29753126E+00;
  COFD[28822] = -1.15163460E-01;
  COFD[28823] = 1.13479879E-03;
  COFD[28824] = -1.96225587E+01;
  COFD[28825] = 3.29753126E+00;
  COFD[28826] = -1.15163460E-01;
  COFD[28827] = 1.13479879E-03;
  COFD[28828] = -1.96225587E+01;
  COFD[28829] = 3.29753126E+00;
  COFD[28830] = -1.15163460E-01;
  COFD[28831] = 1.13479879E-03;
  COFD[28832] = -1.96225587E+01;
  COFD[28833] = 3.29753126E+00;
  COFD[28834] = -1.15163460E-01;
  COFD[28835] = 1.13479879E-03;
  COFD[28836] = -2.05255165E+01;
  COFD[28837] = 3.83704211E+00;
  COFD[28838] = -1.96196896E-01;
  COFD[28839] = 5.06690956E-03;
  COFD[28840] = -2.05255165E+01;
  COFD[28841] = 3.83704211E+00;
  COFD[28842] = -1.96196896E-01;
  COFD[28843] = 5.06690956E-03;
  COFD[28844] = -1.97408903E+01;
  COFD[28845] = 3.41595311E+00;
  COFD[28846] = -1.32754214E-01;
  COFD[28847] = 1.98113878E-03;
  COFD[28848] = -1.97408903E+01;
  COFD[28849] = 3.41595311E+00;
  COFD[28850] = -1.32754214E-01;
  COFD[28851] = 1.98113878E-03;
  COFD[28852] = -1.97408903E+01;
  COFD[28853] = 3.41595311E+00;
  COFD[28854] = -1.32754214E-01;
  COFD[28855] = 1.98113878E-03;
  COFD[28856] = -1.97408903E+01;
  COFD[28857] = 3.41595311E+00;
  COFD[28858] = -1.32754214E-01;
  COFD[28859] = 1.98113878E-03;
  COFD[28860] = -2.14459016E+01;
  COFD[28861] = 5.26732625E+00;
  COFD[28862] = -4.59210404E-01;
  COFD[28863] = 1.95229908E-02;
  COFD[28864] = -2.06159247E+01;
  COFD[28865] = 5.58747782E+00;
  COFD[28866] = -4.90741949E-01;
  COFD[28867] = 2.04923081E-02;
  COFD[28868] = -1.68463514E+01;
  COFD[28869] = 4.13808127E+00;
  COFD[28870] = -3.24712805E-01;
  COFD[28871] = 1.41766221E-02;
  COFD[28872] = -2.03920152E+01;
  COFD[28873] = 5.05863192E+00;
  COFD[28874] = -4.35922417E-01;
  COFD[28875] = 1.86655574E-02;
  COFD[28876] = -2.17710971E+01;
  COFD[28877] = 5.36593635E+00;
  COFD[28878] = -4.69961498E-01;
  COFD[28879] = 1.99078595E-02;
  COFD[28880] = -2.04187082E+01;
  COFD[28881] = 5.05863192E+00;
  COFD[28882] = -4.35922417E-01;
  COFD[28883] = 1.86655574E-02;
  COFD[28884] = -1.84220094E+01;
  COFD[28885] = 3.47063126E+00;
  COFD[28886] = -1.40883982E-01;
  COFD[28887] = 2.37234167E-03;
  COFD[28888] = -2.14768586E+01;
  COFD[28889] = 5.27615342E+00;
  COFD[28890] = -4.60265034E-01;
  COFD[28891] = 1.95651457E-02;
  COFD[28892] = -1.97330355E+01;
  COFD[28893] = 3.90822244E+00;
  COFD[28894] = -2.07112689E-01;
  COFD[28895] = 5.60389321E-03;
  COFD[28896] = -2.28084120E+01;
  COFD[28897] = 5.42479071E+00;
  COFD[28898] = -4.47980674E-01;
  COFD[28899] = 1.77763922E-02;
  COFD[28900] = -2.22722098E+01;
  COFD[28901] = 5.58214764E+00;
  COFD[28902] = -4.90223617E-01;
  COFD[28903] = 2.04764777E-02;
  COFD[28904] = -2.22469367E+01;
  COFD[28905] = 5.57022782E+00;
  COFD[28906] = -4.89175812E-01;
  COFD[28907] = 2.04504780E-02;
  COFD[28908] = -2.17831693E+01;
  COFD[28909] = 5.36593635E+00;
  COFD[28910] = -4.69961498E-01;
  COFD[28911] = 1.99078595E-02;
  COFD[28912] = -2.17947983E+01;
  COFD[28913] = 5.36593635E+00;
  COFD[28914] = -4.69961498E-01;
  COFD[28915] = 1.99078595E-02;
  COFD[28916] = -1.97466021E+01;
  COFD[28917] = 3.90822244E+00;
  COFD[28918] = -2.07112689E-01;
  COFD[28919] = 5.60389321E-03;
  COFD[28920] = -2.09218607E+01;
  COFD[28921] = 4.46389660E+00;
  COFD[28922] = -2.91616684E-01;
  COFD[28923] = 9.74908497E-03;
  COFD[28924] = -2.27597439E+01;
  COFD[28925] = 5.41143598E+00;
  COFD[28926] = -4.45532807E-01;
  COFD[28927] = 1.76418728E-02;
  COFD[28928] = -2.26161862E+01;
  COFD[28929] = 5.44859148E+00;
  COFD[28930] = -4.52270178E-01;
  COFD[28931] = 1.80102671E-02;
  COFD[28932] = -2.27462017E+01;
  COFD[28933] = 5.41143598E+00;
  COFD[28934] = -4.45532807E-01;
  COFD[28935] = 1.76418728E-02;
  COFD[28936] = -2.24630663E+01;
  COFD[28937] = 5.33329512E+00;
  COFD[28938] = -4.31764538E-01;
  COFD[28939] = 1.69009348E-02;
  COFD[28940] = -2.24784761E+01;
  COFD[28941] = 5.33329512E+00;
  COFD[28942] = -4.31764538E-01;
  COFD[28943] = 1.69009348E-02;
  COFD[28944] = -2.08412837E+01;
  COFD[28945] = 4.33912386E+00;
  COFD[28946] = -2.72408316E-01;
  COFD[28947] = 8.79879099E-03;
  COFD[28948] = -2.24855696E+01;
  COFD[28949] = 5.60129058E+00;
  COFD[28950] = -4.91513454E-01;
  COFD[28951] = 2.04857350E-02;
  COFD[28952] = -2.08499159E+01;
  COFD[28953] = 4.33912386E+00;
  COFD[28954] = -2.72408316E-01;
  COFD[28955] = 8.79879099E-03;
  COFD[28956] = -2.08499159E+01;
  COFD[28957] = 4.33912386E+00;
  COFD[28958] = -2.72408316E-01;
  COFD[28959] = 8.79879099E-03;
  COFD[28960] = -2.08582944E+01;
  COFD[28961] = 4.33912386E+00;
  COFD[28962] = -2.72408316E-01;
  COFD[28963] = 8.79879099E-03;
  COFD[28964] = -2.22169741E+01;
  COFD[28965] = 5.02646284E+00;
  COFD[28966] = -3.80470432E-01;
  COFD[28967] = 1.42230195E-02;
  COFD[28968] = -2.23907179E+01;
  COFD[28969] = 5.12724909E+00;
  COFD[28970] = -3.96815577E-01;
  COFD[28971] = 1.50609297E-02;
  COFD[28972] = -2.19893626E+01;
  COFD[28973] = 4.81152934E+00;
  COFD[28974] = -3.46508214E-01;
  COFD[28975] = 1.25105009E-02;
  COFD[28976] = -2.25645728E+01;
  COFD[28977] = 5.15063090E+00;
  COFD[28978] = -4.00687742E-01;
  COFD[28979] = 1.52618741E-02;
  COFD[28980] = -2.20087295E+01;
  COFD[28981] = 4.82482166E+00;
  COFD[28982] = -3.48596038E-01;
  COFD[28983] = 1.26153533E-02;
  COFD[28984] = -2.20148255E+01;
  COFD[28985] = 4.82482166E+00;
  COFD[28986] = -3.48596038E-01;
  COFD[28987] = 1.26153533E-02;
  COFD[28988] = -2.21622935E+01;
  COFD[28989] = 4.84380276E+00;
  COFD[28990] = -3.51593537E-01;
  COFD[28991] = 1.27663725E-02;
  COFD[28992] = -2.11210653E+01;
  COFD[28993] = 4.34237792E+00;
  COFD[28994] = -2.72907766E-01;
  COFD[28995] = 8.82344210E-03;
  COFD[28996] = -2.10950181E+01;
  COFD[28997] = 4.34433003E+00;
  COFD[28998] = -2.73207428E-01;
  COFD[28999] = 8.83823384E-03;
  COFD[29000] = -2.12591815E+01;
  COFD[29001] = 4.41437136E+00;
  COFD[29002] = -2.83972458E-01;
  COFD[29003] = 9.37020617E-03;
  COFD[29004] = -2.17740356E+01;
  COFD[29005] = 4.58709764E+00;
  COFD[29006] = -3.10814145E-01;
  COFD[29007] = 1.07061117E-02;
  COFD[29008] = -2.18873821E+01;
  COFD[29009] = 4.64237658E+00;
  COFD[29010] = -3.19644475E-01;
  COFD[29011] = 1.11535241E-02;
  COFD[29012] = -2.04542455E+01;
  COFD[29013] = 4.09822461E+00;
  COFD[29014] = -2.35816306E-01;
  COFD[29015] = 7.00531241E-03;
  COFD[29016] = -2.01420779E+01;
  COFD[29017] = 4.01441923E+00;
  COFD[29018] = -2.23192049E-01;
  COFD[29019] = 6.38970048E-03;
  COFD[29020] = -2.01495642E+01;
  COFD[29021] = 4.01441923E+00;
  COFD[29022] = -2.23192049E-01;
  COFD[29023] = 6.38970048E-03;
  COFD[29024] = -2.08691155E+01;
  COFD[29025] = 4.29186648E+00;
  COFD[29026] = -2.65181162E-01;
  COFD[29027] = 8.44308833E-03;
  COFD[29028] = -2.12204610E+01;
  COFD[29029] = 4.38593520E+00;
  COFD[29030] = -2.79601469E-01;
  COFD[29031] = 9.15410829E-03;
  COFD[29032] = -2.14307380E+01;
  COFD[29033] = 4.50055117E+00;
  COFD[29034] = -2.97317591E-01;
  COFD[29035] = 1.00329730E-02;
  COFD[29036] = -2.03772681E+01;
  COFD[29037] = 3.91965299E+00;
  COFD[29038] = -2.08857117E-01;
  COFD[29039] = 5.68950317E-03;
  COFD[29040] = -2.05241117E+01;
  COFD[29041] = 3.91965299E+00;
  COFD[29042] = -2.08857117E-01;
  COFD[29043] = 5.68950317E-03;
  COFD[29044] = -2.04437964E+01;
  COFD[29045] = 3.91965299E+00;
  COFD[29046] = -2.08857117E-01;
  COFD[29047] = 5.68950317E-03;
  COFD[29048] = -2.04437964E+01;
  COFD[29049] = 3.91965299E+00;
  COFD[29050] = -2.08857117E-01;
  COFD[29051] = 5.68950317E-03;
  COFD[29052] = -2.23076348E+01;
  COFD[29053] = 5.07809524E+00;
  COFD[29054] = -3.88822404E-01;
  COFD[29055] = 1.46503153E-02;
  COFD[29056] = -2.22075117E+01;
  COFD[29057] = 5.02646284E+00;
  COFD[29058] = -3.80470432E-01;
  COFD[29059] = 1.42230195E-02;
  COFD[29060] = -2.29410328E+01;
  COFD[29061] = 5.53878463E+00;
  COFD[29062] = -4.70234020E-01;
  COFD[29063] = 1.90385995E-02;
  COFD[29064] = -2.22414269E+01;
  COFD[29065] = 5.58214764E+00;
  COFD[29066] = -4.90223617E-01;
  COFD[29067] = 2.04764777E-02;
  COFD[29068] = -2.08693790E+01;
  COFD[29069] = 4.05696628E+00;
  COFD[29070] = -2.29598957E-01;
  COFD[29071] = 6.70192586E-03;
  COFD[29072] = -2.08136812E+01;
  COFD[29073] = 4.14346993E+00;
  COFD[29074] = -2.42655939E-01;
  COFD[29075] = 7.33938433E-03;
  COFD[29076] = -2.08093550E+01;
  COFD[29077] = 4.14346993E+00;
  COFD[29078] = -2.42655939E-01;
  COFD[29079] = 7.33938433E-03;
  COFD[29080] = -2.10371123E+01;
  COFD[29081] = 4.21928528E+00;
  COFD[29082] = -2.54124175E-01;
  COFD[29083] = 7.90025934E-03;
  COFD[29084] = -2.05405485E+01;
  COFD[29085] = 3.96097000E+00;
  COFD[29086] = -2.15163202E-01;
  COFD[29087] = 5.99928058E-03;
  COFD[29088] = -2.08175871E+01;
  COFD[29089] = 4.05696628E+00;
  COFD[29090] = -2.29598957E-01;
  COFD[29091] = 6.70192586E-03;
  COFD[29092] = -2.08142236E+01;
  COFD[29093] = 4.05696628E+00;
  COFD[29094] = -2.29598957E-01;
  COFD[29095] = 6.70192586E-03;
  COFD[29096] = -2.11861416E+01;
  COFD[29097] = 4.17689041E+00;
  COFD[29098] = -2.47710878E-01;
  COFD[29099] = 7.58649691E-03;
  COFD[29100] = -2.11834428E+01;
  COFD[29101] = 4.17689041E+00;
  COFD[29102] = -2.47710878E-01;
  COFD[29103] = 7.58649691E-03;
  COFD[29104] = -2.11834428E+01;
  COFD[29105] = 4.17689041E+00;
  COFD[29106] = -2.47710878E-01;
  COFD[29107] = 7.58649691E-03;
  COFD[29108] = -2.11834428E+01;
  COFD[29109] = 4.17689041E+00;
  COFD[29110] = -2.47710878E-01;
  COFD[29111] = 7.58649691E-03;
  COFD[29112] = -2.11834428E+01;
  COFD[29113] = 4.17689041E+00;
  COFD[29114] = -2.47710878E-01;
  COFD[29115] = 7.58649691E-03;
  COFD[29116] = -2.11960936E+01;
  COFD[29117] = 4.19044298E+00;
  COFD[29118] = -2.49760830E-01;
  COFD[29119] = 7.68677604E-03;
  COFD[29120] = -2.11960936E+01;
  COFD[29121] = 4.19044298E+00;
  COFD[29122] = -2.49760830E-01;
  COFD[29123] = 7.68677604E-03;
  COFD[29124] = -1.99684327E+01;
  COFD[29125] = 3.54868094E+00;
  COFD[29126] = -1.52503015E-01;
  COFD[29127] = 2.93310249E-03;
  COFD[29128] = -1.99684327E+01;
  COFD[29129] = 3.54868094E+00;
  COFD[29130] = -1.52503015E-01;
  COFD[29131] = 2.93310249E-03;
  COFD[29132] = -1.99684327E+01;
  COFD[29133] = 3.54868094E+00;
  COFD[29134] = -1.52503015E-01;
  COFD[29135] = 2.93310249E-03;
  COFD[29136] = -1.99684327E+01;
  COFD[29137] = 3.54868094E+00;
  COFD[29138] = -1.52503015E-01;
  COFD[29139] = 2.93310249E-03;
  COFD[29140] = -1.99684327E+01;
  COFD[29141] = 3.54868094E+00;
  COFD[29142] = -1.52503015E-01;
  COFD[29143] = 2.93310249E-03;
  COFD[29144] = -1.99684327E+01;
  COFD[29145] = 3.54868094E+00;
  COFD[29146] = -1.52503015E-01;
  COFD[29147] = 2.93310249E-03;
  COFD[29148] = -1.99684327E+01;
  COFD[29149] = 3.54868094E+00;
  COFD[29150] = -1.52503015E-01;
  COFD[29151] = 2.93310249E-03;
  COFD[29152] = -1.99684327E+01;
  COFD[29153] = 3.54868094E+00;
  COFD[29154] = -1.52503015E-01;
  COFD[29155] = 2.93310249E-03;
  COFD[29156] = -1.99684327E+01;
  COFD[29157] = 3.54868094E+00;
  COFD[29158] = -1.52503015E-01;
  COFD[29159] = 2.93310249E-03;
  COFD[29160] = -1.99684327E+01;
  COFD[29161] = 3.54868094E+00;
  COFD[29162] = -1.52503015E-01;
  COFD[29163] = 2.93310249E-03;
  COFD[29164] = -1.99684327E+01;
  COFD[29165] = 3.54868094E+00;
  COFD[29166] = -1.52503015E-01;
  COFD[29167] = 2.93310249E-03;
  COFD[29168] = -1.99684327E+01;
  COFD[29169] = 3.54868094E+00;
  COFD[29170] = -1.52503015E-01;
  COFD[29171] = 2.93310249E-03;
  COFD[29172] = -1.96225587E+01;
  COFD[29173] = 3.29753126E+00;
  COFD[29174] = -1.15163460E-01;
  COFD[29175] = 1.13479879E-03;
  COFD[29176] = -1.96225587E+01;
  COFD[29177] = 3.29753126E+00;
  COFD[29178] = -1.15163460E-01;
  COFD[29179] = 1.13479879E-03;
  COFD[29180] = -1.96225587E+01;
  COFD[29181] = 3.29753126E+00;
  COFD[29182] = -1.15163460E-01;
  COFD[29183] = 1.13479879E-03;
  COFD[29184] = -1.96225587E+01;
  COFD[29185] = 3.29753126E+00;
  COFD[29186] = -1.15163460E-01;
  COFD[29187] = 1.13479879E-03;
  COFD[29188] = -2.05255165E+01;
  COFD[29189] = 3.83704211E+00;
  COFD[29190] = -1.96196896E-01;
  COFD[29191] = 5.06690956E-03;
  COFD[29192] = -2.05255165E+01;
  COFD[29193] = 3.83704211E+00;
  COFD[29194] = -1.96196896E-01;
  COFD[29195] = 5.06690956E-03;
  COFD[29196] = -1.97408903E+01;
  COFD[29197] = 3.41595311E+00;
  COFD[29198] = -1.32754214E-01;
  COFD[29199] = 1.98113878E-03;
  COFD[29200] = -1.97408903E+01;
  COFD[29201] = 3.41595311E+00;
  COFD[29202] = -1.32754214E-01;
  COFD[29203] = 1.98113878E-03;
  COFD[29204] = -1.97408903E+01;
  COFD[29205] = 3.41595311E+00;
  COFD[29206] = -1.32754214E-01;
  COFD[29207] = 1.98113878E-03;
  COFD[29208] = -1.97408903E+01;
  COFD[29209] = 3.41595311E+00;
  COFD[29210] = -1.32754214E-01;
  COFD[29211] = 1.98113878E-03;
  COFD[29212] = -2.14459016E+01;
  COFD[29213] = 5.26732625E+00;
  COFD[29214] = -4.59210404E-01;
  COFD[29215] = 1.95229908E-02;
  COFD[29216] = -2.08170058E+01;
  COFD[29217] = 5.60629422E+00;
  COFD[29218] = -4.88952090E-01;
  COFD[29219] = 2.02479944E-02;
  COFD[29220] = -1.73598913E+01;
  COFD[29221] = 4.30369076E+00;
  COFD[29222] = -3.44934911E-01;
  COFD[29223] = 1.50019519E-02;
  COFD[29224] = -2.08183453E+01;
  COFD[29225] = 5.17587280E+00;
  COFD[29226] = -4.48540980E-01;
  COFD[29227] = 1.91076775E-02;
  COFD[29228] = -2.21352015E+01;
  COFD[29229] = 5.44360767E+00;
  COFD[29230] = -4.76093122E-01;
  COFD[29231] = 2.00152977E-02;
  COFD[29232] = -2.08457967E+01;
  COFD[29233] = 5.17587280E+00;
  COFD[29234] = -4.48540980E-01;
  COFD[29235] = 1.91076775E-02;
  COFD[29236] = -1.68671380E+01;
  COFD[29237] = 2.74353481E+00;
  COFD[29238] = -3.62101811E-02;
  COFD[29239] = -2.53731692E-03;
  COFD[29240] = -2.19303974E+01;
  COFD[29241] = 5.39345912E+00;
  COFD[29242] = -4.71992292E-01;
  COFD[29243] = 1.99337081E-02;
  COFD[29244] = -1.89866169E+01;
  COFD[29245] = 3.51383700E+00;
  COFD[29246] = -1.47311797E-01;
  COFD[29247] = 2.68227514E-03;
  COFD[29248] = -2.26171653E+01;
  COFD[29249] = 5.25394583E+00;
  COFD[29250] = -4.18252204E-01;
  COFD[29251] = 1.61873245E-02;
  COFD[29252] = -2.24943326E+01;
  COFD[29253] = 5.60859334E+00;
  COFD[29254] = -4.89526797E-01;
  COFD[29255] = 2.02839728E-02;
  COFD[29256] = -2.25146548E+01;
  COFD[29257] = 5.60863009E+00;
  COFD[29258] = -4.89536007E-01;
  COFD[29259] = 2.02845498E-02;
  COFD[29260] = -2.20818748E+01;
  COFD[29261] = 5.42166606E+00;
  COFD[29262] = -4.73555282E-01;
  COFD[29263] = 1.99172179E-02;
  COFD[29264] = -2.20941115E+01;
  COFD[29265] = 5.42166606E+00;
  COFD[29266] = -4.73555282E-01;
  COFD[29267] = 1.99172179E-02;
  COFD[29268] = -1.90008222E+01;
  COFD[29269] = 3.51383700E+00;
  COFD[29270] = -1.47311797E-01;
  COFD[29271] = 2.68227514E-03;
  COFD[29272] = -1.97858016E+01;
  COFD[29273] = 3.90424489E+00;
  COFD[29274] = -2.08873997E-01;
  COFD[29275] = 5.77813510E-03;
  COFD[29276] = -2.25741250E+01;
  COFD[29277] = 5.25350038E+00;
  COFD[29278] = -4.18174534E-01;
  COFD[29279] = 1.61831733E-02;
  COFD[29280] = -2.24660218E+01;
  COFD[29281] = 5.30519385E+00;
  COFD[29282] = -4.26982994E-01;
  COFD[29283] = 1.66486409E-02;
  COFD[29284] = -2.25599444E+01;
  COFD[29285] = 5.25350038E+00;
  COFD[29286] = -4.18174534E-01;
  COFD[29287] = 1.61831733E-02;
  COFD[29288] = -2.22410835E+01;
  COFD[29289] = 5.15974104E+00;
  COFD[29290] = -4.02219303E-01;
  COFD[29291] = 1.53420433E-02;
  COFD[29292] = -2.22571566E+01;
  COFD[29293] = 5.15974104E+00;
  COFD[29294] = -4.02219303E-01;
  COFD[29295] = 1.53420433E-02;
  COFD[29296] = -2.00502279E+01;
  COFD[29297] = 3.92262843E+00;
  COFD[29298] = -2.09310993E-01;
  COFD[29299] = 5.71178653E-03;
  COFD[29300] = -2.26475227E+01;
  COFD[29301] = 5.59137662E+00;
  COFD[29302] = -4.85571189E-01;
  COFD[29303] = 2.00432448E-02;
  COFD[29304] = -2.00594053E+01;
  COFD[29305] = 3.92262843E+00;
  COFD[29306] = -2.09310993E-01;
  COFD[29307] = 5.71178653E-03;
  COFD[29308] = -2.00594053E+01;
  COFD[29309] = 3.92262843E+00;
  COFD[29310] = -2.09310993E-01;
  COFD[29311] = 5.71178653E-03;
  COFD[29312] = -2.00683227E+01;
  COFD[29313] = 3.92262843E+00;
  COFD[29314] = -2.09310993E-01;
  COFD[29315] = 5.71178653E-03;
  COFD[29316] = -2.17442970E+01;
  COFD[29317] = 4.74371045E+00;
  COFD[29318] = -3.35675372E-01;
  COFD[29319] = 1.19614146E-02;
  COFD[29320] = -2.19520650E+01;
  COFD[29321] = 4.85782498E+00;
  COFD[29322] = -3.53809801E-01;
  COFD[29323] = 1.28781197E-02;
  COFD[29324] = -2.15338676E+01;
  COFD[29325] = 4.53358618E+00;
  COFD[29326] = -3.02459014E-01;
  COFD[29327] = 1.02891951E-02;
  COFD[29328] = -2.21465586E+01;
  COFD[29329] = 4.89062970E+00;
  COFD[29330] = -3.58987885E-01;
  COFD[29331] = 1.31390176E-02;
  COFD[29332] = -2.15564632E+01;
  COFD[29333] = 4.54793947E+00;
  COFD[29334] = -3.04689240E-01;
  COFD[29335] = 1.04001889E-02;
  COFD[29336] = -2.15630299E+01;
  COFD[29337] = 4.54793947E+00;
  COFD[29338] = -3.04689240E-01;
  COFD[29339] = 1.04001889E-02;
  COFD[29340] = -2.17127658E+01;
  COFD[29341] = 4.56847552E+00;
  COFD[29342] = -3.07892621E-01;
  COFD[29343] = 1.05599169E-02;
  COFD[29344] = -2.03345575E+01;
  COFD[29345] = 3.92596644E+00;
  COFD[29346] = -2.09820551E-01;
  COFD[29347] = 5.73681575E-03;
  COFD[29348] = -1.98067360E+01;
  COFD[29349] = 3.71493056E+00;
  COFD[29350] = -1.80752425E-01;
  COFD[29351] = 4.42380779E-03;
  COFD[29352] = -2.04999495E+01;
  COFD[29353] = 4.00914737E+00;
  COFD[29354] = -2.22398560E-01;
  COFD[29355] = 6.35106995E-03;
  COFD[29356] = -2.11611573E+01;
  COFD[29357] = 4.24185230E+00;
  COFD[29358] = -2.57542334E-01;
  COFD[29359] = 8.06755240E-03;
  COFD[29360] = -2.12838916E+01;
  COFD[29361] = 4.30205261E+00;
  COFD[29362] = -2.67181974E-01;
  COFD[29363] = 8.55702247E-03;
  COFD[29364] = -1.97411863E+01;
  COFD[29365] = 3.71520828E+00;
  COFD[29366] = -1.77538797E-01;
  COFD[29367] = 4.14984571E-03;
  COFD[29368] = -1.94537340E+01;
  COFD[29369] = 3.64033093E+00;
  COFD[29370] = -1.66213611E-01;
  COFD[29371] = 3.59745099E-03;
  COFD[29372] = -1.94617350E+01;
  COFD[29373] = 3.64033093E+00;
  COFD[29374] = -1.66213611E-01;
  COFD[29375] = 3.59745099E-03;
  COFD[29376] = -2.00872766E+01;
  COFD[29377] = 3.87686370E+00;
  COFD[29378] = -2.02322128E-01;
  COFD[29379] = 5.36874766E-03;
  COFD[29380] = -1.99417326E+01;
  COFD[29381] = 3.76108685E+00;
  COFD[29382] = -1.87735573E-01;
  COFD[29383] = 4.76470694E-03;
  COFD[29384] = -2.07382952E+01;
  COFD[29385] = 4.12323414E+00;
  COFD[29386] = -2.39594601E-01;
  COFD[29387] = 7.18979047E-03;
  COFD[29388] = -1.96568362E+01;
  COFD[29389] = 3.52976100E+00;
  COFD[29390] = -1.49683857E-01;
  COFD[29391] = 2.79687002E-03;
  COFD[29392] = -1.98195803E+01;
  COFD[29393] = 3.52976100E+00;
  COFD[29394] = -1.49683857E-01;
  COFD[29395] = 2.79687002E-03;
  COFD[29396] = -1.97299320E+01;
  COFD[29397] = 3.52976100E+00;
  COFD[29398] = -1.49683857E-01;
  COFD[29399] = 2.79687002E-03;
  COFD[29400] = -1.97299320E+01;
  COFD[29401] = 3.52976100E+00;
  COFD[29402] = -1.49683857E-01;
  COFD[29403] = 2.79687002E-03;
  COFD[29404] = -2.18410109E+01;
  COFD[29405] = 4.79752905E+00;
  COFD[29406] = -3.44308429E-01;
  COFD[29407] = 1.23999967E-02;
  COFD[29408] = -2.17342699E+01;
  COFD[29409] = 4.74371045E+00;
  COFD[29410] = -3.35675372E-01;
  COFD[29411] = 1.19614146E-02;
  COFD[29412] = -2.29274321E+01;
  COFD[29413] = 5.45232880E+00;
  COFD[29414] = -4.52947326E-01;
  COFD[29415] = 1.80473045E-02;
  COFD[29416] = -2.24627701E+01;
  COFD[29417] = 5.60859334E+00;
  COFD[29418] = -4.89526797E-01;
  COFD[29419] = 2.02839728E-02;
  COFD[29420] = -1.98637741E+01;
  COFD[29421] = 3.54601621E+00;
  COFD[29422] = -1.54142413E-01;
  COFD[29423] = 3.08850126E-03;
  COFD[29424] = -1.96773419E+01;
  COFD[29425] = 3.57920460E+00;
  COFD[29426] = -1.59621434E-01;
  COFD[29427] = 3.37254895E-03;
  COFD[29428] = -1.96726171E+01;
  COFD[29429] = 3.57920460E+00;
  COFD[29430] = -1.59621434E-01;
  COFD[29431] = 3.37254895E-03;
  COFD[29432] = -1.97813741E+01;
  COFD[29433] = 3.60327211E+00;
  COFD[29434] = -1.63687575E-01;
  COFD[29435] = 3.58623059E-03;
  COFD[29436] = -1.98575925E+01;
  COFD[29437] = 3.58487702E+00;
  COFD[29438] = -1.57907725E-01;
  COFD[29439] = 3.19471943E-03;
  COFD[29440] = -1.98062805E+01;
  COFD[29441] = 3.54601621E+00;
  COFD[29442] = -1.54142413E-01;
  COFD[29443] = 3.08850126E-03;
  COFD[29444] = -1.98025688E+01;
  COFD[29445] = 3.54601621E+00;
  COFD[29446] = -1.54142413E-01;
  COFD[29447] = 3.08850126E-03;
  COFD[29448] = -2.04598528E+01;
  COFD[29449] = 3.78121973E+00;
  COFD[29450] = -1.87619388E-01;
  COFD[29451] = 4.64425873E-03;
  COFD[29452] = -2.04568473E+01;
  COFD[29453] = 3.78121973E+00;
  COFD[29454] = -1.87619388E-01;
  COFD[29455] = 4.64425873E-03;
  COFD[29456] = -2.04568473E+01;
  COFD[29457] = 3.78121973E+00;
  COFD[29458] = -1.87619388E-01;
  COFD[29459] = 4.64425873E-03;
  COFD[29460] = -2.04568473E+01;
  COFD[29461] = 3.78121973E+00;
  COFD[29462] = -1.87619388E-01;
  COFD[29463] = 4.64425873E-03;
  COFD[29464] = -2.04568473E+01;
  COFD[29465] = 3.78121973E+00;
  COFD[29466] = -1.87619388E-01;
  COFD[29467] = 4.64425873E-03;
  COFD[29468] = -2.04363403E+01;
  COFD[29469] = 3.78198958E+00;
  COFD[29470] = -1.88024034E-01;
  COFD[29471] = 4.67404845E-03;
  COFD[29472] = -2.04363403E+01;
  COFD[29473] = 3.78198958E+00;
  COFD[29474] = -1.88024034E-01;
  COFD[29475] = 4.67404845E-03;
  COFD[29476] = -1.89007696E+01;
  COFD[29477] = 3.01491854E+00;
  COFD[29478] = -7.45185018E-02;
  COFD[29479] = -7.71760336E-04;
  COFD[29480] = -1.89007696E+01;
  COFD[29481] = 3.01491854E+00;
  COFD[29482] = -7.45185018E-02;
  COFD[29483] = -7.71760336E-04;
  COFD[29484] = -1.89007696E+01;
  COFD[29485] = 3.01491854E+00;
  COFD[29486] = -7.45185018E-02;
  COFD[29487] = -7.71760336E-04;
  COFD[29488] = -1.89007696E+01;
  COFD[29489] = 3.01491854E+00;
  COFD[29490] = -7.45185018E-02;
  COFD[29491] = -7.71760336E-04;
  COFD[29492] = -1.89007696E+01;
  COFD[29493] = 3.01491854E+00;
  COFD[29494] = -7.45185018E-02;
  COFD[29495] = -7.71760336E-04;
  COFD[29496] = -1.89007696E+01;
  COFD[29497] = 3.01491854E+00;
  COFD[29498] = -7.45185018E-02;
  COFD[29499] = -7.71760336E-04;
  COFD[29500] = -1.89007696E+01;
  COFD[29501] = 3.01491854E+00;
  COFD[29502] = -7.45185018E-02;
  COFD[29503] = -7.71760336E-04;
  COFD[29504] = -1.89007696E+01;
  COFD[29505] = 3.01491854E+00;
  COFD[29506] = -7.45185018E-02;
  COFD[29507] = -7.71760336E-04;
  COFD[29508] = -1.89007696E+01;
  COFD[29509] = 3.01491854E+00;
  COFD[29510] = -7.45185018E-02;
  COFD[29511] = -7.71760336E-04;
  COFD[29512] = -1.89007696E+01;
  COFD[29513] = 3.01491854E+00;
  COFD[29514] = -7.45185018E-02;
  COFD[29515] = -7.71760336E-04;
  COFD[29516] = -1.89007696E+01;
  COFD[29517] = 3.01491854E+00;
  COFD[29518] = -7.45185018E-02;
  COFD[29519] = -7.71760336E-04;
  COFD[29520] = -1.89007696E+01;
  COFD[29521] = 3.01491854E+00;
  COFD[29522] = -7.45185018E-02;
  COFD[29523] = -7.71760336E-04;
  COFD[29524] = -1.84159124E+01;
  COFD[29525] = 2.70290609E+00;
  COFD[29526] = -2.86258257E-02;
  COFD[29527] = -2.96892208E-03;
  COFD[29528] = -1.84159124E+01;
  COFD[29529] = 2.70290609E+00;
  COFD[29530] = -2.86258257E-02;
  COFD[29531] = -2.96892208E-03;
  COFD[29532] = -1.84159124E+01;
  COFD[29533] = 2.70290609E+00;
  COFD[29534] = -2.86258257E-02;
  COFD[29535] = -2.96892208E-03;
  COFD[29536] = -1.84159124E+01;
  COFD[29537] = 2.70290609E+00;
  COFD[29538] = -2.86258257E-02;
  COFD[29539] = -2.96892208E-03;
  COFD[29540] = -1.97408903E+01;
  COFD[29541] = 3.41595311E+00;
  COFD[29542] = -1.32754214E-01;
  COFD[29543] = 1.98113878E-03;
  COFD[29544] = -1.97408903E+01;
  COFD[29545] = 3.41595311E+00;
  COFD[29546] = -1.32754214E-01;
  COFD[29547] = 1.98113878E-03;
  COFD[29548] = -1.85744134E+01;
  COFD[29549] = 2.84000235E+00;
  COFD[29550] = -4.89902403E-02;
  COFD[29551] = -1.98593511E-03;
  COFD[29552] = -1.85744134E+01;
  COFD[29553] = 2.84000235E+00;
  COFD[29554] = -4.89902403E-02;
  COFD[29555] = -1.98593511E-03;
  COFD[29556] = -1.85744134E+01;
  COFD[29557] = 2.84000235E+00;
  COFD[29558] = -4.89902403E-02;
  COFD[29559] = -1.98593511E-03;
  COFD[29560] = -1.85744134E+01;
  COFD[29561] = 2.84000235E+00;
  COFD[29562] = -4.89902403E-02;
  COFD[29563] = -1.98593511E-03;
  COFD[29564] = -2.19104697E+01;
  COFD[29565] = 5.38977786E+00;
  COFD[29566] = -4.71707042E-01;
  COFD[29567] = 1.99290483E-02;
  COFD[29568] = -2.08170058E+01;
  COFD[29569] = 5.60629422E+00;
  COFD[29570] = -4.88952090E-01;
  COFD[29571] = 2.02479944E-02;
  COFD[29572] = -1.73598913E+01;
  COFD[29573] = 4.30369076E+00;
  COFD[29574] = -3.44934911E-01;
  COFD[29575] = 1.50019519E-02;
  COFD[29576] = -2.08183453E+01;
  COFD[29577] = 5.17587280E+00;
  COFD[29578] = -4.48540980E-01;
  COFD[29579] = 1.91076775E-02;
  COFD[29580] = -2.21352015E+01;
  COFD[29581] = 5.44360767E+00;
  COFD[29582] = -4.76093122E-01;
  COFD[29583] = 2.00152977E-02;
  COFD[29584] = -2.08457967E+01;
  COFD[29585] = 5.17587280E+00;
  COFD[29586] = -4.48540980E-01;
  COFD[29587] = 1.91076775E-02;
  COFD[29588] = -1.68671380E+01;
  COFD[29589] = 2.74353481E+00;
  COFD[29590] = -3.62101811E-02;
  COFD[29591] = -2.53731692E-03;
  COFD[29592] = -2.19303974E+01;
  COFD[29593] = 5.39345912E+00;
  COFD[29594] = -4.71992292E-01;
  COFD[29595] = 1.99337081E-02;
  COFD[29596] = -1.89866169E+01;
  COFD[29597] = 3.51383700E+00;
  COFD[29598] = -1.47311797E-01;
  COFD[29599] = 2.68227514E-03;
  COFD[29600] = -2.26171653E+01;
  COFD[29601] = 5.25394583E+00;
  COFD[29602] = -4.18252204E-01;
  COFD[29603] = 1.61873245E-02;
  COFD[29604] = -2.24943326E+01;
  COFD[29605] = 5.60859334E+00;
  COFD[29606] = -4.89526797E-01;
  COFD[29607] = 2.02839728E-02;
  COFD[29608] = -2.25146548E+01;
  COFD[29609] = 5.60863009E+00;
  COFD[29610] = -4.89536007E-01;
  COFD[29611] = 2.02845498E-02;
  COFD[29612] = -2.20818748E+01;
  COFD[29613] = 5.42166606E+00;
  COFD[29614] = -4.73555282E-01;
  COFD[29615] = 1.99172179E-02;
  COFD[29616] = -2.20941115E+01;
  COFD[29617] = 5.42166606E+00;
  COFD[29618] = -4.73555282E-01;
  COFD[29619] = 1.99172179E-02;
  COFD[29620] = -1.90008222E+01;
  COFD[29621] = 3.51383700E+00;
  COFD[29622] = -1.47311797E-01;
  COFD[29623] = 2.68227514E-03;
  COFD[29624] = -1.97858016E+01;
  COFD[29625] = 3.90424489E+00;
  COFD[29626] = -2.08873997E-01;
  COFD[29627] = 5.77813510E-03;
  COFD[29628] = -2.25741250E+01;
  COFD[29629] = 5.25350038E+00;
  COFD[29630] = -4.18174534E-01;
  COFD[29631] = 1.61831733E-02;
  COFD[29632] = -2.24660218E+01;
  COFD[29633] = 5.30519385E+00;
  COFD[29634] = -4.26982994E-01;
  COFD[29635] = 1.66486409E-02;
  COFD[29636] = -2.25599444E+01;
  COFD[29637] = 5.25350038E+00;
  COFD[29638] = -4.18174534E-01;
  COFD[29639] = 1.61831733E-02;
  COFD[29640] = -2.22410835E+01;
  COFD[29641] = 5.15974104E+00;
  COFD[29642] = -4.02219303E-01;
  COFD[29643] = 1.53420433E-02;
  COFD[29644] = -2.22571566E+01;
  COFD[29645] = 5.15974104E+00;
  COFD[29646] = -4.02219303E-01;
  COFD[29647] = 1.53420433E-02;
  COFD[29648] = -2.00502279E+01;
  COFD[29649] = 3.92262843E+00;
  COFD[29650] = -2.09310993E-01;
  COFD[29651] = 5.71178653E-03;
  COFD[29652] = -2.26475227E+01;
  COFD[29653] = 5.59137662E+00;
  COFD[29654] = -4.85571189E-01;
  COFD[29655] = 2.00432448E-02;
  COFD[29656] = -2.00594053E+01;
  COFD[29657] = 3.92262843E+00;
  COFD[29658] = -2.09310993E-01;
  COFD[29659] = 5.71178653E-03;
  COFD[29660] = -2.00594053E+01;
  COFD[29661] = 3.92262843E+00;
  COFD[29662] = -2.09310993E-01;
  COFD[29663] = 5.71178653E-03;
  COFD[29664] = -2.00683227E+01;
  COFD[29665] = 3.92262843E+00;
  COFD[29666] = -2.09310993E-01;
  COFD[29667] = 5.71178653E-03;
  COFD[29668] = -2.17442970E+01;
  COFD[29669] = 4.74371045E+00;
  COFD[29670] = -3.35675372E-01;
  COFD[29671] = 1.19614146E-02;
  COFD[29672] = -2.19520650E+01;
  COFD[29673] = 4.85782498E+00;
  COFD[29674] = -3.53809801E-01;
  COFD[29675] = 1.28781197E-02;
  COFD[29676] = -2.15338676E+01;
  COFD[29677] = 4.53358618E+00;
  COFD[29678] = -3.02459014E-01;
  COFD[29679] = 1.02891951E-02;
  COFD[29680] = -2.21465586E+01;
  COFD[29681] = 4.89062970E+00;
  COFD[29682] = -3.58987885E-01;
  COFD[29683] = 1.31390176E-02;
  COFD[29684] = -2.15564632E+01;
  COFD[29685] = 4.54793947E+00;
  COFD[29686] = -3.04689240E-01;
  COFD[29687] = 1.04001889E-02;
  COFD[29688] = -2.15630299E+01;
  COFD[29689] = 4.54793947E+00;
  COFD[29690] = -3.04689240E-01;
  COFD[29691] = 1.04001889E-02;
  COFD[29692] = -2.17127658E+01;
  COFD[29693] = 4.56847552E+00;
  COFD[29694] = -3.07892621E-01;
  COFD[29695] = 1.05599169E-02;
  COFD[29696] = -2.03345575E+01;
  COFD[29697] = 3.92596644E+00;
  COFD[29698] = -2.09820551E-01;
  COFD[29699] = 5.73681575E-03;
  COFD[29700] = -1.98067360E+01;
  COFD[29701] = 3.71493056E+00;
  COFD[29702] = -1.80752425E-01;
  COFD[29703] = 4.42380779E-03;
  COFD[29704] = -2.04999495E+01;
  COFD[29705] = 4.00914737E+00;
  COFD[29706] = -2.22398560E-01;
  COFD[29707] = 6.35106995E-03;
  COFD[29708] = -2.11611573E+01;
  COFD[29709] = 4.24185230E+00;
  COFD[29710] = -2.57542334E-01;
  COFD[29711] = 8.06755240E-03;
  COFD[29712] = -2.12838916E+01;
  COFD[29713] = 4.30205261E+00;
  COFD[29714] = -2.67181974E-01;
  COFD[29715] = 8.55702247E-03;
  COFD[29716] = -1.97411863E+01;
  COFD[29717] = 3.71520828E+00;
  COFD[29718] = -1.77538797E-01;
  COFD[29719] = 4.14984571E-03;
  COFD[29720] = -1.94537340E+01;
  COFD[29721] = 3.64033093E+00;
  COFD[29722] = -1.66213611E-01;
  COFD[29723] = 3.59745099E-03;
  COFD[29724] = -1.94617350E+01;
  COFD[29725] = 3.64033093E+00;
  COFD[29726] = -1.66213611E-01;
  COFD[29727] = 3.59745099E-03;
  COFD[29728] = -2.00872766E+01;
  COFD[29729] = 3.87686370E+00;
  COFD[29730] = -2.02322128E-01;
  COFD[29731] = 5.36874766E-03;
  COFD[29732] = -1.99417326E+01;
  COFD[29733] = 3.76108685E+00;
  COFD[29734] = -1.87735573E-01;
  COFD[29735] = 4.76470694E-03;
  COFD[29736] = -2.07382952E+01;
  COFD[29737] = 4.12323414E+00;
  COFD[29738] = -2.39594601E-01;
  COFD[29739] = 7.18979047E-03;
  COFD[29740] = -1.96568362E+01;
  COFD[29741] = 3.52976100E+00;
  COFD[29742] = -1.49683857E-01;
  COFD[29743] = 2.79687002E-03;
  COFD[29744] = -1.98195803E+01;
  COFD[29745] = 3.52976100E+00;
  COFD[29746] = -1.49683857E-01;
  COFD[29747] = 2.79687002E-03;
  COFD[29748] = -1.97299320E+01;
  COFD[29749] = 3.52976100E+00;
  COFD[29750] = -1.49683857E-01;
  COFD[29751] = 2.79687002E-03;
  COFD[29752] = -1.97299320E+01;
  COFD[29753] = 3.52976100E+00;
  COFD[29754] = -1.49683857E-01;
  COFD[29755] = 2.79687002E-03;
  COFD[29756] = -2.18410109E+01;
  COFD[29757] = 4.79752905E+00;
  COFD[29758] = -3.44308429E-01;
  COFD[29759] = 1.23999967E-02;
  COFD[29760] = -2.17342699E+01;
  COFD[29761] = 4.74371045E+00;
  COFD[29762] = -3.35675372E-01;
  COFD[29763] = 1.19614146E-02;
  COFD[29764] = -2.29274321E+01;
  COFD[29765] = 5.45232880E+00;
  COFD[29766] = -4.52947326E-01;
  COFD[29767] = 1.80473045E-02;
  COFD[29768] = -2.24627701E+01;
  COFD[29769] = 5.60859334E+00;
  COFD[29770] = -4.89526797E-01;
  COFD[29771] = 2.02839728E-02;
  COFD[29772] = -1.98637741E+01;
  COFD[29773] = 3.54601621E+00;
  COFD[29774] = -1.54142413E-01;
  COFD[29775] = 3.08850126E-03;
  COFD[29776] = -1.96773419E+01;
  COFD[29777] = 3.57920460E+00;
  COFD[29778] = -1.59621434E-01;
  COFD[29779] = 3.37254895E-03;
  COFD[29780] = -1.96726171E+01;
  COFD[29781] = 3.57920460E+00;
  COFD[29782] = -1.59621434E-01;
  COFD[29783] = 3.37254895E-03;
  COFD[29784] = -1.97813741E+01;
  COFD[29785] = 3.60327211E+00;
  COFD[29786] = -1.63687575E-01;
  COFD[29787] = 3.58623059E-03;
  COFD[29788] = -1.98575925E+01;
  COFD[29789] = 3.58487702E+00;
  COFD[29790] = -1.57907725E-01;
  COFD[29791] = 3.19471943E-03;
  COFD[29792] = -1.98062805E+01;
  COFD[29793] = 3.54601621E+00;
  COFD[29794] = -1.54142413E-01;
  COFD[29795] = 3.08850126E-03;
  COFD[29796] = -1.98025688E+01;
  COFD[29797] = 3.54601621E+00;
  COFD[29798] = -1.54142413E-01;
  COFD[29799] = 3.08850126E-03;
  COFD[29800] = -2.04598528E+01;
  COFD[29801] = 3.78121973E+00;
  COFD[29802] = -1.87619388E-01;
  COFD[29803] = 4.64425873E-03;
  COFD[29804] = -2.04568473E+01;
  COFD[29805] = 3.78121973E+00;
  COFD[29806] = -1.87619388E-01;
  COFD[29807] = 4.64425873E-03;
  COFD[29808] = -2.04568473E+01;
  COFD[29809] = 3.78121973E+00;
  COFD[29810] = -1.87619388E-01;
  COFD[29811] = 4.64425873E-03;
  COFD[29812] = -2.04568473E+01;
  COFD[29813] = 3.78121973E+00;
  COFD[29814] = -1.87619388E-01;
  COFD[29815] = 4.64425873E-03;
  COFD[29816] = -2.04568473E+01;
  COFD[29817] = 3.78121973E+00;
  COFD[29818] = -1.87619388E-01;
  COFD[29819] = 4.64425873E-03;
  COFD[29820] = -2.04363403E+01;
  COFD[29821] = 3.78198958E+00;
  COFD[29822] = -1.88024034E-01;
  COFD[29823] = 4.67404845E-03;
  COFD[29824] = -2.04363403E+01;
  COFD[29825] = 3.78198958E+00;
  COFD[29826] = -1.88024034E-01;
  COFD[29827] = 4.67404845E-03;
  COFD[29828] = -1.89007696E+01;
  COFD[29829] = 3.01491854E+00;
  COFD[29830] = -7.45185018E-02;
  COFD[29831] = -7.71760336E-04;
  COFD[29832] = -1.89007696E+01;
  COFD[29833] = 3.01491854E+00;
  COFD[29834] = -7.45185018E-02;
  COFD[29835] = -7.71760336E-04;
  COFD[29836] = -1.89007696E+01;
  COFD[29837] = 3.01491854E+00;
  COFD[29838] = -7.45185018E-02;
  COFD[29839] = -7.71760336E-04;
  COFD[29840] = -1.89007696E+01;
  COFD[29841] = 3.01491854E+00;
  COFD[29842] = -7.45185018E-02;
  COFD[29843] = -7.71760336E-04;
  COFD[29844] = -1.89007696E+01;
  COFD[29845] = 3.01491854E+00;
  COFD[29846] = -7.45185018E-02;
  COFD[29847] = -7.71760336E-04;
  COFD[29848] = -1.89007696E+01;
  COFD[29849] = 3.01491854E+00;
  COFD[29850] = -7.45185018E-02;
  COFD[29851] = -7.71760336E-04;
  COFD[29852] = -1.89007696E+01;
  COFD[29853] = 3.01491854E+00;
  COFD[29854] = -7.45185018E-02;
  COFD[29855] = -7.71760336E-04;
  COFD[29856] = -1.89007696E+01;
  COFD[29857] = 3.01491854E+00;
  COFD[29858] = -7.45185018E-02;
  COFD[29859] = -7.71760336E-04;
  COFD[29860] = -1.89007696E+01;
  COFD[29861] = 3.01491854E+00;
  COFD[29862] = -7.45185018E-02;
  COFD[29863] = -7.71760336E-04;
  COFD[29864] = -1.89007696E+01;
  COFD[29865] = 3.01491854E+00;
  COFD[29866] = -7.45185018E-02;
  COFD[29867] = -7.71760336E-04;
  COFD[29868] = -1.89007696E+01;
  COFD[29869] = 3.01491854E+00;
  COFD[29870] = -7.45185018E-02;
  COFD[29871] = -7.71760336E-04;
  COFD[29872] = -1.89007696E+01;
  COFD[29873] = 3.01491854E+00;
  COFD[29874] = -7.45185018E-02;
  COFD[29875] = -7.71760336E-04;
  COFD[29876] = -1.84159124E+01;
  COFD[29877] = 2.70290609E+00;
  COFD[29878] = -2.86258257E-02;
  COFD[29879] = -2.96892208E-03;
  COFD[29880] = -1.84159124E+01;
  COFD[29881] = 2.70290609E+00;
  COFD[29882] = -2.86258257E-02;
  COFD[29883] = -2.96892208E-03;
  COFD[29884] = -1.84159124E+01;
  COFD[29885] = 2.70290609E+00;
  COFD[29886] = -2.86258257E-02;
  COFD[29887] = -2.96892208E-03;
  COFD[29888] = -1.84159124E+01;
  COFD[29889] = 2.70290609E+00;
  COFD[29890] = -2.86258257E-02;
  COFD[29891] = -2.96892208E-03;
  COFD[29892] = -1.97408903E+01;
  COFD[29893] = 3.41595311E+00;
  COFD[29894] = -1.32754214E-01;
  COFD[29895] = 1.98113878E-03;
  COFD[29896] = -1.97408903E+01;
  COFD[29897] = 3.41595311E+00;
  COFD[29898] = -1.32754214E-01;
  COFD[29899] = 1.98113878E-03;
  COFD[29900] = -1.85744134E+01;
  COFD[29901] = 2.84000235E+00;
  COFD[29902] = -4.89902403E-02;
  COFD[29903] = -1.98593511E-03;
  COFD[29904] = -1.85744134E+01;
  COFD[29905] = 2.84000235E+00;
  COFD[29906] = -4.89902403E-02;
  COFD[29907] = -1.98593511E-03;
  COFD[29908] = -1.85744134E+01;
  COFD[29909] = 2.84000235E+00;
  COFD[29910] = -4.89902403E-02;
  COFD[29911] = -1.98593511E-03;
  COFD[29912] = -1.85744134E+01;
  COFD[29913] = 2.84000235E+00;
  COFD[29914] = -4.89902403E-02;
  COFD[29915] = -1.98593511E-03;
  COFD[29916] = -2.19104697E+01;
  COFD[29917] = 5.38977786E+00;
  COFD[29918] = -4.71707042E-01;
  COFD[29919] = 1.99290483E-02;
  COFD[29920] = -2.08170058E+01;
  COFD[29921] = 5.60629422E+00;
  COFD[29922] = -4.88952090E-01;
  COFD[29923] = 2.02479944E-02;
  COFD[29924] = -1.73598913E+01;
  COFD[29925] = 4.30369076E+00;
  COFD[29926] = -3.44934911E-01;
  COFD[29927] = 1.50019519E-02;
  COFD[29928] = -2.08183453E+01;
  COFD[29929] = 5.17587280E+00;
  COFD[29930] = -4.48540980E-01;
  COFD[29931] = 1.91076775E-02;
  COFD[29932] = -2.21352015E+01;
  COFD[29933] = 5.44360767E+00;
  COFD[29934] = -4.76093122E-01;
  COFD[29935] = 2.00152977E-02;
  COFD[29936] = -2.08457967E+01;
  COFD[29937] = 5.17587280E+00;
  COFD[29938] = -4.48540980E-01;
  COFD[29939] = 1.91076775E-02;
  COFD[29940] = -1.68671380E+01;
  COFD[29941] = 2.74353481E+00;
  COFD[29942] = -3.62101811E-02;
  COFD[29943] = -2.53731692E-03;
  COFD[29944] = -2.19303974E+01;
  COFD[29945] = 5.39345912E+00;
  COFD[29946] = -4.71992292E-01;
  COFD[29947] = 1.99337081E-02;
  COFD[29948] = -1.89866169E+01;
  COFD[29949] = 3.51383700E+00;
  COFD[29950] = -1.47311797E-01;
  COFD[29951] = 2.68227514E-03;
  COFD[29952] = -2.26171653E+01;
  COFD[29953] = 5.25394583E+00;
  COFD[29954] = -4.18252204E-01;
  COFD[29955] = 1.61873245E-02;
  COFD[29956] = -2.24943326E+01;
  COFD[29957] = 5.60859334E+00;
  COFD[29958] = -4.89526797E-01;
  COFD[29959] = 2.02839728E-02;
  COFD[29960] = -2.25146548E+01;
  COFD[29961] = 5.60863009E+00;
  COFD[29962] = -4.89536007E-01;
  COFD[29963] = 2.02845498E-02;
  COFD[29964] = -2.20818748E+01;
  COFD[29965] = 5.42166606E+00;
  COFD[29966] = -4.73555282E-01;
  COFD[29967] = 1.99172179E-02;
  COFD[29968] = -2.20941115E+01;
  COFD[29969] = 5.42166606E+00;
  COFD[29970] = -4.73555282E-01;
  COFD[29971] = 1.99172179E-02;
  COFD[29972] = -1.90008222E+01;
  COFD[29973] = 3.51383700E+00;
  COFD[29974] = -1.47311797E-01;
  COFD[29975] = 2.68227514E-03;
  COFD[29976] = -1.97858016E+01;
  COFD[29977] = 3.90424489E+00;
  COFD[29978] = -2.08873997E-01;
  COFD[29979] = 5.77813510E-03;
  COFD[29980] = -2.25741250E+01;
  COFD[29981] = 5.25350038E+00;
  COFD[29982] = -4.18174534E-01;
  COFD[29983] = 1.61831733E-02;
  COFD[29984] = -2.24660218E+01;
  COFD[29985] = 5.30519385E+00;
  COFD[29986] = -4.26982994E-01;
  COFD[29987] = 1.66486409E-02;
  COFD[29988] = -2.25599444E+01;
  COFD[29989] = 5.25350038E+00;
  COFD[29990] = -4.18174534E-01;
  COFD[29991] = 1.61831733E-02;
  COFD[29992] = -2.22410835E+01;
  COFD[29993] = 5.15974104E+00;
  COFD[29994] = -4.02219303E-01;
  COFD[29995] = 1.53420433E-02;
  COFD[29996] = -2.22571566E+01;
  COFD[29997] = 5.15974104E+00;
  COFD[29998] = -4.02219303E-01;
  COFD[29999] = 1.53420433E-02;
  COFD[30000] = -2.00502279E+01;
  COFD[30001] = 3.92262843E+00;
  COFD[30002] = -2.09310993E-01;
  COFD[30003] = 5.71178653E-03;
  COFD[30004] = -2.26475227E+01;
  COFD[30005] = 5.59137662E+00;
  COFD[30006] = -4.85571189E-01;
  COFD[30007] = 2.00432448E-02;
  COFD[30008] = -2.00594053E+01;
  COFD[30009] = 3.92262843E+00;
  COFD[30010] = -2.09310993E-01;
  COFD[30011] = 5.71178653E-03;
  COFD[30012] = -2.00594053E+01;
  COFD[30013] = 3.92262843E+00;
  COFD[30014] = -2.09310993E-01;
  COFD[30015] = 5.71178653E-03;
  COFD[30016] = -2.00683227E+01;
  COFD[30017] = 3.92262843E+00;
  COFD[30018] = -2.09310993E-01;
  COFD[30019] = 5.71178653E-03;
  COFD[30020] = -2.17442970E+01;
  COFD[30021] = 4.74371045E+00;
  COFD[30022] = -3.35675372E-01;
  COFD[30023] = 1.19614146E-02;
  COFD[30024] = -2.19520650E+01;
  COFD[30025] = 4.85782498E+00;
  COFD[30026] = -3.53809801E-01;
  COFD[30027] = 1.28781197E-02;
  COFD[30028] = -2.15338676E+01;
  COFD[30029] = 4.53358618E+00;
  COFD[30030] = -3.02459014E-01;
  COFD[30031] = 1.02891951E-02;
  COFD[30032] = -2.21465586E+01;
  COFD[30033] = 4.89062970E+00;
  COFD[30034] = -3.58987885E-01;
  COFD[30035] = 1.31390176E-02;
  COFD[30036] = -2.15564632E+01;
  COFD[30037] = 4.54793947E+00;
  COFD[30038] = -3.04689240E-01;
  COFD[30039] = 1.04001889E-02;
  COFD[30040] = -2.15630299E+01;
  COFD[30041] = 4.54793947E+00;
  COFD[30042] = -3.04689240E-01;
  COFD[30043] = 1.04001889E-02;
  COFD[30044] = -2.17127658E+01;
  COFD[30045] = 4.56847552E+00;
  COFD[30046] = -3.07892621E-01;
  COFD[30047] = 1.05599169E-02;
  COFD[30048] = -2.03345575E+01;
  COFD[30049] = 3.92596644E+00;
  COFD[30050] = -2.09820551E-01;
  COFD[30051] = 5.73681575E-03;
  COFD[30052] = -1.98067360E+01;
  COFD[30053] = 3.71493056E+00;
  COFD[30054] = -1.80752425E-01;
  COFD[30055] = 4.42380779E-03;
  COFD[30056] = -2.04999495E+01;
  COFD[30057] = 4.00914737E+00;
  COFD[30058] = -2.22398560E-01;
  COFD[30059] = 6.35106995E-03;
  COFD[30060] = -2.11611573E+01;
  COFD[30061] = 4.24185230E+00;
  COFD[30062] = -2.57542334E-01;
  COFD[30063] = 8.06755240E-03;
  COFD[30064] = -2.12838916E+01;
  COFD[30065] = 4.30205261E+00;
  COFD[30066] = -2.67181974E-01;
  COFD[30067] = 8.55702247E-03;
  COFD[30068] = -1.97411863E+01;
  COFD[30069] = 3.71520828E+00;
  COFD[30070] = -1.77538797E-01;
  COFD[30071] = 4.14984571E-03;
  COFD[30072] = -1.94537340E+01;
  COFD[30073] = 3.64033093E+00;
  COFD[30074] = -1.66213611E-01;
  COFD[30075] = 3.59745099E-03;
  COFD[30076] = -1.94617350E+01;
  COFD[30077] = 3.64033093E+00;
  COFD[30078] = -1.66213611E-01;
  COFD[30079] = 3.59745099E-03;
  COFD[30080] = -2.00872766E+01;
  COFD[30081] = 3.87686370E+00;
  COFD[30082] = -2.02322128E-01;
  COFD[30083] = 5.36874766E-03;
  COFD[30084] = -1.99417326E+01;
  COFD[30085] = 3.76108685E+00;
  COFD[30086] = -1.87735573E-01;
  COFD[30087] = 4.76470694E-03;
  COFD[30088] = -2.07382952E+01;
  COFD[30089] = 4.12323414E+00;
  COFD[30090] = -2.39594601E-01;
  COFD[30091] = 7.18979047E-03;
  COFD[30092] = -1.96568362E+01;
  COFD[30093] = 3.52976100E+00;
  COFD[30094] = -1.49683857E-01;
  COFD[30095] = 2.79687002E-03;
  COFD[30096] = -1.98195803E+01;
  COFD[30097] = 3.52976100E+00;
  COFD[30098] = -1.49683857E-01;
  COFD[30099] = 2.79687002E-03;
  COFD[30100] = -1.97299320E+01;
  COFD[30101] = 3.52976100E+00;
  COFD[30102] = -1.49683857E-01;
  COFD[30103] = 2.79687002E-03;
  COFD[30104] = -1.97299320E+01;
  COFD[30105] = 3.52976100E+00;
  COFD[30106] = -1.49683857E-01;
  COFD[30107] = 2.79687002E-03;
  COFD[30108] = -2.18410109E+01;
  COFD[30109] = 4.79752905E+00;
  COFD[30110] = -3.44308429E-01;
  COFD[30111] = 1.23999967E-02;
  COFD[30112] = -2.17342699E+01;
  COFD[30113] = 4.74371045E+00;
  COFD[30114] = -3.35675372E-01;
  COFD[30115] = 1.19614146E-02;
  COFD[30116] = -2.29274321E+01;
  COFD[30117] = 5.45232880E+00;
  COFD[30118] = -4.52947326E-01;
  COFD[30119] = 1.80473045E-02;
  COFD[30120] = -2.24627701E+01;
  COFD[30121] = 5.60859334E+00;
  COFD[30122] = -4.89526797E-01;
  COFD[30123] = 2.02839728E-02;
  COFD[30124] = -1.98637741E+01;
  COFD[30125] = 3.54601621E+00;
  COFD[30126] = -1.54142413E-01;
  COFD[30127] = 3.08850126E-03;
  COFD[30128] = -1.96773419E+01;
  COFD[30129] = 3.57920460E+00;
  COFD[30130] = -1.59621434E-01;
  COFD[30131] = 3.37254895E-03;
  COFD[30132] = -1.96726171E+01;
  COFD[30133] = 3.57920460E+00;
  COFD[30134] = -1.59621434E-01;
  COFD[30135] = 3.37254895E-03;
  COFD[30136] = -1.97813741E+01;
  COFD[30137] = 3.60327211E+00;
  COFD[30138] = -1.63687575E-01;
  COFD[30139] = 3.58623059E-03;
  COFD[30140] = -1.98575925E+01;
  COFD[30141] = 3.58487702E+00;
  COFD[30142] = -1.57907725E-01;
  COFD[30143] = 3.19471943E-03;
  COFD[30144] = -1.98062805E+01;
  COFD[30145] = 3.54601621E+00;
  COFD[30146] = -1.54142413E-01;
  COFD[30147] = 3.08850126E-03;
  COFD[30148] = -1.98025688E+01;
  COFD[30149] = 3.54601621E+00;
  COFD[30150] = -1.54142413E-01;
  COFD[30151] = 3.08850126E-03;
  COFD[30152] = -2.04598528E+01;
  COFD[30153] = 3.78121973E+00;
  COFD[30154] = -1.87619388E-01;
  COFD[30155] = 4.64425873E-03;
  COFD[30156] = -2.04568473E+01;
  COFD[30157] = 3.78121973E+00;
  COFD[30158] = -1.87619388E-01;
  COFD[30159] = 4.64425873E-03;
  COFD[30160] = -2.04568473E+01;
  COFD[30161] = 3.78121973E+00;
  COFD[30162] = -1.87619388E-01;
  COFD[30163] = 4.64425873E-03;
  COFD[30164] = -2.04568473E+01;
  COFD[30165] = 3.78121973E+00;
  COFD[30166] = -1.87619388E-01;
  COFD[30167] = 4.64425873E-03;
  COFD[30168] = -2.04568473E+01;
  COFD[30169] = 3.78121973E+00;
  COFD[30170] = -1.87619388E-01;
  COFD[30171] = 4.64425873E-03;
  COFD[30172] = -2.04363403E+01;
  COFD[30173] = 3.78198958E+00;
  COFD[30174] = -1.88024034E-01;
  COFD[30175] = 4.67404845E-03;
  COFD[30176] = -2.04363403E+01;
  COFD[30177] = 3.78198958E+00;
  COFD[30178] = -1.88024034E-01;
  COFD[30179] = 4.67404845E-03;
  COFD[30180] = -1.89007696E+01;
  COFD[30181] = 3.01491854E+00;
  COFD[30182] = -7.45185018E-02;
  COFD[30183] = -7.71760336E-04;
  COFD[30184] = -1.89007696E+01;
  COFD[30185] = 3.01491854E+00;
  COFD[30186] = -7.45185018E-02;
  COFD[30187] = -7.71760336E-04;
  COFD[30188] = -1.89007696E+01;
  COFD[30189] = 3.01491854E+00;
  COFD[30190] = -7.45185018E-02;
  COFD[30191] = -7.71760336E-04;
  COFD[30192] = -1.89007696E+01;
  COFD[30193] = 3.01491854E+00;
  COFD[30194] = -7.45185018E-02;
  COFD[30195] = -7.71760336E-04;
  COFD[30196] = -1.89007696E+01;
  COFD[30197] = 3.01491854E+00;
  COFD[30198] = -7.45185018E-02;
  COFD[30199] = -7.71760336E-04;
  COFD[30200] = -1.89007696E+01;
  COFD[30201] = 3.01491854E+00;
  COFD[30202] = -7.45185018E-02;
  COFD[30203] = -7.71760336E-04;
  COFD[30204] = -1.89007696E+01;
  COFD[30205] = 3.01491854E+00;
  COFD[30206] = -7.45185018E-02;
  COFD[30207] = -7.71760336E-04;
  COFD[30208] = -1.89007696E+01;
  COFD[30209] = 3.01491854E+00;
  COFD[30210] = -7.45185018E-02;
  COFD[30211] = -7.71760336E-04;
  COFD[30212] = -1.89007696E+01;
  COFD[30213] = 3.01491854E+00;
  COFD[30214] = -7.45185018E-02;
  COFD[30215] = -7.71760336E-04;
  COFD[30216] = -1.89007696E+01;
  COFD[30217] = 3.01491854E+00;
  COFD[30218] = -7.45185018E-02;
  COFD[30219] = -7.71760336E-04;
  COFD[30220] = -1.89007696E+01;
  COFD[30221] = 3.01491854E+00;
  COFD[30222] = -7.45185018E-02;
  COFD[30223] = -7.71760336E-04;
  COFD[30224] = -1.89007696E+01;
  COFD[30225] = 3.01491854E+00;
  COFD[30226] = -7.45185018E-02;
  COFD[30227] = -7.71760336E-04;
  COFD[30228] = -1.84159124E+01;
  COFD[30229] = 2.70290609E+00;
  COFD[30230] = -2.86258257E-02;
  COFD[30231] = -2.96892208E-03;
  COFD[30232] = -1.84159124E+01;
  COFD[30233] = 2.70290609E+00;
  COFD[30234] = -2.86258257E-02;
  COFD[30235] = -2.96892208E-03;
  COFD[30236] = -1.84159124E+01;
  COFD[30237] = 2.70290609E+00;
  COFD[30238] = -2.86258257E-02;
  COFD[30239] = -2.96892208E-03;
  COFD[30240] = -1.84159124E+01;
  COFD[30241] = 2.70290609E+00;
  COFD[30242] = -2.86258257E-02;
  COFD[30243] = -2.96892208E-03;
  COFD[30244] = -1.97408903E+01;
  COFD[30245] = 3.41595311E+00;
  COFD[30246] = -1.32754214E-01;
  COFD[30247] = 1.98113878E-03;
  COFD[30248] = -1.97408903E+01;
  COFD[30249] = 3.41595311E+00;
  COFD[30250] = -1.32754214E-01;
  COFD[30251] = 1.98113878E-03;
  COFD[30252] = -1.85744134E+01;
  COFD[30253] = 2.84000235E+00;
  COFD[30254] = -4.89902403E-02;
  COFD[30255] = -1.98593511E-03;
  COFD[30256] = -1.85744134E+01;
  COFD[30257] = 2.84000235E+00;
  COFD[30258] = -4.89902403E-02;
  COFD[30259] = -1.98593511E-03;
  COFD[30260] = -1.85744134E+01;
  COFD[30261] = 2.84000235E+00;
  COFD[30262] = -4.89902403E-02;
  COFD[30263] = -1.98593511E-03;
  COFD[30264] = -1.85744134E+01;
  COFD[30265] = 2.84000235E+00;
  COFD[30266] = -4.89902403E-02;
  COFD[30267] = -1.98593511E-03;
  COFD[30268] = -2.19104697E+01;
  COFD[30269] = 5.38977786E+00;
  COFD[30270] = -4.71707042E-01;
  COFD[30271] = 1.99290483E-02;
  COFD[30272] = -2.08170058E+01;
  COFD[30273] = 5.60629422E+00;
  COFD[30274] = -4.88952090E-01;
  COFD[30275] = 2.02479944E-02;
  COFD[30276] = -1.73598913E+01;
  COFD[30277] = 4.30369076E+00;
  COFD[30278] = -3.44934911E-01;
  COFD[30279] = 1.50019519E-02;
  COFD[30280] = -2.08183453E+01;
  COFD[30281] = 5.17587280E+00;
  COFD[30282] = -4.48540980E-01;
  COFD[30283] = 1.91076775E-02;
  COFD[30284] = -2.21352015E+01;
  COFD[30285] = 5.44360767E+00;
  COFD[30286] = -4.76093122E-01;
  COFD[30287] = 2.00152977E-02;
  COFD[30288] = -2.08457967E+01;
  COFD[30289] = 5.17587280E+00;
  COFD[30290] = -4.48540980E-01;
  COFD[30291] = 1.91076775E-02;
  COFD[30292] = -1.68671380E+01;
  COFD[30293] = 2.74353481E+00;
  COFD[30294] = -3.62101811E-02;
  COFD[30295] = -2.53731692E-03;
  COFD[30296] = -2.19303974E+01;
  COFD[30297] = 5.39345912E+00;
  COFD[30298] = -4.71992292E-01;
  COFD[30299] = 1.99337081E-02;
  COFD[30300] = -1.89866169E+01;
  COFD[30301] = 3.51383700E+00;
  COFD[30302] = -1.47311797E-01;
  COFD[30303] = 2.68227514E-03;
  COFD[30304] = -2.26171653E+01;
  COFD[30305] = 5.25394583E+00;
  COFD[30306] = -4.18252204E-01;
  COFD[30307] = 1.61873245E-02;
  COFD[30308] = -2.24943326E+01;
  COFD[30309] = 5.60859334E+00;
  COFD[30310] = -4.89526797E-01;
  COFD[30311] = 2.02839728E-02;
  COFD[30312] = -2.25146548E+01;
  COFD[30313] = 5.60863009E+00;
  COFD[30314] = -4.89536007E-01;
  COFD[30315] = 2.02845498E-02;
  COFD[30316] = -2.20818748E+01;
  COFD[30317] = 5.42166606E+00;
  COFD[30318] = -4.73555282E-01;
  COFD[30319] = 1.99172179E-02;
  COFD[30320] = -2.20941115E+01;
  COFD[30321] = 5.42166606E+00;
  COFD[30322] = -4.73555282E-01;
  COFD[30323] = 1.99172179E-02;
  COFD[30324] = -1.90008222E+01;
  COFD[30325] = 3.51383700E+00;
  COFD[30326] = -1.47311797E-01;
  COFD[30327] = 2.68227514E-03;
  COFD[30328] = -1.97858016E+01;
  COFD[30329] = 3.90424489E+00;
  COFD[30330] = -2.08873997E-01;
  COFD[30331] = 5.77813510E-03;
  COFD[30332] = -2.25741250E+01;
  COFD[30333] = 5.25350038E+00;
  COFD[30334] = -4.18174534E-01;
  COFD[30335] = 1.61831733E-02;
  COFD[30336] = -2.24660218E+01;
  COFD[30337] = 5.30519385E+00;
  COFD[30338] = -4.26982994E-01;
  COFD[30339] = 1.66486409E-02;
  COFD[30340] = -2.25599444E+01;
  COFD[30341] = 5.25350038E+00;
  COFD[30342] = -4.18174534E-01;
  COFD[30343] = 1.61831733E-02;
  COFD[30344] = -2.22410835E+01;
  COFD[30345] = 5.15974104E+00;
  COFD[30346] = -4.02219303E-01;
  COFD[30347] = 1.53420433E-02;
  COFD[30348] = -2.22571566E+01;
  COFD[30349] = 5.15974104E+00;
  COFD[30350] = -4.02219303E-01;
  COFD[30351] = 1.53420433E-02;
  COFD[30352] = -2.00502279E+01;
  COFD[30353] = 3.92262843E+00;
  COFD[30354] = -2.09310993E-01;
  COFD[30355] = 5.71178653E-03;
  COFD[30356] = -2.26475227E+01;
  COFD[30357] = 5.59137662E+00;
  COFD[30358] = -4.85571189E-01;
  COFD[30359] = 2.00432448E-02;
  COFD[30360] = -2.00594053E+01;
  COFD[30361] = 3.92262843E+00;
  COFD[30362] = -2.09310993E-01;
  COFD[30363] = 5.71178653E-03;
  COFD[30364] = -2.00594053E+01;
  COFD[30365] = 3.92262843E+00;
  COFD[30366] = -2.09310993E-01;
  COFD[30367] = 5.71178653E-03;
  COFD[30368] = -2.00683227E+01;
  COFD[30369] = 3.92262843E+00;
  COFD[30370] = -2.09310993E-01;
  COFD[30371] = 5.71178653E-03;
  COFD[30372] = -2.17442970E+01;
  COFD[30373] = 4.74371045E+00;
  COFD[30374] = -3.35675372E-01;
  COFD[30375] = 1.19614146E-02;
  COFD[30376] = -2.19520650E+01;
  COFD[30377] = 4.85782498E+00;
  COFD[30378] = -3.53809801E-01;
  COFD[30379] = 1.28781197E-02;
  COFD[30380] = -2.15338676E+01;
  COFD[30381] = 4.53358618E+00;
  COFD[30382] = -3.02459014E-01;
  COFD[30383] = 1.02891951E-02;
  COFD[30384] = -2.21465586E+01;
  COFD[30385] = 4.89062970E+00;
  COFD[30386] = -3.58987885E-01;
  COFD[30387] = 1.31390176E-02;
  COFD[30388] = -2.15564632E+01;
  COFD[30389] = 4.54793947E+00;
  COFD[30390] = -3.04689240E-01;
  COFD[30391] = 1.04001889E-02;
  COFD[30392] = -2.15630299E+01;
  COFD[30393] = 4.54793947E+00;
  COFD[30394] = -3.04689240E-01;
  COFD[30395] = 1.04001889E-02;
  COFD[30396] = -2.17127658E+01;
  COFD[30397] = 4.56847552E+00;
  COFD[30398] = -3.07892621E-01;
  COFD[30399] = 1.05599169E-02;
  COFD[30400] = -2.03345575E+01;
  COFD[30401] = 3.92596644E+00;
  COFD[30402] = -2.09820551E-01;
  COFD[30403] = 5.73681575E-03;
  COFD[30404] = -1.98067360E+01;
  COFD[30405] = 3.71493056E+00;
  COFD[30406] = -1.80752425E-01;
  COFD[30407] = 4.42380779E-03;
  COFD[30408] = -2.04999495E+01;
  COFD[30409] = 4.00914737E+00;
  COFD[30410] = -2.22398560E-01;
  COFD[30411] = 6.35106995E-03;
  COFD[30412] = -2.11611573E+01;
  COFD[30413] = 4.24185230E+00;
  COFD[30414] = -2.57542334E-01;
  COFD[30415] = 8.06755240E-03;
  COFD[30416] = -2.12838916E+01;
  COFD[30417] = 4.30205261E+00;
  COFD[30418] = -2.67181974E-01;
  COFD[30419] = 8.55702247E-03;
  COFD[30420] = -1.97411863E+01;
  COFD[30421] = 3.71520828E+00;
  COFD[30422] = -1.77538797E-01;
  COFD[30423] = 4.14984571E-03;
  COFD[30424] = -1.94537340E+01;
  COFD[30425] = 3.64033093E+00;
  COFD[30426] = -1.66213611E-01;
  COFD[30427] = 3.59745099E-03;
  COFD[30428] = -1.94617350E+01;
  COFD[30429] = 3.64033093E+00;
  COFD[30430] = -1.66213611E-01;
  COFD[30431] = 3.59745099E-03;
  COFD[30432] = -2.00872766E+01;
  COFD[30433] = 3.87686370E+00;
  COFD[30434] = -2.02322128E-01;
  COFD[30435] = 5.36874766E-03;
  COFD[30436] = -1.99417326E+01;
  COFD[30437] = 3.76108685E+00;
  COFD[30438] = -1.87735573E-01;
  COFD[30439] = 4.76470694E-03;
  COFD[30440] = -2.07382952E+01;
  COFD[30441] = 4.12323414E+00;
  COFD[30442] = -2.39594601E-01;
  COFD[30443] = 7.18979047E-03;
  COFD[30444] = -1.96568362E+01;
  COFD[30445] = 3.52976100E+00;
  COFD[30446] = -1.49683857E-01;
  COFD[30447] = 2.79687002E-03;
  COFD[30448] = -1.98195803E+01;
  COFD[30449] = 3.52976100E+00;
  COFD[30450] = -1.49683857E-01;
  COFD[30451] = 2.79687002E-03;
  COFD[30452] = -1.97299320E+01;
  COFD[30453] = 3.52976100E+00;
  COFD[30454] = -1.49683857E-01;
  COFD[30455] = 2.79687002E-03;
  COFD[30456] = -1.97299320E+01;
  COFD[30457] = 3.52976100E+00;
  COFD[30458] = -1.49683857E-01;
  COFD[30459] = 2.79687002E-03;
  COFD[30460] = -2.18410109E+01;
  COFD[30461] = 4.79752905E+00;
  COFD[30462] = -3.44308429E-01;
  COFD[30463] = 1.23999967E-02;
  COFD[30464] = -2.17342699E+01;
  COFD[30465] = 4.74371045E+00;
  COFD[30466] = -3.35675372E-01;
  COFD[30467] = 1.19614146E-02;
  COFD[30468] = -2.29274321E+01;
  COFD[30469] = 5.45232880E+00;
  COFD[30470] = -4.52947326E-01;
  COFD[30471] = 1.80473045E-02;
  COFD[30472] = -2.24627701E+01;
  COFD[30473] = 5.60859334E+00;
  COFD[30474] = -4.89526797E-01;
  COFD[30475] = 2.02839728E-02;
  COFD[30476] = -1.98637741E+01;
  COFD[30477] = 3.54601621E+00;
  COFD[30478] = -1.54142413E-01;
  COFD[30479] = 3.08850126E-03;
  COFD[30480] = -1.96773419E+01;
  COFD[30481] = 3.57920460E+00;
  COFD[30482] = -1.59621434E-01;
  COFD[30483] = 3.37254895E-03;
  COFD[30484] = -1.96726171E+01;
  COFD[30485] = 3.57920460E+00;
  COFD[30486] = -1.59621434E-01;
  COFD[30487] = 3.37254895E-03;
  COFD[30488] = -1.97813741E+01;
  COFD[30489] = 3.60327211E+00;
  COFD[30490] = -1.63687575E-01;
  COFD[30491] = 3.58623059E-03;
  COFD[30492] = -1.98575925E+01;
  COFD[30493] = 3.58487702E+00;
  COFD[30494] = -1.57907725E-01;
  COFD[30495] = 3.19471943E-03;
  COFD[30496] = -1.98062805E+01;
  COFD[30497] = 3.54601621E+00;
  COFD[30498] = -1.54142413E-01;
  COFD[30499] = 3.08850126E-03;
  COFD[30500] = -1.98025688E+01;
  COFD[30501] = 3.54601621E+00;
  COFD[30502] = -1.54142413E-01;
  COFD[30503] = 3.08850126E-03;
  COFD[30504] = -2.04598528E+01;
  COFD[30505] = 3.78121973E+00;
  COFD[30506] = -1.87619388E-01;
  COFD[30507] = 4.64425873E-03;
  COFD[30508] = -2.04568473E+01;
  COFD[30509] = 3.78121973E+00;
  COFD[30510] = -1.87619388E-01;
  COFD[30511] = 4.64425873E-03;
  COFD[30512] = -2.04568473E+01;
  COFD[30513] = 3.78121973E+00;
  COFD[30514] = -1.87619388E-01;
  COFD[30515] = 4.64425873E-03;
  COFD[30516] = -2.04568473E+01;
  COFD[30517] = 3.78121973E+00;
  COFD[30518] = -1.87619388E-01;
  COFD[30519] = 4.64425873E-03;
  COFD[30520] = -2.04568473E+01;
  COFD[30521] = 3.78121973E+00;
  COFD[30522] = -1.87619388E-01;
  COFD[30523] = 4.64425873E-03;
  COFD[30524] = -2.04363403E+01;
  COFD[30525] = 3.78198958E+00;
  COFD[30526] = -1.88024034E-01;
  COFD[30527] = 4.67404845E-03;
  COFD[30528] = -2.04363403E+01;
  COFD[30529] = 3.78198958E+00;
  COFD[30530] = -1.88024034E-01;
  COFD[30531] = 4.67404845E-03;
  COFD[30532] = -1.89007696E+01;
  COFD[30533] = 3.01491854E+00;
  COFD[30534] = -7.45185018E-02;
  COFD[30535] = -7.71760336E-04;
  COFD[30536] = -1.89007696E+01;
  COFD[30537] = 3.01491854E+00;
  COFD[30538] = -7.45185018E-02;
  COFD[30539] = -7.71760336E-04;
  COFD[30540] = -1.89007696E+01;
  COFD[30541] = 3.01491854E+00;
  COFD[30542] = -7.45185018E-02;
  COFD[30543] = -7.71760336E-04;
  COFD[30544] = -1.89007696E+01;
  COFD[30545] = 3.01491854E+00;
  COFD[30546] = -7.45185018E-02;
  COFD[30547] = -7.71760336E-04;
  COFD[30548] = -1.89007696E+01;
  COFD[30549] = 3.01491854E+00;
  COFD[30550] = -7.45185018E-02;
  COFD[30551] = -7.71760336E-04;
  COFD[30552] = -1.89007696E+01;
  COFD[30553] = 3.01491854E+00;
  COFD[30554] = -7.45185018E-02;
  COFD[30555] = -7.71760336E-04;
  COFD[30556] = -1.89007696E+01;
  COFD[30557] = 3.01491854E+00;
  COFD[30558] = -7.45185018E-02;
  COFD[30559] = -7.71760336E-04;
  COFD[30560] = -1.89007696E+01;
  COFD[30561] = 3.01491854E+00;
  COFD[30562] = -7.45185018E-02;
  COFD[30563] = -7.71760336E-04;
  COFD[30564] = -1.89007696E+01;
  COFD[30565] = 3.01491854E+00;
  COFD[30566] = -7.45185018E-02;
  COFD[30567] = -7.71760336E-04;
  COFD[30568] = -1.89007696E+01;
  COFD[30569] = 3.01491854E+00;
  COFD[30570] = -7.45185018E-02;
  COFD[30571] = -7.71760336E-04;
  COFD[30572] = -1.89007696E+01;
  COFD[30573] = 3.01491854E+00;
  COFD[30574] = -7.45185018E-02;
  COFD[30575] = -7.71760336E-04;
  COFD[30576] = -1.89007696E+01;
  COFD[30577] = 3.01491854E+00;
  COFD[30578] = -7.45185018E-02;
  COFD[30579] = -7.71760336E-04;
  COFD[30580] = -1.84159124E+01;
  COFD[30581] = 2.70290609E+00;
  COFD[30582] = -2.86258257E-02;
  COFD[30583] = -2.96892208E-03;
  COFD[30584] = -1.84159124E+01;
  COFD[30585] = 2.70290609E+00;
  COFD[30586] = -2.86258257E-02;
  COFD[30587] = -2.96892208E-03;
  COFD[30588] = -1.84159124E+01;
  COFD[30589] = 2.70290609E+00;
  COFD[30590] = -2.86258257E-02;
  COFD[30591] = -2.96892208E-03;
  COFD[30592] = -1.84159124E+01;
  COFD[30593] = 2.70290609E+00;
  COFD[30594] = -2.86258257E-02;
  COFD[30595] = -2.96892208E-03;
  COFD[30596] = -1.97408903E+01;
  COFD[30597] = 3.41595311E+00;
  COFD[30598] = -1.32754214E-01;
  COFD[30599] = 1.98113878E-03;
  COFD[30600] = -1.97408903E+01;
  COFD[30601] = 3.41595311E+00;
  COFD[30602] = -1.32754214E-01;
  COFD[30603] = 1.98113878E-03;
  COFD[30604] = -1.85744134E+01;
  COFD[30605] = 2.84000235E+00;
  COFD[30606] = -4.89902403E-02;
  COFD[30607] = -1.98593511E-03;
  COFD[30608] = -1.85744134E+01;
  COFD[30609] = 2.84000235E+00;
  COFD[30610] = -4.89902403E-02;
  COFD[30611] = -1.98593511E-03;
  COFD[30612] = -1.85744134E+01;
  COFD[30613] = 2.84000235E+00;
  COFD[30614] = -4.89902403E-02;
  COFD[30615] = -1.98593511E-03;
  COFD[30616] = -1.85744134E+01;
  COFD[30617] = 2.84000235E+00;
  COFD[30618] = -4.89902403E-02;
  COFD[30619] = -1.98593511E-03;
  COFD[30620] = -2.19104697E+01;
  COFD[30621] = 5.38977786E+00;
  COFD[30622] = -4.71707042E-01;
  COFD[30623] = 1.99290483E-02;
  COFD[30624] = -1.42894603E+01;
  COFD[30625] = 3.67490723E+00;
  COFD[30626] = -2.65114792E-01;
  COFD[30627] = 1.16092671E-02;
  COFD[30628] = -1.16906458E+01;
  COFD[30629] = 2.47469981E+00;
  COFD[30630] = -1.10436257E-01;
  COFD[30631] = 4.95273813E-03;
  COFD[30632] = -1.40756909E+01;
  COFD[30633] = 3.07549274E+00;
  COFD[30634] = -1.88889344E-01;
  COFD[30635] = 8.37152866E-03;
  COFD[30636] = -1.52414498E+01;
  COFD[30637] = 3.35922578E+00;
  COFD[30638] = -2.25181399E-01;
  COFD[30639] = 9.92132878E-03;
  COFD[30640] = -1.40949183E+01;
  COFD[30641] = 3.07549274E+00;
  COFD[30642] = -1.88889344E-01;
  COFD[30643] = 8.37152866E-03;
  COFD[30644] = -2.10643264E+01;
  COFD[30645] = 5.53614864E+00;
  COFD[30646] = -4.86046753E-01;
  COFD[30647] = 2.03659193E-02;
  COFD[30648] = -1.50031706E+01;
  COFD[30649] = 3.26223357E+00;
  COFD[30650] = -2.12746642E-01;
  COFD[30651] = 9.38912883E-03;
  COFD[30652] = -2.04750606E+01;
  COFD[30653] = 5.23112374E+00;
  COFD[30654] = -4.54967682E-01;
  COFD[30655] = 1.93570423E-02;
  COFD[30656] = -1.81432499E+01;
  COFD[30657] = 4.37565431E+00;
  COFD[30658] = -3.53906025E-01;
  COFD[30659] = 1.53760786E-02;
  COFD[30660] = -1.59633426E+01;
  COFD[30661] = 3.66853818E+00;
  COFD[30662] = -2.64346221E-01;
  COFD[30663] = 1.15784613E-02;
  COFD[30664] = -1.59327344E+01;
  COFD[30665] = 3.65620899E+00;
  COFD[30666] = -2.62933804E-01;
  COFD[30667] = 1.15253223E-02;
  COFD[30668] = -1.52486292E+01;
  COFD[30669] = 3.35922578E+00;
  COFD[30670] = -2.25181399E-01;
  COFD[30671] = 9.92132878E-03;
  COFD[30672] = -1.52554785E+01;
  COFD[30673] = 3.35922578E+00;
  COFD[30674] = -2.25181399E-01;
  COFD[30675] = 9.92132878E-03;
  COFD[30676] = -2.04833743E+01;
  COFD[30677] = 5.23112374E+00;
  COFD[30678] = -4.54967682E-01;
  COFD[30679] = 1.93570423E-02;
  COFD[30680] = -2.02268939E+01;
  COFD[30681] = 5.13632099E+00;
  COFD[30682] = -4.44839130E-01;
  COFD[30683] = 1.90058356E-02;
  COFD[30684] = -1.82673830E+01;
  COFD[30685] = 4.39538102E+00;
  COFD[30686] = -3.56367230E-01;
  COFD[30687] = 1.54788461E-02;
  COFD[30688] = -1.78815941E+01;
  COFD[30689] = 4.34347890E+00;
  COFD[30690] = -3.49890003E-01;
  COFD[30691] = 1.52083459E-02;
  COFD[30692] = -1.82590880E+01;
  COFD[30693] = 4.39538102E+00;
  COFD[30694] = -3.56367230E-01;
  COFD[30695] = 1.54788461E-02;
  COFD[30696] = -1.83039660E+01;
  COFD[30697] = 4.47952077E+00;
  COFD[30698] = -3.66569471E-01;
  COFD[30699] = 1.58916129E-02;
  COFD[30700] = -1.83137186E+01;
  COFD[30701] = 4.47952077E+00;
  COFD[30702] = -3.66569471E-01;
  COFD[30703] = 1.58916129E-02;
  COFD[30704] = -2.02646659E+01;
  COFD[30705] = 5.10426133E+00;
  COFD[30706] = -4.41256919E-01;
  COFD[30707] = 1.88737290E-02;
  COFD[30708] = -1.59884349E+01;
  COFD[30709] = 3.72220402E+00;
  COFD[30710] = -2.71150591E-01;
  COFD[30711] = 1.18665265E-02;
  COFD[30712] = -2.02693704E+01;
  COFD[30713] = 5.10426133E+00;
  COFD[30714] = -4.41256919E-01;
  COFD[30715] = 1.88737290E-02;
  COFD[30716] = -2.02693704E+01;
  COFD[30717] = 5.10426133E+00;
  COFD[30718] = -4.41256919E-01;
  COFD[30719] = 1.88737290E-02;
  COFD[30720] = -2.02739012E+01;
  COFD[30721] = 5.10426133E+00;
  COFD[30722] = -4.41256919E-01;
  COFD[30723] = 1.88737290E-02;
  COFD[30724] = -1.92783945E+01;
  COFD[30725] = 4.73660584E+00;
  COFD[30726] = -3.97704978E-01;
  COFD[30727] = 1.71514887E-02;
  COFD[30728] = -1.90859348E+01;
  COFD[30729] = 4.68079396E+00;
  COFD[30730] = -3.91231550E-01;
  COFD[30731] = 1.69021170E-02;
  COFD[30732] = -1.97484237E+01;
  COFD[30733] = 4.84231878E+00;
  COFD[30734] = -4.10101001E-01;
  COFD[30735] = 1.76356687E-02;
  COFD[30736] = -1.92062965E+01;
  COFD[30737] = 4.66318669E+00;
  COFD[30738] = -3.89108667E-01;
  COFD[30739] = 1.68165377E-02;
  COFD[30740] = -1.97196563E+01;
  COFD[30741] = 4.83750266E+00;
  COFD[30742] = -4.09581452E-01;
  COFD[30743] = 1.76174739E-02;
  COFD[30744] = -1.97226931E+01;
  COFD[30745] = 4.83750266E+00;
  COFD[30746] = -4.09581452E-01;
  COFD[30747] = 1.76174739E-02;
  COFD[30748] = -1.98374731E+01;
  COFD[30749] = 4.82871870E+00;
  COFD[30750] = -4.08567726E-01;
  COFD[30751] = 1.75785896E-02;
  COFD[30752] = -2.05380740E+01;
  COFD[30753] = 5.10290119E+00;
  COFD[30754] = -4.41098416E-01;
  COFD[30755] = 1.88675651E-02;
  COFD[30756] = -2.07438908E+01;
  COFD[30757] = 5.17746061E+00;
  COFD[30758] = -4.48721337E-01;
  COFD[30759] = 1.91144697E-02;
  COFD[30760] = -2.04414817E+01;
  COFD[30761] = 5.07313588E+00;
  COFD[30762] = -4.37626390E-01;
  COFD[30763] = 1.87324032E-02;
  COFD[30764] = -2.03706833E+01;
  COFD[30765] = 4.98803076E+00;
  COFD[30766] = -4.27580621E-01;
  COFD[30767] = 1.83363274E-02;
  COFD[30768] = -2.02840316E+01;
  COFD[30769] = 4.95484018E+00;
  COFD[30770] = -4.23654881E-01;
  COFD[30771] = 1.81813866E-02;
  COFD[30772] = -2.05802353E+01;
  COFD[30773] = 5.16117916E+00;
  COFD[30774] = -4.46897404E-01;
  COFD[30775] = 1.90470443E-02;
  COFD[30776] = -2.04649116E+01;
  COFD[30777] = 5.18856872E+00;
  COFD[30778] = -4.50001829E-01;
  COFD[30779] = 1.91636142E-02;
  COFD[30780] = -2.04688432E+01;
  COFD[30781] = 5.18856872E+00;
  COFD[30782] = -4.50001829E-01;
  COFD[30783] = 1.91636142E-02;
  COFD[30784] = -2.04092310E+01;
  COFD[30785] = 5.12317458E+00;
  COFD[30786] = -4.43444370E-01;
  COFD[30787] = 1.89579841E-02;
  COFD[30788] = -2.07526086E+01;
  COFD[30789] = 5.15962926E+00;
  COFD[30790] = -4.46790366E-01;
  COFD[30791] = 1.90462843E-02;
  COFD[30792] = -2.03249633E+01;
  COFD[30793] = 5.03292431E+00;
  COFD[30794] = -4.32887308E-01;
  COFD[30795] = 1.85458102E-02;
  COFD[30796] = -2.10349633E+01;
  COFD[30797] = 5.22604478E+00;
  COFD[30798] = -4.54378127E-01;
  COFD[30799] = 1.93342248E-02;
  COFD[30800] = -2.10970191E+01;
  COFD[30801] = 5.22604478E+00;
  COFD[30802] = -4.54378127E-01;
  COFD[30803] = 1.93342248E-02;
  COFD[30804] = -2.10643816E+01;
  COFD[30805] = 5.22604478E+00;
  COFD[30806] = -4.54378127E-01;
  COFD[30807] = 1.93342248E-02;
  COFD[30808] = -2.10643816E+01;
  COFD[30809] = 5.22604478E+00;
  COFD[30810] = -4.54378127E-01;
  COFD[30811] = 1.93342248E-02;
  COFD[30812] = -1.91796726E+01;
  COFD[30813] = 4.70714822E+00;
  COFD[30814] = -3.94261134E-01;
  COFD[30815] = 1.70175169E-02;
  COFD[30816] = -1.92731125E+01;
  COFD[30817] = 4.73660584E+00;
  COFD[30818] = -3.97704978E-01;
  COFD[30819] = 1.71514887E-02;
  COFD[30820] = -1.76895351E+01;
  COFD[30821] = 4.19171952E+00;
  COFD[30822] = -3.31354810E-01;
  COFD[30823] = 1.44520623E-02;
  COFD[30824] = -1.59404910E+01;
  COFD[30825] = 3.66853818E+00;
  COFD[30826] = -2.64346221E-01;
  COFD[30827] = 1.15784613E-02;
  COFD[30828] = -2.12208966E+01;
  COFD[30829] = 5.22891952E+00;
  COFD[30830] = -4.54711908E-01;
  COFD[30831] = 1.93471470E-02;
  COFD[30832] = -2.10026501E+01;
  COFD[30833] = 5.22736722E+00;
  COFD[30834] = -4.54531700E-01;
  COFD[30835] = 1.93401716E-02;
  COFD[30836] = -2.10006706E+01;
  COFD[30837] = 5.22736722E+00;
  COFD[30838] = -4.54531700E-01;
  COFD[30839] = 1.93401716E-02;
  COFD[30840] = -2.10831723E+01;
  COFD[30841] = 5.22374890E+00;
  COFD[30842] = -4.54111394E-01;
  COFD[30843] = 1.93238908E-02;
  COFD[30844] = -2.10396413E+01;
  COFD[30845] = 5.20813111E+00;
  COFD[30846] = -4.52293014E-01;
  COFD[30847] = 1.92532631E-02;
  COFD[30848] = -2.11992523E+01;
  COFD[30849] = 5.22891952E+00;
  COFD[30850] = -4.54711908E-01;
  COFD[30851] = 1.93471470E-02;
  COFD[30852] = -2.11978013E+01;
  COFD[30853] = 5.22891952E+00;
  COFD[30854] = -4.54711908E-01;
  COFD[30855] = 1.93471470E-02;
  COFD[30856] = -2.10685665E+01;
  COFD[30857] = 5.15027524E+00;
  COFD[30858] = -4.46126111E-01;
  COFD[30859] = 1.90401391E-02;
  COFD[30860] = -2.10674576E+01;
  COFD[30861] = 5.15027524E+00;
  COFD[30862] = -4.46126111E-01;
  COFD[30863] = 1.90401391E-02;
  COFD[30864] = -2.10674576E+01;
  COFD[30865] = 5.15027524E+00;
  COFD[30866] = -4.46126111E-01;
  COFD[30867] = 1.90401391E-02;
  COFD[30868] = -2.10674576E+01;
  COFD[30869] = 5.15027524E+00;
  COFD[30870] = -4.46126111E-01;
  COFD[30871] = 1.90401391E-02;
  COFD[30872] = -2.10674576E+01;
  COFD[30873] = 5.15027524E+00;
  COFD[30874] = -4.46126111E-01;
  COFD[30875] = 1.90401391E-02;
  COFD[30876] = -2.10431250E+01;
  COFD[30877] = 5.14839832E+00;
  COFD[30878] = -4.45972391E-01;
  COFD[30879] = 1.90371778E-02;
  COFD[30880] = -2.10431250E+01;
  COFD[30881] = 5.14839832E+00;
  COFD[30882] = -4.45972391E-01;
  COFD[30883] = 1.90371778E-02;
  COFD[30884] = -2.17873416E+01;
  COFD[30885] = 5.37038209E+00;
  COFD[30886] = -4.70276061E-01;
  COFD[30887] = 1.99108515E-02;
  COFD[30888] = -2.17873416E+01;
  COFD[30889] = 5.37038209E+00;
  COFD[30890] = -4.70276061E-01;
  COFD[30891] = 1.99108515E-02;
  COFD[30892] = -2.17873416E+01;
  COFD[30893] = 5.37038209E+00;
  COFD[30894] = -4.70276061E-01;
  COFD[30895] = 1.99108515E-02;
  COFD[30896] = -2.17873416E+01;
  COFD[30897] = 5.37038209E+00;
  COFD[30898] = -4.70276061E-01;
  COFD[30899] = 1.99108515E-02;
  COFD[30900] = -2.17873416E+01;
  COFD[30901] = 5.37038209E+00;
  COFD[30902] = -4.70276061E-01;
  COFD[30903] = 1.99108515E-02;
  COFD[30904] = -2.17873416E+01;
  COFD[30905] = 5.37038209E+00;
  COFD[30906] = -4.70276061E-01;
  COFD[30907] = 1.99108515E-02;
  COFD[30908] = -2.17873416E+01;
  COFD[30909] = 5.37038209E+00;
  COFD[30910] = -4.70276061E-01;
  COFD[30911] = 1.99108515E-02;
  COFD[30912] = -2.17873416E+01;
  COFD[30913] = 5.37038209E+00;
  COFD[30914] = -4.70276061E-01;
  COFD[30915] = 1.99108515E-02;
  COFD[30916] = -2.17873416E+01;
  COFD[30917] = 5.37038209E+00;
  COFD[30918] = -4.70276061E-01;
  COFD[30919] = 1.99108515E-02;
  COFD[30920] = -2.17873416E+01;
  COFD[30921] = 5.37038209E+00;
  COFD[30922] = -4.70276061E-01;
  COFD[30923] = 1.99108515E-02;
  COFD[30924] = -2.17873416E+01;
  COFD[30925] = 5.37038209E+00;
  COFD[30926] = -4.70276061E-01;
  COFD[30927] = 1.99108515E-02;
  COFD[30928] = -2.17873416E+01;
  COFD[30929] = 5.37038209E+00;
  COFD[30930] = -4.70276061E-01;
  COFD[30931] = 1.99108515E-02;
  COFD[30932] = -2.21044644E+01;
  COFD[30933] = 5.40171449E+00;
  COFD[30934] = -4.72533012E-01;
  COFD[30935] = 1.99357687E-02;
  COFD[30936] = -2.21044644E+01;
  COFD[30937] = 5.40171449E+00;
  COFD[30938] = -4.72533012E-01;
  COFD[30939] = 1.99357687E-02;
  COFD[30940] = -2.21044644E+01;
  COFD[30941] = 5.40171449E+00;
  COFD[30942] = -4.72533012E-01;
  COFD[30943] = 1.99357687E-02;
  COFD[30944] = -2.21044644E+01;
  COFD[30945] = 5.40171449E+00;
  COFD[30946] = -4.72533012E-01;
  COFD[30947] = 1.99357687E-02;
  COFD[30948] = -2.14459016E+01;
  COFD[30949] = 5.26732625E+00;
  COFD[30950] = -4.59210404E-01;
  COFD[30951] = 1.95229908E-02;
  COFD[30952] = -2.14459016E+01;
  COFD[30953] = 5.26732625E+00;
  COFD[30954] = -4.59210404E-01;
  COFD[30955] = 1.95229908E-02;
  COFD[30956] = -2.19104697E+01;
  COFD[30957] = 5.38977786E+00;
  COFD[30958] = -4.71707042E-01;
  COFD[30959] = 1.99290483E-02;
  COFD[30960] = -2.19104697E+01;
  COFD[30961] = 5.38977786E+00;
  COFD[30962] = -4.71707042E-01;
  COFD[30963] = 1.99290483E-02;
  COFD[30964] = -2.19104697E+01;
  COFD[30965] = 5.38977786E+00;
  COFD[30966] = -4.71707042E-01;
  COFD[30967] = 1.99290483E-02;
  COFD[30968] = -2.19104697E+01;
  COFD[30969] = 5.38977786E+00;
  COFD[30970] = -4.71707042E-01;
  COFD[30971] = 1.99290483E-02;
  COFD[30972] = -1.49828551E+01;
  COFD[30973] = 3.25781069E+00;
  COFD[30974] = -2.12199367E-01;
  COFD[30975] = 9.36657283E-03;
}

// List of specs with small weight, dim NLITE
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetKTDIF(int* KTDIF)
{
  KTDIF[0] = 0;
  KTDIF[1] = 1;
}

// Poly fits for thermal diff ratios, dim NO*NLITE*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFTD(amrex::Real* COFTD)
{
  COFTD[0] = 0.00000000E+00;
  COFTD[1] = 0.00000000E+00;
  COFTD[2] = 0.00000000E+00;
  COFTD[3] = 0.00000000E+00;
  COFTD[4] = 1.44152190E-01;
  COFTD[5] = 7.99993584E-05;
  COFTD[6] = -4.89707442E-08;
  COFTD[7] = 9.14277269E-12;
  COFTD[8] = 2.35281489E-01;
  COFTD[9] = 4.65667373E-04;
  COFTD[10] = -2.60938016E-07;
  COFTD[11] = 4.49268709E-11;
  COFTD[12] = 1.79839678E-01;
  COFTD[13] = 6.01720824E-04;
  COFTD[14] = -3.26432767E-07;
  COFTD[15] = 5.49110406E-11;
  COFTD[16] = 2.37051899E-01;
  COFTD[17] = 4.69171356E-04;
  COFTD[18] = -2.62901483E-07;
  COFTD[19] = 4.52649298E-11;
  COFTD[20] = -1.74351746E-01;
  COFTD[21] = 8.62242165E-04;
  COFTD[22] = -3.79543417E-07;
  COFTD[23] = 5.60259034E-11;
  COFTD[24] = 2.00119185E-01;
  COFTD[25] = 5.64791694E-04;
  COFTD[26] = -3.09444383E-07;
  COFTD[27] = 5.24137469E-11;
  COFTD[28] = -1.60980730E-01;
  COFTD[29] = 9.03804574E-04;
  COFTD[30] = -4.06926592E-07;
  COFTD[31] = 6.09200234E-11;
  COFTD[32] = -2.00308977E-02;
  COFTD[33] = 8.50438113E-04;
  COFTD[34] = -4.21063477E-07;
  COFTD[35] = 6.67958138E-11;
  COFTD[36] = 1.00038655E-01;
  COFTD[37] = 6.50465703E-04;
  COFTD[38] = -3.41777446E-07;
  COFTD[39] = 5.62776574E-11;
  COFTD[40] = 1.05123703E-01;
  COFTD[41] = 6.50663360E-04;
  COFTD[42] = -3.42563171E-07;
  COFTD[43] = 5.64801866E-11;
  COFTD[44] = 1.80186380E-01;
  COFTD[45] = 6.02880848E-04;
  COFTD[46] = -3.27062078E-07;
  COFTD[47] = 5.50169005E-11;
  COFTD[48] = 1.80513126E-01;
  COFTD[49] = 6.03974096E-04;
  COFTD[50] = -3.27655164E-07;
  COFTD[51] = 5.51166667E-11;
  COFTD[52] = -1.61357064E-01;
  COFTD[53] = 9.05917454E-04;
  COFTD[54] = -4.07877889E-07;
  COFTD[55] = 6.10624399E-11;
  COFTD[56] = -1.31244138E-01;
  COFTD[57] = 9.03898764E-04;
  COFTD[58] = -4.17830295E-07;
  COFTD[59] = 6.35723824E-11;
  COFTD[60] = -2.28637057E-02;
  COFTD[61] = 8.35411021E-04;
  COFTD[62] = -4.12928324E-07;
  COFTD[63] = 6.54379462E-11;
  COFTD[64] = -1.42100027E-02;
  COFTD[65] = 8.23809958E-04;
  COFTD[66] = -4.08994451E-07;
  COFTD[67] = 6.49897618E-11;
  COFTD[68] = -2.28105391E-02;
  COFTD[69] = 8.33468381E-04;
  COFTD[70] = -4.11968113E-07;
  COFTD[71] = 6.52857788E-11;
  COFTD[72] = -3.81469612E-02;
  COFTD[73] = 8.39830951E-04;
  COFTD[74] = -4.11687670E-07;
  COFTD[75] = 6.49122990E-11;
  COFTD[76] = -3.82573577E-02;
  COFTD[77] = 8.42261405E-04;
  COFTD[78] = -4.12879086E-07;
  COFTD[79] = 6.51001539E-11;
  COFTD[80] = -1.41640200E-01;
  COFTD[81] = 9.21402335E-04;
  COFTD[82] = -4.23209196E-07;
  COFTD[83] = 6.41398937E-11;
  COFTD[84] = 9.86932164E-02;
  COFTD[85] = 7.20973229E-04;
  COFTD[86] = -3.77134366E-07;
  COFTD[87] = 6.19201176E-11;
  COFTD[88] = -1.41799447E-01;
  COFTD[89] = 9.22438273E-04;
  COFTD[90] = -4.23685013E-07;
  COFTD[91] = 6.42120066E-11;
  COFTD[92] = -1.41799447E-01;
  COFTD[93] = 9.22438273E-04;
  COFTD[94] = -4.23685013E-07;
  COFTD[95] = 6.42120066E-11;
  COFTD[96] = -1.41951569E-01;
  COFTD[97] = 9.23427864E-04;
  COFTD[98] = -4.24139542E-07;
  COFTD[99] = 6.42808932E-11;
  COFTD[100] = -8.35961075E-02;
  COFTD[101] = 8.94626004E-04;
  COFTD[102] = -4.27680391E-07;
  COFTD[103] = 6.64139107E-11;
  COFTD[104] = -7.23037740E-02;
  COFTD[105] = 8.89464555E-04;
  COFTD[106] = -4.28124076E-07;
  COFTD[107] = 6.67585086E-11;
  COFTD[108] = -1.04463559E-01;
  COFTD[109] = 9.17316615E-04;
  COFTD[110] = -4.33158872E-07;
  COFTD[111] = 6.67639121E-11;
  COFTD[112] = -6.92601006E-02;
  COFTD[113] = 8.88358702E-04;
  COFTD[114] = -4.28365056E-07;
  COFTD[115] = 6.68693500E-11;
  COFTD[116] = -1.03383771E-01;
  COFTD[117] = 9.17367709E-04;
  COFTD[118] = -4.33505618E-07;
  COFTD[119] = 6.68475534E-11;
  COFTD[120] = -1.03451772E-01;
  COFTD[121] = 9.17971107E-04;
  COFTD[122] = -4.33790756E-07;
  COFTD[123] = 6.68915223E-11;
  COFTD[124] = -1.01770274E-01;
  COFTD[125] = 9.17665863E-04;
  COFTD[126] = -4.34133138E-07;
  COFTD[127] = 6.69898943E-11;
  COFTD[128] = -1.43232436E-01;
  COFTD[129] = 9.33078524E-04;
  COFTD[130] = -4.28643443E-07;
  COFTD[131] = 6.49700958E-11;
  COFTD[132] = -1.43194400E-01;
  COFTD[133] = 9.33624402E-04;
  COFTD[134] = -4.28937018E-07;
  COFTD[135] = 6.50185635E-11;
  COFTD[136] = -1.38566420E-01;
  COFTD[137] = 9.32001778E-04;
  COFTD[138] = -4.29713924E-07;
  COFTD[139] = 6.52778201E-11;
  COFTD[140] = -1.26505832E-01;
  COFTD[141] = 9.33838500E-04;
  COFTD[142] = -4.34686408E-07;
  COFTD[143] = 6.64183443E-11;
  COFTD[144] = -1.21244023E-01;
  COFTD[145] = 9.32246390E-04;
  COFTD[146] = -4.35567983E-07;
  COFTD[147] = 6.67043784E-11;
  COFTD[148] = -1.55536331E-01;
  COFTD[149] = 9.26288352E-04;
  COFTD[150] = -4.20678941E-07;
  COFTD[151] = 6.33164375E-11;
  COFTD[152] = -1.59826602E-01;
  COFTD[153] = 9.28229412E-04;
  COFTD[154] = -4.20058885E-07;
  COFTD[155] = 6.30842846E-11;
  COFTD[156] = -1.59970474E-01;
  COFTD[157] = 9.29064981E-04;
  COFTD[158] = -4.20437012E-07;
  COFTD[159] = 6.31410716E-11;
  COFTD[160] = -1.46223678E-01;
  COFTD[161] = 9.32492349E-04;
  COFTD[162] = -4.27283298E-07;
  COFTD[163] = 6.46629136E-11;
  COFTD[164] = -1.40298418E-01;
  COFTD[165] = 9.31852686E-04;
  COFTD[166] = -4.29039110E-07;
  COFTD[167] = 6.51191084E-11;
  COFTD[168] = -1.32461220E-01;
  COFTD[169] = 9.30311726E-04;
  COFTD[170] = -4.30921793E-07;
  COFTD[171] = 6.56462456E-11;
  COFTD[172] = -1.67071445E-01;
  COFTD[173] = 9.41791431E-04;
  COFTD[174] = -4.24294887E-07;
  COFTD[175] = 6.35447573E-11;
  COFTD[176] = -1.69039452E-01;
  COFTD[177] = 9.52885200E-04;
  COFTD[178] = -4.29292840E-07;
  COFTD[179] = 6.42932785E-11;
  COFTD[180] = -1.68032026E-01;
  COFTD[181] = 9.47206281E-04;
  COFTD[182] = -4.26734379E-07;
  COFTD[183] = 6.39101093E-11;
  COFTD[184] = -1.68032026E-01;
  COFTD[185] = 9.47206281E-04;
  COFTD[186] = -4.26734379E-07;
  COFTD[187] = 6.39101093E-11;
  COFTD[188] = -7.78656037E-02;
  COFTD[189] = 8.92099391E-04;
  COFTD[190] = -4.27968476E-07;
  COFTD[191] = 6.65999291E-11;
  COFTD[192] = -8.34875467E-02;
  COFTD[193] = 8.93464212E-04;
  COFTD[194] = -4.27124991E-07;
  COFTD[195] = 6.63276633E-11;
  COFTD[196] = 1.67288023E-02;
  COFTD[197] = 8.09701821E-04;
  COFTD[198] = -4.08156564E-07;
  COFTD[199] = 6.54673219E-11;
  COFTD[200] = 9.90747140E-02;
  COFTD[201] = 6.44198017E-04;
  COFTD[202] = -3.38484184E-07;
  COFTD[203] = 5.57353833E-11;
  COFTD[204] = -1.61529231E-01;
  COFTD[205] = 9.50222994E-04;
  COFTD[206] = -4.30805105E-07;
  COFTD[207] = 6.47716868E-11;
  COFTD[208] = -1.55773453E-01;
  COFTD[209] = 9.41763722E-04;
  COFTD[210] = -4.28587720E-07;
  COFTD[211] = 6.45884407E-11;
  COFTD[212] = -1.55711708E-01;
  COFTD[213] = 9.41390427E-04;
  COFTD[214] = -4.28417837E-07;
  COFTD[215] = 6.45628393E-11;
  COFTD[216] = -1.51774392E-01;
  COFTD[217] = 9.40923526E-04;
  COFTD[218] = -4.29623220E-07;
  COFTD[219] = 6.48760776E-11;
  COFTD[220] = -1.65484324E-01;
  COFTD[221] = 9.46242792E-04;
  COFTD[222] = -4.27226590E-07;
  COFTD[223] = 6.40697009E-11;
  COFTD[224] = -1.60877842E-01;
  COFTD[225] = 9.46391089E-04;
  COFTD[226] = -4.29067824E-07;
  COFTD[227] = 6.45104861E-11;
  COFTD[228] = -1.60833255E-01;
  COFTD[229] = 9.46128797E-04;
  COFTD[230] = -4.28948908E-07;
  COFTD[231] = 6.44926070E-11;
  COFTD[232] = -1.55228099E-01;
  COFTD[233] = 9.48986630E-04;
  COFTD[234] = -4.32517245E-07;
  COFTD[235] = 6.52401865E-11;
  COFTD[236] = -1.55196365E-01;
  COFTD[237] = 9.48792621E-04;
  COFTD[238] = -4.32428822E-07;
  COFTD[239] = 6.52268489E-11;
  COFTD[240] = -1.55196365E-01;
  COFTD[241] = 9.48792621E-04;
  COFTD[242] = -4.32428822E-07;
  COFTD[243] = 6.52268489E-11;
  COFTD[244] = -1.55196365E-01;
  COFTD[245] = 9.48792621E-04;
  COFTD[246] = -4.32428822E-07;
  COFTD[247] = 6.52268489E-11;
  COFTD[248] = -1.55196365E-01;
  COFTD[249] = 9.48792621E-04;
  COFTD[250] = -4.32428822E-07;
  COFTD[251] = 6.52268489E-11;
  COFTD[252] = -1.54462706E-01;
  COFTD[253] = 9.48510472E-04;
  COFTD[254] = -4.32552587E-07;
  COFTD[255] = 6.52689062E-11;
  COFTD[256] = -1.54462706E-01;
  COFTD[257] = 9.48510472E-04;
  COFTD[258] = -4.32552587E-07;
  COFTD[259] = 6.52689062E-11;
  COFTD[260] = -1.89025195E-01;
  COFTD[261] = 9.50795308E-04;
  COFTD[262] = -4.19942427E-07;
  COFTD[263] = 6.21213330E-11;
  COFTD[264] = -1.89025195E-01;
  COFTD[265] = 9.50795308E-04;
  COFTD[266] = -4.19942427E-07;
  COFTD[267] = 6.21213330E-11;
  COFTD[268] = -1.89025195E-01;
  COFTD[269] = 9.50795308E-04;
  COFTD[270] = -4.19942427E-07;
  COFTD[271] = 6.21213330E-11;
  COFTD[272] = -1.89025195E-01;
  COFTD[273] = 9.50795308E-04;
  COFTD[274] = -4.19942427E-07;
  COFTD[275] = 6.21213330E-11;
  COFTD[276] = -1.89025195E-01;
  COFTD[277] = 9.50795308E-04;
  COFTD[278] = -4.19942427E-07;
  COFTD[279] = 6.21213330E-11;
  COFTD[280] = -1.89025195E-01;
  COFTD[281] = 9.50795308E-04;
  COFTD[282] = -4.19942427E-07;
  COFTD[283] = 6.21213330E-11;
  COFTD[284] = -1.89025195E-01;
  COFTD[285] = 9.50795308E-04;
  COFTD[286] = -4.19942427E-07;
  COFTD[287] = 6.21213330E-11;
  COFTD[288] = -1.89025195E-01;
  COFTD[289] = 9.50795308E-04;
  COFTD[290] = -4.19942427E-07;
  COFTD[291] = 6.21213330E-11;
  COFTD[292] = -1.89025195E-01;
  COFTD[293] = 9.50795308E-04;
  COFTD[294] = -4.19942427E-07;
  COFTD[295] = 6.21213330E-11;
  COFTD[296] = -1.89025195E-01;
  COFTD[297] = 9.50795308E-04;
  COFTD[298] = -4.19942427E-07;
  COFTD[299] = 6.21213330E-11;
  COFTD[300] = -1.89025195E-01;
  COFTD[301] = 9.50795308E-04;
  COFTD[302] = -4.19942427E-07;
  COFTD[303] = 6.21213330E-11;
  COFTD[304] = -1.89025195E-01;
  COFTD[305] = 9.50795308E-04;
  COFTD[306] = -4.19942427E-07;
  COFTD[307] = 6.21213330E-11;
  COFTD[308] = -1.99618207E-01;
  COFTD[309] = 9.49502151E-04;
  COFTD[310] = -4.14507049E-07;
  COFTD[311] = 6.08680682E-11;
  COFTD[312] = -1.99618207E-01;
  COFTD[313] = 9.49502151E-04;
  COFTD[314] = -4.14507049E-07;
  COFTD[315] = 6.08680682E-11;
  COFTD[316] = -1.99618207E-01;
  COFTD[317] = 9.49502151E-04;
  COFTD[318] = -4.14507049E-07;
  COFTD[319] = 6.08680682E-11;
  COFTD[320] = -1.99618207E-01;
  COFTD[321] = 9.49502151E-04;
  COFTD[322] = -4.14507049E-07;
  COFTD[323] = 6.08680682E-11;
  COFTD[324] = -1.73998724E-01;
  COFTD[325] = 9.51596565E-04;
  COFTD[326] = -4.26651798E-07;
  COFTD[327] = 6.37073660E-11;
  COFTD[328] = -1.73998724E-01;
  COFTD[329] = 9.51596565E-04;
  COFTD[330] = -4.26651798E-07;
  COFTD[331] = 6.37073660E-11;
  COFTD[332] = -1.94627070E-01;
  COFTD[333] = 9.50337252E-04;
  COFTD[334] = -4.17223601E-07;
  COFTD[335] = 6.14862200E-11;
  COFTD[336] = -1.94627070E-01;
  COFTD[337] = 9.50337252E-04;
  COFTD[338] = -4.17223601E-07;
  COFTD[339] = 6.14862200E-11;
  COFTD[340] = -1.94627070E-01;
  COFTD[341] = 9.50337252E-04;
  COFTD[342] = -4.17223601E-07;
  COFTD[343] = 6.14862200E-11;
  COFTD[344] = -1.94627070E-01;
  COFTD[345] = 9.50337252E-04;
  COFTD[346] = -4.17223601E-07;
  COFTD[347] = 6.14862200E-11;
  COFTD[348] = 2.01521521E-01;
  COFTD[349] = 5.62743751E-04;
  COFTD[350] = -3.08519054E-07;
  COFTD[351] = 5.22805672E-11;
  COFTD[352] = -1.44152190E-01;
  COFTD[353] = -7.99993584E-05;
  COFTD[354] = 4.89707442E-08;
  COFTD[355] = -9.14277269E-12;
  COFTD[356] = 0.00000000E+00;
  COFTD[357] = 0.00000000E+00;
  COFTD[358] = 0.00000000E+00;
  COFTD[359] = 0.00000000E+00;
  COFTD[360] = 4.06676789E-01;
  COFTD[361] = 3.84699853E-05;
  COFTD[362] = -2.54843294E-08;
  COFTD[363] = 5.86294132E-12;
  COFTD[364] = 4.26576987E-01;
  COFTD[365] = 1.20406440E-04;
  COFTD[366] = -7.67293441E-08;
  COFTD[367] = 1.52089282E-11;
  COFTD[368] = 4.12890501E-01;
  COFTD[369] = 3.90577773E-05;
  COFTD[370] = -2.58737105E-08;
  COFTD[371] = 5.95252260E-12;
  COFTD[372] = 2.27466103E-02;
  COFTD[373] = 6.73071543E-04;
  COFTD[374] = -3.40932103E-07;
  COFTD[375] = 5.48493184E-11;
  COFTD[376] = 4.30602469E-01;
  COFTD[377] = 9.35955212E-05;
  COFTD[378] = -6.03979306E-08;
  COFTD[379] = 1.23114290E-11;
  COFTD[380] = 1.22118967E-01;
  COFTD[381] = 6.18369499E-04;
  COFTD[382] = -3.28420406E-07;
  COFTD[383] = 5.44599896E-11;
  COFTD[384] = 2.93190141E-01;
  COFTD[385] = 4.01428114E-04;
  COFTD[386] = -2.30704675E-07;
  COFTD[387] = 4.05174676E-11;
  COFTD[388] = 3.31188133E-01;
  COFTD[389] = 1.81325042E-04;
  COFTD[390] = -1.11095367E-07;
  COFTD[391] = 2.07634046E-11;
  COFTD[392] = 3.39554500E-01;
  COFTD[393] = 1.79333587E-04;
  COFTD[394] = -1.10134815E-07;
  COFTD[395] = 2.06425572E-11;
  COFTD[396] = 4.28228101E-01;
  COFTD[397] = 1.20872486E-04;
  COFTD[398] = -7.70263335E-08;
  COFTD[399] = 1.52677960E-11;
  COFTD[400] = 4.29786829E-01;
  COFTD[401] = 1.21312456E-04;
  COFTD[402] = -7.73067054E-08;
  COFTD[403] = 1.53233700E-11;
  COFTD[404] = 1.22692619E-01;
  COFTD[405] = 6.21274281E-04;
  COFTD[406] = -3.29963157E-07;
  COFTD[407] = 5.47158146E-11;
  COFTD[408] = 1.40313353E-01;
  COFTD[409] = 6.01262661E-04;
  COFTD[410] = -3.21913277E-07;
  COFTD[411] = 5.36675963E-11;
  COFTD[412] = 2.78020632E-01;
  COFTD[413] = 3.89607115E-04;
  COFTD[414] = -2.23545573E-07;
  COFTD[415] = 3.92076941E-11;
  COFTD[416] = 2.82972913E-01;
  COFTD[417] = 3.73030999E-04;
  COFTD[418] = -2.14958038E-07;
  COFTD[419] = 3.78353177E-11;
  COFTD[420] = 2.76724616E-01;
  COFTD[421] = 3.87790930E-04;
  COFTD[422] = -2.22503498E-07;
  COFTD[423] = 3.90249243E-11;
  COFTD[424] = 2.58065265E-01;
  COFTD[425] = 4.05070133E-04;
  COFTD[426] = -2.30586043E-07;
  COFTD[427] = 4.01861401E-11;
  COFTD[428] = 2.59567632E-01;
  COFTD[429] = 4.07428311E-04;
  COFTD[430] = -2.31928435E-07;
  COFTD[431] = 4.04200899E-11;
  COFTD[432] = 1.59288295E-01;
  COFTD[433] = 6.02831194E-04;
  COFTD[434] = -3.24836171E-07;
  COFTD[435] = 5.43906658E-11;
  COFTD[436] = 3.86105710E-01;
  COFTD[437] = 2.28759408E-04;
  COFTD[438] = -1.39424407E-07;
  COFTD[439] = 2.58988578E-11;
  COFTD[440] = 1.59647280E-01;
  COFTD[441] = 6.04189783E-04;
  COFTD[442] = -3.25568248E-07;
  COFTD[443] = 5.45132450E-11;
  COFTD[444] = 1.59647280E-01;
  COFTD[445] = 6.04189783E-04;
  COFTD[446] = -3.25568248E-07;
  COFTD[447] = 5.45132450E-11;
  COFTD[448] = 1.59990556E-01;
  COFTD[449] = 6.05488919E-04;
  COFTD[450] = -3.26268289E-07;
  COFTD[451] = 5.46304600E-11;
  COFTD[452] = 2.27260719E-01;
  COFTD[453] = 4.99548161E-04;
  COFTD[454] = -2.78003254E-07;
  COFTD[455] = 4.76207330E-11;
  COFTD[456] = 2.40638170E-01;
  COFTD[457] = 4.82928433E-04;
  COFTD[458] = -2.70361250E-07;
  COFTD[459] = 4.65171649E-11;
  COFTD[460] = 2.10934245E-01;
  COFTD[461] = 5.46606118E-04;
  COFTD[462] = -3.01040389E-07;
  COFTD[463] = 5.11788291E-11;
  COFTD[464] = 2.44452116E-01;
  COFTD[465] = 4.78883138E-04;
  COFTD[466] = -2.68526489E-07;
  COFTD[467] = 4.62571230E-11;
  COFTD[468] = 2.12561967E-01;
  COFTD[469] = 5.45355783E-04;
  COFTD[470] = -3.00537070E-07;
  COFTD[471] = 5.11158245E-11;
  COFTD[472] = 2.12841960E-01;
  COFTD[473] = 5.46074142E-04;
  COFTD[474] = -3.00932947E-07;
  COFTD[475] = 5.11831558E-11;
  COFTD[476] = 2.15138964E-01;
  COFTD[477] = 5.43739042E-04;
  COFTD[478] = -2.99925545E-07;
  COFTD[479] = 5.10459348E-11;
  COFTD[480] = 1.63652032E-01;
  COFTD[481] = 6.17896715E-04;
  COFTD[482] = -3.32995838E-07;
  COFTD[483] = 5.57616581E-11;
  COFTD[484] = 1.32963822E-01;
  COFTD[485] = 6.60362626E-04;
  COFTD[486] = -3.51038227E-07;
  COFTD[487] = 5.82451485E-11;
  COFTD[488] = 1.69839114E-01;
  COFTD[489] = 6.09285585E-04;
  COFTD[490] = -3.29262699E-07;
  COFTD[491] = 5.52403923E-11;
  COFTD[492] = 1.88615308E-01;
  COFTD[493] = 5.93231870E-04;
  COFTD[494] = -3.22962464E-07;
  COFTD[495] = 5.44598692E-11;
  COFTD[496] = 1.94963582E-01;
  COFTD[497] = 5.84808032E-04;
  COFTD[498] = -3.19255164E-07;
  COFTD[499] = 5.39383123E-11;
  COFTD[500] = 1.41968406E-01;
  COFTD[501] = 6.31751201E-04;
  COFTD[502] = -3.37601782E-07;
  COFTD[503] = 5.62123127E-11;
  COFTD[504] = 1.36817150E-01;
  COFTD[505] = 6.41724825E-04;
  COFTD[506] = -3.42054551E-07;
  COFTD[507] = 5.68565302E-11;
  COFTD[508] = 1.37063913E-01;
  COFTD[509] = 6.42882239E-04;
  COFTD[510] = -3.42671480E-07;
  COFTD[511] = 5.69590765E-11;
  COFTD[512] = 1.58955334E-01;
  COFTD[513] = 6.22196180E-04;
  COFTD[514] = -3.34673753E-07;
  COFTD[515] = 5.59701261E-11;
  COFTD[516] = 1.37298204E-01;
  COFTD[517] = 6.52552790E-04;
  COFTD[518] = -3.47606169E-07;
  COFTD[519] = 5.77550250E-11;
  COFTD[520] = 1.77767146E-01;
  COFTD[521] = 5.98127967E-04;
  COFTD[522] = -3.24381599E-07;
  COFTD[523] = 5.45541710E-11;
  COFTD[524] = 1.33616616E-01;
  COFTD[525] = 6.70198489E-04;
  COFTD[526] = -3.56103258E-07;
  COFTD[527] = 5.90675970E-11;
  COFTD[528] = 1.36784256E-01;
  COFTD[529] = 6.86086841E-04;
  COFTD[530] = -3.64545375E-07;
  COFTD[531] = 6.04679087E-11;
  COFTD[532] = 1.35158255E-01;
  COFTD[533] = 6.77931091E-04;
  COFTD[534] = -3.60211899E-07;
  COFTD[535] = 5.97491059E-11;
  COFTD[536] = 1.35158255E-01;
  COFTD[537] = 6.77931091E-04;
  COFTD[538] = -3.60211899E-07;
  COFTD[539] = 5.97491059E-11;
  COFTD[540] = 2.34097908E-01;
  COFTD[541] = 4.91097390E-04;
  COFTD[542] = -2.74132967E-07;
  COFTD[543] = 4.70634986E-11;
  COFTD[544] = 2.26669694E-01;
  COFTD[545] = 4.98249013E-04;
  COFTD[546] = -2.77280266E-07;
  COFTD[547] = 4.74968883E-11;
  COFTD[548] = 3.20989194E-01;
  COFTD[549] = 3.40832379E-04;
  COFTD[550] = -1.99443269E-07;
  COFTD[551] = 3.55702252E-11;
  COFTD[552] = 3.24743582E-01;
  COFTD[553] = 1.77796660E-04;
  COFTD[554] = -1.08933575E-07;
  COFTD[555] = 2.03593720E-11;
  COFTD[556] = 1.31404284E-01;
  COFTD[557] = 6.88427722E-04;
  COFTD[558] = -3.65061075E-07;
  COFTD[559] = 6.04738197E-11;
  COFTD[560] = 1.27301487E-01;
  COFTD[561] = 6.79111479E-04;
  COFTD[562] = -3.59827744E-07;
  COFTD[563] = 5.95749327E-11;
  COFTD[564] = 1.27200527E-01;
  COFTD[565] = 6.78572895E-04;
  COFTD[566] = -3.59542375E-07;
  COFTD[567] = 5.95276855E-11;
  COFTD[568] = 1.26168294E-01;
  COFTD[569] = 6.79911317E-04;
  COFTD[570] = -3.60088853E-07;
  COFTD[571] = 5.96004440E-11;
  COFTD[572] = 1.38402397E-01;
  COFTD[573] = 6.71846667E-04;
  COFTD[574] = -3.57525481E-07;
  COFTD[575] = 5.93636322E-11;
  COFTD[576] = 1.30346246E-01;
  COFTD[577] = 6.82884659E-04;
  COFTD[578] = -3.62121686E-07;
  COFTD[579] = 5.99868983E-11;
  COFTD[580] = 1.30273975E-01;
  COFTD[581] = 6.82506031E-04;
  COFTD[582] = -3.61920907E-07;
  COFTD[583] = 5.99536384E-11;
  COFTD[584] = 1.55120909E-01;
  COFTD[585] = 6.55609717E-04;
  COFTD[586] = -3.51254676E-07;
  COFTD[587] = 5.85865864E-11;
  COFTD[588] = 1.55057471E-01;
  COFTD[589] = 6.55341598E-04;
  COFTD[590] = -3.51111027E-07;
  COFTD[591] = 5.85626268E-11;
  COFTD[592] = 1.55057471E-01;
  COFTD[593] = 6.55341598E-04;
  COFTD[594] = -3.51111027E-07;
  COFTD[595] = 5.85626268E-11;
  COFTD[596] = 1.55057471E-01;
  COFTD[597] = 6.55341598E-04;
  COFTD[598] = -3.51111027E-07;
  COFTD[599] = 5.85626268E-11;
  COFTD[600] = 1.55057471E-01;
  COFTD[601] = 6.55341598E-04;
  COFTD[602] = -3.51111027E-07;
  COFTD[603] = 5.85626268E-11;
  COFTD[604] = 1.55815018E-01;
  COFTD[605] = 6.53952843E-04;
  COFTD[606] = -3.50491221E-07;
  COFTD[607] = 5.84731806E-11;
  COFTD[608] = 1.55815018E-01;
  COFTD[609] = 6.53952843E-04;
  COFTD[610] = -3.50491221E-07;
  COFTD[611] = 5.84731806E-11;
  COFTD[612] = 1.01051875E-01;
  COFTD[613] = 7.33724737E-04;
  COFTD[614] = -3.83891130E-07;
  COFTD[615] = 6.30386544E-11;
  COFTD[616] = 1.01051875E-01;
  COFTD[617] = 7.33724737E-04;
  COFTD[618] = -3.83891130E-07;
  COFTD[619] = 6.30386544E-11;
  COFTD[620] = 1.01051875E-01;
  COFTD[621] = 7.33724737E-04;
  COFTD[622] = -3.83891130E-07;
  COFTD[623] = 6.30386544E-11;
  COFTD[624] = 1.01051875E-01;
  COFTD[625] = 7.33724737E-04;
  COFTD[626] = -3.83891130E-07;
  COFTD[627] = 6.30386544E-11;
  COFTD[628] = 1.01051875E-01;
  COFTD[629] = 7.33724737E-04;
  COFTD[630] = -3.83891130E-07;
  COFTD[631] = 6.30386544E-11;
  COFTD[632] = 1.01051875E-01;
  COFTD[633] = 7.33724737E-04;
  COFTD[634] = -3.83891130E-07;
  COFTD[635] = 6.30386544E-11;
  COFTD[636] = 1.01051875E-01;
  COFTD[637] = 7.33724737E-04;
  COFTD[638] = -3.83891130E-07;
  COFTD[639] = 6.30386544E-11;
  COFTD[640] = 1.01051875E-01;
  COFTD[641] = 7.33724737E-04;
  COFTD[642] = -3.83891130E-07;
  COFTD[643] = 6.30386544E-11;
  COFTD[644] = 1.01051875E-01;
  COFTD[645] = 7.33724737E-04;
  COFTD[646] = -3.83891130E-07;
  COFTD[647] = 6.30386544E-11;
  COFTD[648] = 1.01051875E-01;
  COFTD[649] = 7.33724737E-04;
  COFTD[650] = -3.83891130E-07;
  COFTD[651] = 6.30386544E-11;
  COFTD[652] = 1.01051875E-01;
  COFTD[653] = 7.33724737E-04;
  COFTD[654] = -3.83891130E-07;
  COFTD[655] = 6.30386544E-11;
  COFTD[656] = 1.01051875E-01;
  COFTD[657] = 7.33724737E-04;
  COFTD[658] = -3.83891130E-07;
  COFTD[659] = 6.30386544E-11;
  COFTD[660] = 8.54521410E-02;
  COFTD[661] = 7.57776622E-04;
  COFTD[662] = -3.93729125E-07;
  COFTD[663] = 6.43662309E-11;
  COFTD[664] = 8.54521410E-02;
  COFTD[665] = 7.57776622E-04;
  COFTD[666] = -3.93729125E-07;
  COFTD[667] = 6.43662309E-11;
  COFTD[668] = 8.54521410E-02;
  COFTD[669] = 7.57776622E-04;
  COFTD[670] = -3.93729125E-07;
  COFTD[671] = 6.43662309E-11;
  COFTD[672] = 8.54521410E-02;
  COFTD[673] = 7.57776622E-04;
  COFTD[674] = -3.93729125E-07;
  COFTD[675] = 6.43662309E-11;
  COFTD[676] = 1.28675075E-01;
  COFTD[677] = 6.94915644E-04;
  COFTD[678] = -3.68000048E-07;
  COFTD[679] = 6.09060331E-11;
  COFTD[680] = 1.28675075E-01;
  COFTD[681] = 6.94915644E-04;
  COFTD[682] = -3.68000048E-07;
  COFTD[683] = 6.09060331E-11;
  COFTD[684] = 9.11543475E-02;
  COFTD[685] = 7.48477806E-04;
  COFTD[686] = -3.89896117E-07;
  COFTD[687] = 6.38443360E-11;
  COFTD[688] = 9.11543475E-02;
  COFTD[689] = 7.48477806E-04;
  COFTD[690] = -3.89896117E-07;
  COFTD[691] = 6.38443360E-11;
  COFTD[692] = 9.11543475E-02;
  COFTD[693] = 7.48477806E-04;
  COFTD[694] = -3.89896117E-07;
  COFTD[695] = 6.38443360E-11;
  COFTD[696] = 9.11543475E-02;
  COFTD[697] = 7.48477806E-04;
  COFTD[698] = -3.89896117E-07;
  COFTD[699] = 6.38443360E-11;
  COFTD[700] = 4.31330748E-01;
  COFTD[701] = 9.20535689E-05;
  COFTD[702] = -5.94508898E-08;
  COFTD[703] = 1.21437846E-11;
}

// compute the critical parameters for each species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_CRITPARAMS(
  amrex::Real* Tci, amrex::Real* ai, amrex::Real* bi, amrex::Real* acentric_i)
{

  amrex::Real EPS[88];
  amrex::Real SIG[88];
  amrex::Real wt[88];
  amrex::Real Rcst = 83.144598; // in bar [CGS] !
  amrex::Real avogadro = 6.02214199e23;
  amrex::Real boltzmann = 1.3806503e-16; // we work in CGS

  egtransetEPS(EPS);
  egtransetSIG(SIG);
  get_mw(wt);

  // species 0: h
  Tci[0] = 1.316 * EPS[0];
  ai[0] = (5.55 * avogadro * avogadro * EPS[0] * boltzmann * 1e-24 * SIG[0] *
           SIG[0] * SIG[0]) /
          (wt[0] * wt[0]);
  bi[0] = 0.855 * avogadro * 1e-24 * SIG[0] * SIG[0] * SIG[0] / (wt[0]);
  acentric_i[0] = 0.0;

  // species 1: h2
  Tci[1] = 1.316 * EPS[1];
  ai[1] = (5.55 * avogadro * avogadro * EPS[1] * boltzmann * 1e-24 * SIG[1] *
           SIG[1] * SIG[1]) /
          (wt[1] * wt[1]);
  bi[1] = 0.855 * avogadro * 1e-24 * SIG[1] * SIG[1] * SIG[1] / (wt[1]);
  acentric_i[1] = 0.0;

  // species 2: o
  Tci[2] = 1.316 * EPS[2];
  ai[2] = (5.55 * avogadro * avogadro * EPS[2] * boltzmann * 1e-24 * SIG[2] *
           SIG[2] * SIG[2]) /
          (wt[2] * wt[2]);
  bi[2] = 0.855 * avogadro * 1e-24 * SIG[2] * SIG[2] * SIG[2] / (wt[2]);
  acentric_i[2] = 0.0;

  // species 3: o2
  Tci[3] = 1.316 * EPS[3];
  ai[3] = (5.55 * avogadro * avogadro * EPS[3] * boltzmann * 1e-24 * SIG[3] *
           SIG[3] * SIG[3]) /
          (wt[3] * wt[3]);
  bi[3] = 0.855 * avogadro * 1e-24 * SIG[3] * SIG[3] * SIG[3] / (wt[3]);
  acentric_i[3] = 0.0;

  // species 4: oh
  Tci[4] = 1.316 * EPS[4];
  ai[4] = (5.55 * avogadro * avogadro * EPS[4] * boltzmann * 1e-24 * SIG[4] *
           SIG[4] * SIG[4]) /
          (wt[4] * wt[4]);
  bi[4] = 0.855 * avogadro * 1e-24 * SIG[4] * SIG[4] * SIG[4] / (wt[4]);
  acentric_i[4] = 0.0;

  // species 5: h2o
  Tci[5] = 1.316 * EPS[5];
  ai[5] = (5.55 * avogadro * avogadro * EPS[5] * boltzmann * 1e-24 * SIG[5] *
           SIG[5] * SIG[5]) /
          (wt[5] * wt[5]);
  bi[5] = 0.855 * avogadro * 1e-24 * SIG[5] * SIG[5] * SIG[5] / (wt[5]);
  acentric_i[5] = 0.0;

  // species 6: co
  Tci[6] = 1.316 * EPS[6];
  ai[6] = (5.55 * avogadro * avogadro * EPS[6] * boltzmann * 1e-24 * SIG[6] *
           SIG[6] * SIG[6]) /
          (wt[6] * wt[6]);
  bi[6] = 0.855 * avogadro * 1e-24 * SIG[6] * SIG[6] * SIG[6] / (wt[6]);
  acentric_i[6] = 0.0;

  // species 7: hco
  Tci[7] = 1.316 * EPS[7];
  ai[7] = (5.55 * avogadro * avogadro * EPS[7] * boltzmann * 1e-24 * SIG[7] *
           SIG[7] * SIG[7]) /
          (wt[7] * wt[7]);
  bi[7] = 0.855 * avogadro * 1e-24 * SIG[7] * SIG[7] * SIG[7] / (wt[7]);
  acentric_i[7] = 0.0;

  // species 8: co2
  Tci[8] = 1.316 * EPS[8];
  ai[8] = (5.55 * avogadro * avogadro * EPS[8] * boltzmann * 1e-24 * SIG[8] *
           SIG[8] * SIG[8]) /
          (wt[8] * wt[8]);
  bi[8] = 0.855 * avogadro * 1e-24 * SIG[8] * SIG[8] * SIG[8] / (wt[8]);
  acentric_i[8] = 0.0;

  // species 9: ch3
  Tci[9] = 1.316 * EPS[9];
  ai[9] = (5.55 * avogadro * avogadro * EPS[9] * boltzmann * 1e-24 * SIG[9] *
           SIG[9] * SIG[9]) /
          (wt[9] * wt[9]);
  bi[9] = 0.855 * avogadro * 1e-24 * SIG[9] * SIG[9] * SIG[9] / (wt[9]);
  acentric_i[9] = 0.0;

  // species 10: ch4
  Tci[10] = 1.316 * EPS[10];
  ai[10] = (5.55 * avogadro * avogadro * EPS[10] * boltzmann * 1e-24 * SIG[10] *
            SIG[10] * SIG[10]) /
           (wt[10] * wt[10]);
  bi[10] = 0.855 * avogadro * 1e-24 * SIG[10] * SIG[10] * SIG[10] / (wt[10]);
  acentric_i[10] = 0.0;

  // species 11: ho2
  Tci[11] = 1.316 * EPS[11];
  ai[11] = (5.55 * avogadro * avogadro * EPS[11] * boltzmann * 1e-24 * SIG[11] *
            SIG[11] * SIG[11]) /
           (wt[11] * wt[11]);
  bi[11] = 0.855 * avogadro * 1e-24 * SIG[11] * SIG[11] * SIG[11] / (wt[11]);
  acentric_i[11] = 0.0;

  // species 12: h2o2
  Tci[12] = 1.316 * EPS[12];
  ai[12] = (5.55 * avogadro * avogadro * EPS[12] * boltzmann * 1e-24 * SIG[12] *
            SIG[12] * SIG[12]) /
           (wt[12] * wt[12]);
  bi[12] = 0.855 * avogadro * 1e-24 * SIG[12] * SIG[12] * SIG[12] / (wt[12]);
  acentric_i[12] = 0.0;

  // species 13: ch2o
  Tci[13] = 1.316 * EPS[13];
  ai[13] = (5.55 * avogadro * avogadro * EPS[13] * boltzmann * 1e-24 * SIG[13] *
            SIG[13] * SIG[13]) /
           (wt[13] * wt[13]);
  bi[13] = 0.855 * avogadro * 1e-24 * SIG[13] * SIG[13] * SIG[13] / (wt[13]);
  acentric_i[13] = 0.0;

  // species 14: ch3o
  Tci[14] = 1.316 * EPS[14];
  ai[14] = (5.55 * avogadro * avogadro * EPS[14] * boltzmann * 1e-24 * SIG[14] *
            SIG[14] * SIG[14]) /
           (wt[14] * wt[14]);
  bi[14] = 0.855 * avogadro * 1e-24 * SIG[14] * SIG[14] * SIG[14] / (wt[14]);
  acentric_i[14] = 0.0;

  // species 15: c2h6
  Tci[15] = 1.316 * EPS[15];
  ai[15] = (5.55 * avogadro * avogadro * EPS[15] * boltzmann * 1e-24 * SIG[15] *
            SIG[15] * SIG[15]) /
           (wt[15] * wt[15]);
  bi[15] = 0.855 * avogadro * 1e-24 * SIG[15] * SIG[15] * SIG[15] / (wt[15]);
  acentric_i[15] = 0.0;

  // species 16: c2h4
  Tci[16] = 1.316 * EPS[16];
  ai[16] = (5.55 * avogadro * avogadro * EPS[16] * boltzmann * 1e-24 * SIG[16] *
            SIG[16] * SIG[16]) /
           (wt[16] * wt[16]);
  bi[16] = 0.855 * avogadro * 1e-24 * SIG[16] * SIG[16] * SIG[16] / (wt[16]);
  acentric_i[16] = 0.0;

  // species 17: c2h5
  Tci[17] = 1.316 * EPS[17];
  ai[17] = (5.55 * avogadro * avogadro * EPS[17] * boltzmann * 1e-24 * SIG[17] *
            SIG[17] * SIG[17]) /
           (wt[17] * wt[17]);
  bi[17] = 0.855 * avogadro * 1e-24 * SIG[17] * SIG[17] * SIG[17] / (wt[17]);
  acentric_i[17] = 0.0;

  // species 18: c2h2
  Tci[18] = 1.316 * EPS[18];
  ai[18] = (5.55 * avogadro * avogadro * EPS[18] * boltzmann * 1e-24 * SIG[18] *
            SIG[18] * SIG[18]) /
           (wt[18] * wt[18]);
  bi[18] = 0.855 * avogadro * 1e-24 * SIG[18] * SIG[18] * SIG[18] / (wt[18]);
  acentric_i[18] = 0.0;

  // species 19: c2h3
  Tci[19] = 1.316 * EPS[19];
  ai[19] = (5.55 * avogadro * avogadro * EPS[19] * boltzmann * 1e-24 * SIG[19] *
            SIG[19] * SIG[19]) /
           (wt[19] * wt[19]);
  bi[19] = 0.855 * avogadro * 1e-24 * SIG[19] * SIG[19] * SIG[19] / (wt[19]);
  acentric_i[19] = 0.0;

  // species 20: ch2co
  Tci[20] = 1.316 * EPS[20];
  ai[20] = (5.55 * avogadro * avogadro * EPS[20] * boltzmann * 1e-24 * SIG[20] *
            SIG[20] * SIG[20]) /
           (wt[20] * wt[20]);
  bi[20] = 0.855 * avogadro * 1e-24 * SIG[20] * SIG[20] * SIG[20] / (wt[20]);
  acentric_i[20] = 0.0;

  // species 21: hcco
  Tci[21] = 1.316 * EPS[21];
  ai[21] = (5.55 * avogadro * avogadro * EPS[21] * boltzmann * 1e-24 * SIG[21] *
            SIG[21] * SIG[21]) /
           (wt[21] * wt[21]);
  bi[21] = 0.855 * avogadro * 1e-24 * SIG[21] * SIG[21] * SIG[21] / (wt[21]);
  acentric_i[21] = 0.0;

  // species 22: ch3co
  Tci[22] = 1.316 * EPS[22];
  ai[22] = (5.55 * avogadro * avogadro * EPS[22] * boltzmann * 1e-24 * SIG[22] *
            SIG[22] * SIG[22]) /
           (wt[22] * wt[22]);
  bi[22] = 0.855 * avogadro * 1e-24 * SIG[22] * SIG[22] * SIG[22] / (wt[22]);
  acentric_i[22] = 0.0;

  // species 23: ch2cho
  Tci[23] = 1.316 * EPS[23];
  ai[23] = (5.55 * avogadro * avogadro * EPS[23] * boltzmann * 1e-24 * SIG[23] *
            SIG[23] * SIG[23]) /
           (wt[23] * wt[23]);
  bi[23] = 0.855 * avogadro * 1e-24 * SIG[23] * SIG[23] * SIG[23] / (wt[23]);
  acentric_i[23] = 0.0;

  // species 24: ch3cho
  Tci[24] = 1.316 * EPS[24];
  ai[24] = (5.55 * avogadro * avogadro * EPS[24] * boltzmann * 1e-24 * SIG[24] *
            SIG[24] * SIG[24]) /
           (wt[24] * wt[24]);
  bi[24] = 0.855 * avogadro * 1e-24 * SIG[24] * SIG[24] * SIG[24] / (wt[24]);
  acentric_i[24] = 0.0;

  // species 25: c3h4-a
  Tci[25] = 1.316 * EPS[25];
  ai[25] = (5.55 * avogadro * avogadro * EPS[25] * boltzmann * 1e-24 * SIG[25] *
            SIG[25] * SIG[25]) /
           (wt[25] * wt[25]);
  bi[25] = 0.855 * avogadro * 1e-24 * SIG[25] * SIG[25] * SIG[25] / (wt[25]);
  acentric_i[25] = 0.0;

  // species 26: c3h6
  Tci[26] = 1.316 * EPS[26];
  ai[26] = (5.55 * avogadro * avogadro * EPS[26] * boltzmann * 1e-24 * SIG[26] *
            SIG[26] * SIG[26]) /
           (wt[26] * wt[26]);
  bi[26] = 0.855 * avogadro * 1e-24 * SIG[26] * SIG[26] * SIG[26] / (wt[26]);
  acentric_i[26] = 0.0;

  // species 27: c4h6
  Tci[27] = 1.316 * EPS[27];
  ai[27] = (5.55 * avogadro * avogadro * EPS[27] * boltzmann * 1e-24 * SIG[27] *
            SIG[27] * SIG[27]) /
           (wt[27] * wt[27]);
  bi[27] = 0.855 * avogadro * 1e-24 * SIG[27] * SIG[27] * SIG[27] / (wt[27]);
  acentric_i[27] = 0.0;

  // species 28: nc3h7
  Tci[28] = 1.316 * EPS[28];
  ai[28] = (5.55 * avogadro * avogadro * EPS[28] * boltzmann * 1e-24 * SIG[28] *
            SIG[28] * SIG[28]) /
           (wt[28] * wt[28]);
  bi[28] = 0.855 * avogadro * 1e-24 * SIG[28] * SIG[28] * SIG[28] / (wt[28]);
  acentric_i[28] = 0.0;

  // species 29: c4h7
  Tci[29] = 1.316 * EPS[29];
  ai[29] = (5.55 * avogadro * avogadro * EPS[29] * boltzmann * 1e-24 * SIG[29] *
            SIG[29] * SIG[29]) /
           (wt[29] * wt[29]);
  bi[29] = 0.855 * avogadro * 1e-24 * SIG[29] * SIG[29] * SIG[29] / (wt[29]);
  acentric_i[29] = 0.0;

  // species 30: c4h8-1
  Tci[30] = 1.316 * EPS[30];
  ai[30] = (5.55 * avogadro * avogadro * EPS[30] * boltzmann * 1e-24 * SIG[30] *
            SIG[30] * SIG[30]) /
           (wt[30] * wt[30]);
  bi[30] = 0.855 * avogadro * 1e-24 * SIG[30] * SIG[30] * SIG[30] / (wt[30]);
  acentric_i[30] = 0.0;

  // species 31: pc4h9
  Tci[31] = 1.316 * EPS[31];
  ai[31] = (5.55 * avogadro * avogadro * EPS[31] * boltzmann * 1e-24 * SIG[31] *
            SIG[31] * SIG[31]) /
           (wt[31] * wt[31]);
  bi[31] = 0.855 * avogadro * 1e-24 * SIG[31] * SIG[31] * SIG[31] / (wt[31]);
  acentric_i[31] = 0.0;

  // species 32: ch3coch2
  Tci[32] = 1.316 * EPS[32];
  ai[32] = (5.55 * avogadro * avogadro * EPS[32] * boltzmann * 1e-24 * SIG[32] *
            SIG[32] * SIG[32]) /
           (wt[32] * wt[32]);
  bi[32] = 0.855 * avogadro * 1e-24 * SIG[32] * SIG[32] * SIG[32] / (wt[32]);
  acentric_i[32] = 0.0;

  // species 33: c2h5cho
  Tci[33] = 1.316 * EPS[33];
  ai[33] = (5.55 * avogadro * avogadro * EPS[33] * boltzmann * 1e-24 * SIG[33] *
            SIG[33] * SIG[33]) /
           (wt[33] * wt[33]);
  bi[33] = 0.855 * avogadro * 1e-24 * SIG[33] * SIG[33] * SIG[33] / (wt[33]);
  acentric_i[33] = 0.0;

  // species 34: c2h5co
  Tci[34] = 1.316 * EPS[34];
  ai[34] = (5.55 * avogadro * avogadro * EPS[34] * boltzmann * 1e-24 * SIG[34] *
            SIG[34] * SIG[34]) /
           (wt[34] * wt[34]);
  bi[34] = 0.855 * avogadro * 1e-24 * SIG[34] * SIG[34] * SIG[34] / (wt[34]);
  acentric_i[34] = 0.0;

  // species 35: c5h9
  Tci[35] = 1.316 * EPS[35];
  ai[35] = (5.55 * avogadro * avogadro * EPS[35] * boltzmann * 1e-24 * SIG[35] *
            SIG[35] * SIG[35]) /
           (wt[35] * wt[35]);
  bi[35] = 0.855 * avogadro * 1e-24 * SIG[35] * SIG[35] * SIG[35] / (wt[35]);
  acentric_i[35] = 0.0;

  // species 36: c5h10-1
  Tci[36] = 1.316 * EPS[36];
  ai[36] = (5.55 * avogadro * avogadro * EPS[36] * boltzmann * 1e-24 * SIG[36] *
            SIG[36] * SIG[36]) /
           (wt[36] * wt[36]);
  bi[36] = 0.855 * avogadro * 1e-24 * SIG[36] * SIG[36] * SIG[36] / (wt[36]);
  acentric_i[36] = 0.0;

  // species 37: c2h5o
  Tci[37] = 1.316 * EPS[37];
  ai[37] = (5.55 * avogadro * avogadro * EPS[37] * boltzmann * 1e-24 * SIG[37] *
            SIG[37] * SIG[37]) /
           (wt[37] * wt[37]);
  bi[37] = 0.855 * avogadro * 1e-24 * SIG[37] * SIG[37] * SIG[37] / (wt[37]);
  acentric_i[37] = 0.0;

  // species 38: ch3o2
  Tci[38] = 1.316 * EPS[38];
  ai[38] = (5.55 * avogadro * avogadro * EPS[38] * boltzmann * 1e-24 * SIG[38] *
            SIG[38] * SIG[38]) /
           (wt[38] * wt[38]);
  bi[38] = 0.855 * avogadro * 1e-24 * SIG[38] * SIG[38] * SIG[38] / (wt[38]);
  acentric_i[38] = 0.0;

  // species 39: ch3o2h
  Tci[39] = 1.316 * EPS[39];
  ai[39] = (5.55 * avogadro * avogadro * EPS[39] * boltzmann * 1e-24 * SIG[39] *
            SIG[39] * SIG[39]) /
           (wt[39] * wt[39]);
  bi[39] = 0.855 * avogadro * 1e-24 * SIG[39] * SIG[39] * SIG[39] / (wt[39]);
  acentric_i[39] = 0.0;

  // species 40: c2h3co
  Tci[40] = 1.316 * EPS[40];
  ai[40] = (5.55 * avogadro * avogadro * EPS[40] * boltzmann * 1e-24 * SIG[40] *
            SIG[40] * SIG[40]) /
           (wt[40] * wt[40]);
  bi[40] = 0.855 * avogadro * 1e-24 * SIG[40] * SIG[40] * SIG[40] / (wt[40]);
  acentric_i[40] = 0.0;

  // species 41: c2h3cho
  Tci[41] = 1.316 * EPS[41];
  ai[41] = (5.55 * avogadro * avogadro * EPS[41] * boltzmann * 1e-24 * SIG[41] *
            SIG[41] * SIG[41]) /
           (wt[41] * wt[41]);
  bi[41] = 0.855 * avogadro * 1e-24 * SIG[41] * SIG[41] * SIG[41] / (wt[41]);
  acentric_i[41] = 0.0;

  // species 42: c3h5o
  Tci[42] = 1.316 * EPS[42];
  ai[42] = (5.55 * avogadro * avogadro * EPS[42] * boltzmann * 1e-24 * SIG[42] *
            SIG[42] * SIG[42]) /
           (wt[42] * wt[42]);
  bi[42] = 0.855 * avogadro * 1e-24 * SIG[42] * SIG[42] * SIG[42] / (wt[42]);
  acentric_i[42] = 0.0;

  // species 43: c4h7o
  Tci[43] = 1.316 * EPS[43];
  ai[43] = (5.55 * avogadro * avogadro * EPS[43] * boltzmann * 1e-24 * SIG[43] *
            SIG[43] * SIG[43]) /
           (wt[43] * wt[43]);
  bi[43] = 0.855 * avogadro * 1e-24 * SIG[43] * SIG[43] * SIG[43] / (wt[43]);
  acentric_i[43] = 0.0;

  // species 44: c4h8ooh1-3o2
  Tci[44] = 1.316 * EPS[44];
  ai[44] = (5.55 * avogadro * avogadro * EPS[44] * boltzmann * 1e-24 * SIG[44] *
            SIG[44] * SIG[44]) /
           (wt[44] * wt[44]);
  bi[44] = 0.855 * avogadro * 1e-24 * SIG[44] * SIG[44] * SIG[44] / (wt[44]);
  acentric_i[44] = 0.0;

  // species 45: c4h8ooh1-3
  Tci[45] = 1.316 * EPS[45];
  ai[45] = (5.55 * avogadro * avogadro * EPS[45] * boltzmann * 1e-24 * SIG[45] *
            SIG[45] * SIG[45]) /
           (wt[45] * wt[45]);
  bi[45] = 0.855 * avogadro * 1e-24 * SIG[45] * SIG[45] * SIG[45] / (wt[45]);
  acentric_i[45] = 0.0;

  // species 46: pc4h9o2
  Tci[46] = 1.316 * EPS[46];
  ai[46] = (5.55 * avogadro * avogadro * EPS[46] * boltzmann * 1e-24 * SIG[46] *
            SIG[46] * SIG[46]) /
           (wt[46] * wt[46]);
  bi[46] = 0.855 * avogadro * 1e-24 * SIG[46] * SIG[46] * SIG[46] / (wt[46]);
  acentric_i[46] = 0.0;

  // species 47: c3h5-a
  Tci[47] = 1.316 * EPS[47];
  ai[47] = (5.55 * avogadro * avogadro * EPS[47] * boltzmann * 1e-24 * SIG[47] *
            SIG[47] * SIG[47]) /
           (wt[47] * wt[47]);
  bi[47] = 0.855 * avogadro * 1e-24 * SIG[47] * SIG[47] * SIG[47] / (wt[47]);
  acentric_i[47] = 0.0;

  // species 48: c3h3
  Tci[48] = 1.316 * EPS[48];
  ai[48] = (5.55 * avogadro * avogadro * EPS[48] * boltzmann * 1e-24 * SIG[48] *
            SIG[48] * SIG[48]) /
           (wt[48] * wt[48]);
  bi[48] = 0.855 * avogadro * 1e-24 * SIG[48] * SIG[48] * SIG[48] / (wt[48]);
  acentric_i[48] = 0.0;

  // species 49: c3h2
  Tci[49] = 1.316 * EPS[49];
  ai[49] = (5.55 * avogadro * avogadro * EPS[49] * boltzmann * 1e-24 * SIG[49] *
            SIG[49] * SIG[49]) /
           (wt[49] * wt[49]);
  bi[49] = 0.855 * avogadro * 1e-24 * SIG[49] * SIG[49] * SIG[49] / (wt[49]);
  acentric_i[49] = 0.0;

  // species 50: ch2(s)
  Tci[50] = 1.316 * EPS[50];
  ai[50] = (5.55 * avogadro * avogadro * EPS[50] * boltzmann * 1e-24 * SIG[50] *
            SIG[50] * SIG[50]) /
           (wt[50] * wt[50]);
  bi[50] = 0.855 * avogadro * 1e-24 * SIG[50] * SIG[50] * SIG[50] / (wt[50]);
  acentric_i[50] = 0.0;

  // species 51: nc4ket13
  Tci[51] = 1.316 * EPS[51];
  ai[51] = (5.55 * avogadro * avogadro * EPS[51] * boltzmann * 1e-24 * SIG[51] *
            SIG[51] * SIG[51]) /
           (wt[51] * wt[51]);
  bi[51] = 0.855 * avogadro * 1e-24 * SIG[51] * SIG[51] * SIG[51] / (wt[51]);
  acentric_i[51] = 0.0;

  // species 52: nc3h7cho
  Tci[52] = 1.316 * EPS[52];
  ai[52] = (5.55 * avogadro * avogadro * EPS[52] * boltzmann * 1e-24 * SIG[52] *
            SIG[52] * SIG[52]) /
           (wt[52] * wt[52]);
  bi[52] = 0.855 * avogadro * 1e-24 * SIG[52] * SIG[52] * SIG[52] / (wt[52]);
  acentric_i[52] = 0.0;

  // species 53: nc3h7co
  Tci[53] = 1.316 * EPS[53];
  ai[53] = (5.55 * avogadro * avogadro * EPS[53] * boltzmann * 1e-24 * SIG[53] *
            SIG[53] * SIG[53]) /
           (wt[53] * wt[53]);
  bi[53] = 0.855 * avogadro * 1e-24 * SIG[53] * SIG[53] * SIG[53] / (wt[53]);
  acentric_i[53] = 0.0;

  // species 54: c2h5coch2
  Tci[54] = 1.316 * EPS[54];
  ai[54] = (5.55 * avogadro * avogadro * EPS[54] * boltzmann * 1e-24 * SIG[54] *
            SIG[54] * SIG[54]) /
           (wt[54] * wt[54]);
  bi[54] = 0.855 * avogadro * 1e-24 * SIG[54] * SIG[54] * SIG[54] / (wt[54]);
  acentric_i[54] = 0.0;

  // species 55: nc3h7coch2
  Tci[55] = 1.316 * EPS[55];
  ai[55] = (5.55 * avogadro * avogadro * EPS[55] * boltzmann * 1e-24 * SIG[55] *
            SIG[55] * SIG[55]) /
           (wt[55] * wt[55]);
  bi[55] = 0.855 * avogadro * 1e-24 * SIG[55] * SIG[55] * SIG[55] / (wt[55]);
  acentric_i[55] = 0.0;

  // species 56: nc4h9cho
  Tci[56] = 1.316 * EPS[56];
  ai[56] = (5.55 * avogadro * avogadro * EPS[56] * boltzmann * 1e-24 * SIG[56] *
            SIG[56] * SIG[56]) /
           (wt[56] * wt[56]);
  bi[56] = 0.855 * avogadro * 1e-24 * SIG[56] * SIG[56] * SIG[56] / (wt[56]);
  acentric_i[56] = 0.0;

  // species 57: nc4h9co
  Tci[57] = 1.316 * EPS[57];
  ai[57] = (5.55 * avogadro * avogadro * EPS[57] * boltzmann * 1e-24 * SIG[57] *
            SIG[57] * SIG[57]) /
           (wt[57] * wt[57]);
  bi[57] = 0.855 * avogadro * 1e-24 * SIG[57] * SIG[57] * SIG[57] / (wt[57]);
  acentric_i[57] = 0.0;

  // species 58: nc7h16
  Tci[58] = 1.316 * EPS[58];
  ai[58] = (5.55 * avogadro * avogadro * EPS[58] * boltzmann * 1e-24 * SIG[58] *
            SIG[58] * SIG[58]) /
           (wt[58] * wt[58]);
  bi[58] = 0.855 * avogadro * 1e-24 * SIG[58] * SIG[58] * SIG[58] / (wt[58]);
  acentric_i[58] = 0.0;

  // species 59: c7h15-1
  Tci[59] = 1.316 * EPS[59];
  ai[59] = (5.55 * avogadro * avogadro * EPS[59] * boltzmann * 1e-24 * SIG[59] *
            SIG[59] * SIG[59]) /
           (wt[59] * wt[59]);
  bi[59] = 0.855 * avogadro * 1e-24 * SIG[59] * SIG[59] * SIG[59] / (wt[59]);
  acentric_i[59] = 0.0;

  // species 60: c7h15-2
  Tci[60] = 1.316 * EPS[60];
  ai[60] = (5.55 * avogadro * avogadro * EPS[60] * boltzmann * 1e-24 * SIG[60] *
            SIG[60] * SIG[60]) /
           (wt[60] * wt[60]);
  bi[60] = 0.855 * avogadro * 1e-24 * SIG[60] * SIG[60] * SIG[60] / (wt[60]);
  acentric_i[60] = 0.0;

  // species 61: c7h15-3
  Tci[61] = 1.316 * EPS[61];
  ai[61] = (5.55 * avogadro * avogadro * EPS[61] * boltzmann * 1e-24 * SIG[61] *
            SIG[61] * SIG[61]) /
           (wt[61] * wt[61]);
  bi[61] = 0.855 * avogadro * 1e-24 * SIG[61] * SIG[61] * SIG[61] / (wt[61]);
  acentric_i[61] = 0.0;

  // species 62: c7h15-4
  Tci[62] = 1.316 * EPS[62];
  ai[62] = (5.55 * avogadro * avogadro * EPS[62] * boltzmann * 1e-24 * SIG[62] *
            SIG[62] * SIG[62]) /
           (wt[62] * wt[62]);
  bi[62] = 0.855 * avogadro * 1e-24 * SIG[62] * SIG[62] * SIG[62] / (wt[62]);
  acentric_i[62] = 0.0;

  // species 63: c7h14-2
  Tci[63] = 1.316 * EPS[63];
  ai[63] = (5.55 * avogadro * avogadro * EPS[63] * boltzmann * 1e-24 * SIG[63] *
            SIG[63] * SIG[63]) /
           (wt[63] * wt[63]);
  bi[63] = 0.855 * avogadro * 1e-24 * SIG[63] * SIG[63] * SIG[63] / (wt[63]);
  acentric_i[63] = 0.0;

  // species 64: c7h14-3
  Tci[64] = 1.316 * EPS[64];
  ai[64] = (5.55 * avogadro * avogadro * EPS[64] * boltzmann * 1e-24 * SIG[64] *
            SIG[64] * SIG[64]) /
           (wt[64] * wt[64]);
  bi[64] = 0.855 * avogadro * 1e-24 * SIG[64] * SIG[64] * SIG[64] / (wt[64]);
  acentric_i[64] = 0.0;

  // species 65: c7h15o2-1
  Tci[65] = 1.316 * EPS[65];
  ai[65] = (5.55 * avogadro * avogadro * EPS[65] * boltzmann * 1e-24 * SIG[65] *
            SIG[65] * SIG[65]) /
           (wt[65] * wt[65]);
  bi[65] = 0.855 * avogadro * 1e-24 * SIG[65] * SIG[65] * SIG[65] / (wt[65]);
  acentric_i[65] = 0.0;

  // species 66: c7h15o2-2
  Tci[66] = 1.316 * EPS[66];
  ai[66] = (5.55 * avogadro * avogadro * EPS[66] * boltzmann * 1e-24 * SIG[66] *
            SIG[66] * SIG[66]) /
           (wt[66] * wt[66]);
  bi[66] = 0.855 * avogadro * 1e-24 * SIG[66] * SIG[66] * SIG[66] / (wt[66]);
  acentric_i[66] = 0.0;

  // species 67: c7h15o2-3
  Tci[67] = 1.316 * EPS[67];
  ai[67] = (5.55 * avogadro * avogadro * EPS[67] * boltzmann * 1e-24 * SIG[67] *
            SIG[67] * SIG[67]) /
           (wt[67] * wt[67]);
  bi[67] = 0.855 * avogadro * 1e-24 * SIG[67] * SIG[67] * SIG[67] / (wt[67]);
  acentric_i[67] = 0.0;

  // species 68: c7h15o2-4
  Tci[68] = 1.316 * EPS[68];
  ai[68] = (5.55 * avogadro * avogadro * EPS[68] * boltzmann * 1e-24 * SIG[68] *
            SIG[68] * SIG[68]) /
           (wt[68] * wt[68]);
  bi[68] = 0.855 * avogadro * 1e-24 * SIG[68] * SIG[68] * SIG[68] / (wt[68]);
  acentric_i[68] = 0.0;

  // species 69: c7h14ooh1-3
  Tci[69] = 1.316 * EPS[69];
  ai[69] = (5.55 * avogadro * avogadro * EPS[69] * boltzmann * 1e-24 * SIG[69] *
            SIG[69] * SIG[69]) /
           (wt[69] * wt[69]);
  bi[69] = 0.855 * avogadro * 1e-24 * SIG[69] * SIG[69] * SIG[69] / (wt[69]);
  acentric_i[69] = 0.0;

  // species 70: c7h14ooh2-3
  Tci[70] = 1.316 * EPS[70];
  ai[70] = (5.55 * avogadro * avogadro * EPS[70] * boltzmann * 1e-24 * SIG[70] *
            SIG[70] * SIG[70]) /
           (wt[70] * wt[70]);
  bi[70] = 0.855 * avogadro * 1e-24 * SIG[70] * SIG[70] * SIG[70] / (wt[70]);
  acentric_i[70] = 0.0;

  // species 71: c7h14ooh2-4
  Tci[71] = 1.316 * EPS[71];
  ai[71] = (5.55 * avogadro * avogadro * EPS[71] * boltzmann * 1e-24 * SIG[71] *
            SIG[71] * SIG[71]) /
           (wt[71] * wt[71]);
  bi[71] = 0.855 * avogadro * 1e-24 * SIG[71] * SIG[71] * SIG[71] / (wt[71]);
  acentric_i[71] = 0.0;

  // species 72: c7h14ooh3-2
  Tci[72] = 1.316 * EPS[72];
  ai[72] = (5.55 * avogadro * avogadro * EPS[72] * boltzmann * 1e-24 * SIG[72] *
            SIG[72] * SIG[72]) /
           (wt[72] * wt[72]);
  bi[72] = 0.855 * avogadro * 1e-24 * SIG[72] * SIG[72] * SIG[72] / (wt[72]);
  acentric_i[72] = 0.0;

  // species 73: c7h14ooh3-4
  Tci[73] = 1.316 * EPS[73];
  ai[73] = (5.55 * avogadro * avogadro * EPS[73] * boltzmann * 1e-24 * SIG[73] *
            SIG[73] * SIG[73]) /
           (wt[73] * wt[73]);
  bi[73] = 0.855 * avogadro * 1e-24 * SIG[73] * SIG[73] * SIG[73] / (wt[73]);
  acentric_i[73] = 0.0;

  // species 74: c7h14ooh3-5
  Tci[74] = 1.316 * EPS[74];
  ai[74] = (5.55 * avogadro * avogadro * EPS[74] * boltzmann * 1e-24 * SIG[74] *
            SIG[74] * SIG[74]) /
           (wt[74] * wt[74]);
  bi[74] = 0.855 * avogadro * 1e-24 * SIG[74] * SIG[74] * SIG[74] / (wt[74]);
  acentric_i[74] = 0.0;

  // species 75: c7h14ooh4-2
  Tci[75] = 1.316 * EPS[75];
  ai[75] = (5.55 * avogadro * avogadro * EPS[75] * boltzmann * 1e-24 * SIG[75] *
            SIG[75] * SIG[75]) /
           (wt[75] * wt[75]);
  bi[75] = 0.855 * avogadro * 1e-24 * SIG[75] * SIG[75] * SIG[75] / (wt[75]);
  acentric_i[75] = 0.0;

  // species 76: c7h14ooh4-3
  Tci[76] = 1.316 * EPS[76];
  ai[76] = (5.55 * avogadro * avogadro * EPS[76] * boltzmann * 1e-24 * SIG[76] *
            SIG[76] * SIG[76]) /
           (wt[76] * wt[76]);
  bi[76] = 0.855 * avogadro * 1e-24 * SIG[76] * SIG[76] * SIG[76] / (wt[76]);
  acentric_i[76] = 0.0;

  // species 77: c7h14ooh1-3o2
  Tci[77] = 1.316 * EPS[77];
  ai[77] = (5.55 * avogadro * avogadro * EPS[77] * boltzmann * 1e-24 * SIG[77] *
            SIG[77] * SIG[77]) /
           (wt[77] * wt[77]);
  bi[77] = 0.855 * avogadro * 1e-24 * SIG[77] * SIG[77] * SIG[77] / (wt[77]);
  acentric_i[77] = 0.0;

  // species 78: c7h14ooh2-4o2
  Tci[78] = 1.316 * EPS[78];
  ai[78] = (5.55 * avogadro * avogadro * EPS[78] * boltzmann * 1e-24 * SIG[78] *
            SIG[78] * SIG[78]) /
           (wt[78] * wt[78]);
  bi[78] = 0.855 * avogadro * 1e-24 * SIG[78] * SIG[78] * SIG[78] / (wt[78]);
  acentric_i[78] = 0.0;

  // species 79: c7h14ooh3-5o2
  Tci[79] = 1.316 * EPS[79];
  ai[79] = (5.55 * avogadro * avogadro * EPS[79] * boltzmann * 1e-24 * SIG[79] *
            SIG[79] * SIG[79]) /
           (wt[79] * wt[79]);
  bi[79] = 0.855 * avogadro * 1e-24 * SIG[79] * SIG[79] * SIG[79] / (wt[79]);
  acentric_i[79] = 0.0;

  // species 80: c7h14ooh4-2o2
  Tci[80] = 1.316 * EPS[80];
  ai[80] = (5.55 * avogadro * avogadro * EPS[80] * boltzmann * 1e-24 * SIG[80] *
            SIG[80] * SIG[80]) /
           (wt[80] * wt[80]);
  bi[80] = 0.855 * avogadro * 1e-24 * SIG[80] * SIG[80] * SIG[80] / (wt[80]);
  acentric_i[80] = 0.0;

  // species 81: c7h14o1-3
  Tci[81] = 1.316 * EPS[81];
  ai[81] = (5.55 * avogadro * avogadro * EPS[81] * boltzmann * 1e-24 * SIG[81] *
            SIG[81] * SIG[81]) /
           (wt[81] * wt[81]);
  bi[81] = 0.855 * avogadro * 1e-24 * SIG[81] * SIG[81] * SIG[81] / (wt[81]);
  acentric_i[81] = 0.0;

  // species 82: c7h14o2-4
  Tci[82] = 1.316 * EPS[82];
  ai[82] = (5.55 * avogadro * avogadro * EPS[82] * boltzmann * 1e-24 * SIG[82] *
            SIG[82] * SIG[82]) /
           (wt[82] * wt[82]);
  bi[82] = 0.855 * avogadro * 1e-24 * SIG[82] * SIG[82] * SIG[82] / (wt[82]);
  acentric_i[82] = 0.0;

  // species 83: nc7ket13
  Tci[83] = 1.316 * EPS[83];
  ai[83] = (5.55 * avogadro * avogadro * EPS[83] * boltzmann * 1e-24 * SIG[83] *
            SIG[83] * SIG[83]) /
           (wt[83] * wt[83]);
  bi[83] = 0.855 * avogadro * 1e-24 * SIG[83] * SIG[83] * SIG[83] / (wt[83]);
  acentric_i[83] = 0.0;

  // species 84: nc7ket24
  Tci[84] = 1.316 * EPS[84];
  ai[84] = (5.55 * avogadro * avogadro * EPS[84] * boltzmann * 1e-24 * SIG[84] *
            SIG[84] * SIG[84]) /
           (wt[84] * wt[84]);
  bi[84] = 0.855 * avogadro * 1e-24 * SIG[84] * SIG[84] * SIG[84] / (wt[84]);
  acentric_i[84] = 0.0;

  // species 85: nc7ket35
  Tci[85] = 1.316 * EPS[85];
  ai[85] = (5.55 * avogadro * avogadro * EPS[85] * boltzmann * 1e-24 * SIG[85] *
            SIG[85] * SIG[85]) /
           (wt[85] * wt[85]);
  bi[85] = 0.855 * avogadro * 1e-24 * SIG[85] * SIG[85] * SIG[85] / (wt[85]);
  acentric_i[85] = 0.0;

  // species 86: nc7ket42
  Tci[86] = 1.316 * EPS[86];
  ai[86] = (5.55 * avogadro * avogadro * EPS[86] * boltzmann * 1e-24 * SIG[86] *
            SIG[86] * SIG[86]) /
           (wt[86] * wt[86]);
  bi[86] = 0.855 * avogadro * 1e-24 * SIG[86] * SIG[86] * SIG[86] / (wt[86]);
  acentric_i[86] = 0.0;

  // species 87: n2
  Tci[87] = 1.316 * EPS[87];
  ai[87] = (5.55 * avogadro * avogadro * EPS[87] * boltzmann * 1e-24 * SIG[87] *
            SIG[87] * SIG[87]) /
           (wt[87] * wt[87]);
  bi[87] = 0.855 * avogadro * 1e-24 * SIG[87] * SIG[87] * SIG[87] / (wt[87]);
  acentric_i[87] = 0.0;
}

// compute the critical parameter quantities for each species for SRK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_CRITPARAMS_SRK(
  amrex::Real* sqrtOneOverTc,
  amrex::Real* sqrtAsti,
  amrex::Real* Bi,
  amrex::Real* Fomega)
{

  // species 0: h
  // Computed from Lennard-Jones
  sqrtOneOverTc[0] = 7.2391579785311e-02;
  sqrtAsti[0] = 5.8451221185793e+05;
  Bi[0] = 4.4006634563410e+00;
  Fomega[0] = 4.8508000000000e-01;

  // species 1: h2
  // Computed from Lennard-Jones
  sqrtOneOverTc[1] = 1.4141004388627e-01;
  sqrtAsti[1] = 2.5434012251993e+05;
  Bi[1] = 6.3587995142790e+00;
  Fomega[1] = 4.8508000000000e-01;

  // species 2: o
  // Computed from Lennard-Jones
  sqrtOneOverTc[2] = 9.7460146948181e-02;
  sqrtAsti[2] = 4.2500156012386e+04;
  Bi[2] = 6.6930234851885e-01;
  Fomega[2] = 4.8508000000000e-01;

  // species 3: o2
  // Computed from Lennard-Jones
  sqrtOneOverTc[3] = 8.4114315417892e-02;
  sqrtAsti[3] = 3.4718113488862e+04;
  Bi[3] = 6.6537922761553e-01;
  Fomega[3] = 4.8508000000000e-01;

  // species 4: oh
  // Computed from Lennard-Jones
  sqrtOneOverTc[4] = 9.7460146948181e-02;
  sqrtAsti[4] = 3.9981183985545e+04;
  Bi[4] = 6.2963299076575e-01;
  Fomega[4] = 4.8508000000000e-01;

  // species 5: h2o
  // Computed from Lennard-Jones
  sqrtOneOverTc[5] = 3.6435291028173e-02;
  sqrtAsti[5] = 9.3082162855299e+04;
  Bi[5] = 5.0524965107539e-01;
  Fomega[5] = 4.8508000000000e-01;

  // species 6: co
  // Computed from Lennard-Jones
  sqrtOneOverTc[6] = 8.8011120802094e-02;
  sqrtAsti[6] = 4.1105508021329e+04;
  Bi[6] = 8.9388693636107e-01;
  Fomega[6] = 4.8508000000000e-01;

  // species 7: hco
  // Computed from Lennard-Jones
  sqrtOneOverTc[7] = 3.9062261583604e-02;
  sqrtAsti[7] = 8.7202351509582e+04;
  Bi[7] = 8.2098075206475e-01;
  Fomega[7] = 4.8508000000000e-01;

  // species 8: co2
  // Computed from Lennard-Jones
  sqrtOneOverTc[8] = 5.5805517804513e-02;
  sqrtAsti[8] = 4.3191080492127e+04;
  Bi[8] = 6.2341645380911e-01;
  Fomega[8] = 4.8508000000000e-01;

  // species 9: ch3
  // Computed from Lennard-Jones
  sqrtOneOverTc[9] = 7.2642504557751e-02;
  sqrtAsti[9] = 9.8558148656101e+04;
  Bi[9] = 1.8791630452967e+00;
  Fomega[9] = 4.8508000000000e-01;

  // species 10: ch4
  // Computed from Lennard-Jones
  sqrtOneOverTc[10] = 7.3307321342874e-02;
  sqrtAsti[10] = 8.9583929678722e+04;
  Bi[10] = 1.6870767542072e+00;
  Fomega[10] = 4.8508000000000e-01;

  // species 11: ho2
  // Computed from Lennard-Jones
  sqrtOneOverTc[11] = 8.4114315417892e-02;
  sqrtAsti[11] = 3.3657825710980e+04;
  Bi[11] = 6.4505861132042e-01;
  Fomega[11] = 4.8508000000000e-01;

  // species 12: h2o2
  // Computed from Lennard-Jones
  sqrtOneOverTc[12] = 8.4114315417892e-02;
  sqrtAsti[12] = 3.2660380884830e+04;
  Bi[12] = 6.2594239211036e-01;
  Fomega[12] = 4.8508000000000e-01;

  // species 13: ch2o
  // Computed from Lennard-Jones
  sqrtOneOverTc[13] = 3.9062261583604e-02;
  sqrtAsti[13] = 8.4274889632487e+04;
  Bi[13] = 7.9341968505345e-01;
  Fomega[13] = 4.8508000000000e-01;

  // species 14: ch3o
  // Computed from Lennard-Jones
  sqrtOneOverTc[14] = 4.2687825036676e-02;
  sqrtAsti[14] = 7.7751566794340e+04;
  Bi[14] = 8.3360142526260e-01;
  Fomega[14] = 4.8508000000000e-01;

  // species 15: c2h6
  // Computed from Lennard-Jones
  sqrtOneOverTc[15] = 5.5409528387934e-02;
  sqrtAsti[15] = 7.9127489582724e+04;
  Bi[15] = 1.4094557593320e+00;
  Fomega[15] = 4.8508000000000e-01;

  // species 16: c2h4
  // Computed from Lennard-Jones
  sqrtOneOverTc[16] = 5.6457147267382e-02;
  sqrtAsti[16] = 5.9972865137761e+04;
  Bi[16] = 7.8421760038533e-01;
  Fomega[16] = 4.8508000000000e-01;

  // species 17: c2h5
  // Computed from Lennard-Jones
  sqrtOneOverTc[17] = 5.5409528387934e-02;
  sqrtAsti[17] = 8.1871984438529e+04;
  Bi[17] = 1.4583419820767e+00;
  Fomega[17] = 4.8508000000000e-01;

  // species 18: c2h2
  // Computed from Lennard-Jones
  sqrtOneOverTc[18] = 5.3518438102537e-02;
  sqrtAsti[18] = 7.4849660669264e+04;
  Bi[18] = 1.0187989606030e+00;
  Fomega[18] = 4.8508000000000e-01;

  // species 19: c2h3
  // Computed from Lennard-Jones
  sqrtOneOverTc[19] = 5.3518438102537e-02;
  sqrtAsti[19] = 7.2060026048447e+04;
  Bi[19] = 9.8082848983884e-01;
  Fomega[19] = 4.8508000000000e-01;

  // species 20: ch2co
  // Computed from Lennard-Jones
  sqrtOneOverTc[20] = 4.1747340173827e-02;
  sqrtAsti[20] = 6.5499293944176e+04;
  Bi[20] = 7.6640249759188e-01;
  Fomega[20] = 4.8508000000000e-01;

  // species 21: hcco
  // Computed from Lennard-Jones
  sqrtOneOverTc[21] = 7.1174827921716e-02;
  sqrtAsti[21] = 1.9669985462832e+04;
  Bi[21] = 1.9608582502049e-01;
  Fomega[21] = 4.8508000000000e-01;

  // species 22: ch3co
  // Computed from Lennard-Jones
  sqrtOneOverTc[22] = 4.1747340173827e-02;
  sqrtAsti[22] = 6.3965473795593e+04;
  Bi[22] = 7.4845537905146e-01;
  Fomega[22] = 4.8508000000000e-01;

  // species 23: ch2cho
  // Computed from Lennard-Jones
  sqrtOneOverTc[23] = 4.1747340173827e-02;
  sqrtAsti[23] = 6.3965473795593e+04;
  Bi[23] = 7.4845537905146e-01;
  Fomega[23] = 4.8508000000000e-01;

  // species 24: ch3cho
  // Computed from Lennard-Jones
  sqrtOneOverTc[24] = 4.1747340173827e-02;
  sqrtAsti[24] = 6.2501845947638e+04;
  Bi[24] = 7.3132957554014e-01;
  Fomega[24] = 4.8508000000000e-01;

  // species 25: c3h4-a
  // Computed from Lennard-Jones
  sqrtOneOverTc[25] = 4.8368658793561e-02;
  sqrtAsti[25] = 6.6629741741581e+04;
  Bi[25] = 1.0146676991371e+00;
  Fomega[25] = 4.8508000000000e-01;

  // species 26: c3h6
  // Computed from Lennard-Jones
  sqrtOneOverTc[26] = 4.9686424745000e-02;
  sqrtAsti[26] = 5.8544768922587e+04;
  Bi[26] = 8.6822458126929e-01;
  Fomega[26] = 4.8508000000000e-01;

  // species 27: c4h6
  // Computed from Lennard-Jones
  sqrtOneOverTc[27] = 4.6135788482041e-02;
  sqrtAsti[27] = 5.9710869464612e+04;
  Bi[27] = 1.0009446493692e+00;
  Fomega[27] = 4.8508000000000e-01;

  // species 28: nc3h7
  // Computed from Lennard-Jones
  sqrtOneOverTc[28] = 5.0045411792091e-02;
  sqrtAsti[28] = 7.1088330670696e+04;
  Bi[28] = 1.3297987480424e+00;
  Fomega[28] = 4.8508000000000e-01;

  // species 29: c4h7
  // Computed from Lennard-Jones
  sqrtOneOverTc[29] = 4.6265565921192e-02;
  sqrtAsti[29] = 5.7158567425520e+04;
  Bi[29] = 9.3955966771237e-01;
  Fomega[29] = 4.8508000000000e-01;

  // species 30: c4h8-1
  // Computed from Lennard-Jones
  sqrtOneOverTc[30] = 4.6265565921192e-02;
  sqrtAsti[30] = 5.6131693611360e+04;
  Bi[30] = 9.2268014705481e-01;
  Fomega[30] = 4.8508000000000e-01;

  // species 31: pc4h9
  // Computed from Lennard-Jones
  sqrtOneOverTc[31] = 4.6462302028734e-02;
  sqrtAsti[31] = 6.5682519849811e+04;
  Bi[31] = 1.2970394389766e+00;
  Fomega[31] = 4.8508000000000e-01;

  // species 32: ch3coch2
  // Computed from Lennard-Jones
  sqrtOneOverTc[32] = 4.1771298477190e-02;
  sqrtAsti[32] = 6.5307749764365e+04;
  Bi[32] = 1.0356257054778e+00;
  Fomega[32] = 4.8508000000000e-01;

  // species 33: c2h5cho
  // Computed from Lennard-Jones
  sqrtOneOverTc[33] = 4.1785693273485e-02;
  sqrtAsti[33] = 6.0271995145706e+04;
  Bi[33] = 8.9827084826527e-01;
  Fomega[33] = 4.8508000000000e-01;

  // species 34: c2h5co
  // Computed from Lennard-Jones
  sqrtOneOverTc[34] = 4.2304061072923e-02;
  sqrtAsti[34] = 6.3690812432513e+04;
  Bi[34] = 1.0102645839551e+00;
  Fomega[34] = 4.8508000000000e-01;

  // species 35: c5h9
  // Computed from Lennard-Jones
  sqrtOneOverTc[35] = 4.3760897820505e-02;
  sqrtAsti[35] = 6.1253054088654e+04;
  Bi[35] = 1.2110720748810e+00;
  Fomega[35] = 4.8508000000000e-01;

  // species 36: c5h10-1
  // Computed from Lennard-Jones
  sqrtOneOverTc[36] = 4.4357383504839e-02;
  sqrtAsti[36] = 6.0069014652861e+04;
  Bi[36] = 1.2141210724076e+00;
  Fomega[36] = 4.8508000000000e-01;

  // species 37: c2h5o
  // Computed from Lennard-Jones
  sqrtOneOverTc[37] = 4.0183345726875e-02;
  sqrtAsti[37] = 7.4322848938973e+04;
  Bi[37] = 9.8001347861224e-01;
  Fomega[37] = 4.8508000000000e-01;

  // species 38: ch3o2
  // Computed from Lennard-Jones
  sqrtOneOverTc[38] = 3.9713545161155e-02;
  sqrtAsti[38] = 5.3716999347795e+04;
  Bi[38] = 5.2191265081356e-01;
  Fomega[38] = 4.8508000000000e-01;

  // species 39: ch3o2h
  // Computed from Lennard-Jones
  sqrtOneOverTc[39] = 3.9713545161155e-02;
  sqrtAsti[39] = 5.2589905087838e+04;
  Bi[39] = 5.1096183896493e-01;
  Fomega[39] = 4.8508000000000e-01;

  // species 40: c2h3co
  // Computed from Lennard-Jones
  sqrtOneOverTc[40] = 4.1406848705307e-02;
  sqrtAsti[40] = 5.3306525106457e+04;
  Bi[40] = 6.5403968189622e-01;
  Fomega[40] = 4.8508000000000e-01;

  // species 41: c2h3cho
  // Computed from Lennard-Jones
  sqrtOneOverTc[41] = 4.2096371850527e-02;
  sqrtAsti[41] = 6.7973936315168e+04;
  Bi[41] = 1.1193156937028e+00;
  Fomega[41] = 4.8508000000000e-01;

  // species 42: c3h5o
  // Computed from Lennard-Jones
  sqrtOneOverTc[42] = 4.2998286036482e-02;
  sqrtAsti[42] = 6.2662498143370e+04;
  Bi[42] = 1.0102645839551e+00;
  Fomega[42] = 4.8508000000000e-01;

  // species 43: c4h7o
  // Computed from Lennard-Jones
  sqrtOneOverTc[43] = 3.9140936913229e-02;
  sqrtAsti[43] = 6.1918680045900e+04;
  Bi[43] = 1.0182716303958e+00;
  Fomega[43] = 4.8508000000000e-01;

  // species 44: c4h8ooh1-3o2
  // Computed from Lennard-Jones
  sqrtOneOverTc[44] = 3.9140936913229e-02;
  sqrtAsti[44] = 3.6349463575727e+04;
  Bi[44] = 5.9777804552405e-01;
  Fomega[44] = 4.8508000000000e-01;

  // species 45: c4h8ooh1-3
  // Computed from Lennard-Jones
  sqrtOneOverTc[45] = 3.9140936913229e-02;
  sqrtAsti[45] = 4.9401398574674e+04;
  Bi[45] = 8.1242110835007e-01;
  Fomega[45] = 4.8508000000000e-01;

  // species 46: pc4h9o2
  // Computed from Lennard-Jones
  sqrtOneOverTc[46] = 3.9140936913229e-02;
  sqrtAsti[46] = 4.9401398574674e+04;
  Bi[46] = 8.1242110835007e-01;
  Fomega[46] = 4.8508000000000e-01;

  // species 47: c3h5-a
  // Computed from Lennard-Jones
  sqrtOneOverTc[47] = 4.9037521782533e-02;
  sqrtAsti[47] = 6.2545363519735e+04;
  Bi[47] = 9.4210223375852e-01;
  Fomega[47] = 4.8508000000000e-01;

  // species 48: c3h3
  // Computed from Lennard-Jones
  sqrtOneOverTc[48] = 4.8368658793561e-02;
  sqrtAsti[48] = 6.8349351022261e+04;
  Bi[48] = 1.0408546833072e+00;
  Fomega[48] = 4.8508000000000e-01;

  // species 49: c3h2
  // Computed from Lennard-Jones
  sqrtOneOverTc[49] = 6.0297445312864e-02;
  sqrtAsti[49] = 5.2582957536127e+04;
  Bi[49] = 9.3266446192892e-01;
  Fomega[49] = 4.8508000000000e-01;

  // species 50: ch2(s)
  // Computed from Lennard-Jones
  sqrtOneOverTc[50] = 7.2642504557751e-02;
  sqrtAsti[50] = 1.0564067619908e+05;
  Bi[50] = 2.0142023516102e+00;
  Fomega[50] = 4.8508000000000e-01;

  // species 51: nc4ket13
  // Computed from Lennard-Jones
  sqrtOneOverTc[51] = 3.9954764849073e-02;
  sqrtAsti[51] = 4.8521869178464e+04;
  Bi[51] = 9.5406536435313e-01;
  Fomega[51] = 4.8508000000000e-01;

  // species 52: nc3h7cho
  // Computed from Lennard-Jones
  sqrtOneOverTc[52] = 4.0459404589794e-02;
  sqrtAsti[52] = 5.5839435198434e+04;
  Bi[52] = 8.9741386215271e-01;
  Fomega[52] = 4.8508000000000e-01;

  // species 53: nc3h7co
  // Computed from Lennard-Jones
  sqrtOneOverTc[53] = 4.0459404589794e-02;
  sqrtAsti[53] = 5.6631094021765e+04;
  Bi[53] = 9.1013687053609e-01;
  Fomega[53] = 4.8508000000000e-01;

  // species 54: c2h5coch2
  // Computed from Lennard-Jones
  sqrtOneOverTc[54] = 4.0911379981745e-02;
  sqrtAsti[54] = 6.2915956436164e+04;
  Bi[54] = 1.1485970449676e+00;
  Fomega[54] = 4.8508000000000e-01;

  // species 55: nc3h7coch2
  // Computed from Lennard-Jones
  sqrtOneOverTc[55] = 3.9416705960957e-02;
  sqrtAsti[55] = 5.3561894202856e+04;
  Bi[55] = 9.2518604790462e-01;
  Fomega[55] = 4.8508000000000e-01;

  // species 56: nc4h9cho
  // Computed from Lennard-Jones
  sqrtOneOverTc[56] = 3.9954764849073e-02;
  sqrtAsti[56] = 5.8645473225719e+04;
  Bi[56] = 1.1531215867832e+00;
  Fomega[56] = 4.8508000000000e-01;

  // species 57: nc4h9co
  // Computed from Lennard-Jones
  sqrtOneOverTc[57] = 3.9954764849073e-02;
  sqrtAsti[57] = 5.9339910142895e+04;
  Bi[57] = 1.1667760115121e+00;
  Fomega[57] = 4.8508000000000e-01;

  // species 58: nc7h16
  // Computed from Lennard-Jones
  sqrtOneOverTc[58] = 4.0661373572610e-02;
  sqrtAsti[58] = 5.5766397379575e+04;
  Bi[58] = 1.2562989577857e+00;
  Fomega[58] = 4.8508000000000e-01;

  // species 59: c7h15-1
  // Computed from Lennard-Jones
  sqrtOneOverTc[59] = 4.0661373572610e-02;
  sqrtAsti[59] = 5.6333073070963e+04;
  Bi[59] = 1.2690649622964e+00;
  Fomega[59] = 4.8508000000000e-01;

  // species 60: c7h15-2
  // Computed from Lennard-Jones
  sqrtOneOverTc[60] = 4.0661373572610e-02;
  sqrtAsti[60] = 5.6333073070963e+04;
  Bi[60] = 1.2690649622964e+00;
  Fomega[60] = 4.8508000000000e-01;

  // species 61: c7h15-3
  // Computed from Lennard-Jones
  sqrtOneOverTc[61] = 4.0661373572610e-02;
  sqrtAsti[61] = 5.6333073070963e+04;
  Bi[61] = 1.2690649622964e+00;
  Fomega[61] = 4.8508000000000e-01;

  // species 62: c7h15-4
  // Computed from Lennard-Jones
  sqrtOneOverTc[62] = 4.0661373572610e-02;
  sqrtAsti[62] = 5.6333073070963e+04;
  Bi[62] = 1.2690649622964e+00;
  Fomega[62] = 4.8508000000000e-01;

  // species 63: c7h14-2
  // Computed from Lennard-Jones
  sqrtOneOverTc[63] = 4.0741232321045e-02;
  sqrtAsti[63] = 5.5713289454313e+04;
  Bi[63] = 1.2335112073145e+00;
  Fomega[63] = 4.8508000000000e-01;

  // species 64: c7h14-3
  // Computed from Lennard-Jones
  sqrtOneOverTc[64] = 4.0741232321045e-02;
  sqrtAsti[64] = 5.5713289454313e+04;
  Bi[64] = 1.2335112073145e+00;
  Fomega[64] = 4.8508000000000e-01;

  // species 65: c7h15o2-1
  // Computed from Lennard-Jones
  sqrtOneOverTc[65] = 3.6803627355833e-02;
  sqrtAsti[65] = 4.7782601450340e+04;
  Bi[65] = 9.8931012223543e-01;
  Fomega[65] = 4.8508000000000e-01;

  // species 66: c7h15o2-2
  // Computed from Lennard-Jones
  sqrtOneOverTc[66] = 3.6803627355833e-02;
  sqrtAsti[66] = 4.7782601450340e+04;
  Bi[66] = 9.8931012223543e-01;
  Fomega[66] = 4.8508000000000e-01;

  // species 67: c7h15o2-3
  // Computed from Lennard-Jones
  sqrtOneOverTc[67] = 3.6803627355833e-02;
  sqrtAsti[67] = 4.7782601450340e+04;
  Bi[67] = 9.8931012223543e-01;
  Fomega[67] = 4.8508000000000e-01;

  // species 68: c7h15o2-4
  // Computed from Lennard-Jones
  sqrtOneOverTc[68] = 3.6803627355833e-02;
  sqrtAsti[68] = 4.7782601450340e+04;
  Bi[68] = 9.8931012223543e-01;
  Fomega[68] = 4.8508000000000e-01;

  // species 69: c7h14ooh1-3
  // Computed from Lennard-Jones
  sqrtOneOverTc[69] = 3.6803627355833e-02;
  sqrtAsti[69] = 4.7782601450340e+04;
  Bi[69] = 9.8931012223543e-01;
  Fomega[69] = 4.8508000000000e-01;

  // species 70: c7h14ooh2-3
  // Computed from Lennard-Jones
  sqrtOneOverTc[70] = 3.6803627355833e-02;
  sqrtAsti[70] = 4.7782601450340e+04;
  Bi[70] = 9.8931012223543e-01;
  Fomega[70] = 4.8508000000000e-01;

  // species 71: c7h14ooh2-4
  // Computed from Lennard-Jones
  sqrtOneOverTc[71] = 3.6803627355833e-02;
  sqrtAsti[71] = 4.7782601450340e+04;
  Bi[71] = 9.8931012223543e-01;
  Fomega[71] = 4.8508000000000e-01;

  // species 72: c7h14ooh3-2
  // Computed from Lennard-Jones
  sqrtOneOverTc[72] = 3.6803627355833e-02;
  sqrtAsti[72] = 4.7782601450340e+04;
  Bi[72] = 9.8931012223543e-01;
  Fomega[72] = 4.8508000000000e-01;

  // species 73: c7h14ooh3-4
  // Computed from Lennard-Jones
  sqrtOneOverTc[73] = 3.6803627355833e-02;
  sqrtAsti[73] = 4.7782601450340e+04;
  Bi[73] = 9.8931012223543e-01;
  Fomega[73] = 4.8508000000000e-01;

  // species 74: c7h14ooh3-5
  // Computed from Lennard-Jones
  sqrtOneOverTc[74] = 3.6803627355833e-02;
  sqrtAsti[74] = 4.7782601450340e+04;
  Bi[74] = 9.8931012223543e-01;
  Fomega[74] = 4.8508000000000e-01;

  // species 75: c7h14ooh4-2
  // Computed from Lennard-Jones
  sqrtOneOverTc[75] = 3.6803627355833e-02;
  sqrtAsti[75] = 4.7782601450340e+04;
  Bi[75] = 9.8931012223543e-01;
  Fomega[75] = 4.8508000000000e-01;

  // species 76: c7h14ooh4-3
  // Computed from Lennard-Jones
  sqrtOneOverTc[76] = 3.6803627355833e-02;
  sqrtAsti[76] = 4.7782601450340e+04;
  Bi[76] = 9.8931012223543e-01;
  Fomega[76] = 4.8508000000000e-01;

  // species 77: c7h14ooh1-3o2
  // Computed from Lennard-Jones
  sqrtOneOverTc[77] = 3.5569633588047e-02;
  sqrtAsti[77] = 4.8657277268334e+04;
  Bi[77] = 1.1919286361970e+00;
  Fomega[77] = 4.8508000000000e-01;

  // species 78: c7h14ooh2-4o2
  // Computed from Lennard-Jones
  sqrtOneOverTc[78] = 3.5569633588047e-02;
  sqrtAsti[78] = 4.8657277268334e+04;
  Bi[78] = 1.1919286361970e+00;
  Fomega[78] = 4.8508000000000e-01;

  // species 79: c7h14ooh3-5o2
  // Computed from Lennard-Jones
  sqrtOneOverTc[79] = 3.5569633588047e-02;
  sqrtAsti[79] = 4.8657277268334e+04;
  Bi[79] = 1.1919286361970e+00;
  Fomega[79] = 4.8508000000000e-01;

  // species 80: c7h14ooh4-2o2
  // Computed from Lennard-Jones
  sqrtOneOverTc[80] = 3.5569633588047e-02;
  sqrtAsti[80] = 4.8657277268334e+04;
  Bi[80] = 1.1919286361970e+00;
  Fomega[80] = 4.8508000000000e-01;

  // species 81: c7h14o1-3
  // Computed from Lennard-Jones
  sqrtOneOverTc[81] = 3.8543330263818e-02;
  sqrtAsti[81] = 5.2172568875701e+04;
  Bi[81] = 1.1258945563865e+00;
  Fomega[81] = 4.8508000000000e-01;

  // species 82: c7h14o2-4
  // Computed from Lennard-Jones
  sqrtOneOverTc[82] = 3.8543330263818e-02;
  sqrtAsti[82] = 5.2172568875701e+04;
  Bi[82] = 1.1258945563865e+00;
  Fomega[82] = 4.8508000000000e-01;

  // species 83: nc7ket13
  // Computed from Lennard-Jones
  sqrtOneOverTc[83] = 3.6155293708143e-02;
  sqrtAsti[83] = 4.5625201492600e+04;
  Bi[83] = 9.6995927388124e-01;
  Fomega[83] = 4.8508000000000e-01;

  // species 84: nc7ket24
  // Computed from Lennard-Jones
  sqrtOneOverTc[84] = 3.6155293708143e-02;
  sqrtAsti[84] = 4.5625201492600e+04;
  Bi[84] = 9.6995927388124e-01;
  Fomega[84] = 4.8508000000000e-01;

  // species 85: nc7ket35
  // Computed from Lennard-Jones
  sqrtOneOverTc[85] = 3.6155293708143e-02;
  sqrtAsti[85] = 4.5625201492600e+04;
  Bi[85] = 9.6995927388124e-01;
  Fomega[85] = 4.8508000000000e-01;

  // species 86: nc7ket42
  // Computed from Lennard-Jones
  sqrtOneOverTc[86] = 3.6155293708143e-02;
  sqrtAsti[86] = 4.5625201492600e+04;
  Bi[86] = 9.6995927388124e-01;
  Fomega[86] = 4.8508000000000e-01;

  // species 87: n2
  // Computed from Lennard-Jones
  sqrtOneOverTc[87] = 8.8267930269877e-02;
  sqrtAsti[87] = 4.0492641031864e+04;
  Bi[87] = 8.7262480899350e-01;
  Fomega[87] = 4.8508000000000e-01;
}

// gauss-jordan solver external routine
// Replace this routine with the one generated by the Gauss Jordan solver of DW
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
sgjsolve(amrex::Real* /*A*/, amrex::Real* /*x*/, amrex::Real* /*b*/)
{
  amrex::Abort("sgjsolve not implemented, choose a different solver ");
}

// Replace this routine with the one generated by the Gauss Jordan solver of DW
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
sgjsolve_simplified(amrex::Real* /*A*/, amrex::Real* /*x*/, amrex::Real* /*b*/)
{
  amrex::Abort(
    "sgjsolve_simplified not implemented, choose a different solver ");
}

#endif

#include "mechanism.H"
const int rmap[NUM_REACTIONS] = {
  16,   29,   75,   76,   87,   96,   111,  142,  172,  178,  179,  196,  256,
  276,  277,  292,  313,  40,   249,  8,    9,    10,   11,   12,   13,   14,
  15,   47,   48,   70,   71,   469,  470,  491,  492,  0,    1,    2,    3,
  4,    5,    6,    7,    17,   18,   19,   20,   21,   22,   23,   24,   25,
  26,   27,   28,   30,   31,   32,   33,   34,   35,   36,   37,   38,   39,
  41,   42,   43,   44,   45,   46,   49,   50,   51,   52,   53,   54,   55,
  56,   57,   58,   59,   60,   61,   62,   63,   64,   65,   66,   67,   68,
  69,   72,   73,   74,   77,   78,   79,   80,   81,   82,   83,   84,   85,
  86,   88,   89,   90,   91,   92,   93,   94,   95,   97,   98,   99,   100,
  101,  102,  103,  104,  105,  106,  107,  108,  109,  110,  112,  113,  114,
  115,  116,  117,  118,  119,  120,  121,  122,  123,  124,  125,  126,  127,
  128,  129,  130,  131,  132,  133,  134,  135,  136,  137,  138,  139,  140,
  141,  143,  144,  145,  146,  147,  148,  149,  150,  151,  152,  153,  154,
  155,  156,  157,  158,  159,  160,  161,  162,  163,  164,  165,  166,  167,
  168,  169,  170,  171,  173,  174,  175,  176,  177,  180,  181,  182,  183,
  184,  185,  186,  187,  188,  189,  190,  191,  192,  193,  194,  195,  197,
  198,  199,  200,  201,  202,  203,  204,  205,  206,  207,  208,  209,  210,
  211,  212,  213,  214,  215,  216,  217,  218,  219,  220,  221,  222,  223,
  224,  225,  226,  227,  228,  229,  230,  231,  232,  233,  234,  235,  236,
  237,  238,  239,  240,  241,  242,  243,  244,  245,  246,  247,  248,  250,
  251,  252,  253,  254,  255,  257,  258,  259,  260,  261,  262,  263,  264,
  265,  266,  267,  268,  269,  270,  271,  272,  273,  274,  275,  278,  279,
  280,  281,  282,  283,  284,  285,  286,  287,  288,  289,  290,  291,  293,
  294,  295,  296,  297,  298,  299,  300,  301,  302,  303,  304,  305,  306,
  307,  308,  309,  310,  311,  312,  314,  315,  316,  317,  318,  319,  320,
  321,  322,  323,  324,  325,  326,  327,  328,  329,  330,  331,  332,  333,
  334,  335,  336,  337,  338,  339,  340,  341,  342,  343,  344,  345,  346,
  347,  348,  349,  350,  351,  352,  353,  354,  355,  356,  357,  358,  359,
  360,  361,  362,  363,  364,  365,  366,  367,  368,  369,  370,  371,  372,
  373,  374,  375,  376,  377,  378,  379,  380,  381,  382,  383,  384,  385,
  386,  387,  388,  389,  390,  391,  392,  393,  394,  395,  396,  397,  398,
  399,  400,  401,  402,  403,  404,  405,  406,  407,  408,  409,  410,  411,
  412,  413,  414,  415,  416,  417,  418,  419,  420,  421,  422,  423,  424,
  425,  426,  427,  428,  429,  430,  431,  432,  433,  434,  435,  436,  437,
  438,  439,  440,  441,  442,  443,  444,  445,  446,  447,  448,  449,  450,
  451,  452,  453,  454,  455,  456,  457,  458,  459,  460,  461,  462,  463,
  464,  465,  466,  467,  468,  471,  472,  473,  474,  475,  476,  477,  478,
  479,  480,  481,  482,  483,  484,  485,  486,  487,  488,  489,  490,  493,
  494,  495,  496,  497,  498,  499,  500,  501,  502,  503,  504,  505,  506,
  507,  508,  509,  510,  511,  512,  513,  514,  515,  516,  517,  518,  519,
  520,  521,  522,  523,  524,  525,  526,  527,  528,  529,  530,  531,  532,
  533,  534,  535,  536,  537,  538,  539,  540,  541,  542,  543,  544,  545,
  546,  547,  548,  549,  550,  551,  552,  553,  554,  555,  556,  557,  558,
  559,  560,  561,  562,  563,  564,  565,  566,  567,  568,  569,  570,  571,
  572,  573,  574,  575,  576,  577,  578,  579,  580,  581,  582,  583,  584,
  585,  586,  587,  588,  589,  590,  591,  592,  593,  594,  595,  596,  597,
  598,  599,  600,  601,  602,  603,  604,  605,  606,  607,  608,  609,  610,
  611,  612,  613,  614,  615,  616,  617,  618,  619,  620,  621,  622,  623,
  624,  625,  626,  627,  628,  629,  630,  631,  632,  633,  634,  635,  636,
  637,  638,  639,  640,  641,  642,  643,  644,  645,  646,  647,  648,  649,
  650,  651,  652,  653,  654,  655,  656,  657,  658,  659,  660,  661,  662,
  663,  664,  665,  666,  667,  668,  669,  670,  671,  672,  673,  674,  675,
  676,  677,  678,  679,  680,  681,  682,  683,  684,  685,  686,  687,  688,
  689,  690,  691,  692,  693,  694,  695,  696,  697,  698,  699,  700,  701,
  702,  703,  704,  705,  706,  707,  708,  709,  710,  711,  712,  713,  714,
  715,  716,  717,  718,  719,  720,  721,  722,  723,  724,  725,  726,  727,
  728,  729,  730,  731,  732,  733,  734,  735,  736,  737,  738,  739,  740,
  741,  742,  743,  744,  745,  746,  747,  748,  749,  750,  751,  752,  753,
  754,  755,  756,  757,  758,  759,  760,  761,  762,  763,  764,  765,  766,
  767,  768,  769,  770,  771,  772,  773,  774,  775,  776,  777,  778,  779,
  780,  781,  782,  783,  784,  785,  786,  787,  788,  789,  790,  791,  792,
  793,  794,  795,  796,  797,  798,  799,  800,  801,  802,  803,  804,  805,
  806,  807,  808,  809,  810,  811,  812,  813,  814,  815,  816,  817,  818,
  819,  820,  821,  822,  823,  824,  825,  826,  827,  828,  829,  830,  831,
  832,  833,  834,  835,  836,  837,  838,  839,  840,  841,  842,  843,  844,
  845,  846,  847,  848,  849,  850,  851,  852,  853,  854,  855,  856,  857,
  858,  859,  860,  861,  862,  863,  864,  865,  866,  867,  868,  869,  870,
  871,  872,  873,  874,  875,  876,  877,  878,  879,  880,  881,  882,  883,
  884,  885,  886,  887,  888,  889,  890,  891,  892,  893,  894,  895,  896,
  897,  898,  899,  900,  901,  902,  903,  904,  905,  906,  907,  908,  909,
  910,  911,  912,  913,  914,  915,  916,  917,  918,  919,  920,  921,  922,
  923,  924,  925,  926,  927,  928,  929,  930,  931,  932,  933,  934,  935,
  936,  937,  938,  939,  940,  941,  942,  943,  944,  945,  946,  947,  948,
  949,  950,  951,  952,  953,  954,  955,  956,  957,  958,  959,  960,  961,
  962,  963,  964,  965,  966,  967,  968,  969,  970,  971,  972,  973,  974,
  975,  976,  977,  978,  979,  980,  981,  982,  983,  984,  985,  986,  987,
  988,  989,  990,  991,  992,  993,  994,  995,  996,  997,  998,  999,  1000,
  1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
  1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
  1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039,
  1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052,
  1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065,
  1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078,
  1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091,
  1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104,
  1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117,
  1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130,
  1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143,
  1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156,
  1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169,
  1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177};

// Returns 0-based map of reaction order
void
GET_RMAP(int* _rmap)
{
  for (int j = 0; j < NUM_REACTIONS; ++j) {
    _rmap[j] = rmap[j];
  }
}

// Returns a count of gas species in a gas reaction, and their indices
// and stoichiometric coefficients. (Eq 50)
void
CKINU(const int i, int& nspec, int ki[], int nu[])
{
  const int ns[NUM_GAS_REACTIONS] = {
    4, 4, 4, 4, 4, 4, 3, 3, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 3, 3, 4, 4, 4, 4,
    3, 3, 3, 3, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 3, 3, 4,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 3, 3, 4, 4, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4,
    4, 4, 4, 4, 4, 3, 3, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 4, 4, 4,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 3, 3, 4,
    4, 3, 4, 4, 4, 4, 3, 3, 2, 2, 3, 3, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4,
    4, 5, 4, 2, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 3,
    3, 4, 4, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4,
    4, 4, 3, 3, 3, 3, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3,
    4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    4, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3,
    3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 5,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 4, 4, 4,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 4, 4, 4, 4, 5, 3, 3, 3, 3, 4, 4, 4,
    4, 4, 4, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 2, 2, 4, 4,
    5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 5, 5, 4, 4, 5, 5, 4,
    4, 4, 4, 4, 4, 4, 4, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 4, 3, 3, 2, 2, 3, 3, 3, 3, 3,
    3, 4, 3, 3, 3, 3, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 4, 4, 4,
    4, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 5, 5, 3, 5, 4, 4, 4, 4, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 4,
    4, 4, 4, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    4, 5, 4, 4, 3, 3, 4, 4, 4, 4, 3, 3, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 3,
    3, 4, 4, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 4, 4, 3, 3, 4, 4, 3, 3, 3, 3, 3, 3, 4, 4, 3, 3, 3, 3, 4, 4, 3, 3, 4,
    4, 4, 4, 4, 4, 4, 4, 3, 3, 4, 4, 5, 4, 4, 4, 4, 4, 4, 5, 3, 3, 5, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 3, 3, 4, 4, 3, 3, 3, 3, 3,
    3, 3, 3, 4, 4, 4, 4, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 4, 4, 4, 4, 3, 3, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 5, 3, 3, 3, 3, 2, 2, 4, 3, 3, 4, 4, 4, 4,
    4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4,
    4, 3, 3, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4,
    4, 4, 4, 4, 4, 4, 5, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 4};
  const int kiv[NUM_GAS_REACTIONS * 5] = {
    0,   3,   2,   4,   0,   2,   4,   0,   3,   0,   1,   2,   0,   4,   0,
    0,   4,   1,   2,   0,   1,   4,   0,   5,   0,   0,   5,   1,   4,   0,
    5,   2,   4,   0,   0,   4,   5,   2,   0,   0,   1,   0,   0,   0,   0,
    0,   1,   0,   0,   0,   3,   2,   0,   0,   0,   2,   3,   0,   0,   0,
    4,   0,   2,   0,   0,   0,   2,   4,   0,   0,   5,   0,   4,   0,   0,
    0,   4,   5,   0,   0,   0,   3,   6,   0,   0,   0,   6,   1,   3,   0,
    1,   3,   0,   6,   0,   0,   6,   4,   0,   0,   4,   0,   6,   0,   0,
    6,   2,   3,   4,   0,   3,   4,   6,   2,   0,   6,   4,   5,   3,   0,
    5,   3,   6,   4,   0,   7,   3,   6,   0,   0,   6,   7,   3,   0,   0,
    7,   3,   6,   0,   0,   6,   7,   3,   0,   0,   7,   4,   0,   0,   0,
    0,   7,   5,   4,   0,   5,   4,   0,   7,   0,   0,   7,   1,   6,   0,
    1,   6,   0,   7,   0,   7,   2,   6,   4,   0,   6,   4,   7,   2,   0,
    7,   4,   5,   6,   0,   5,   6,   7,   4,   0,   7,   4,   5,   6,   0,
    5,   6,   7,   4,   0,   8,   2,   9,   0,   0,   8,   3,   9,   2,   0,
    9,   2,   8,   3,   0,   8,   4,   9,   0,   0,   9,   0,   8,   4,   0,
    8,   6,   9,   4,   0,   9,   4,   8,   6,   0,   11,  8,   0,   0,   0,
    8,   0,   11,  0,   0,   11,  3,   8,   6,   0,   8,   6,   11,  3,   0,
    0,   11,  8,   1,   0,   8,   1,   0,   11,  0,   11,  2,   8,   4,   0,
    8,   4,   11,  2,   0,   11,  2,   9,   0,   0,   9,   0,   11,  2,   0,
    11,  4,   8,   5,   0,   8,   5,   11,  4,   0,   20,  11,  19,  8,   0,
    19,  8,   20,  11,  0,   11,  6,   10,  3,   0,   10,  3,   11,  6,   0,
    11,  6,   9,   0,   4,   13,  11,  3,   0,   0,   11,  3,   13,  0,   0,
    10,  13,  11,  12,  0,   11,  12,  10,  13,  0,   12,  14,  4,   0,   0,
    14,  4,   12,  0,   0,   14,  9,   0,   0,   0,   9,   0,   14,  0,   0,
    10,  8,   11,  0,   0,   11,  10,  8,   0,   0,   11,  8,   1,   0,   0,
    0,   11,  10,  0,   0,   8,   1,   10,  0,   0,   10,  4,   5,   11,  0,
    5,   11,  10,  4,   0,   10,  0,   1,   11,  0,   1,   11,  10,  0,   0,
    10,  2,   11,  4,   0,   11,  4,   10,  2,   0,   10,  20,  19,  11,  0,
    19,  11,  10,  20,  0,   10,  6,   7,   11,  0,   7,   11,  10,  6,   0,
    16,  10,  0,   0,   0,   16,  3,   10,  6,   0,   10,  6,   16,  3,   0,
    20,  16,  10,  19,  0,   10,  19,  20,  16,  0,   16,  0,   10,  1,   0,
    10,  1,   16,  0,   0,   16,  6,   10,  7,   0,   10,  7,   16,  6,   0,
    10,  0,   15,  0,   0,   15,  3,   10,  6,   0,   10,  6,   15,  3,   0,
    15,  3,   10,  6,   0,   10,  6,   15,  3,   0,   15,  0,   10,  1,   0,
    10,  1,   15,  0,   0,   15,  6,   10,  7,   0,   10,  7,   15,  6,   0,
    15,  11,  10,  0,   0,   10,  15,  11,  0,   0,   15,  4,   10,  5,   0,
    10,  5,   15,  4,   0,   15,  2,   10,  4,   0,   10,  4,   15,  2,   0,
    20,  0,   19,  0,   0,   19,  0,   20,  1,   0,   20,  1,   19,  0,   0,
    19,  4,   20,  5,   0,   20,  5,   19,  4,   0,   19,  2,   20,  4,   0,
    20,  4,   19,  2,   0,   19,  6,   20,  7,   0,   20,  7,   19,  6,   0,
    21,  19,  20,  0,   0,   20,  21,  19,  0,   0,   20,  4,   10,  1,   0,
    10,  1,   20,  4,   0,   20,  4,   22,  5,   0,   22,  5,   20,  4,   0,
    20,  4,   16,  0,   0,   16,  0,   20,  4,   0,   20,  4,   15,  0,   0,
    15,  0,   20,  4,   0,   20,  4,   21,  5,   0,   21,  5,   20,  4,   0,
    20,  6,   16,  4,   0,   16,  4,   20,  6,   0,   20,  6,   19,  3,   0,
    19,  3,   20,  6,   0,   20,  2,   10,  0,   0,   10,  0,   20,  2,   0,
    20,  3,   16,  2,   0,   16,  2,   20,  3,   0,   20,  3,   10,  4,   0,
    10,  4,   20,  3,   0,   20,  3,   18,  0,   0,   10,  18,  17,  11,  0,
    17,  11,  10,  18,  0,   18,  19,  20,  17,  0,   20,  17,  18,  19,  0,
    20,  18,  16,  0,   0,   16,  20,  18,  0,   0,   18,  6,   17,  3,   0,
    17,  3,   18,  6,   0,   18,  16,  3,   0,   0,   18,  0,   16,  4,   0,
    16,  4,   18,  0,   0,   18,  2,   16,  3,   0,   16,  3,   18,  2,   0,
    17,  16,  4,   0,   0,   16,  4,   17,  0,   0,   22,  21,  0,   0,   0,
    21,  22,  0,   0,   0,   22,  19,  20,  0,   0,   20,  22,  19,  0,   0,
    22,  3,   8,   0,   4,   22,  1,   20,  0,   0,   20,  0,   22,  1,   0,
    22,  0,   21,  0,   0,   21,  0,   22,  0,   0,   22,  2,   8,   0,   0,
    22,  4,   10,  0,   0,   10,  0,   22,  4,   0,   22,  9,   10,  8,   0,
    10,  8,   22,  9,   0,   21,  0,   20,  0,   0,   21,  3,   10,  2,   0,
    10,  2,   21,  3,   0,   21,  3,   9,   0,   0,   21,  3,   8,   0,   4,
    21,  2,   8,   0,   0,   20,  23,  0,   0,   0,   24,  0,   23,  0,   0,
    23,  0,   24,  1,   0,   24,  1,   23,  0,   0,   23,  2,   24,  4,   0,
    24,  4,   23,  2,   0,   23,  4,   24,  5,   0,   24,  5,   23,  4,   0,
    23,  3,   24,  6,   0,   24,  6,   23,  3,   0,   23,  20,  24,  19,  0,
    24,  19,  23,  20,  0,   23,  6,   24,  7,   0,   24,  7,   23,  6,   0,
    23,  18,  24,  17,  0,   24,  17,  23,  18,  0,   23,  22,  24,  20,  0,
    24,  20,  23,  22,  0,   25,  0,   24,  0,   0,   18,  1,   17,  0,   0,
    17,  0,   18,  1,   0,   26,  24,  25,  0,   0,   25,  26,  24,  0,   0,
    24,  20,  25,  19,  0,   25,  19,  24,  20,  0,   24,  0,   20,  0,   0,
    20,  24,  0,   0,   0,   24,  0,   25,  1,   0,   25,  1,   24,  0,   0,
    24,  2,   28,  0,   0,   28,  0,   24,  2,   0,   24,  6,   32,  4,   0,
    32,  4,   24,  6,   0,   24,  18,  32,  16,  0,   32,  16,  24,  18,  0,
    32,  3,   28,  6,   0,   28,  6,   32,  3,   0,   32,  10,  20,  0,   0,
    10,  20,  32,  0,   0,   32,  28,  0,   0,   0,   28,  0,   32,  0,   0,
    33,  24,  3,   0,   0,   24,  3,   33,  0,   0,   24,  3,   25,  6,   0,
    25,  6,   24,  3,   0,   24,  3,   25,  6,   0,   25,  6,   24,  3,   0,
    24,  3,   28,  4,   0,   28,  4,   24,  3,   0,   33,  28,  4,   0,   0,
    28,  4,   33,  0,   0,   33,  25,  6,   0,   0,   25,  6,   33,  0,   0,
    34,  29,  0,   0,   0,   29,  34,  0,   0,   0,   28,  20,  11,  0,   0,
    20,  11,  28,  0,   0,   28,  0,   29,  1,   0,   29,  1,   28,  0,   0,
    28,  2,   29,  4,   0,   29,  4,   28,  2,   0,   28,  4,   29,  5,   0,
    29,  5,   28,  4,   0,   28,  3,   29,  6,   0,   29,  6,   28,  3,   0,
    20,  28,  29,  19,  0,   29,  19,  20,  28,  0,   28,  6,   29,  7,   0,
    29,  7,   28,  6,   0,   28,  18,  29,  17,  0,   29,  17,  28,  18,  0,
    29,  20,  8,   0,   0,   29,  0,   30,  1,   0,   30,  1,   29,  0,   0,
    29,  2,   30,  4,   0,   30,  4,   29,  2,   0,   20,  29,  30,  19,  0,
    30,  19,  20,  29,  0,   21,  8,   30,  0,   0,   30,  0,   20,  8,   0,
    20,  8,   30,  0,   0,   30,  0,   1,   31,  0,   1,   31,  30,  0,   0,
    30,  2,   21,  9,   0,   21,  9,   30,  2,   0,   30,  2,   31,  4,   0,
    31,  4,   30,  2,   0,   30,  4,   5,   31,  0,   5,   31,  30,  4,   0,
    30,  4,   15,  8,   0,   15,  8,   30,  4,   0,   22,  30,  25,  8,   0,
    25,  8,   22,  30,  0,   31,  4,   8,   1,   0,   0,   31,  22,  8,   0,
    22,  8,   0,   31,  0,   31,  2,   8,   0,   0,   31,  3,   8,   4,   0,
    26,  0,   25,  0,   0,   25,  27,  1,   0,   0,   25,  0,   26,  1,   0,
    26,  1,   25,  0,   0,   25,  2,   20,  11,  0,   20,  11,  25,  2,   0,
    25,  4,   26,  5,   0,   26,  5,   25,  4,   0,   25,  20,  26,  19,  0,
    26,  19,  25,  20,  0,   25,  3,   26,  6,   0,   26,  6,   25,  3,   0,
    25,  18,  26,  17,  0,   26,  17,  25,  18,  0,   22,  20,  25,  0,   0,
    25,  0,   22,  20,  0,   27,  0,   26,  0,   0,   26,  3,   27,  6,   0,
    27,  6,   26,  3,   0,   26,  3,   10,  11,  0,   10,  11,  26,  3,   0,
    26,  20,  27,  19,  0,   27,  19,  26,  20,  0,   26,  0,   27,  1,   0,
    27,  1,   26,  0,   0,   26,  4,   27,  5,   0,   27,  5,   26,  4,   0,
    27,  3,   31,  4,   0,   31,  4,   27,  3,   0,   27,  2,   21,  8,   0,
    21,  8,   27,  2,   0,   27,  2,   0,   31,  0,   0,   31,  27,  2,   0,
    27,  4,   30,  0,   0,   30,  0,   27,  4,   0,   27,  4,   20,  8,   0,
    20,  8,   27,  4,   0,   35,  20,  29,  0,   0,   35,  4,   36,  5,   0,
    36,  5,   35,  4,   0,   35,  0,   36,  1,   0,   36,  1,   35,  0,   0,
    35,  2,   36,  4,   0,   36,  4,   35,  2,   0,   20,  35,  36,  19,  0,
    36,  19,  20,  35,  0,   35,  3,   36,  6,   0,   36,  6,   35,  3,   0,
    35,  6,   36,  7,   0,   36,  7,   35,  6,   0,   35,  18,  36,  17,  0,
    36,  17,  35,  18,  0,   36,  30,  20,  0,   0,   30,  20,  36,  0,   0,
    37,  26,  11,  0,   0,   26,  11,  37,  0,   0,   37,  0,   38,  1,   0,
    38,  1,   37,  0,   0,   37,  2,   38,  4,   0,   38,  4,   37,  2,   0,
    37,  4,   38,  5,   0,   38,  5,   37,  4,   0,   37,  3,   38,  6,   0,
    38,  6,   37,  3,   0,   37,  6,   38,  7,   0,   38,  7,   37,  6,   0,
    37,  20,  38,  19,  0,   38,  19,  37,  20,  0,   26,  37,  38,  25,  0,
    38,  25,  26,  37,  0,   37,  18,  38,  17,  0,   38,  17,  37,  18,  0,
    38,  26,  8,   0,   0,   26,  8,   38,  0,   0,   39,  24,  8,   0,   0,
    24,  8,   39,  0,   0,   40,  41,  0,   0,   0,   41,  0,   40,  0,   0,
    0,   40,  24,  20,  0,   24,  20,  0,   40,  0,   40,  3,   41,  6,   0,
    41,  6,   40,  3,   0,   40,  4,   41,  5,   0,   41,  5,   40,  4,   0,
    40,  2,   35,  0,   0,   35,  0,   40,  2,   0,   40,  2,   20,  28,  0,
    20,  28,  40,  2,   0,   41,  26,  20,  0,   0,   26,  20,  41,  0,   0,
    41,  42,  0,   0,   0,   42,  0,   41,  0,   0,   41,  43,  0,   0,   0,
    43,  0,   41,  0,   0,   41,  44,  0,   0,   0,   44,  0,   41,  0,   0,
    41,  2,   24,  11,  0,   24,  11,  41,  2,   0,   41,  2,   30,  20,  0,
    41,  2,   54,  0,   0,   41,  2,   42,  4,   0,   42,  4,   41,  2,   0,
    41,  2,   43,  4,   0,   43,  4,   41,  2,   0,   41,  2,   44,  4,   0,
    44,  4,   41,  2,   0,   41,  4,   42,  5,   0,   42,  5,   41,  4,   0,
    41,  4,   43,  5,   0,   43,  5,   41,  4,   0,   41,  4,   44,  5,   0,
    44,  5,   41,  4,   0,   41,  6,   42,  7,   0,   42,  7,   41,  6,   0,
    41,  6,   43,  7,   0,   43,  7,   41,  6,   0,   41,  6,   44,  7,   0,
    44,  7,   41,  6,   0,   41,  0,   42,  1,   0,   42,  1,   41,  0,   0,
    41,  0,   43,  1,   0,   43,  1,   41,  0,   0,   41,  0,   44,  1,   0,
    44,  1,   41,  0,   0,   41,  0,   25,  20,  0,   25,  20,  41,  0,   0,
    41,  3,   42,  6,   0,   42,  6,   41,  3,   0,   41,  3,   43,  6,   0,
    43,  6,   41,  3,   0,   41,  3,   44,  6,   0,   44,  6,   41,  3,   0,
    41,  20,  42,  19,  0,   42,  19,  41,  20,  0,   41,  20,  43,  19,  0,
    43,  19,  41,  20,  0,   41,  20,  44,  19,  0,   44,  19,  41,  20,  0,
    24,  41,  23,  42,  0,   23,  42,  24,  41,  0,   41,  18,  42,  17,  0,
    42,  17,  41,  18,  0,   42,  27,  20,  0,   0,   27,  20,  42,  0,   0,
    42,  46,  0,   0,   0,   46,  0,   42,  0,   0,   42,  6,   49,  4,   0,
    49,  4,   42,  6,   0,   42,  18,  49,  16,  0,   49,  16,  42,  18,  0,
    42,  0,   46,  1,   0,   46,  1,   42,  0,   0,   42,  20,  46,  19,  0,
    46,  19,  42,  20,  0,   24,  42,  23,  46,  0,   23,  46,  24,  42,  0,
    24,  42,  25,  41,  0,   25,  41,  24,  42,  0,   26,  42,  25,  46,  0,
    25,  46,  26,  42,  0,   46,  41,  42,  0,   0,   42,  46,  41,  0,   0,
    42,  3,   46,  6,   0,   46,  6,   42,  3,   0,   42,  3,   37,  4,   0,
    37,  4,   42,  3,   0,   42,  3,   27,  10,  4,   43,  27,  20,  0,   0,
    27,  20,  43,  0,   0,   43,  45,  0,   0,   0,   45,  0,   43,  0,   0,
    43,  3,   28,  11,  0,   28,  11,  43,  3,   0,   43,  0,   46,  1,   0,
    46,  1,   43,  0,   0,   43,  20,  46,  19,  0,   46,  19,  43,  20,  0,
    44,  27,  20,  0,   0,   27,  20,  44,  0,   0,   44,  46,  0,   0,   0,
    46,  0,   44,  0,   0,   44,  45,  0,   0,   0,   45,  0,   44,  0,   0,
    44,  3,   46,  6,   0,   46,  6,   44,  3,   0,   44,  3,   36,  2,   0,
    36,  2,   44,  3,   0,   44,  3,   10,  29,  0,   10,  29,  44,  3,   0,
    44,  0,   45,  1,   0,   45,  1,   44,  0,   0,   44,  20,  45,  19,  0,
    45,  19,  44,  20,  0,   46,  47,  0,   0,   0,   47,  0,   46,  0,   0,
    46,  45,  0,   0,   0,   45,  46,  0,   0,   0,   46,  3,   47,  6,   0,
    47,  6,   46,  3,   0,   46,  6,   21,  30,  4,   21,  30,  4,   46,  6,
    46,  4,   30,  20,  0,   30,  20,  46,  4,   0,   46,  4,   47,  5,   0,
    47,  5,   46,  4,   0,   46,  2,   25,  8,   0,   25,  8,   46,  2,   0,
    46,  2,   27,  10,  0,   27,  10,  46,  2,   0,   46,  0,   47,  1,   0,
    47,  1,   46,  0,   0,   46,  20,  47,  19,  0,   47,  19,  46,  20,  0,
    46,  42,  47,  41,  0,   47,  41,  46,  42,  0,   45,  47,  0,   0,   0,
    47,  0,   45,  0,   0,   45,  3,   21,  31,  4,   21,  31,  4,   45,  3,
    45,  3,   47,  6,   0,   47,  6,   45,  3,   0,   45,  6,   25,  8,   4,
    25,  8,   4,   45,  6,   45,  4,   47,  5,   0,   47,  5,   45,  4,   0,
    45,  4,   30,  20,  0,   30,  20,  45,  4,   0,   45,  2,   26,  11,  0,
    26,  11,  45,  2,   0,   45,  2,   20,  31,  0,   20,  31,  45,  2,   0,
    45,  2,   21,  0,   31,  21,  0,   31,  45,  2,   45,  2,   47,  4,   0,
    47,  4,   45,  2,   0,   45,  0,   47,  1,   0,   47,  1,   45,  0,   0,
    45,  20,  47,  19,  0,   47,  19,  45,  20,  0,   26,  45,  25,  47,  0,
    25,  47,  26,  45,  0,   45,  42,  47,  41,  0,   47,  41,  45,  42,  0,
    47,  4,   48,  5,   0,   48,  5,   47,  4,   0,   47,  3,   30,  11,  0,
    30,  11,  47,  3,   0,   48,  3,   31,  11,  0,   31,  11,  48,  3,   0,
    46,  6,   25,  8,   4,   25,  8,   4,   46,  6,   46,  6,   47,  7,   0,
    47,  7,   46,  6,   0,   27,  20,  45,  0,   0,   45,  0,   27,  20,  0,
    27,  20,  46,  0,   0,   46,  0,   27,  20,  0,   47,  0,   48,  1,   0,
    48,  1,   47,  0,   0,   48,  4,   27,  11,  0,   27,  11,  48,  4,   0,
    48,  3,   8,   0,   31,  54,  4,   24,  9,   0,   54,  0,   24,  8,   0,
    54,  2,   28,  8,   0,   52,  40,  3,   0,   0,   40,  3,   52,  0,   0,
    52,  50,  0,   0,   0,   50,  52,  0,   0,   0,   50,  41,  6,   0,   0,
    41,  6,   50,  0,   0,   51,  50,  3,   0,   0,   50,  3,   51,  0,   0,
    51,  53,  4,   0,   0,   53,  4,   51,  0,   0,   53,  10,  29,  4,   0,
    49,  37,  0,   0,   0,   37,  0,   49,  0,   0,   49,  26,  10,  0,   0,
    26,  10,  49,  0,   0,   49,  3,   37,  6,   0,   37,  6,   49,  3,   0,
    52,  41,  6,   0,   0,   41,  6,   52,  0,   0,   55,  41,  20,  0,   0,
    41,  20,  55,  0,   0,   6,   57,  4,   63,  0,   4,   63,  6,   57,  0,
    18,  57,  16,  63,  0,   16,  63,  18,  57,  0,   56,  0,   58,  0,   0,
    0,   58,  56,  0,   0,   56,  41,  20,  0,   0,   41,  20,  56,  0,   0,
    57,  0,   58,  0,   0,   0,   58,  57,  0,   0,   3,   57,  6,   58,  0,
    6,   58,  3,   57,  0,   56,  3,   6,   58,  0,   6,   58,  56,  3,   0,
    61,  56,  3,   0,   0,   56,  3,   61,  0,   0,   60,  3,   57,  0,   0,
    3,   57,  60,  0,   0,   41,  60,  42,  64,  0,   42,  64,  41,  60,  0,
    58,  60,  59,  64,  0,   59,  64,  58,  60,  0,   25,  60,  26,  64,  0,
    26,  64,  25,  60,  0,   19,  60,  20,  64,  0,   20,  64,  19,  60,  0,
    1,   60,  0,   64,  0,   0,   64,  1,   60,  0,   23,  60,  24,  64,  0,
    24,  64,  23,  60,  0,   28,  60,  29,  64,  0,   29,  64,  28,  60,  0,
    37,  60,  38,  64,  0,   38,  64,  37,  60,  0,   6,   60,  3,   64,  0,
    3,   64,  6,   60,  0,   7,   60,  6,   64,  0,   6,   64,  7,   60,  0,
    10,  60,  11,  64,  0,   11,  64,  10,  60,  0,   18,  60,  16,  3,   63,
    33,  60,  32,  3,   63,  60,  3,   63,  0,   0,   6,   60,  3,   4,   63,
    20,  60,  16,  63,  0,   16,  63,  20,  60,  0,   24,  60,  32,  63,  0,
    32,  63,  24,  60,  0,   57,  60,  63,  0,   0,   63,  57,  60,  0,   0,
    42,  60,  49,  63,  0,   49,  63,  42,  60,  0,   59,  60,  65,  63,  0,
    65,  63,  59,  60,  0,   64,  4,   63,  0,   0,   4,   63,  64,  0,   0,
    63,  20,  35,  0,   0,   20,  35,  63,  0,   0,   66,  0,   67,  0,   0,
    0,   67,  66,  0,   0,   66,  11,  40,  0,   0,   11,  40,  66,  0,   0,
    6,   66,  7,   67,  0,   7,   67,  6,   66,  0,   66,  4,   5,   67,  0,
    5,   67,  66,  4,   0,   61,  62,  0,   0,   0,   62,  61,  0,   0,   0,
    61,  6,   58,  0,   0,   6,   58,  61,  0,   0,   60,  6,   58,  0,   0,
    6,   58,  60,  0,   0,   68,  62,  3,   0,   0,   62,  3,   68,  0,   0,
    68,  69,  4,   0,   0,   69,  4,   68,  0,   0,   69,  39,  10,  4,   0,
    62,  41,  10,  4,   0,   58,  44,  20,  0,   0,   44,  20,  58,  0,   0,
    58,  0,   59,  0,   0,   0,   59,  58,  0,   0,   0,   58,  41,  20,  0,
    41,  20,  0,   58,  0,   0,   58,  1,   59,  0,   1,   59,  0,   58,  0,
    58,  2,   30,  20,  0,   58,  2,   0,   75,  0,   58,  2,   59,  4,   0,
    59,  4,   58,  2,   0,   20,  58,  19,  59,  0,   19,  59,  20,  58,  0,
    6,   58,  7,   59,  0,   7,   59,  6,   58,  0,   58,  13,  12,  59,  0,
    12,  59,  58,  13,  0,   58,  3,   6,   59,  0,   6,   59,  58,  3,   0,
    42,  58,  41,  59,  0,   41,  59,  42,  58,  0,   43,  58,  41,  59,  0,
    41,  59,  43,  58,  0,   44,  58,  41,  59,  0,   41,  59,  44,  58,  0,
    58,  4,   5,   59,  0,   5,   59,  58,  4,   0,   58,  2,   11,  40,  0,
    11,  40,  58,  2,   0,   18,  58,  17,  59,  0,   17,  59,  18,  58,  0,
    59,  3,   72,  4,   0,   72,  4,   59,  3,   0,   59,  3,   10,  36,  0,
    10,  36,  59,  3,   0,   59,  3,   46,  10,  4,   59,  2,   0,   72,  0,
    0,   72,  59,  2,   0,   59,  46,  20,  0,   0,   46,  20,  59,  0,   0,
    18,  59,  16,  65,  0,   16,  65,  18,  59,  0,   6,   59,  65,  4,   0,
    65,  4,   6,   59,  0,   65,  44,  10,  0,   0,   44,  10,  65,  0,   0,
    65,  71,  0,   0,   0,   71,  65,  0,   0,   0,   65,  0,   72,  0,   0,
    0,   72,  65,  0,   0,   1,   71,  0,   70,  0,   0,   70,  1,   71,  0,
    6,   71,  70,  3,   0,   70,  3,   6,   71,  0,   10,  71,  11,  70,  0,
    11,  70,  10,  71,  0,   71,  58,  59,  70,  0,   59,  70,  71,  58,  0,
    70,  0,   71,  0,   0,   0,   71,  70,  0,   0,   6,   70,  7,   71,  0,
    7,   71,  6,   70,  0,   71,  46,  15,  0,   0,   46,  15,  71,  0,   0,
    65,  3,   6,   72,  0,   6,   72,  65,  3,   0,   6,   65,  7,   72,  0,
    7,   72,  6,   65,  0,   20,  65,  19,  72,  0,   19,  72,  20,  65,  0,
    65,  2,   72,  4,   0,   72,  4,   65,  2,   0,   65,  4,   5,   72,  0,
    5,   72,  65,  4,   0,   0,   65,  1,   72,  0,   1,   72,  0,   65,  0,
    72,  4,   5,   73,  0,   5,   73,  72,  4,   0,   6,   72,  7,   73,  0,
    7,   73,  6,   72,  0,   20,  72,  19,  73,  0,   19,  73,  20,  72,  0,
    72,  2,   73,  4,   0,   73,  4,   72,  2,   0,   72,  3,   6,   73,  0,
    6,   73,  72,  3,   0,   0,   72,  1,   73,  0,   1,   73,  0,   72,  0,
    73,  44,  8,   0,   0,   44,  8,   73,  0,   0,   6,   67,  4,   74,  0,
    4,   74,  6,   67,  0,   74,  35,  11,  0,   0,   35,  11,  74,  0,   0,
    67,  0,   72,  0,   0,   0,   72,  67,  0,   0,   67,  0,   75,  0,   0,
    0,   75,  67,  0,   0,   1,   67,  0,   66,  0,   0,   66,  1,   67,  0,
    76,  65,  4,   0,   0,   65,  4,   76,  0,   0,   70,  0,   65,  0,   0,
    0,   65,  70,  0,   0,   1,   65,  0,   70,  0,   0,   70,  1,   65,  0,
    70,  59,  4,   0,   0,   59,  4,   70,  0,   0,   10,  65,  11,  70,  0,
    11,  70,  10,  65,  0,   10,  67,  11,  66,  0,   11,  66,  10,  67,  0,
    58,  67,  66,  59,  0,   66,  59,  58,  67,  0,   75,  4,   9,   40,  0,
    9,   40,  75,  4,   0,   77,  3,   67,  0,   0,   3,   67,  77,  0,   0,
    3,   67,  6,   72,  0,   6,   72,  3,   67,  0,   3,   67,  35,  8,   4,
    6,   67,  66,  3,   0,   66,  3,   6,   67,  0,   20,  67,  19,  72,  0,
    19,  72,  20,  67,  0,   65,  58,  59,  70,  0,   59,  70,  65,  58,  0,
    6,   71,  78,  10,  4,   70,  78,  20,  0,   0,   78,  20,  70,  0,   0,
    78,  3,   10,  15,  8,   78,  27,  15,  0,   0,   27,  15,  78,  0,   0,
    78,  46,  4,   0,   0,   46,  4,   78,  0,   0,   79,  20,  58,  0,   0,
    20,  58,  79,  0,   0,   79,  80,  0,   0,   0,   80,  0,   79,  0,   0,
    79,  81,  0,   0,   0,   81,  0,   79,  0,   0,   79,  3,   80,  6,   0,
    80,  6,   79,  3,   0,   79,  3,   81,  6,   0,   81,  6,   79,  3,   0,
    80,  20,  59,  0,   0,   20,  59,  80,  0,   0,   80,  24,  44,  0,   0,
    24,  44,  80,  0,   0,   81,  20,  59,  0,   0,   20,  59,  81,  0,   0,
    80,  4,   10,  55,  0,   10,  55,  80,  4,   0,   81,  4,   28,  40,  0,
    28,  40,  81,  4,   0,   82,  4,   10,  56,  0,   10,  56,  82,  4,   0,
    80,  2,   11,  55,  0,   11,  55,  80,  2,   0,   80,  2,   29,  40,  0,
    29,  40,  80,  2,   0,   80,  2,   11,  56,  0,   11,  56,  80,  2,   0,
    80,  0,   83,  1,   0,   83,  1,   80,  0,   0,   80,  4,   83,  5,   0,
    83,  5,   80,  4,   0,   80,  20,  83,  19,  0,   83,  19,  80,  20,  0,
    80,  6,   83,  7,   0,   83,  7,   80,  6,   0,   80,  18,  83,  17,  0,
    83,  17,  80,  18,  0,   81,  0,   83,  1,   0,   83,  1,   81,  0,   0,
    81,  0,   84,  1,   0,   84,  1,   81,  0,   0,   81,  4,   83,  5,   0,
    83,  5,   81,  4,   0,   81,  4,   84,  5,   0,   84,  5,   81,  4,   0,
    81,  20,  83,  19,  0,   83,  19,  81,  20,  0,   81,  20,  84,  19,  0,
    84,  19,  81,  20,  0,   81,  6,   83,  7,   0,   83,  7,   81,  6,   0,
    81,  6,   84,  7,   0,   84,  7,   81,  6,   0,   81,  18,  83,  17,  0,
    83,  17,  81,  18,  0,   81,  18,  84,  17,  0,   84,  17,  81,  18,  0,
    82,  0,   84,  1,   0,   84,  1,   82,  0,   0,   82,  4,   84,  5,   0,
    84,  5,   82,  4,   0,   82,  20,  84,  19,  0,   84,  19,  82,  20,  0,
    82,  6,   84,  7,   0,   84,  7,   82,  6,   0,   82,  18,  84,  17,  0,
    84,  17,  82,  18,  0,   83,  6,   85,  4,   0,   85,  4,   83,  6,   0,
    83,  18,  85,  16,  0,   85,  16,  83,  18,  0,   83,  33,  85,  32,  0,
    85,  32,  83,  33,  0,   84,  6,   86,  4,   0,   86,  4,   84,  6,   0,
    84,  18,  86,  16,  0,   86,  16,  84,  18,  0,   33,  84,  32,  86,  0,
    32,  86,  33,  84,  0,   85,  44,  28,  0,   0,   44,  28,  85,  0,   0,
    86,  26,  35,  0,   0,   26,  35,  86,  0,   0,   87,  37,  0,   0,   0,
    37,  0,   87,  0,   0,   87,  54,  0,   0,   0,   54,  0,   87,  0,   0,
    89,  4,   28,  56,  0,   89,  2,   29,  56,  0,   88,  84,  20,  0,   0,
    84,  20,  88,  0,   0,   90,  2,   41,  28,  0,   41,  28,  90,  2,   0,
    91,  45,  20,  0,   0,   45,  20,  91,  0,   0,   92,  40,  58,  0,   0,
    40,  58,  92,  0,   0,   92,  0,   93,  0,   0,   0,   93,  92,  0,   0,
    92,  0,   94,  0,   0,   0,   94,  92,  0,   0,   3,   92,  6,   93,  0,
    6,   93,  3,   92,  0,   3,   92,  6,   94,  0,   6,   94,  3,   92,  0,
    93,  40,  59,  0,   0,   40,  59,  93,  0,   0,   4,   93,  35,  56,  0,
    4,   94,  35,  56,  0,   2,   93,  89,  10,  0,   2,   94,  35,  58,  0,
    0,   93,  1,   95,  0,   1,   95,  0,   93,  0,   4,   93,  5,   95,  0,
    5,   95,  4,   93,  0,   20,  93,  19,  95,  0,   19,  95,  20,  93,  0,
    6,   93,  7,   95,  0,   7,   95,  6,   93,  0,   18,  93,  17,  95,  0,
    17,  95,  18,  93,  0,   0,   94,  1,   95,  0,   1,   95,  0,   94,  0,
    0,   94,  1,   96,  0,   1,   96,  0,   94,  0,   4,   94,  5,   95,  0,
    5,   95,  4,   94,  0,   4,   94,  5,   96,  0,   5,   96,  4,   94,  0,
    95,  99,  20,  0,   0,   99,  20,  95,  0,   0,   6,   96,  4,   97,  0,
    4,   97,  6,   96,  0,   18,  96,  16,  97,  0,   16,  97,  18,  96,  0,
    33,  96,  32,  97,  0,   32,  97,  33,  96,  0,   97,  35,  91,  0,   0,
    35,  91,  97,  0,   0,   98,  3,   92,  0,   0,   3,   92,  98,  0,   0,
    98,  6,   93,  0,   0,   6,   93,  98,  0,   0,   98,  6,   94,  0,   0,
    6,   94,  98,  0,   0,   99,  4,   100, 5,   0,   100, 5,   99,  4,   0,
    99,  4,   101, 5,   0,   101, 5,   99,  4,   0,   99,  6,   100, 7,   0,
    100, 7,   99,  6,   0,   99,  6,   101, 7,   0,   101, 7,   99,  6,   0,
    99,  18,  100, 17,  0,   100, 17,  99,  18,  0,   99,  18,  101, 17,  0,
    101, 17,  99,  18,  0,   100, 46,  43,  0,   0,   46,  43,  100, 0,   0,
    101, 6,   26,  72,  4,   102, 20,  58,  0,   0,   20,  58,  102, 0,   0,
    103, 102, 3,   0,   0,   102, 3,   103, 0,   0,   103, 104, 0,   0,   0,
    104, 103, 0,   0,   0,   104, 10,  58,  4,   0,   104, 20,  76,  0,   0,
    20,  76,  104, 0,   0,   6,   105, 7,   106, 0,   7,   106, 6,   105, 0,
    20,  105, 19,  106, 0,   19,  106, 20,  105, 0,   2,   105, 4,   106, 0,
    4,   106, 2,   105, 0,   3,   105, 6,   106, 0,   6,   106, 3,   105, 0,
    4,   105, 5,   106, 0,   5,   106, 4,   105, 0,   106, 8,   57,  0,   0,
    8,   57,  106, 0,   0,   107, 108, 0,   0,   0,   108, 0,   107, 0,   0,
    107, 109, 0,   0,   0,   109, 0,   107, 0,   0,   107, 110, 0,   0,   0,
    110, 0,   107, 0,   0,   107, 111, 0,   0,   0,   111, 0,   107, 0,   0,
    107, 20,  92,  0,   0,   20,  92,  107, 0,   0,   107, 56,  57,  0,   0,
    56,  57,  107, 0,   0,   107, 40,  102, 0,   0,   40,  102, 107, 0,   0,
    0,   107, 108, 1,   0,   108, 1,   0,   107, 0,   0,   107, 109, 1,   0,
    109, 1,   0,   107, 0,   0,   107, 110, 1,   0,   110, 1,   0,   107, 0,
    0,   107, 111, 1,   0,   111, 1,   0,   107, 0,   107, 2,   108, 4,   0,
    108, 4,   107, 2,   0,   107, 2,   109, 4,   0,   109, 4,   107, 2,   0,
    107, 2,   110, 4,   0,   110, 4,   107, 2,   0,   107, 2,   111, 4,   0,
    111, 4,   107, 2,   0,   107, 4,   108, 5,   0,   107, 4,   109, 5,   0,
    109, 5,   107, 4,   0,   107, 4,   110, 5,   0,   110, 5,   107, 4,   0,
    107, 4,   111, 5,   0,   111, 5,   107, 4,   0,   20,  107, 108, 19,  0,
    108, 19,  20,  107, 0,   20,  107, 109, 19,  0,   109, 19,  20,  107, 0,
    20,  107, 110, 19,  0,   110, 19,  20,  107, 0,   20,  107, 19,  111, 0,
    19,  111, 20,  107, 0,   6,   107, 108, 7,   0,   6,   107, 109, 7,   0,
    6,   107, 110, 7,   0,   6,   107, 111, 7,   0,   107, 3,   108, 6,   0,
    108, 6,   107, 3,   0,   107, 3,   109, 6,   0,   109, 6,   107, 3,   0,
    107, 3,   110, 6,   0,   110, 6,   107, 3,   0,   107, 3,   111, 6,   0,
    111, 6,   107, 3,   0,   24,  107, 108, 23,  0,   108, 23,  24,  107, 0,
    24,  107, 109, 23,  0,   109, 23,  24,  107, 0,   24,  107, 23,  110, 0,
    23,  110, 24,  107, 0,   24,  107, 23,  111, 0,   23,  111, 24,  107, 0,
    26,  107, 108, 25,  0,   108, 25,  26,  107, 0,   26,  107, 109, 25,  0,
    109, 25,  26,  107, 0,   26,  107, 25,  110, 0,   25,  110, 26,  107, 0,
    26,  107, 25,  111, 0,   25,  111, 26,  107, 0,   20,  93,  108, 0,   0,
    108, 20,  93,  0,   0,   58,  56,  108, 0,   0,   108, 58,  56,  0,   0,
    20,  94,  109, 0,   0,   109, 20,  94,  0,   0,   58,  57,  110, 0,   0,
    110, 58,  57,  0,   0,   41,  102, 111, 0,   0,   111, 41,  102, 0,   0,
    109, 0,   112, 0,   0,   0,   112, 109, 0,   0,   110, 0,   112, 0,   0,
    0,   112, 110, 0,   0,   110, 0,   113, 0,   0,   0,   113, 110, 0,   0,
    110, 3,   6,   112, 0,   6,   112, 110, 3,   0,   110, 3,   6,   113, 0,
    6,   113, 110, 3,   0,   111, 0,   113, 0,   0,   0,   113, 111, 0,   0,
    108, 111, 0,   0,   0,   111, 108, 0,   0,   0,   108, 110, 0,   0,   0,
    110, 108, 0,   0,   0,   111, 3,   6,   113, 0,   6,   113, 111, 3,   0,
    112, 4,   35,  102, 0,   18,  107, 108, 17,  0,   18,  107, 109, 17,  0,
    18,  107, 110, 17,  0,   18,  107, 17,  111, 0,   116, 107, 108, 118, 0,
    108, 118, 116, 107, 0,   116, 107, 109, 118, 0,   109, 118, 116, 107, 0,
    116, 107, 110, 118, 0,   110, 118, 116, 107, 0,   116, 107, 118, 111, 0,
    118, 111, 116, 107, 0,   107, 13,  108, 12,  0,   108, 12,  107, 13,  0,
    107, 13,  109, 12,  0,   109, 12,  107, 13,  0,   107, 13,  110, 12,  0,
    110, 12,  107, 13,  0,   107, 13,  111, 12,  0,   111, 12,  107, 13,  0,
    71,  107, 108, 70,  0,   108, 70,  71,  107, 0,   71,  107, 109, 70,  0,
    109, 70,  71,  107, 0,   71,  107, 110, 70,  0,   110, 70,  71,  107, 0,
    71,  107, 111, 70,  0,   111, 70,  71,  107, 0,   114, 108, 3,   0,   0,
    108, 3,   114, 0,   0,   115, 109, 3,   0,   0,   109, 3,   115, 0,   0,
    116, 110, 3,   0,   0,   110, 3,   116, 0,   0,   117, 111, 3,   0,   0,
    111, 3,   117, 0,   0,   110, 116, 119, 0,   0,   119, 110, 116, 0,   0,
    110, 6,   119, 4,   0,   119, 4,   110, 6,   0,   110, 18,  119, 16,  0,
    119, 16,  110, 18,  0,   116, 6,   118, 3,   0,   118, 3,   116, 6,   0,
    116, 7,   118, 6,   0,   118, 6,   116, 7,   0,   116, 18,  119, 16,  3,
    116, 119, 3,   0,   0,   118, 119, 4,   0,   0,   119, 4,   118, 0,   0,
    119, 35,  102, 0,   0,   35,  102, 119, 0,   0,   114, 120, 0,   0,   0,
    114, 121, 0,   0,   0,   114, 122, 0,   0,   0,   115, 123, 0,   0,   0,
    115, 124, 0,   0,   0,   116, 125, 0,   0,   0,   117, 127, 0,   0,   0,
    117, 126, 0,   0,   0,   115, 6,   112, 0,   0,   116, 6,   112, 0,   0,
    116, 6,   113, 0,   0,   117, 6,   113, 0,   0,   121, 128, 4,   0,   0,
    122, 129, 4,   0,   0,   123, 128, 4,   0,   0,   124, 130, 4,   0,   0,
    125, 129, 4,   0,   0,   127, 130, 4,   0,   0,   126, 6,   113, 0,   0,
    6,   113, 126, 0,   0,   120, 10,  4,   93,  0,   121, 10,  4,   94,  0,
    123, 66,  58,  4,   0,   124, 41,  4,   105, 0,   120, 76,  57,  0,   0,
    76,  57,  120, 0,   0,   131, 121, 3,   0,   0,   121, 3,   131, 0,   0,
    132, 123, 3,   0,   0,   123, 3,   132, 0,   0,   133, 124, 3,   0,   0,
    124, 3,   133, 0,   0,   134, 125, 3,   0,   0,   125, 3,   134, 0,   0,
    135, 127, 3,   0,   0,   127, 3,   135, 0,   0,   131, 136, 4,   0,   0,
    132, 137, 4,   0,   0,   133, 138, 4,   0,   0,   135, 139, 4,   0,   0,
    128, 4,   5,   11,  94,  129, 4,   5,   58,  67,  129, 4,   10,  5,   96,
    130, 4,   41,  5,   106, 6,   128, 7,   11,  94,  6,   129, 7,   58,  67,
    6,   129, 10,  7,   96,  6,   130, 41,  7,   106, 136, 66,  4,   67,  0,
    137, 10,  140, 4,   0,   138, 10,  4,   141, 0,   139, 87,  4,   105, 0,
    140, 75,  40,  0,   0,   75,  40,  140, 0,   0,   141, 54,  57,  0,   0,
    54,  57,  141, 0,   0,   5,   71,  70,  4,   0,   70,  4,   5,   71,  0,
    19,  71,  20,  70,  0,   20,  70,  19,  71,  0,   41,  71,  42,  70,  0,
    42,  70,  41,  71,  0,   28,  71,  29,  70,  0,   29,  70,  28,  71,  0,
    42,  10,  41,  11,  0,   41,  11,  42,  10,  0};
  const int nuv[NUM_GAS_REACTIONS * 5] = {
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 2,  0, 0, -2, 1,  1, 0, 0,
    -1, 2,  0,  0, 0, -2, 1,  0, 0, 0, -1, 2,  0,  0, 0, -2, 1,  0, 0, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, -1, 1,  0, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 2, 0, 0,
    -2, 1,  1,  0, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 2, 0, 0, -2, 1,  1,  0, 0, -1, -1, 2, 0, 0,
    -2, 1,  1,  0, 0, -1, 2,  0, 0, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  0, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, 1,  1, 0, 0,
    -1, -1, 1,  0, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 1,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, -1, 2,  0, 0, -2, 1,  1, 0, 0, -2, 2,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, -1, 1,  0, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, 1,  1, 0, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  0, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 2, 0, 0, -2, 1,  1,  0, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 0, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 2,  0, 0, -2, 1,  1, 0, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  0, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 2, 0, 0,
    -2, 1,  1,  0, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -2, 2,  1, 0, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, 1,  0,  0, 0, -1, 1,  0, 0, 0,
    -1, -1, 2,  0, 0, -2, 1,  1, 0, 0, -1, -1, 1,  1, 1, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 2, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  0, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 2, 0,
    -1, -1, 1,  1, 1, -1, -1, 1, 2, 0, -2, 1,  0,  0, 0, -1, -1, 1, 0, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  0, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 2, 0, 0,
    -2, 1,  1,  0, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 2, 0, 0,
    -2, 1,  1,  0, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, 1,  1, 0, 0,
    -1, -1, 1,  0, 0, -1, 1,  1, 0, 0, -1, -1, 1,  0, 0, -1, 1,  1, 0, 0,
    -1, -1, 1,  0, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, 1,  1, 0, 0,
    -1, -1, 1,  0, 0, -1, 1,  1, 0, 0, -1, -1, 1,  0, 0, -1, 1,  0, 0, 0,
    -1, 1,  0,  0, 0, -1, 1,  1, 0, 0, -1, -1, 1,  0, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, 1,  1, 0, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  0, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 2, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 2,  1, 0, -1, -1, 2, 1, 0,
    -1, -1, 1,  0, 0, -1, 1,  1, 0, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  0, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, 1,  1, 0, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 1, -1, -1, 1, 2, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 2,  0, 0, -2, 1,  1, 0, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 1, -1, 1,  1, 0, 0,
    -1, -1, 1,  0, 0, -1, 1,  1, 0, 0, -1, -1, 1,  0, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, 1,  1, 0, 0, -1, -1, 1,  0, 0, -1, 1,  1, 0, 0,
    -1, -1, 1,  0, 0, -1, 1,  1, 0, 0, -1, -1, 1,  0, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, 1,  1, 0, 0, -1, -1, 1,  0, 0, -1, 1,  0, 0, 0,
    -1, 1,  0,  0, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 1,
    -1, -1, -1, 1, 1, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, 1,  1, 0, 0,
    -1, -1, 1,  0, 0, -1, -1, 1, 1, 1, -1, -1, -1, 1, 1, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 1, -1, -1, -1, 1, 1, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 1,
    -1, -1, -1, 1, 1, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 1, -1, -1, -1, 1, 1, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 1, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, 1,  1, 0, 0, -1, -1, 1,  0, 0, -1, 1,  0, 0, 0,
    -1, 1,  0,  0, 0, -1, 1,  1, 0, 0, -1, -1, 1,  0, 0, -1, 1,  1, 0, 0,
    -1, -1, 1,  0, 0, -1, 1,  1, 0, 0, -1, -1, 1,  0, 0, -1, 1,  1, 1, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 1, -1, -1, 1, 1, 1,
    -2, 1,  2,  0, 0, -1, -1, 1, 1, 1, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 2,  0, 0, -2, 1,  1, 0, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, 1,  0,  0, 0, -1, 1,  0, 0, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, 1,  1,  1, 0, -1, 1,  1, 1, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  2, 0, -1, -1, 2, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 1, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, 1,  1, 0, 0,
    -1, -1, 1,  0, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, 1,  1, 0, 0, -1, -1, 1,  0, 0, -1, 1,  0, 0, 0,
    -1, 1,  0,  0, 0, -1, 1,  1, 0, 0, -1, -1, 1,  0, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, 1,  1, 0, 0,
    -1, -1, 1,  0, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, 1,  1, 0, 0,
    -1, -1, 1,  0, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, 1,  1, 0, 0, -1, -1, 1,  0, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, 1,  1, 0, 0, -1, -1, 1,  0, 0, -1, 1,  1, 0, 0,
    -1, -1, 1,  0, 0, -1, 1,  1, 0, 0, -1, -1, 1,  0, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, 1,  1, 0, 0, -1, -1, 1,  0, 0, -1, 1,  1, 0, 0,
    -1, -1, 1,  0, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, 1,  1, 0, 0,
    -1, -1, 1,  0, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, 1,  1, 0, 0, -1, -1, 1,  0, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 1, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 1, -1, 1,  1, 0, 0, -1, -1, 1,  0, 0, -1, -1, 1, 1, 1,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, -1, 1,  1, 1, -1, 1,  1, 0, 0, -1, -1, 1,  0, 0, -1, 1,  1, 0, 0,
    -1, -1, 1,  0, 0, -1, 1,  0, 0, 0, -1, 1,  0,  0, 0, -1, 1,  1, 1, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 0, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, 1,  1,  0, 0, -1, 1,  1, 0, 0, -1, -1, 1,  0, 0, -1, 1,  1, 0, 0,
    -1, -1, 1,  0, 0, -1, 1,  1, 0, 0, -1, -1, 1,  0, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, 1,  1, 0, 0,
    -1, -1, 1,  0, 0, -1, 1,  0, 0, 0, -1, 1,  0,  0, 0, -1, 1,  0, 0, 0,
    -1, 1,  0,  0, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, -1, 2,  0, 0, -2, 1,  1, 0, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 1, -2, 2,  1, 0, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, 1,  0,  0, 0, -1, 1,  0, 0, 0, -1, 1,  0,  0, 0, -1, 1,  0, 0, 0,
    -1, 1,  0,  0, 0, -1, 1,  0, 0, 0, -1, 1,  0,  0, 0, -1, 1,  0, 0, 0,
    -1, 1,  1,  0, 0, -1, 1,  1, 0, 0, -1, 1,  1,  0, 0, -1, 1,  1, 0, 0,
    -1, 1,  1,  0, 0, -1, 1,  1, 0, 0, -1, 1,  1,  0, 0, -1, 1,  1, 0, 0,
    -1, 1,  1,  0, 0, -1, 1,  1, 0, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, 1,  1,  1, 0, -1, 1,  1, 1, 0, -1, 1,  1,  1, 0, -1, 1,  1, 1, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, 1,  1,  0, 0, -1, 1,  1, 0, 0, -1, 1,  1,  0, 0, -1, 1,  1, 0, 0,
    -1, -1, 1,  1, 1, -1, -1, 1, 1, 1, -1, -1, 1,  1, 1, -1, -1, 1, 1, 1,
    -1, -1, 1,  1, 1, -1, -1, 1, 1, 1, -1, -1, 1,  1, 1, -1, -1, 1, 1, 1,
    -1, 1,  1,  1, 0, -1, 1,  1, 1, 0, -1, 1,  1,  1, 0, -1, 1,  1, 1, 0,
    -1, 1,  1,  0, 0, -1, -1, 1, 0, 0, -1, 1,  1,  0, 0, -1, -1, 1, 0, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0, -1, -1, 1,  1, 0, -1, -1, 1, 1, 0,
    -1, -1, 1,  1, 0, -1, -1, 1, 1, 0};
  if (i < 1) {
    // Return max num species per reaction
    nspec = 5;
  } else {
    if (i > NUM_GAS_REACTIONS) {
      nspec = -1;
    } else {
      nspec = ns[i - 1];
      for (int j = 0; j < nspec; ++j) {
        ki[j] = kiv[(i - 1) * 5 + j] + 1;
        nu[j] = nuv[(i - 1) * 5 + j];
      }
    }
  }
}

// Returns the progress rates of each reactions
// Given P, T, and mole fractions
void
CKKFKR(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real q_f[],
  amrex::Real q_r[])
{
  amrex::Real c[143]; // temporary storage
  amrex::Real PORT =
    1e6 * P / (8.31446261815324e+07 * T); // 1e6 * P/RT so c goes to SI units

  // Compute conversion, see Eq 10
  for (int id = 0; id < 143; ++id) {
    c[id] = x[id] * PORT;
  }

  // convert to chemkin units
  progressRateFR(q_f, q_r, c, T);

  // convert to chemkin units
  for (int id = 0; id < 1178; ++id) {
    q_f[id] *= 1.0e-6;
    q_r[id] *= 1.0e-6;
  }
}

// compute the progress rate for each reaction
// USES progressRate : todo switch to GPU
void
progressRateFR(
  amrex::Real* q_f, amrex::Real* q_r, amrex::Real* sc, amrex::Real T)
{
  const amrex::Real invT = 1.0 / T;
  const amrex::Real logT = log(T);
  // compute the Gibbs free energy
  amrex::Real g_RT[143];
  gibbs(g_RT, T);

  amrex::Real sc_qss[1];
  comp_qfqr(q_f, q_r, sc, sc_qss, T, invT, logT);
}

// save atomic weights into array
void
atomicWeight(amrex::Real* awt)
{
  awt[0] = 12.011000; // C
  awt[1] = 1.008000;  // H
  awt[2] = 15.999000; // O
  awt[3] = 14.007000; // N
}

// get atomic weight for all elements
void
CKAWT(amrex::Real* awt)
{
  atomicWeight(awt);
}

// Returns the elemental composition
// of the speciesi (mdim is num of elements)
void
CKNCF(int* ncf)
{
  int kd = 4;
  // Zero ncf
  for (int id = 0; id < kd * 143; ++id) {
    ncf[id] = 0;
  }

  // H
  ncf[0 * kd + 1] = 1; // H

  // H2
  ncf[1 * kd + 1] = 2; // H

  // O
  ncf[2 * kd + 2] = 1; // O

  // O2
  ncf[3 * kd + 2] = 2; // O

  // OH
  ncf[4 * kd + 1] = 1; // H
  ncf[4 * kd + 2] = 1; // O

  // H2O
  ncf[5 * kd + 1] = 2; // H
  ncf[5 * kd + 2] = 1; // O

  // HO2
  ncf[6 * kd + 1] = 1; // H
  ncf[6 * kd + 2] = 2; // O

  // H2O2
  ncf[7 * kd + 1] = 2; // H
  ncf[7 * kd + 2] = 2; // O

  // CO
  ncf[8 * kd + 0] = 1; // C
  ncf[8 * kd + 2] = 1; // O

  // CO2
  ncf[9 * kd + 0] = 1; // C
  ncf[9 * kd + 2] = 2; // O

  // CH2O
  ncf[10 * kd + 0] = 1; // C
  ncf[10 * kd + 1] = 2; // H
  ncf[10 * kd + 2] = 1; // O

  // HCO
  ncf[11 * kd + 0] = 1; // C
  ncf[11 * kd + 1] = 1; // H
  ncf[11 * kd + 2] = 1; // O

  // HO2CHO
  ncf[12 * kd + 0] = 1; // C
  ncf[12 * kd + 1] = 2; // H
  ncf[12 * kd + 2] = 3; // O

  // O2CHO
  ncf[13 * kd + 0] = 1; // C
  ncf[13 * kd + 1] = 1; // H
  ncf[13 * kd + 2] = 3; // O

  // OCHO
  ncf[14 * kd + 0] = 1; // C
  ncf[14 * kd + 1] = 1; // H
  ncf[14 * kd + 2] = 2; // O

  // CH2OH
  ncf[15 * kd + 0] = 1; // C
  ncf[15 * kd + 1] = 3; // H
  ncf[15 * kd + 2] = 1; // O

  // CH3O
  ncf[16 * kd + 0] = 1; // C
  ncf[16 * kd + 1] = 3; // H
  ncf[16 * kd + 2] = 1; // O

  // CH3O2H
  ncf[17 * kd + 0] = 1; // C
  ncf[17 * kd + 1] = 4; // H
  ncf[17 * kd + 2] = 2; // O

  // CH3O2
  ncf[18 * kd + 0] = 1; // C
  ncf[18 * kd + 1] = 3; // H
  ncf[18 * kd + 2] = 2; // O

  // CH4
  ncf[19 * kd + 0] = 1; // C
  ncf[19 * kd + 1] = 4; // H

  // CH3
  ncf[20 * kd + 0] = 1; // C
  ncf[20 * kd + 1] = 3; // H

  // CH2
  ncf[21 * kd + 0] = 1; // C
  ncf[21 * kd + 1] = 2; // H

  // CH2(S)
  ncf[22 * kd + 0] = 1; // C
  ncf[22 * kd + 1] = 2; // H

  // C2H6
  ncf[23 * kd + 0] = 2; // C
  ncf[23 * kd + 1] = 6; // H

  // C2H5
  ncf[24 * kd + 0] = 2; // C
  ncf[24 * kd + 1] = 5; // H

  // C2H4
  ncf[25 * kd + 0] = 2; // C
  ncf[25 * kd + 1] = 4; // H

  // C2H3
  ncf[26 * kd + 0] = 2; // C
  ncf[26 * kd + 1] = 3; // H

  // C2H2
  ncf[27 * kd + 0] = 2; // C
  ncf[27 * kd + 1] = 2; // H

  // CH3CHO
  ncf[28 * kd + 0] = 2; // C
  ncf[28 * kd + 1] = 4; // H
  ncf[28 * kd + 2] = 1; // O

  // CH3CO
  ncf[29 * kd + 0] = 2; // C
  ncf[29 * kd + 1] = 3; // H
  ncf[29 * kd + 2] = 1; // O

  // CH2CO
  ncf[30 * kd + 0] = 2; // C
  ncf[30 * kd + 1] = 2; // H
  ncf[30 * kd + 2] = 1; // O

  // HCCO
  ncf[31 * kd + 0] = 2; // C
  ncf[31 * kd + 1] = 1; // H
  ncf[31 * kd + 2] = 1; // O

  // C2H5O
  ncf[32 * kd + 0] = 2; // C
  ncf[32 * kd + 1] = 5; // H
  ncf[32 * kd + 2] = 1; // O

  // C2H5O2
  ncf[33 * kd + 0] = 2; // C
  ncf[33 * kd + 1] = 5; // H
  ncf[33 * kd + 2] = 2; // O

  // C2H3O1-2
  ncf[34 * kd + 0] = 2; // C
  ncf[34 * kd + 1] = 3; // H
  ncf[34 * kd + 2] = 1; // O

  // CH3COCH3
  ncf[35 * kd + 0] = 3; // C
  ncf[35 * kd + 1] = 6; // H
  ncf[35 * kd + 2] = 1; // O

  // CH3COCH2
  ncf[36 * kd + 0] = 3; // C
  ncf[36 * kd + 1] = 5; // H
  ncf[36 * kd + 2] = 1; // O

  // C2H3CHO
  ncf[37 * kd + 0] = 3; // C
  ncf[37 * kd + 1] = 4; // H
  ncf[37 * kd + 2] = 1; // O

  // C2H3CO
  ncf[38 * kd + 0] = 3; // C
  ncf[38 * kd + 1] = 3; // H
  ncf[38 * kd + 2] = 1; // O

  // C2H5CO
  ncf[39 * kd + 0] = 3; // C
  ncf[39 * kd + 1] = 5; // H
  ncf[39 * kd + 2] = 1; // O

  // IC3H7
  ncf[40 * kd + 0] = 3; // C
  ncf[40 * kd + 1] = 7; // H

  // C3H6
  ncf[41 * kd + 0] = 3; // C
  ncf[41 * kd + 1] = 6; // H

  // C3H5-A
  ncf[42 * kd + 0] = 3; // C
  ncf[42 * kd + 1] = 5; // H

  // C3H5-S
  ncf[43 * kd + 0] = 3; // C
  ncf[43 * kd + 1] = 5; // H

  // C3H5-T
  ncf[44 * kd + 0] = 3; // C
  ncf[44 * kd + 1] = 5; // H

  // C3H4-P
  ncf[45 * kd + 0] = 3; // C
  ncf[45 * kd + 1] = 4; // H

  // C3H4-A
  ncf[46 * kd + 0] = 3; // C
  ncf[46 * kd + 1] = 4; // H

  // C3H3
  ncf[47 * kd + 0] = 3; // C
  ncf[47 * kd + 1] = 3; // H

  // C3H2
  ncf[48 * kd + 0] = 3; // C
  ncf[48 * kd + 1] = 2; // H

  // C3H5O
  ncf[49 * kd + 0] = 3; // C
  ncf[49 * kd + 1] = 5; // H
  ncf[49 * kd + 2] = 1; // O

  // C3H6OOH2-1
  ncf[50 * kd + 0] = 3; // C
  ncf[50 * kd + 1] = 7; // H
  ncf[50 * kd + 2] = 2; // O

  // C3H6OOH2-1O2
  ncf[51 * kd + 0] = 3; // C
  ncf[51 * kd + 1] = 7; // H
  ncf[51 * kd + 2] = 4; // O

  // IC3H7O2
  ncf[52 * kd + 0] = 3; // C
  ncf[52 * kd + 1] = 7; // H
  ncf[52 * kd + 2] = 2; // O

  // C3KET21
  ncf[53 * kd + 0] = 3; // C
  ncf[53 * kd + 1] = 6; // H
  ncf[53 * kd + 2] = 3; // O

  // CH3CHCO
  ncf[54 * kd + 0] = 3; // C
  ncf[54 * kd + 1] = 4; // H
  ncf[54 * kd + 2] = 1; // O

  // SC4H9
  ncf[55 * kd + 0] = 4; // C
  ncf[55 * kd + 1] = 9; // H

  // IC4H9
  ncf[56 * kd + 0] = 4; // C
  ncf[56 * kd + 1] = 9; // H

  // TC4H9
  ncf[57 * kd + 0] = 4; // C
  ncf[57 * kd + 1] = 9; // H

  // IC4H8
  ncf[58 * kd + 0] = 4; // C
  ncf[58 * kd + 1] = 8; // H

  // IC4H7
  ncf[59 * kd + 0] = 4; // C
  ncf[59 * kd + 1] = 7; // H

  // TC4H9O2
  ncf[60 * kd + 0] = 4; // C
  ncf[60 * kd + 1] = 9; // H
  ncf[60 * kd + 2] = 2; // O

  // IC4H9O2
  ncf[61 * kd + 0] = 4; // C
  ncf[61 * kd + 1] = 9; // H
  ncf[61 * kd + 2] = 2; // O

  // IC4H8O2H-I
  ncf[62 * kd + 0] = 4; // C
  ncf[62 * kd + 1] = 9; // H
  ncf[62 * kd + 2] = 2; // O

  // TC4H9O
  ncf[63 * kd + 0] = 4; // C
  ncf[63 * kd + 1] = 9; // H
  ncf[63 * kd + 2] = 1; // O

  // TC4H9O2H
  ncf[64 * kd + 0] = 4;  // C
  ncf[64 * kd + 1] = 10; // H
  ncf[64 * kd + 2] = 2;  // O

  // IC4H7O
  ncf[65 * kd + 0] = 4; // C
  ncf[65 * kd + 1] = 7; // H
  ncf[65 * kd + 2] = 1; // O

  // IC3H7CHO
  ncf[66 * kd + 0] = 4; // C
  ncf[66 * kd + 1] = 8; // H
  ncf[66 * kd + 2] = 1; // O

  // TC3H6CHO
  ncf[67 * kd + 0] = 4; // C
  ncf[67 * kd + 1] = 7; // H
  ncf[67 * kd + 2] = 1; // O

  // IC4H8OOH-IO2
  ncf[68 * kd + 0] = 4; // C
  ncf[68 * kd + 1] = 9; // H
  ncf[68 * kd + 2] = 4; // O

  // IC4KETII
  ncf[69 * kd + 0] = 4; // C
  ncf[69 * kd + 1] = 8; // H
  ncf[69 * kd + 2] = 3; // O

  // IC4H7OH
  ncf[70 * kd + 0] = 4; // C
  ncf[70 * kd + 1] = 8; // H
  ncf[70 * kd + 2] = 1; // O

  // IC4H6OH
  ncf[71 * kd + 0] = 4; // C
  ncf[71 * kd + 1] = 7; // H
  ncf[71 * kd + 2] = 1; // O

  // IC3H5CHO
  ncf[72 * kd + 0] = 4; // C
  ncf[72 * kd + 1] = 6; // H
  ncf[72 * kd + 2] = 1; // O

  // IC3H5CO
  ncf[73 * kd + 0] = 4; // C
  ncf[73 * kd + 1] = 5; // H
  ncf[73 * kd + 2] = 1; // O

  // TC3H6OCHO
  ncf[74 * kd + 0] = 4; // C
  ncf[74 * kd + 1] = 7; // H
  ncf[74 * kd + 2] = 2; // O

  // IC3H6CO
  ncf[75 * kd + 0] = 4; // C
  ncf[75 * kd + 1] = 6; // H
  ncf[75 * kd + 2] = 1; // O

  // IC4H7OOH
  ncf[76 * kd + 0] = 4; // C
  ncf[76 * kd + 1] = 8; // H
  ncf[76 * kd + 2] = 2; // O

  // TC3H6O2CHO
  ncf[77 * kd + 0] = 4; // C
  ncf[77 * kd + 1] = 7; // H
  ncf[77 * kd + 2] = 3; // O

  // CH2CCH2OH
  ncf[78 * kd + 0] = 3; // C
  ncf[78 * kd + 1] = 5; // H
  ncf[78 * kd + 2] = 1; // O

  // BC5H11
  ncf[79 * kd + 0] = 5;  // C
  ncf[79 * kd + 1] = 11; // H

  // AC5H10
  ncf[80 * kd + 0] = 5;  // C
  ncf[80 * kd + 1] = 10; // H

  // BC5H10
  ncf[81 * kd + 0] = 5;  // C
  ncf[81 * kd + 1] = 10; // H

  // CC5H10
  ncf[82 * kd + 0] = 5;  // C
  ncf[82 * kd + 1] = 10; // H

  // AC5H9-C
  ncf[83 * kd + 0] = 5; // C
  ncf[83 * kd + 1] = 9; // H

  // CC5H9-B
  ncf[84 * kd + 0] = 5; // C
  ncf[84 * kd + 1] = 9; // H

  // AC5H9O-C
  ncf[85 * kd + 0] = 5; // C
  ncf[85 * kd + 1] = 9; // H
  ncf[85 * kd + 2] = 1; // O

  // CC5H9O-B
  ncf[86 * kd + 0] = 5; // C
  ncf[86 * kd + 1] = 9; // H
  ncf[86 * kd + 2] = 1; // O

  // CH3CHCHO
  ncf[87 * kd + 0] = 3; // C
  ncf[87 * kd + 1] = 5; // H
  ncf[87 * kd + 2] = 1; // O

  // BC6H12
  ncf[88 * kd + 0] = 6;  // C
  ncf[88 * kd + 1] = 12; // H

  // CC6H12
  ncf[89 * kd + 0] = 6;  // C
  ncf[89 * kd + 1] = 12; // H

  // C5H10-2
  ncf[90 * kd + 0] = 5;  // C
  ncf[90 * kd + 1] = 10; // H

  // IC4H7-I1
  ncf[91 * kd + 0] = 4; // C
  ncf[91 * kd + 1] = 7; // H

  // YC7H15
  ncf[92 * kd + 0] = 7;  // C
  ncf[92 * kd + 1] = 15; // H

  // XC7H14
  ncf[93 * kd + 0] = 7;  // C
  ncf[93 * kd + 1] = 14; // H

  // YC7H14
  ncf[94 * kd + 0] = 7;  // C
  ncf[94 * kd + 1] = 14; // H

  // XC7H13-Z
  ncf[95 * kd + 0] = 7;  // C
  ncf[95 * kd + 1] = 13; // H

  // YC7H13-Y2
  ncf[96 * kd + 0] = 7;  // C
  ncf[96 * kd + 1] = 13; // H

  // YC7H13O-Y2
  ncf[97 * kd + 0] = 7;  // C
  ncf[97 * kd + 1] = 13; // H
  ncf[97 * kd + 2] = 1;  // O

  // YC7H15O2
  ncf[98 * kd + 0] = 7;  // C
  ncf[98 * kd + 1] = 15; // H
  ncf[98 * kd + 2] = 2;  // O

  // ACC6H10
  ncf[99 * kd + 0] = 6;  // C
  ncf[99 * kd + 1] = 10; // H

  // ACC6H9-A
  ncf[100 * kd + 0] = 6; // C
  ncf[100 * kd + 1] = 9; // H

  // ACC6H9-D
  ncf[101 * kd + 0] = 6; // C
  ncf[101 * kd + 1] = 9; // H

  // NEOC5H11
  ncf[102 * kd + 0] = 5;  // C
  ncf[102 * kd + 1] = 11; // H

  // NEOC5H11O2
  ncf[103 * kd + 0] = 5;  // C
  ncf[103 * kd + 1] = 11; // H
  ncf[103 * kd + 2] = 2;  // O

  // NEOC5H10OOH
  ncf[104 * kd + 0] = 5;  // C
  ncf[104 * kd + 1] = 11; // H
  ncf[104 * kd + 2] = 2;  // O

  // TC4H9CHO
  ncf[105 * kd + 0] = 5;  // C
  ncf[105 * kd + 1] = 10; // H
  ncf[105 * kd + 2] = 1;  // O

  // TC4H9CO
  ncf[106 * kd + 0] = 5; // C
  ncf[106 * kd + 1] = 9; // H
  ncf[106 * kd + 2] = 1; // O

  // IC8H18
  ncf[107 * kd + 0] = 8;  // C
  ncf[107 * kd + 1] = 18; // H

  // AC8H17
  ncf[108 * kd + 0] = 8;  // C
  ncf[108 * kd + 1] = 17; // H

  // BC8H17
  ncf[109 * kd + 0] = 8;  // C
  ncf[109 * kd + 1] = 17; // H

  // CC8H17
  ncf[110 * kd + 0] = 8;  // C
  ncf[110 * kd + 1] = 17; // H

  // DC8H17
  ncf[111 * kd + 0] = 8;  // C
  ncf[111 * kd + 1] = 17; // H

  // IC8H16
  ncf[112 * kd + 0] = 8;  // C
  ncf[112 * kd + 1] = 16; // H

  // JC8H16
  ncf[113 * kd + 0] = 8;  // C
  ncf[113 * kd + 1] = 16; // H

  // AC8H17O2
  ncf[114 * kd + 0] = 8;  // C
  ncf[114 * kd + 1] = 17; // H
  ncf[114 * kd + 2] = 2;  // O

  // BC8H17O2
  ncf[115 * kd + 0] = 8;  // C
  ncf[115 * kd + 1] = 17; // H
  ncf[115 * kd + 2] = 2;  // O

  // CC8H17O2
  ncf[116 * kd + 0] = 8;  // C
  ncf[116 * kd + 1] = 17; // H
  ncf[116 * kd + 2] = 2;  // O

  // DC8H17O2
  ncf[117 * kd + 0] = 8;  // C
  ncf[117 * kd + 1] = 17; // H
  ncf[117 * kd + 2] = 2;  // O

  // CC8H17O2H
  ncf[118 * kd + 0] = 8;  // C
  ncf[118 * kd + 1] = 18; // H
  ncf[118 * kd + 2] = 2;  // O

  // CC8H17O
  ncf[119 * kd + 0] = 8;  // C
  ncf[119 * kd + 1] = 17; // H
  ncf[119 * kd + 2] = 1;  // O

  // AC8H16OOH-A
  ncf[120 * kd + 0] = 8;  // C
  ncf[120 * kd + 1] = 17; // H
  ncf[120 * kd + 2] = 2;  // O

  // AC8H16OOH-B
  ncf[121 * kd + 0] = 8;  // C
  ncf[121 * kd + 1] = 17; // H
  ncf[121 * kd + 2] = 2;  // O

  // AC8H16OOH-C
  ncf[122 * kd + 0] = 8;  // C
  ncf[122 * kd + 1] = 17; // H
  ncf[122 * kd + 2] = 2;  // O

  // BC8H16OOH-A
  ncf[123 * kd + 0] = 8;  // C
  ncf[123 * kd + 1] = 17; // H
  ncf[123 * kd + 2] = 2;  // O

  // BC8H16OOH-D
  ncf[124 * kd + 0] = 8;  // C
  ncf[124 * kd + 1] = 17; // H
  ncf[124 * kd + 2] = 2;  // O

  // CC8H16OOH-A
  ncf[125 * kd + 0] = 8;  // C
  ncf[125 * kd + 1] = 17; // H
  ncf[125 * kd + 2] = 2;  // O

  // DC8H16OOH-C
  ncf[126 * kd + 0] = 8;  // C
  ncf[126 * kd + 1] = 17; // H
  ncf[126 * kd + 2] = 2;  // O

  // DC8H16OOH-B
  ncf[127 * kd + 0] = 8;  // C
  ncf[127 * kd + 1] = 17; // H
  ncf[127 * kd + 2] = 2;  // O

  // IC8ETERAB
  ncf[128 * kd + 0] = 8;  // C
  ncf[128 * kd + 1] = 16; // H
  ncf[128 * kd + 2] = 1;  // O

  // IC8ETERAC
  ncf[129 * kd + 0] = 8;  // C
  ncf[129 * kd + 1] = 16; // H
  ncf[129 * kd + 2] = 1;  // O

  // IC8ETERBD
  ncf[130 * kd + 0] = 8;  // C
  ncf[130 * kd + 1] = 16; // H
  ncf[130 * kd + 2] = 1;  // O

  // AC8H16OOH-BO2
  ncf[131 * kd + 0] = 8;  // C
  ncf[131 * kd + 1] = 17; // H
  ncf[131 * kd + 2] = 4;  // O

  // BC8H16OOH-AO2
  ncf[132 * kd + 0] = 8;  // C
  ncf[132 * kd + 1] = 17; // H
  ncf[132 * kd + 2] = 4;  // O

  // BC8H16OOH-DO2
  ncf[133 * kd + 0] = 8;  // C
  ncf[133 * kd + 1] = 17; // H
  ncf[133 * kd + 2] = 4;  // O

  // CC8H16OOH-AO2
  ncf[134 * kd + 0] = 8;  // C
  ncf[134 * kd + 1] = 17; // H
  ncf[134 * kd + 2] = 4;  // O

  // DC8H16OOH-BO2
  ncf[135 * kd + 0] = 8;  // C
  ncf[135 * kd + 1] = 17; // H
  ncf[135 * kd + 2] = 4;  // O

  // IC8KETAB
  ncf[136 * kd + 0] = 8;  // C
  ncf[136 * kd + 1] = 16; // H
  ncf[136 * kd + 2] = 3;  // O

  // IC8KETBA
  ncf[137 * kd + 0] = 8;  // C
  ncf[137 * kd + 1] = 16; // H
  ncf[137 * kd + 2] = 3;  // O

  // IC8KETBD
  ncf[138 * kd + 0] = 8;  // C
  ncf[138 * kd + 1] = 16; // H
  ncf[138 * kd + 2] = 3;  // O

  // IC8KETDB
  ncf[139 * kd + 0] = 8;  // C
  ncf[139 * kd + 1] = 16; // H
  ncf[139 * kd + 2] = 3;  // O

  // IC3H7COC3H6-T
  ncf[140 * kd + 0] = 7;  // C
  ncf[140 * kd + 1] = 13; // H
  ncf[140 * kd + 2] = 1;  // O

  // TC4H9COC2H4S
  ncf[141 * kd + 0] = 7;  // C
  ncf[141 * kd + 1] = 13; // H
  ncf[141 * kd + 2] = 1;  // O

  // N2
  ncf[142 * kd + 3] = 2; // N
}

// Returns the vector of strings of element names
void
CKSYME_STR(amrex::Vector<std::string>& ename)
{
  ename.resize(4);
  ename[0] = "C";
  ename[1] = "H";
  ename[2] = "O";
  ename[3] = "N";
}

// Returns the vector of strings of species names
void
CKSYMS_STR(amrex::Vector<std::string>& kname)
{
  kname.resize(143);
  kname[0] = "H";
  kname[1] = "H2";
  kname[2] = "O";
  kname[3] = "O2";
  kname[4] = "OH";
  kname[5] = "H2O";
  kname[6] = "HO2";
  kname[7] = "H2O2";
  kname[8] = "CO";
  kname[9] = "CO2";
  kname[10] = "CH2O";
  kname[11] = "HCO";
  kname[12] = "HO2CHO";
  kname[13] = "O2CHO";
  kname[14] = "OCHO";
  kname[15] = "CH2OH";
  kname[16] = "CH3O";
  kname[17] = "CH3O2H";
  kname[18] = "CH3O2";
  kname[19] = "CH4";
  kname[20] = "CH3";
  kname[21] = "CH2";
  kname[22] = "CH2(S)";
  kname[23] = "C2H6";
  kname[24] = "C2H5";
  kname[25] = "C2H4";
  kname[26] = "C2H3";
  kname[27] = "C2H2";
  kname[28] = "CH3CHO";
  kname[29] = "CH3CO";
  kname[30] = "CH2CO";
  kname[31] = "HCCO";
  kname[32] = "C2H5O";
  kname[33] = "C2H5O2";
  kname[34] = "C2H3O1-2";
  kname[35] = "CH3COCH3";
  kname[36] = "CH3COCH2";
  kname[37] = "C2H3CHO";
  kname[38] = "C2H3CO";
  kname[39] = "C2H5CO";
  kname[40] = "IC3H7";
  kname[41] = "C3H6";
  kname[42] = "C3H5-A";
  kname[43] = "C3H5-S";
  kname[44] = "C3H5-T";
  kname[45] = "C3H4-P";
  kname[46] = "C3H4-A";
  kname[47] = "C3H3";
  kname[48] = "C3H2";
  kname[49] = "C3H5O";
  kname[50] = "C3H6OOH2-1";
  kname[51] = "C3H6OOH2-1O2";
  kname[52] = "IC3H7O2";
  kname[53] = "C3KET21";
  kname[54] = "CH3CHCO";
  kname[55] = "SC4H9";
  kname[56] = "IC4H9";
  kname[57] = "TC4H9";
  kname[58] = "IC4H8";
  kname[59] = "IC4H7";
  kname[60] = "TC4H9O2";
  kname[61] = "IC4H9O2";
  kname[62] = "IC4H8O2H-I";
  kname[63] = "TC4H9O";
  kname[64] = "TC4H9O2H";
  kname[65] = "IC4H7O";
  kname[66] = "IC3H7CHO";
  kname[67] = "TC3H6CHO";
  kname[68] = "IC4H8OOH-IO2";
  kname[69] = "IC4KETII";
  kname[70] = "IC4H7OH";
  kname[71] = "IC4H6OH";
  kname[72] = "IC3H5CHO";
  kname[73] = "IC3H5CO";
  kname[74] = "TC3H6OCHO";
  kname[75] = "IC3H6CO";
  kname[76] = "IC4H7OOH";
  kname[77] = "TC3H6O2CHO";
  kname[78] = "CH2CCH2OH";
  kname[79] = "BC5H11";
  kname[80] = "AC5H10";
  kname[81] = "BC5H10";
  kname[82] = "CC5H10";
  kname[83] = "AC5H9-C";
  kname[84] = "CC5H9-B";
  kname[85] = "AC5H9O-C";
  kname[86] = "CC5H9O-B";
  kname[87] = "CH3CHCHO";
  kname[88] = "BC6H12";
  kname[89] = "CC6H12";
  kname[90] = "C5H10-2";
  kname[91] = "IC4H7-I1";
  kname[92] = "YC7H15";
  kname[93] = "XC7H14";
  kname[94] = "YC7H14";
  kname[95] = "XC7H13-Z";
  kname[96] = "YC7H13-Y2";
  kname[97] = "YC7H13O-Y2";
  kname[98] = "YC7H15O2";
  kname[99] = "ACC6H10";
  kname[100] = "ACC6H9-A";
  kname[101] = "ACC6H9-D";
  kname[102] = "NEOC5H11";
  kname[103] = "NEOC5H11O2";
  kname[104] = "NEOC5H10OOH";
  kname[105] = "TC4H9CHO";
  kname[106] = "TC4H9CO";
  kname[107] = "IC8H18";
  kname[108] = "AC8H17";
  kname[109] = "BC8H17";
  kname[110] = "CC8H17";
  kname[111] = "DC8H17";
  kname[112] = "IC8H16";
  kname[113] = "JC8H16";
  kname[114] = "AC8H17O2";
  kname[115] = "BC8H17O2";
  kname[116] = "CC8H17O2";
  kname[117] = "DC8H17O2";
  kname[118] = "CC8H17O2H";
  kname[119] = "CC8H17O";
  kname[120] = "AC8H16OOH-A";
  kname[121] = "AC8H16OOH-B";
  kname[122] = "AC8H16OOH-C";
  kname[123] = "BC8H16OOH-A";
  kname[124] = "BC8H16OOH-D";
  kname[125] = "CC8H16OOH-A";
  kname[126] = "DC8H16OOH-C";
  kname[127] = "DC8H16OOH-B";
  kname[128] = "IC8ETERAB";
  kname[129] = "IC8ETERAC";
  kname[130] = "IC8ETERBD";
  kname[131] = "AC8H16OOH-BO2";
  kname[132] = "BC8H16OOH-AO2";
  kname[133] = "BC8H16OOH-DO2";
  kname[134] = "CC8H16OOH-AO2";
  kname[135] = "DC8H16OOH-BO2";
  kname[136] = "IC8KETAB";
  kname[137] = "IC8KETBA";
  kname[138] = "IC8KETBD";
  kname[139] = "IC8KETDB";
  kname[140] = "IC3H7COC3H6-T";
  kname[141] = "TC4H9COC2H4S";
  kname[142] = "N2";
}

// compute the sparsity pattern of the chemistry Jacobian
void
SPARSITY_INFO(int* nJdata, const int* consP, int NCELLS)
{
  amrex::GpuArray<amrex::Real, 20736> Jac = {0.0};
  amrex::GpuArray<amrex::Real, 143> conc = {0.0};
  for (int n = 0; n < 143; n++) {
    conc[n] = 1.0 / 143.000000;
  }
  aJacobian(Jac.data(), conc.data(), 1500.0, *consP);

  int nJdata_tmp = 0;
  for (int k = 0; k < 144; k++) {
    for (int l = 0; l < 144; l++) {
      if (Jac[144 * k + l] != 0.0) {
        nJdata_tmp = nJdata_tmp + 1;
      }
    }
  }

  *nJdata = NCELLS * nJdata_tmp;
}

// compute the sparsity pattern of the system Jacobian
void
SPARSITY_INFO_SYST(int* nJdata, const int* consP, int NCELLS)
{
  amrex::GpuArray<amrex::Real, 20736> Jac = {0.0};
  amrex::GpuArray<amrex::Real, 143> conc = {0.0};
  for (int n = 0; n < 143; n++) {
    conc[n] = 1.0 / 143.000000;
  }
  aJacobian(Jac.data(), conc.data(), 1500.0, *consP);

  int nJdata_tmp = 0;
  for (int k = 0; k < 144; k++) {
    for (int l = 0; l < 144; l++) {
      if (k == l) {
        nJdata_tmp = nJdata_tmp + 1;
      } else {
        if (Jac[144 * k + l] != 0.0) {
          nJdata_tmp = nJdata_tmp + 1;
        }
      }
    }
  }

  *nJdata = NCELLS * nJdata_tmp;
}

// compute the sparsity pattern of the simplified (for preconditioning) system
// Jacobian
void
SPARSITY_INFO_SYST_SIMPLIFIED(int* nJdata, const int* consP)
{
  amrex::GpuArray<amrex::Real, 20736> Jac = {0.0};
  amrex::GpuArray<amrex::Real, 143> conc = {0.0};
  for (int n = 0; n < 143; n++) {
    conc[n] = 1.0 / 143.000000;
  }
  aJacobian_precond(Jac.data(), conc.data(), 1500.0, *consP);

  int nJdata_tmp = 0;
  for (int k = 0; k < 144; k++) {
    for (int l = 0; l < 144; l++) {
      if (k == l) {
        nJdata_tmp = nJdata_tmp + 1;
      } else {
        if (Jac[144 * k + l] != 0.0) {
          nJdata_tmp = nJdata_tmp + 1;
        }
      }
    }
  }

  nJdata[0] = nJdata_tmp;
}

// compute the sparsity pattern of the chemistry Jacobian in CSC format -- base
// 0
void
SPARSITY_PREPROC_CSC(int* rowVals, int* colPtrs, const int* consP, int NCELLS)
{
  amrex::GpuArray<amrex::Real, 20736> Jac = {0.0};
  amrex::GpuArray<amrex::Real, 143> conc = {0.0};
  for (int n = 0; n < 143; n++) {
    conc[n] = 1.0 / 143.000000;
  }
  aJacobian(Jac.data(), conc.data(), 1500.0, *consP);

  colPtrs[0] = 0;
  int nJdata_tmp = 0;
  for (int nc = 0; nc < NCELLS; nc++) {
    int offset_row = nc * 144;
    int offset_col = nc * 144;
    for (int k = 0; k < 144; k++) {
      for (int l = 0; l < 144; l++) {
        if (Jac[144 * k + l] != 0.0) {
          rowVals[nJdata_tmp] = l + offset_row;
          nJdata_tmp = nJdata_tmp + 1;
        }
      }
      colPtrs[offset_col + (k + 1)] = nJdata_tmp;
    }
  }
}

// compute the sparsity pattern of the chemistry Jacobian in CSR format -- base
// 0
void
SPARSITY_PREPROC_CSR(
  int* colVals, int* rowPtrs, const int* consP, int NCELLS, int base)
{
  amrex::GpuArray<amrex::Real, 20736> Jac = {0.0};
  amrex::GpuArray<amrex::Real, 143> conc = {0.0};
  for (int n = 0; n < 143; n++) {
    conc[n] = 1.0 / 143.000000;
  }
  aJacobian(Jac.data(), conc.data(), 1500.0, *consP);

  if (base == 1) {
    rowPtrs[0] = 1;
    int nJdata_tmp = 1;
    for (int nc = 0; nc < NCELLS; nc++) {
      int offset = nc * 144;
      for (int l = 0; l < 144; l++) {
        for (int k = 0; k < 144; k++) {
          if (Jac[144 * k + l] != 0.0) {
            colVals[nJdata_tmp - 1] = k + 1 + offset;
            nJdata_tmp = nJdata_tmp + 1;
          }
        }
        rowPtrs[offset + (l + 1)] = nJdata_tmp;
      }
    }
  } else {
    rowPtrs[0] = 0;
    int nJdata_tmp = 0;
    for (int nc = 0; nc < NCELLS; nc++) {
      int offset = nc * 144;
      for (int l = 0; l < 144; l++) {
        for (int k = 0; k < 144; k++) {
          if (Jac[144 * k + l] != 0.0) {
            colVals[nJdata_tmp] = k + offset;
            nJdata_tmp = nJdata_tmp + 1;
          }
        }
        rowPtrs[offset + (l + 1)] = nJdata_tmp;
      }
    }
  }
}

// compute the sparsity pattern of the system Jacobian
// CSR format BASE is user choice
void
SPARSITY_PREPROC_SYST_CSR(
  int* colVals, int* rowPtr, const int* consP, int NCELLS, int base)
{
  amrex::GpuArray<amrex::Real, 20736> Jac = {0.0};
  amrex::GpuArray<amrex::Real, 143> conc = {0.0};
  for (int n = 0; n < 143; n++) {
    conc[n] = 1.0 / 143.000000;
  }
  aJacobian(Jac.data(), conc.data(), 1500.0, *consP);

  if (base == 1) {
    rowPtr[0] = 1;
    int nJdata_tmp = 1;
    for (int nc = 0; nc < NCELLS; nc++) {
      int offset = nc * 144;
      for (int l = 0; l < 144; l++) {
        for (int k = 0; k < 144; k++) {
          if (k == l) {
            colVals[nJdata_tmp - 1] = l + 1 + offset;
            nJdata_tmp = nJdata_tmp + 1;
          } else {
            if (Jac[144 * k + l] != 0.0) {
              colVals[nJdata_tmp - 1] = k + 1 + offset;
              nJdata_tmp = nJdata_tmp + 1;
            }
          }
        }
        rowPtr[offset + (l + 1)] = nJdata_tmp;
      }
    }
  } else {
    rowPtr[0] = 0;
    int nJdata_tmp = 0;
    for (int nc = 0; nc < NCELLS; nc++) {
      int offset = nc * 144;
      for (int l = 0; l < 144; l++) {
        for (int k = 0; k < 144; k++) {
          if (k == l) {
            colVals[nJdata_tmp] = l + offset;
            nJdata_tmp = nJdata_tmp + 1;
          } else {
            if (Jac[144 * k + l] != 0.0) {
              colVals[nJdata_tmp] = k + offset;
              nJdata_tmp = nJdata_tmp + 1;
            }
          }
        }
        rowPtr[offset + (l + 1)] = nJdata_tmp;
      }
    }
  }
}

// compute the sparsity pattern of the simplified (for precond) system Jacobian
// on CPU BASE 0
void
SPARSITY_PREPROC_SYST_SIMPLIFIED_CSC(
  int* rowVals, int* colPtrs, int* indx, const int* consP)
{
  amrex::GpuArray<amrex::Real, 20736> Jac = {0.0};
  amrex::GpuArray<amrex::Real, 143> conc = {0.0};
  for (int n = 0; n < 143; n++) {
    conc[n] = 1.0 / 143.000000;
  }
  aJacobian_precond(Jac.data(), conc.data(), 1500.0, *consP);

  colPtrs[0] = 0;
  int nJdata_tmp = 0;
  for (int k = 0; k < 144; k++) {
    for (int l = 0; l < 144; l++) {
      if (k == l) {
        rowVals[nJdata_tmp] = l;
        indx[nJdata_tmp] = 144 * k + l;
        nJdata_tmp = nJdata_tmp + 1;
      } else {
        if (Jac[144 * k + l] != 0.0) {
          rowVals[nJdata_tmp] = l;
          indx[nJdata_tmp] = 144 * k + l;
          nJdata_tmp = nJdata_tmp + 1;
        }
      }
    }
    colPtrs[k + 1] = nJdata_tmp;
  }
}

// compute the sparsity pattern of the simplified (for precond) system Jacobian
// CSR format BASE is under choice
void
SPARSITY_PREPROC_SYST_SIMPLIFIED_CSR(
  int* colVals, int* rowPtr, const int* consP, int base)
{
  amrex::GpuArray<amrex::Real, 20736> Jac = {0.0};
  amrex::GpuArray<amrex::Real, 143> conc = {0.0};
  for (int n = 0; n < 143; n++) {
    conc[n] = 1.0 / 143.000000;
  }
  aJacobian_precond(Jac.data(), conc.data(), 1500.0, *consP);

  if (base == 1) {
    rowPtr[0] = 1;
    int nJdata_tmp = 1;
    for (int l = 0; l < 144; l++) {
      for (int k = 0; k < 144; k++) {
        if (k == l) {
          colVals[nJdata_tmp - 1] = l + 1;
          nJdata_tmp = nJdata_tmp + 1;
        } else {
          if (Jac[144 * k + l] != 0.0) {
            colVals[nJdata_tmp - 1] = k + 1;
            nJdata_tmp = nJdata_tmp + 1;
          }
        }
      }
      rowPtr[l + 1] = nJdata_tmp;
    }
  } else {
    rowPtr[0] = 0;
    int nJdata_tmp = 0;
    for (int l = 0; l < 144; l++) {
      for (int k = 0; k < 144; k++) {
        if (k == l) {
          colVals[nJdata_tmp] = l;
          nJdata_tmp = nJdata_tmp + 1;
        } else {
          if (Jac[144 * k + l] != 0.0) {
            colVals[nJdata_tmp] = k;
            nJdata_tmp = nJdata_tmp + 1;
          }
        }
      }
      rowPtr[l + 1] = nJdata_tmp;
    }
  }
}

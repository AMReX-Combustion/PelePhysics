PELE_HOME         ?= ../../../..
PELE_PHYSICS_HOME ?= $(abspath $(lastword $(PELE_HOME)/Submodules/PelePhysics))
AMREX_HOME        ?= $(abspath $(lastword $(PELE_PHYSICS_HOME)/Submodules/amrex))
SUNDIALS_HOME     ?= $(abspath $(lastword $(PELE_PHYSICS_HOME)/Submodules/sundials))

EOS_HOME          ?= $(PELE_PHYSICS_HOME)/Source/Eos
REACTIONS_HOME    ?= $(PELE_PHYSICS_HOME)/Source/Reactions
TRAN_HOME         ?= $(PELE_PHYSICS_HOME)/Source/Transport
UTILITY_HOME      ?= $(PELE_PHYSICS_HOME)/Source/Utility

EBASE = Pele
BL_NO_FORT = TRUE
USE_SUNDIALS = TRUE
VERBOSE = TRUE

# EXTERN_CORE is simply a list of the directories we use in Eos, Reactions, Transport and Util
# this list will be searched for runtime parameters
EXTERN_CORE ?=

include $(AMREX_HOME)/Tools/GNUMake/Make.defs

include $(PELE_PHYSICS_HOME)/ThirdParty/Make.ThirdParty

# PeleC uses a coarse grained OMP approach
DEFINES += -DCRSEGRNDOMP

ifeq ($(USE_ACC), TRUE)
  DEFINES += -DACC
endif

# PelePhysics
PP_SRC_HOME = $(PELE_PHYSICS_HOME)/Source
EXTERN_CORE       += $(PP_SRC_HOME)
INCLUDE_LOCATIONS += $(PP_SRC_HOME)
VPATH_LOCATIONS   += $(PP_SRC_HOME)
Bpack             += $(PP_SRC_HOME)/Make.package
Blocs             += $(PP_SRC_HOME)

ifeq ($(PELE_COMPILE_AJACOBIAN), TRUE)
  DEFINES += -DPELE_COMPILE_AJACOBIAN
endif
ifeq ($(PELE_CVODE_FORCE_YCORDER), TRUE)
  DEFINES += -DPELE_CVODE_FORCE_YCORDER
endif

# EOS
# Both Fortran and cpp can be loaded for EOS
ifeq ($(Eos_Model),$(filter $(Eos_Model),GammaLaw))
   DEFINES += -DUSE_GAMMALAW_EOS
endif
ifeq ($(Eos_Model),$(filter $(Eos_Model),Fuego))
   DEFINES += -DUSE_FUEGO_EOS
endif
ifeq ($(Eos_Model),$(filter $(Eos_Model),Soave-Redlich-Kwong))
   DEFINES += -DUSE_SRK_EOS
endif
ifeq ($(Eos_Model),$(filter $(Eos_Model),Manifold))
   DEFINES += -DUSE_MANIFOLD_EOS
   DEFINES += -DMANIFOLD_DIM=$(Manifold_Dim)
endif

TORCH_LIBPATH = $(LIBTORCH_HOME)/lib

ifeq ($(USE_CUDA),TRUE)
  TORCH_LIBS = -ltorch -ltorch_cpu -lc10 -lc10_cuda -lcuda
else
  TORCH_LIBS = -ltorch -ltorch_cpu -lc10
endif

ifeq ($(USE_LIBTORCH), TRUE)
  DEFINES += -DUSE_LIBTORCH
	INCLUDE_LOCATIONS += $(LIBTORCH_HOME)/include $(LIBTORCH_HOME)/include/torch/csrc/api/include
	LIBRARY_LOCATIONS += $(TORCH_LIBPATH)
	LDFLAGS += -Wl,-rpath $(TORCH_LIBPATH) $(TORCH_LIBS)
endif

INCLUDE_LOCATIONS += $(EOS_HOME)
VPATH_LOCATIONS   += $(EOS_HOME)
ifeq ($(Eos_Model), Fuego)
  TRANSPORT_TYPE := IDEAL_GAS
else
  ifeq ($(Eos_Model), GammaLaw)
    TRANSPORT_TYPE := IDEAL_GAS
  else
    TRANSPORT_TYPE := REAL_GAS
  endif
endif
Bpack             += $(EOS_HOME)/Make.package
Blocs             += $(EOS_HOME)

# Reactions
include $(REACTIONS_HOME)/Make.package
INCLUDE_LOCATIONS += $(REACTIONS_HOME)
VPATH_LOCATIONS   += $(REACTIONS_HOME)
ifeq ($(Eos_Model), GammaLaw)
  ifneq ($(Chemistry_Model), Null)
    $(error Chemistry_Model definition not compatible with Eos_Model=GammaLaw)
  endif
endif
CHEM_HOME = $(PELE_PHYSICS_HOME)/Mechanisms/$(Chemistry_Model)
CHEM_ALL  = $(PELE_PHYSICS_HOME)/Mechanisms
VPATH_LOCATIONS += $(CHEM_HOME) $(CHEM_ALL)
Bpack += $(CHEM_HOME)/Make.package \
         $(CHEM_ALL)/Make.package
Blocs += $(CHEM_HOME) $(CHEM_ALL)

# Transport
include $(TRAN_HOME)/Make.package
INCLUDE_LOCATIONS += $(TRAN_HOME)
VPATH_LOCATIONS   += $(TRAN_HOME)
USE_FUEGO = FALSE

ifeq ($(Transport_Model), Simple)
  DEFINES += -DUSE_SIMPLE_TRANSPORT
endif
ifeq ($(Transport_Model), EGLib)
  DEFINES += -DEGLIB_TRANSPORT
  USE_FUEGO = TRUE
endif
ifeq ($(Transport_Model), Constant)
  DEFINES += -DUSE_CONSTANT_TRANSPORT
endif
ifeq ($(Transport_Model), Sutherland)
  DEFINES += -DUSE_SUTHERLAND_TRANSPORT
endif
ifeq ($(Transport_Model), Manifold)
  DEFINES += -DUSE_MANIFOLD_TRANSPORT
endif

# Utilities
INCLUDE_LOCATIONS += $(UTILITY_HOME)
VPATH_LOCATIONS   += $(UTILITY_HOME)
include $(UTILITY_HOME)/Diagnostics/Make.package
include $(UTILITY_HOME)/Filter/Make.package
include $(UTILITY_HOME)/PMF/Make.package
include $(UTILITY_HOME)/PltFileManager/Make.package
include $(UTILITY_HOME)/TurbInflow/Make.package
include $(UTILITY_HOME)/BlackBoxFunc/Make.package

Pdirs   := Base Boundary AmrCore

Bpack	+= $(foreach dir, $(Pdirs), $(AMREX_HOME)/Src/$(dir)/Make.package)
Blocs	+= $(foreach dir, $(Pdirs), $(AMREX_HOME)/Src/$(dir))

include $(Bpack)

INCLUDE_LOCATIONS += $(Blocs)
VPATH_LOCATIONS   += $(Blocs)

EXTERN_PARAMETERS := $(shell $(AMREX_HOME)/Tools/F_scripts/findparams.py $(EXTERN_CORE))

# job_info support
CEXE_sources += AMReX_buildInfo.cpp
CEXE_headers += $(AMREX_HOME)/Tools/C_scripts/buildInfo.H
INCLUDE_LOCATIONS +=  $(AMREX_HOME)/Tools/C_scripts

MNAMES := EOS=$(EOS_PATH) REACTIONS=$(REACTIONS_PATH)
MNAMES += TRANSPORT=$(TRAN_HOME)
MNAMES += CHEMISTRY=$(Chemistry_Model)

ifeq ($(shell uname),Darwin)
  all: $(executable)
	install_name_tool -add_rpath $(PELE_PHYSICS_HOME)/ThirdParty/INSTALL/$(configSpecificTPSuffix)/lib $(executable)
	$(SILENT) $(RM) AMReX_buildInfo.cpp
	@echo SUCCESS
else
  all: $(executable)
	$(SILENT) $(RM) AMReX_buildInfo.cpp
	@echo SUCCESS
endif

include $(AMREX_HOME)/Tools/GNUMake/Make.rules

ifeq ($(USE_CUDA),TRUE)
   CXXFLAGS+=-Xptxas --disable-optimizer-constants
endif

clean::
	$(SILENT) $(RM) AMReX_buildInfo.cpp

AMReX_buildInfo.cpp:
	$(AMREX_HOME)/Tools/C_scripts/makebuildinfo_C.py \
          --amrex_home "$(AMREX_HOME)" \
          --COMP "$(COMP)" --COMP_VERSION "$(COMP_VERSION)" \
          --FCOMP "$(FCOMP)" --FCOMP_VERSION "$(FCOMP_VERSION)" \
          --MODULES "$(MNAMES)" \
          --GIT "$(PELE_PHYSICS_HOME) $(AMREX_HOME) $(SUNDIALS_HOME)"

TPL:
	@echo "==> Building SUNDIALS library"
	@cd $(PELE_PHYSICS_HOME)/ThirdParty; $(MAKE) sundials SUNDIALS_HOME=$(SUNDIALS_HOME) AMREX_HOME=$(AMREX_HOME) USE_SYCL=$(USE_SYCL) USE_HIP=$(USE_HIP) USE_CUDA=$(USE_CUDA) PELE_USE_KLU=$(PELE_USE_KLU) PELE_USE_MAGMA=$(PELE_USE_MAGMA) DEBUG=$(DEBUG) COMP=$(HOSTCC) NVCC=$(COMP) CUDA_ARCH=$(CUDA_ARCH) PRECISION=$(PRECISION)

TPLclean:
	@echo "==> Removing SUNDIALS library"
	@cd $(PELE_PHYSICS_HOME)/ThirdParty; $(MAKE) SUNDIALS_HOME=$(SUNDIALS_HOME) AMREX_HOME=$(AMREX_HOME) USE_SYCL=$(USE_SYCL) USE_HIP=$(USE_HIP) USE_CUDA=$(USE_CUDA) PELE_USE_KLU=$(PELE_USE_KLU) PELE_USE_MAGMA=$(PELE_USE_MAGMA) DEBUG=$(DEBUG) COMP=$(HOSTCC) NVCC=$(COMP) CUDA_ARCH=$(CUDA_ARCH) PRECISION=$(PRECISION) clean

TPLrealclean:
	@echo "==> Removing SUNDIALS library"
	@cd $(PELE_PHYSICS_HOME)/ThirdParty; $(MAKE) SUNDIALS_HOME=$(SUNDIALS_HOME) AMREX_HOME=$(AMREX_HOME) USE_SYCL=$(USE_SYCL) USE_HIP=$(USE_HIP) USE_CUDA=$(USE_CUDA) PELE_USE_KLU=$(PELE_USE_KLU) PELE_USE_MAGMA=$(PELE_USE_MAGMA) DEBUG=$(DEBUG) COMP=$(HOSTCC) NVCC=$(COMP) CUDA_ARCH=$(CUDA_ARCH) PRECISION=$(PRECISION) realclean

#-----------------------------------------------------------------------------
# for debugging.  To see the value of a Makefile variable,
# e.g. Fmlocs, simply do "make print-Fmlocs".  This will
# print out the value.
print-%: ; @echo $* is $($*) ; $(SILENT) $(RM) buildInfo.cpp

name: PelePhysics
on:
   push:
     branches: [development]
   pull_request:
     branches: [development]

jobs:
  Formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: DoozyX/clang-format-lint-action@v0.11
        with:
          source: './Eos ./Transport ./Reactions'
          exclude: '.'
          extensions: 'H,h,cpp'
          clangFormatVersion: 11

  Pythia:
    needs: Formatting
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]
        poetry-version: [1.1.7]
    defaults:
      run:
        working-directory: ${{github.workspace}}/Support/Fuego/Pythia
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install Dependencies using Poetry
        run: poetry install
      - name: Formatting with black
        run: poetry run black --check .
      - name: Sort imports with isort
        run: poetry run isort --check-only --diff .
      - name: Run tests
        run: poetry run bash -c "cd ../Mechanism/Models/air && ./make-mechanism.sh"

  Transport-EOS-Reactions:
    needs: Formatting
    runs-on: ubuntu-latest
    strategy:
      matrix:
        - comp: [gnu, llvm]
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{github.token}}
      - name: Checkout PelePhysics
        uses: actions/checkout@v2
        with:
          path: PelePhysics-${{matrix.comp}}
      - name: Checkout AMReX
        uses: actions/checkout@v2
        with:
          repository: AMReX-Codes/amrex
          path: AMReX-${{matrix.comp}}
      - name: Set Environment Variables
        run: |
          echo "CXXFLAGS='-Werror -Wshadow -Woverloaded-virtual -Wunreachable-code'" >> $GITHUB_ENV
          echo "AMREX_HOME=${{github.workspace}}/AMReX-${{matrix.comp}}" >> $GITHUB_ENV
          echo "PELE_PHYSICS_HOME=${{github.workspace}}/PelePhysics-${{matrix.comp}}" >> $GITHUB_ENV
          echo "TRANSPORT_WORKING_DIRECTORY=${{github.workspace}}/PelePhysics-${{matrix.comp}}/Testing/Exec/TranEval" >> $GITHUB_ENV
          echo "EOS_WORKING_DIRECTORY=${{github.workspace}}/PelePhysics-${{matrix.comp}}/Testing/Exec/EosEval" >> $GITHUB_ENV
          echo "REACT_WORKING_DIRECTORY=${{github.workspace}}/PelePhysics-${{matrix.comp}}/Testing/Exec/ReactEval" >> $GITHUB_ENV
          echo "NPROCS=$(nproc)" >> $GITHUB_ENV
      - name: Build SUNDIALS
        working-directory: ${{env.TRANSPORT_WORKING_DIRECTORY}}
        run: make TPL COMP=${{matrix.comp}}
      - name: Test Transport
        working-directory: ${{env.TRANSPORT_WORKING_DIRECTORY}}
        run: |
          echo "::add-matcher::.github/problem-matchers/gcc.json"
          (for TYPE in Constant Simple Sutherland; do \
            printf "\n-------- ${TYPE} --------\n"; \
            make -j ${{env.NPROCS}} COMP=${{matrix.comp}} Transport_Model=${TYPE}; \
            ./Pele2d.${{matrix.comp}}.ex inputs.2d_${TYPE}; \
            make realclean; \
            if [ $? -ne 0 ]; then exit 1; fi \
          done)
      - name: Test EOS
        working-directory: ${{env.EOS_WORKING_DIRECTORY}}
        run: |
          echo "::add-matcher::.github/problem-matchers/gcc.json"
          (for TYPE in Fuego GammaLaw; do \
            if [ "${TYPE}" == 'Fuego' ]; then CHEMISTRY=LiDryer; else CHEMISTRY=Null; fi; \
            printf "\n-------- ${TYPE} --------\n"; \
            make -j ${{env.NPROCS}} COMP=${{matrix.comp}} Eos_Model=${TYPE} Chemistry_Model=${CHEMISTRY}; \
            ./Pele2d.${{matrix.comp}}.ex inputs.2d; \
            make realclean; \
            if [ $? -ne 0 ]; then exit 1; fi \
          done)
      - name: Test Reactions
        working-directory: ${{env.REACT_WORKING_DIRECTORY}}
        run: |
          echo "::add-matcher::.github/problem-matchers/gcc.json"
          (for TYPE in Cvode Arkode RK64; do \
            printf "\n-------- ${TYPE} --------\n"; \
            make -j ${{env.NPROCS}} COMP=${{matrix.comp}} Eos_Model=Fuego Chemistry_Model=drm19
            ./Pele3d.${{matrix.comp}}.ex inputs.3d_Array4 ode.dt=1.e-05 ode.ndt=100 chem_integrator="Reactor${TYPE}"; \
            ./Pele3d.${{matrix.comp}}.ex inputs.3d_1dArray ode.dt=1.e-05 ode.ndt=100 chem_integrator="Reactor${TYPE}"; \
            make realclean; \
            make -j ${{env.NPROCS}} COMP=${{matrix.comp}} Eos_Model=Fuego Chemistry_Model=LiDryer
            ./Pele3d.${{matrix.comp}}.ex inputs.3d_Array4 ode.dt=1.e-05 ode.ndt=100 chem_integrator="Reactor${TYPE}"; \
            ./Pele3d.${{matrix.comp}}.ex inputs.3d_1dArray ode.dt=1.e-05 ode.ndt=100 chem_integrator="Reactor${TYPE}"; \
            make realclean; \
            if [ $? -ne 0 ]; then exit 1; fi \
          done)
